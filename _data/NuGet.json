{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11233406352","Type":"PullRequestEvent","CreatedAt":"2020-01-09T01:07:18","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7770","RelatedDescription":"Merged pull request \"Build extensions targets file for build pipelines\" (#7770) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2883\r\n\r\nThis adds an optional point to insert targets file during the build."},{"Id":"11232911576","Type":"PullRequestEvent","CreatedAt":"2020-01-08T23:19:10","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7801","RelatedDescription":"Opened pull request \"Use Json.Encode to avoid js injection\" (#7801) at NuGet/NuGetGallery","RelatedBody":"All required documentation is on the following issue:\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/2911"},{"Id":"11227225000","Type":"IssuesEvent","CreatedAt":"2020-01-08T10:53:53","Actor":"lissyx","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7800","RelatedDescription":"Opened issue \"No documentation on publishing \"Documentation\" content/URL from the API\" (#7800) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nAbility to upload README content from the API is missing from the documentation ?\r\n\r\n### To Reproduce\r\nI can manually upload a version-specific documentation :\r\n1. Go to the \"Manage\" page of a package\r\n2. Unfold the \"Documentation\" part\r\n3. Put raw content or a Github link, or upload from a local file\r\n\r\n### Expected behavior\r\nWe should be able to upload at the same time we publish a package. I suspect (hope?) it's possible, but searching  the following documentations yielded nothing:\r\n - https://docs.microsoft.com/nuget/api/package-publish-resource\r\n - https://docs.microsoft.com/nuget/api/registration-base-url-resource\r\n - https://docs.microsoft.com/nuget/api/nuget-protocols\r\n\r\nI also tried by spying quickly to what is being done when manually uploading  with Devtools, but I could not yield anything really actionable API-wise.\r\n\r\n### Additional context\r\nWe are building and publishing from CI, so manually uploading is really not an option. I have seen there is expected work to make the NuGet self-contained including the README/documentation part, but so far this work has not yet started.\r\n\r\nSo, is it possible or not to perform this documentation upload step from the API ?\r\n\r\nI'm quite a newbie in regards of the NuGet world, so it's possible I am missing something obvious here. Please direct me to the proper resources if they exists !"},{"Id":"11217627640","Type":"PullRequestEvent","CreatedAt":"2020-01-07T09:40:57","Actor":"xavierdecoster","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7788","RelatedDescription":"Merged pull request \"Upgrade telemetry\" (#7788) at NuGet/NuGetGallery","RelatedBody":"Consume NuGet.Jobs and ServerCommon updates for telemetry and heartbeats."},{"Id":"11215390012","Type":"PullRequestEvent","CreatedAt":"2020-01-07T01:59:32","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7799","RelatedDescription":"Opened pull request \"Functional test script update to wait for the service to start up after the deployment\" (#7799) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2863\r\n\r\nApp service deployment reports success way before the service initialization completes successfully and is able to serve requests. This breaks our tests that encounter 502 responses and fail.\r\nThis change adds a delay and a response test to the test run script to make sure we run tests against the working service."},{"Id":"11215375430","Type":"PullRequestEvent","CreatedAt":"2020-01-07T01:55:55","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7798","RelatedDescription":"Opened pull request \"HTTP to HTTPS redirect differences between App and Cloud services\" (#7798) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2863\r\n\r\nCloud and app services handle the HTTP to HTTPS redirect differently (we can enable \"Always HTTPS\" for an app service, while we can't do that for the cloud service), so the test update is required to accommodate for that difference.\r\nThis change also requires the test configuration to be updated."},{"Id":"11215152526","Type":"PullRequestEvent","CreatedAt":"2020-01-07T01:04:07","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7797","RelatedDescription":"Merged pull request \"Merge branch 'dev' to master\" (#7797) at NuGet/NuGetGallery","RelatedBody":"Handle: https://github.com/nuget/nugetgallery/issues/7796"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11233459886","Type":"IssuesEvent","CreatedAt":"2020-01-09T01:19:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9037","RelatedDescription":"Opened issue \"NuGet.exe restore E2E tests should be run in all entry points (msbuild, whenever dotnet.exe if possible)\" (#9037) at NuGet/Home","RelatedBody":"Commandline integration tests in https://github.com/NuGet/NuGet.Client/blob/dev/test/NuGet.Clients.Tests/NuGet.CommandLine.Test/RestoreNETCoreTest.cs cover the majority of the restore functionality tests. \r\nThe NuGet.exe/MSBuild restore functionality used to be consistent, and now there's plenty of diverging code (specifically, the dg spec generation). \r\n\r\nIn general we should ensure that scenario tests like these are run cross client :)\r\n\r\nSpecial scenarios\r\nNuGet/Home#5855\r\nhttps://github.com/NuGet/NuGet.Client/pull/3109#discussion_r364023545\r\n\r\ncc @jeffkl "},{"Id":"11233451765","Type":"IssuesEvent","CreatedAt":"2020-01-09T01:17:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9036","RelatedDescription":"Opened issue \"Make the dotnet.exe functional tests runnable from Visual Studio, speed up the Dotnet.Integration.Test suite by 40%\" (#9036) at NuGet/Home","RelatedBody":""},{"Id":"11233370686","Type":"IssuesEvent","CreatedAt":"2020-01-09T00:59:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9035","RelatedDescription":"Opened issue \"Clarify the inconsistency with restore and ignoring missing imports in dotnet/msbuild/nuget.exe restore\" (#9035) at NuGet/Home","RelatedBody":"Set-up a project with a missing import. \r\n\r\nTry restoring:\r\n\r\ndotnet restore\r\n\r\n```\r\ndotnet restore F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj                                                                                                                                       Nothing to do. None of the projects specified contain packages to restore.\r\n```\r\n\r\nmsbuild restore\r\n\r\n```\r\nF:\\VSExtensibility [develop â‰¡]> msbuild /t:restore F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj\r\nMicrosoft (R) Build Engine version 16.5.0-preview-19617-05+7bcb2f961 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 1/8/2020 4:50:52 PM.\r\nProject \"F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj\" on node 1 (Restore target(s)).\r\nRestore:\r\n  Nothing to do. None of the projects specified contain packages to restore.\r\nDone Building Project \"F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj\" (Restore target(s)).\r\n\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.52\r\nF:\\VSExtensibility [develop â‰¡]>  \r\n```\r\n\r\n\r\nDefine a restore2 target with the exact same content as the restore target. \r\n`\r\n```\r\nF:\\VSExtensibility [develop â‰¡]> Invoke-NuGetCustom /t:restore2 F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj                                                                                                                     msbuild /p:NuGetRestoreTargets=F:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Build.Tasks\\NuGet.targets /p:RestoreTaskAssemblyFile=F:\\NuGet.Client\\artifacts\\NuGet.Build.Tasks\\16.0\\bin\\Debug\\net472\\NuGet.Build.Tasks.dll /p:NuGetBuildTasksPackTargets=F:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Build.Tasks.Pack\\NuGet.Build.Tasks.Pack.targets /p:ImportNuGetBuildTasksPackTargetsFromSdk=true /p:NuGetPackTaskAssemblyFile=F:\\NuGet.Client\\artifacts\\NuGet.Build.Tasks.Pack\\16.0\\bin\\Debug\\net472\\NuGet.Build.Tasks.Pack.dll /t:restore2 F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj\r\nMicrosoft (R) Build Engine version 16.5.0-preview-19617-05+7bcb2f961 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 1/8/2020 4:51:22 PM.\r\nProject \"F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj\" on node 1 (restore2 target(s)).\r\nF:\\VSExtensibility\\tools\\build\\targets\\VSExtensibility.Common.Xplat.props(18,3): error MSB4019: The imported project \"F:\\VSExtensibility\\packages\\MicroBuild.VisualStudio.2.0.54\\build\\MicroBuild.VisualStudio.props\" was not found. Confirm that the expression in the Import declaration \"F:\\VSExtensibility\\packages\\Micr\r\noBuild.VisualStudio.2.0.54\\build\\MicroBuild.VisualStudio.props\" is correct, and that the file exists on disk. [F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj]\r\nDone Building Project \"F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj\" (restore2 target(s)) -- FAILED.\r\n\r\n\r\nBuild FAILED.\r\n\r\n\"F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj\" (restore2 target) (1) ->\r\n  F:\\VSExtensibility\\tools\\build\\targets\\VSExtensibility.Common.Xplat.props(18,3): error MSB4019: The imported project \"F:\\VSExtensibility\\packages\\MicroBuild.VisualStudio.2.0.54\\build\\MicroBuild.VisualStudio.props\" was not found. Confirm that the expression in the Import declaration \"F:\\VSExtensibility\\packages\\Mi\r\ncroBuild.VisualStudio.2.0.54\\build\\MicroBuild.VisualStudio.props\" is correct, and that the file exists on disk. [F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.05\r\nF:\\VSExtensibility [develop â‰¡]>      \r\n```\r\n\r\nnuget.exe restore\r\n\r\n```\r\nF:\\VSExtensibility [develop â‰¡]> E:\\NuGetExe\\nuget-5.3.0.exe restore F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj -verbosity detailed\r\nNuGet Version: 5.3.0.6260\r\nMSBuild P2P timeout [ms]: 120000\r\nMSBuild auto-detection: using msbuild version '16.5.0.61705' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\IntPreview\\MSBuild\\Current\\Bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\IntPreview\\MSBuild\\Current\\Bin\\msbuild.exe \"C:\\Users\\nikolev.REDMOND\\AppData\\Local\\Temp\\NuGetScratch\\04eijyto.iwq.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\nikolev.REDMOND\\AppData\\Local\\Temp\\NuGetScratch\\x5btu2ag.fqf.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"E:\\NuGetExe\\nuget-5.3.0.exe\"\r\nF:\\VSExtensibility\\tools\\build\\targets\\VSExtensibility.Common.Xplat.props(18,3): error MSB4019: The imported project \"F:\\VSExtensibility\\packages\\MicroBuild.VisualStudio.2.0.54\\build\\MicroBuild.VisualStudio.props\" was not found. Confirm that the expression in the Import declaration \"F:\\VSExtensibility\\packages\\MicroBuild.VisualStudio.2.0.54\\build\\MicroBuild.VisualStudio.props\" is correct, and that the file exists on disk. [F:\\VSExtensibility\\src\\product\\vssdk\\msbuild\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0\\Microsoft.VisualStudio.Sdk.BuildTasks.16.0.csproj]\r\n\r\nNuGet.CommandLine.ExitCodeException: Exception of type 'NuGet.CommandLine.ExitCodeException' was thrown.\r\n   at NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<GetDependencyGraphSpecAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<DetermineInputsFromMSBuildAsync>d__63.MoveNext()\r\nWARNING: Error reading msbuild project information, ensure that your input solution or project file is valid. NETCore and UAP projects will be skipped, only packages.config files will be restored.\r\nRestoring NuGet package MicroBuild.2.0.54.\r\nRestoring NuGet package VS.ExternalAPIs.MSBuild.15.8.0-preview-000078.\r\nRestoring NuGet package Microsoft.VisualStudioEng.MicroBuild.Core.0.4.1.\r\nRestoring NuGet package Microsoft.VisualStudio.Setup.Common.2.5.1109-develop-ga454f805.\r\nRestoring NuGet package Newtonsoft.Json.9.0.1.\r\nRestoring NuGet package MicroBuild.VisualStudio.2.0.54.\r\nRestoring NuGet package Nerdbank.GitVersioning.2.1.17.\r\nAdding package 'MicroBuild.2.0.54' to folder 'F:\\VSExtensibility\\packages'\r\nAdding package 'Microsoft.VisualStudio.Setup.Common.2.5.1109-develop-ga454f805' to folder 'F:\\VSExtensibility\\packages'\r\nAdding package 'VS.ExternalAPIs.MSBuild.15.8.0-preview-000078' to folder 'F:\\VSExtensibility\\packages'\r\nAdding package 'Nerdbank.GitVersioning.2.1.17' to folder 'F:\\VSExtensibility\\packages'\r\nAdding package 'MicroBuild.VisualStudio.2.0.54' to folder 'F:\\VSExtensibility\\packages'\r\nAdding package 'Newtonsoft.Json.9.0.1' to folder 'F:\\VSExtensibility\\packages'\r\nAdding package 'Microsoft.VisualStudioEng.MicroBuild.Core.0.4.1' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'MicroBuild.VisualStudio.2.0.54' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'MicroBuild.VisualStudio.2.0.54' to folder 'F:\\VSExtensibility\\packages' from source 'C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\'\r\nAdded package 'MicroBuild.2.0.54' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'MicroBuild.2.0.54' to folder 'F:\\VSExtensibility\\packages' from source 'C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\'\r\nPackageSignatureVerificationLog: PackageIdentity: Nerdbank.GitVersioning.2.1.17 Source: C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\ PackageSignatureValidity: True\r\nPackageSignatureVerificationLog: PackageIdentity: Microsoft.VisualStudio.Setup.Common.2.5.1109-develop-ga454f805 Source: C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\ PackageSignatureValidity: True\r\nPackageSignatureVerificationLog: PackageIdentity: VS.ExternalAPIs.MSBuild.15.8.0-preview-000078 Source: C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\ PackageSignatureValidity: True\r\nPackageSignatureVerificationLog: PackageIdentity: Microsoft.VisualStudioEng.MicroBuild.Core.0.4.1 Source: C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\ PackageSignatureValidity: True\r\nAdded package 'Microsoft.VisualStudioEng.MicroBuild.Core.0.4.1' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'Microsoft.VisualStudioEng.MicroBuild.Core.0.4.1' to folder 'F:\\VSExtensibility\\packages' from source 'C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\'\r\nAdded package 'Newtonsoft.Json.9.0.1' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'Newtonsoft.Json.9.0.1' to folder 'F:\\VSExtensibility\\packages' from source 'C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\'\r\nAdded package 'Microsoft.VisualStudio.Setup.Common.2.5.1109-develop-ga454f805' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'Microsoft.VisualStudio.Setup.Common.2.5.1109-develop-ga454f805' to folder 'F:\\VSExtensibility\\packages' from source 'C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\'\r\nAdded package 'VS.ExternalAPIs.MSBuild.15.8.0-preview-000078' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'VS.ExternalAPIs.MSBuild.15.8.0-preview-000078' to folder 'F:\\VSExtensibility\\packages' from source 'C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\'\r\nAdded package 'Nerdbank.GitVersioning.2.1.17' to folder 'F:\\VSExtensibility\\packages'\r\nAdded package 'Nerdbank.GitVersioning.2.1.17' to folder 'F:\\VSExtensibility\\packages' from source 'C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\'\r\n\r\nNuGet Config files used:\r\n    F:\\VSExtensibility\\NuGet.Config\r\n    C:\\Users\\nikolev.REDMOND\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config\r\n\r\nFeeds used:\r\n    C:\\Users\\nikolev.REDMOND\\.nuget\\packages\\\r\n    https://api.nuget.org/v3/index.json\r\n    https://devdiv.pkgs.visualstudio.com/_packaging/VSExtensibility/nuget/v3/index.json\r\n    https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/VS/nuget/v3/index.json\r\n    https://devdiv.pkgs.visualstudio.com/_packaging/Setup/nuget/v3/index.json\r\n    https://devdiv.pkgs.visualstudio.com/_packaging/vssdk/nuget/v3/index.json\r\n    https://devdiv.pkgs.visualstudio.com/_packaging/vs-impl/nuget/v3/index.json\r\n    https://devdiv.pkgs.visualstudio.com/_packaging/VSIDE-RealSigned-Release/nuget/v3/index.json\r\n\r\nInstalled:\r\n    7 package(s) to packages.config projects\r\nF:\\VSExtensibility [develop â‰¡]>      \r\n```\r\n\r\nThis is inconsistent because of https://github.com/microsoft/msbuild/blob/8d37fbb97003e96516a2054e51dd5fabfd720ed6/src/MSBuild/XMake.cs#L1356. \r\n\r\nThe restore target is special cased. \r\n\r\nIdeally all of the NuGet tooling is consistent. \r\n\r\nThe argument for ignoring missing imports is summarized in https://github.com/microsoft/msbuild/pull/3278. \r\n\r\n```\r\nSome shipped SDKs have imports that are property based but are missing conditions. This makes it impossible to retrofit them with a NuGet package since NuGet restore won't succeed because an import is missing.\r\n```\r\n\r\nOn the flip side, what if the imports in question might actually be genuinely missing cause of a setup issue. They might need to bring in a PackageReference themselves. \r\n\r\nRegardless of what the decision is, all NuGet tooling should be consistent. \r\n\r\nRelated https://github.com/NuGet/Home/issues/7576\r\n\r\nfyi @jeffkl @zivkan \r\n\r\nThoughts @NuGet/nuget-client? "},{"Id":"11232757367","Type":"IssuesEvent","CreatedAt":"2020-01-08T22:51:07","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9034","RelatedDescription":"Opened issue \"dotnet pack --ouput directory no longer relative to current directory\" (#9034) at NuGet/Home","RelatedBody":"_From @frankkilcommins on Tuesday, November 12, 2019 10:30:50 AM_\r\n\r\nAs of yesterday, I get issues with dotnet pack where the output directory was created at the root working directory rather than relative to the current directory. This caused subsequent pack command to fail as the expected pattern was no longer matching.\r\n\r\nsdk version: 2.1.500\r\n\r\nOutput:\r\n`[command]C:\\hostedtoolcache\\windows\\dncs\\2.1.500\\x64\\dotnet.exe pack d:\\a\\1\\s\\DUPSCore\\DigitalUserProvisioningService.Data.Core\\DigitalUserProvisioningService.Data.Core.csproj --configuration release --version-suffix 96713 --output nupkgs\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.`\r\n\r\nPackage was created in the following directory:\r\n`Successfully created package 'd:\\a\\1\\s\\nupkgs\\DigitalUserProvisioningService.Data.Core.1.3.0-ci-96713.nupkg'.`\r\n\r\nExpected directory:\r\n`d:\\a\\1\\s\\DUPSCore\\DigitalUserProvisioningService.Data.Core\\nupkgs\\DigitalUserProvisioningService.Data.Core.1.3.0-ci-96713.nupkg`\r\n\r\nI've worked around the issue by prefixing the _current_ directory to the `output` command:\r\n`--configuration $(BuildConfiguration) --version-suffix $(Build.BuildId) --output DUPSCore/DigitalUserProvisioningService.Data.Core/nupkgs`\r\n\r\nJust wondering why/when this changed and can I expect my builds to break again if/when it's reverted or resolved.\r\n\r\n\r\n_Copied from original issue: dotnet/sdk#3894_"},{"Id":"11232723093","Type":"IssuesEvent","CreatedAt":"2020-01-08T22:45:12","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9033","RelatedDescription":"Opened issue \"dotnet add package --source not imperative\" (#9033) at NuGet/Home","RelatedBody":"_From @iamalexmang on Tuesday, January 7, 2020 10:52:50 AM_\r\n\r\nI strongly believe that if I explicitly mention a --source parameter for the package, especially in the format of a file system path, the CLI should not try validate the package's existence on any other sources. \r\nAs of right now, when I specify the source parameter as a FS path, if either of the sources specified at the solution level, user global level (in %AppData%/NuGet) or computer level (Program Files (x86)), are unauthenticated, the package installation will fail. Regretfully, the error is completely unspecific as it complains which source returns a 401 Unauthorized error, though the package exists on the file system at the specified location.\r\n\r\n_Copied from original issue: dotnet/sdk#4137_"},{"Id":"11231428359","Type":"IssuesEvent","CreatedAt":"2020-01-08T19:39:09","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9032","RelatedDescription":"Opened issue \"Make install VSIX script resilient to incomplete VS installs\" (#9032) at NuGet/Home","RelatedBody":"A number of CI builds fail when VS is in a broken installation state, requiring someone to log in to the CI machine and repair the VS install. This can be reproduced at will by killing vsixinstaller.exe in the middle of an installation (for example, canceling the CI build while it's installing the VSIX).\r\n\r\nVS install team informed us we can use the \"resume\" command on vs_installer.exe to have it repair/resume the install."},{"Id":"11230850604","Type":"IssuesEvent","CreatedAt":"2020-01-08T18:19:50","Actor":"LightVolk","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8922","RelatedDescription":"Closed issue \"How to upgrade local repository from .net core 2.2 to .net core 3.*?\" (#8922) at NuGet/Home","RelatedBody":"I have local nuget repository wich contains over 800 packages. Version of .net core is 2.2.\r\nI have script that can push existing packages into this repo. Packages must be at my local computer.\r\n\r\nSo, how can i download all .net core 3.* sdk packages to my computer? If so, i can easy push all of this packages into my local repository.\r\n\r\nThank you!"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-09T05:30:48.8412367Z","RunDurationInMilliseconds":3222}