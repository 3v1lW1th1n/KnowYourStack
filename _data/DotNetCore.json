{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access Build 3707","PublishedOn":"2018-12-15T02:11:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have another early access build to share today! This release includes several accessibility, performance, reliability and stability fixes across the major framework libraries. We will continue to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/14/announcing-net-framework-4-8-early-access-build-3707/","RawContent":null},{"Title":"Visual Studio 2019 Preview .NET Productivity","PublishedOn":"2018-12-14T00:13:41+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"As you hopefully heard, the first preview of Visual Studio 2019 is now available. In this post I’ll cover some of the productivity improvements for .NET developers we’re most excited about. For a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/13/visual-studio-2019-net-productivity/","RawContent":null},{"Title":".NET Framework December 2018 Security and Quality Rollup","PublishedOn":"2018-12-11T18:23:48+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the December 2018 Security and Quality Rollup. Security CVE-2018-8540 – Windows Remote Code Execution Vulnerability This security update resolves a vulnerability in Microsoft...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/11/net-framework-december-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Open Sourcing XAML Behaviors for WPF","PublishedOn":"2018-12-10T19:27:32+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are excited to announce that we are open sourcing XAML Behaviors for WPF. In the past, we open sourced XAML Behaviors for UWP which has been a great success and the Behaviors NuGet package...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/10/open-sourcing-xaml-behaviors-for-wpf/","RawContent":null},{"Title":"Take C# 8.0 for a spin","PublishedOn":"2018-12-05T23:51:33+00:00","CommentsCount":79,"FacebookCount":0,"Summary":"Take C# 8.0 for a spin Yesterday we announced the first preview of both Visual Studio 2019 (Making every developer more productive with Visual Studio 2019) and .NET Core 3.0 (Announcing .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/take-c-8-0-for-a-spin/","RawContent":null},{"Title":".NET Framework December 5, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2018-12-05T22:00:42+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the December 5, 2018 Preview of .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/net-framework-december-4-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 1 and Open Sourcing Windows Desktop Frameworks","PublishedOn":"2018-12-04T16:41:34+00:00","CommentsCount":80,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 1. It is the first public release of .NET Core 3. We have some exciting new features to share and would love your feedback. You can develop .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/","RawContent":null},{"Title":"Announcing .NET Core 2.2","PublishedOn":"2018-12-04T16:36:50+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"We’re excited to announce the release of .NET Core 2.2. It includes diagnostic improvements to the runtime, support for ARM32 for Windows and Azure Active Directory for SQL Client. The biggest...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-2-2/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2","PublishedOn":"2018-12-04T16:30:21+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today we&#8217;re making the final version of EF Core 2.2 available, alongside ASP.NET Core 2.2 and .NET Core 2.2. This is the latest release of our open-source and cross-platform object-database...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-entity-framework-core-2-2/","RawContent":null},{"Title":"Announcing ML.NET 0.8 – Machine Learning for .NET","PublishedOn":"2018-12-04T16:00:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform framework (Windows, Linux, macOS) which makes machine learning accessible for .NET developers. ML.NET allows you to create and use machine learning models...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-ml-net-0-8-machine-learning-for-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8760892630","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:57:54","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Opened issue \"No logo provided for Prism\" (#126) at dotnet/foundation","RelatedBody":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157"},{"Id":"8760886115","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Opened issue \"Missing logo for MVVM Light Toolkit\" (#125) at dotnet/foundation","RelatedBody":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139"},{"Id":"8760884091","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Opened issue \"Missing logo for Umbraco\" (#124) at dotnet/foundation","RelatedBody":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151"},{"Id":"8760881728","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Opened issue \"Missing logo for Steeltoe\" (#123) at dotnet/foundation","RelatedBody":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130"},{"Id":"8760867764","Type":"PullRequestEvent","CreatedAt":"2018-12-16T11:40:46","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Opened pull request \"targets the existing document\" (#122) at dotnet/foundation","RelatedBody":""},{"Id":"8650911785","Type":"PullRequestEvent","CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Opened pull request \"Add Newtonsoft.Json\" (#121) at dotnet/foundation","RelatedBody":"// @jongalloway "},{"Id":"8645831625","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:50","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Merged pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645829054","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:23","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Merged pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8645355358","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:59:20","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Opened pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645349176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:57:50","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Opened pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8752496804","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:22:59","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8752467326","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:12:36","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Opened issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"},{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8821805469","Type":"PullRequestEvent","CreatedAt":"2019-01-02T05:24:36","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21741","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,corert\" (#21741) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"8821774446","Type":"IssuesEvent","CreatedAt":"2019-01-02T05:04:57","Actor":"mjsabby","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21742","RelatedDescription":"Closed issue \"MissingMethodException for SecurityPermission..ctor(System.Security.Permissions.PermissionState)\" (#21742) at dotnet/coreclr","RelatedBody":"New in .NET Core 3.0 Preview 1 compared to 2.2 is a `MissingMethodException` for `Void System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)` triggered by the following line of code:\r\n\r\n```csharp\r\n            new SecurityPermission(PermissionState.Unrestricted).Demand();\r\n```\r\n\r\nI know we gutted CAS in this release, and so it's probably related to that change in some way, but I did not expect this to break so it does seem like a bug, but I've not root caused it yet."},{"Id":"8821743458","Type":"IssuesEvent","CreatedAt":"2019-01-02T04:45:47","Actor":"mjsabby","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21742","RelatedDescription":"Opened issue \"MissingMethodException for SecurityPermission..ctor(System.Security.Permissions.PermissionState)\" (#21742) at dotnet/coreclr","RelatedBody":"New in .NET Core 3.0 Preview 1 compared to 2.2 is a `MissingMethodException` for `Void System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)` triggered by the following line of code:\r\n\r\n```csharp\r\n            new SecurityPermission(PermissionState.Unrestricted).Demand();\r\n```\r\n\r\nI know we gutted CAS in this release, and so it's probably related to that change in some way, but I did not expect this to break so it does seem like a bug, but I've not root caused it yet."},{"Id":"8821499257","Type":"PullRequestEvent","CreatedAt":"2019-01-02T02:22:51","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21741","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,corert\" (#21741) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"8821496473","Type":"PullRequestEvent","CreatedAt":"2019-01-02T02:21:13","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21729","RelatedDescription":"Merged pull request \"strlen to managed code and vectorize\" (#21729) at dotnet/coreclr","RelatedBody":"Follow up to https://github.com/dotnet/coreclr/pull/21720\r\n\r\n/cc @jkotas "},{"Id":"8821490711","Type":"IssuesEvent","CreatedAt":"2019-01-02T02:17:28","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21740","RelatedDescription":"Opened issue \"[arm] init-tools.cmd failed in arm_cross_checked_windows_nt_jitstress2_jitstressregs8_tst\" (#21740) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_jitstress2_jitstressregs8_tst/55/\r\n\r\n**Failed tests:**\r\ninit-tools.cmd\r\n\r\n**Failed log:**\r\n```\r\nC:\\j\\workspace\\arm_cross_che---1418a2f7\\init-tools.cmd\r\nTraceback (most recent call last):\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2324, in <module>\r\n    sys.exit(main(args))\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2298, in main\r\n    lambda path: do_setup(host_os,\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 494, in create_and_use_test_env\r\n    return func(test_env.name)\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2307, in <lambda>\r\n    path))\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2193, in do_setup\r\n    setup_tools(host_os, coreclr_repo_location)\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 1271, in setup_tools\r\n    subprocess.check_output(command)\r\n  File \"c:\\python\\lib\\subprocess.py\", line 573, in check_output\r\n    raise CalledProcessError(retcode, cmd, output=output)\r\nsubprocess.CalledProcessError: Command '['C:\\\\j\\\\workspace\\\\arm_cross_che---1418a2f7\\\\init-tools.cmd']' returned non-zero exit status 1\r\n```"},{"Id":"8821479736","Type":"IssuesEvent","CreatedAt":"2019-01-02T02:10:50","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21739","RelatedDescription":"Opened issue \"[arm] System.Threading.Tests.SynchronizationContextTests.WaitTest failed\" (#21739) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_corefx_jitstressregs4_tst/38/\r\n\r\n**Failed tests:**\r\nSystem.Threading.Tests.SynchronizationContextTests.WaitTest\r\n\r\n**Failed log:**\r\n```\r\n[37m  Discovering: System.Threading.Tests (method display = ClassAndMethod, method display options = None)\r\n[m[37m  Discovered:  System.Threading.Tests (found 178 of 206 test cases)\r\n[m[37m  Starting:    System.Threading.Tests (parallel test collections = on, max threads = 4)\r\n[m[31;1m    System.Threading.Tests.SynchronizationContextTests.WaitTest [FAIL]\r\n[m[37m      Assert.Equal() Failure\r\n[m[37m      Expected: 0\r\n[m[37m      Actual:   258\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_jitstressregs4/_/fx/src/System.Threading/tests/SynchronizationContextTests.cs(36,0): at System.Threading.Tests.SynchronizationContextTests.WaitTest()\r\n[m[37m  Finished:    System.Threading.Tests\r\n[m[37m=== TEST EXECUTION SUMMARY ===\r\n[m[37m   System.Threading.Tests  Total: 396, Errors: 0, Failed: 1, Skipped: 0, Time: 145.048s\r\n[m[m/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_jitstressregs4_tst/_/fx/artifacts/bin/tests/System.Threading.Tests/netcoreapp-Linux-Release-arm\r\n----- end 02:57:16 ----- exit code 1 ----------------------------------------------------------\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8820467729","Type":"PullRequestEvent","CreatedAt":"2019-01-01T13:02:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10532","RelatedDescription":"Opened pull request \"Update dependency files\" (#10532) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18631.2\r\n\r\n"},{"Id":"8820463771","Type":"IssuesEvent","CreatedAt":"2019-01-01T12:59:20","Actor":"HassanHashemi","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10531","RelatedDescription":"Closed issue \"\"ConsoleLogger\" logger failed unexpectedly during initialization.\" (#10531) at dotnet/cli","RelatedBody":"I may be wrong to post this here, but i think it's a bug. so..\r\n\r\n`dotnet run` throws this:\r\n\r\nMSBUILD : error MSB4016: The build stopped unexpectedly because the \"ConsoleLogger\" logger failed unexpectedly during initialization. Bad flags on delegate constructor.\r\nThe build failed. Please fix the build errors and run again.\r\n\r\nEven though the app is fine.\r\n\r\n## Expected  behavior\r\nRun the app.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8815027660","Type":"IssuesEvent","CreatedAt":"2018-12-29T13:33:19","Actor":"MV10","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1041","RelatedDescription":"Opened issue \"System.MathF missing in .NET Standard 2.1 README\" (#1041) at dotnet/standard","RelatedBody":"Minor, but `System.MathF` is missing from the [README](https://github.com/dotnet/standard/blob/master/docs/planning/netstandard-2.1/README.md). I figured it would be in the Miscellaneous list at a minimum. (As I understand it, this is still on schedule for .NET Standard 2.1 per  https://github.com/dotnet/corefx/issues/15830, correct?)\r\n\r\n"},{"Id":"8805668276","Type":"PullRequestEvent","CreatedAt":"2018-12-26T21:14:18","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Merged pull request \"Fix representation of enum values\" (#1039) at dotnet/standard","RelatedBody":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***"},{"Id":"8789022646","Type":"IssuesEvent","CreatedAt":"2018-12-21T01:08:30","Actor":"ViktorHofer","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036) at dotnet/standard","RelatedBody":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?"},{"Id":"8788973753","Type":"PullRequestEvent","CreatedAt":"2018-12-21T00:51:27","Actor":"ViktorHofer","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Opened pull request \"Remove the manual config system\" (#1040) at dotnet/standard","RelatedBody":"Fixes https://github.com/dotnet/standard/issues/1032"},{"Id":"8788925569","Type":"PullRequestEvent","CreatedAt":"2018-12-21T00:34:02","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Opened pull request \"Fix representation of enum values\" (#1039) at dotnet/standard","RelatedBody":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n**This doesn't change any API surface but makes diffs more human readable.**"},{"Id":"8787632649","Type":"PullRequestEvent","CreatedAt":"2018-12-20T19:19:31","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Merged pull request \"Add APICompat run for NetStandard2.0\" (#1038) at dotnet/standard","RelatedBody":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8821806511","Type":"PullRequestEvent","CreatedAt":"2019-01-02T05:25:07","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34306","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert,coreclr\" (#34306) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @benaadams"},{"Id":"8821774007","Type":"IssuesEvent","CreatedAt":"2019-01-02T05:04:40","Actor":"mjsabby","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34308","RelatedDescription":"Opened issue \"MissingMethodException for System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)\" (#34308) at dotnet/corefx","RelatedBody":"Looks like the issue I opened in https://github.com/dotnet/coreclr/issues/21742 probably belongs here.\r\n\r\nNew in .NET Core 3.0 Preview 1 compared to 2.2 is a `MissingMethodException` for `Void System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)` triggered by the following line of code:\r\n\r\n```csharp\r\n            new SecurityPermission(PermissionState.Unrestricted).Demand();\r\n```\r\n\r\nI know we gutted CAS in this release, and so it's probably related to that change in some way, but I did not expect this to break so it does seem like a bug, but I've not root caused it yet.\r\n\r\nLooks like the following types were introduced in System.Runtime.Extensions ... but it is not from @jkotas's change, so maybe this isn't related to that.\r\n\r\n`System.Security.Permissions.PermissionState`\r\n`System.Security.PermissionSet`\r\n`System.Security.IStackWalk`"},{"Id":"8821528580","Type":"PullRequestEvent","CreatedAt":"2019-01-02T02:40:09","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34307","RelatedDescription":"Opened pull request \"split redirect tests into separate file\" (#34307) at dotnet/corefx","RelatedBody":"@dotnet/ncl"},{"Id":"8821499532","Type":"PullRequestEvent","CreatedAt":"2019-01-02T02:23:00","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34306","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert,coreclr\" (#34306) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8821492161","Type":"PullRequestEvent","CreatedAt":"2019-01-02T02:18:22","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34305","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#34305) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8821801665","Type":"PullRequestEvent","CreatedAt":"2019-01-02T05:22:11","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32091","RelatedDescription":"Opened pull request \"Track assignments to ref/out parameters as normal locals\" (#32091) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/29954"},{"Id":"8821723140","Type":"PullRequestEvent","CreatedAt":"2019-01-02T04:32:38","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32090","RelatedDescription":"Opened pull request \"No nested nullability warnings on converting suppressed expressions\" (#32090) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/29642 (! operator should suppress warning for nested nullability mismatch)\r\nFixes https://github.com/dotnet/roslyn/issues/29900 (missing diagnostic in compound assignment)\r\n\r\nBecause `!` can now suppress nested warnings or warnings from user-defined conversions, it is useful to allow `!` on all types. So I removed `WRN_SuppressionOperatorNotReferenceType`.\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/29907 (finalize which types `!` should be allowed on)"},{"Id":"8821540447","Type":"IssuesEvent","CreatedAt":"2019-01-02T02:47:07","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32089","RelatedDescription":"Opened issue \"If I remove the space from { 0}, to {0}, it works perfectly. \" (#32089) at dotnet/roslyn","RelatedBody":"With this statement: Console.WriteLine(&quot;char.IsWhiteSpace('Hello There',5): { 0}&quot;,char.IsWhiteSpace(&quot;Hello There&quot;, 5));\n\nI get:\nUnhandled Exception: System.FormatException: Input string was not in a correct format.\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\n   at System.IO.TextWriter.WriteLine(String format, Object arg0)\n   at System.IO.TextWriter.SyncTextWriter.WriteLine(String format, Object arg0)\n   at System.Console.WriteLine(String format, Object arg0)\n   at WriteTextFile.WriteTextFile.CharFunctionality() in C:\\Users\\qetuo\\Documents\\Visual Studio 2018\\WriteTextFile\\WriteTextFile\\Program.cs:line 182\n\nIf I remove the space from { 0}, to {0}, it works perfectly. \n\nHaving the space should not be a problem.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/398878/if-i-remove-the-space-from-0-to-0-it-works-perfect.html\nVSTS ticketId: 739988_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"8821523797","Type":"IssuesEvent","CreatedAt":"2019-01-02T02:37:20","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32088","RelatedDescription":"Opened issue \"Problem with simplify suggestion var\" (#32088) at dotnet/roslyn","RelatedBody":"static class Program\n    {\n        static void Main(string[] args)\n        {\n            if (!_data.TryGetValue(0, out List&lt;(int X, int Y)&gt; value))\n                return;\n\n            var x = value.FirstOrDefault().X;\n        }\n\n        private static Dictionary&lt;int, List&lt;(int, int)&gt;&gt; _data =\n            new Dictionary&lt;int, List&lt;(int, int)&gt;&gt;();\n    }\n\n\nIn this code List&lt;(int X, int Y)&gt; is faded with suggestion to simplify name to var. Although simplifying leads to compile time error\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/397138/problem-with-simplify-suggestion-var.html\nVSTS ticketId: 739018_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"8821409293","Type":"IssuesEvent","CreatedAt":"2019-01-02T01:24:10","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32087","RelatedDescription":"Opened issue \"VisualBasicUseConditionalExpressionForAssignmentCodeRefactoringProvider STILL on Error\" (#32087) at dotnet/roslyn","RelatedBody":"You closed my last Error message as Duplicate but there is still the same error sice many releases.\n\ntry the following refactoring:\n\n Public Function ColName(aExtendedName As Boolean) As String\n        If aExtendedName Then\n            ColName = Current.SchemaName &amp; &quot;.&quot; &amp; ColName()\n        Else\n            ColName = Name\n        End If\n    End Function\n\nResult:\nIDE0045 goes to Error\n\nHere the Stack Trace:\nSystem.InvalidCastException : Das Objekt des Typs &quot;Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax&quot; kann nicht in Typ &quot;Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax&quot; umgewandelt werden.\n   at Microsoft.CodeAnalysis.VisualBasic.UseConditionalExpression.VisualBasicUseConditionalExpressionForAssignmentCodeRefactoringProvider.GetDeclaratorSyntax(IVariableDeclaratorOperation declarator)\n   at Microsoft.CodeAnalysis.UseConditionalExpression.AbstractUseConditionalExpressionForAssignmentCodeFixProvider`6.TryConvertWhenAssignmentToLocalDeclaredImmediateAbove(ISyntaxFactsService syntaxFacts,SyntaxEditor editor,IConditionalOperation ifOperation,ISimpleAssignmentOperation trueAssignment,ISimpleAssignmentOperation falseAssignment,TExpressionSyntax conditionalExpression)\n   at async Microsoft.CodeAnalysis.UseConditionalExpression.AbstractUseConditionalExpressionForAssignmentCodeFixProvider`6.FixOneAsync[TStatementSyntax,TIfStatementSyntax,TLocalDeclarationStatementSyntax,TVariableDeclaratorSyntax,TExpressionSyntax,TConditionalExpressionSyntax](&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.UseConditionalExpression.AbstractUseConditionalExpressionCodeFixProvider`4.FixAllAsync[TStatementSyntax,TIfStatementSyntax,TExpressionSyntax,TConditionalExpressionSyntax](&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.FixAllWithEditorAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.&lt;&gt;c__DisplayClass11_0.&lt;GetPreviewAsync&gt;b__0(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](&lt;Unbekannte Parameter&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/403049/visualbasicuseconditionalexpressionforassignmentco.html\nVSTS ticketId: 744255_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"8821375186","Type":"PullRequestEvent","CreatedAt":"2019-01-02T01:00:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32084","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#32084) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8821365719","Type":"IssuesEvent","CreatedAt":"2019-01-02T00:52:30","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32086","RelatedDescription":"Opened issue \"Crash \"Visual Studio\" at rename variable in code\" (#32086) at dotnet/roslyn","RelatedBody":"<p>If the code contains a line with an error, and you are trying to rename the variable, the development environment crashes and Visual Studio restarts.<br><br>Visual Studio Verion 15.9.3 <br>Simple code: (Console app, Visual Basic)<br><br>Module Module1<br><br>    Sub Main()<br><br>        ' Try renaming the variable &quot;val&quot;. (Right Click -&gt; Rename...)<br>        Dim val As Integer = 10<br><br>        ' Line code with error<br>        For (Int() i = 0; i &lt;val; i++)<br><br>    End Sub<br><br>End Module</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/394687/crash-visual-studio-at-rename-variable-in-code.html\nVSTS ticketId: 736894_\n_These are the original issue comments:_\n\nFiona Niu[MSFT] on 11/29/2018, 06:20 PM (32 days ago): <p>Thank you for your feedback. In order for us to investigate this further, could you please give us a dump file so that we can conduct further research? </p><p> </p><p> 1. Please follow the instructions below, especially &quot;Provide a trace and heap dump&quot; section to record the issue you are experiencing.</p><p> 2.  https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017 </p><p> 3. The recorded files can be found under %TEMP%\\Microsoft\\VSFeedbackCollector.</p><p> 4. Upload the files to this ticket by choosing insert file tag on add comment field then submit.</p><p> </p><p>We look forward to hearing from you!</p>\n\nТютрюмов Максим on 11/29/2018, 08:42 PM (32 days ago): <p>Sent a record. Is that what you wanted?</p><p>Memory_8252_1543552764291.dmp 669 100 Kb (O_O). This is madness.</p>\n\nFiona Niu[MSFT] on 11/29/2018, 11:32 PM (32 days ago): <p>Thank you for providing the information. We are forwarding the issue to the engineering team for investigating. The engineer will investigate the issue and keep you posted. </p>\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"8821346957","Type":"IssuesEvent","CreatedAt":"2019-01-02T00:36:26","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32085","RelatedDescription":"Opened issue \"remove unnecessary parentheses causes compile error\" (#32085) at dotnet/roslyn","RelatedBody":"I surround my code with parentheses, after completeing code VS mark two pair of parentheses in a line unnecessary, when cursor is on first one and allow VS to &quot;remove unnecessary parentheses&quot; with &quot;Alt + Enter&quot; the second pair is now NOT unnecessary, and if cursor is on second one and allow VS to  &quot;remove unnecessary parentheses&quot; causes compile error\n\nLine 59 in screenshot\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/415284/remove-unnecessary-parentheses-causes-compile-erro.html\nVSTS ticketId: 756627_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"8821304804","Type":"PullRequestEvent","CreatedAt":"2019-01-02T00:00:26","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32084","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#32084) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8821499730","Type":"PullRequestEvent","CreatedAt":"2019-01-02T02:23:09","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6753","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6753) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8821492739","Type":"PullRequestEvent","CreatedAt":"2019-01-02T02:18:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6752","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6752) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"8821028786","Type":"PullRequestEvent","CreatedAt":"2019-01-01T20:15:46","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6752","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6752) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8820745345","Type":"PullRequestEvent","CreatedAt":"2019-01-01T16:30:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6751","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6751) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"8820014324","Type":"PullRequestEvent","CreatedAt":"2019-01-01T05:39:00","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6751","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6751) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8819339925","Type":"PullRequestEvent","CreatedAt":"2018-12-31T19:14:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6750","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6750) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"8819200717","Type":"PullRequestEvent","CreatedAt":"2018-12-31T17:57:54","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6750","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6750) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8818628474","Type":"PullRequestEvent","CreatedAt":"2018-12-31T13:25:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6749","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6749) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @jkotas"},{"Id":"8818103895","Type":"PullRequestEvent","CreatedAt":"2018-12-31T08:56:28","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6749","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6749) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8818038339","Type":"PullRequestEvent","CreatedAt":"2018-12-31T08:17:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6748","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6748) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel @marek-safar"},{"Id":"8817961829","Type":"PullRequestEvent","CreatedAt":"2018-12-31T07:27:22","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6748","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6748) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8817225717","Type":"PullRequestEvent","CreatedAt":"2018-12-30T21:01:07","Actor":"marek-safar","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6747","RelatedDescription":"Opened pull request \"Moves Attribute instance bits to shared location\" (#6747) at dotnet/corert","RelatedBody":""},{"Id":"8817004526","Type":"PullRequestEvent","CreatedAt":"2018-12-30T18:01:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6746","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6746) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams"},{"Id":"8816928940","Type":"PullRequestEvent","CreatedAt":"2018-12-30T17:02:58","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6746","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6746) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8820466406","Type":"PullRequestEvent","CreatedAt":"2019-01-01T13:01:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2782","RelatedDescription":"Opened pull request \"Update dependency files\" (#2782) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18631.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18631.2\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"open","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Open issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2018-12-16T11:40:46","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Open PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"open","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Open PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"294070713","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:02","Actor":"karann-msft","Number":"98","RawContent":null,"Title":"Updates to reflect the latest information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/98","RelatedDescription":"Closed or merged PR \"Updates to reflect the latest information\" (#98)"},{"Id":"316146229","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:34","Actor":"Cheesebaron","Number":"100","RawContent":null,"Title":"Create mvvmcross.md","State":"closed","Body":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415","Url":"https://github.com/dotnet/foundation/pull/100","RelatedDescription":"Closed or merged PR \"Create mvvmcross.md\" (#100)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"},{"Id":"293777118","IsPullRequest":true,"CreatedAt":"2018-03-29T07:03:03","Actor":"mairaw","Number":"97","RawContent":null,"Title":"update CLA PDF link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/97","RelatedDescription":"Closed or merged PR \"update CLA PDF link\" (#97)"},{"Id":"307656482","IsPullRequest":false,"CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Number":"99","RawContent":null,"Title":"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux ","State":"open","Body":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n","Url":"https://github.com/dotnet/foundation/issues/99","RelatedDescription":"Open issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"395135462","IsPullRequest":true,"CreatedAt":"2019-01-02T05:24:36","Actor":"Dotnet-GitSync-Bot","Number":"21741","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/21741","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#21741)"},{"Id":"395148532","IsPullRequest":false,"CreatedAt":"2019-01-02T05:04:57","Actor":"mjsabby","Number":"21742","RawContent":null,"Title":"MissingMethodException for SecurityPermission..ctor(System.Security.Permissions.PermissionState)","State":"closed","Body":"New in .NET Core 3.0 Preview 1 compared to 2.2 is a `MissingMethodException` for `Void System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)` triggered by the following line of code:\r\n\r\n```csharp\r\n            new SecurityPermission(PermissionState.Unrestricted).Demand();\r\n```\r\n\r\nI know we gutted CAS in this release, and so it's probably related to that change in some way, but I did not expect this to break so it does seem like a bug, but I've not root caused it yet.","Url":"https://github.com/dotnet/coreclr/issues/21742","RelatedDescription":"Closed issue \"MissingMethodException for SecurityPermission..ctor(System.Security.Permissions.PermissionState)\" (#21742)"},{"Id":"395018570","IsPullRequest":true,"CreatedAt":"2019-01-02T02:21:12","Actor":"benaadams","Number":"21729","RawContent":null,"Title":"strlen to managed code and vectorize","State":"closed","Body":"Follow up to https://github.com/dotnet/coreclr/pull/21720\r\n\r\n/cc @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/21729","RelatedDescription":"Closed or merged PR \"strlen to managed code and vectorize\" (#21729)"},{"Id":"395134945","IsPullRequest":false,"CreatedAt":"2019-01-02T02:17:27","Actor":"VincentBu","Number":"21740","RawContent":null,"Title":"[arm] init-tools.cmd failed in arm_cross_checked_windows_nt_jitstress2_jitstressregs8_tst","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_jitstress2_jitstressregs8_tst/55/\r\n\r\n**Failed tests:**\r\ninit-tools.cmd\r\n\r\n**Failed log:**\r\n```\r\nC:\\j\\workspace\\arm_cross_che---1418a2f7\\init-tools.cmd\r\nTraceback (most recent call last):\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2324, in <module>\r\n    sys.exit(main(args))\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2298, in main\r\n    lambda path: do_setup(host_os,\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 494, in create_and_use_test_env\r\n    return func(test_env.name)\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2307, in <lambda>\r\n    path))\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 2193, in do_setup\r\n    setup_tools(host_os, coreclr_repo_location)\r\n  File \"C:\\j\\workspace\\arm_cross_che---1418a2f7\\tests\\runtest.py\", line 1271, in setup_tools\r\n    subprocess.check_output(command)\r\n  File \"c:\\python\\lib\\subprocess.py\", line 573, in check_output\r\n    raise CalledProcessError(retcode, cmd, output=output)\r\nsubprocess.CalledProcessError: Command '['C:\\\\j\\\\workspace\\\\arm_cross_che---1418a2f7\\\\init-tools.cmd']' returned non-zero exit status 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21740","RelatedDescription":"Open issue \"[arm] init-tools.cmd failed in arm_cross_checked_windows_nt_jitstress2_jitstressregs8_tst\" (#21740)"},{"Id":"395134228","IsPullRequest":false,"CreatedAt":"2019-01-02T02:10:49","Actor":"VincentBu","Number":"21739","RawContent":null,"Title":"[arm] System.Threading.Tests.SynchronizationContextTests.WaitTest failed","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_corefx_jitstressregs4_tst/38/\r\n\r\n**Failed tests:**\r\nSystem.Threading.Tests.SynchronizationContextTests.WaitTest\r\n\r\n**Failed log:**\r\n```\r\n[37m  Discovering: System.Threading.Tests (method display = ClassAndMethod, method display options = None)\r\n[m[37m  Discovered:  System.Threading.Tests (found 178 of 206 test cases)\r\n[m[37m  Starting:    System.Threading.Tests (parallel test collections = on, max threads = 4)\r\n[m[31;1m    System.Threading.Tests.SynchronizationContextTests.WaitTest [FAIL]\r\n[m[37m      Assert.Equal() Failure\r\n[m[37m      Expected: 0\r\n[m[37m      Actual:   258\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_jitstressregs4/_/fx/src/System.Threading/tests/SynchronizationContextTests.cs(36,0): at System.Threading.Tests.SynchronizationContextTests.WaitTest()\r\n[m[37m  Finished:    System.Threading.Tests\r\n[m[37m=== TEST EXECUTION SUMMARY ===\r\n[m[37m   System.Threading.Tests  Total: 396, Errors: 0, Failed: 1, Skipped: 0, Time: 145.048s\r\n[m[m/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_jitstressregs4_tst/_/fx/artifacts/bin/tests/System.Threading.Tests/netcoreapp-Linux-Release-arm\r\n----- end 02:57:16 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21739","RelatedDescription":"Open issue \"[arm] System.Threading.Tests.SynchronizationContextTests.WaitTest failed\" (#21739)"},{"Id":"395108755","IsPullRequest":true,"CreatedAt":"2019-01-01T22:15:49","Actor":"jkotas","Number":"21738","RawContent":null,"Title":"Cleanup ArgumentNull_Obj references in unmanaged runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21738","RelatedDescription":"Closed or merged PR \"Cleanup ArgumentNull_Obj references in unmanaged runtime\" (#21738)"},{"Id":"395071659","IsPullRequest":true,"CreatedAt":"2019-01-01T22:15:37","Actor":"marek-safar","Number":"21733","RawContent":null,"Title":"Tweaks permissions ifdefs in System.Diagnostics.Tracing","State":"closed","Body":"to be inclusive only","Url":"https://github.com/dotnet/coreclr/pull/21733","RelatedDescription":"Closed or merged PR \"Tweaks permissions ifdefs in System.Diagnostics.Tracing\" (#21733)"},{"Id":"395075240","IsPullRequest":true,"CreatedAt":"2019-01-01T20:13:32","Actor":"marek-safar","Number":"21734","RawContent":null,"Title":"Moves AppContext to shared location","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21734","RelatedDescription":"Closed or merged PR \"Moves AppContext to shared location\" (#21734)"},{"Id":"395103713","IsPullRequest":true,"CreatedAt":"2019-01-01T18:40:19","Actor":"jkotas","Number":"21737","RawContent":null,"Title":"Reflection performance tweaks & cleanup","State":"open","Body":"- Delete internal \"Unsafe\" field getters/setters. They performance was very close (within 10%) of the regular getters/setters.\r\n- Made a few performance tweaks in reflection to make reflection faster overall. The regular field getters/setters are faster than what the unsafe ones used to be with this change.","Url":"https://github.com/dotnet/coreclr/pull/21737","RelatedDescription":"Open PR \"Reflection performance tweaks & cleanup\" (#21737)"},{"Id":"395099443","IsPullRequest":true,"CreatedAt":"2019-01-01T17:26:34","Actor":"benaadams","Number":"21736","RawContent":null,"Title":"[WIP] Faster null checks","State":"open","Body":"`operator ==(MethodInfo left, MethodInfo right)` was showing up in traces, ~40% of them from `== null` checks\r\n\r\nThis changes the null checks against (most) `MemberInfo` derived classes in coreclr to be an `is null` fast null check and related changes; rather than calling through to their operator overloads to test for null.\r\n\r\nPre\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50574916-ced33500-0de9-11e9-9735-c538d4739f81.png)\r\n\r\nPost \r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50575186-dba75700-0df0-11e9-92c0-a84b188845ff.png)","Url":"https://github.com/dotnet/coreclr/pull/21736","RelatedDescription":"Open PR \"[WIP] Faster null checks\" (#21736)"},{"Id":"395099013","IsPullRequest":true,"CreatedAt":"2019-01-01T17:19:01","Actor":"marek-safar","Number":"21735","RawContent":null,"Title":"Adds portable version of EncodingTable","State":"open","Body":"Most of the implementation is extracted from CoreRT","Url":"https://github.com/dotnet/coreclr/pull/21735","RelatedDescription":"Open PR \"Adds portable version of EncodingTable\" (#21735)"},{"Id":"395057986","IsPullRequest":true,"CreatedAt":"2019-01-01T05:44:34","Actor":"jkotas","Number":"21732","RawContent":null,"Title":"Simplify and improve integer overflow checks in Interop","State":"open","Body":"- Delete unnecessary CheckStringLength calls for result of string.Length. Managed strings are guaranteed to be under 2GB bytes, so these checks were unnecessary.\r\n- Add `checked(...)` around buffer size computations that may hit potential integer overflow. It does not look like any of these would cause a bug that would lead to buffer overrun, but it is better to catch these early.","Url":"https://github.com/dotnet/coreclr/pull/21732","RelatedDescription":"Open PR \"Simplify and improve integer overflow checks in Interop\" (#21732)"},{"Id":"394997609","IsPullRequest":true,"CreatedAt":"2019-01-01T05:37:12","Actor":"jkotas","Number":"21728","RawContent":null,"Title":"Delete useless ArgumentNullException message","State":"closed","Body":"\"Object cannot be null\" does not add anything over the default \"Value cannot be null\"","Url":"https://github.com/dotnet/coreclr/pull/21728","RelatedDescription":"Closed or merged PR \"Delete useless ArgumentNullException message\" (#21728)"},{"Id":"395041298","IsPullRequest":false,"CreatedAt":"2018-12-31T23:24:00","Actor":"mjsabby","Number":"21731","RawContent":null,"Title":"Debug Info Tracking for LCG methods for profiling support","State":"open","Body":"The runtime does not track IL->Native mapping or local variables for LCG methods. In some of my use cases LCG methods can become quite large and being able to get basic information like IL offset goes a long way in debugging performance and functional problems.\r\n\r\nI'm not sure how much perf impact it'll have to JIT time, and so if there is a trade-off to be made maybe we could only pursue IL offset tracking and skip local variable tracking?","Url":"https://github.com/dotnet/coreclr/issues/21731","RelatedDescription":"Open issue \"Debug Info Tracking for LCG methods for profiling support\" (#21731)"},{"Id":"395034021","IsPullRequest":true,"CreatedAt":"2018-12-31T21:33:53","Actor":"benaadams","Number":"21730","RawContent":null,"Title":"Vectorize wcslen","State":"open","Body":"Follow up to https://github.com/dotnet/coreclr/pull/21729","Url":"https://github.com/dotnet/coreclr/pull/21730","RelatedDescription":"Open PR \"Vectorize wcslen\" (#21730)"},{"Id":"394892422","IsPullRequest":true,"CreatedAt":"2018-12-31T17:57:19","Actor":"benaadams","Number":"21718","RawContent":null,"Title":"Remove EventPipeController static constructor","State":"closed","Body":"Is unnecessary work in the startup path (and doesn't get used until EventPipe is enabled)\r\n\r\nPre\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50549997-6fe1b480-0c5f-11e9-9b98-8831a6b7e990.png)\r\n\r\nPrevious .cctor\r\n```\r\n.method private hidebysig specialname rtspecialname static \r\n\tvoid .cctor () cil managed \r\n{\r\n\t// Method begins at RVA 0x472c8c\r\n\t// Code size 181 (0xb5)\r\n\t.maxstack 7\r\n\r\n\tIL_0000: ldc.i4.1\r\n\tIL_0001: newarr System.Char\r\n\tIL_0006: dup\r\n\tIL_0007: ldc.i4.0\r\n\tIL_0008: ldc.i4.s 44\r\n\tIL_000a: stelem.i2\r\n\tIL_000b: stsfld char[] System.Diagnostics.Tracing.EventPipeController::ProviderConfigDelimiter\r\n\tIL_0010: ldc.i4.1\r\n\tIL_0011: newarr System.Char\r\n\tIL_0016: dup\r\n\tIL_0017: ldc.i4.0\r\n\tIL_0018: ldc.i4.s 58\r\n\tIL_001a: stelem.i2\r\n\tIL_001b: stsfld char[] System.Diagnostics.Tracing.EventPipeController::ConfigComponentDelimiter\r\n\tIL_0020: ldc.i4.2\r\n\tIL_0021: newarr System.String\r\n\tIL_0026: dup\r\n\tIL_0027: ldc.i4.0\r\n\tIL_0028: ldstr \"\\r\\n\"\r\n\tIL_002d: stelem.ref\r\n\tIL_002e: dup\r\n\tIL_002f: ldc.i4.1\r\n\tIL_0030: ldstr \"\\n\"\r\n\tIL_0035: stelem.ref\r\n\tIL_0036: stsfld string[] System.Diagnostics.Tracing.EventPipeController::ConfigFileLineDelimiters\r\n\tIL_003b: ldc.i4.3\r\n\tIL_003c: newarr System.Diagnostics.Tracing.EventPipeProviderConfiguration\r\n\tIL_0041: dup\r\n\tIL_0042: ldc.i4.0\r\n\tIL_0043: ldstr \"Microsoft-Windows-DotNETRuntime\"\r\n\tIL_0048: ldc.i8 20423101629\r\n\tIL_0051: ldc.i4.5\r\n\tIL_0052: ldnull\r\n\tIL_0053: newobj instance void System.Diagnostics.Tracing.EventPipeProviderConfiguration::.ctor(string, uint64, uint32, string)\r\n\tIL_0058: stelem System.Diagnostics.Tracing.EventPipeProviderConfiguration\r\n\tIL_005d: dup\r\n\tIL_005e: ldc.i4.1\r\n\tIL_005f: ldstr \"Microsoft-Windows-DotNETRuntimePrivate\"\r\n\tIL_0064: ldc.i4 1073872907\r\n\tIL_0069: conv.i8\r\n\tIL_006a: ldc.i4.5\r\n\tIL_006b: ldnull\r\n\tIL_006c: newobj instance void System.Diagnostics.Tracing.EventPipeProviderConfiguration::.ctor(string, uint64, uint32, string)\r\n\tIL_0071: stelem System.Diagnostics.Tracing.EventPipeProviderConfiguration\r\n\tIL_0076: dup\r\n\tIL_0077: ldc.i4.2\r\n\tIL_0078: ldstr \"Microsoft-DotNETCore-SampleProfiler\"\r\n\tIL_007d: ldc.i4.0\r\n\tIL_007e: conv.i8\r\n\tIL_007f: ldc.i4.5\r\n\tIL_0080: ldnull\r\n\tIL_0081: newobj instance void System.Diagnostics.Tracing.EventPipeProviderConfiguration::.ctor(string, uint64, uint32, string)\r\n\tIL_0086: stelem System.Diagnostics.Tracing.EventPipeProviderConfiguration\r\n\tIL_008b: stsfld valuetype System.Diagnostics.Tracing.EventPipeProviderConfiguration[] System.Diagnostics.Tracing.EventPipeController::DefaultProviderConfiguration\r\n\tIL_0090: ldnull\r\n\tIL_0091: stsfld class System.Diagnostics.Tracing.EventPipeController System.Diagnostics.Tracing.EventPipeController::s_controllerInstance\r\n\tIL_0096: ldc.i4.0\r\n\tIL_0097: stsfld bool System.Diagnostics.Tracing.EventPipeController::s_initializing\r\n\tIL_009c: ldc.i4.m1\r\n\tIL_009d: stsfld int32 System.Diagnostics.Tracing.EventPipeController::s_Config_EnableEventPipe\r\n\tIL_00a2: ldnull\r\n\tIL_00a3: stsfld string System.Diagnostics.Tracing.EventPipeController::s_Config_EventPipeConfig\r\n\tIL_00a8: ldc.i4.0\r\n\tIL_00a9: stsfld uint32 System.Diagnostics.Tracing.EventPipeController::s_Config_EventPipeCircularMB\r\n\tIL_00ae: ldnull\r\n\tIL_00af: stsfld string System.Diagnostics.Tracing.EventPipeController::s_Config_EventPipeOutputPath\r\n\tIL_00b4: ret\r\n} // end of method EventPipeController::.cctor\r\n```\r\n\r\nPost\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50550093-7d983980-0c61-11e9-82b7-b07c1d931a8c.png)\r\n\r\n/cc @jkotas @vancem @brianrob","Url":"https://github.com/dotnet/coreclr/pull/21718","RelatedDescription":"Closed or merged PR \"Remove EventPipeController static constructor\" (#21718)"},{"Id":"394967702","IsPullRequest":true,"CreatedAt":"2018-12-31T17:56:58","Actor":"marek-safar","Number":"21725","RawContent":null,"Title":"Moves ExceptionDispatchInfo to shared location","State":"closed","Body":"mostly matches CoreRT implementation","Url":"https://github.com/dotnet/coreclr/pull/21725","RelatedDescription":"Closed or merged PR \"Moves ExceptionDispatchInfo to shared location\" (#21725)"},{"Id":"394907901","IsPullRequest":true,"CreatedAt":"2018-12-31T15:16:55","Actor":"benaadams","Number":"21720","RawContent":null,"Title":"Improve MdUtf8String","State":"closed","Body":"They get called in a multiplicative call chain:\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50552370-90266900-0c89-11e9-8861-16fa1f7c485f.png)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21720","RelatedDescription":"Closed or merged PR \"Improve MdUtf8String\" (#21720)"},{"Id":"394993587","IsPullRequest":true,"CreatedAt":"2018-12-31T15:14:04","Actor":"A-And","Number":"21727","RawContent":null,"Title":"[WIP] Large version bubble Support","State":"open","Body":"Opening this up for preliminary comments. \r\nThe below changes pass all Pri-0 tests both with and without the `/largeversionbubble` switch enabled. Without the switch specified the changes don't introduce any functional changes.\r\n\r\nThe two TODOs here are \r\n+ Add a specific version bubble test\r\n+ Add test-script logic to be able to easily run large version bubble crossgen tests.\r\n\r\nThese changes treat the entire input as a singular version bubble. \r\n\r\ncc @sergiy-k ","Url":"https://github.com/dotnet/coreclr/pull/21727","RelatedDescription":"Open PR \"[WIP] Large version bubble Support\" (#21727)"},{"Id":"394977475","IsPullRequest":true,"CreatedAt":"2018-12-31T13:02:16","Actor":"dotnet-maestro[bot]","Number":"21726","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18630.2\r\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18630.2\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21726","RelatedDescription":"Open PR \"Update dependency files\" (#21726)"},{"Id":"394906406","IsPullRequest":true,"CreatedAt":"2018-12-31T08:55:38","Actor":"marek-safar","Number":"21719","RawContent":null,"Title":"Moves CriticalHandle to shared location","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21719","RelatedDescription":"Closed or merged PR \"Moves CriticalHandle to shared location\" (#21719)"},{"Id":"394939833","IsPullRequest":true,"CreatedAt":"2018-12-31T08:55:13","Actor":"Dotnet-GitSync-Bot","Number":"21724","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/21724","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#21724)"},{"Id":"394910725","IsPullRequest":true,"CreatedAt":"2018-12-31T05:56:55","Actor":"kouvel","Number":"21722","RawContent":null,"Title":"Don't Sleep(1) in some spin-wait loops","State":"closed","Body":"- In spin-wait loops that are not expected to last too long, Sleep(1) significantly delays threads from completing the operation\r\n- From eliminating Sleep(1) in such spin-wait loops, there can be a tradeoff, better fairness vs worse throughput, because Sleep(1) removes threads from contention and in some cases fewer threads can make faster progress at the cost of delaying the Sleep(1) threads relatively significantly. Eliminating the Sleep(1) in such spin-wait loops seems to be a good tradeoff.\r\n- Fixes https://github.com/dotnet/corefx/issues/29595","Url":"https://github.com/dotnet/coreclr/pull/21722","RelatedDescription":"Closed or merged PR \"Don't Sleep(1) in some spin-wait loops\" (#21722)"},{"Id":"394892001","IsPullRequest":true,"CreatedAt":"2018-12-31T05:43:10","Actor":"pentp","Number":"21717","RawContent":null,"Title":"Remove parsing from GUID constants","State":"closed","Body":"In #21555 test failures I noticed that `Marshal..cctor` pulls in quite a lot of code just to parse a constant GUID.","Url":"https://github.com/dotnet/coreclr/pull/21717","RelatedDescription":"Closed or merged PR \"Remove parsing from GUID constants\" (#21717)"},{"Id":"394868063","IsPullRequest":true,"CreatedAt":"2018-12-31T05:22:08","Actor":"benaadams","Number":"21715","RawContent":null,"Title":"Remove Environment static constructor","State":"closed","Body":"Runs a bunch of stuff at startup when calling `SetCommandLineArgs` \r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50547197-414ae600-0c2d-11e9-9c93-9c6cba8dd4dc.png)\r\n\r\n\r\n```\r\n.method private hidebysig specialname rtspecialname static \r\n\tvoid .cctor () cil managed \r\n{\r\n\t// Method begins at RVA 0x3f25d3\r\n\t// Code size 59 (0x3b)\r\n\t.maxstack 8\r\n\r\n\tIL_0000: ldnull\r\n\tIL_0001: stsfld string[] System.Environment::s_CommandLineArgs\r\n\tIL_0006: ldsfld class System.Environment/'<>c' System.Environment/'<>c'::'<>9'\r\n\tIL_000b: ldftn instance bool System.Environment/'<>c'::'<.cctor>b__59_0'()\r\n\tIL_0011: newobj instance void class System.Func`1<bool>::.ctor(object, native int)\r\n\tIL_0016: newobj instance void class System.Lazy`1<bool>::.ctor(class System.Func`1<!0>)\r\n\tIL_001b: stsfld class System.Lazy`1<bool> System.Environment::s_IsWindows8OrAbove\r\n\tIL_0020: ldsfld class System.Environment/'<>c' System.Environment/'<>c'::'<>9'\r\n\tIL_0025: ldftn instance bool System.Environment/'<>c'::'<.cctor>b__59_1'()\r\n\tIL_002b: newobj instance void class System.Func`1<bool>::.ctor(object, native int)\r\n\tIL_0030: newobj instance void class System.Lazy`1<bool>::.ctor(class System.Func`1<!0>)\r\n\tIL_0035: stsfld class System.Lazy`1<bool> System.Environment::s_IsWinRTSupported\r\n\tIL_003a: ret\r\n} // end of method Environment::.cctor\r\n```\r\nAfter\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50547202-7ce5b000-0c2d-11e9-9d2a-306a385e2ff2.png)\r\n\r\n/cc @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/21715","RelatedDescription":"Closed or merged PR \"Remove Environment static constructor\" (#21715)"},{"Id":"394917830","IsPullRequest":false,"CreatedAt":"2018-12-31T01:43:38","Actor":"jaredpar","Number":"21723","RawContent":null,"Title":"Asssembly with IVT to extremely large key cannot be loaded","State":"open","Body":"**Repro Steps**\r\n\r\n- Create a .NET Standard class library and add the following IVT decelaration\r\n``` csharp\r\n[assembly: InternalsVisibleTo(\"ConsoleApp10, PublicKey=002400000480000014080000060200000024000052534131004000000100010079bb53322249125411d2b44dd63b137e1b452899a7e7f626917328ff9e25c728e3e3b503ba34deab31d1f1ae15588c4bda69eccea5b13e4a4e10b39fc2fd9f05d1ba728beb8365bad6b6da9adc653836d3ff12b9a698900c3f593cf088b2504ec949489b6f837e76fe84ddd30ccedce1d836e5b8fb149b8e9e0b8b8fbc2cdaee0e76eb549270c4df104accb72530113f431d88982ae69ed75e09530d6951722b60342eb1f5dd5babacdb365dd71597680c50fe85bce823ee902ab3377e7eef8f96168f8c8a1e8264ba94481f5208e4c21208ea312bc1a34bd0e615b39ce8948c4a4d2c0a48b0bc901dfc0519afc378f8595a77375e6c265e1c38bdc7dbf7c4d07d36b67ac94464fe5c26aed915f1c035756d0f3363fce7510f12459060f417ab5df610ffca60e6dd739dc750189f23a47716c75a7a8e3363b198f05093d2a0c9debafbfca3d682c5ea3ed578118d9dc7d0f8828cad1c03ede009d774585b9665e0c8d7325805faba80796f668f79c92b9a195bc7530bb8ecaaba07a7cfdb70c46b96ca613102b1a674bfc742fa9562704edb78063db818c0675c9bd8c18d203fc4d5bc2685003bc6c136caf07a202578cb85480d50f6187b88fb733a2f4ce200bbda68c4ef47483a3530ae8403cb38253a06e2e9385b6d3ae9a7182ba7a23f03499cec1c92ae06dde6b304c025d23466ebbbac9e06b5d7eb932fc009bc1803d035710ec7bce4a6176b407ffdc9a5b55a3ff444609172a146bf76ae40759634e8224ba2882371808f4459a37f8e69115424947818f19ff6609a715f550e33de0307195fe1e526c57efc7212d6cb561dd833cb8c28ae9dc32a4bc0f775887001a5ec36cf63e5b2aa9989d3fa29ebf57e4fa89a206a32e75bcac3c2f26c3267ec1b7433d4a3b90bc01563ddbffffe586ccfb8ee59af34e3127ebf99036427e09c107d47c1e885a032065dce6dd646305bf84fb9123392c89794318e2fdffd5eaa62d1e52d29b94e484f2fb73fea0487bbdaa1790e79fc0e09372c6187c742c8a3f160d09818f51dc58f71ff1a1ed955d9b373bfe92e09eac22241c2b96ce0213aa266f21aae95489921269bffdf5c0a0794716daf8b5daa3a496004297b3a25c6472027f4b6f9fd82d4e297546faa6ac31579a30b3da1d6c6f04125667868b536b9d9ebd767e4d1cabbaeb977ec0738dab3b599fe63ea0ec622261d90c3c0c1ebc1ab631b2162284a9659e961c541aab1658853a9a6501e73f11c9c27b8e9bf41f03187dab5909d8433499f9dfaec2a2c907e39bf1683c75c882e469e79aba05d597a24db33479fac758f5bdc4cbd79df03ec1e403f231bfb81ff9db7ee4cfe084f5c187729cc9f072d7a710651ea15f0e43f330e32172321554d7bf9fd784d18a80a13509818286616d4a7251e2c57f1c257aa0c57bd75da0b0e01532ad517de450733f8379a9db8c9f12ac77b65215d44b40eebb513ec9ddc9537f7811eb5283386422d906d26077608a1f506e966426d40cc5e61e2d7e888586c85050ec29eff79116c42c9714ad667244103a9e79af9b330825ff186b19a791b60eca8776539ca2759f9dbbd87d07f3dac38b814ae9707e473ee52e10b3e8d8344bc06287a9c6c58ab36658b4a6ab48ae2e6d08d748b35868c5207aab0831191f451595d0104968050ae1c13e0d619fa766cd90821732b9fbcc429815606704633515cbe5ad5e33a28690534748e15413c65d9a370b12946a36796aa4d8e5b471675a3471439e133476981e21e9a4dfeae52f657a5fe3ab6cd6ad8aabc09bd5d9af77226c6cfbe01fb38546b5c0b8b825e03bda13d85403765bd5a6cbed19fd09674fd691d732328948f5ab07e03d7f919eee0ac23f6de7d49ae44f15f8459683ab792270945ee2807158a5e6898cb912cbe3b0b6820565045a41699d0a5e3b89319fb921008e18bb1c28557600c33cf2c299a79213834cb9ec72ba6402699c381060cfebaa3faf52d9b2f1b68c3cc0db79ff47b293853b80ec4198c7fe099077f876f2d6c26305cab1c9de8bb8daae422e1ef7c5c76949c8d27fde90281781eef364cc001d0916108d6c0ace740521ec549d912fbaf7168bd37f790b46282684030dcdc2d52cb41d4b763adfc701a1d392166d4b3269ab30fb83a4fd1834771e0ea24680c09f55413750b082787e4bb301e107c34cfab1cc88b7d68489602cb8e46bd73c96c8de8af5285f919e93cc6251df057443460a15d432e130510f8adbaa8d28c574db7d9ef6fb947b70e274d93cfaa47d00f3318643a08815c10975722324037504d7f0e3902393d5327bc0467ea5bd555ba0671ca3873486038abeccc6d48a11c6e3ffb2acca285a53641a02233bb7e7c76ab38acf6759b985e22b18da77932c0c04217798d1473ebf41061d8c006c9479b34745fbea8a1761000d16f414a544a7dc4a5a346871981d1ed3fe4dfcb8494e95643b8bae2e13bbfcb5a432c2dfd481e1d61bab2bcc0d7140fe9b472d25112b2e241c3026a7468560ce3ed582d6872b041680bff3998d51afca45094e3e1982510fe8573ac2d3ab596d9d0c6b43a5f72c6046f24c2ac457fd440d6f8d4dd0b71399d0c1aa366e7a86c57ba5235d327da1245b5ecdf0b3e0e81a0418a5743f3fe98ef6c9236dce02463c798af2b239f6ddf2e5a5ffa198151c2ffbf932b7357e80e858c9ddb81fe8223897af61caec44ae4f07e686b1d721fa78b39c7934179786592472f8739fb90fd5ae41e118fafbb30bd7b02c3cf3def669d830f4dcdf863919c1ee6c3b68a4d66a74af3088592a4055b54738804034d134c5a92e47395955d222b04472da50de86f931084653e4b0f91ffccef2c777c80d92683f8f87b6b60733d73b0035501dd2adba2bbdf6697\")]\r\n```\r\n- Create a .NET Core console application named `ConsoleApp10`. \r\n- Sign the console application with [this key](https://github.com/dotnet/roslyn/blob/master/src/Compilers/Test/Resources/Core/SymbolsTests/snMaxSizeKey.snk)\r\n- Have the console application load the .NET Standard DLL\r\n\r\nWhen loading the DLL the runtime will issue a `FileLoadException` with the message \r\n\r\n> The given assembly name or codebase, 'C:\\Users\\jaredpar\\source\\repos\\ConsoleApp10\\ConsoleApp10\\bin\\Debug\\netcoreapp2.1\\ClassLibrary1.dll', was invalid.\r\n\r\nThis issue appears to be specific to CoreClr. The same library and console app will execute just fine when running on the Desktop or Mono runtime. \r\n\r\nNote: the key used here is quite a bit larger than a normal strong name key. It's likely a pretty uncommon scenario. Unsure how big, trying to query from the original PR https://github.com/dotnet/roslyn/pull/13910","Url":"https://github.com/dotnet/coreclr/issues/21723","RelatedDescription":"Open issue \"Asssembly with IVT to extremely large key cannot be loaded\" (#21723)"},{"Id":"394908448","IsPullRequest":true,"CreatedAt":"2018-12-30T23:06:53","Actor":"EgorBo","Number":"21721","RawContent":null,"Title":"Eliminate some bounds checks in Path","State":"open","Body":"Replaced `>=` with `>` in some places, see https://github.com/dotnet/coreclr/issues/21408\r\nExample:\r\n\r\n```csharp\r\ninternal static bool IsExtended(ReadOnlySpan<char> path)\r\n{\r\n    return path.Length >= DevicePrefixLength\r\n           && path[0] == '\\\\'\r\n           && (path[1] == '\\\\' || path[1] == '?')\r\n           && path[2] == '?'\r\n           && path[3] == '\\\\';\r\n}\r\n```\r\nBefore:\r\n\r\n```assembly\r\n; IsExtended(System.ReadOnlySpan`1<Char>)\r\n       cmp     edx,0\r\n       jbe     00007ffd`b9bca2f6\r\n       cmp     word ptr [rax],5Ch\r\n       jne     M01_L01\r\n       cmp     edx,1\r\n       jbe     00007ffd`b9bca2f6\r\n       movzx   ecx,word ptr [rax+2]\r\n       cmp     ecx,5Ch\r\n       je      M01_L00\r\n       cmp     ecx,3Fh\r\n       jne     M01_L01\r\nM01_L00:\r\n       cmp     edx,2\r\n       jbe     00007ffd`b9bca2f6\r\n       cmp     word ptr [rax+4],3Fh\r\n       jne     M01_L01\r\n       cmp     edx,3\r\n       jbe     00007ffd`b9bca2f6\r\n       cmp     word ptr [rax+6],5Ch\r\n       sete    al\r\n       movzx   eax,al\r\n       add     rsp,28h\r\n       ret\r\nM01_L01:\r\n       xor     eax,eax\r\n; Total bytes of code 65\r\n```\r\n\r\nAfter:\r\n\r\n```assembly\r\n; IsExtended(System.ReadOnlySpan`1<Char>)\r\n       cmp     word ptr [rax],5Ch\r\n       jne     M01_L01\r\n       movzx   edx,word ptr [rax+2]\r\n       cmp     edx,5Ch\r\n       je      M01_L00\r\n       cmp     edx,3Fh\r\n       jne     M01_L01\r\nM01_L00:\r\n       cmp     word ptr [rax+4],3Fh\r\n       jne     M01_L01\r\n       cmp     word ptr [rax+6],5Ch\r\n       sete    al\r\n       movzx   eax,al\r\n       ret\r\nM01_L01:\r\n       xor     eax,eax\r\n; Total bytes of code 41\r\n```\r\n\r\nAlso, improved `IsDirectorySeparator` with a hack introduced for `string.IsNullOrEmpty` in https://github.com/dotnet/coreclr/pull/17512. `IsDirectorySeparator` is used in many places.\r\nLet's say we have\r\n```csharp\r\nbool Test(ReadOnlySpan<char> path)\r\n{\r\n    return IsDirectorySeparator1(path[1]) && IsDirectorySeparator1(path[0]);\r\n}\r\n```\r\nBefore:\r\n```assembly\r\n; Test(System.ReadOnlySpan`1<Char>)\r\n       cmp     edx,1\r\n       jbe     00007ffd`b9baac0a\r\n       movzx   edx,word ptr [rax+2]\r\n       cmp     edx,5Ch\r\n       je      M01_L00\r\n       cmp     edx,2Fh\r\n       sete    dl\r\n       movzx   edx,dl\r\n       test    edx,edx\r\n       je      M01_L03\r\nM01_L00:\r\n       movzx   eax,word ptr [rax]\r\n       cmp     eax,5Ch\r\n       je      M01_L01\r\n       cmp     eax,2Fh\r\n       sete    al\r\n       movzx   eax,al\r\n       jmp     M01_L02\r\nM01_L01:\r\n       mov     eax,1\r\nM01_L02:\r\n       add     rsp,28h\r\n       ret\r\nM01_L03:\r\n       xor     eax,eax\r\n; Total bytes of code 58\r\n```\r\nAfter:\r\n```assembly\r\n; Test(System.ReadOnlySpan`1<Char>)\r\n       cmp     edx,1\r\n       jbe     00007ffd`b9bcac00\r\n       movzx   edx,word ptr [rax+2]\r\n       cmp     edx,5Ch\r\n       je      M01_L00\r\n       cmp     edx,2Fh\r\n       jne     M01_L03\r\nM01_L00:\r\n       movzx   eax,word ptr [rax]\r\n       cmp     eax,5Ch\r\n       je      M01_L01\r\n       cmp     eax,2Fh\r\n       je      M01_L01\r\n       xor     eax,eax\r\n       jmp     M01_L02\r\nM01_L01:\r\n       mov     eax,1\r\nM01_L02:\r\n       add     rsp,28h\r\n       ret\r\nM01_L03:\r\n       xor     eax,eax\r\n; Total bytes of code 48\r\n```\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21721","RelatedDescription":"Open PR \"Eliminate some bounds checks in Path\" (#21721)"},{"Id":"394840003","IsPullRequest":true,"CreatedAt":"2018-12-30T21:17:32","Actor":"benaadams","Number":"21713","RawContent":null,"Title":"[WIP] Deactivate ThreadPool local queues when idle","State":"closed","Body":"1. Defer adding local queue to list of active queues to potentially steal from until to first local item queued rather than thread creation.\r\n\r\n2. Remove thread's local queue from list of active queues if the thread finds no work to do i.e. nothing in global or its own local queue (or any other local queue/missed steal) - e.g. thread is idling.\r\n\r\n3. Readd when next local item is queued (e.g. back to step 1.)\r\n\r\nResolves: #19088","Url":"https://github.com/dotnet/coreclr/pull/21713","RelatedDescription":"Closed or merged PR \"[WIP] Deactivate ThreadPool local queues when idle\" (#21713)"},{"Id":"394888819","IsPullRequest":true,"CreatedAt":"2018-12-30T17:38:00","Actor":"pentp","Number":"21716","RawContent":null,"Title":"EventPipePayloadDecoder clean-up","State":"open","Body":"Replaced one allocation with a stackalloc and cleaned up some code.\r\nBut the GUID reading code still looks a bit weird...","Url":"https://github.com/dotnet/coreclr/pull/21716","RelatedDescription":"Open PR \"EventPipePayloadDecoder clean-up\" (#21716)"},{"Id":"394860811","IsPullRequest":true,"CreatedAt":"2018-12-30T15:35:42","Actor":"benaadams","Number":"21714","RawContent":null,"Title":"Use EventSource guid ctor for RuntimeEventSource","State":"closed","Body":"Drops the GetGuid reflection path for it in startup\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50546156-03dd5d00-0c1b-11e9-9995-c5f9c2a8e5f9.png)\r\nTo\r\n![image](https://user-images.githubusercontent.com/1142958/50546163-1d7ea480-0c1b-11e9-946e-547be4a9d59b.png)\r\n\r\n/cc @jkotas @vancem @brianrob","Url":"https://github.com/dotnet/coreclr/pull/21714","RelatedDescription":"Closed or merged PR \"Use EventSource guid ctor for RuntimeEventSource\" (#21714)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"395081277","IsPullRequest":true,"CreatedAt":"2019-01-01T13:02:15","Actor":"dotnet-maestro[bot]","Number":"10532","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18631.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10532","RelatedDescription":"Open PR \"Update dependency files\" (#10532)"},{"Id":"395061414","IsPullRequest":false,"CreatedAt":"2019-01-01T12:59:20","Actor":"HassanHashemi","Number":"10531","RawContent":null,"Title":"\"ConsoleLogger\" logger failed unexpectedly during initialization.","State":"closed","Body":"I may be wrong to post this here, but i think it's a bug. so..\r\n\r\n`dotnet run` throws this:\r\n\r\nMSBUILD : error MSB4016: The build stopped unexpectedly because the \"ConsoleLogger\" logger failed unexpectedly during initialization. Bad flags on delegate constructor.\r\nThe build failed. Please fix the build errors and run again.\r\n\r\nEven though the app is fine.\r\n\r\n## Expected  behavior\r\nRun the app.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10531","RelatedDescription":"Closed issue \"\"ConsoleLogger\" logger failed unexpectedly during initialization.\" (#10531)"},{"Id":"395045837","IsPullRequest":true,"CreatedAt":"2019-01-01T00:49:12","Actor":"wli3","Number":"10530","RawContent":null,"Title":"Interactive on build, clean, pack, publish verb","State":"open","Body":"part of https://github.com/dotnet/cli/issues/10529\r\n\r\nMake InteractiveOption a CommonOptions and add to the following\r\n\r\nbuild, clean, pack, publish\r\n\r\n-------------\r\n- test and run are problematic since they are quiet by default and it will not print auth instruction. Need more discussion\r\n- why do not create command option list for option like verbose, no restore and interactive? If you look at the usage of these options. They don't have the same count and it is hard to make sense what is in common(the big verbs?). Also the existing syntax uses param for method argument. To have a common option list, I need to make existing options a list and then concat the option list. It is harder to follow.","Url":"https://github.com/dotnet/cli/pull/10530","RelatedDescription":"Open PR \"Interactive on build, clean, pack, publish verb\" (#10530)"},{"Id":"395045294","IsPullRequest":false,"CreatedAt":"2019-01-01T00:37:50","Actor":"wli3","Number":"10529","RawContent":null,"Title":"--interactive on most of the commands","State":"open","Body":"1. If a project require --interactive to auth, it cannot restore without `--interactive` and many command require restore to function\r\n\r\n2. Custom MSBuild SDK also require `--interactive` if it is from a private feed.\r\n\r\nThat results most of the CLI command need `--interactive` option\r\n\r\n- [x] add package \r\n- [ ] add reference    -- Microsoft.Build.Evaluation \r\n- [ ] build \r\n- [ ] clean\r\n- [ ] list package      ? redirect to nuget.xplat \r\n- [ ] list reference    -- Microsoft.Build.Evaluation \r\n- [ ] new               ? technically do but it requires private template \r\n- [ ] pack             \r\n- [ ] publish           \r\n- [ ] remove            \r\n- [x] restore           \r\n- [ ] run               Quiet \r\n- [ ] test              Quiet\r\n- [x] tool","Url":"https://github.com/dotnet/cli/issues/10529","RelatedDescription":"Open issue \"--interactive on most of the commands\" (#10529)"},{"Id":"395028382","IsPullRequest":false,"CreatedAt":"2018-12-31T20:27:36","Actor":"dsplaisted","Number":"10528","RawContent":null,"Title":"Handle RID asset selection in SDK instead of NuGet","State":"open","Body":"# Proposal\r\n\r\n- Make NuGet restore agnostic of runtime identifiers (RIDs) and the RID graph\r\n- SDK will include RID graph (https://github.com/dotnet/cli/issues/10104)\r\n- SDK will use RID graph to select best matching runtime and apphost packs (https://github.com/dotnet/cli/issues/10095)\r\n- NuGet will not use the RID or the RID graph as part of restore\r\n- The assets file will only have one target pertarget framework\r\n- RID-specific assets from NuGet packages will always be written as runtimeTargets assets to the assets file, never as native assets\r\n- When building or publishing for a specific RID, the SDK will be responsible for selecting the appropriate native assets for the target RID from the runtimeTargets assets in the assets file (using the RID graph included in the SDK)\r\n- Repurpose RuntimeIdentifiers property to specify a list of RIDs for which targeting packs should be downloaded\r\n\r\n# Benefits\r\n\r\n- RID can be specified at build or publish time without having to re-restore (modulo possible PackageDownload for runtime packs)\r\n- Further reduce asset file size\r\n- Simplify NuGet logic (RID graph, two-phase restore)\r\n\r\n# Open questions\r\n\r\n- Targeting earlier versions of .NET Core - currently we depend on NuGet to get the runtime assets for self-contained publish, via RID-specific dependencies specified in runtime.json in Microsoft.NETCore.App package\r\n- Multitargeting - means we can't easily have different RID handling by NuGet for .NET Core 3.0 and prior versions","Url":"https://github.com/dotnet/cli/issues/10528","RelatedDescription":"Open issue \"Handle RID asset selection in SDK instead of NuGet\" (#10528)"},{"Id":"394977550","IsPullRequest":true,"CreatedAt":"2018-12-31T18:30:53","Actor":"dotnet-maestro[bot]","Number":"10527","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18630.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10527","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10527)"},{"Id":"394746787","IsPullRequest":true,"CreatedAt":"2018-12-31T18:13:46","Actor":"wli3","Number":"10524","RawContent":null,"Title":"Add --interactive to dotnet tools","State":"closed","Body":"fix https://github.com/dotnet/cli/issues/10231","Url":"https://github.com/dotnet/cli/pull/10524","RelatedDescription":"Closed or merged PR \"Add --interactive to dotnet tools\" (#10524)"},{"Id":"394977535","IsPullRequest":true,"CreatedAt":"2018-12-31T13:02:41","Actor":"dotnet-maestro[bot]","Number":"10526","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18630.2\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18631.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10526","RelatedDescription":"Open PR \"Update dependency files\" (#10526)"},{"Id":"394794173","IsPullRequest":true,"CreatedAt":"2018-12-30T17:31:02","Actor":"dotnet-maestro[bot]","Number":"10525","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18627.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18629.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10525","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10525)"},{"Id":"394743363","IsPullRequest":false,"CreatedAt":"2018-12-29T00:29:55","Actor":"wli3","Number":"10523","RawContent":null,"Title":"Remove workaround to output minimal when \"--interactive\" is used in dotnet tools","State":"open","Body":"when https://github.com/NuGet/NuGet.Client/pull/2577 is merged and inserted to CLI\r\n\r\nToday output quiet will break \"--interacitve\" experience since it will output nothing. However, minimal output will have the temp project path. After the above nuget change, minimal output will not have temp project path anymore, so the workaround can be removed","Url":"https://github.com/dotnet/cli/issues/10523","RelatedDescription":"Open issue \"Remove workaround to output minimal when \"--interactive\" is used in dotnet tools\" (#10523)"},{"Id":"394743217","IsPullRequest":true,"CreatedAt":"2018-12-29T00:27:56","Actor":"livarcocc","Number":"10522","RawContent":null,"Title":"Fixing the version for some of our packages","State":"open","Body":"Fixing the version for some of our packages that still referenced CLIVersionPrefix set.\r\n","Url":"https://github.com/dotnet/cli/pull/10522","RelatedDescription":"Open PR \"Fixing the version for some of our packages\" (#10522)"},{"Id":"394457352","IsPullRequest":true,"CreatedAt":"2018-12-29T00:22:47","Actor":"wli3","Number":"10510","RawContent":null,"Title":"Add IsOutputRedirected to TelemetryCommonProperties","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10510","RelatedDescription":"Closed or merged PR \"Add IsOutputRedirected to TelemetryCommonProperties\" (#10510)"},{"Id":"394730339","IsPullRequest":true,"CreatedAt":"2018-12-28T23:35:08","Actor":"johnbeisner","Number":"10520","RawContent":null,"Title":"Repair the Absolutepath; part 2","State":"closed","Body":"Addresses: #10293\r\n\r\nPR: https://github.com/dotnet/cli/pull/10512 was not complete\r\n \r\nChange:\r\nDo not cast 'Source' to a variable type - allow usage to do the typing; variable name is now: \"Source\" not: \"Uri\".\r\n\r\n@jerickmsft\r\n","Url":"https://github.com/dotnet/cli/pull/10520","RelatedDescription":"Closed or merged PR \"Repair the Absolutepath; part 2\" (#10520)"},{"Id":"394730948","IsPullRequest":false,"CreatedAt":"2018-12-28T22:27:40","Actor":"robertmclaws","Number":"10521","RawContent":null,"Title":"dotnet restore ignores PackageReferences in imported Projects","State":"open","Body":"This may be somewhat related to #7411. I'm trying to standardize my build environment against almost 2 dozen NuGet package projects in my enterprise, and using a build.props format similar to the [ASP.NET Core team](https://github.com/aspnet/AspNetCore/blob/master/Directory.Build.props) in order to do so. However, I've run into a significant limitation in the CLI/NuGet.\r\n\r\n## Steps to reproduce\r\n\r\n1. Create a csproj file with `dotnet new classlib`.\r\n2. Create a file in the directory above it called `Test.build.props`, and add the following code:\r\n```\r\n  <PropertyGroup>\r\n    <IsBenchmarkProject Condition=\"$(MSBuildProjectName.EndsWith('.Performance'))\">true</IsBenchmarkProject>\r\n    <IsTestProject Condition=\"$(MSBuildProjectName.Contains('.Tests.'))\">true</IsTestProject>\r\n    <IsTestAssetProject Condition=\"$(RepoRelativeProjectDir.Contains('testassets'))\">true</IsTestAssetProject>\r\n    <IsSampleProject Condition=\"$(MSBuildProjectName.Contains('.Samples.'))\">true</IsSampleProject>\r\n    \r\n    <IncludeSource>false</IncludeSource>\r\n    <IncludeSymbols>true</IncludeSymbols>\r\n  </PropertyGroup>\r\n\r\n  <!-- Build NuGet packages for non-resource projects -->\r\n  <PropertyGroup Condition=\" '$(IsBenchmarkProject)' != 'true' And '$(IsTestProject)' != 'true' And '$(IsTestAssetProject)' != 'true' And '!$(IsSampleProject)' != 'true' and $(Configuration) != 'Release' \">\r\n    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>\r\n    <GenerateDocumentationFile>true</GenerateDocumentationFile>\r\n  </PropertyGroup>\r\n```\r\n3. Edit the first csproj file and add `<Import Project=\"..\\Test.build.props\" />` as the first line under the root node.\r\n4. Save the files and run `dotnet restore`. **Everything seems to be fine.**\r\n\r\nSo this is a great way to make sure that every project has identical properties for certain NuGet package properties and so forth. But let's say you want to unify your testing process and make it so that every Test project automatically references `FluentAssertions` and it's corresponding Roslyn Analyzer. \r\n\r\n5. Add the following code to `Test.build.props`:\r\n```\r\n  <!-- Build NuGet packages for non-resource projects -->\r\n  <ItemGroup Condition=\" '$(IsTestProject)' == 'true' \">\r\n    <PackageReference Include=\"FluentAssertions\" Version=\"5.5.3\" />\r\n    <PackageReference Include=\"FluentAssertions.Analyzers\" Version=\"0.11.4\" />\r\n  </ItemGroup>\r\n```\r\n6. Save the file and run `dotnet restore`.\r\n7. Navigate to the first project's `obj` folder and open `project.assets.json`.\r\n8. Search for \"Fluent\" in the file. **Note that it presently is not found.**\r\n\r\n## Expected behavior\r\nI would expect the CLI would see the project as a composite of all its' references, and find every PackageReference in the chain.\r\n\r\n## Actual behavior\r\nThe CLI apparently only reads the file passed in, and not any connected files, so it doesn't even know that other PackageReferences exist. The files will be missing from any restores, Azure DevOps' VSBuild will fail. \r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10521","RelatedDescription":"Open issue \"dotnet restore ignores PackageReferences in imported Projects\" (#10521)"},{"Id":"394596504","IsPullRequest":false,"CreatedAt":"2018-12-28T21:25:57","Actor":"EvgenyAgafonchikov","Number":"10517","RawContent":null,"Title":"Project name symbols are dropped in sln add command","State":"closed","Body":"## Steps to reproduce\r\nCould be reproed on my Windows 8.1 PC with existing public repo. The same works as expected on another Windows 10 PC.\r\n\r\n1. clone https://github.com/Azure/azure-powershell\r\n2. open cmd from this folder\r\n3. run `dotnet msbuild build.proj`\r\n\r\n## Expected  behavior\r\n\r\nBuild succeeded\r\n\r\n## Actual behavior\r\n\r\nBuild fails at `sln add` stage. Note missing symbol in error message (`ServiceBus\\ommands`) while full command contains correct path with 'C'. Random symbol is dropped depending on the branch selected.\r\nAnother note there is in case I try this command manually, it is truncated due to cmd command length restriction.\r\n\r\n```\r\nCould not find project or directory `D:\\PS\\azure-powershell\\src\\ResourceManager\\ServiceBus\\ommands.ServiceBus\\Commands.ServiceBus.Netcore.csproj`.\r\n \r\n```\r\n\r\nFull output:\r\n```\r\nD:\\PS\\azure-powershell>dotnet msbuild build.proj\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Building Cmdlets...\r\n  2.2.101\r\n  The template \"Solution File\" was created successfully.\r\n  Could not find project or directory `D:\\PS\\azure-powershell\\src\\ResourceManager\\ServiceBus\\ommands.ServiceBus\\Commands.ServiceBus.Netcore.csproj`.\r\n  Usage: dotnet sln <SLN_FILE> add [options] <PROJECT_PATH>\r\n\r\n  Arguments:\r\n    <SLN_FILE>       The solution file to operate on. If not specified, the command will search the current directory for one.\r\n    <PROJECT_PATH>   The paths to the projects to add to the solution.\r\n\r\n  Options:\r\n    -h, --help   Show command line help.\r\nD:\\PS\\azure-powershell\\build.proj(227,5): error MSB3073: The command \"dotnet sln Azure.PowerShell.sln add D:\\PS\\azure-powershell\\src\\ResourceManager\\Advisor\\Commands.Advisor\\Commands.Advisor.Netcore.c\r\nsproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Aks\\Commands.Aks\\Commands.Aks.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\AnalysisServices\\Commands.AnalysisServices.Dataplane\\Commands.A\r\nnalysisServices.Dataplane.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\AnalysisServices\\Commands.AnalysisServices\\Commands.AnalysisServices.Netcore.csproj D:\\PS\\azure-powershell\\src\\Resou\r\nrceManager\\ApiManagement\\Commands.ApiManagement.ServiceManagement\\Commands.ApiManagement.ServiceManagement.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\ApiManagement\\Commands.ApiManagemen\r\nt\\Commands.ApiManagement.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\ApplicationInsights\\Commands.ApplicationInsights\\Commands.ApplicationInsights.Netcore.csproj D:\\PS\\azure-powershell\\s\r\nrc\\ResourceManager\\Automation\\Commands.Automation\\Commands.Automation.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\AzureBatch\\BatchModelGenerator\\BatchModelGenerator.Netcore.csproj D:\\PS\\\r\nazure-powershell\\src\\ResourceManager\\AzureBatch\\Commands.Batch\\Commands.Batch.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Billing\\Commands.Billing\\Commands.Billing.Netcore.csproj D:\\PS\\a\r\nzure-powershell\\src\\ResourceManager\\Billing\\Commands.Consumption\\Commands.Consumption.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Billing\\Commands.UsageAggregates\\Commands.UsageAggregate\r\ns.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Cdn\\Commands.Cdn\\Commands.Cdn.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\CognitiveServices\\Commands.Management.CognitiveServi\r\nces\\Commands.Management.CognitiveServices.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Compute\\Commands.Compute\\Commands.Compute.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\\r\nContainerInstance\\Commands.ContainerInstance\\Commands.ContainerInstance.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\ContainerRegistry\\Commands.ContainerRegistry\\Commands.ContainerRegistr\r\ny.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\DataFactoryV2\\Commands.DataFactories\\Commands.DataFactories.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\DataFactoryV2\\Commands\r\n.DataFactoryV2\\Commands.DataFactoryV2.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\DataLakeAnalytics\\Commands.DataLakeAnalytics\\Commands.DataLakeAnalytics.Netcore.csproj D:\\PS\\azure-power\r\nshell\\src\\ResourceManager\\DataLakeStore\\Commands.DataLakeStore\\Commands.DataLakeStore.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\DataMigration\\Commands.DataMigration\\Commands.DataMigrat\r\nion.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\DeviceProvisioningServices\\Commands.DeviceProvisioningServices\\Commands.DeviceProvisioningServices.Netcore.csproj D:\\PS\\azure-powershell\\s\r\nrc\\ResourceManager\\DevSpaces\\Commands.DevSpaces\\Commands.DevSpaces.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\DevTestLabs\\Commands.DevTestLabs\\Commands.DevTestLabs.Netcore.csproj D:\\PS\\\r\nazure-powershell\\src\\ResourceManager\\Dns\\Commands.Dns\\Commands.Dns.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\EventGrid\\Commands.EventGrid\\Commands.EventGrid.Netcore.csproj D:\\PS\\azure-\r\npowershell\\src\\ResourceManager\\EventHub\\Commands.EventHub\\Commands.EventHub.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\FrontDoor\\Commands.FrontDoor\\Commands.FrontDoor.Netcore.csproj D:\\\r\nPS\\azure-powershell\\src\\ResourceManager\\HDInsight\\Commands.HDInsight\\Commands.HDInsight.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Insights\\Commands.Insights\\Commands.Insights.Netcore.c\r\nsproj D:\\PS\\azure-powershell\\src\\ResourceManager\\IotCentral\\Commands.IotCentral\\Commands.IotCentral.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\IotHub\\Commands.IotHub\\Commands.IotHub.Net\r\ncore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\KeyVault\\Commands.KeyVault\\Commands.KeyVault.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Kusto\\Commands.Kusto\\Commands.Kusto.Netcor\r\ne.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\LogicApp\\Commands.LogicApp\\Commands.LogicApp.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\MachineLearning\\Commands.MachineLearningCompu\r\nte\\Commands.MachineLearningCompute.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\MachineLearning\\Commands.MachineLearning\\Commands.MachineLearning.Netcore.csproj D:\\PS\\azure-powershell\\src\r\n\\ResourceManager\\ManagedServiceIdentity\\Commands.ManagedServiceIdentity\\Commands.ManagedServiceIdentity.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\ManagementPartner\\Commands.Partner\\Com\r\nmands.Partner.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Maps\\Commands.Maps\\Commands.Maps.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\MarketplaceOrdering\\Commands.Marketpl\r\naceOrdering\\Commands.MarketplaceOrdering.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Media\\Commands.Media\\Commands.Media.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Network\r\n\\Commands.Network\\Commands.Network.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\NotificationHubs\\Commands.NotificationHubs\\Commands.NotificationHubs.Netcore.csproj D:\\PS\\azure-powershell\\\r\nsrc\\ResourceManager\\OperationalInsights\\Commands.OperationalInsights\\Commands.OperationalInsights.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\PolicyInsights\\Commands.PolicyInsights\\Comma\r\nnds.PolicyInsights.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\PowerBIEmbedded\\Commands.Management.PowerBIEmbedded\\Commands.Management.PowerBIEmbedded.Netcore.csproj D:\\PS\\azure-powershe\r\nll\\src\\ResourceManager\\PowerBIEmbedded\\Commands.PowerBI\\Commands.PowerBI.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Profile\\Commands.Profile\\Commands.Profile.Netcore.csproj D:\\PS\\azure-\r\npowershell\\src\\ResourceManager\\RecoveryServices\\Commands.RecoveryServices.Backup.Helpers\\Commands.RecoveryServices.Backup.Helpers.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\RecoveryServ\r\nices\\Commands.RecoveryServices.Backup.Logger\\Commands.RecoveryServices.Backup.Logger.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\RecoveryServices\\Commands.RecoveryServices.Backup.Models\\\r\nCommands.RecoveryServices.Backup.Models.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\RecoveryServices\\Commands.RecoveryServices.Backup.Providers\\Commands.RecoveryServices.Backup.Providers\r\n.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\RecoveryServices\\Commands.RecoveryServices.Backup.ServiceClientAdapter\\Commands.RecoveryServices.Backup.ServiceClientAdapter.Netcore.csproj D\r\n:\\PS\\azure-powershell\\src\\ResourceManager\\RecoveryServices\\Commands.RecoveryServices.Backup\\Commands.RecoveryServices.Backup.Cmdlets.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\RecoveryS\r\nervices\\Commands.RecoveryServices.SiteRecovery\\Commands.RecoveryServices.SiteRecovery.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\RecoveryServices\\Commands.RecoveryServices\\Commands.Reco\r\nveryServices.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\RedisCache\\Commands.RedisCache\\Commands.RedisCache.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Relay\\Commands.Relay\r\n\\Commands.Relay.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Reservations\\Commands.Reservations\\Commands.Reservations.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\ResourceGra\r\nph\\Commands.ResourceGraph\\Commands.ResourceGraph.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Resources\\Commands.ResourceManager\\Cmdlets\\Commands.Resources.Rest.Netcore.csproj D:\\PS\\azure\r\n-powershell\\src\\ResourceManager\\Resources\\Commands.Resources\\Commands.Resources.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Resources\\Commands.Tags\\Commands.Tags.Netcore.csproj D:\\PS\\azu\r\nre-powershell\\src\\ResourceManager\\Search\\Commands.Management.Search\\Commands.Management.Search.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Security\\Commands.Security\\Commands.Security.Ne\r\ntcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\ServiceBus\\Commands.ServiceBus\\Commands.ServiceBus.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\ServiceFabric\\Commands.ServiceFabri\r\nc\\Commands.ServiceFabric.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\SignalR\\Commands.SignalR\\Commands.SignalR.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Sql\\Commands.Sql\\\r\nCommands.Sql.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Sql\\LegacySdk\\SqlManagement.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\StorageSync\\Commands.StorageSync\\Commands.S\r\ntorageSync.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Storage\\Commands.Management.Storage\\Commands.Management.Storage.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Storage\\C\r\nommands.Storage\\Commands.Storage.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\StreamAnalytics\\Commands.StreamAnalytics\\Commands.StreamAnalytics.Netcore.csproj D:\\PS\\azure-powershell\\src\\R\r\nesourceManager\\Subscription\\Commands.Subscription\\Commands.Subscription.Netcore.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\TrafficManager\\Commands.TrafficManager2\\Commands.TrafficManager.Netcor\r\ne.csproj D:\\PS\\azure-powershell\\src\\ResourceManager\\Websites\\Commands.Websites\\Commands.Websites.Netcore.csproj\" exited with code 1.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003121 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/cli/issues/10517","RelatedDescription":"Closed issue \"Project name symbols are dropped in sln add command\" (#10517)"},{"Id":"394687183","IsPullRequest":true,"CreatedAt":"2018-12-28T21:24:03","Actor":"livarcocc","Number":"10519","RawContent":null,"Title":"Increasing the parallel legs for windows CI legs to 99.","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10519","RelatedDescription":"Closed or merged PR \"Increasing the parallel legs for windows CI legs to 99.\" (#10519)"},{"Id":"394466750","IsPullRequest":true,"CreatedAt":"2018-12-28T18:25:40","Actor":"johnbeisner","Number":"10512","RawContent":null,"Title":"Repair the Absolutepath","State":"closed","Body":"Addresses: https://github.com/dotnet/cli/issues/10293\r\n","Url":"https://github.com/dotnet/cli/pull/10512","RelatedDescription":"Closed or merged PR \"Repair the Absolutepath\" (#10512)"},{"Id":"394632233","IsPullRequest":true,"CreatedAt":"2018-12-28T17:37:30","Actor":"dotnet-maestro[bot]","Number":"10518","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18627.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10518","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10518)"},{"Id":"394565283","IsPullRequest":false,"CreatedAt":"2018-12-28T07:07:27","Actor":"mhamri","Number":"10516","RawContent":null,"Title":"Dotnet restore bahave differently on linux and windows","State":"open","Body":"## Steps to reproduce\r\n1- create two projects with .netcore 2.2, `Project A` is a class library and `Project B` is a asp.net core project\r\n2- Project B depends on the Project A\r\n3- in project A which is class library i have an extension file. \r\n```C#\r\nusing Microsoft.AspNetCore.Http;\r\n\r\nnamespace CompanyName.ProjectALibrary\r\n{\r\n    public static class FileTypes\r\n    {\r\n        public static bool IsImage(this IFormFile file)\r\n        {\r\n            return file != null && file.ContentType.Contains(\"image\");\r\n        }\r\n    }\r\n}\r\n```\r\nproject A only has one `Microsoft.NETCore.App 2.2.0` nuget package\r\nbuild with visual studio and `dotnet build` on windows is successful without any error, even with nuget cache clean\r\n\r\nbuild on linux will generate this error:\r\n\r\n````CMD\r\nubuntu@ip-192-168-1-12:/var/www/html/ProjectBnet/source/ProjectB/ProjectB/src/CompanyName.ProjectB$ dotnet restore\r\n  Restore completed in 46.34 ms for /var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj.\r\n  Restore completed in 56.63 ms for /var/www/html/ProjectBnet/source/ProjectB/ProjectB/src/CompanyName.ProjectB/CompanyName.ProjectB.csproj.\r\n  Restore completed in 10.82 ms for /var/www/html/ProjectBnet/source/ProjectB/ProjectB/src/CompanyName.ProjectB/CompanyName.ProjectB.csproj.\r\nubuntu@ip-192-168-1-12:/var/www/html/ProjectBnet/source/ProjectB/ProjectB/src/CompanyName.ProjectB$ dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 47.06 ms for /var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj.\r\n  Restore completed in 59.92 ms for /var/www/html/ProjectBnet/source/ProjectB/ProjectB/src/CompanyName.ProjectB/CompanyName.ProjectB.csproj.\r\n  Restore completed in 10.83 ms for /var/www/html/ProjectBnet/source/ProjectB/ProjectB/src/CompanyName.ProjectB/CompanyName.ProjectB.csproj.\r\n/usr/share/dotnet/sdk/2.2.101/Microsoft.ProjectA.CurrentVersion.targets(2110,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"Microsoft.AspNetCore.Http.Features, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj]\r\nFileTypes.cs(1,17): error CS0234: The type or namespace name 'AspNetCore' does not exist in the namespace 'Microsoft' (are you missing an assembly reference?) [/var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj]\r\nFileTypes.cs(7,41): error CS0246: The type or namespace name 'IFormFile' could not be found (are you missing a using directive or an assembly reference?) [/var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/share/dotnet/sdk/2.2.101/Microsoft.ProjectA.CurrentVersion.targets(2110,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"Microsoft.AspNetCore.Http.Features, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj]\r\nFileTypes.cs(1,17): error CS0234: The type or namespace name 'AspNetCore' does not exist in the namespace 'Microsoft' (are you missing an assembly reference?) [/var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj]\r\nFileTypes.cs(7,41): error CS0246: The type or namespace name 'IFormFile' could not be found (are you missing a using directive or an assembly reference?) [/var/www/html/ProjectBnet/source/ProjectB/ProjectA/src/CompanyName.ProjectA/CompanyName.ProjectA.csproj]\r\n    1 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:02.99\r\n````\r\n\r\n## Expected  behavior\r\n\r\nboth behave same, both throw error or both pass successfully\r\n## Actual behavior\r\non windows pass and on linux fail, i understand that it can be fixed by refering to correct nuget package on project A, but the point is my build pipeline shouldn't fail because of this things, a successful build on windows should result a successful build on windows. \r\n\r\n## Environment data\r\n`dotnet --info` windows output:\r\n\r\n```CMD\r\nC:\\Users\\user-dev\\source\\repos\\user\\ProjectB\\ProjectB\\src\\CompanyName.ProjectB>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n`dotnet --info` linux output:\r\n```CMD\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.101/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.200 [/usr/share/dotnet/sdk]\r\n  2.2.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10516","RelatedDescription":"Open issue \"Dotnet restore bahave differently on linux and windows\" (#10516)"},{"Id":"394503605","IsPullRequest":false,"CreatedAt":"2018-12-27T23:53:53","Actor":"KathleenDollard","Number":"10514","RawContent":null,"Title":"Nightly build install fails","State":"closed","Body":"## Steps to reproduce\r\nOn a Mac:\r\nInstall nightly build via the SDK installer\r\nRun either `dotnet --info` (results below) or `dotnet <valid command>`\r\n\r\n## Expected  behavior\r\nThings to work as requested\r\n\r\n## Actual behavior\r\nThe error as shown below. The command does not execute. \r\n\r\n## Environment data\r\n```bash\r\n~ $ dotnet --info\r\nError:\r\n  An assembly specified in the application dependencies manifest (dotnet.deps.json) was not found:\r\n    package: 'System.Security.Cryptography.ProtectedData', version: '4.3.0'\r\n    path: 'runtimes/unix/lib/netstandard1.3/System.Security.Cryptography.ProtectedData.dll'\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27218-01\r\n  Commit:  d40b87f29d\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [/usr/local/share/dotnet/sdk]\r\n  2.0.3 [/usr/local/share/dotnet/sdk]\r\n  2.1.3 [/usr/local/share/dotnet/sdk]\r\n  2.1.300-preview1-008174 [/usr/local/share/dotnet/sdk]\r\n  2.1.300-preview2-008065 [/usr/local/share/dotnet/sdk]\r\n  2.1.300-preview2-008260 [/usr/local/share/dotnet/sdk]\r\n  2.1.300-preview2-008530 [/usr/local/share/dotnet/sdk]\r\n  2.1.300-preview2-008533 [/usr/local/share/dotnet/sdk]\r\n  2.1.301 [/usr/local/share/dotnet/sdk]\r\n  2.1.400-preview-009130 [/usr/local/share/dotnet/sdk]\r\n  2.1.401 [/usr/local/share/dotnet/sdk]\r\n  2.1.403 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009974 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-30171 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-30475 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-30171 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-30475 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview3-26411-06 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27218-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10514","RelatedDescription":"Closed issue \"Nightly build install fails\" (#10514)"},{"Id":"394503873","IsPullRequest":false,"CreatedAt":"2018-12-27T23:46:53","Actor":"KathleenDollard","Number":"10515","RawContent":null,"Title":"Tarball and pkg/SDK installer versions are different in nightly build","State":"closed","Body":"tarball:\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview-009844 [/Users/kathleen/Downloads/dotnet-sdk-latest-osx-x64/sdk]\r\n\r\npkg:\r\n  3.0.100-preview-009974 [/usr/local/share/dotnet/sdk]\r\n\r\nExpect them to be the same \r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10515","RelatedDescription":"Closed issue \"Tarball and pkg/SDK installer versions are different in nightly build\" (#10515)"},{"Id":"394470174","IsPullRequest":false,"CreatedAt":"2018-12-27T19:20:39","Actor":"peterhuene","Number":"10513","RawContent":null,"Title":"Unbound variable `DOTNET_INSTALL_DIR` in `eng/restore-toolset.sh`","State":"open","Body":"## Steps to reproduce\r\n\r\n1. `git clone https://github.com/dotnet/cli`\r\n2. `cd cli`\r\n2. `./build.sh`\r\n3. `./build.sh`\r\n\r\n## Expected  behavior\r\n\r\nThe second build should succeed.\r\n\r\n## Actual behavior\r\n\r\n`eng/restore-toolset.sh: line 46: DOTNET_INSTALL_DIR: unbound variable`\r\n\r\n## Workaround\r\n\r\n`DOTNET_INSTALL_DIR=$(pwd)/.dotnet ./build.sh`\r\n\r\n## Environment data\r\n\r\nRepros on macOS 10.14 and Ubuntu 16.04.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10513","RelatedDescription":"Open issue \"Unbound variable `DOTNET_INSTALL_DIR` in `eng/restore-toolset.sh`\" (#10513)"},{"Id":"394461426","IsPullRequest":false,"CreatedAt":"2018-12-27T18:33:50","Actor":"garrychnca","Number":"10511","RawContent":null,"Title":"%2F in path not properly interpreted when dotnet build","State":"open","Body":"## Steps to reproduce\r\nIn linux, put the solution folder under a path which contains \"%2F\" (the url-encoded of /) and run `dotnet build` under the project folder.\r\n\r\nIn my case:\r\n1.  create a folder named \"temp%2Ftemp\"\r\n2.  put the solution folder under the \"temp%2Ftemp\" folder\r\n3.  run `dotnet build`  under the project folder within the solution folder\r\n\r\n## Expected  behavior\r\nThe command should build the project without any error.\r\n\r\n## Actual behavior\r\n```\r\n\r\n[root@vm api]# pwd\r\n/root/workspace/repos/temp%2Ftemp/solution/api\r\n[root@vm api]# dotnet build --verbosity normal\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 12/27/18 10:11:22 AM.\r\n     1>Project \"/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj\" on node 1 (Restore target(s)).\r\n     1>Restore:\r\n         Committing restore...\r\n         Assets file has not changed. Skipping assets file writing. Path: /root/workspace/repos/temp%2Ftemp/solution/api/obj/project.assets.json\r\n         Restore completed in 47.46 ms for /root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj.\r\n\r\n         NuGet Config files used:\r\n             /root/.nuget/NuGet/NuGet.Config\r\n\r\n         Feeds used:\r\n             https://api.nuget.org/v3/index.json\r\n     1>Done Building Project \"/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj\" (Restore target(s)).\r\n   1:7>Project \"/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj\" on node 1 (Build target(s)).\r\n     1>/usr/share/dotnet/sdk/2.1.500/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(198,5): error NETSDK1004: Assets file '/root/workspace/repos/temp/temp/solution/api/obj/project.assets.json' not found. Run a NuGet package restore to generate this file. [/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj]\r\n     1>Done Building Project \"/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj\" (Build target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj\" (Build target) (1:7) ->\r\n       (ResolvePackageAssets target) ->\r\n         /usr/share/dotnet/sdk/2.1.500/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(198,5): error NETSDK1004: Assets file '/root/workspace/repos/temp/temp/solution/api/obj/project.assets.json' not found. Run a NuGet package restore to generate this file. [/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.97\r\n[root@vm api]#\r\n```\r\n\r\nPlease note for the above command line output, all the places have \"temp%2Ftemp\" logged except the error logged by `Microsoft.PackageDependencyResolution.targets(198,5)`:\r\n\r\n1>/usr/share/dotnet/sdk/2.1.500/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(198,5): error NETSDK1004: Assets file '/root/workspace/repos/**temp/temp**/solution/api/obj/project.assets.json' not found. Run a NuGet package restore to generate this file. [/root/workspace/repos/temp%2Ftemp/solution/api/solution-api.csproj]\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n[root@vm api]# dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n[root@vm api]#\r\n```","Url":"https://github.com/dotnet/cli/issues/10511","RelatedDescription":"Open issue \"%2F in path not properly interpreted when dotnet build\" (#10511)"},{"Id":"393671613","IsPullRequest":true,"CreatedAt":"2018-12-27T18:11:35","Actor":"dotnet-maestro[bot]","Number":"10503","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18621.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10503","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10503)"},{"Id":"394210055","IsPullRequest":false,"CreatedAt":"2018-12-26T18:12:13","Actor":"spushpendra2000","Number":"10509","RawContent":null,"Title":"LD_LIBRARY_PATH icu issue","State":"closed","Body":"## Steps to reproduce\r\nI am using dotnet core 2.1 on centos. and trying to load the dll.\r\n\r\nWhen running , i am getting this error\r\nFailFast:\r\nCouldn't find a valid ICU package installed on the system. Set the configuration flag System.Globalization.Invariant to true if you want to run with no globalization support.\r\n\r\n   at System.Environment.FailFast(System.String)\r\n   at System.Globalization.GlobalizationMode.GetGlobalizationInvariantMode()\r\n   at System.Globalization.GlobalizationMode..cctor()\r\n   at System.Globalization.CultureData.CreateCultureWithInvariantData()\r\n   at System.Globalization.CultureData.get_Invariant()\r\n   at System.Globalization.CultureInfo..cctor()\r\n   at System.StringComparer..cctor()\r\n   at System.AppDomain.InitializeCompatibilityFlags()\r\n   at System.AppDomain.Setup(System.Object)\r\nAborted (core dumped)\r\n\r\n\r\nI can see the suggestion as per the link\r\nhttps://github.com/dotnet/core/blob/master/Documentation/build-and-install-rhel6-prerequisites.md\r\n\r\nBut I cannot change the icu path and when i tried creating the local folder 'netcoredeps' where my dll is residing it never work and i keep getting the same error.\r\nOnly after the setting the LD_LIBRARY_PATH, it is working.. Please suggest who to resolve this\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10509","RelatedDescription":"Closed issue \"LD_LIBRARY_PATH icu issue\" (#10509)"},{"Id":"394194627","IsPullRequest":false,"CreatedAt":"2018-12-26T18:10:41","Actor":"jkotas","Number":"10508","RawContent":null,"Title":"Bug: WinFX.targets was not found","State":"closed","Body":"_From @HamedMasafi on December 25, 2018 8:31_\n\nI have installed dotnet core 3 preview on opensuse leap 15.0\r\nThe file that I downloaded is: https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-3.0.100-preview-009812-linux-x64-binaries\r\n\r\nI've try to build an app:\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/> mkdir -p dwin && cd dwin\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet new winforms       \r\n\r\nWelcome to .NET Core!\r\n---------------------\r\nLearn more about .NET Core: https://aka.ms/dotnet-docs\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\nASP.NET Core\r\n------------\r\nSuccessfully installed the ASP.NET Core HTTPS Development Certificate.\r\nTo trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms refer to the platform specific documentation.\r\nFor more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.\r\nGetting ready...\r\nThe template \"Windows Forms Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /home/hamed/tmp/dwin/dwin.csproj...\r\n  Restoring packages for /home/hamed/tmp/dwin/dwin.csproj...\r\n  Installing Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.Platforms 3.0.0-preview.18571.3.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing Microsoft.NETCore.Targets 2.0.0.\r\n  Installing Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Installing Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.targets.\r\n  Restore completed in 4.87 min for /home/hamed/tmp/dwin/dwin.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet run\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.targets(14,2): error MSB4019: The imported project \"/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [/home/hamed/tmp/dwin/dwin.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\nThe file exists but in other case:\r\n```\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFx.targets\r\n```\r\nThe 'x' on WinFx is lower but dotnet expect to it be upper.\r\n\r\nI've created a copy with this command but I know is not good way for solving bugs\r\n```\r\ncp /opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinF{x,X}.targets\r\n```\n\n_Copied from original issue: dotnet/coreclr#21673_","Url":"https://github.com/dotnet/cli/issues/10508","RelatedDescription":"Closed issue \"Bug: WinFX.targets was not found\" (#10508)"},{"Id":"393877717","IsPullRequest":true,"CreatedAt":"2018-12-24T17:58:53","Actor":"dotnet-maestro[bot]","Number":"10507","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18623.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10507","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10507)"},{"Id":"393688371","IsPullRequest":false,"CreatedAt":"2018-12-24T00:49:22","Actor":"DoCode","Number":"10506","RawContent":null,"Title":"[dotnet tools] Multiple commands/aliases","State":"closed","Body":"How to create one or more aliases for a dotnet tool?\r\n\r\nIn the project file only the `ToolCommandName` is available:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  ...\r\n  <PropertyGroup>\r\n    ...\r\n    <PackAsTool>true</PackAsTool>\r\n    <ToolCommandName>toolname</ToolCommandName>\r\n  ...\r\n  </PropertyGroup>\r\n  ...\r\n</Project>\r\n```\r\n\r\nExpected:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  ...\r\n  <PropertyGroup>\r\n    ...\r\n    <PackAsTool>true</PackAsTool>\r\n    <ToolCommandNames>toolname;tn;another-alias</ToolCommandNames>\r\n  ...\r\n  </PropertyGroup>\r\n  ...\r\n</Project>\r\n```\r\n\r\nSo the tool can be executed as\r\n```batch\r\n> toolname\r\n> tn\r\n> another-alias\r\n```","Url":"https://github.com/dotnet/cli/issues/10506","RelatedDescription":"Closed issue \"[dotnet tools] Multiple commands/aliases\" (#10506)"},{"Id":"393671616","IsPullRequest":true,"CreatedAt":"2018-12-23T18:29:06","Actor":"dotnet-maestro[bot]","Number":"10504","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18621.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18621.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10504","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10504)"},{"Id":"393680393","IsPullRequest":false,"CreatedAt":"2018-12-23T18:10:11","Actor":"TothZoltan2018","Number":"10505","RawContent":null,"Title":"Install the .NET SDK on Windows Subsystem Linux Ubuntu 18.04 - Reading package lists... Error!","State":"closed","Body":"## Steps to reproduce\r\nI try to install Install .NET SDK ([instruction here)](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial#install) to WSL Ubuntu 18.04 ([instruction here](https://docs.microsoft.com/en-us/windows/wsl/install-win10)) ([package here](https://www.microsoft.com/hu-hu/p/ubuntu-1804-lts/9n9tngvndl3q?activetab=pivot%3Aoverviewtab))\r\n\r\n## Expected  behavior\r\nSuccessfull installation of .Net SDK on Ubuntu WSL\r\n\r\n## Actual behavior\r\n\r\nI could install Ubuntu but I can not install .NET SDK. It looks as if something is wrong with permissions althought the commands I copied from the tutirial use sudo... \r\n<pre>\r\ntothz@hp-PC:~/repos$ wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb\r\ntothz@hp-PC:~/repos$ sudo dpkg -i packages-microsoft-prod.deb\r\n[sudo] password for tothz:\r\n(Reading database ... 28498 files and directories currently installed.)\r\nPreparing to unpack packages-microsoft-prod.deb ...\r\nUnpacking packages-microsoft-prod (1.0-ubuntu18.04.1) over (1.0-ubuntu18.04.1) ...\r\nSetting up packages-microsoft-prod (1.0-ubuntu18.04.1) ...\r\ntothz@hp-PC:~/repos$ sudo add-apt-repository universe\r\n'universe' distribution component is already enabled for all sources.\r\ntothz@hp-PC:~/repos$ sudo apt-get install apt-transport-https\r\nReading package lists... Error!\r\nE: Problem renaming the file /var/cache/apt/srcpkgcache.bin.peXWA6 to /var/cache/apt/srcpkgcache.bin - rename (13: Permission denied)\r\nE: Could not open file /var/lib/dpkg/status - open (2: No such file or directory)\r\nE: Problem opening /var/lib/dpkg/status\r\nE: The package lists or status file could not be parsed or opened.\r\ntothz@hp-PC:~/repos$\r\n</pre>\r\n\r\nI got some tips such as:\r\n$ sudo rm -fr /var/cache/apt\r\n$ sudo mv /var/lib/dpkg/status /var/lib/dpkg/status-bak  #could fail if it doesn't exist\r\n$ sudo touch /var/lib/dpkg/status\r\n$ sudo apt clean\r\n$ sudo apt update && sudo apt upgrade\r\n$ # try again, probably starting with sudo apt install apt-transport-https,\r\n$ # if that's what you are after\r\n\r\nHowever, all in vain.\r\n\r\n## Environment data\r\n\r\nMy Windows bulid number is: \"Microsoft Windows [Version 10.0.17134.471]\"\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10505","RelatedDescription":"Closed issue \"Install the .NET SDK on Windows Subsystem Linux Ubuntu 18.04 - Reading package lists... Error!\" (#10505)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"394796330","IsPullRequest":false,"CreatedAt":"2018-12-29T13:33:18","Actor":"MV10","Number":"1041","RawContent":null,"Title":"System.MathF missing in .NET Standard 2.1 README","State":"open","Body":"Minor, but `System.MathF` is missing from the [README](https://github.com/dotnet/standard/blob/master/docs/planning/netstandard-2.1/README.md). I figured it would be in the Miscellaneous list at a minimum. (As I understand it, this is still on schedule for .NET Standard 2.1 per  https://github.com/dotnet/corefx/issues/15830, correct?)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1041","RelatedDescription":"Open issue \"System.MathF missing in .NET Standard 2.1 README\" (#1041)"},{"Id":"393264404","IsPullRequest":true,"CreatedAt":"2018-12-26T21:14:18","Actor":"terrajobst","Number":"1039","RawContent":null,"Title":"Fix representation of enum values","State":"closed","Body":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***","Url":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Closed or merged PR \"Fix representation of enum values\" (#1039)"},{"Id":"393009607","IsPullRequest":false,"CreatedAt":"2018-12-21T01:08:29","Actor":"ViktorHofer","Number":"1036","RawContent":null,"Title":"Disable Jenkins","State":"closed","Body":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?","Url":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036)"},{"Id":"393267915","IsPullRequest":true,"CreatedAt":"2018-12-21T00:51:26","Actor":"ViktorHofer","Number":"1040","RawContent":null,"Title":"Remove the manual config system","State":"open","Body":"Fixes https://github.com/dotnet/standard/issues/1032","Url":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Open PR \"Remove the manual config system\" (#1040)"},{"Id":"393171059","IsPullRequest":true,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1038","RawContent":null,"Title":"Add APICompat run for NetStandard2.0","State":"closed","Body":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029","Url":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Closed or merged PR \"Add APICompat run for NetStandard2.0\" (#1038)"},{"Id":"392786865","IsPullRequest":false,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1029","RawContent":null,"Title":"Add ApiCompat run for netstandard2.0","State":"closed","Body":"We should add an APICompat run that checks against 2.0, similar the ones we already have for 1.0-1.6: https://github.com/dotnet/standard/blob/master/apicompat/baselines/ApiCompatBaseline.netstandard1.6.txt","Url":"https://github.com/dotnet/standard/issues/1029","RelatedDescription":"Closed issue \"Add ApiCompat run for netstandard2.0\" (#1029)"},{"Id":"393005614","IsPullRequest":true,"CreatedAt":"2018-12-20T18:07:43","Actor":"ViktorHofer","Number":"1035","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\nFailing CI jobs are leftovers: https://github.com/dotnet/standard/issues/1036\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1035","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1035)"},{"Id":"393015237","IsPullRequest":false,"CreatedAt":"2018-12-20T11:58:02","Actor":"ViktorHofer","Number":"1037","RawContent":null,"Title":"Group source items in a src folder","State":"open","Body":"We should move\r\n- netstandard\r\n- platforms\r\n- apicompat\r\n- dir.traversal.targets\r\n- package.builds\r\n- src.builds\r\n\r\ninto a `src` folder to align with other dotnet repos.\r\n\r\ncc @wtgodbe @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/issues/1037","RelatedDescription":"Open issue \"Group source items in a src folder\" (#1037)"},{"Id":"393001679","IsPullRequest":true,"CreatedAt":"2018-12-20T11:31:22","Actor":"ViktorHofer","Number":"1034","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1034","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1034)"},{"Id":"392986163","IsPullRequest":false,"CreatedAt":"2018-12-20T10:40:01","Actor":"ViktorHofer","Number":"1032","RawContent":null,"Title":"Remove slim configuration system and stop overloading Configuration","State":"open","Body":"We should stop overloading the `Configuration` property in favor of the right msbuild properties and remove the `ConfigurationGroup` property to enable native VS support and remove a lot of obsolete stuff.\r\n\r\n```\r\n  <PropertyGroup Condition=\"'$(Configuration)'==''\">\r\n    <ConfigurationGroup Condition=\"'$(ConfigurationGroup)'==''\">Debug</ConfigurationGroup>\r\n    <Configuration>$(ConfigurationGroup)</Configuration>\r\n    <Configuration Condition=\"'$(TargetGroup)'!=''\">$(TargetGroup)_$(Configuration)</Configuration>\r\n    <Configuration Condition=\"'$(OSGroup)'!='' and '$(OSGroup)'!='AnyOS'\">$(OSGroup)_$(Configuration)</Configuration>\r\n  </PropertyGroup>\r\n```\r\n\r\ncc @ericstj @wtgodbe ","Url":"https://github.com/dotnet/standard/issues/1032","RelatedDescription":"Open issue \"Remove slim configuration system and stop overloading Configuration\" (#1032)"},{"Id":"392982975","IsPullRequest":false,"CreatedAt":"2018-12-20T10:31:53","Actor":"ViktorHofer","Number":"1031","RawContent":null,"Title":"Remove depproj approach and enable project restore","State":"open","Body":"As discussed in another PR I think it makes sense to remove the depproj approach here in the standard repo and follow the usual way of referencing packages directly in the respective project, in this case netstandard.csproj. Also the netstandard.builds file which restores for different frameworks can be incorporated in the csproj by adding a `TargetFrameworks` property and right PackageReference conditions. \r\n\r\ncc @wtgodbe @ericstj ","Url":"https://github.com/dotnet/standard/issues/1031","RelatedDescription":"Open issue \"Remove depproj approach and enable project restore\" (#1031)"},{"Id":"392822069","IsPullRequest":true,"CreatedAt":"2018-12-20T10:07:40","Actor":"wtgodbe","Number":"1030","RawContent":null,"Title":"Delete CI & redundant publish file","State":"closed","Body":"This deletes the old `netci.groovy` file, since we're using Azure DevOps for CI now. It also deletes `publish.msbuild`, which isn't used anywhere.\r\n\r\n@ViktorHofer PTAL","Url":"https://github.com/dotnet/standard/pull/1030","RelatedDescription":"Closed or merged PR \"Delete CI & redundant publish file\" (#1030)"},{"Id":"391885087","IsPullRequest":true,"CreatedAt":"2018-12-19T23:33:25","Actor":"wtgodbe","Number":"1027","RawContent":null,"Title":"Build Standard entirely against Arcade, without Buildtools","State":"closed","Body":"This cuts out buildtools entirely from the Standard repo, so that we fully rely on the Arcade SDK to build against instead. It replaces the functionality for code analyzers, `ValidateApiCompatForSrc`, and the build tasks.\r\n\r\n@ericstj @safern @danmosemsft @ViktorHofer @chcosta PTAL\r\n\r\nCC @karelz ","Url":"https://github.com/dotnet/standard/pull/1027","RelatedDescription":"Closed or merged PR \"Build Standard entirely against Arcade, without Buildtools\" (#1027)"},{"Id":"390377097","IsPullRequest":true,"CreatedAt":"2018-12-19T01:30:18","Actor":"terrajobst","Number":"1013","RawContent":null,"Title":"Add missing readonly modifiers","State":"closed","Body":"This fixes #842 (or at least is a sizable down payment).","Url":"https://github.com/dotnet/standard/pull/1013","RelatedDescription":"Closed or merged PR \"Add missing readonly modifiers\" (#1013)"},{"Id":"390839367","IsPullRequest":true,"CreatedAt":"2018-12-19T01:29:43","Actor":"terrajobst","Number":"1020","RawContent":null,"Title":"Reduce noise in reference assemblies","State":"closed","Body":"This doesn't change any APIs. It's just reducing noise from in the textual diff of the reference assemblies.\r\n\r\n* Fix trailing whitespace (69cb85e)\r\n* Mark types as partial (c9725f7)\r\n* Replace handwritten base calls with generated ones (78649f6)\r\n","Url":"https://github.com/dotnet/standard/pull/1020","RelatedDescription":"Closed or merged PR \"Reduce noise in reference assemblies\" (#1020)"},{"Id":"392146465","IsPullRequest":true,"CreatedAt":"2018-12-18T13:01:40","Actor":"dotnet-maestro[bot]","Number":"1028","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18617.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18618.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1028","RelatedDescription":"Open PR \"Update dependency files\" (#1028)"},{"Id":"390383237","IsPullRequest":true,"CreatedAt":"2018-12-17T19:11:23","Actor":"terrajobst","Number":"1014","RawContent":null,"Title":"Add IAsyncDisposable","State":"closed","Body":"This adds API support for the new C# 8 feature to call dispose asynchronously:\r\n\r\n```C#\r\nawait using(var stream = File.OpenWrite(path))\r\n{\r\n    await data.WriteAsync(stream);\r\n}\r\n```\r\n\r\nFor more details, see:\r\n\r\nhttps://github.com/dotnet/csharplang/blob/master/proposals/async-streams.md","Url":"https://github.com/dotnet/standard/pull/1014","RelatedDescription":"Closed or merged PR \"Add IAsyncDisposable\" (#1014)"},{"Id":"391702003","IsPullRequest":true,"CreatedAt":"2018-12-17T15:07:31","Actor":"dotnet-maestro[bot]","Number":"1026","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1026","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1026)"},{"Id":"391465145","IsPullRequest":true,"CreatedAt":"2018-12-16T19:53:13","Actor":"dotnet-maestro[bot]","Number":"1025","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18615.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1025","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1025)"},{"Id":"391463924","IsPullRequest":false,"CreatedAt":"2018-12-16T12:45:44","Actor":"dmitriyse","Number":"1024","RawContent":null,"Title":"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset","State":"open","Body":"Please open new .NetStandard branch with deep refresh of .Net API surface.\r\nCurrently .NetStandard 2.0 and it's successor .NetStandard 2.1 contains everything that were added in .net since version 1.0. Some API is already outdated and another will become outdated soon.\r\n\r\n.Net Standard 2.1 have some positive movements. It's drops some components to out of standard into additional components.\r\n\r\nBut it's not enough. It's time to stay in .Net Standard only good and modern parts.\r\nFor example:\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(T[] array);\r\n     // ...\r\n}\r\n```\r\ncan be replaced with:\r\n\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(Span<T> output);\r\n     // ...\r\n}\r\n```\r\nAssemblies targeting .NetStandard 2.0, .NetStandard 2.1 and proposed .NetStandard 3.0.0 should be capable to work side-by-side inside the same AppDomain.\r\n\r\nTODO: Add diagram.\r\n","Url":"https://github.com/dotnet/standard/issues/1024","RelatedDescription":"Open issue \"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset\" (#1024)"},{"Id":"391376312","IsPullRequest":true,"CreatedAt":"2018-12-15T13:41:30","Actor":"dotnet-maestro[bot]","Number":"1023","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18614.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1023","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1023)"},{"Id":"391102384","IsPullRequest":true,"CreatedAt":"2018-12-14T13:21:43","Actor":"dotnet-maestro[bot]","Number":"1021","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18613.20\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1021","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1021)"},{"Id":"390833738","IsPullRequest":true,"CreatedAt":"2018-12-13T19:52:44","Actor":"terrajobst","Number":"1019","RawContent":null,"Title":"Require support for default implementations of interfaces","State":"open","Body":"This marker will require all implementations of .NET Standard 2.1 to support default implementations of interfaces. Needless to say that this has runtime impact. The benefit of doing this in the standard is that it allows library authors to use this feature for their interfaces. The downside is that that this is potentially a lot of runtime work. I'm curious to how the board feels about absorbing that change for .NET Standard 2.1, especially @dotnet/nsboard-xamarin and @dotnet/nsboard-unity.","Url":"https://github.com/dotnet/standard/pull/1019","RelatedDescription":"Open PR \"Require support for default implementations of interfaces\" (#1019)"},{"Id":"390830254","IsPullRequest":true,"CreatedAt":"2018-12-13T19:42:55","Actor":"terrajobst","Number":"1018","RawContent":null,"Title":"WIP: Add support for Index and Range","State":"open","Body":"This adds the basic APIs for `Index` and `Range`. However, it misses most of the [companion APIs](https://github.com/dotnet/designs/blob/master/accepted/system-range/system-range.md#companion-apis) because they don't even exist in CoreFx yet. The work is tracked in https://github.com/dotnet/corefx/issues/34076. Once done, I'll update the PR to reflect the final API shape.\r\n\r\nFor now, this PR is just a tracking item to remind us to get it done for 2.1.","Url":"https://github.com/dotnet/standard/pull/1018","RelatedDescription":"Open PR \"WIP: Add support for Index and Range\" (#1018)"},{"Id":"390822437","IsPullRequest":true,"CreatedAt":"2018-12-13T19:20:57","Actor":"terrajobst","Number":"1017","RawContent":null,"Title":"WIP: Add IAsyncEnumerable<T>","State":"open","Body":"This API is depending on the CoreFX work: dotnet/corefx#33909. Once we closed on the design I'll update this PR.","Url":"https://github.com/dotnet/standard/pull/1017","RelatedDescription":"Open PR \"WIP: Add IAsyncEnumerable<T>\" (#1017)"},{"Id":"390444044","IsPullRequest":true,"CreatedAt":"2018-12-13T18:57:05","Actor":"wtgodbe","Number":"1015","RawContent":null,"Title":"Enable publishing to build-assets registry","State":"closed","Body":"Now that Standard is placing build output in `artifacts`, we can opt-in to publishing build assets to the BAR.\r\n\r\n@chcosta @mmitche PTAL","Url":"https://github.com/dotnet/standard/pull/1015","RelatedDescription":"Closed or merged PR \"Enable publishing to build-assets registry\" (#1015)"},{"Id":"390668875","IsPullRequest":true,"CreatedAt":"2018-12-13T13:31:43","Actor":"dotnet-maestro[bot]","Number":"1016","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18612.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1016","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1016)"},{"Id":"390354570","IsPullRequest":true,"CreatedAt":"2018-12-12T23:16:02","Actor":"terrajobst","Number":"1012","RawContent":null,"Title":"Add private fields for structs","State":"closed","Body":"No public API changes, but this fixes #678. \r\n\r\nIn a nutshell, the compiler needs to know whether a struct has any fields in order to apply definitive assignment rules. While stripping all private fields from types is generally OK, we can't do this for structs. Fortunately, for private fields the compiler doesn't really care what they are, but what their characteristics are. For example:\r\n\r\n1. Does the struct have any fields?\r\n\r\n2. Does the struct contain any reference types (to validate generic instantiations that have the unmanaged constraint)?\r\n\r\n3. Does the struct use the generic parameter in a field declaration (to validate cyclic layout problems)?\r\n\r\nThis adds dummy fields to structs to conform to these rules. These aren't computed separately but are instead taken from .NET Core.\r\n\r\nFor more details, see this issue in CoreFX:\r\n\r\nhttps://github.com/dotnet/corefx/issues/6185","Url":"https://github.com/dotnet/standard/pull/1012","RelatedDescription":"Closed or merged PR \"Add private fields for structs\" (#1012)"},{"Id":"390224712","IsPullRequest":false,"CreatedAt":"2018-12-12T19:00:27","Actor":"YairHalberstadt","Number":"1011","RawContent":null,"Title":"Add HashSet.TryGetValue to .Net Standard","State":"closed","Body":"This method is already implemented by .Net Core 2.0 and .Net Framework 4.7.2, so I imagine this would be relatively easy to include in .Net Standard 2.1.","Url":"https://github.com/dotnet/standard/issues/1011","RelatedDescription":"Closed issue \"Add HashSet.TryGetValue to .Net Standard\" (#1011)"},{"Id":"390215935","IsPullRequest":true,"CreatedAt":"2018-12-12T13:46:59","Actor":"dotnet-maestro[bot]","Number":"1010","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18611.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1010","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1010)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"395135475","IsPullRequest":true,"CreatedAt":"2019-01-02T05:25:07","Actor":"Dotnet-GitSync-Bot","Number":"34306","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @benaadams","Url":"https://github.com/dotnet/corefx/pull/34306","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,coreclr\" (#34306)"},{"Id":"395150392","IsPullRequest":false,"CreatedAt":"2019-01-02T05:04:40","Actor":"mjsabby","Number":"34308","RawContent":null,"Title":"MissingMethodException for System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)","State":"open","Body":"Looks like the issue I opened in https://github.com/dotnet/coreclr/issues/21742 probably belongs here.\r\n\r\nNew in .NET Core 3.0 Preview 1 compared to 2.2 is a `MissingMethodException` for `Void System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)` triggered by the following line of code:\r\n\r\n```csharp\r\n            new SecurityPermission(PermissionState.Unrestricted).Demand();\r\n```\r\n\r\nI know we gutted CAS in this release, and so it's probably related to that change in some way, but I did not expect this to break so it does seem like a bug, but I've not root caused it yet.\r\n\r\nLooks like the following types were introduced in System.Runtime.Extensions ... but it is not from @jkotas's change, so maybe this isn't related to that.\r\n\r\n`System.Security.Permissions.PermissionState`\r\n`System.Security.PermissionSet`\r\n`System.Security.IStackWalk`","Url":"https://github.com/dotnet/corefx/issues/34308","RelatedDescription":"Open issue \"MissingMethodException for System.Security.Permissions.SecurityPermission..ctor(System.Security.Permissions.PermissionState)\" (#34308)"},{"Id":"395136814","IsPullRequest":true,"CreatedAt":"2019-01-02T02:40:09","Actor":"geoffkizer","Number":"34307","RawContent":null,"Title":"split redirect tests into separate file","State":"open","Body":"@dotnet/ncl","Url":"https://github.com/dotnet/corefx/pull/34307","RelatedDescription":"Open PR \"split redirect tests into separate file\" (#34307)"},{"Id":"395116474","IsPullRequest":true,"CreatedAt":"2019-01-02T02:18:22","Actor":"Dotnet-GitSync-Bot","Number":"34305","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/34305","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34305)"},{"Id":"395041744","IsPullRequest":true,"CreatedAt":"2019-01-01T20:58:35","Actor":"geoffkizer","Number":"34298","RawContent":null,"Title":"disable flaky test SchSendAuxRecordHttpTest","State":"closed","Body":"See #26539 \r\n\r\n@dotnet/ncl ","Url":"https://github.com/dotnet/corefx/pull/34298","RelatedDescription":"Closed or merged PR \"disable flaky test SchSendAuxRecordHttpTest\" (#34298)"},{"Id":"395110862","IsPullRequest":true,"CreatedAt":"2019-01-01T20:46:09","Actor":"jkotas","Number":"34304","RawContent":null,"Title":"Delete one-off AppDomain setter for uapaot first chance exception handler","State":"open","Body":"This should not be one-off. It should be either nowhere or everywhere.","Url":"https://github.com/dotnet/corefx/pull/34304","RelatedDescription":"Open PR \"Delete one-off AppDomain setter for uapaot first chance exception handler\" (#34304)"},{"Id":"395109098","IsPullRequest":true,"CreatedAt":"2019-01-01T20:19:11","Actor":"Dotnet-GitSync-Bot","Number":"34303","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/34303","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34303)"},{"Id":"395079947","IsPullRequest":false,"CreatedAt":"2019-01-01T12:41:24","Actor":"xied75","Number":"34302","RawContent":null,"Title":"Extra 0x1a at end of /src/System.DirectoryServices.Protocols/ref/System.DirectoryServices.Protocols.cs","State":"open","Body":"At the end of file:\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.DirectoryServices.Protocols/ref/System.DirectoryServices.Protocols.cs\r\nThere is a strange 0x1a (before the final 0d 0a):\r\n\r\n```\r\n00000210  65 66 61 75 6c 74 28 69  6e 74 29 3b 20 7d 20 7d  |efault(int); } }|\r\n00000220  0d 0a 20 20 7d 0d 0a 7d  0d 0a 1a 0d 0a           |..  }..}.....|\r\n```\r\n\r\nShould it be removed?","Url":"https://github.com/dotnet/corefx/issues/34302","RelatedDescription":"Open issue \"Extra 0x1a at end of /src/System.DirectoryServices.Protocols/ref/System.DirectoryServices.Protocols.cs\" (#34302)"},{"Id":"395057669","IsPullRequest":true,"CreatedAt":"2019-01-01T05:41:50","Actor":"Dotnet-GitSync-Bot","Number":"34301","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/34301","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34301)"},{"Id":"395050245","IsPullRequest":true,"CreatedAt":"2019-01-01T02:28:31","Actor":"lmolkova","Number":"34300","RawContent":null,"Title":"[release/2.1] Do not add Request-Id header when its added already","State":"open","Body":"### Shiproom template\r\n\r\n#### Description\r\nThis change prevents `Request-Id` header from being added by the [DiagnosticsHandler](https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/src/System/Net/Http/DiagnosticsHandler.cs#L82) if it was already injected by tracing system.\r\n\r\nThis change allows a tracing system to implement backward compatibility with legacy correlation protocol after the new correlation protocol will be implemented in DiagnosticSource (3.0 timeframe).\r\n\r\nSee https://github.com/dotnet/corefx/issues/34299 for more details.\r\n\r\n#### Customer Impact\r\nWithout this fix, after new DiagnosticSource is shipped, customers using new DiagnosticSource with 2.1 System.Net.Http AND forcing new [W3C distributed tracing protocol](https://github.com/w3c/distributed-tracing),  will not be able to correlate telemetry with other services that support legacy correlation protocol.\r\nThere will also be no workaround  for this.\r\n\r\n#### Regression?\r\nNo.\r\n\r\n#### Risk\r\nLow. \r\n","Url":"https://github.com/dotnet/corefx/pull/34300","RelatedDescription":"Open PR \"[release/2.1] Do not add Request-Id header when its added already\" (#34300)"},{"Id":"395049466","IsPullRequest":false,"CreatedAt":"2019-01-01T02:14:10","Actor":"lmolkova","Number":"34299","RawContent":null,"Title":"Do not inject Request-Id header if injected by tracing system","State":"open","Body":"System.Net.Http implements tracing with DiagnosticsSource. When there is a listener (tracing system), \r\nHttpClient injects [DiagnosticsHandler](https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/src/System/Net/Http/DiagnosticsHandler.cs#L82) and it adds outgoing request header (`Request-Id`) to pass a unique id to the next service for correlation.\r\n\r\nTracing system may want to overwrite this header and the major scenario for this is backward compatibility (scenario is described below).\r\n\r\nIf a tracing system attempts to add `Request-Id` header, DiagnosticsHandler in HttpClient will add another one, breaking correlation with downstream services.\r\n\r\n### Scenario details:\r\nIn .NET 3.0 we are going to change the correlation protocol to [W3C distributed tracing](https://github.com/w3c/distributed-tracing) in DiagnosticSource package. \r\nHere are  the changes were designed and discussed with @vancem : https://github.com/dotnet/corefx/pull/33207 \r\n\r\nDiagnosticSource is OOB package and a new version of DiagnosticSource (that ships with 3.0) may be used with corefx 2.1 or 2.2.\r\nIn 3.0 `Activity.Id` in some cases will not comply with the current protocol and passing it in the Request-Id will be invalid, i.e. using new DiagnosticSource with corefx 2.1 and 2.2 will be invalid in these cases.\r\n\r\nBy default, when a tracing system does not do special configuration that forces new format, there are not backward-compatibility issues.\r\n\r\nBut when tracing system configures Activity to break backward compatibility and force new format, causing the above issue, becomes responsible to implement backward compatibility on its own.\r\n\r\nThis means a tracing system will need to inject Request-Id header in the correct format (if it wants to preserve backward-compatibility).\r\n","Url":"https://github.com/dotnet/corefx/issues/34299","RelatedDescription":"Open issue \"Do not inject Request-Id header if injected by tracing system\" (#34299)"},{"Id":"394832484","IsPullRequest":true,"CreatedAt":"2018-12-31T21:47:37","Actor":"jlennox","Number":"34280","RawContent":null,"Title":"Rewrite xml text writers abstraction","State":"closed","Body":"Relates to #34200\r\n\r\n@krwq The goal of this commit is to eliminate `XmlRawTextWriterGenerator.cxx`. Using C++ templates likely made sense when this code was originally written, but now is too novel of an approach for what is a common abstraction problem. The issues with this approach can be seen with how deviated the template and the the code were for so long.\r\n\r\nI experimented with using t4 templates instead and found it exhibited the same problems but slightly differently flavored.\r\n\r\nI tried to maintain as much of the code's original flow as possible, as to not disrupt people's knowledge of the code base. I did refactor spots where the code had the \"arrow anti-pattern\" (http://wiki.c2.com/?ArrowAntiPattern) at least 3 levels deep.\r\n\r\nNot counting the 1.9k lines removed from deleting XmlRawTextWriterGenerator.cxx, this is a net reduction of 2,962 lines of code, which is a solid win.","Url":"https://github.com/dotnet/corefx/pull/34280","RelatedDescription":"Closed or merged PR \"Rewrite xml text writers abstraction\" (#34280)"},{"Id":"395018632","IsPullRequest":false,"CreatedAt":"2018-12-31T18:46:56","Actor":"Symbai","Number":"34297","RawContent":null,"Title":"Delete to recycle bin","State":"open","Body":"Can we have an option to delete files / directories to recycle bin? Such an option exists on VB for a long time, it would be very useful when it can be added to C# and .NET Core so we don't have to reference VB and preferably don't display any dialogs etc.\r\n\r\n```\r\nMy.Computer.FileSystem.DeleteFile(\r\n  \"C:\\test.txt\",\r\n  FileIO.UIOption.AllDialogs,\r\n  FileIO.RecycleOption.SendToRecycleBin,\r\n  FileIO.UICancelOption.ThrowException)\r\n```","Url":"https://github.com/dotnet/corefx/issues/34297","RelatedDescription":"Open issue \"Delete to recycle bin\" (#34297)"},{"Id":"395013599","IsPullRequest":true,"CreatedAt":"2018-12-31T18:01:04","Actor":"Dotnet-GitSync-Bot","Number":"34296","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/34296","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34296)"},{"Id":"395003822","IsPullRequest":false,"CreatedAt":"2018-12-31T16:33:31","Actor":"kevingosse","Number":"34295","RawContent":null,"Title":"Lower the priority of the threadpool global queue","State":"open","Body":"I'd like to suggest to change the way the threadpool workers dequeue items, and treat the global queue with the same level of priority as work-stealing.\r\n\r\nI've explained most of the rationale in this article: http://labs.criteo.com/2018/10/net-threadpool-starvation-and-how-queuing-makes-it-worse/\r\n\r\nIn a nutshell, threadpool starvation occurs pretty easily when mixing synchronous and asynchronous code. While this would happen with any scheduling system, this is made worse by the way the threadpool prioritize the queues.\r\n\r\nAs a reminder, when a threadpool thread is free, it'll process items in order from:\r\n - its local queue\r\n - the global queue\r\n - the local queues of other threads (in random order)\r\n \r\nThe issue appears easily in applications that receive workload from a non-threadpool thread (for instance, because the transport layer is native or uses dedicated threads). In this case, the incoming workload will always be queued in the global queue. Then, when new threadpool workers are spawned, they will always dequeue from the global queue first (since their local queue is empty), adding more pressure on the system instead of stealing work from the other queues.\r\n\r\nThis is very apparent in the following snippet:\r\n\r\n```\r\nusing System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace Starvation\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(Environment.ProcessorCount);\r\n\r\n            ThreadPool.SetMinThreads(8, 8);\r\n\r\n            Task.Factory.StartNew(\r\n                Producer,\r\n                TaskCreationOptions.None);\r\n            Console.ReadLine();\r\n        }\r\n\r\n        static void Producer()\r\n        {\r\n            while (true)\r\n            {\r\n                Process();\r\n\r\n                Thread.Sleep(200);\r\n            }\r\n        }\r\n\r\n        static async Task Process()\r\n        {\r\n            await Task.Yield();\r\n\r\n            var tcs = new TaskCompletionSource<bool>();\r\n\r\n            Task.Run(() =>\r\n            {\r\n                Thread.Sleep(1000);\r\n                tcs.SetResult(true);\r\n            });\r\n\r\n            tcs.Task.Wait();\r\n\r\n            Console.WriteLine(\"Ended - \" + DateTime.Now.ToLongTimeString());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis causes threadpool starvation on any system that has 8 CPUs or less, and the system never recovers, even though the workload is stable (5 items per second).\r\n\r\n\r\nI think the local queue is a pretty good mechanism: once a worker has started executing tasks related to a particular async workflow, we want to process that workflow in priority and finish it as soon as possible. However, the priority given to the global queue over work-stealing is questionable. I suspect it was only done to limit the impact on legacy pre-4.0 applications. \r\n\r\nI believe many threadpool starvation scenarios could be mitigated by lowering the priority of the global queue at the same level as work-stealing. When a threadpool thread is free, it would process items in order from:\r\n - its local queue\r\n - other queues in random order, including the global queue\r\n \r\nSince it's likely that the global queue receives new items at a faster pace than the average local queue, some weighing would probably be needed, which clearly makes the change non-trivial. Still, I believe this is something worth discussing.\r\n\r\nNote that, obviously, an application shouldn't mix sync and async code. If the workflow is purely asynchronous then the starvation issues do not occur. However, in many codebases this is not realistic, especially when in the middle of migrating from synchronous to asynchronous.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34295","RelatedDescription":"Open issue \"Lower the priority of the threadpool global queue\" (#34295)"},{"Id":"394999228","IsPullRequest":false,"CreatedAt":"2018-12-31T15:57:49","Actor":"nighotatul","Number":"34294","RawContent":null,"Title":"how we get getschema(\"primary key\") in system.data.odbc?","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/issues/34294","RelatedDescription":"Open issue \"how we get getschema(\"primary key\") in system.data.odbc?\" (#34294)"},{"Id":"394988546","IsPullRequest":false,"CreatedAt":"2018-12-31T14:33:37","Actor":"jeroenlandheer","Number":"34293","RawContent":null,"Title":"dotnet restore on failing on Ubuntu 18.04.1","State":"open","Body":"When running `dotnet restore` on a Linux build agent (Ubuntu 18.04.1), I'm getting the following error:\r\n\r\n```\r\nGSSAPI operation failed with error - An invalid status code was supplied (Configuration file does not specify default realm).\r\n```\r\n\r\nThis happens when it is trying to download a package from a TFS 2018 feed. \r\nWhen I use NuGet (based on mono) for restoring packages everything works fine.\r\n\r\ndotnet sdk version: 2.2.101\r\nBuild agent version: 2.136.1 \r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34293","RelatedDescription":"Open issue \"dotnet restore on failing on Ubuntu 18.04.1\" (#34293)"},{"Id":"394948939","IsPullRequest":true,"CreatedAt":"2018-12-31T08:59:01","Actor":"Dotnet-GitSync-Bot","Number":"34292","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @jkotas","Url":"https://github.com/dotnet/corefx/pull/34292","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34292)"},{"Id":"394940680","IsPullRequest":true,"CreatedAt":"2018-12-31T08:32:02","Actor":"Dotnet-GitSync-Bot","Number":"34291","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/34291","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#34291)"},{"Id":"394937176","IsPullRequest":false,"CreatedAt":"2018-12-31T06:44:46","Actor":"jaydeept","Number":"34290","RawContent":null,"Title":"Results are different when executed using \"dotnet vstest\" vs \"Test Explorer\" from Visual studio","State":"open","Body":"I am using `System.Diagnostics.StackFrame` class inside my `log4net` related code where I am seeing an issue with API called `GetMethod()`. When I execute from Test Explorer, the error is something like below for `KeyNotFoundExcpetion`:\r\n\r\n> Thrown System.Collections.Generic.KeyNotFoundException \"testMessage\"\\r\\n at LoggingUnitTests.Log4NetLogTestsLoggingEnabled.GetStackFramesRecursive (source file unavailable)\\r\\n at LoggingUnitTests.Log4NetLogTestsLoggingEnabled.GetStackFrames (source file unavailable)\r\n\r\nWhile using **dotnet vstest** the error is something like:\r\n\r\n> Thrown System.Collections.Generic.KeyNotFoundException \"testMessage\"\\r\\n at LoggingUnitTests.Log4NetLogTestsLoggingEnabled.GetStackFramesRecursive (source file unavailable)\\r\\n at LoggingUnitTests.Log4NetLogTestsLoggingEnabled.mytestcasename (source file unavailable)\r\n\r\nIf you will notice, the test case name i.e. mytestcasename is being added in error message string when executing from dotnet vstest. This inconsistent behavior should have been fixed.\r\n\r\nI would like to highlight over here that `GetStackFrames()` is my private method I have created inside my Test Class which is being invoked from my Test Case.","Url":"https://github.com/dotnet/corefx/issues/34290","RelatedDescription":"Open issue \"Results are different when executed using \"dotnet vstest\" vs \"Test Explorer\" from Visual studio\" (#34290)"},{"Id":"394912335","IsPullRequest":true,"CreatedAt":"2018-12-31T03:25:23","Actor":"benaadams","Number":"34289","RawContent":null,"Title":"SocketAsyncEventArgs use simple throw method","State":"closed","Body":"Change `ThrowForNonFreeStatus` to simple non-returning method, move the if to a separate method that returns the Exception","Url":"https://github.com/dotnet/corefx/pull/34289","RelatedDescription":"Closed or merged PR \"SocketAsyncEventArgs use simple throw method\" (#34289)"},{"Id":"394910876","IsPullRequest":true,"CreatedAt":"2018-12-30T23:48:06","Actor":"kouvel","Number":"34288","RawContent":null,"Title":"Don't Sleep(1) in some spin-wait loops (Fx)","State":"open","Body":"Fx counterpart to https://github.com/dotnet/coreclr/pull/21722","Url":"https://github.com/dotnet/corefx/pull/34288","RelatedDescription":"Open PR \"Don't Sleep(1) in some spin-wait loops (Fx)\" (#34288)"},{"Id":"394890198","IsPullRequest":false,"CreatedAt":"2018-12-30T18:00:31","Actor":"hzexe","Number":"34287","RawContent":null,"Title":" The code generated is wrong when the property is a generic type","State":"open","Body":"In System.CodeDom project:\r\n`\r\n string type = typeof(int?).Name;\r\nCodeMemberProperty prty = new CodeMemberProperty();\r\nprty.Name = \"CityCode\";\r\nprty.Type = new CodeTypeReference(type);\r\n prty.Attributes = MemberAttributes.Public| MemberAttributes.Final;\r\n.....\r\n`\r\nThen the code generated is:\r\n\r\n`\r\n public Nullable<> CityCode\r\n`\r\n","Url":"https://github.com/dotnet/corefx/issues/34287","RelatedDescription":"Open issue \" The code generated is wrong when the property is a generic type\" (#34287)"},{"Id":"394886973","IsPullRequest":true,"CreatedAt":"2018-12-30T17:31:26","Actor":"Dotnet-GitSync-Bot","Number":"34286","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/34286","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#34286)"},{"Id":"394886625","IsPullRequest":true,"CreatedAt":"2018-12-30T17:03:09","Actor":"Dotnet-GitSync-Bot","Number":"34285","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corefx/pull/34285","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34285)"},{"Id":"394853247","IsPullRequest":true,"CreatedAt":"2018-12-30T17:01:48","Actor":"Dotnet-GitSync-Bot","Number":"34282","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/34282","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34282)"},{"Id":"394881416","IsPullRequest":true,"CreatedAt":"2018-12-30T16:59:39","Actor":"MarcoRossignoli","Number":"34284","RawContent":null,"Title":"Improve dogfooding guide","State":"closed","Body":"After helping @miloszkukla with his issue with dogfooding he asked me to propose a small update to doc.\r\nHe had the issue precisely here, confusing which version put where.\r\nFeel free to propose better explanation or close if you think it's unuseful.\r\n\r\n/cc @jkotas \r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/34284","RelatedDescription":"Closed or merged PR \"Improve dogfooding guide\" (#34284)"},{"Id":"394864361","IsPullRequest":false,"CreatedAt":"2018-12-30T11:21:09","Actor":"benaadams","Number":"34283","RawContent":null,"Title":"Add EventSource guid ctors for non-reflection creation","State":"open","Body":"Make the `internal` [EventSource .ctors](https://github.com/dotnet/coreclr/blob/3b5782fa0aa4086ee72904b6052f21cba693bcf7/src/System.Private.CoreLib/shared/System/Diagnostics/Tracing/EventSource.cs#L1340-L1351) that take Guid and name `protected` \r\n```csharp\r\nclass EventSource\r\n{\r\n    protected EventSource(Guid eventSourceGuid, string eventSourceName);\r\n    protected EventSource(Guid eventSourceGuid, string eventSourceName, EventSourceSettings settings, string[] traits = null);\r\n}\r\n```\r\nThe non Guid .ctors cause a lot of reflection to look up the Guid and name from the applied attribute and for first use a lot of Jit compilation of the reflection methods:\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50546648-15c2fe00-0c23-11e9-84ed-f7a8bd700a28.png)\r\n\r\nWhich if it is in the startup path directly impacts startup times.\r\n\r\nFor coreclr they can use the internal .ctors https://github.com/dotnet/coreclr/pull/21714, https://github.com/dotnet/coreclr/pull/16054, https://github.com/dotnet/coreclr/pull/16060\r\n\r\nHowever there are still many corefx, aspnet and other app model `EventSource`s that get triggered on startup and cannot use these .ctor overloads (e.g. `Microsoft-Diagnostics-DiagnosticSource`, `Microsoft-System-Net-Sockets`, `Microsoft-System-Net-NameResolution`, `Microsoft-AspNetCore-Hosting`, `Microsoft-Extensions-DependencyInjection`) and directly impact startup time:\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/50546728-90d8e400-0c24-11e9-9d1e-a36d96dc68e0.png)\r\n\r\n\r\n/cc @jkotas ","Url":"https://github.com/dotnet/corefx/issues/34283","RelatedDescription":"Open issue \"Add EventSource guid ctors for non-reflection creation\" (#34283)"},{"Id":"394841259","IsPullRequest":false,"CreatedAt":"2018-12-30T02:42:05","Actor":"tom-corwin","Number":"34281","RawContent":null,"Title":"Support for generic sender parameter in EventHandler","State":"open","Body":"In `System.EventHandler`, there is a generic type parameter for the type of args, but a generic sender would be helpful. Something like this, maybe:\r\n\r\n```csharp\r\nnamespace System\r\n{\r\n    /// <summary>\r\n    /// Represents the method that will handle an event when the event provides data.\r\n    /// </summary>\r\n    /// <typeparam name=\"TSender\">The type of sender object.</typeparam>\r\n    /// <typeparam name=\"TEventArgs\">The type of the event data generated by the event.</typeparam>\r\n    /// <param name=\"sender\">The source of the event.</param>\r\n    /// <param name=\"e\">An object that contains the event data.</param>\r\n    public delegate void EventHandler<TSender, TEventArgs>(TSender sender, TEventArgs e);\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/34281","RelatedDescription":"Open issue \"Support for generic sender parameter in EventHandler\" (#34281)"},{"Id":"394832300","IsPullRequest":true,"CreatedAt":"2018-12-29T23:29:55","Actor":"Dotnet-GitSync-Bot","Number":"34279","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/34279","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#34279)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"395152013","IsPullRequest":true,"CreatedAt":"2019-01-02T05:22:10","Actor":"jcouv","Number":"32091","RawContent":null,"Title":"Track assignments to ref/out parameters as normal locals","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/29954","Url":"https://github.com/dotnet/roslyn/pull/32091","RelatedDescription":"Open PR \"Track assignments to ref/out parameters as normal locals\" (#32091)"},{"Id":"395147350","IsPullRequest":true,"CreatedAt":"2019-01-02T04:32:38","Actor":"jcouv","Number":"32090","RawContent":null,"Title":"No nested nullability warnings on converting suppressed expressions","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/29642 (! operator should suppress warning for nested nullability mismatch)\r\nFixes https://github.com/dotnet/roslyn/issues/29900 (missing diagnostic in compound assignment)\r\n\r\nBecause `!` can now suppress nested warnings or warnings from user-defined conversions, it is useful to allow `!` on all types. So I removed `WRN_SuppressionOperatorNotReferenceType`.\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/29907 (finalize which types `!` should be allowed on)","Url":"https://github.com/dotnet/roslyn/pull/32090","RelatedDescription":"Open PR \"No nested nullability warnings on converting suppressed expressions\" (#32090)"},{"Id":"395137392","IsPullRequest":false,"CreatedAt":"2019-01-02T02:47:07","Actor":"vsfeedback","Number":"32089","RawContent":null,"Title":"If I remove the space from { 0}, to {0}, it works perfectly. ","State":"open","Body":"With this statement: Console.WriteLine(&quot;char.IsWhiteSpace('Hello There',5): { 0}&quot;,char.IsWhiteSpace(&quot;Hello There&quot;, 5));\n\nI get:\nUnhandled Exception: System.FormatException: Input string was not in a correct format.\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\n   at System.IO.TextWriter.WriteLine(String format, Object arg0)\n   at System.IO.TextWriter.SyncTextWriter.WriteLine(String format, Object arg0)\n   at System.Console.WriteLine(String format, Object arg0)\n   at WriteTextFile.WriteTextFile.CharFunctionality() in C:\\Users\\qetuo\\Documents\\Visual Studio 2018\\WriteTextFile\\WriteTextFile\\Program.cs:line 182\n\nIf I remove the space from { 0}, to {0}, it works perfectly. \n\nHaving the space should not be a problem.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/398878/if-i-remove-the-space-from-0-to-0-it-works-perfect.html\nVSTS ticketId: 739988_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32089","RelatedDescription":"Open issue \"If I remove the space from { 0}, to {0}, it works perfectly. \" (#32089)"},{"Id":"395136589","IsPullRequest":false,"CreatedAt":"2019-01-02T02:37:19","Actor":"vsfeedback","Number":"32088","RawContent":null,"Title":"Problem with simplify suggestion var","State":"open","Body":"static class Program\n    {\n        static void Main(string[] args)\n        {\n            if (!_data.TryGetValue(0, out List&lt;(int X, int Y)&gt; value))\n                return;\n\n            var x = value.FirstOrDefault().X;\n        }\n\n        private static Dictionary&lt;int, List&lt;(int, int)&gt;&gt; _data =\n            new Dictionary&lt;int, List&lt;(int, int)&gt;&gt;();\n    }\n\n\nIn this code List&lt;(int X, int Y)&gt; is faded with suggestion to simplify name to var. Although simplifying leads to compile time error\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/397138/problem-with-simplify-suggestion-var.html\nVSTS ticketId: 739018_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32088","RelatedDescription":"Open issue \"Problem with simplify suggestion var\" (#32088)"},{"Id":"395129353","IsPullRequest":false,"CreatedAt":"2019-01-02T01:24:10","Actor":"vsfeedback","Number":"32087","RawContent":null,"Title":"VisualBasicUseConditionalExpressionForAssignmentCodeRefactoringProvider STILL on Error","State":"open","Body":"You closed my last Error message as Duplicate but there is still the same error sice many releases.\n\ntry the following refactoring:\n\n Public Function ColName(aExtendedName As Boolean) As String\n        If aExtendedName Then\n            ColName = Current.SchemaName &amp; &quot;.&quot; &amp; ColName()\n        Else\n            ColName = Name\n        End If\n    End Function\n\nResult:\nIDE0045 goes to Error\n\nHere the Stack Trace:\nSystem.InvalidCastException : Das Objekt des Typs &quot;Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax&quot; kann nicht in Typ &quot;Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax&quot; umgewandelt werden.\n   at Microsoft.CodeAnalysis.VisualBasic.UseConditionalExpression.VisualBasicUseConditionalExpressionForAssignmentCodeRefactoringProvider.GetDeclaratorSyntax(IVariableDeclaratorOperation declarator)\n   at Microsoft.CodeAnalysis.UseConditionalExpression.AbstractUseConditionalExpressionForAssignmentCodeFixProvider`6.TryConvertWhenAssignmentToLocalDeclaredImmediateAbove(ISyntaxFactsService syntaxFacts,SyntaxEditor editor,IConditionalOperation ifOperation,ISimpleAssignmentOperation trueAssignment,ISimpleAssignmentOperation falseAssignment,TExpressionSyntax conditionalExpression)\n   at async Microsoft.CodeAnalysis.UseConditionalExpression.AbstractUseConditionalExpressionForAssignmentCodeFixProvider`6.FixOneAsync[TStatementSyntax,TIfStatementSyntax,TLocalDeclarationStatementSyntax,TVariableDeclaratorSyntax,TExpressionSyntax,TConditionalExpressionSyntax](&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.UseConditionalExpression.AbstractUseConditionalExpressionCodeFixProvider`4.FixAllAsync[TStatementSyntax,TIfStatementSyntax,TExpressionSyntax,TConditionalExpressionSyntax](&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.FixAllWithEditorAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.&lt;&gt;c__DisplayClass11_0.&lt;GetPreviewAsync&gt;b__0(&lt;Unbekannte Parameter&gt;)\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](&lt;Unbekannte Parameter&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/403049/visualbasicuseconditionalexpressionforassignmentco.html\nVSTS ticketId: 744255_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32087","RelatedDescription":"Open issue \"VisualBasicUseConditionalExpressionForAssignmentCodeRefactoringProvider STILL on Error\" (#32087)"},{"Id":"395122477","IsPullRequest":true,"CreatedAt":"2019-01-02T01:00:05","Actor":"dotnet-bot","Number":"32084","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32084","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32084)"},{"Id":"395125388","IsPullRequest":false,"CreatedAt":"2019-01-02T00:52:30","Actor":"vsfeedback","Number":"32086","RawContent":null,"Title":"Crash \"Visual Studio\" at rename variable in code","State":"open","Body":"<p>If the code contains a line with an error, and you are trying to rename the variable, the development environment crashes and Visual Studio restarts.<br><br>Visual Studio Verion 15.9.3 <br>Simple code: (Console app, Visual Basic)<br><br>Module Module1<br><br>    Sub Main()<br><br>        ' Try renaming the variable &quot;val&quot;. (Right Click -&gt; Rename...)<br>        Dim val As Integer = 10<br><br>        ' Line code with error<br>        For (Int() i = 0; i &lt;val; i++)<br><br>    End Sub<br><br>End Module</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/394687/crash-visual-studio-at-rename-variable-in-code.html\nVSTS ticketId: 736894_\n_These are the original issue comments:_\n\nFiona Niu[MSFT] on 11/29/2018, 06:20 PM (32 days ago): <p>Thank you for your feedback. In order for us to investigate this further, could you please give us a dump file so that we can conduct further research? </p><p> </p><p> 1. Please follow the instructions below, especially &quot;Provide a trace and heap dump&quot; section to record the issue you are experiencing.</p><p> 2.  https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017 </p><p> 3. The recorded files can be found under %TEMP%\\Microsoft\\VSFeedbackCollector.</p><p> 4. Upload the files to this ticket by choosing insert file tag on add comment field then submit.</p><p> </p><p>We look forward to hearing from you!</p>\n\nТютрюмов Максим on 11/29/2018, 08:42 PM (32 days ago): <p>Sent a record. Is that what you wanted?</p><p>Memory_8252_1543552764291.dmp 669 100 Kb (O_O). This is madness.</p>\n\nFiona Niu[MSFT] on 11/29/2018, 11:32 PM (32 days ago): <p>Thank you for providing the information. We are forwarding the issue to the engineering team for investigating. The engineer will investigate the issue and keep you posted. </p>\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32086","RelatedDescription":"Open issue \"Crash \"Visual Studio\" at rename variable in code\" (#32086)"},{"Id":"395124538","IsPullRequest":false,"CreatedAt":"2019-01-02T00:36:25","Actor":"vsfeedback","Number":"32085","RawContent":null,"Title":"remove unnecessary parentheses causes compile error","State":"open","Body":"I surround my code with parentheses, after completeing code VS mark two pair of parentheses in a line unnecessary, when cursor is on first one and allow VS to &quot;remove unnecessary parentheses&quot; with &quot;Alt + Enter&quot; the second pair is now NOT unnecessary, and if cursor is on second one and allow VS to  &quot;remove unnecessary parentheses&quot; causes compile error\r\n\r\nLine 59 in screenshot\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/415284/remove-unnecessary-parentheses-causes-compile-erro.html\r\n\r\n![image](https://user-images.githubusercontent.com/12449387/50577730-68e3af00-0de3-11e9-93dc-c4007ddaf55f.png)\r\n\r\nVSTS ticketId: 756627_\r\n_These are the original issue comments:_\r\n(no comments)\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32085","RelatedDescription":"Open issue \"remove unnecessary parentheses causes compile error\" (#32085)"},{"Id":"394893136","IsPullRequest":true,"CreatedAt":"2019-01-01T23:33:09","Actor":"jcouv","Number":"32062","RawContent":null,"Title":"Add null checks in AwaitExpressionInfo","State":"closed","Body":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/744146","Url":"https://github.com/dotnet/roslyn/pull/32062","RelatedDescription":"Closed or merged PR \"Add null checks in AwaitExpressionInfo\" (#32062)"},{"Id":"395120633","IsPullRequest":false,"CreatedAt":"2019-01-01T23:28:18","Actor":"vsfeedback","Number":"32083","RawContent":null,"Title":"Go to implementation not working in Visual Studio Community 2017","State":"open","Body":"When I try Go to implementation on an interface(through mouse right click as well as keywboard shortcut F12), it throws an error first time. On subsequent attempts nothing happens.\nI am attaching the screenshot of the error and the activity log as well. Below is the error section from ActivityLog.xml generated in roaming profile for VS:\n\n&lt;entry&gt;\n    &lt;record&gt;2116&lt;/record&gt;\n    &lt;time&gt;2018/12/20 11:25:51.813&lt;/time&gt;\n    &lt;type&gt;Error&lt;/type&gt;\n    &lt;source&gt;Editor or Editor Extension&lt;/source&gt;\n    &lt;description&gt;System.AggregateException: One or more errors occurred. ---&amp;gt; System.AggregateException: One or more errors occurred. ---&amp;gt; System.AggregateException: One or more errors occurred. ---&amp;gt; System.NullReferenceException: Object reference not set to an instance of an object.&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&amp;lt;CreateIndexAsync&amp;gt;d__8.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&amp;#x000D;&amp;#x000A;   --- End of inner exception stack trace ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;AddSourceTypesInProjectAsync&amp;gt;d__29.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesInProjectAsync&amp;gt;d__19.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesAsync&amp;gt;d__17.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTransitivelyImplementingTypesWorkerAsync&amp;gt;d__14.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;&amp;gt;c__DisplayClass9_0.&amp;lt;&amp;lt;FindTypesFromCacheOrComputeAsync&amp;gt;b__0&amp;gt;d.MoveNext()&amp;#x000D;&amp;#x000A;   --- End of inner exception stack trace ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesFromCacheOrComputeAsync&amp;gt;d__9.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&amp;lt;FindImplementationsAsync&amp;gt;d__48.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&amp;lt;FindImplementationsAsync&amp;gt;d__47.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&amp;lt;FindImplementationsWorkerAsync&amp;gt;d__4.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&amp;lt;FindImplementationsAsync&amp;gt;d__3.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&amp;lt;FindImplementationsAsync&amp;gt;d__2.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.AbstractFindUsagesService.&amp;lt;FindImplementationsAsync&amp;gt;d__0.MoveNext()&amp;#x000D;&amp;#x000A;   --- End of inner exception stack trace ---&amp;#x000D;&amp;#x000A;   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)&amp;#x000D;&amp;#x000A;   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.GoToImplementation.GoToImplementationCommandHandler.StreamingGoToImplementation(Document document, Int32 caretPosition, IFindUsagesService findUsagesService, IStreamingFindUsagesPresenter streamingPresenter, CancellationToken cancellationToken, String&amp;amp; messageToShow)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.GoToImplementation.GoToImplementationCommandHandler.ExecuteCommand(Document document, Int32 caretPosition, IFindUsagesService streamingService, CommandExecutionContext context)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.GoToImplementation.GoToImplementationCommandHandler.ExecuteCommand(GoToImplementationCommandArgs args, CommandExecutionContext context)&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Commanding.CommandHandlerExtensions.ExecuteCommand[T](ICommandHandler commandHandler, T args, Action nextCommandHandler, CommandExecutionContext executionContext)&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService.&amp;lt;&amp;gt;c__DisplayClass14_1`1.&amp;lt;Execute&amp;gt;b__1()&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint(Object errorSource, Action call, Predicate`1 exceptionFilter)&amp;#x000D;&amp;#x000A;---&amp;gt; (Inner Exception #0) System.AggregateException: One or more errors occurred. ---&amp;gt; System.AggregateException: One or more errors occurred. ---&amp;gt; System.NullReferenceException: Object reference not set to an instance of an object.&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&amp;lt;CreateIndexAsync&amp;gt;d__8.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&amp;#x000D;&amp;#x000A;   --- End of inner exception stack trace ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;AddSourceTypesInProjectAsync&amp;gt;d__29.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesInProjectAsync&amp;gt;d__19.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesAsync&amp;gt;d__17.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTransitivelyImplementingTypesWorkerAsync&amp;gt;d__14.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;&amp;gt;c__DisplayClass9_0.&amp;lt;&amp;lt;FindTypesFromCacheOrComputeAsync&amp;gt;b__0&amp;gt;d.MoveNext()&amp;#x000D;&amp;#x000A;   --- End of inner exception stack trace ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesFromCacheOrComputeAsync&amp;gt;d__9.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&amp;lt;FindImplementationsAsync&amp;gt;d__48.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&amp;lt;FindImplementationsAsync&amp;gt;d__47.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&amp;lt;FindImplementationsWorkerAsync&amp;gt;d__4.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&amp;lt;FindImplementationsAsync&amp;gt;d__3.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&amp;lt;FindImplementationsAsync&amp;gt;d__2.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.FindUsages.AbstractFindUsagesService.&amp;lt;FindImplementationsAsync&amp;gt;d__0.MoveNext()&amp;#x000D;&amp;#x000A;---&amp;gt; (Inner Exception #0) System.AggregateException: One or more errors occurred. ---&amp;gt; System.NullReferenceException: Object reference not set to an instance of an object.&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&amp;lt;CreateIndexAsync&amp;gt;d__8.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&amp;#x000D;&amp;#x000A;   --- End of inner exception stack trace ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;AddSourceTypesInProjectAsync&amp;gt;d__29.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesInProjectAsync&amp;gt;d__19.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTypesAsync&amp;gt;d__17.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;FindTransitivelyImplementingTypesWorkerAsync&amp;gt;d__14.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&amp;lt;&amp;gt;c__DisplayClass9_0.&amp;lt;&amp;lt;FindTypesFromCacheOrComputeAsync&amp;gt;b__0&amp;gt;d.MoveNext()&amp;#x000D;&amp;#x000A;---&amp;gt; (Inner Exception #0) System.NullReferenceException: Object reference not set to an instance of an object.&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&amp;lt;CreateIndexAsync&amp;gt;d__8.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&amp;lt;---&amp;#x000D;&amp;#x000A;&amp;lt;---&amp;#x000D;&amp;#x000A;&amp;lt;---&amp;#x000D;&amp;#x000A;&lt;/description&gt;\n  &lt;/entry&gt;\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/413245/go-to-implementation-not-working-in-visual-studio.html\nVSTS ticketId: 754985_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32083","RelatedDescription":"Open issue \"Go to implementation not working in Visual Studio Community 2017\" (#32083)"},{"Id":"395119041","IsPullRequest":false,"CreatedAt":"2019-01-01T23:01:50","Actor":"vsfeedback","Number":"32082","RawContent":null,"Title":"C# code format for linq should with an indent","State":"open","Body":"1. Create a new C# project, and type code just in the Main function:\nvar s = (from c in &quot;test&quot; select c).Distinct();\n\n2-A. Press Enter before &quot;select&quot;, the code format will be:\nvar s = (from c in &quot;test&quot;\n             select c).Distinct();\n&quot;select&quot; will align to &quot;from&quot;, not good.\nWhat about the new format:\nvar s = (from c in &quot;test&quot;\n    select c).Distinct();\n\n2-B. OR, Insert Enter before “.” will be:\nvar s = (from c in &quot;test&quot;select c)\n.Distinct();\n&quot;.&quot; will align to &quot;var&quot;, not good.\nWhat about the new format:\nvar s = (from c in &quot;test&quot; select c)\n    .Distinct();\n\n2-C. OR, Insert Enter before “select” will be:\nvar s = (from c in &quot;test&quot;\nselect c).Distinct();\n&quot;.&quot; will align to &quot;var&quot;, not good.\nWhat about the new format:\nvar s = (from c in &quot;test&quot;\n    select c).Distinct();\n\nIn a word, any new line in one code line block should always with an indent.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/409183/c-code-format-for-linq-should-with-an-indent.html\nVSTS ticketId: 752329_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32082","RelatedDescription":"Open issue \"C# code format for linq should with an indent\" (#32082)"},{"Id":"395117631","IsPullRequest":false,"CreatedAt":"2019-01-01T22:37:18","Actor":"vsfeedback","Number":"32081","RawContent":null,"Title":"PopulateSwitchCodeFixProvider encountered an error and has been disabled","State":"open","Body":"I am trying to play with a new C# 8 language feature using switch.  The compiler doesn't like what I have done and adds a red squiggle to the &quot;switch&quot; keyword. When I put the cursor on it and then click the light bulb, I get a message in the yellow info bar at the top that says:\n\n'PopulateSwitchCodeFixProvider' encountered an error and has been disabled\n\nIt then has a link to &quot;Show Stack Trace&quot; (I have included it below) and 2 buttons, &quot;Enable&quot; and &quot;Enable and ignore future errors&quot;.\n\nIf I click on &quot;Enable&quot; and then on the light bulb, it does the same thing again.\n\nThe code I am trying to write is:\nstatic string GetName(Person p)\n\t\t{\n\t\t\treturn (p.FirstName, p.MiddleName, p.LastName) switch\n\t\t\t\t{\n\t\t\t\t\t\t\t(string f, string m, string l)\t=&gt; $&quot;{f} {m[0]}. {l}&quot;,\n\t\t\t\t\t\t\t(string f, null, string l)\t\t=&gt; $&quot;{f} {l}&quot;,\n\t\t\t\t\t\t\t(string f, string m, null)\t\t=&gt; $&quot;{f} {m[0]}. &lt;someone&gt;&quot;,\n\t\t\t\t\t\t\t(string f, null, null)\t\t\t=&gt; $&quot;{f} &lt;someone&gt;&quot;,\n\t\t\t\t\t\t\t(null, string m, string l)\t\t=&gt; $&quot;Ms/Mr {m[0]}. {l}&quot;,\n\t\t\t\t\t\t\t(null, null, string l)\t\t\t=&gt; $&quot;Ms/Mr {l}&quot;,\n\t\t\t\t\t\t\t(null, string m, null)\t\t\t=&gt; $&quot;Ms/Mr {m[0]}. &lt;someone&gt;&quot;,\n\t\t\t\t\t\t\t(null, null, null)\t\t\t\t=&gt; $&quot;Ms/Mr &lt;someone&gt;&quot;,\n\t\t\t\t};\n}\n\n\nThe stack trace is:\nSystem.InvalidOperationException : Unexpected false\n   at Roslyn.Utilities.Contract.ThrowIfFalse(Boolean condition,String message)\n   at Microsoft.CodeAnalysis.CSharp.Formatting.TriviaDataFactory.Analyzer.Analyze(SyntaxTriviaList list,AnalysisResult&amp; result)\n   at Microsoft.CodeAnalysis.CSharp.Formatting.TriviaDataFactory.Analyzer.Between(SyntaxToken token1,SyntaxToken token2)\n   at Microsoft.CodeAnalysis.CSharp.Formatting.TriviaDataFactory.Create(SyntaxToken token1,SyntaxToken token2)\n   at Microsoft.CodeAnalysis.Formatting.TokenStream.GetOriginalTriviaData(TokenData token1,TokenData token2)\n   at Microsoft.CodeAnalysis.Formatting.TokenStream.GetColumn(TokenData tokenData,Func`3 triviaDataGetter)\n   at Microsoft.CodeAnalysis.Formatting.FormattingContext.AddAnchorIndentationOperation(AnchorIndentationOperation operation)\n   at Roslyn.Utilities.EnumerableExtensions.Do[T](IEnumerable`1 source,Action`1 action)\n   at Microsoft.CodeAnalysis.Formatting.AbstractFormatEngine.&lt;&gt;c__DisplayClass14_0.&lt;FormatAsync&gt;b__0(Task`1 task)\n   at Microsoft.CodeAnalysis.Formatting.TaskExecutor.SynchronousExecutor.ContinueWith[T1,T2](Task`1 previousTask,Func`2 nextAction,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.Formatting.AbstractFormatEngine.FormatAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Formatting.AbstractSyntaxFormattingService.FormatIndividuallyAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Formatting.Formatter.FormatAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Formatting.Formatter.FormatAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.CleanupDocumentAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.PostProcessChangesAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.PostProcessAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.&lt;&gt;c__DisplayClass11_0.&lt;GetPreviewAsync&gt;b__0(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/416889/populateswitchcodefixprovider-encountered-an-error.html\nVSTS ticketId: 757882_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32081","RelatedDescription":"Open issue \"PopulateSwitchCodeFixProvider encountered an error and has been disabled\" (#32081)"},{"Id":"395116263","IsPullRequest":false,"CreatedAt":"2019-01-01T22:16:24","Actor":"vsfeedback","Number":"32080","RawContent":null,"Title":"MoveTypeCodeRefactoringProvider encounted an error","State":"open","Body":"when I ctrl-dot on a class or interface that is in the file of a different piece of code, and then press down to select &quot;move to ...&quot; I get an error that tells me &quot;MoveTypeCodeRefactoringProvider encounted an error and has been disabled&quot;.\n\nThe stacktrace is:\n```\nSystem.InvalidOperationException : Unexpected false\n   at Roslyn.Utilities.Contract.ThrowIfFalse(Boolean condition,String message)\n   at Microsoft.CodeAnalysis.CSharp.Formatting.TriviaDataFactory.Analyzer.Analyze(SyntaxTriviaList list,AnalysisResult&amp; result)\n   at Microsoft.CodeAnalysis.CSharp.Formatting.TriviaDataFactory.Analyzer.Leading(SyntaxToken token)\n   at Microsoft.CodeAnalysis.CSharp.Formatting.TriviaDataFactory.CreateLeadingTrivia(SyntaxToken token)\n   at Microsoft.CodeAnalysis.Formatting.TokenStream.GetOriginalTriviaData(TokenData token1,TokenData token2)\n   at Microsoft.CodeAnalysis.Formatting.TokenStream.GetColumn(TokenData tokenData,Func`3 triviaDataGetter)\n   at Microsoft.CodeAnalysis.Formatting.FormattingContext.AddAnchorIndentationOperation(AnchorIndentationOperation operation)\n   at Roslyn.Utilities.EnumerableExtensions.Do[T](IEnumerable`1 source,Action`1 action)\n   at Microsoft.CodeAnalysis.Formatting.AbstractFormatEngine.&lt;&gt;c__DisplayClass14_0.&lt;FormatAsync&gt;b__0(Task`1 task)\n   at Microsoft.CodeAnalysis.Formatting.TaskExecutor.SynchronousExecutor.ContinueWith[T1,T2](Task`1 previousTask,Func`2 nextAction,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.Formatting.AbstractFormatEngine.FormatAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Formatting.AbstractSyntaxFormattingService.FormatIndividuallyAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Formatting.Formatter.FormatAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports.AbstractCSharpRemoveUnnecessaryImportsService.FormatResultAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports.AbstractCSharpRemoveUnnecessaryImportsService.RemoveUnnecessaryImportsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.MoveType.AbstractMoveTypeService`5.MoveTypeEditor.AddNewDocumentWithSingleTypeDeclarationAndImportsAsync[TService,TTypeDeclarationSyntax,TNamespaceDeclarationSyntax,TMemberDeclarationSyntax,TCompilationUnitSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.MoveType.AbstractMoveTypeService`5.MoveTypeEditor.GetOperationsAsync[TService,TTypeDeclarationSyntax,TNamespaceDeclarationSyntax,TMemberDeclarationSyntax,TCompilationUnitSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.MoveType.AbstractMoveTypeService`5.MoveTypeCodeAction.ComputeOperationsAsync[TService,TTypeDeclarationSyntax,TNamespaceDeclarationSyntax,TMemberDeclarationSyntax,TCompilationUnitSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.&lt;&gt;c__DisplayClass11_0.&lt;GetPreviewAsync&gt;b__0(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](&lt;Unknown Parameters&gt;)\n```\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/416137/movetypecoderefactoringprovider-encounted-an-error.html\nVSTS ticketId: 757134_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32080","RelatedDescription":"Open issue \"MoveTypeCodeRefactoringProvider encounted an error\" (#32080)"},{"Id":"395111655","IsPullRequest":true,"CreatedAt":"2019-01-01T21:00:14","Actor":"agocke","Number":"32079","RawContent":null,"Title":"Synthesize record ctor body","State":"open","Body":"Add code to synthesize a record constructor body. Unfortunately this\r\nbreaks field initializers in records because the current MethodCompiler\r\ncode can only handle 100% synthesized bodies, empty bodies, or\r\nuser-written bodies for constructors and initializers are added only for\r\nthe last two.","Url":"https://github.com/dotnet/roslyn/pull/32079","RelatedDescription":"Open PR \"Synthesize record ctor body\" (#32079)"},{"Id":"395098333","IsPullRequest":true,"CreatedAt":"2019-01-01T17:07:01","Actor":"jcouv","Number":"32078","RawContent":null,"Title":"Learn from non-null test through suppression operator","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/31733\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/32078","RelatedDescription":"Open PR \"Learn from non-null test through suppression operator\" (#32078)"},{"Id":"395076876","IsPullRequest":true,"CreatedAt":"2019-01-01T13:00:05","Actor":"dotnet-bot","Number":"32077","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32077","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32077)"},{"Id":"395068263","IsPullRequest":false,"CreatedAt":"2019-01-01T09:20:57","Actor":"vsfeedback","Number":"32076","RawContent":null,"Title":"If you write Else after an Exit \"iterator\" Intellisense shown ElseIf","State":"open","Body":"<p>If you write Else after an Exit &lt;iterator&gt; Intellisense shown ElseIf<br><br>If you have a &quot;loop&quot; (For, Do, etc.) and have an If ... End If condition wich includes an Ext &quot;loop&quot; if you try to wrtite an Else clause, Intellisense shows only ElseIf (see attached capture).<br>If the IF/End If don't have an Exit clause shows both Else and ElseIf as expected.<br><br>It happens in Visual Studio 2019 Preview 1.1 (16.0.0) and also in Visual Studio 2017 15.9.4<br><br>I'm using Visual Basic. With C# there is no problem only shows else :-)<br><br>For example:<br><br>For i = 1 To 10<br>    Dim j = 3<br>    If j&gt;2 Then<br>        Exit For<br><br>        ' If you write Else, Intellisense only shows ElseIf<br><br>    End If<br>Next</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/413645/if-you-write-else-after-an-exit-intellisense-shown.html\nVSTS ticketId: 755189_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32076","RelatedDescription":"Open issue \"If you write Else after an Exit \"iterator\" Intellisense shown ElseIf\" (#32076)"},{"Id":"395043214","IsPullRequest":true,"CreatedAt":"2019-01-01T01:00:04","Actor":"dotnet-bot","Number":"32075","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32075","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32075)"},{"Id":"395042036","IsPullRequest":false,"CreatedAt":"2018-12-31T23:37:58","Actor":"AmadeusW","Number":"32074","RawContent":null,"Title":"Async completion: completing parameter name with colon should swallow the command","State":"open","Body":"**Version Used**: 28421.137.d16.0stg, async completion flag turned on\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Invoke completion when providing parameter name\r\n2. Complete using colon\r\n\r\n**Expected Behavior**:\r\n\r\nParameter name should be inserted with single colon\r\n\r\n**Actual Behavior**:\r\n\r\nParameter name is inserted with two colons\r\n\r\n**Solution**:\r\n\r\nTo fix, Roslyn's completion should specify `CommitBehavior.SuppressFurtherTypeCharCommandHandlers` upon commit.","Url":"https://github.com/dotnet/roslyn/issues/32074","RelatedDescription":"Open issue \"Async completion: completing parameter name with colon should swallow the command\" (#32074)"},{"Id":"395030350","IsPullRequest":true,"CreatedAt":"2018-12-31T21:06:23","Actor":"jcouv","Number":"32073","RawContent":null,"Title":"Add test verifying 'is' pattern side-effects","State":"closed","Body":"Closes https://github.com/dotnet/roslyn/issues/30310","Url":"https://github.com/dotnet/roslyn/pull/32073","RelatedDescription":"Closed or merged PR \"Add test verifying 'is' pattern side-effects\" (#32073)"},{"Id":"395028971","IsPullRequest":true,"CreatedAt":"2018-12-31T20:34:25","Actor":"jaredpar","Number":"32072","RawContent":null,"Title":"Publish NuPkg as artifact","State":"open","Body":"This changes our build so that it publishes our NuPkg files on PR and CI\r\nbuilds. This enables both us to inspect our artifacts when debugging\r\nfailures as well as other services, like sharplab, to download them\r\nwithout having to go through the trouble of building them themselves.","Url":"https://github.com/dotnet/roslyn/pull/32072","RelatedDescription":"Open PR \"Publish NuPkg as artifact\" (#32072)"},{"Id":"395020543","IsPullRequest":true,"CreatedAt":"2018-12-31T19:06:55","Actor":"AlekseyTs","Number":"32071","RawContent":null,"Title":"Add support for /nullable:warnings and /nullable:safeonlywarnings","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/32071","RelatedDescription":"Open PR \"Add support for /nullable:warnings and /nullable:safeonlywarnings\" (#32071)"},{"Id":"395020513","IsPullRequest":false,"CreatedAt":"2018-12-31T19:06:34","Actor":"JasonBock","Number":"32070","RawContent":null,"Title":"Getting Issue With ExtractMethodCodeRefactoringProvider, Crashing With InvalidCastException","State":"open","Body":"**Version Used**: VS 15.9.4 \r\n\r\n**Steps to Reproduce**:\r\nI wish I could give a specific reproduction. I'm currently editing some code and I'm sporadically getting this issue.\r\n\r\n**Expected Behavior**:\r\nThe analyzer doesn't fail.\r\n\r\n**Actual Behavior**:\r\nThe analyzer is failing with the following stack trace:\r\n\r\nSystem.InvalidCastException : Unable to cast object of type 'Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax' to type 'Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax'.\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.CodeGenerator`3.AddInvocationAtCallSiteAsync[TStatement,TExpression,TNodeUnderContainer](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CSharp.ExtractMethod.CSharpMethodExtractor.CSharpCodeGenerator.CreateStatementsOrInitializerToInsertAtCallSiteAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CSharp.ExtractMethod.CSharpMethodExtractor.CSharpCodeGenerator.GenerateBodyForCallSiteContainerAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.CodeGenerator`3.GenerateAsync[TStatement,TExpression,TNodeUnderContainer](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ExtractMethodAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.AbstractExtractMethodService`3.ExtractMethodAsync[TValidator,TExtractor,TResult](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.GetCodeActionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n\r\nIf I can figure out a piece of code that consistently reproduces this I'll add it to the issue.","Url":"https://github.com/dotnet/roslyn/issues/32070","RelatedDescription":"Open issue \"Getting Issue With ExtractMethodCodeRefactoringProvider, Crashing With InvalidCastException\" (#32070)"},{"Id":"395013125","IsPullRequest":false,"CreatedAt":"2018-12-31T17:53:12","Actor":"jaredpar","Number":"32069","RawContent":null,"Title":"Test plan for static local functions","State":"open","Body":"### Feature\r\n[Static Local Functions](https://github.com/dotnet/csharplang/issues/1565)\r\n\r\nThis feature allows for the following changes to local functions:\r\n\r\n1. Allow `static` modifier to be applied to local function declarations. Such a function will not be allowed to capture\r\nany state from the enclosing functions: locals, parameters or `this`.  Additionally the function is guaranteed to be\r\nemitted as `static` in the binary.\r\n1. Allow locals and parameters in a local function, `static` or not, to shadow identifiers in the enclosing scope.\r\n\r\n### Code Examples\r\n\r\nStatic enforcement\r\n\r\n``` csharp\r\nint field;\r\nvoid M() {\r\n    int x = 42;\r\n\r\n    M(x);\r\n    static int M(int p) {\r\n        Console.WriteLine(x);       // Error: Can't capture local\r\n        Console.WriteLine(field);   // Error: Can't capture this\r\n        return p;\r\n    }\r\n}\r\n```\r\n\r\nShadowing \r\n\r\n``` csharp \r\nvoid G(DiagnosticBag diagnostics) {\r\n\r\n    void M(DiagnosticsBag diagnostics) {\r\n        DiagnosticsBag diagnostics;     // Error: can't shadow in same scope\r\n    }\r\n}\r\n```\r\n\r\n### Compiler Scenarios\r\n\r\n- [ ] Ensure all features tied to the C# 8.0 feature flag\r\n    - [ ] Can't shadow\r\n    - [ ] Can't annotate a local function with `static`\r\n- [ ] `static` local function\r\n    - [ ] Can't capture `this`, local or parameter (function or lambda)\r\n    - [ ] Can't call instance methods\r\n    - [ ] Can't use instance fields\r\n    - [ ] Can access `private` data from enclosing scope as long as it's `static`\r\n    - [ ] Parsing \r\n        - [ ] Fails for `static static`\r\n        - [ ] Fails for `static <return type>`\r\n    - [ ] Definition is emitted as `static` in the binary\r\n    - [ ] Can't declare an extension method\r\n    - [ ] Semantic API correctly implements the is static check for local functions\r\n- [ ] Shadowing\r\n    - [ ] Can't shadow within a scope\r\n    - [ ] Can shadow in non-`static` local functions\r\n    - [ ] Can shadow local, parameter, lambda parameter, local function parameter\r\n    - [ ] Can shadow with different type\r\n    - [ ] Can shadow in\r\n        - [x] LINQ query `from`\r\n        - [ ] LINQ query `group by`\r\n        - [ ] Pattern expression\r\n        - [ ] `out` variable declaration\r\n        - [ ] Type parameter\r\n    - [ ] Can't shadow in lambda expressions (not part of this implementation)\r\n    - [ ] `nameof` on identifiers that shadow (variables and type parameter)\r\n    - [ ] Ensure self referencing initializers that shadow use final identifier\r\n        ``` csharp\r\n        void M() { \r\n            int x = 13;\r\n            void G() { \r\n                int x = (x = 0) + 42;\r\n                Console.WriteLine(x);   // Prints 42\r\n            }\r\n            G();\r\n            Console.WriteLine(x);       // Prints 13\r\n        }\r\n        ```\r\n    - [ ] IOperation can produce nodes for identifiers that shadow\r\n    - [ ] CFG can represent control flow of shadowed identifiers properly\r\n\r\n### IDE Scenarios\r\n\r\n- [ ] EE\r\n    - [ ] Evaluate locals / params that shadow other local / params\r\n    - [ ] Evaluate local function marked `static`\r\n- [ ] ENC\r\n    - [ ] Ensure adding a shadowing identifier is processed correctly\r\n- [ ] Intellisense\r\n    - [ ] Recommend `static` when typing out a local function declaration\r\n    - [ ] Only recomends final identifier (shadowed identifiers are not included)","Url":"https://github.com/dotnet/roslyn/issues/32069","RelatedDescription":"Open issue \"Test plan for static local functions\" (#32069)"},{"Id":"395007321","IsPullRequest":false,"CreatedAt":"2018-12-31T17:02:30","Actor":"jaredpar","Number":"32068","RawContent":null,"Title":"Dynamic can't bind to events on locals","State":"open","Body":"Compile the following code sample: \r\n\r\n``` csharp\r\nnamespace ConsoleApp7\r\n{\r\n    internal class Class1\r\n    {\r\n        public event EventHandler<HighLightEventArgs> Highlight;\r\n    }\r\n\r\n    internal class HighLightEventArgs : EventArgs\r\n    {\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            dynamic obj = new Class1();\r\n            obj.Highlight += new EventHandler<HighLightEventArgs>(Handler);\r\n        }\r\n\r\n        static void Handler(object sender, HighLightEventArgs e)\r\n        {\r\n            Console.WriteLine(\"Hello from event\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis application should compile and execute without errors. This works on 15.9 but fails in 16.0 preview 1 and 2. \r\n\r\nOriginal bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/753472","Url":"https://github.com/dotnet/roslyn/issues/32068","RelatedDescription":"Open issue \"Dynamic can't bind to events on locals\" (#32068)"},{"Id":"395003749","IsPullRequest":true,"CreatedAt":"2018-12-31T16:32:55","Actor":"cston","Number":"32067","RawContent":null,"Title":"Static local functions","State":"open","Body":"Allow `static` modifier for local functions in C#8; report errors for `static` local functions that reference `this` or a variable in an outer scope; and allow shadowing of local and parameter names inside local functions.\r\n\r\n[jcouv update:]\r\nChampioned issue: https://github.com/dotnet/csharplang/issues/1565\r\nLast LDM notes: https://github.com/dotnet/csharplang/blob/master/meetings/2018/LDM-2018-09-10.md","Url":"https://github.com/dotnet/roslyn/pull/32067","RelatedDescription":"Open PR \"Static local functions\" (#32067)"},{"Id":"394906895","IsPullRequest":false,"CreatedAt":"2018-12-31T15:44:55","Actor":"Tornhoof","Number":"32064","RawContent":null,"Title":"CS8625 and CS8603 for Enum constraints in nullable ref type project","State":"closed","Body":"Warnings\r\nWarning\tCS8625\tCannot convert null literal to non-nullable reference or unconstrained type parameter.\t\r\nWarning\tCS8603\tPossible null reference return.\r\nare shown for an Enum constraint.\r\n\r\n**Version Used**: \r\nVS 2019 Preview 1.1\r\n.NET SDK Version:   3.0.100-preview-009844\r\n**Steps to Reproduce**:\r\n1. Create project and set:\r\n```xml\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableReferenceTypes>true</NullableReferenceTypes>\r\n```\r\n2. Copy following source code into the project:\r\n```csharp\r\nnamespace ConsoleApp8\r\n{\r\n    public interface ISerializer<T>\r\n    {\r\n        T Serialize();\r\n    }\r\n\r\n    public class EnumSerializer<TEnum> : ISerializer<TEnum> where TEnum : /*struct,*/ Enum\r\n    {\r\n        public TEnum Serialize()\r\n        {\r\n            return default; // CS8625 and CS8603\r\n        }\r\n    }\r\n}\r\n```\r\n3. Look at the warnings.\r\n\r\n**Expected Behavior**:\r\n`` return default`` is valid\r\n**Actual Behavior**:\r\nCS8625 and CS8603\r\n**Workaround**\r\nConstraint the type further with ``struct``","Url":"https://github.com/dotnet/roslyn/issues/32064","RelatedDescription":"Closed issue \"CS8625 and CS8603 for Enum constraints in nullable ref type project\" (#32064)"},{"Id":"394907716","IsPullRequest":false,"CreatedAt":"2018-12-31T03:36:50","Actor":"Tornhoof","Number":"32065","RawContent":null,"Title":"Throw Exception in method call not recognized for nullable ref-type check (CS0165)","State":"closed","Body":"The following code example results in CS0165\r\nError\tCS0165\tUse of unassigned local variable 'key\r\nIf I throw directly in the code below the error is not shown.\r\n\r\n**Version Used**: \r\nVS 2019 Preview 1.1\r\n.NET SDK Version: 3.0.100-preview-009844\r\n**Steps to Reproduce**:\r\n1. Create project and set:\r\n```xml\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableReferenceTypes>true</NullableReferenceTypes>\r\n```\r\n2. Copy following source code into the project:\r\n```csharp\r\nnamespace ConsoleApp8\r\n{\r\n    public class Test<T>\r\n    {\r\n        public void DoStuff(ReadOnlySpan<byte> input)\r\n        {\r\n            string key;\r\n            Dictionary<string, bool> dictionary = new Dictionary<string, bool>();\r\n            if(typeof(T) == typeof(byte))\r\n            {\r\n                key = Encoding.UTF8.GetString(input);\r\n            }\r\n            else if(typeof(T) == typeof(char))\r\n            {\r\n                key = Encoding.Unicode.GetString(input);\r\n            }\r\n            else\r\n            {\r\n                ThrowNotSupportedException();\r\n                //  throw new NotSupportedException();\r\n            }\r\n            dictionary[key] = true;\r\n        }\r\n\r\n        private static void ThrowNotSupportedException()\r\n        {\r\n            throw new NotSupportedException();\r\n        }\r\n    }\r\n}\r\n```\r\n3. Look at the errors.\r\n\r\n**Expected Behavior**:\r\nNo error\r\n**Actual Behavior**:\r\nError CS0165\r\n\r\nIf you uncomment the throw in the else branch it works.","Url":"https://github.com/dotnet/roslyn/issues/32065","RelatedDescription":"Closed issue \"Throw Exception in method call not recognized for nullable ref-type check (CS0165)\" (#32065)"},{"Id":"394911691","IsPullRequest":true,"CreatedAt":"2018-12-31T01:30:04","Actor":"dotnet-bot","Number":"32066","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32066","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32066)"},{"Id":"394906296","IsPullRequest":true,"CreatedAt":"2018-12-30T22:30:13","Actor":"KristianJakubik","Number":"32063","RawContent":null,"Title":"Diagnostic for assignment to this with readonly fields","State":"open","Body":"Implements  #30263\r\n\r\nThe PR contains implementation of diagnostic, which is triggered when `struct` declaration contains at least one `readonly` field and contains assignment to `this` in a method.\r\nThe CodeFix changes readonly fields to writable fields by deleting `readonly` keyword out of field's declaration.\r\n\r\n**Example:**\r\nInput:\r\n```\r\nstruct MyStruct\r\n{\r\n    public readonly int Value;\r\n\r\n    public MyStruct(int value)\r\n    {\r\n        Value = value;\r\n    }\r\n\r\n    public void Test()\r\n    {\r\n        [|this = new MyStruct(5)|];\r\n    }\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\nstruct MyStruct\r\n{\r\n    public int Value;\r\n\r\n    public MyStruct(int value)\r\n    {\r\n        Value = value;\r\n    }\r\n\r\n    public void Test()\r\n    {\r\n        this = new MyStruct(5);\r\n    }\r\n}\r\n```\r\n\r\n**Questions**\r\n* These questions remain unanswered:\r\n- [ ] What value should `IDE***` constant have\r\n- [ ] Should be the analyzer provided in VB.NET as well\r\n- [ ] Should the analyzer be reported for getters of struct\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/32063","RelatedDescription":"Open PR \"Diagnostic for assignment to this with readonly fields\" (#32063)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"395135482","IsPullRequest":true,"CreatedAt":"2019-01-02T02:23:08","Actor":"Dotnet-GitSync-Bot","Number":"6753","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @benaadams","Url":"https://github.com/dotnet/corert/pull/6753","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx,coreclr\" (#6753)"},{"Id":"395109108","IsPullRequest":true,"CreatedAt":"2019-01-02T02:18:46","Actor":"Dotnet-GitSync-Bot","Number":"6752","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6752","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6752)"},{"Id":"395057677","IsPullRequest":true,"CreatedAt":"2019-01-01T16:30:38","Actor":"Dotnet-GitSync-Bot","Number":"6751","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6751","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6751)"},{"Id":"395013608","IsPullRequest":true,"CreatedAt":"2018-12-31T19:14:26","Actor":"Dotnet-GitSync-Bot","Number":"6750","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6750","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6750)"},{"Id":"394948953","IsPullRequest":true,"CreatedAt":"2018-12-31T13:25:38","Actor":"Dotnet-GitSync-Bot","Number":"6749","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @jkotas","Url":"https://github.com/dotnet/corert/pull/6749","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6749)"},{"Id":"394940792","IsPullRequest":true,"CreatedAt":"2018-12-31T08:17:23","Actor":"Dotnet-GitSync-Bot","Number":"6748","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel @marek-safar","Url":"https://github.com/dotnet/corert/pull/6748","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6748)"},{"Id":"394901131","IsPullRequest":true,"CreatedAt":"2018-12-30T21:01:07","Actor":"marek-safar","Number":"6747","RawContent":null,"Title":"Moves Attribute instance bits to shared location","State":"open","Body":"","Url":"https://github.com/dotnet/corert/pull/6747","RelatedDescription":"Open PR \"Moves Attribute instance bits to shared location\" (#6747)"},{"Id":"394886637","IsPullRequest":true,"CreatedAt":"2018-12-30T18:01:25","Actor":"Dotnet-GitSync-Bot","Number":"6746","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/6746","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6746)"},{"Id":"394853250","IsPullRequest":true,"CreatedAt":"2018-12-30T17:01:19","Actor":"Dotnet-GitSync-Bot","Number":"6744","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6744","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6744)"},{"Id":"394859933","IsPullRequest":false,"CreatedAt":"2018-12-30T10:30:39","Actor":"CoolOppo","Number":"6745","RawContent":null,"Title":"Temporary exception when compiling with specific rules in rd.xml","State":"closed","Body":"Hi. Appreciate the help. I was running into a missing metadata error that said the following, when trying to deserialize xml (only came up after adding `<IlcArg Include=\"--completetypemetadata\" />` to my `.csproj`):\r\n\r\n```\r\nMakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'System.Xml.Serialization.ReflectionXmlSerializationReaderHelper.GetSetMemberValueDelegateWithType<MakeUltra.Rule,System.String>(System.Reflection.MemberInfo)'\r\n```\r\n\r\nSo I added the following to my `rd.xml` file, as seen in #4775:\r\n\r\n```xml\r\n\t\t<Assembly Name=\"System.Private.Xml\">\r\n\t\t\t<Type Name=\"System.Xml.Serialization.ReflectionXmlSerializationReaderHelper\">\r\n\t\t\t\t<Method Name=\"GetSetMemberValueDelegateWithType\" Dynamic=\"Required All\">\r\n\t\t\t\t\t<GenericArgument Name=\"MakeUltra.Rule,System.String\" />\r\n\t\t\t\t</Method>\r\n\t\t\t</Type>\r\n\t\t</Assembly>\r\n```\r\n\r\nNow when compiling, I get the following output:\r\n\r\n```\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.String [C:\\Users\\Max\\Desktop\\deps native\\MakeUltra\\MakeUltra.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.String\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.CustomAttributeTypeNameParser.GetTypeByCustomAttributeTypeName(ModuleDesc module, String name, Boolean throwIfNotFound, Func`4 resolver)\r\n     at ILCompiler.RdXmlRootProvider.ProcessMethodDirective(IRootingServiceProvider rootProvider, ModuleDesc containingModule, TypeDesc containingType, XElement methodElement)\r\n     at ILCompiler.RdXmlRootProvider.ProcessTypeDirective(IRootingServiceProvider rootProvider, ModuleDesc containingModule, XElement typeElement)\r\n     at ILCompiler.RdXmlRootProvider.ProcessAssemblyDirective(IRootingServiceProvider rootProvider, XElement assemblyElement)\r\n     at ILCompiler.RdXmlRootProvider.AddCompilationRoots(IRootingServiceProvider rootProvider)\r\n     at ILCompiler.Compilation..ctor(DependencyAnalyzerBase`1 dependencyGraph, NodeFactory nodeFactory, IEnumerable`1 compilationRoots, ILProvider ilProvider, DebugInformationProvider debugInformationProvider, DevirtualizationManager devirtualizationManager, Logger logger)\r\n     at ILCompiler.ILScannerBuilder.ToILScanner()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Max\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27229-01\\build\\Microsoft.NETCore.Native.targets(228,5): error MSB3073: The command \"\"C:\\Users\\Max\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27229-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp2.2\\win-x64\\native\\MakeUltra.ilc.rsp\"\" exited with code 1. [C:\\Users\\Max\\Desktop\\deps native\\MakeUltra\\MakeUltra.csproj]\r\n```\r\n\r\nI think it must be because `System.Private.Xml` isn't available to me, but how do I resolve this otherwise?\r\n\r\nI'm going to also tag #6477 and @MichalStrehovsky, seems relevant ;)","Url":"https://github.com/dotnet/corert/issues/6745","RelatedDescription":"Closed issue \"Temporary exception when compiling with specific rules in rd.xml\" (#6745)"},{"Id":"394853138","IsPullRequest":true,"CreatedAt":"2018-12-30T08:46:12","Actor":"jkotas","Number":"6743","RawContent":null,"Title":"Port ThreadPool changes from CoreCLR","State":"closed","Body":"https://github.com/dotnet/coreclr/pull/21704","Url":"https://github.com/dotnet/corert/pull/6743","RelatedDescription":"Closed or merged PR \"Port ThreadPool changes from CoreCLR\" (#6743)"},{"Id":"394836425","IsPullRequest":true,"CreatedAt":"2018-12-30T00:48:29","Actor":"trylek","Number":"6742","RawContent":null,"Title":"Skip methods calling Type.GetTypeFromHandle + R2R infra improvements","State":"open","Body":"Don't compile methods calling into Type.GetTypeFromHandle as they\r\nrequire runtime JIT according to Crossgen. With this change, quite\r\na few ReadyToRunUnit test methods stop CPAOT-compiling so I had\r\nto add them to the whitelist.\r\n\r\nWhile doing this, I made a few improvements to the test harness:\r\nI have removed the unused flag \"readyToRunRejected\" and I changed\r\nthe list of jitted methods to be a dictionary indexed by method names.\r\nI have also modified the jitted method lists to be displayed in\r\nalphabetical order.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. This change fixes 2 Top200 tests and about 100 Pri#0 tests.","Url":"https://github.com/dotnet/corert/pull/6742","RelatedDescription":"Open PR \"Skip methods calling Type.GetTypeFromHandle + R2R infra improvements\" (#6742)"},{"Id":"394830299","IsPullRequest":true,"CreatedAt":"2018-12-29T23:16:19","Actor":"marek-safar","Number":"6741","RawContent":null,"Title":"Moves ThrowHelper to shared location","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6741","RelatedDescription":"Closed or merged PR \"Moves ThrowHelper to shared location\" (#6741)"},{"Id":"394798403","IsPullRequest":true,"CreatedAt":"2018-12-29T15:29:23","Actor":"Dotnet-GitSync-Bot","Number":"6740","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corert/pull/6740","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6740)"},{"Id":"394699573","IsPullRequest":true,"CreatedAt":"2018-12-29T07:07:23","Actor":"Dotnet-GitSync-Bot","Number":"6739","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/6739","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6739)"},{"Id":"394688538","IsPullRequest":true,"CreatedAt":"2018-12-28T18:59:49","Actor":"Dotnet-GitSync-Bot","Number":"6738","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @hughbe","Url":"https://github.com/dotnet/corert/pull/6738","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6738)"},{"Id":"393949868","IsPullRequest":true,"CreatedAt":"2018-12-28T13:11:41","Actor":"filipnavara","Number":"6726","RawContent":null,"Title":"WIP: Move CultureInfo to shared CoreLib","State":"closed","Body":"Counterpart to https://github.com/dotnet/coreclr/pull/21672","Url":"https://github.com/dotnet/corert/pull/6726","RelatedDescription":"Closed or merged PR \"WIP: Move CultureInfo to shared CoreLib\" (#6726)"},{"Id":"394534958","IsPullRequest":true,"CreatedAt":"2018-12-28T04:36:59","Actor":"Dotnet-GitSync-Bot","Number":"6736","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6736","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#6736)"},{"Id":"394038185","IsPullRequest":true,"CreatedAt":"2018-12-27T21:47:04","Actor":"MarcoRossignoli","Number":"6730","RawContent":null,"Title":"Add `--tokens` option to command line","State":"closed","Body":"contributes to https://github.com/dotnet/corert/issues/6694\r\nStep forward added `--tokens` options to command line and flow to internal verifiers.\r\n\r\n/cc @jkotas @MichalStrehovsky \r\n\r\n:christmas_tree: Merry Christmas!","Url":"https://github.com/dotnet/corert/pull/6730","RelatedDescription":"Closed or merged PR \"Add `--tokens` option to command line\" (#6730)"},{"Id":"394405619","IsPullRequest":true,"CreatedAt":"2018-12-27T14:16:53","Actor":"kbaladurin","Number":"6735","RawContent":null,"Title":"[CppCodeGen] Enable Delegates tests","State":"open","Body":"","Url":"https://github.com/dotnet/corert/pull/6735","RelatedDescription":"Open PR \"[CppCodeGen] Enable Delegates tests\" (#6735)"},{"Id":"394365994","IsPullRequest":true,"CreatedAt":"2018-12-27T14:12:20","Actor":"filipnavara","Number":"6734","RawContent":null,"Title":"Move Contracts.cs (CoreCLR version) to shared CoreLib","State":"closed","Body":"Not sure what to do about `SuppressMessage` attributes, which are present in CoreRT version and not in CoreCLR version.\r\nThe CoreRT version also had couple of `Contract.EndContractBlock();` lines that are missing in CoreCLR, but it looks reasonable to add them.\r\n\r\nOpinions?","Url":"https://github.com/dotnet/corert/pull/6734","RelatedDescription":"Closed or merged PR \"Move Contracts.cs (CoreCLR version) to shared CoreLib\" (#6734)"},{"Id":"394214267","IsPullRequest":true,"CreatedAt":"2018-12-26T19:04:53","Actor":"filipnavara","Number":"6732","RawContent":null,"Title":"Move System/Numerics/Hashing to shared CoreLib.","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6732","RelatedDescription":"Closed or merged PR \"Move System/Numerics/Hashing to shared CoreLib.\" (#6732)"},{"Id":"394223088","IsPullRequest":false,"CreatedAt":"2018-12-26T18:58:00","Actor":"yowl","Number":"6733","RawContent":null,"Title":"wasm: Main thread Sleep fails due to missing initialisation?","State":"open","Body":"Adding the following to the Program Main:\r\n```\r\n        Thread.Sleep(100);\r\n```\r\nCauses the Assert to be triggered at https://github.com/dotnet/corert/blob/574d8319979ef5118f55c57ce2b90ea61f1429e6/src/System.Private.CoreLib/src/System/Threading/WaitSubsystem.ThreadWaitInfo.Unix.cs#L271  The `RuntimeThread.CurrentThread` looks fine but the `_thread` field is 0 (as it would appear are all the `ThreadWaitInfo` fields).  As there's an assert in the only ctor for `ThreadWaitInfo` to prevent this: https://github.com/dotnet/corert/blob/574d8319979ef5118f55c57ce2b90ea61f1429e6/src/System.Private.CoreLib/src/System/Threading/WaitSubsystem.ThreadWaitInfo.Unix.cs#L92 , it would appear the ctor is not being called or the address of the `ThreadWaitInfo` is bogus.  What I can't find is where the main thread is initialised, specifically how the RuntimeThread is created as breakpoints in it's managed ctor at least are not hit.","Url":"https://github.com/dotnet/corert/issues/6733","RelatedDescription":"Open issue \"wasm: Main thread Sleep fails due to missing initialisation?\" (#6733)"},{"Id":"394198074","IsPullRequest":false,"CreatedAt":"2018-12-26T17:46:52","Actor":"ly303550688","Number":"6731","RawContent":null,"Title":"publish shared library but there is no entrypoint","State":"closed","Body":"I use the sample publish a shared library，dumpbin the dll, there's no entrypoint exported.","Url":"https://github.com/dotnet/corert/issues/6731","RelatedDescription":"Closed issue \"publish shared library but there is no entrypoint\" (#6731)"},{"Id":"394038098","IsPullRequest":false,"CreatedAt":"2018-12-25T17:04:11","Actor":"andreakarasho","Number":"6729","RawContent":null,"Title":"Ubuntu 18.04 Segmentation fault (core dumped)","State":"open","Body":"Im running a virtual machine with ubuntu 18.04 x64.\r\nSame code compiled on windows with the win-x64 cmd configuration works good, but not on ubuntu with configuration ubuntu-x64. \r\n\r\n\r\n```\r\n         Segmentation fault (core dumped)\r\n   1:7>/home/andrea/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27225-02/build/Microsoft.NETCore.Native.targets(228,5): error MSB3073: The command \"\"/home/andrea/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27225-02/tools/ilc\" @\"obj/release/netcoreapp2.2/linux-x64/native/ClassicUO.ilc.rsp\"\" exited with code 139. [/home/andrea/Documents/ClassicUO-NetCore/ClassicUO.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/6729","RelatedDescription":"Open issue \"Ubuntu 18.04 Segmentation fault (core dumped)\" (#6729)"},{"Id":"394036483","IsPullRequest":false,"CreatedAt":"2018-12-25T16:39:01","Actor":"Fabi","Number":"6728","RawContent":null,"Title":"System.Management namespace exception","State":"open","Body":"Hey!\r\n\r\nI just tried to get an app running that is using `WqlEventQuery` & `ManagementEventWatcher` from the `System.Management` namespace.\r\n\r\nHowever the native code generation is already giving me warnings:\r\n![image](https://user-images.githubusercontent.com/246718/50424839-88228f80-086b-11e9-9a4d-dc5b81a817a1.png)\r\n\r\nThe app later will throw with:\r\n![image](https://user-images.githubusercontent.com/246718/50424842-94a6e800-086b-11e9-8cb5-5c166fef7e04.png)\r\n\r\nThis is the code I use:\r\n```csharp\r\nvar query = new WqlEventQuery(\"__InstanceCreationEvent\", new TimeSpan(0, 0, 1), \"TargetInstance isa \\\"Win32_Process\\\"\");\r\nvar watcher = new ManagementEventWatcher(query);\r\n\r\nwhile (true)\r\n{\r\n    Thread.Sleep(1);\r\n\r\n    // Wait for process start event.\r\n    var e = watcher.WaitForNextEvent();\r\n    var name = ((ManagementBaseObject)e[\"TargetInstance\"])[\"Name\"].ToString().ToLowerInvariant();\r\n    var path = ((ManagementBaseObject)e[\"TargetInstance\"])[\"ExecutablePath\"].ToString();\r\n    var processId = Convert.ToInt32(((ManagementBaseObject)e[\"TargetInstance\"])[\"ProcessID\"]);\r\n\r\n    /// do stuff\r\n}\r\n```\r\n\r\nUsed command line: `dotnet publish -r win-x64 /p:Configuration=Release /p:platform=\"x64\"`\r\n\r\n.NET Core info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009820\r\n Commit:    799a33c6ba\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18305\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009820\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27205-02\r\n  Commit:  04035b3a4c\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009820 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27205-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/corert/issues/6728","RelatedDescription":"Open issue \"System.Management namespace exception\" (#6728)"},{"Id":"393991977","IsPullRequest":false,"CreatedAt":"2018-12-25T11:55:12","Actor":"andreakarasho","Number":"6727","RawContent":null,"Title":"Newtosoft.Json  MissingMetadatException","State":"closed","Body":"Hi This is the errror i receive after running my FNA game.\r\n```IGLDevice: OpenGLDevice\r\nOpenGL Device: GeForce GTX 1080/PCIe/SSE2\r\nOpenGL Driver: 4.6.0 NVIDIA 417.35\r\nOpenGL Vendor: NVIDIA Corporation\r\nMojoShader Profile: glsl120\r\nUsing EXT_swap_control_tear VSync!\r\n10:07:59 |  Trace   | C:\\Users\\andre\\Desktop\\CLASSICUO-NETCORE\\ClassicUO\\ClassicUO\\bin\\Release\\netcoreapp2.2\\win-x64\\native\r\nUnhandled Exception: System.Reflection.MissingMetadataException: 'System.Linq.Expressions.ExpressionCreator<Newtonsoft.Json.Serialization.ObjectConstructor<System.Object>>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at ClassicUO!<BaseAddress>+0x2eb2a3\r\n   at ClassicUO!<BaseAddress>+0x59ee01\r\n   at ClassicUO!<BaseAddress>+0x17ab31\r\n   at ClassicUO!<BaseAddress>+0x1727e9\r\n   at System.Linq.Expressions.Expression.Lambda(Type, Expression, String, Boolean, IEnumerable`1) + 0x5a\r\n   at Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(MethodBase) + 0xa3\r\n   at Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(Type) + 0x168\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey, Func`2) + 0x6e\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader, Type, Boolean) + 0x32\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader, Type) + 0xf9\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String, Type, JsonSerializerSettings) + 0x93\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String, JsonSerializerSettings) + 0x26\r\n   at ClassicUO.Configuration.ConfigurationResolver.Load[T](String) + 0x5f\r\n   at ClassicUO.Engine.Initialize() + 0x7b\r\n   at Microsoft.Xna.Framework.Game.DoInitialize() + 0x23\r\n   at Microsoft.Xna.Framework.Game.Run() + 0x22\r\n   at ClassicUO.Engine.Main(String[]) + 0x4b\r\n   at ClassicUO!<BaseAddress>+0x6da3f4\r\n```\r\n\r\nI added the rd.xml file like this\r\n```\r\n<Directives>\r\n  <Application>\r\n    <Assembly Name=\"Newtonsoft.Json\" >\r\n      <Type Name=\"Newtonsoft.Json.Serialization.ObjectConstructor`1[[System.Object,System.Private.CoreLib]]\" Dynamic=\"Required All\" />\r\n    </Assembly>\r\n\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\nProbably rd.xml file is wrong, but i dont understand how setting it right.","Url":"https://github.com/dotnet/corert/issues/6727","RelatedDescription":"Closed issue \"Newtosoft.Json  MissingMetadatException\" (#6727)"},{"Id":"393912014","IsPullRequest":true,"CreatedAt":"2018-12-24T21:14:47","Actor":"kvochko","Number":"6724","RawContent":null,"Title":"Bring up CoreFX tests on ARM","State":"closed","Body":"With this change and https://github.com/dotnet/coreclr/pull/21669 CoreFX tests on Linux/ARM no longer crash, and test results are as follows:\r\n```\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Collections.Tests  Total: 2835, Errors: 0, Failed: 0, Skipped: 13, Time: 68.510s \r\n```\r\nChanges:\r\n* Fixed frame pointer to be R11 instead of R7 in `PInvokeTransitionFrame` and in `RhpCallFilterFunclet`;\r\n* Uncommented `DelegateCtor` helper implementation\r\nCC @jkotas @alpencolt @sergign60 @iarischenko","Url":"https://github.com/dotnet/corert/pull/6724","RelatedDescription":"Closed or merged PR \"Bring up CoreFX tests on ARM\" (#6724)"},{"Id":"393916201","IsPullRequest":true,"CreatedAt":"2018-12-24T17:58:10","Actor":"tonerdo","Number":"6725","RawContent":null,"Title":"[Interpreter] Branching","State":"open","Body":"This PR adds support for the following opcodes:\r\n\r\n* br*\r\n* switch\r\n\r\nThe positive impact of this is that, interpreted assemblies can now be built in Debug mode\r\n\r\ncc @jkotas @MichalStrehovsky \r\n\r\nPS: Merry Christmas 🎉 ","Url":"https://github.com/dotnet/corert/pull/6725","RelatedDescription":"Open PR \"[Interpreter] Branching\" (#6725)"},{"Id":"393831559","IsPullRequest":false,"CreatedAt":"2018-12-24T08:10:52","Actor":"differentrain","Number":"6723","RawContent":null,"Title":"--","State":"closed","Body":"--","Url":"https://github.com/dotnet/corert/issues/6723","RelatedDescription":"Closed issue \"--\" (#6723)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"395081205","IsPullRequest":true,"CreatedAt":"2019-01-01T13:01:18","Actor":"dotnet-maestro[bot]","Number":"2782","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18631.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18631.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2782","RelatedDescription":"Open PR \"Update dependency files\" (#2782)"},{"Id":"394828587","IsPullRequest":true,"CreatedAt":"2018-12-31T18:32:45","Actor":"jp2masa","Number":"2778","RawContent":null,"Title":"Added back the PublishDepsFilePath property","State":"closed","Body":"Fixes #2777\r\n\r\n## Changes\r\n- Added back the PublishDepsFilePath property.","Url":"https://github.com/dotnet/sdk/pull/2778","RelatedDescription":"Closed or merged PR \"Added back the PublishDepsFilePath property\" (#2778)"},{"Id":"394828220","IsPullRequest":false,"CreatedAt":"2018-12-31T18:32:45","Actor":"jp2masa","Number":"2777","RawContent":null,"Title":".NET Global Tools publish broken","State":"closed","Body":".NET Global Tools publish uses the `PublishDepsFilePath` property to include the deps file, but it no longer exists (.NET Core 3.0 Preview 1).\r\n\r\nThis bug was introduced here: https://github.com/dotnet/sdk/commit/1936ebd7307cebd6c5d1d8d699b9844f73b8fb2c#diff-7dc833d02f198e5a9f0ab88e229db18aL520.\r\n\r\nI believe that the property shouldn't have been removed.","Url":"https://github.com/dotnet/sdk/issues/2777","RelatedDescription":"Closed issue \".NET Global Tools publish broken\" (#2777)"},{"Id":"394977369","IsPullRequest":true,"CreatedAt":"2018-12-31T18:30:23","Actor":"dotnet-maestro[bot]","Number":"2781","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18630.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18630.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2781","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2781)"},{"Id":"394928884","IsPullRequest":false,"CreatedAt":"2018-12-31T04:50:13","Actor":"MattLavalleeMA","Number":"2780","RawContent":null,"Title":"NuGetFallbackFolder resolving File Version conflicts for same Package Versions","State":"open","Body":"I have a .NET Core 2.2 solution (migrated from 2.1) with eight projects: two AspNetCore projects, five class libraries, and a unit test project.  Recently, I started receiving version resolution \"messages\" for _HandlePackageFileConflicts like this:\r\n\r\n> C:\\Program Files\\dotnet\\sdk\\2.2.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(41,5): message NETSDK1041: Encountered conflict between 'Platform:System.Security.Principal.Windows.dll' and 'Runtime:C:\\Users\\mlavallee\\.nuget\\packages\\system.security.principal.windows\\4.5.1\\lib\\netstandard2.0\\System.Security.Principal.Windows.dll'.  NETSDK1034: Choosing 'Platform:System.Security.Principal.Windows.dll' because file version '4.6.27110.4' is greater than '4.6.26919.2'.\r\n\r\nand\r\n\r\n> C:\\Program Files\\dotnet\\sdk\\2.2.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(41,5): message NETSDK1041: Encountered conflict between 'Platform:System.Security.AccessControl.dll' and 'Runtime:C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\lib\\netstandard2.0\\System.Security.AccessControl.dll'.  NETSDK1034: Choosing 'Platform:System.Security.AccessControl.dll' because file version '4.6.27110.4' is greater than '4.6.26515.6'.\r\n\r\nWe've all had to deal with binding _package version_ conflicts before, but in this case it seems to be at the _file version_ level, and with references that are included/embedded in the .NET Core 2.2 SDK itself.  Looking at the manifest file:\r\n`C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.2.0\\build\\netcoreapp2.2\\Microsoft.NETCore.App.PlatformManifest.txt`\r\n>System.Security.Principal.Windows.dll|Microsoft.NETCore.App|4.1.1.1|4.6.27110.4\r\n>System.Security.AccessControl.dll|Microsoft.NETCore.App|4.1.1.0|4.6.27110.4\r\n\r\nHowever, the newest packages on NuGet have the file versions noted in the conflicts above and are from much older build sources (9/18/2018 vs. 12/6/2018).  So, a few questions from this:\r\n\r\n1. Why is the SDK embedded reference file newer than what's available on NuGet?\r\n2. Why does the NuGetFallbackFolder have earlier versions than the SDK?\r\n3. Why are the file versions for the same package versions different?\r\n4. What's the purpose of the NuGetFallbackFolder if I also have a package cache? (This seems like pure bloat)\r\n\r\nAlthough these aren't raised as build warnings, just _messages_, it seems like I can't have confidence in the reference code being consistent between builds, so either they should be warnings or there should be a way of resolving them.\r\n\r\nThanks,\r\nMatt","Url":"https://github.com/dotnet/sdk/issues/2780","RelatedDescription":"Open issue \"NuGetFallbackFolder resolving File Version conflicts for same Package Versions\" (#2780)"},{"Id":"394887253","IsPullRequest":false,"CreatedAt":"2018-12-30T17:13:08","Actor":"livarcocc","Number":"2779","RawContent":null,"Title":"\"error NETSDK1007: Cannot find project info\" when a csproj with a certain name depends on another in the same directory.","State":"open","Body":"_From @davedissian on December 29, 2018 14:42_\n\nIf I have two csproj's within the same directory, where csproj (1) depends on csproj (2), I get a NETSDK1007 error if the dependency (2) has a name which is lexicographically greater than the root project (1). For example, if I have `Worker.csproj` which depends on `Library.csproj`, it compiles fine. However, If I have `AWorker.csproj` which depends on `Library.csproj`, I get an `NETSDK1007` error.\r\n\r\nI guess the cause might have something to do with dependency resolution only being a single pass process (rather than being a two pass process that stores projects in a lookup table before resolving them).\r\n\r\n### Steps to reproduce\r\n\r\nI have attached a zip file with 3 solutions: [NETSDK1007-issue.zip](https://github.com/Microsoft/msbuild/files/2716463/NETSDK1007-issue.zip)\r\n\r\n* Broken - A solution containing projects `AWorker.csproj` and `Library.csproj`\r\n* Working - A solution containing projects `Worker.csproj` and `Library.csproj`\r\n* WorkingSeparateDir - A solution containing projects `AWorker.csproj` and `Library\\Library.csproj`\r\n\r\nIf I try and run `dotnet build Worker.sln` inside `Broken`, I get the following output:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /Users/david/Projects/DotnetCsharpBug/Broken/AWorker.csproj...\r\n  Generating MSBuild file /Users/david/Projects/DotnetCsharpBug/Broken/obj/AWorker.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/david/Projects/DotnetCsharpBug/Broken/obj/AWorker.csproj.nuget.g.targets.\r\n  Restore completed in 244.37 ms for /Users/david/Projects/DotnetCsharpBug/Broken/AWorker.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error NETSDK1007: Cannot find project info for '/Users/david/Projects/DotnetCsharpBug/Broken/Library.csproj'. This can indicate a missing project reference. [/Users/david/Projects/DotnetCsharpBug/Broken/Library.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/2.2.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error NETSDK1007: Cannot find project info for '/Users/david/Projects/DotnetCsharpBug/Broken/Library.csproj'. This can indicate a missing project reference. [/Users/david/Projects/DotnetCsharpBug/Broken/Library.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.23\r\n```\r\n\r\nThe project files look like this:\r\n\r\n`AWorker.csproj`:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Library.csproj\" />\r\n    <Compile Include=\"Class1.cs\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n`Library.csproj`:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Include=\"Library\\Class1.cs\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nIt compiles successfully.\r\n\r\n### Environment data\r\n```\r\n$ dotnet msbuild -version\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.9.20.62856\r\n```\r\n\r\nOS info:\r\nmacOS Mojave 10.14.2\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc): \r\n```\r\n$ dotnet --version\r\n2.2.100\r\n```\r\n\n\n_Copied from original issue: Microsoft/msbuild#4035_","Url":"https://github.com/dotnet/sdk/issues/2779","RelatedDescription":"Open issue \"\"error NETSDK1007: Cannot find project info\" when a csproj with a certain name depends on another in the same directory.\" (#2779)"},{"Id":"394794079","IsPullRequest":true,"CreatedAt":"2018-12-30T17:01:06","Actor":"dotnet-maestro[bot]","Number":"2776","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18627.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18627.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18629.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18629.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2776","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2776)"},{"Id":"394389141","IsPullRequest":true,"CreatedAt":"2018-12-27T18:13:10","Actor":"dotnet-maestro[bot]","Number":"2775","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18621.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18621.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2775","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2775)"},{"Id":"394245543","IsPullRequest":true,"CreatedAt":"2018-12-26T21:37:44","Actor":"dsplaisted","Number":"2774","RawContent":null,"Title":"Resolve assets from targeting pack","State":"open","Body":"First steps for dotnet/cli#10085\r\n\r\n- References \"Targeting Packs\" with ExcludeAssets=\"all\", and resolves assets from the targeting packs directly (instead of going through the assets file)\r\n- References \"Runtime Packs\" if necessary to support self-contained publish (these still go through the assets file for now)\r\n- For now, hard-codes a `KnownFrameworkReference` to Microsoft.NETCore.App, and includes the RID graph directly.  These will need to be added to core-sdk\r\n- The list of runtime packs for each `KnownFrameworkReference`, and the RIDs available, will also need to be supplied by core-sdk","Url":"https://github.com/dotnet/sdk/pull/2774","RelatedDescription":"Open PR \"Resolve assets from targeting pack\" (#2774)"},{"Id":"394162568","IsPullRequest":false,"CreatedAt":"2018-12-26T18:15:36","Actor":"1scrooge","Number":"2773","RawContent":null,"Title":"dotnet`s error with credentials for nuget feed","State":"closed","Body":"After updated dotnet up to 2.1.502 and uper I have an error with credentials for nuget feed when I using apikey\r\n```\r\n/usr/share/dotnet/sdk/2.1.502/NuGet.targets(499,5): error : Unable to parse config file because: Credentials item must have username and password. Path: '/home/user/.nuget/NuGet/NuGet.Config'\r\n```\r\nmy NuGet.Config:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n   <packageSources>\r\n        <add key=\"name_feed\" value=\"http://url_feed/nuget\" />\r\n    </packageSources>\r\n    <packageSourceCredentials>\r\n        <name_feed>\r\n           <apikeys>\r\n             <add key=\"http://url_feed/nuget\" value=\"qwd32dqwd231vdas13\" />\r\n           </apikeys>\r\n        </name_feed>\r\n    </packageSourceCredentials>\r\n</configuration>\r\n```\r\non 2.1.403 version works fine\r\nCould you fix it?","Url":"https://github.com/dotnet/sdk/issues/2773","RelatedDescription":"Closed issue \"dotnet`s error with credentials for nuget feed\" (#2773)"},{"Id":"393841237","IsPullRequest":false,"CreatedAt":"2018-12-25T19:48:07","Actor":"vitlav","Number":"2772","RawContent":null,"Title":" The library 'libhostpolicy.so' required to execute the application was not found in","State":"closed","Body":"## Steps to reproduce\r\n* get the latest SDK binaries (2.1.6, f.i.) and put them on the path (on /usr/lib64/dotnet-bootstrap/ dir actually in my case)\r\n* create empty dir with some old version:\r\n  mkdir /usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App/2.0.5\r\n* `dotnet new console`\r\n* `dotnet run`\r\n\r\n## Expected behavior\r\nProgram runs and prints hello world.\r\n\r\n## Actual behavior\r\n```\r\n/usr/lib64/dotnet-bootstrap/sdk/2.1.500/Roslyn/Microsoft.CSharp.Core.targets(52,5): error : A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App/2.0.5'.\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\n $ ls /usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App/\r\n 2.0.5  2.1.6\r\n\r\nWhy it selected random 2.0.5 as preffered version?\r\n\r\n## Environment data\r\n```\r\n$ /usr/lib64/dotnet-bootstrap/dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     altlinux\r\n OS Version:  20170925\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/lib64/dotnet-bootstrap/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/lib64/dotnet-bootstrap/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App]\r\n\r\n```","Url":"https://github.com/dotnet/sdk/issues/2772","RelatedDescription":"Closed issue \" The library 'libhostpolicy.so' required to execute the application was not found in\" (#2772)"},{"Id":"393671505","IsPullRequest":true,"CreatedAt":"2018-12-23T18:06:21","Actor":"dotnet-maestro[bot]","Number":"2771","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18620.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2771","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2771)"},{"Id":"392840072","IsPullRequest":true,"CreatedAt":"2018-12-21T18:00:55","Actor":"wli3","Number":"2766","RawContent":null,"Title":"Fix package version 1000 cannot install","State":"closed","Body":"run `dotnet pack -p:version=1000` with packaged shim, and the result package cannot run. Due to embedded shim has version \"1000\" while the actual nuget folder layout is \"1000.0.0\".\r\n\r\nthe version need to be normalized to much the layout. Per discussion https://github.com/dotnet/cli/issues/9870","Url":"https://github.com/dotnet/sdk/pull/2766","RelatedDescription":"Closed or merged PR \"Fix package version 1000 cannot install\" (#2766)"},{"Id":"393451224","IsPullRequest":true,"CreatedAt":"2018-12-21T17:58:24","Actor":"dotnet-maestro[bot]","Number":"2770","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18620.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2770","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2770)"},{"Id":"393294093","IsPullRequest":false,"CreatedAt":"2018-12-21T03:00:35","Actor":"davidwengier","Number":"2769","RawContent":null,"Title":"Remove duplicate FolderPublish capability for SDK projects","State":"open","Body":"Once https://github.com/dotnet/project-system/pull/4400 has been merged the capability can be removed from the SDK, leaving all publish related capabilities in the same targets file inside the project system, for consistency.\r\n\r\nhttps://github.com/dotnet/sdk/blob/c93f4a14ebcff4a18840b06886c5dcf24ae64a0e/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L585-L588","Url":"https://github.com/dotnet/sdk/issues/2769","RelatedDescription":"Open issue \"Remove duplicate FolderPublish capability for SDK projects\" (#2769)"},{"Id":"392730861","IsPullRequest":false,"CreatedAt":"2018-12-20T21:23:42","Actor":"conniey","Number":"2765","RawContent":null,"Title":"`dotnet test` fails when native assets are required and multiple RuntimeIdentifiers are set","State":"closed","Body":"There are several related questions/issues to this (ie. #1017), so this might be more of a guidance question.\r\n\r\nOur ApiPort tests use ilasm to compile IL files and verify that our MetadataReader is working correctly. (ex. [Microsoft.Fx.Portability.MetadataReader.Tests.csproj](https://github.com/Microsoft/dotnet-apiport/blob/dev/tests/lib/Microsoft.Fx.Portability.MetadataReader.Tests/Microsoft.Fx.Portability.MetadataReader.Tests.csproj).\r\n\r\nIt currently only works on .NET 4.6, but we want to be able to run this test on Linux as well to make sure our MetadataReader works on all platforms.\r\n\r\nWhat is the solution here?\r\n\r\nWhen I set: `<RuntimeIdentifiers>win7-x86;linux-x64</RuntimeIdentifiers>`, all tests when running against both .NET 4.6 and .NETCoreApp2.1 because ildasm cannot be located (since it is not copied to the OuputDirectory).","Url":"https://github.com/dotnet/sdk/issues/2765","RelatedDescription":"Closed issue \"`dotnet test` fails when native assets are required and multiple RuntimeIdentifiers are set\" (#2765)"},{"Id":"393037303","IsPullRequest":true,"CreatedAt":"2018-12-20T20:32:27","Actor":"dotnet-maestro[bot]","Number":"2767","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18619.4\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18619.4\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2767","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2767)"},{"Id":"393037322","IsPullRequest":false,"CreatedAt":"2018-12-20T13:01:50","Actor":"vgriph","Number":"2768","RawContent":null,"Title":"Links to app.config is case sensitive","State":"open","Body":"I've been migrating project files from the old project system to use Microsoft.NET.Sdk. We had some projects which share app.config using links of the type\r\n```\r\n<None Include=\"..\\OtherProject\\App.config\">\r\n  <Link>App.config</Link>\r\n</None>\r\n```\r\nHowever, with when using SDK file projects these links are not used for creating target assembly configuration file. After some debugging I found out that\r\n```\r\n<None Include=\"..\\OtherProject\\App.config\">\r\n  <Link>app.config</Link>\r\n</None>\r\n```\r\nworks.","Url":"https://github.com/dotnet/sdk/issues/2768","RelatedDescription":"Open issue \"Links to app.config is case sensitive\" (#2768)"},{"Id":"392591862","IsPullRequest":true,"CreatedAt":"2018-12-19T18:19:29","Actor":"dotnet-maestro[bot]","Number":"2763","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18618.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2763","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2763)"},{"Id":"392680433","IsPullRequest":false,"CreatedAt":"2018-12-19T16:29:03","Actor":"nguerrera","Number":"2764","RawContent":null,"Title":"Changing AssemblyName prevent app from starting","State":"open","Body":"_From @LokiMidgard on December 18, 2018 11:5_\n\nI've created a project and want to rename the created Assembly.\r\nOutputType: `WinExe`  \r\nTargetFramework: `netcoreapp3.0`  \r\nUseWPF: `true`\r\n\r\nOS: `Windows 10`  \r\ndotnet core `3.0.100-preview-009812`\r\n\r\nAfter renaming it I can no longer start the exe or debug it in Visual Studio.\r\nFollowing error appears when I try to start debugging:\r\n```\r\nDas Programm \"[17104] DiceTool.exe\" wurde mit Code -2147450741 (0x8000808b) beendet.\r\nDas Programm \"[17104] DiceTool.exe: Programmablaufverfolgung\" wurde mit Code 0 (0x0) beendet.\r\n```\r\nI try to set `<AssemblyName>DiceTool.Ui</AssemblyName>` to `<AssemblyName>DiceTool</AssemblyName>`.\r\n\r\nReverting this change will fix the issue.\r\n\r\nThe code to reproduce this is in [this Commit](https://github.com/LokiMidgard/Dice-Tool/tree/512a397c8c09de7be3a2c1b106c9a7457fc5c305)\r\n\r\n\n\n_Copied from original issue: dotnet/core#2163_","Url":"https://github.com/dotnet/sdk/issues/2764","RelatedDescription":"Open issue \"Changing AssemblyName prevent app from starting\" (#2764)"},{"Id":"392406799","IsPullRequest":true,"CreatedAt":"2018-12-19T01:43:03","Actor":"livarcocc","Number":"2762","RawContent":null,"Title":"Updating NuGet and CLI version.","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/2762","RelatedDescription":"Open PR \"Updating NuGet and CLI version.\" (#2762)"},{"Id":"392386471","IsPullRequest":true,"CreatedAt":"2018-12-19T00:01:31","Actor":"dotnet-bot","Number":"2761","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2761","RelatedDescription":"Open PR \"Merge release/2.2.2xx to master\" (#2761)"},{"Id":"392125219","IsPullRequest":true,"CreatedAt":"2018-12-18T17:37:52","Actor":"dotnet-bot","Number":"2758","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2758","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2758)"},{"Id":"392146705","IsPullRequest":true,"CreatedAt":"2018-12-18T17:35:43","Actor":"dotnet-maestro[bot]","Number":"2759","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18617.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2759","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2759)"},{"Id":"392203074","IsPullRequest":false,"CreatedAt":"2018-12-18T15:18:06","Actor":"weltkante","Number":"2760","RawContent":null,"Title":"References specified in the project file are sometimes dropped and replaced by wrong versions","State":"open","Body":"MsBuild loses assembly references specified in our project file if the SDK happens to import the same assembly (possibly in a different version) from nuget packages.\r\n\r\nWe have an ASP.NET Core project which pulls in Newtonsoft.Json with 11.0.2 package version. Our project file has an explicit reference to Newtonsoft.Json 12.0.0.0 assembly version. The reference is specified via HintPath because we do not want to update every single project file (we have a lot) when we change the 3rd party components we deploy.\r\n```xml\r\n    <Reference Include=\"Newtonsoft.Json\">\r\n      <HintPath>$(ReferenceBasePath)Newtonsoft.Json.dll</HintPath>\r\n    </Reference>\r\n```\r\nThe bug is in [`ResolveLockFileReferences`](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.PackageDependencyResolution.targets#L448) target where in line 448 you are removing references via their name. Since you generate package references without strong identity you will remove any corresponding references specified in the project using the same name, even though they might have different metadata.\r\n\r\nmsbuild logging says\r\n```\r\n    _JoinedResolvedCompileFileDefinitions=\r\n        Newtonsoft.Json\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\newtonsoft.json\\11.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n                NuGetPackageId=Newtonsoft.Json\r\n                NuGetPackageVersion=11.0.2\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Collections.Immutable\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.collections.immutable\\1.5.0\\lib\\netstandard2.0\\System.Collections.Immutable.dll\r\n                NuGetPackageId=System.Collections.Immutable\r\n                NuGetPackageVersion=1.5.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Reflection.Metadata\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.reflection.metadata\\1.6.0\\lib\\netstandard2.0\\System.Reflection.Metadata.dll\r\n                NuGetPackageId=System.Reflection.Metadata\r\n                NuGetPackageVersion=1.6.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n    Entfernte Elemente: \r\n    Reference=\r\n        Newtonsoft.Json\r\n                HintPath=..\\..\\..\\ThirdParty\\Newtonsoft.Json.dll\r\n        System.Collections.Immutable\r\n                HintPath=..\\..\\..\\ThirdParty\\System.Collections.Immutable.dll\r\n        System.Reflection.Metadata\r\n                HintPath=..\\..\\..\\ThirdParty\\System.Reflection.Metadata.dll\r\n    Hinzugefügte Elemente: \r\n    Reference=\r\n        Newtonsoft.Json\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\newtonsoft.json\\11.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n                NuGetPackageId=Newtonsoft.Json\r\n                NuGetPackageVersion=11.0.2\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Collections.Immutable\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.collections.immutable\\1.5.0\\lib\\netstandard2.0\\System.Collections.Immutable.dll\r\n                NuGetPackageId=System.Collections.Immutable\r\n                NuGetPackageVersion=1.5.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Reflection.Metadata\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.reflection.metadata\\1.6.0\\lib\\netstandard2.0\\System.Reflection.Metadata.dll\r\n                NuGetPackageId=System.Reflection.Metadata\r\n                NuGetPackageVersion=1.6.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n```\r\nThe problem goes away if we specify the reference as\r\n```xml\r\n    <Reference Include=\"Newtonsoft.Json, Version=12.0.0.0\">\r\n      <HintPath>$(ReferenceBasePath)Newtonsoft.Json.dll</HintPath>\r\n    </Reference>\r\n```\r\nbut this is something we do *not* want due to the amount of projects and number of references we would have to maintain manually. For us assembly references are uniquely defined by the version checked into source control in their corresponding third party folder.\r\n\r\nWhile debugging the issue I have seen other msbuild target files acknowledge this problem by rebuilding the references list instead of selectively removing references. Something like\r\n```xml\r\n    <ItemGroup>\r\n      <Reference Remove=\"@(Reference)\"/>\r\n      <Reference Include=\"@(_ModifiedReferences)\"/>\r\n    </ItemGroup>\r\n```\r\nUnfortunately I can't seem to find the place again where I've seen it, but I hope you get the idea of the problem.","Url":"https://github.com/dotnet/sdk/issues/2760","RelatedDescription":"Open issue \"References specified in the project file are sometimes dropped and replaced by wrong versions\" (#2760)"},{"Id":"391940621","IsPullRequest":true,"CreatedAt":"2018-12-18T03:30:25","Actor":"dotnet-bot","Number":"2757","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2757","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2757)"},{"Id":"391887120","IsPullRequest":true,"CreatedAt":"2018-12-17T21:54:39","Actor":"wli3","Number":"2756","RawContent":null,"Title":"No apphost in PackAsTool","State":"closed","Body":"fix #https://github.com/dotnet/sdk/issues/2749","Url":"https://github.com/dotnet/sdk/pull/2756","RelatedDescription":"Closed or merged PR \"No apphost in PackAsTool\" (#2756)"},{"Id":"391643563","IsPullRequest":false,"CreatedAt":"2018-12-17T16:31:07","Actor":"YunWeiaa","Number":"2754","RawContent":null,"Title":"For .Net Core 3.0, create a winforms app, dotnet run without the windows box poping up.","State":"closed","Body":"### Description:\r\nCreate a winforms app. Build and run. \r\ndotnet new winforms -o MyWinFormsApp \r\ncd MyWinFormsApp \r\ndotnet build \r\ndotnet run\r\n\r\n**Expected**: It should appear a windows box like this\r\n![image](https://user-images.githubusercontent.com/33921754/50080741-c4c90800-0227-11e9-8163-39413bd95ebe.png)\r\n\r\n**Actual**: It doesn’t pop up a windows box.\r\n![image](https://user-images.githubusercontent.com/33921754/50080827-f17d1f80-0227-11e9-9d5e-a6298d7667fb.png)\r\n### Test Environment:\r\nD16.0/28414.68(16.0 preview 2.0) + CLI\\SDK: 3.0.100-preview-009839 \r\ndotnet --info:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009839\r\n Commit:    ee9fe44627\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009839\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27216-02\r\n  Commit:  79edbd4d15\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009648 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009839 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27216-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27214-12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2754","RelatedDescription":"Closed issue \"For .Net Core 3.0, create a winforms app, dotnet run without the windows box poping up.\" (#2754)"},{"Id":"391504131","IsPullRequest":true,"CreatedAt":"2018-12-17T16:23:27","Actor":"dagood","Number":"2753","RawContent":null,"Title":"Exclude unit test projects from source-build","State":"closed","Body":"Reopening https://github.com/dotnet/sdk/pull/2642. (I don't seem to have permissions to reopen the PR in-place.)\r\n\r\n> This is a patch for removing test dependencies from source-build: https://github.com/dotnet/source-build/pull/847.\r\n> \r\n> RepoToolset picks up on this `ExcludeFromSourceBuild` property I'm adding and disables restore and build.\r\n> \r\n> @nguerrera, PTAL.\r\n\r\nThis is the patch directly: https://github.com/dotnet/source-build/blob/ecc7b00f5b7cf2d21cb6f545669690f7ab4996fc/patches/sdk/0001-Exclude-unit-test-projects-from-source-build.patch. Getting patch fixes pulled into the repo is important to us to avoid maintenance costs.","Url":"https://github.com/dotnet/sdk/pull/2753","RelatedDescription":"Closed or merged PR \"Exclude unit test projects from source-build\" (#2753)"},{"Id":"391702193","IsPullRequest":true,"CreatedAt":"2018-12-17T16:23:00","Actor":"dotnet-maestro[bot]","Number":"2755","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2755","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2755)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalMlaik","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"},{"Id":"319700544","IsPullRequest":false,"CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Number":"65","RawContent":null,"Title":".NET Framework Runtime and Builder Docker repos have merged ","State":"open","Body":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n","Url":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Open issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65)"},{"Id":"315285808","IsPullRequest":false,"CreatedAt":"2018-04-18T00:20:13","Actor":"richlander","Number":"64","RawContent":null,"Title":"April 2018 .NET Updates","State":"open","Body":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [Announcing the .NET Framework 4.7.2](https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/)\r\n* No new patch releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Open issue \"April 2018 .NET Updates\" (#64)"},{"Id":"305721744","IsPullRequest":false,"CreatedAt":"2018-03-15T21:13:36","Actor":"mairaw","Number":"63","RawContent":null,"Title":"Transport Layer Security (TLS) best practices with the .NET Framework article published","State":"open","Body":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices for .NET Framework applications at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675","Url":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Open issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1073371092515840000","CreatedAt":"2018-12-14T00:16:25+00:00","UserScreenname":"dotnet","Text":"C# and Visual Basic files get Regex language support in @VisualStudio 2019 Preview\nhttps://t.co/NL5QgAl9hq https://t.co/WWTK6BT5RG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":369,"FavoriteCount":135,"RawContent":null},{"Id":"1072638045227270144","CreatedAt":"2018-12-11T23:43:33+00:00","UserScreenname":"dotnet","Text":"Blogged: .NET Framework December 2018 Security and Quality Rollup https://t.co/5PllosL5i2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2019-01-02T05:30:42.3879274Z","RunDurationInMilliseconds":19105}