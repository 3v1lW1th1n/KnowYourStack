{"Data":{"Blog":{"FeedItems":[{"Title":"Preparing Android Apps for Google Play’s 64-bit Requirements","PublishedOn":"2019-05-29T18:34:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The introduction of Android 5.0 back in 2014 brought official support for 64-bit CPUs. This is a great advancement in Android as 64-bit CPUs deliver great performance improvements for all users...","Href":"https://devblogs.microsoft.com/xamarin/64-bit-requirements-xamarin-android-apps/","RawContent":null},{"Title":"Xamarin.Forms 4.0: Getting Started with Shell","PublishedOn":"2019-05-28T19:16:30+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Xamarin.Forms 4.0 introduced amazing new features to help streamline development when building beautiful mobile apps with C#. The main highlight was the new Xamarin.Forms Shell, which seeks to reduce...","Href":"https://devblogs.microsoft.com/xamarin/shell-xamarin-forms-4-0-getting-started/","RawContent":null},{"Title":"Welcome to the Shell Era: Xamarin.Forms 4.0 Released","PublishedOn":"2019-05-21T16:10:44+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"For the past year, Xamarin has been on a focused journey to improve your productivity by reducing your complexity when building cross-platform mobile applications. Notice the reference to...","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-forms-4-0-the-era-of-shell/","RawContent":null},{"Title":"Managing HTTP & Cleartext Traffic on Android with Network Security Configuration","PublishedOn":"2019-05-17T18:40:55+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Did you know that starting with Android 9 (API level 28) cleartext(non-HTTPS) support is disabled by default? It is always recommended to make connections over HTTPS to ensure that any web...","Href":"https://devblogs.microsoft.com/xamarin/cleartext-http-android-network-security/","RawContent":null},{"Title":"Xamarin Podcast: Microsoft Build 2019 Recap","PublishedOn":"2019-05-14T18:29:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development. This edition also covering a recap of Microsoft Build 2019!\nBuild...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-build-2019-recap/","RawContent":null},{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null},{"Title":"The Next Evolution of Xamarin Training: Microsoft Learn","PublishedOn":"2019-05-06T08:01:53+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We&#8217;re excited to announce two new learning paths on Building Xamarin Apps in Microsoft Learn: A free and interactive learning portal.\nXamarin University Joins MS Learn\nThe Xamarin University...","Href":"https://devblogs.microsoft.com/xamarin/next-evolution-xamarin-training-microsoft-learn/","RawContent":null},{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9731692782","Type":"PullRequestEvent","CreatedAt":"2019-05-31T03:20:07","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3151","RelatedDescription":"Opened pull request \"[docs] Move images for messages docs alongside the docs\" (#3151) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/3087\r\n\r\nAs an additional step toward preparing the message docs to be synced to\r\ndocs.microsoft.com, place the images for the docs within their own\r\n`images` subdirectory alongside the Markdown files.  That way, the\r\nautomation to synchronize the pages won't need to look through the\r\nMarkdown files to find linked images.  It can instead just copy the\r\nwhole `images` subdirectory to the same relative location in the\r\nnon-public xamarin-engineering-docs-pr mirror."},{"Id":"9730532048","Type":"PullRequestEvent","CreatedAt":"2019-05-30T21:59:08","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3134","RelatedDescription":"Closed pull request \"Test out my PR\" (#3134) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9729970620","Type":"PullRequestEvent","CreatedAt":"2019-05-30T20:22:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3148","RelatedDescription":"Merged pull request \"Bump to mono/mono/2019-02@bab25c0a\" (#3148) at xamarin/xamarin-android","RelatedBody":"Write newline-separated nunit/xunit excludes file for sdks archive.\r\n\r\nAdd linker sources to android sdks archive.\r\n\r\nAdd nunit exclude categories for monotouch/monodroid profiles."},{"Id":"9729913826","Type":"PullRequestEvent","CreatedAt":"2019-05-30T20:13:43","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3150","RelatedDescription":"Opened pull request \"Bump to xamarin/monodroid/master@a5471bf\" (#3150) at xamarin/xamarin-android","RelatedBody":"Changes: https://github.com/xamarin/monodroid/compare/c494b17...a5471bf\r\n\r\nFor testing AndroidX, I need:\r\n\r\nxamarin/monodroid/master@b4a403f"},{"Id":"9729426308","Type":"PullRequestEvent","CreatedAt":"2019-05-30T18:55:49","Actor":"alexischr","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3149","RelatedDescription":"Opened pull request \"Update default API level in configuration override file template. The…\" (#3149) at xamarin/xamarin-android","RelatedBody":"… older level seems to be problematic in master builds"},{"Id":"9728910366","Type":"PullRequestEvent","CreatedAt":"2019-05-30T17:38:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3121","RelatedDescription":"Merged pull request \"[r8] update to 1.4.93\" (#3121) at xamarin/xamarin-android","RelatedBody":"Context: https://mvnrepository.com/artifact/com.android.tools/r8/1.4.93\r\nContext: https://r8.googlesource.com/r8/+/refs/tags/1.4.93/\r\n\r\nUpdating to the latest R8, we hit a problem...\r\n\r\nIn R8 1.4.93, they appear to have removed support for custom\r\n`multidex.keep` files when `minSdkVersion` >= 21. R8 decides on its\r\nown if multidex is needed, and splits up dex files appropriately.\r\n\r\nThe new error message was added here:\r\n\r\nhttps://r8.googlesource.com/r8/+/0e5c4339df0207a0e38f11438db84b29f328f777%5E%21/\r\n\r\nSince `r8.jar` will now abort with an error if you specify\r\n`multidex.keep` files and `minSdkVersion` >= 21. I feel all we can do\r\nin this case is add a new warning if developers specify\r\n`@(MultiDexMainDexList)` with R8--then allow R8 to calculate multidex\r\non its own.\r\n\r\nWe looked a bit, and did not find much usage of the\r\n`@(MultiDexMainDexList)` item group:\r\n\r\nhttps://github.com/search?q=MultiDexMainDexList&type=Code\r\n\r\nThe examples of `multidex.keep` files we found, looked like they\r\nshouldn't be needed anyway.\r\n\r\nI updated the `MultiDexCustomMainDexFileList` test to check dx/d8 and\r\nAPI 19/21. R8 appears to create multiple dex files without any\r\nmultidex rules or `multidex.keep` files."},{"Id":"9728655820","Type":"PullRequestEvent","CreatedAt":"2019-05-30T16:59:29","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3148","RelatedDescription":"Opened pull request \"Bump to mono/mono/2019-02@bab25c0a\" (#3148) at xamarin/xamarin-android","RelatedBody":"Write newline-separated nunit/xunit excludes file for sdks archive.\r\n\r\nAdd linker sources to android sdks archive.\r\n\r\nAdd nunit exclude categories for monotouch/monodroid profiles."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9731665188","Type":"IssuesEvent","CreatedAt":"2019-05-31T03:12:01","Actor":"kelvincwk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6365","RelatedDescription":"Opened issue \"[Bug] Disabled entry field shows dotted border on iOS with Visual=\"Material\" applied\" (#6365) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nDifferent visual effect in the Entry element when it is using Material design and being disabled.\r\n\r\n### Steps to Reproduce\r\n1. Create an Entry on the page\r\n2. Set the Visual=\"Material\"\r\n3. Set the IsEnabled = \"False\"\r\n\r\n### Expected Behavior\r\nThe entry should have dotted border both iOS and Android.\r\n\r\n### Actual Behavior\r\nThe dotted border is working on iOS when disabled but not Android; on Android it is rendering just as normal border as it does like the filed is enabled.\r\n\r\n### Basic Information\r\n- Version with issue: Xamarin.Forms.Visual.Material v3.6.0.220655  and v3.6.0.293080\r\n- IDE: Visual Studio 2017 v15.9.9\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.2\r\n  - Android: 9.0 api 28\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: Xamarin.Forms.Visual.Material v3.6.0.220655  and v3.6.0.293080\r\n- Affected Devices: emulators -> iPhone Xr , Pixel xl\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/38121702/58678500-87e66d00-8392-11e9-9d41-c4183d92a206.png)\r\n\r\n\r\n### Reproduction Link\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/\r\nI was using this repo TheLittleThingsPlayground to replicate the problem. Thanks to David.\r\n\r\nJust navigate to the visual of Entry (https://github.com/davidortinau/TheLittleThingsPlayground/blob/master/TheLittleThingsPlayground/Views/Visual/EntriesPage.xaml) and set IsEnabled to False.\r\n\r\n                <Entry Placeholder=\"Title\" Text=\"Vintage Dress\" IsEnabled=\"False\"\r\n                       PlaceholderColor=\"{StaticResource QuinaryColor}\" TextColor=\"{StaticResource PrimaryColor}\" BackgroundColor=\"#ddd\"\r\n                       FlexLayout.Basis=\"100%\" Margin=\"0,0,0,10\" />\r\n\r\n\r\n"},{"Id":"9731537726","Type":"IssuesEvent","CreatedAt":"2019-05-31T02:35:25","Actor":"landl0526","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6364","RelatedDescription":"Opened issue \"[Bug][Forms] How to bind to a JObject in XAML\" (#6364) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI don't want to predefine a model class to represent a json string. I want to bind to the JObject directly.\r\nHere is my json string:\r\n```\r\nstring jsonStr = @\"{\r\n                        section: \r\n                        { \r\n                        title: \"\"Login\"\",\r\n                        body: \"\"This is your body!\"\"\r\n                        },\r\n                    }\";\r\n```\r\nAnd I have set the page's binding context to this json object:\r\n```\r\nvar jsonObject = JsonConvert.DeserializeObject(jsonStr);\r\nBindingContext = jsonObject;\r\n```\r\nThen I used the binding in my XAML like:\r\n`<Label HorizontalTextAlignment=\"Center\" Text=\"{Binding Path=[section][body]}\" />`\r\nBut it failed with showing nothing.\r\nHowever, if I consumed it like:\r\n```\r\n<Label HorizontalTextAlignment=\"Center\"\r\n               BindingContext=\"{Binding Path=[section]}\"\r\n               Text=\"{Binding Path=[title]}\" />\r\n```\r\nIt displayed correctly. It seems binding only recognizes the first primary level. But I want it to digger further to get the information if I have a complicated json string.\r\n\r\nI wonder whether this is a bug or designed by default.\r\n\r\n### Expected Behavior\r\n\r\nI want to use binding like: Path=[section][body][...]\r\n\r\n### Actual Behavior\r\n\r\nIt only recognized the first level.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0425677\r\n- Last known good version: Unknown\r\n- IDE: VS for Windows\r\n- Platform Target Frameworks:  All platforms.\r\n\r\n### Screenshots\r\n\r\n![Capture](https://user-images.githubusercontent.com/38024956/58677673-7f406780-838f-11e9-874b-a2b1bec34eea.PNG)\r\n\r\n"},{"Id":"9731351043","Type":"PullRequestEvent","CreatedAt":"2019-05-31T01:40:58","Actor":"Sebastian1989101","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6363","RelatedDescription":"Opened pull request \"Added option to display icons instead of text in context actions for iOS\" (#6363) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI've added a enum to choose if ContextActions within a ListView should be displayed as Icon or Text. This can be activated for each individual MenuItem. \r\n\r\n### Issues Resolved ### \r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - IElementConfiguration<MenuItem> to MenuItem\r\n- Added On<iOS>().SetContextActionDisplay(ContextActionDisplay.Icon) for MenuItem\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone with default settings. When ContextActionDisplay.Icon is set for MenuItem they will appear as Icon instead of text in iOS. \r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAdded \"Context Action Display Test\" to Control Gallery which includes one Icon ContextAction and one Text based. \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n\r\n### Additional noted ###\r\n\r\nMaybe this option should be moved to the ViewCell instead. This would prevent a base class to change (in this case MenuItem which now has an additional interface) and the More-Action could also change to an Icon (maybe the UITabBarSystemItem.More?) but it will remove some freedom which should be displayed as Icon and which one should not (at least if there is any reason for this to happen?). \r\n"},{"Id":"9728611355","Type":"IssuesEvent","CreatedAt":"2019-05-30T16:52:44","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3950","RelatedDescription":"Closed issue \"After compiling Android, I have to restart VS before I can compile iOS\" (#3950) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nIt is a shared library project. We work on Windows, in Visual studio. After any Android debugging, if i also want to compile iOS, I have to restart Visual Studio.\r\n\r\nPressing the \"play\" button doesnt do anything, nothing in the Output or Build windows\r\n\r\nWe use the Hyper-v emulator\r\n\r\n**This issues is reproduced exactly the same on 2 developer laptops**\r\n\r\n### Steps to Reproduce\r\n\r\n1. Press Debug (\"green play\") button on Android\r\n2. After app successfully launched, press Stop debugging\r\n3. Switch the startup project over to iOS\r\n4. Press Debug button again\r\n\r\n### Expected Behavior\r\nApplication compiles\r\n\r\n### Actual Behavior\r\nNothing happens\r\n\r\nIf I restart visual studio, this time opening with the iOS as the default startup project, then it compiles and debugs with no problems. Switching from iOS back to Android also works. \r\n\r\n### Basic Information\r\n\r\n- Version with issue:  Xamarin Forms 3.2,  Xamarin plugin 4.11.0.776\r\n- Last known good version: Worked in Xamarin 3,0\r\n- IDE: Visual studio 1.8.5\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  Xamarin.Ios 12.0.0.15\r\n  - Android: 9.0.0.19\r\n\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices: Virtual machiens\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9730416089","Type":"PullRequestEvent","CreatedAt":"2019-05-30T21:36:52","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6186","RelatedDescription":"Opened pull request \"[sampletester] Bump xamarin-forms-book-samples to the tip of master, where a few fixes have been merged.\" (#6186) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9730408369","Type":"PullRequestEvent","CreatedAt":"2019-05-30T21:35:24","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6185","RelatedDescription":"Opened pull request \"[sampletester] Use dotnet v2.2.1XX if available.\" (#6185) at xamarin/xamarin-macios","RelatedBody":"Works around https://github.com/NuGet/Home/issues/7956."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1134188986229035010","CreatedAt":"2019-05-30T20:05:01+00:00","UserScreenname":"xamarinhq","Text":"What's better than sharing 80% of code across #iOS &amp; #Android apps w/ #Xamarin? ...building a backend powered by… https://t.co/EZc7s5adqh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":18,"RawContent":null},{"Id":"1134136640929193985","CreatedAt":"2019-05-30T16:37:01+00:00","UserScreenname":"xamarinhq","Text":"August 1 2019, Android apps that ship native libraries must provide a 64-bit v of their app.… https://t.co/JSElMqVSyB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":19,"RawContent":null},{"Id":"1133821797059780608","CreatedAt":"2019-05-29T19:45:56+00:00","UserScreenname":"xamarinhq","Text":"Today on @TheXamarinShow,, @JamesMontemagno &amp; #MSMVP @NicoVermeir shows off a tool that will change the life of eve… https://t.co/lYUf1XXB4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":18,"RawContent":null},{"Id":"1133455659851243520","CreatedAt":"2019-05-28T19:31:02+00:00","UserScreenname":"xamarinhq","Text":"There are some amazing new features to help streamline C# dev when building beautiful mobile apps w/ Xamarin.Forms… https://t.co/MRwO5G62uW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":151,"FavoriteCount":72,"RawContent":null},{"Id":"1131261167085580289","CreatedAt":"2019-05-22T18:10:54+00:00","UserScreenname":"xamarinhq","Text":"Join us right now for the #XamarinForms 4.0 Launch Event Live Stream! https://t.co/YE7Usel1Sb","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":14,"RawContent":null},{"Id":"1131230744267972608","CreatedAt":"2019-05-22T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin.Forms team for the Xamarin.Forms 4.0 launch event extravaganza where they will discuss the latest… https://t.co/WJK5Lp4eRK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":24,"RawContent":null},{"Id":"1130900878830002177","CreatedAt":"2019-05-21T18:19:15+00:00","UserScreenname":"xamarinhq","Text":"We've been obsessing over your feedback. Thanks to your commitment to helping us deliver great dev tools, we're ann… https://t.co/uioErOmWr2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":214,"FavoriteCount":87,"RawContent":null},{"Id":"1129486865831272449","CreatedAt":"2019-05-17T20:40:28+00:00","UserScreenname":"xamarinhq","Text":"Did you know that starting with Android 9, cleartext(non-HTTPS) support is disabled by default? In our latest post,… https://t.co/hRUvSFu9c8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":52,"FavoriteCount":26,"RawContent":null},{"Id":"1129423057725083649","CreatedAt":"2019-05-17T16:26:55+00:00","UserScreenname":"xamarinhq","Text":"In the latest @XamarinShow, @JamesMontemagno &amp; @dotMorten intro us to the world of advanced mapping with ArcGIS for… https://t.co/nVZWVivZdG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":86,"FavoriteCount":26,"RawContent":null},{"Id":"1129055786808877057","CreatedAt":"2019-05-16T16:07:31+00:00","UserScreenname":"xamarinhq","Text":"In today's #MSBuild session replay, we look at how you can craft stunning mobile apps with the Xamarin Visual Desig… https://t.co/W9U6GrPYf1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":35,"RawContent":null},{"Id":"1129054446191751168","CreatedAt":"2019-05-16T16:02:11+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"1128376789510819840","CreatedAt":"2019-05-14T19:09:25+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. In today's episode, we learn the difference between the Preferences API part… https://t.co/z7Yrhk0jNn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":27,"RawContent":null},{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":78,"FavoriteCount":44,"RawContent":null},{"Id":"1125851046939697152","CreatedAt":"2019-05-07T19:53:01+00:00","UserScreenname":"xamarinhq","Text":"The @XamarinU team has joined the #MicrosoftLearn family! Find Xamarin content in Microsoft Learn today at… https://t.co/gWKXwsPUuk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":137,"FavoriteCount":65,"RawContent":null},{"Id":"1125402214661382146","CreatedAt":"2019-05-06T14:09:31+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin Team at Microsoft Build 2019.\nWe have a packed schedule for Xamarin developers.\nCheck out the sche… https://t.co/fFz1nlYVTp","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":68,"FavoriteCount":27,"RawContent":null},{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":8,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":13,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":64,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2019-05-31T05:30:56.2349761Z","RunDurationInMilliseconds":2206}