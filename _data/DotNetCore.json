{"Data":{"Blog":{"FeedItems":[{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"},{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7488921999","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:39:04","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17450","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert\" (#17450) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7488864071","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:15:03","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16172","RelatedDescription":null,"RelatedBody":""},{"Id":"7488856446","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:11:54","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16172","RelatedDescription":"Closed pull request \"[wip][do not merge]dummy change, test arm r2r\" (#16172) at dotnet/coreclr","RelatedBody":""},{"Id":"7488773571","Type":"PullRequestEvent","CreatedAt":"2018-04-06T03:38:05","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17451","RelatedDescription":"Opened pull request \"Code cleanup and formatting for System.Memory files.\" (#17451) at dotnet/coreclr","RelatedBody":"I tried to limit the changes mainly to files shared between coreclr/corefx relevant to System.Memory.\r\n\r\nEach set of changes is a separate commit.\r\n\r\nThe IDE00XX errors were fixed by VS, so all instances of the errors within the solution got fixed.\r\n\r\nRelated PR on the corefx side: \r\n\r\ncc @dotnet/corefxlab-contrib, @stephentoub, @jkotas  "},{"Id":"7488703462","Type":"PullRequestEvent","CreatedAt":"2018-04-06T03:09:47","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17422","RelatedDescription":"Merged pull request \"Update docker images for arm32\" (#17422) at dotnet/coreclr","RelatedBody":"Update docker containers that we use for arm builds. The new containers have clang-5.0 that fixes #16995.\r\n\r\nLink dotnet/dotnet-buildtools-prereqs-docker#42\r\n\r\n@jashook could you please check that I have marked all places that need to be changed?"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7488876941","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:20:21","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8895","RelatedDescription":"Closed pull request \"WIP Minimizing collsions in global tool names and future CLI commands\" (#8895) at dotnet/cli","RelatedBody":""},{"Id":"7488836047","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:03:22","Actor":"sdmaclea","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9011","RelatedDescription":"Opened pull request \"[Arm64] Enable crossgen\" (#9011) at dotnet/cli","RelatedBody":"Enable Arm64 Crossgen \r\n\r\nFixes for arm64 #8998 \r\n\r\nDepends on dotnet/core-setup#3987 ++\r\n\r\nWorks if I manually copy crossgen dependencies from core-setup\r\n\r\n```bash\r\n# Copy x64_arm64 crossgen\r\n cp -r \\\r\n    ../core-setup/packages/transport.runtime.linux-arm64.microsoft.netcore.runtime.coreclr/2.1.0-preview3-26404-06/tools/x64_arm64 \\\r\n    ./.nuget/packages/runtime.linux-arm64.microsoft.netcore.app/2.1.0-preview3-26404-01/tools\r\n\r\n# Copy x64_arm64 libclrjit.so\r\ncp -r \\\r\n    ../core-setup/packages/transport.runtime.linux-arm64.microsoft.netcore.jit/2.1.0-preview3-26404-06/runtimes/x64_arm64 \\\r\n    ./.nuget/packages/runtime.linux-arm64.microsoft.netcore.app/2.1.0-preview3-26404-01/runtimes/\r\n\r\n```\r\n\r\n@eerhardt \r\nContains #8896 which I hope/expect will merge before dotnet/core-setup#3987 is ready"},{"Id":"7488573809","Type":"PullRequestEvent","CreatedAt":"2018-04-06T02:15:39","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9010","RelatedDescription":"Opened pull request \"WIP Release2.1.3xx to master\" (#9010) at dotnet/cli","RelatedBody":"should I?\r\n\r\nfor version.prop, if there is simple number bump i keep the highest. If there is \"preview\" I keep using preview3 on master\r\n\r\nI revert readme change. I think that's the only part"},{"Id":"7488535818","Type":"PullRequestEvent","CreatedAt":"2018-04-06T01:59:23","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/9009","RelatedDescription":"Closed pull request \"Release/2.1.3xx\" (#9009) at dotnet/cli","RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"7488535475","Type":"PullRequestEvent","CreatedAt":"2018-04-06T01:59:14","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9009","RelatedDescription":"Opened pull request \"Release/2.1.3xx\" (#9009) at dotnet/cli","RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"7487970879","Type":"PullRequestEvent","CreatedAt":"2018-04-05T22:30:47","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9006","RelatedDescription":"Merged pull request \"Updating SDK to 2.1.200-preview-62805-05\" (#9006) at dotnet/cli","RelatedBody":""},{"Id":"7487532984","Type":"PullRequestEvent","CreatedAt":"2018-04-05T20:47:33","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8763","RelatedDescription":"Closed pull request \"Update template engine to 1.0.1-beta3-20180309-1459566\" (#8763) at dotnet/cli","RelatedBody":"Catch up template engine to one more recent than the 2.1.0-preview1 build"},{"Id":"7487450735","Type":"IssuesEvent","CreatedAt":"2018-04-05T20:30:48","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8720","RelatedDescription":"Closed issue \"Installing a final version of an SDK should remove preview versions\" (#8720) at dotnet/cli","RelatedBody":"@onovotny commented on [Fri Mar 02 2018](https://github.com/dotnet/core-setup/issues/3770)\n\nSee this thread:\r\n\r\nhttps://twitter.com/DamianEdwards/status/969762795926429696\r\n\r\nIssue is that after a while, users wind up with tons of preview SDK's (either due to direct install or by being chained into a VS Preview channel update). They never get uninstalled.\r\n\r\nInstalling the final version of an SDK should remove the corresponding preview versions as it's very unlikely that a user would intend on having the older previews alongside.\r\n\r\n/cc @nickcraver\r\n\n\n"},{"Id":"7487436143","Type":"PullRequestEvent","CreatedAt":"2018-04-05T20:27:54","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8933","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to master\" (#8933) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7487635910","Type":"PullRequestEvent","CreatedAt":"2018-04-05T21:08:50","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/701","RelatedDescription":"Opened pull request \"Stabalize 2.0.2 NETStandard.Library package\" (#701) at dotnet/standard","RelatedBody":"cc @ericstj @joperezr \r\n\r\nRelease notes for 2.0.2:\r\n - Issue https://github.com/dotnet/standard/issues/442 Adding .NET Standard/.NET Framework facades assemblies is consuming 11% of build time - fixed in https://github.com/dotnet/standard/pull/510"},{"Id":"7481565567","Type":"PullRequestEvent","CreatedAt":"2018-04-04T21:05:28","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/700","RelatedDescription":"Opened pull request \"Update BuildTools to preview3-02704-01 (master)\" (#700) at dotnet/standard","RelatedBody":""},{"Id":"7481560439","Type":"PullRequestEvent","CreatedAt":"2018-04-04T21:04:25","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/695","RelatedDescription":"Merged pull request \"Update BuildTools to preview3-02703-02 (master)\" (#695) at dotnet/standard","RelatedBody":""},{"Id":"7467609091","Type":"PullRequestEvent","CreatedAt":"2018-04-02T15:55:55","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/699","RelatedDescription":"Opened pull request \"Don't fail trimming on missing files\" (#699) at dotnet/standard","RelatedBody":"Instead, warn if that file happens to be included in the closure.\r\n\r\nFixes #697\r\n\r\nIt's still not clear to me this is required, but we can add it.  It may even be more appropriate to error."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7488952552","Type":"IssuesEvent","CreatedAt":"2018-04-06T04:51:57","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/28878","RelatedDescription":"Opened issue \"System.Diagnostics.PerformanceCounter tests fail on spanish Windows 10 (Non English CI)\" (#28878) at dotnet/corefx","RelatedBody":"https://mc.dot.net/#/user/Anipik/pr~2Fjenkins~2Fdotnet~2Fcorefx~2Fmaster~2F/test~2Ffunctional~2Fcli~2F/c9dded080a169148f306c0310c1a7e14d520f63b/workItem/System.Diagnostics.PerformanceCounter.Tests\r\n\r\nThe assertion fail is same for all the tests \r\n```\r\nAssert.NotEqual() Failure\r\nExpected: Not 0\r\nActual:   0\r\n```\r\nThe tests affected are \r\nInstanceDataCollectionCollection_Contains_Valid \r\nInstanceDataCollectionCollection_Contains_inValid\r\nInstanceDataCollectionCollection_CopyTo \r\nInstanceDataCollectionCollection_GetItem_Invalid\r\nInstanceDataCollectionCollection_GetKeys \r\nInstanceDataCollectionCollection_GetValues \r\nInstanceDataCollection_GetItem_ExistingCounter \r\nInstanceDataCollection_GetKeys \r\nInstanceDataCollection_GetValues \r\nInstanceDataCollection_NullTest\r\n\r\ncc @danmosemsft \r\n\r\n"},{"Id":"7488862640","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:14:28","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28877","RelatedDescription":"Opened pull request \"Add tests for Span.Overlaps extension method (just like ReadOnlySpan.Overlaps)\" (#28877) at dotnet/corefx","RelatedBody":"API added in https://github.com/dotnet/corefx/pull/24980.\r\n\r\nImproving code coverage (copy/paste and modified the existing tests on ReadOnlySpan).\r\n\r\ncc @ektrah, @dotnet/corefxlab-contrib "},{"Id":"7488838423","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:04:24","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28876","RelatedDescription":"Opened pull request \"Fix the test gap in StringTests for IndexOf, LastIndexOf when string is empty\" (#28876) at dotnet/corefx","RelatedBody":"cc @stephentoub, @jkotas, @tarekgh "},{"Id":"7488773816","Type":"PullRequestEvent","CreatedAt":"2018-04-06T03:38:10","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28875","RelatedDescription":"Opened pull request \"Code cleanup and formatting for System.Memory src and test\" (#28875) at dotnet/corefx","RelatedBody":"Each set of changes is a separate commit.\r\n\r\nRelated PR on the coreclr side: https://github.com/dotnet/coreclr/pull/17451\r\n\r\ncc @dotnet/corefxlab-contrib, @stephentoub, @jkotas  "},{"Id":"7488766639","Type":"PullRequestEvent","CreatedAt":"2018-04-06T03:35:16","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28874","RelatedDescription":"Opened pull request \"Update CoreFx, Standard to uwp61-26406-02, preview1-26405-01, respectively (release/uwp6.1)\" (#28874) at dotnet/corefx","RelatedBody":""},{"Id":"7488641045","Type":"PullRequestEvent","CreatedAt":"2018-04-06T02:43:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28873","RelatedDescription":"Opened pull request \"Update CoreFx to preview3-26406-01 (master)\" (#28873) at dotnet/corefx","RelatedBody":""},{"Id":"7488612631","Type":"PullRequestEvent","CreatedAt":"2018-04-06T02:31:44","Actor":"AlexRadch","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/28524","RelatedDescription":"Closed pull request \"Created ReadOnlySequence tests and fixed issues\" (#28524) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7489041281","Type":"PullRequestEvent","CreatedAt":"2018-04-06T05:28:21","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25986","RelatedDescription":"Opened pull request \"Parens on tuple literals can be simplified\" (#25986) at dotnet/roslyn","RelatedBody":"When inlining a local that is defined with a tuple literal, the inlined expression doesn't need to be parenthesized.\r\n\r\nAddresses part of https://github.com/dotnet/roslyn/issues/11028"},{"Id":"7488876017","Type":"PullRequestEvent","CreatedAt":"2018-04-06T04:19:59","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25985","RelatedDescription":"Opened pull request \"Extract out subsystem for allowing embedded languages to export language services.\" (#25985) at dotnet/roslyn","RelatedBody":""},{"Id":"7488797086","Type":"PullRequestEvent","CreatedAt":"2018-04-06T03:47:33","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25984","RelatedDescription":"Opened pull request \"GoToDef on deconstruction assignment and foreach\" (#25984) at dotnet/roslyn","RelatedBody":"This PR associates the symbols for various `Deconstruct` methods involved in a deconstruction with the `=` (in deconstruction assignment or deconstruction declaration) or the `in` syntax (in deconstruction foreach).\r\n\r\nNote that GoToDef currently assumes that there is only one symbol that is \"the definition\". I think we should relax that, as a later change. If we did, we could not only list the `Deconstruct` methods, but also the `GetEnumerator` method, and even conversion operators involved in the assignment or foreach.\r\n\r\nIn the meantime, GoToDef only goes to the first `Deconstruct` method listed, which is the top-level one. That is good enough for most cases (nested deconstructions would be less common).\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/16529\r\nTagging @CyrusNajmabadi FYI"},{"Id":"7488656766","Type":"PullRequestEvent","CreatedAt":"2018-04-06T02:50:15","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25947","RelatedDescription":"Merged pull request \"Merge 'dotnet/dev15.7.x' into dataflow\" (#25947) at dotnet/roslyn","RelatedBody":""},{"Id":"7488624512","Type":"PullRequestEvent","CreatedAt":"2018-04-06T02:36:38","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25982","RelatedDescription":"Opened pull request \"[WIP] make diagnostic analyzer service lazy and not require UI thread.\" (#25982) at dotnet/roslyn","RelatedBody":"require ExtensionManager change that got checked into 15.8\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7488525252","Type":"PullRequestEvent","CreatedAt":"2018-04-06T01:54:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5656","RelatedDescription":"Merged pull request \"revert \"Work around MCG bug around `ref char` marshalling #5481\"\" (#5656) at dotnet/corert","RelatedBody":"This reverts commit https://github.com/dotnet/corert/pull/5481/commits/b2901d08b67d4ab051cc39b38deaa96933e2f714 and https://github.com/dotnet/corert/pull/5576/commits/be184ac590a76bad08640f6d32a8da03f767220e."},{"Id":"7488434838","Type":"PullRequestEvent","CreatedAt":"2018-04-06T01:16:11","Actor":"ahsonkhan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5655","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5655) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7487248408","Type":"PullRequestEvent","CreatedAt":"2018-04-05T19:49:13","Actor":"luqunl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5656","RelatedDescription":"Opened pull request \"revert \"Work around MCG bug around `ref char` marshalling #5481\"\" (#5656) at dotnet/corert","RelatedBody":"This reverts commit https://github.com/dotnet/corert/pull/5481/commits/b2901d08b67d4ab051cc39b38deaa96933e2f714."},{"Id":"7486898372","Type":"PullRequestEvent","CreatedAt":"2018-04-05T18:38:51","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5655","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5655) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7486692756","Type":"PullRequestEvent","CreatedAt":"2018-04-05T17:59:41","Actor":"stephentoub","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5652","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5652) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7486220923","Type":"IssuesEvent","CreatedAt":"2018-04-05T16:29:05","Actor":"mrkmg","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5654","RelatedDescription":"Opened issue \"Clang 6.0 Support for Linux\" (#5654) at dotnet/corert","RelatedBody":"I am trying to test CoreRT on Arch Linux.\r\n\r\nWhen I run `dotnet publish -c Release -r linux-x64` I get:\r\n\r\n```\r\n.../microsoft.dotnet.ilcompiler/1.0.0-alpha-26405-01/build/Microsoft.NETCore.Native.Unix.props(100,5): error : Platform linker ('clang-3.9') not found. Try installing clang-3.9 or the appropriate package for your platform to resolve the problem...\r\n```\r\nI currently have clang 6.0 installed on my machine."},{"Id":"7486201668","Type":"IssuesEvent","CreatedAt":"2018-04-05T16:25:29","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5653","RelatedDescription":"Opened issue \"UseDeveloperExperiencePage in the ASP.NET demo app doesn't work\" (#5653) at dotnet/corert","RelatedBody":"Reported at https://vimeo.com/262938007 but I haven't tried to repro yet. We either just miss a piece of RD.XML in the sample or it's a legit bug."},{"Id":"7486040419","Type":"PullRequestEvent","CreatedAt":"2018-04-05T15:57:23","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5652","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5652) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7485842325","Type":"PullRequestEvent","CreatedAt":"2018-04-05T15:25:07","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5649","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5649) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7488790189","Type":"PullRequestEvent","CreatedAt":"2018-04-06T03:44:42","Actor":"KevinRansom","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2117","RelatedDescription":"Opened pull request \"Add vb testing\" (#2117) at dotnet/sdk","RelatedBody":"This adds some smoketests for VB in the net sdk\r\n\r\nIt also fixes a few issues with implicitframework defines and implicitconfiguration define.\r\n\r\n/cc @livarcocc , @nguerrera "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"981533325767606273","CreatedAt":"2018-04-04T14:05:55+00:00","UserScreenname":"dotnet","Text":"Jeff (@csharpfritz) is working with @Azure Q &amp; A Maker today to improve his chat-bot for Twitch and Mixer.  Tune in… https://t.co/MLdDPdKPTL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":0,"RawContent":null}]}},"RunOn":"2018-04-06T05:30:20.5877194Z","RunDurationInMilliseconds":7823}