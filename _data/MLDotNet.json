{"Data":{"GitHub":{"Issues":[{"Id":"560078228","IsPullRequest":true,"CreatedAt":"2020-02-05T01:01:37","Actor":"michaelgsharp","Number":"4783","RawContent":null,"Title":"Onnx Export change to allow for multiple rows","State":"open","Body":"Changed ONNX export from always exporting the dimensions as 1 to -1. This lets ONNX Runtime determine the dimension when the data is passed to it, allowing for batching to be done if desired. ML.NET doesn't support batching, but this allows the model to be run directly in ORT using batching while still supporting the streaming approach that ML.NET uses.","Url":"https://github.com/dotnet/machinelearning/pull/4783","RelatedDescription":"Open PR \"Onnx Export change to allow for multiple rows\" (#4783)"},{"Id":"560072070","IsPullRequest":true,"CreatedAt":"2020-02-05T00:39:53","Actor":"frank-dong-ms","Number":"4782","RawContent":null,"Title":"fix some Baselinetest and add missing Done()","State":"open","Body":"1. add missing baseline file for compare\r\n2. use allow mismatch in certain tests that only intend compare value and return result but not fail test\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4782","RelatedDescription":"Open PR \"fix some Baselinetest and add missing Done()\" (#4782)"},{"Id":"560012292","IsPullRequest":true,"CreatedAt":"2020-02-04T22:17:05","Actor":"Lynx1820","Number":"4781","RawContent":null,"Title":"TextNormalizing export to Onnx ","State":"open","Body":"- can, at the moment, only handle case changing options\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4781","RelatedDescription":"Open PR \"TextNormalizing export to Onnx \" (#4781)"},{"Id":"559978194","IsPullRequest":true,"CreatedAt":"2020-02-04T21:05:10","Actor":"sharwell","Number":"4780","RawContent":null,"Title":"Enable cnr test","State":"open","Body":"This is a test to demonstrate correct baselines in #4569 ","Url":"https://github.com/dotnet/machinelearning/pull/4780","RelatedDescription":"Open PR \"Enable cnr test\" (#4780)"},{"Id":"559928923","IsPullRequest":true,"CreatedAt":"2020-02-04T20:07:03","Actor":"sharwell","Number":"4779","RawContent":null,"Title":"Fix incorrect SynchronizationContext use in TestSweeper","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4779","RelatedDescription":"Closed or merged PR \"Fix incorrect SynchronizationContext use in TestSweeper\" (#4779)"},{"Id":"559391287","IsPullRequest":true,"CreatedAt":"2020-02-04T19:04:47","Actor":"LittleLittleCloud","Number":"4774","RawContent":null,"Title":"fix recommendation Bug","State":"closed","Body":"add code for handle enum case in CodeGen","Url":"https://github.com/dotnet/machinelearning/pull/4774","RelatedDescription":"Closed or merged PR \"fix recommendation Bug\" (#4774)"},{"Id":"559827625","IsPullRequest":false,"CreatedAt":"2020-02-04T16:19:13","Actor":"gartangh","Number":"4778","RawContent":null,"Title":"Re-training an ImageClassificationTrainer","State":"open","Body":"### System information\r\n\r\n- **OS version**: Windows 10 Pro 18363\r\n- **.NET Version**: Core 2.1\r\n- **Platform**: x64\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI started working from [this example](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.visioncatalog.imageclassification?view=ml-dotnet#Microsoft_ML_VisionCatalog_ImageClassification_Microsoft_ML_MulticlassClassificationCatalog_MulticlassClassificationTrainers_Microsoft_ML_Vision_ImageClassificationTrainer_Options_), to perform multiclass classification using transfer learning.\r\nTraining, saving, loading, and consuming the model works as intended.\r\nNow I am trying to train further on that trained model (re-training), using these 2 steps:\r\n  * [Extract pre-trained model parameters](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net#re-train-model)\r\n  * [Re-train model](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net#re-train-model)\r\n\r\n  Similar to those steps, I came up with this piece of code:\r\n\r\n```csharp\r\n // Extract trained model parameters\r\nImageClassificationModelParameters originalParameters = ((ISingleFeaturePredictionTransformer<object>)trainedModel).Model as ImageClassificationModelParameters;\r\n// Re-train model.\r\nMulticlassPredictionTransformer<ImageClassificationModelParameters> trainedModelFurther = mlContext.MulticlassClassification.Trainers.ImageClassification().Fit(trainImages, originalParameters);\r\n```\r\n\r\n- **What happened?**\r\nAt the end of the last line, the method `Fit(IDataView, ImageClassificationModelParameters)` does not exist ([docs](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.vision.imageclassificationtrainer?view=ml-dotnet#methods)).\r\n\r\n- **What did you expect?**\r\n  * First of all, I expected a similar method as `Fit(IDataView, LinearModelParameters)` in `OnlineGradientDescentTrainer` ([docs](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.onlinelineartrainer-2.fit?view=ml-dotnet#Microsoft_ML_Trainers_OnlineLinearTrainer_2_Fit_Microsoft_ML_IDataView_Microsoft_ML_Trainers_LinearModelParameters_)), `Fit(IDataView, MaximumEntropyModelParameters)` in `LbfgsMaximumEntropyMulticlassTrainer` ([docs](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.lbfgsmaximumentropymulticlasstrainer.fit?view=ml-dotnet#Microsoft_ML_Trainers_LbfgsMaximumEntropyMulticlassTrainer_Fit_Microsoft_ML_IDataView_Microsoft_ML_Trainers_MaximumEntropyModelParameters_)), or other trainers to exist.\r\nI believe the `ImageClassificationTrainer` makes use of an `LbfgsMaximumEntropyMulticlassTrainer` behind the scenes, to classify the extracted features from the images.\r\n\r\n  * Secondly (unrelated), the method `Fit(IDataView, IDataView)` in `ImageClassificationTrainer` seems unnecessary, as you can already specify the validation set (or a fraction of the training set to use for validation) in `ImageClassificationTrainer.Options`.\r\n\r\n### Question\r\n\r\nIs it possible to re-train this model on new data, maybe using some extra steps to convert the `ImageClassificationTrainer` to an `LbfgsMaximumEntropyMulticlassTrainer`? If not, when is this functionality expected?","Url":"https://github.com/dotnet/machinelearning/issues/4778","RelatedDescription":"Open issue \"Re-training an ImageClassificationTrainer\" (#4778)"},{"Id":"559700004","IsPullRequest":false,"CreatedAt":"2020-02-04T12:52:23","Actor":"Vijay27anand","Number":"4777","RawContent":null,"Title":"How to determine optimal number of clusters with K-Mean","State":"open","Body":"### System information\r\n\r\nML.NET 1.4.0\r\n\r\n### Issue\r\n\r\nI need to know how to find optimal number of clusters for K-Mean for the dataset, there are some methods that can be used like Silhouette Method or Gap analysis or Elbow methods. Does ML.NET have any API that i can use for identifying optimal K for the dataset or any way i can find.  Attaching my dataset also. It will be very helpful for my use case.\r\n\r\n[InputforClustering.xlsx](https://github.com/dotnet/machinelearning/files/4153355/InputforClustering.xlsx)\r\n\r\n\r\n### Source code / logs\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4777","RelatedDescription":"Open issue \"How to determine optimal number of clusters with K-Mean\" (#4777)"},{"Id":"559501086","IsPullRequest":true,"CreatedAt":"2020-02-04T05:44:10","Actor":"frank-dong-ms","Number":"4776","RawContent":null,"Title":"build and test failure due to download resource fail","State":"open","Body":"facing build and test failure due to download resource fail:\r\nhttps://microsoft.sharepoint.com/teams/ML.NET/_layouts/OneNote.aspx?id=%2Fteams%2FML.NET%2FSiteAssets%2FML.NET%20Notebook&wd=target%28Tests.one%7C5E713C2E-6DCF-4AA3-9071-69CBBAF48985%2FTest%20Network%20Issue%7CDBE36B97-0518-43C2-8C3F-A7D2A461FBDE%2F%29\r\n\r\n\r\nthis fix including:\r\n1. add retry and delay for resource downloading when run test\r\n2. disable parallel when restore nuget package, this can prevent restore consume too much connections from vm and cause the following download to hanging, restore itself has retry already\r\n3. add retry for download resource from Internet when build, if disable parallel when restore can prevent the network glitch this can possibility be unnecessary\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4776","RelatedDescription":"Open PR \"build and test failure due to download resource fail\" (#4776)"},{"Id":"559437530","IsPullRequest":true,"CreatedAt":"2020-02-04T01:47:08","Actor":"najeeb-kazmi","Number":"4775","RawContent":null,"Title":"Add Seed property to MLContext and use as default for data splits","State":"open","Body":"Fixes #4752 \r\n\r\nAddresses leftover feedback from #4764 ","Url":"https://github.com/dotnet/machinelearning/pull/4775","RelatedDescription":"Open PR \"Add Seed property to MLContext and use as default for data splits\" (#4775)"},{"Id":"559379667","IsPullRequest":false,"CreatedAt":"2020-02-03T22:44:04","Actor":"frank-dong-ms","Number":"4773","RawContent":null,"Title":"async code will cause dead lock with xunit","State":"open","Body":"https://github.com/xunit/xunit/issues/864\r\nhttps://github.com/xunit/xunit/issues/1935\r\n\r\nCalling .Wait() causes deadlocks.\r\nCalling .Result causes deadlocks.\r\nCalling .GetAwaiter().GetResult() causes deadlocks.\r\n\r\nwe need to fix the way we use in async to prevent dead lock with xunit","Url":"https://github.com/dotnet/machinelearning/issues/4773","RelatedDescription":"Open issue \"async code will cause dead lock with xunit\" (#4773)"},{"Id":"559348320","IsPullRequest":true,"CreatedAt":"2020-02-03T22:33:07","Actor":"frank-dong-ms","Number":"4770","RawContent":null,"Title":"try enable test parallel between assembly","State":"closed","Body":"RT.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4770","RelatedDescription":"Closed or merged PR \"try enable test parallel between assembly\" (#4770)"},{"Id":"559368196","IsPullRequest":true,"CreatedAt":"2020-02-03T22:17:50","Actor":"frank-dong-ms","Number":"4772","RawContent":null,"Title":"trouble shoot issue","State":"open","Body":"trouble shoot SdcaTrainerBase related issue, take memory dump at failure point:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=505404&view=logs&j=41509eb4-74ce-5e57-61b4-bdf74b39e7c1&t=dbdc2969-5b98-5c39-1328-31d4a2fdc45e","Url":"https://github.com/dotnet/machinelearning/pull/4772","RelatedDescription":"Open PR \"trouble shoot issue\" (#4772)"},{"Id":"559351636","IsPullRequest":true,"CreatedAt":"2020-02-03T21:41:23","Actor":"frank-dong-ms","Number":"4771","RawContent":null,"Title":"set max thread to unlimited to avoid dead lock","State":"open","Body":"Related to: https://github.com/dotnet/machinelearning/issues/4773: \r\nSet max threads to unlimited is mitigation for dead lock issue in xunit tests, we should change the way we are using async code to prevent dead lock in future.\r\n\r\nCollection of test hanging are collected at: https://microsoft.sharepoint.com/teams/ML.NET/_layouts/OneNote.aspx?id=%2Fteams%2FML.NET%2FSiteAssets%2FML.NET%20Notebook&wd=target%28Tests.one%7C5E713C2E-6DCF-4AA3-9071-69CBBAF48985%2FLong%20running%20tests%7C54A981BE-BFF2-4188-9520-7DE3E2DF0EDF%2F%29\r\nonenote:https://microsoft.sharepoint.com/teams/ML.NET/SiteAssets/ML.NET%20Notebook/Tests.one#Long%20running%20tests&section-id={5E713C2E-6DCF-4AA3-9071-69CBBAF48985}&page-id={54A981BE-BFF2-4188-9520-7DE3E2DF0EDF}&end \r\n\r\nRunned 7 builds, no test hanging found.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4771","RelatedDescription":"Open PR \"set max thread to unlimited to avoid dead lock\" (#4771)"},{"Id":"558886255","IsPullRequest":false,"CreatedAt":"2020-02-03T19:36:05","Actor":"Vijay27anand","Number":"4768","RawContent":null,"Title":"KMean clustering ML.Net vs scikit-learn (Python)","State":"closed","Body":"### System information\r\n\r\nML.NET version is 1.4.0\r\n[PresentationMatrix.xlsx](https://github.com/dotnet/machinelearning/files/4146625/PresentationMatrix.xlsx)\r\n\r\n\r\n\r\n### Issue\r\n\r\nWe try to do KMean clustering for the attached data (PresentationMatrix.csv) while doing so seeing a difference in behavior between ML.Net and scikit-learn (Python).  With ML.net i am keep getting error \"Failed to initialize clusters: too few examples\", when i try number of clusters as 60 or above, sometimes even with lesser number of clusters, where as with Scikit-learn able to proceed with out any error for more than 60 Clusters.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4768","RelatedDescription":"Closed issue \"KMean clustering ML.Net vs scikit-learn (Python)\" (#4768)"},{"Id":"558998101","IsPullRequest":false,"CreatedAt":"2020-02-03T18:21:15","Actor":"hectorcubillos","Number":"4769","RawContent":null,"Title":"Issue on MacOs","State":"closed","Body":"There's an issue on MacOs while trying to replicate the example.\n\nException has occurred: CLR/System.DllNotFoundException\nAn unhandled exception of type 'System.DllNotFoundException' occurred in Microsoft.ML.TimeSeries.dll: 'Unable to load shared library 'MklImports' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libMklImports, 1): image not found'\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: be5ae8c9-5caa-4f64-8587-d8f8910ce911\n* Version Independent ID: 0810e529-6f15-d64d-94a3-7e93c1b67daa\n* Content: [TimeSeriesCatalog.ForecastBySsa(ForecastingCatalog, String, String, Int32, Int32, Int32, Int32, Boolean, Single, RankSelectionMethod, Nullable&lt;Int32&gt;, Nullable&lt;Int32&gt;, Boolean, Boolean, Nullable&lt;GrowthRatio&gt;, String, String, Single, Boolean) Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.timeseriescatalog.forecastbyssa?view=ml-dotnet#feedback)\n* Content Source: [dotnet/xml/Microsoft.ML/TimeSeriesCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TimeSeriesCatalog.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4769","RelatedDescription":"Closed issue \"Issue on MacOs\" (#4769)"},{"Id":"558430966","IsPullRequest":true,"CreatedAt":"2020-02-03T18:02:27","Actor":"frank-dong-ms","Number":"4761","RawContent":null,"Title":"add read share to all file read operation","State":"closed","Body":"address file lock issue in test like below:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=501414&view=logs&j=11c3dbcc-a5f4-5edd-335b-a8af5aa47d46&t=42ea9add-ee54-581f-d033-310ec15a7ff0\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=502370&view=logs&j=11c3dbcc-a5f4-5edd-335b-a8af5aa47d46&t=42ea9add-ee54-581f-d033-310ec15a7ff0\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=503598&view=logs&j=9dffbc46-9322-5a58-fb37-6d66c044e90d&t=11098bf6-eb78-583b-8eab-f14f48444a6b\r\n\r\nallow other reader to read file when file is opened by file stream only for read\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4761","RelatedDescription":"Closed or merged PR \"add read share to all file read operation\" (#4761)"},{"Id":"558815683","IsPullRequest":false,"CreatedAt":"2020-02-03T03:16:35","Actor":"actopozipc","Number":"4767","RawContent":null,"Title":"SDCA seems to contain a livelock","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 4.6.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** I tried to call the SDCA method and fit the model.\r\n- **What happened?**  When I call the SDCA method in the pipeline, the code wont get past the Fit method. Noticeable is the fact that the CPU percentage wont go down, so its still calculating\r\n\r\nHowever there is no exception. The program just freezes\r\n\r\n### Source code / logs\r\n![grafik](https://user-images.githubusercontent.com/48481041/73623012-b14f4b00-463b-11ea-9531-7d7390a4980f.png)\r\n\r\nCPU usage:\r\n![grafik](https://user-images.githubusercontent.com/48481041/73623037-cd52ec80-463b-11ea-9ed8-3f6a0122564d.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4767","RelatedDescription":"Open issue \"SDCA seems to contain a livelock\" (#4767)"},{"Id":"558652933","IsPullRequest":true,"CreatedAt":"2020-02-02T06:52:21","Actor":"harishsk","Number":"4766","RawContent":null,"Title":"Branch to test current state of outer loop builds","State":"open","Body":"This is a test branch to test the current state of builds when all test run including the disabled test.","Url":"https://github.com/dotnet/machinelearning/pull/4766","RelatedDescription":"Open PR \"Branch to test current state of outer loop builds\" (#4766)"},{"Id":"558456511","IsPullRequest":true,"CreatedAt":"2020-02-02T06:46:06","Actor":"najeeb-kazmi","Number":"4764","RawContent":null,"Title":"Data splits to default to MLContext seed when not specified","State":"closed","Body":"Fixes #4752 ","Url":"https://github.com/dotnet/machinelearning/pull/4764","RelatedDescription":"Closed or merged PR \"Data splits to default to MLContext seed when not specified\" (#4764)"},{"Id":"558335123","IsPullRequest":true,"CreatedAt":"2020-02-01T21:43:37","Actor":"sharwell","Number":"4754","RawContent":null,"Title":"Remove incorrectly-coded finalizer in DnnRetrainTransformer","State":"closed","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4754","RelatedDescription":"Closed or merged PR \"Remove incorrectly-coded finalizer in DnnRetrainTransformer\" (#4754)"},{"Id":"558602279","IsPullRequest":true,"CreatedAt":"2020-02-01T21:42:18","Actor":"sharwell","Number":"4765","RawContent":null,"Title":"Enable MSML_SingleVariableDeclaration for the full solution","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4765","RelatedDescription":"Open PR \"Enable MSML_SingleVariableDeclaration for the full solution\" (#4765)"},{"Id":"558434003","IsPullRequest":true,"CreatedAt":"2020-02-01T21:40:53","Actor":"sharwell","Number":"4762","RawContent":null,"Title":"Enable MSML_TypeParamName for the full solution","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4762","RelatedDescription":"Closed or merged PR \"Enable MSML_TypeParamName for the full solution\" (#4762)"},{"Id":"558388405","IsPullRequest":true,"CreatedAt":"2020-02-01T19:09:53","Actor":"frank-dong-ms","Number":"4759","RawContent":null,"Title":"enlarge cancelTimeout from 5 minutes to 10 minute","State":"closed","Body":"RT.\r\n\r\nSeeing this build: https://dev.azure.com/dnceng/public/_build/results?buildId=503424&view=logs&j=11c3dbcc-a5f4-5edd-335b-a8af5aa47d46\r\n\r\nTest run times out and artifact is not uploaded as cancel timeout exceeds with below message:\r\n##[warning]Agent NetCorePublic-Pool 114 did not respond to a cancelation request with 00:05:00\r\n\r\nset this cancel time to 10 minutes to ensure we upload artifact for investigation\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4759","RelatedDescription":"Closed or merged PR \"enlarge cancelTimeout from 5 minutes to 10 minute\" (#4759)"},{"Id":"558444240","IsPullRequest":true,"CreatedAt":"2020-02-01T19:02:27","Actor":"Lynx1820","Number":"4763","RawContent":null,"Title":"Fix for ColumnSelecting issue","State":"closed","Body":"There was an issue found when there's a transform prior to ColumnSelect that gets rid of the selected input variables in the ONNX graph. \r\n\r\nI modified the existing test to demonstrate this issue.\r\n\r\nA (possibly temporary) fix is to not remove any of the input variables from the ONNX graph. \r\n   \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4763","RelatedDescription":"Closed or merged PR \"Fix for ColumnSelecting issue\" (#4763)"},{"Id":"558404588","IsPullRequest":false,"CreatedAt":"2020-02-01T00:11:44","Actor":"najeeb-kazmi","Number":"4760","RawContent":null,"Title":"Set seed in PredictorTests","State":"closed","Body":"All the tests in [TestPredictors.cs](https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs) call some combination of `RunAllTests`, `RunOneAllTests`, `Run_TrainTest`, and `Run_CV`.\r\nhttps://github.com/dotnet/machinelearning/blob/76777592cf7e094f5361285bc64111d09d5bdb7c/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs#L95\r\nwhere `ctx.ExtraArgs` is used to add additional arguments when building the `maml` command to be run\r\nhttps://github.com/dotnet/machinelearning/blob/76777592cf7e094f5361285bc64111d09d5bdb7c/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs#L143-L147\r\n\r\nThis can be used to set the seed for `maml`. All calls to `Run*` in `TestPredictiors.cs` should pass `extraSettings: new[] { \"seed=1\" }` to set the seed.\r\n\r\ncc: @harishsk  ","Url":"https://github.com/dotnet/machinelearning/issues/4760","RelatedDescription":"Closed issue \"Set seed in PredictorTests\" (#4760)"},{"Id":"558341394","IsPullRequest":true,"CreatedAt":"2020-01-31T22:10:48","Actor":"harishsk","Number":"4758","RawContent":null,"Title":"Updating onnx baseline files for regression tests","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4758","RelatedDescription":"Closed or merged PR \"Updating onnx baseline files for regression tests\" (#4758)"},{"Id":"558337211","IsPullRequest":true,"CreatedAt":"2020-01-31T19:48:34","Actor":"sharwell","Number":"4757","RawContent":null,"Title":"Disable test parallelization in TimeSeries tests","State":"open","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4757","RelatedDescription":"Open PR \"Disable test parallelization in TimeSeries tests\" (#4757)"},{"Id":"558336853","IsPullRequest":true,"CreatedAt":"2020-01-31T19:47:49","Actor":"sharwell","Number":"4756","RawContent":null,"Title":"Update test baseline for TimeSeries tests","State":"open","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4756","RelatedDescription":"Open PR \"Update test baseline for TimeSeries tests\" (#4756)"},{"Id":"558336729","IsPullRequest":true,"CreatedAt":"2020-01-31T19:47:35","Actor":"sharwell","Number":"4755","RawContent":null,"Title":"Check exception status even if TF_SessionRun throws an exception","State":"open","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4755","RelatedDescription":"Open PR \"Check exception status even if TF_SessionRun throws an exception\" (#4755)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-05T05:30:40.0809975Z","RunDurationInMilliseconds":743}