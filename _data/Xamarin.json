{"Data":{"Blog":{"FeedItems":[{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null},{"Title":"Use CoreML And Azure To Create Simple Xamarin.iOS Apps","PublishedOn":"2018-02-20T19:36:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year Apple released a device-optimized machine learning framework called Core ML to make it as easy as possible to integrate machine learning and artificial intelligence services into your iOS...","Href":"https://blog.xamarin.com/coreml-azure-create-simple-xamarin-ios-apps/","RawContent":null},{"Title":"Extend Xamarin.Forms Controls Functionality with Behaviors","PublishedOn":"2018-02-16T18:48:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms provides a way to build 100% native, cross-platform applications with both a shared logic layer and a shared user-interface layer. Built-in Xamarin.Forms controls also provide a ton of...","Href":"https://blog.xamarin.com/extend-xamarin-forms-controls-functionality-with-behaviors/","RawContent":null},{"Title":"Xamarin.iOS and Xcode 9.3 Web Preview","PublishedOn":"2018-02-15T20:36:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The next release of Xcode, version 9.3,Â is currently in beta. Development of Xamarin.iOS to support the new Xcode 9.3 version is in-progress and available now as a web preview. Participating in...","Href":"https://blog.xamarin.com/xcode-9-3-web-preview-high-sierra-required/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7353912147","Type":"PullRequestEvent","CreatedAt":"2018-03-09T03:24:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1387","RelatedDescription":"Opened pull request \"[create-vsix] Don't package xabuild.exe symlinks\" (#1387) at xamarin/xamarin-android","RelatedBody":"`xabuild.exe` execution involves the creation of symbolic links within\r\n`bin/$(Configuration)/lib/xamarin.android/xbuild-frameworks`, pointing\r\ninto the `.NETFramework` and `.NETPortable` directories.\r\n\r\n`build-tools/create-vsix` doesn't know anything about these symbolic\r\nlinks, and *follows* them.\r\n\r\nThe result is that *if* you build with `xabuild.exe` then create a\r\n`.vsix`, the resulting file will contain lots of \"garbage\":\r\n\r\n\t$ make prepare all all-tests MSBUILD=msbuild\r\n\t# `make all-tests` executes `xabuild.exe`\r\n\t$ make create-vsix CONFIGURATIONS=Debug\r\n\t$ unzip -l Xamarin.Android.Sdk-OSS*.vsix\r\n\t...\r\n\t      135  03-08-2018 21:40   $ReferenceAssemblies/Microsoft/Framework/.NETFramework/v2.0/RedistList/FrameworkList.xml\r\n\t...\r\n\t    22640  03-08-2018 21:40   $ReferenceAssemblies/Microsoft/Framework/.NETPortable/v4.0/Microsoft.CSharp.dll\r\n\t...\r\n\r\nAll told, an extra *1041* files are included in the `.vsix` because of\r\nthe `.NETFramework` and `.NETPortable` symbolic links.\r\n\r\nFix this by introducing \"communication\" between `xabuild.exe` and\r\n`create-vsix.targets`:\r\n\r\n 1. When `xabuild.exe` creates a symbolic link, add the name of the\r\n    symbolic link into\r\n    `bin/$(Configuration)/lib/xamarin.android/xbuild-frameworks/.__sys_links.txt`.\r\n\r\n 2. Update the `AddContent` target within `create-vsix.targets` to\r\n    read the contents of `.__sys_links.txt`, and exclude each\r\n    directory found within it.\r\n\r\nThis prevents the `.NETFramework` and `.NETPortable` symlinks from\r\nbeing followed by the `.vsix` creator, allowing the `.vsix` contents\r\nto be at least marginally saner."},{"Id":"7353665539","Type":"PullRequestEvent","CreatedAt":"2018-03-09T01:58:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1386","RelatedDescription":"Opened pull request \"[tests] Check for \" failed \" emulator message\" (#1386) at xamarin/xamarin-android","RelatedBody":"The Jenkins emulator-based tests are [hanging][0] -- again (see also\r\n3294a50e) -- this time with new messages to `stderr`:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/903/console\r\n\r\n\t_RegisterApplication(), FAILED TO establish the default connection to the WindowServer, _CGSDefaultConnection() is NULL.\r\n\t_RegisterApplication(), FAILED TO establish the default connection to the WindowServer, _CGSDefaultConnection() is NULL.\r\n\t2018-03-08 11:26:32.097 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\tPasteBoard: Error creating pasteboard: com.apple.pasteboard.clipboard [-4960]\r\n\t2018-03-08 11:26:32.097 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\tPasteBoard: Error creating pasteboard: com.apple.pasteboard.find [-4960]\r\n\t2018-03-08 11:26:32.100 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\t2018-03-08 11:26:32.101 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\t2018-03-08 11:26:32.101 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\t2018-03-08 11:26:32.102 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\r\n*Something* is horrifically wrong -- not sure what, currently -- which\r\nis causing the emulator launch to fail. However, we're not detecting\r\nit, so we later wait around ~forever until the build times out.\r\n\r\nCheck for the string ` failed ` from `stderr`, and if we see it, flag\r\nan error on emulator launch."},{"Id":"7352599202","Type":"PullRequestEvent","CreatedAt":"2018-03-08T21:10:21","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1385","RelatedDescription":"Opened pull request \"[build-tools] Process performance data from logcat\" (#1385) at xamarin/xamarin-android","RelatedBody":"Adds timing.csproj and improves ProcessLogcatTiming task to ease\r\ngetting performance data of a XA app running on the emulator.\r\n\r\nAn example use:\r\n\r\n```\r\nmsbuild /v:d build-tools/timing/timing.csproj /t:LogcatTiming /p:PID=7085\r\n```\r\n\r\nBTW, make sure the timing logging is enabled, before running the\r\napp. It can be enabled by running:\r\n```\r\nadb shell setprop debug.mono.log timing\r\n```"},{"Id":"7352566128","Type":"PullRequestEvent","CreatedAt":"2018-03-08T21:03:17","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1384","RelatedDescription":"Opened pull request \"Fix build\" (#1384) at xamarin/xamarin-android","RelatedBody":"The test didn't use the correct `UpdateXmlResource` overload. This commit makes\r\nthe build work."},{"Id":"7352371710","Type":"PullRequestEvent","CreatedAt":"2018-03-08T20:21:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1329","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Added support for missing resource types\" (#1329) at xamarin/xamarin-android","RelatedBody":"Fixes #1262\r\n\r\nThe initial version of the ManagedResourceParser was missing\r\nsome types. Specifically `Menu`, `Animator`, `Plurals`,\r\n`Mipmap` and `Font`. This commit adds support for those\r\nmissing types. It also adds a Task unit test for the Parser\r\nso ensure that the types are added."},{"Id":"7352371700","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:21:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1262","RelatedDescription":"Closed issue \"Managed Resource Parser is not aware of some Resource types, and fails to provide intellisense for them.\" (#1262) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Rebuild project.\r\n2. Right click on project -> Unload project. \r\n3.  Right click on project -> Reload project.\r\n4. Navigate to class that contain Resource.Plurals or Resource.String etc.\r\n\r\n![image](https://user-images.githubusercontent.com/5435980/35672745-23b7c40e-0748-11e8-9a70-c508c90b13e4.png)\r\n\r\n### Expected Behavior\r\nResource object should be available via Intellisense.\r\n\r\n### Actual Behavior\r\nResource object is not availabe via Intellisense.\r\n\r\n### Version Information\r\n15.6.0 Preview 3.0\r\n[VS_info.txt](https://github.com/xamarin/xamarin-android/files/1685028/VS_info.txt)\r\n\r\n### Comment\r\nDuring sample porting all resources where available except Plurals. After that I decided to Rebuild -> Unload -> Reload project.\r\nI think it's related to Design Time builds. Strange that another resources like String and Id where available. They all lying on the same level.\r\n![image](https://user-images.githubusercontent.com/5435980/35672917-a49b313c-0748-11e8-92a9-5d99ef0027ef.png)"},{"Id":"7352206604","Type":"IssuesEvent","CreatedAt":"2018-03-08T19:47:45","Actor":"rihadavid","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1383","RelatedDescription":"Opened issue \"Cannot deploy if Java 9 installed together with Java 8\" (#1383) at xamarin/xamarin-android","RelatedBody":"Just a quick bug report. I updated to latest VS, 15.6.1, and my Android project just could not be deployed on any device, getting all kinds of errors, like ``Failure [INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION]`` or ``Android/sdk/tools/lib is not supported. Use -classpath instead.`` or ``Error: Could not create the Java Virtual Machine.`` or ``device does not exist or its version is less than project minimum API version 15``\r\n\r\nSolved by **uninstalling** Java 9 and also the 1.9 JDK, keeping only 8 and 1.8 and updating the Java 8 to latest version.\r\n\r\nIf you want to reproduce, try installing Java 9.\r\n\r\nNOTE: I did not try to use the 9/1.9 explicitly, just the fact that it was installed together with 8/1.8 caused the problems."},{"Id":"7351731793","Type":"PullRequestEvent","CreatedAt":"2018-03-08T18:11:48","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1382","RelatedDescription":"Opened pull request \"Bump mono to get fix for mono/mono#7472.\" (#1382) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/mono/mono/issues/7472.\r\n\r\nCommit list for mono/mono:\r\n\r\n* mono/mono@145ca6391f8 [d15-6-2017-10] Only null check target for delegate if method is not static. (#7477)\r\n* mono/mono@835a98d8559 Bump bockbuild to get curl error changes\r\n* mono/mono@bbd88d02b2f Bump bockbuild for mono/bockbuild#62 (#7208)\r\n* mono/mono@1eac626536b Pass TRUE for 'repeat' of send variants. This matches behavior of receive variants. Fixes blocking send call where Win32 returns WSAEWOULDBLOCK.\r\n* mono/mono@33652b57ebb Bump bockbuild to get new gtk+ repo location\r\n* mono/mono@3f39812cb9e [2017-10] [reference-assemblies] Fix public key for some newer v4.7.1 facades (#6864)\r\n\r\nDiff: https://github.com/mono/mono/compare/da1e498884ddc56ac6ca82d3703096dc6370e1b2...145ca6391f80a71efc45530a989e33dacc9bfdf4"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7353900777","Type":"IssuesEvent","CreatedAt":"2018-03-09T03:20:31","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1919","RelatedDescription":"Closed issue \"Bindings ignore the current culture when converting between types\" (#1919) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nBindings ignore the culture set in the current thread when converting a variable to another type if needed. As a result, users with a culture with a decimal separator other than a dot (e.g. a comma) cannot type the decimal separator in an entry bound to a single or a double.\r\n\r\nThe bug is at [this line](https://github.com/xamarin/Xamarin.Forms/blob/0b2bbb03d497e77b73d4b669ee916e148e3ac8ff/Xamarin.Forms.Core/BindingExpression.cs#L422). The conversion use `CultureInfo.InvariantCulture` instead of the culture of the current thread.\r\n\r\n### Steps to Reproduce\r\n\r\nUse the repro link below or...\r\n\r\n1. Create a new Xamarin.Forms project\r\n1. Create a page (or use the one that was created) with a float property called `Example` with a backing field and implementation of INPC\r\n1. Set the BindingContext of the page to itself\r\n1. Add an entry to the page and set the text property to `{Binding Example} `\r\n1. Set the locales of your iOS app in your Info.plist to `nl_BE`\r\n\r\n```\r\n<key>CFBundleLocalizations</key>\r\n<array>\r\n<string>nl_BE</string>\r\n</array>\r\n```\r\n\r\n1. Set all the thread cultures to `nl-BE`\r\n\r\n```\r\nvar culture = new CultureInfo(\"nl-BE\");\r\nCultureInfo.CurrentCulture = culture;\r\nCultureInfo.CurrentUICulture = culture;\r\nCultureInfo.DefaultThreadCurrentCulture = culture;\r\nCultureInfo.DefaultThreadCurrentUICulture = culture;\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe user can type a number with a comma, e.g. `1,2`.\r\nBoth Android and iOS.\r\n\r\n### Actual Behavior\r\n\r\nThe comma gets removed as soon as the user types the `2`.\r\nBoth Android and iOS.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.280555\r\n- Last known good version: ???\r\n- IDE: Visual Studio for Mac 7.3.3 (build 17)\r\n- Platform Target Frameworks:\r\n  - iOS:  11.6.1.4\r\n  - Android: 8.1.5.0\r\n- Nuget Packages:\r\n- Affected Devices: all devices\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/3factr/XamarinForms-ConversionIssue\r\n\r\n### Workaround\r\n\r\nUse a custom converter to convert the string to a single/double.\r\n\r\n### IDE debug info\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 17)\r\nInstallation UUID: 75a3e4df-6d6e-4364-9dac-61e6293ef1f9\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.0.5\r\n\t1.0.4\r\n\t1.0.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\n\t1.0.3\r\n\t1.0.0-preview2-1-003177\r\n\t1.0.0-preview2-003131\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.4 (Visual Studio Enterprise)\r\nHash: db807ec9\r\nBranch: xcode9.2\r\nBuild date: 2018-01-10 16:45:48-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.5.0 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/sam/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.3 (API level 18)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.216 (Visual Studio Enterprise)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030017\r\nGit revision: 88d62dcf15156ff583f785fa668dbf2a254db12e\r\nBuild date: 2018-02-09 08:36:16-05\r\nXamarin addins: 7c8f967d67207118dd99a1d0cc9c228045b30c5f\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAndroid Signature Tool 2.1.2\r\nGist Ide Information 1.1.0\r\nMSBuild Editor 2.0.1\r\nNuGet Package Explorer 0.2\r\nNuGet Package Management Extensions 0.12.6\r\nRedth's Addins 1.0.9\r\nShow in Github 1.0.4\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n"},{"Id":"7353897474","Type":"PullRequestEvent","CreatedAt":"2018-03-09T03:19:19","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2059","RelatedDescription":"Merged pull request \"[Tizen] Refactor the GestureDetector\" (#2059) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis change provides :\r\n\r\n- a) a way for the user to inject their own dependency resolution method for gesture handlers (it comes from #1870). As a results, users can specifiy resolution method for gesture handlers on tizen backend. See also [a brief exapmle of using this with an IoC container](https://gist.github.com/rookiejava/17f8d8f92032e3c06187ecd92a9fe486)\r\n \r\n- b) fix the potential issue for the GestureDetector\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7353499011","Type":"PullRequestEvent","CreatedAt":"2018-03-09T01:02:39","Actor":"rookiejava","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2059","RelatedDescription":"Opened pull request \"[Tizen] Refactor the GestureDetector\" (#2059) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis change provides :\r\n\r\n- a) a way for the user to inject their own dependency resolution method for gesture handlers (it comes from #1870). As a results, users can specifiy resolution method for gesture handlers on tizen backend. See also [a brief exapmle of using this with an IoC container](https://gist.github.com/rookiejava/17f8d8f92032e3c06187ecd92a9fe486)\r\n \r\n- b) fix the potential issue for the GestureDetector\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7353402498","Type":"IssuesEvent","CreatedAt":"2018-03-09T00:30:46","Actor":"PandeyAlokKumar","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2058","RelatedDescription":"Opened issue \"WebView on Xamarin.Forms is not loading the files from the application local storage in UWP\" (#2058) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nHi,\r\nI am developing a application on using Xamarin.forms for the cross platforms (UWP,iOS and Android). I am able to download the file from server and able to store to local storage using PCLStorage cross platform plugin.\r\n\r\nI am trying to create a viewer using the WebVIew which will display the local storage files as per each platform support.\r\n\r\nI am using WebView to create the viewer so that this can be used on each platform. When loading the files from local storage webview is not loading the files even not showing any error in loading. I am facing this issue on the UWP platform.\r\n\r\nI am following the URL schema ms-appdata:///local/ for loading the local storage files as per\r\n\r\nE.g:_\r\nms-appdata:///local/Packages/8126d6e9-f697-4abd-924b-73a159412c15_4fh6xh3q1xw62/roaming/1-17045247-1.PDF\r\n\r\n### Steps to Reproduce\r\n\r\n1. Keep some files in your local storage inside your application package\r\n2. Load files in the WebVIew\r\n3. WebView is not showing any content\r\n\r\n### Expected Behavior\r\nNot showing the content of file.. It seems not able to load files from storage\r\n### Actual Behavior\r\nIt should show the file in the WEBVIEW"},{"Id":"7353298028","Type":"IssuesEvent","CreatedAt":"2018-03-08T23:57:29","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2051","RelatedDescription":"Closed issue \"[Android] Device.OpenUri - Android.Content.ActivityNotFoundException\" (#2051) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nUsing 'Device.OpenUri' to open the browser throws an exception if no browser exists on the phone. I tried disabling the browser on device and exception happened.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Disable/Uninstall any browser on the phone\r\n2. Launch any URI from the app\r\n3. Notice it throws an Android.Content.ActivityNotFoundException - No Activity found to handle Intent { act=android.intent.action.VIEW dat=https://www.google.com/... }\r\n\r\n### Expected Behavior\r\n\r\nThe call 'Device.OpenUri' should check if no activity was found and handle that issue, instead of crashing it.\r\n\r\n### Actual Behavior\r\n\r\nThe app crashes.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 2.5.0.122203\r\n- Platform Target Frameworks: Android\r\n  - Android: 8.0"},{"Id":"7353285283","Type":"PullRequestEvent","CreatedAt":"2018-03-08T23:53:30","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2055","RelatedDescription":"Merged pull request \"[C] do not return IsSet for BP with defaultVC\" (#2055) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nBindableProperties with a defaultValueCreator are never in the default\r\n(as defined by the defaultValue parameter) state. IsSet now reflects\r\nthat.\r\n\r\nTo allow styling properties with defaultVC, this adds a new flag in\r\nBindableContextAttributes.\r\n\r\n### Bugs Fixed ###\r\n\r\nfixes #2046 \r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7353275719","Type":"PullRequestEvent","CreatedAt":"2018-03-08T23:50:30","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1850","RelatedDescription":"Merged pull request \"[All] Bindable span\" (#1850) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis allows Text to be Bindable on a Span.\r\nIt also added the Style property to the Span, to set the Font Elements.\r\n\r\nfixes #1340\r\n\r\n### Bugs Fixed ###\r\n\r\nN/A\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n- TextColor { get; set; } // Bindable Property\r\n\r\nMarked Obsolete:\r\n- ForegroundColor { get; set; }\r\n- ForegroundColor now just updates TextColor\r\n\r\n### Behavioral Changes ###\r\n\r\nN/A\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7353275709","Type":"IssuesEvent","CreatedAt":"2018-03-08T23:50:29","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1340","RelatedDescription":"Closed issue \"[Enhancement] Bindable Span\" (#1340) at xamarin/Xamarin.Forms","RelatedBody":"## Summary ##\r\nThe Span class should have Bindable properties and the addition of a `Style` property.\r\n## API Changes ##\r\n\r\nMake [`Span`](https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Core/Span.cs) Inherit from `BindableObject` and support bindings on the properties. Also add a `Style` property so that `Spans` can be individually styled in the same way as a `Label`.\r\n\r\neg:\r\n```xml\r\n<Label>\r\n    <Label.FormattedText>\r\n        <FormattedString>\r\n            <FormattedString.Spans>\r\n                <Span Text=\"My Label\" Style=\"{StaticResource title-style}\" />\r\n                <Span Text=\"{Binding Info}\" Style=\"{StaticResource text-style}\" />\r\n                <Span Text=\"{Binding Sum}\" Style=\"{StaticResource number-style}\" />\r\n            </FormattedString.Spans>\r\n        </FormattedString>\r\n    </Label.FormattedText>\r\n</Label>\r\n```\r\n\r\n## Intended Use Case ##\r\nBindable spans make for much simpler FormattedText. This is not the first time this has been requested.  \r\nhttps://xamarin.uservoice.com/forums/258559-xamarin-forms-suggestions/suggestions/6256703-extend-span-with-bindable-text-and-tapgesture  \r\nhttps://xamarin.uservoice.com/forums/258559-xamarin-forms-suggestions/suggestions/6622199-unseal-span-or-make-it-bindable\r\n\r\nAlso nice to have the ability to nicely format labels as follows.\r\n\r\n![SPANS-FTW](http://i.imgur.com/Rf6vzhq.jpg)\r\n\r\nMigrated from [Evlolution](https://forums.xamarin.com/discussion/96456/bindable-span#latest)\r\n\r\n## Backwards Compatibility\r\n\r\nBindable span should not present any major backwards compatibility issues at first blush. Changing the base class of Span on its own should not provide any breaks provided the same interfaces remain properly implemented.\r\n\r\n## Difficulty : Easy\r\n\r\nXAML components should begin working automatically once the base class is updated."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7353196384","Type":"IssuesEvent","CreatedAt":"2018-03-08T23:26:47","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3705","RelatedDescription":"Opened issue \"[XI]mtouch and mlaunch gives two different versions\" (#3705) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Install XI 11.10.0.32 \r\n2. Run /Developer/MonoTouch/usr/bin/mtouch --version and /Developer/MonoTouch/usr/bin/mlaunch --version\r\n\r\n### Expected Behavior\r\nBoth commands should display the same versions\r\n\r\n### Actual Behavior\r\nd15-7:\r\nmtouch: mtouch 11.10.0.32 (d15-7: 4d8c4e32)\r\nmlaunch: Xamarin.Launcher 11.10.0.32 (origin/d15-7: e0a3082)\r\n\r\nd15-6:\r\nmtouch 11.8.0.20 (d15-6: 1c6f300e)\r\nXamarin.Launcher 11.8.0.20 (origin/d15-6: 6affe8d)\r\n\r\nI used mtouch in command line testing and recently changed to use mlaunch and noticed the difference.\r\n\r\n### Environment\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 4b1b3a37-7632-4b67-ab0a-8c2edb0498a3\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Thu Jun 15 17:36:27 PDT 2017\r\n    root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n\r\n"},{"Id":"7352528313","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:55:17","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3367","RelatedDescription":"Closed issue \"[macOS]Mac App failed to publish with error:\"Unsupported Architectures. Your executable contained the following disallowed architectures: '[i386 Payload/MacCoolApp.app/Contents/MonoBundle/libMonoPosixHelper.dylib)]\"\" (#3367) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open  https://github.com/olegoid/SubmissionSamples/tree/master/MacCoolApp\r\n2. Build and archive  \r\n3. Upload macapp.pkg to iTunesConnect\r\n\r\n### Expected Behavior\r\nUpload should be successful\r\n\r\n### Actual Behavior\r\nFailed with an error \"ERROR: ERROR ITMS-90240: \"Unsupported Architectures. Your executable contained the following disallowed architectures: '[i386 (in com.xamarin360.macpublishworkflow.pkg/Payload/MacCoolApp.app/Contents/MonoBundle/libMonoPosixHelper.dylib)]'. New apps submitted to the Mac App Store must support 64-bit starting January 2018, and Mac app updates and existing apps must support 64-bit starting June 2018.\"\r\n\r\n### Environment\r\nThis issue occurs with both d15-5 stable and d15-6. \r\nhttps://gist.github.com/GouriKumari/cb70a4730ba9071697a2178ba7d78bf0\r\n\r\n### Build Logs\r\nError Log: https://gist.github.com/GouriKumari/34cfbb7ca1341c2eb21f21f5f26dceae\r\nbuild Log: https://gist.github.com/GouriKumari/f15bb9c9709ca31c24afb19fb0ef5fa8\r\n\r\n### Example Project (If Possible)\r\nhttps://github.com/olegoid/SubmissionSamples/tree/master/MacCoolApp"},{"Id":"7352421589","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:32:14","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3325","RelatedDescription":"Closed issue \"mmp should warn when building 32bits macOS applications\" (#3325) at xamarin/xamarin-macios","RelatedBody":"### References\r\n\r\n* https://developer.apple.com/news/?id=01242018c\r\n* https://developer.apple.com/news/?id=01242018d\r\n\r\n### Expected Behavior\r\n\r\nA warning when building 32 bits Xamarin.Mac applications.\r\n\r\n### Actual Behavior\r\n\r\nNo warning"},{"Id":"7352003381","Type":"PullRequestEvent","CreatedAt":"2018-03-08T19:07:22","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3704","RelatedDescription":"Opened pull request \"Bump XI to 11.8.1 (and XM to 4.2.1)\" (#3704) at xamarin/xamarin-macios","RelatedBody":"This pull request proposes to update the revision number in preparation for the next servicing release from the `d15-6` branch.\r\n\r\nIt would also be OK to skip directly to 11.8.2 and 4.2.2 instead to align more closely with the Visual Studio 2017 version numbering (Visual Studio 2017 version 15.6.1 has just been released today), but staying in-sync with those Visual Studio revision numbers can be tricky due to narrow timing. So for the sake of simplicity, I think it would be fine just to increment the revision number in xamarin-macios by 1 after each published Xamarin.iOS + Xamarin.Mac release from the `d15-6` branch.\r\n\r\nOr it's also fine not to worry about updating the revision number at all. In that case, feel free to close the pull request. Thanks!"},{"Id":"7351984363","Type":"PullRequestEvent","CreatedAt":"2018-03-08T19:03:28","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3703","RelatedDescription":"Opened pull request \"[Backport xcode9.3][monotouch-test] Stop MidiThruConnectionTests.FindTest from randomly failing \" (#3703) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7351980201","Type":"PullRequestEvent","CreatedAt":"2018-03-08T19:02:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3702","RelatedDescription":"Opened pull request \"[Backport 15-7][monotouch-test] Stop MidiThruConnectionTests.FindTest from randomly failing \" (#3702) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7351923896","Type":"PullRequestEvent","CreatedAt":"2018-03-08T18:51:22","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3700","RelatedDescription":"Merged pull request \"[monotouch-test] Enhance MidiThruConnectionTests.FindTest from #3696 comments\" (#3700) at xamarin/xamarin-macios","RelatedBody":"https://github.com/xamarin/xamarin-macios/pull/3696#pullrequestreview-102346431"},{"Id":"7351731169","Type":"PullRequestEvent","CreatedAt":"2018-03-08T18:11:40","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3701","RelatedDescription":"Opened pull request \"Bump mono to get fix for mono/mono#7472.\" (#3701) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/mono/mono/issues/7472.\r\n\r\nCommit list for mono/mono:\r\n\r\n* mono/mono@145ca6391f8 [d15-6-2017-10] Only null check target for delegate if method is not static. (#7477)\r\n* mono/mono@835a98d8559 Bump bockbuild to get curl error changes\r\n* mono/mono@bbd88d02b2f Bump bockbuild for mono/bockbuild#62 (#7208)\r\n* mono/mono@1eac626536b Pass TRUE for 'repeat' of send variants. This matches behavior of receive variants. Fixes blocking send call where Win32 returns WSAEWOULDBLOCK.\r\n* mono/mono@33652b57ebb Bump bockbuild to get new gtk+ repo location\r\n* mono/mono@3f39812cb9e [2017-10] [reference-assemblies] Fix public key for some newer v4.7.1 facades (#6864)\r\n\r\nDiff: https://github.com/mono/mono/compare/da1e498884ddc56ac6ca82d3703096dc6370e1b2...145ca6391f80a71efc45530a989e33dacc9bfdf4"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"971835801377091585","CreatedAt":"2018-03-08T19:51:25+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Macâno code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/FGappPLbxT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":20,"RawContent":null},{"Id":"971796730722377729","CreatedAt":"2018-03-08T17:16:10+00:00","UserScreenname":"xamarinhq","Text":"An introduction to #tvOS with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/Qafo4W8L3m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"971430573867720704","CreatedAt":"2018-03-07T17:01:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to turn on automatic signing that allows #VS4Mac to take care of generating and using the required signinâ¦ https://t.co/snE707bjji","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":9,"RawContent":null},{"Id":"971119957894418433","CreatedAt":"2018-03-06T20:26:55+00:00","UserScreenname":"xamarinhq","Text":"#VS2017 version 15.6 is now available! Get all the details on this exciting release: https://t.co/QIxlfX9I7F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":35,"RawContent":null},{"Id":"971068644288540672","CreatedAt":"2018-03-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/b0oYm5btmK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":13,"RawContent":null},{"Id":"970709776488419328","CreatedAt":"2018-03-05T17:17:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":17,"RawContent":null},{"Id":"970456916488015873","CreatedAt":"2018-03-05T00:32:13+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/jQn1NkyLSA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":12,"RawContent":null},{"Id":"970104538375118848","CreatedAt":"2018-03-04T01:12:00+00:00","UserScreenname":"xamarinhq","Text":"Better resource organization in #XamarinForms: https://t.co/8bKeJx4e22","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":18,"RawContent":null},{"Id":"969656588805001217","CreatedAt":"2018-03-02T19:32:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this! It's your chance to ask living legend @migueldeicaza your questions in his @redditâ¦ https://t.co/6qG4JhCwia","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"969616829483311104","CreatedAt":"2018-03-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/3D8bDqoefW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":107,"FavoriteCount":32,"RawContent":null},{"Id":"969291313173745665","CreatedAt":"2018-03-01T19:20:32+00:00","UserScreenname":"xamarinhq","Text":"Amp up your skills with a #Xamarin mobile developer event near you in March: https://t.co/glgXli4KCp https://t.co/hUYXkqMYl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":14,"RawContent":null},{"Id":"969256455504318464","CreatedAt":"2018-03-01T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/MNLAkVzqaz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"968935619358527488","CreatedAt":"2018-02-28T19:47:08+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/cwathwkTEw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"968895325460103168","CreatedAt":"2018-02-28T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/YZBmRK5CcT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":11,"RawContent":null},{"Id":"968530780724088832","CreatedAt":"2018-02-27T16:58:27+00:00","UserScreenname":"xamarinhq","Text":"Our own @mayur_tendulkar shows you how to build a mobile app using #XamarinForms and the Microsoft Graph API:â¦ https://t.co/svcX6jHBJ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":17,"RawContent":null},{"Id":"968204127166754816","CreatedAt":"2018-02-26T19:20:26+00:00","UserScreenname":"xamarinhq","Text":"Get a sneak peek at our newest @XamarinU course, \"Navigation Patterns in #XamarinForms\": https://t.co/3fd0sIUJMZ https://t.co/GzDZxRtlZH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":21,"RawContent":null},{"Id":"968170803916361728","CreatedAt":"2018-02-26T17:08:02+00:00","UserScreenname":"xamarinhq","Text":"Learn how to supercharge your Xamarin.Mac app startup times: https://t.co/JzwELyF3Tm https://t.co/ABxM6v3B6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":4,"RawContent":null},{"Id":"967928201430388736","CreatedAt":"2018-02-26T01:04:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from Greg Shackles on the #VSAppCenterâ¦ https://t.co/bCckhyxtl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"967564304206745600","CreatedAt":"2018-02-25T00:58:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/6VAIpDbCD7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":45,"RawContent":null}]}},"RunOn":"2018-03-09T05:30:55.3640208Z","RunDurationInMilliseconds":5396}