{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7529990262","Type":"IssuesEvent","CreatedAt":"2018-04-14T12:03:45","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2155","RelatedDescription":"Closed issue \"isSameRoute test order\" (#2155) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/2zlyzp6mm0](https://codesandbox.io/s/2zlyzp6mm0)\r\n\r\n### Steps to reproduce\r\nin the sample just click 'launch' and then 'fail'\r\n\r\nin general\r\n\r\n1. create a route in the router with a name and a component\r\n2. pragmatically change to the component using this.$router.push({ name: xxx, params: yyy })\r\n3. put some link/button inside the component that will call this.$router.push with the same name but different params\r\n\r\n\r\n### What is expected?\r\nin the sample: the text should update\r\n\r\nin general:\r\n\r\nThe router should update this.$route.params according to the new values given, the \"completion\" callback should be called\r\n\r\n### What is actually happening?\r\nin the sample: the text is not updated\r\n\r\nin general:\r\n\r\nThe router is not loading the new params, the \"abort\" callback is called\r\n\r\n---\r\nin the isSameRoute function there a several cases\r\nwhen there is a 'path' it is tested before when there is a 'name'\r\n'path' is mandatory, we cannot create routes without path\r\nthus the \"name/params\" comparison is never triggered and vue-router considers that the page is the same and aborts the navigation\r\n\r\ninverting the order of the tests (testing for name before path) will fix this issue but I do not know enough the vue-router internals do be sure it will not break some other functionalities\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7529159319","Type":"IssuesEvent","CreatedAt":"2018-04-14T01:13:22","Actor":"hlefebvre","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2155","RelatedDescription":"Opened issue \"isSameRoute test order\" (#2155) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/2zlyzp6mm0](https://codesandbox.io/s/2zlyzp6mm0)\r\n\r\n### Steps to reproduce\r\nin the sample just click 'launch' and then 'fail'\r\n\r\nin general\r\n\r\n1. create a route in the router with a name and a component\r\n2. pragmatically change to the component using this.$router.push({ name: xxx, params: yyy })\r\n3. put some link/button inside the component that will call this.$router.push with the same name but different params\r\n\r\n\r\n### What is expected?\r\nin the sample: the text should update\r\n\r\nin general:\r\n\r\nThe router should update this.$route.params according to the new values given, the \"completion\" callback should be called\r\n\r\n### What is actually happening?\r\nin the sample: the text is not updated\r\n\r\nin general:\r\n\r\nThe router is not loading the new params, the \"abort\" callback is called\r\n\r\n---\r\nin the isSameRoute function there a several cases\r\nwhen there is a 'path' it is tested before when there is a 'name'\r\n'path' is mandatory, we cannot create routes without path\r\nthus the \"name/params\" comparison is never triggered and vue-router considers that the page is the same and aborts the navigation\r\n\r\ninverting the order of the tests (testing for name before path) will fix this issue but I do not know enough the vue-router internals do be sure it will not break some other functionalities\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7529768003","Type":"PullRequestEvent","CreatedAt":"2018-04-14T09:14:34","Actor":"fnlctrl","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/pull/1232","RelatedDescription":"Closed pull request \"test-pr\" (#1232) at vuejs/vuex","RelatedBody":"nothing, just test..."},{"Id":"7529754251","Type":"PullRequestEvent","CreatedAt":"2018-04-14T09:04:39","Actor":"muronglove","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1232","RelatedDescription":"Opened pull request \"test-pr\" (#1232) at vuejs/vuex","RelatedBody":"nothing, just test..."}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"314332244","IsPullRequest":false,"CreatedAt":"2018-04-14T14:15:15","Actor":"libin1991","Number":"8027","RawContent":null,"Title":" When did Vue3.0 put on the agenda","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8027","RelatedDescription":"Closed issue \" When did Vue3.0 put on the agenda\" (#8027)"},{"Id":"314318115","IsPullRequest":false,"CreatedAt":"2018-04-14T12:44:23","Actor":"littlegrayss","Number":"8026","RawContent":null,"Title":"v-model has a bug in ie11","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/301910/](https://jsfiddle.net/50wL7mdz/301910/)\r\n\r\n### Steps to reproduce\r\nrun it in ie11, it will have a bug, it can't show correctly.\r\n\r\n### What is expected?\r\ncan add a tips or warn or add .trim() ?\r\n\r\n### What is actually happening?\r\nBecause the text in <option></option> has a space. But in other  browser  is correct, so I think it is a bug.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8026","RelatedDescription":"Closed issue \"v-model has a bug in ie11\" (#8026)"},{"Id":"314317401","IsPullRequest":false,"CreatedAt":"2018-04-14T10:14:58","Actor":"pqvst","Number":"8025","RawContent":null,"Title":"Creating a component named map should warn the user (as with button)","State":"open","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/e2yxoomh/2/](https://jsfiddle.net/e2yxoomh/2/)\r\n\r\n### Steps to reproduce\r\nCreate a component that includes the word \"map\" (case insensitive). For example:\r\n- Map\r\n- MapView\r\n- mapper\r\n\r\n\r\n### What is expected?\r\nI expect these to work, or at least give me some sort of error message.\r\n\r\n### What is actually happening?\r\nNothing happens. The components do not render. There is no error message.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8025","RelatedDescription":"Open issue \"Creating a component named map should warn the user (as with button)\" (#8025)"},{"Id":"314292883","IsPullRequest":false,"CreatedAt":"2018-04-14T02:41:23","Actor":"412799755","Number":"8024","RawContent":null,"Title":"There is a need for number filter~","State":"closed","Body":"I have been using AngularJs for a year.Recently I found that there is no methods for me to transform  decimals to fixed number in html such as   {{     deom | number:4     }} .I have to add it in JS.Please add a number filter in vue!Thanks~","Url":"https://github.com/vuejs/vue/issues/8024","RelatedDescription":"Closed issue \"There is a need for number filter~\" (#8024)"},{"Id":"314292618","IsPullRequest":false,"CreatedAt":"2018-04-14T02:36:31","Actor":"412799755","Number":"8023","RawContent":null,"Title":"I need a numbr filter ","State":"closed","Body":"I have been using AngularJs for a year.It is not convinient for me to transform decimals to fixed numbr in vue.Can you add a number filter for html? Thank you!","Url":"https://github.com/vuejs/vue/issues/8023","RelatedDescription":"Closed issue \"I need a numbr filter \" (#8023)"},{"Id":"314259824","IsPullRequest":true,"CreatedAt":"2018-04-13T21:46:32","Actor":"yaodingyd","Number":"8022","RawContent":null,"Title":"feat: add warning in dev mode when method is not function (#…","State":"open","Body":"#8017\r\nadd warning in dev mode when method is not function \r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8022","RelatedDescription":"Open PR \"feat: add warning in dev mode when method is not function (#…\" (#8022)"},{"Id":"314258581","IsPullRequest":false,"CreatedAt":"2018-04-13T21:40:44","Actor":"hydroDude","Number":"8021","RawContent":null,"Title":"v-once for component tag doesn't work in v-for","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hL0rrbs9/6/](https://jsfiddle.net/hL0rrbs9/6/)\r\n\r\n### Steps to reproduce\r\nRun code, and watch.\r\n\r\n### What is expected?\r\n\"Yay Yay ;)\" values should not change to \"hell naw!\" in 3 seconds.\r\n\r\n### What is actually happening?\r\n\"Yay Yay ;)\" values are changing in to \"hell naw!\" in 3 seconds.\r\n\r\n---\r\n<h2>\r\n  Wait 3 seconds. Behavior is not consistent. \"component\" tag in v-for should not change. \r\n</h2>\r\n<div id=\"app\">\r\n  <component :is=\"comp\" v-once></component>\r\n  <p v-once>{{comp}}</p>\r\n  \r\n  <div v-for=\"n in items\" :key=\"n.id\">\r\n    <component :is=\"comp\" v-once></component>\r\n    <p v-once>{{comp}}</p>\r\n  </div>\r\n</div>\r\n<script>\r\nvar z = new Vue({\r\n\tel: \"#app\",\r\n  data: {\r\n  \tcomp:\t\"comp1\",\r\n    items: [{id:1}, {id:2}]\r\n  },\r\n  components: {\r\n  \t\"comp1\": {\r\n    \ttemplate: \"<p style='background:green;color:white'>yay yay ;)</p>\"\r\n    },\r\n  \t\"comp2\": {\r\n    \ttemplate: \"<p style='background:red;color:white'>hell naw!</p>\"\r\n    }\r\n  }\r\n});\r\n\r\nsetTimeout(function() {\r\n\tz.comp = \"comp2\"\r\n}, 3000);\r\n</script>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8021","RelatedDescription":"Open issue \"v-once for component tag doesn't work in v-for\" (#8021)"},{"Id":"314230413","IsPullRequest":false,"CreatedAt":"2018-04-13T20:42:35","Actor":"martin-badin","Number":"8020","RawContent":null,"Title":"Wrong style at an element","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/300834/](https://jsfiddle.net/50wL7mdz/300834/)\r\n\r\n### Steps to reproduce\r\n1. Add at some element the style as on the example { width: '203.672px' } or some other\r\n2. Inspect this element\r\n3. Chrome print this value as 203,672px with comma, not dot and as warning - see reproduction\r\n\r\n### What is expected?\r\nExpected is value with dot, not comma.\r\n\r\n### What is actually happening?\r\nThe dot is transformed at comma\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8020","RelatedDescription":"Closed issue \"Wrong style at an element\" (#8020)"},{"Id":"314211476","IsPullRequest":false,"CreatedAt":"2018-04-13T19:45:27","Actor":"jeiman","Number":"8018","RawContent":null,"Title":"v-for directive inconsistency in Local and Production environment using Chrome","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/utvmv87g/1/](https://jsfiddle.net/utvmv87g/1/)\r\n\r\n### Steps to reproduce\r\n1. Create a simple table.\r\n2. Create a http request to retrieve a collection of data. I used `superagent` to do so.\r\n3. Utilise the `v-for` directive to loop through that data on a table row.\r\n4. You should not see any data being rendered, but the request is there (Chrome Tools > Network).\r\n\r\n### What is expected?\r\n`v-for` to render the collection of data\r\n\r\n### What is actually happening?\r\nCan't seem to render a collection of data using the `v-for` directive. The collection of data is coming from a http request. It works completely fine on my local machine but not on a production environment\r\n\r\n---\r\nRan into this bug while deploying my application to a production environment. Seems to be happening on Chrome. I'm currently on the latest, 65.0.3325.181.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8018","RelatedDescription":"Closed issue \"v-for directive inconsistency in Local and Production environment using Chrome\" (#8018)"},{"Id":"314214101","IsPullRequest":true,"CreatedAt":"2018-04-13T18:51:13","Actor":"fenduru","Number":"8019","RawContent":null,"Title":"fix(slots): preserve reactivity inside of $slots, fix #7856","State":"open","Body":"Previously $slots was not reactive which caused use cases such as\r\nportal-vue to not update when the contents of the slots updated. This\r\nwas because there were no reactive properties accessed when using $slots\r\nand renders were only being triggered by calls to $forceUpdate when slot\r\ncontents changed.\r\n\r\nThis change makes $slots reactive, so updates are detected appropriately\r\nregardless of where the slot is used.\r\n\r\nfixes #7856\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [X] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [X] New/updated tests are included\r\n\r\n**Other information:**\r\n\r\nRelated to https://github.com/LinusBorg/portal-vue/issues/105\r\n","Url":"https://github.com/vuejs/vue/pull/8019","RelatedDescription":"Open PR \"fix(slots): preserve reactivity inside of $slots, fix #7856\" (#8019)"},{"Id":"314199518","IsPullRequest":false,"CreatedAt":"2018-04-13T18:01:03","Actor":"rjoo","Number":"8017","RawContent":null,"Title":"2.5.14 introduces TypeError bind is not a function","State":"open","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/bad4a8mb/1/](https://jsfiddle.net/bad4a8mb/1/)\r\n\r\n### Steps to reproduce\r\nProvide a non function to the `bind` utility method.\r\n\r\n### What is expected?\r\nIn <= 2.5.13, it rendered but failed silently: https://jsfiddle.net/ujxu9mvd/. Not sure if we'd want to keep that expectation, but existing projects will fail to render completely. A dev-mode warning at the very least will be helpful in identifying the issue.\r\n\r\n### What is actually happening?\r\nUncaught TypeError\r\n\r\n---\r\nThe refactoring of the `bind` method to use the native bind, exposes a coding error when upgrading from 2.5.13. We have a fairly large codebase and one of the developers mistakenly added an object as a component method (eg. a global Vue events instance). It made its way into production and worked fine until upgrading to 2.5.14. It took a while to find it as there was no clear indication as to where the error was happening.\r\n\r\nSome other devs experienced this as well:\r\nhttps://github.com/vuejs/vue/pull/7491\r\nhttps://github.com/vuejs/vue/commit/324672a4621a3123cac90b18d4b1818bb33dddc6\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8017","RelatedDescription":"Open issue \"2.5.14 introduces TypeError bind is not a function\" (#8017)"},{"Id":"314182866","IsPullRequest":false,"CreatedAt":"2018-04-13T17:03:27","Actor":"jbenner-radham","Number":"8016","RawContent":null,"Title":"Vue Selected Bind Does Not Work on Option Tags","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/jbenner/pen/geJqex](https://codepen.io/jbenner/pen/geJqex)\r\n\r\n### Steps to reproduce\r\n1. Instantiate a Vue instance with a `data` property named `locations` which is an array consisting of `['all', 'north', 'south', 'east', 'west']`.\r\n2. Iterate over the locations in an `option` tag like so `<option v-for=\"location in locations\" :selected=\"location === 'all'\">{{ location }}</option>`.\r\n\r\n### What is expected?\r\nThe `selected` attribute to be set on the \"all\" `option` element.\r\n\r\n### What is actually happening?\r\nThe `selected` attribute is not being set.\r\n\r\n---\r\nI've also tried the following while attempting to debug but to no avail:\r\n\r\n```\r\n<option v-for=\"(location, index) in locations\" :selected=\"index === 0\">{{ location }}</option>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8016","RelatedDescription":"Open issue \"Vue Selected Bind Does Not Work on Option Tags\" (#8016)"},{"Id":"314138916","IsPullRequest":false,"CreatedAt":"2018-04-13T14:53:12","Actor":"jimut","Number":"8015","RawContent":null,"Title":"Merge common class names of component and root element of that component","State":"open","Body":"### What problem does this feature solve?\r\nIt looks a little awkward if there are duplicate class names in a DOM element.\r\n\r\n### What does the proposed API look like?\r\nIf you look into [this fiddle](https://jsfiddle.net/zLnzuh1f/). \r\n\r\nThe `div` element of `foo` component will have two `bar` classes in it. So it looks like.\r\n\r\n```html\r\n<div class=\"bar bar\"></div>\r\n```\r\n\r\nIf the two classes would have been merged into one.\r\n\r\n```html\r\n<div class=\"bar\"></div>\r\n```\r\n\r\nIt would have worked and behaved exactly in the same way but the code will look a lot cleaner.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8015","RelatedDescription":"Open issue \"Merge common class names of component and root element of that component\" (#8015)"},{"Id":"313978533","IsPullRequest":false,"CreatedAt":"2018-04-13T10:34:11","Actor":"ddsomav8","Number":"8011","RawContent":null,"Title":"Deletion of elements using custom directives causes elements to not display properly","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/h0y03tyf/7/](https://jsfiddle.net/h0y03tyf/7/)\r\n\r\n### Steps to reproduce\r\n````\r\n// html \r\n<div id=\"app\">\r\n  <template v-if=\"isEdit\">\r\n    <button key=\"edit\" v-has=\"1\">修改</button>\r\n  </template>\r\n  <template v-else>\r\n    <!-- <button key=\"other\" v-has=\"1\">其他</button> -->\r\n    <button v-has=\"0\" key=\"add\">新增</button>\r\n    <button key=\"back\" v-has=\"1\">返回</button>\r\n  </template>\r\n</div>\r\n\r\n// js\r\ndirectives: {\r\n  has: {\r\n    inserted (el, binding) {\r\n        if (binding.value === 0) {\r\n          el.parentNode.removeChild(el)\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n  \tsetTimeout(() => {\r\n    \t   this.isEdit = !this.isEdit\r\n       }, 2000)\r\n  }    \r\n````\r\n\r\n### What is expected?\r\nNormal display after status changes\r\n\r\n### What is actually happening?\r\nCannot display normally after the status changes\r\n\r\n---\r\nWhen I cancel the above comment, the modify button can be displayed normally,\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8011","RelatedDescription":"Closed issue \"Deletion of elements using custom directives causes elements to not display properly\" (#8011)"},{"Id":"313990069","IsPullRequest":false,"CreatedAt":"2018-04-13T09:37:28","Actor":"yaquawa","Number":"8012","RawContent":null,"Title":"Component's `data` property must be function restriction","State":"closed","Body":"### What problem does this feature solve?\r\nTake off this restriction would increase the consistency.\r\n\r\nI understand that every component needs a copy of the `data` object.\r\nBut can't you just copy the `data` object under the hood? Are there any benefits by using a function instead?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nVue.component('foo', {\r\n    data: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8012","RelatedDescription":"Closed issue \"Component's `data` property must be function restriction\" (#8012)"},{"Id":"314029252","IsPullRequest":false,"CreatedAt":"2018-04-13T09:24:57","Actor":"cawa-93","Number":"8014","RawContent":null,"Title":"[Bug Report] Bug with animation","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/cawa-93/pen/XEwzQa](https://codepen.io/cawa-93/pen/XEwzQa)\r\n\r\n### Steps to reproduce\r\nCreate `<transition-group>` and `unshift` items  to it\r\n\r\n### What is expected?\r\nThe top element appears with the animation\r\n\r\n### What is actually happening?\r\nThe top element appears without animation. Instead, the bottom element reappears with the animation\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8014","RelatedDescription":"Closed issue \"[Bug Report] Bug with animation\" (#8014)"},{"Id":"314017316","IsPullRequest":false,"CreatedAt":"2018-04-13T08:37:57","Actor":"KaelWD","Number":"8013","RawContent":null,"Title":"Unable to use directives in a render function with typescript","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n```ts\r\nVue.extend({\r\n  render (h): VNode {\r\n    return h('div', {\r\n      directives: [\r\n        { name: 'a', value: 'foo' }\r\n      ]\r\n    })\r\n  }\r\n})\r\n```\r\n\r\n### Steps to reproduce\r\nPaste it into `options-test.ts` and run `yarn test:types`\r\n\r\n### What is expected?\r\nNo errors\r\n\r\n### What is actually happening?\r\n> Property 'oldValue' is missing in type '{ name: string; value: string; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8013","RelatedDescription":"Open issue \"Unable to use directives in a render function with typescript\" (#8013)"},{"Id":"313851542","IsPullRequest":false,"CreatedAt":"2018-04-12T19:09:57","Actor":"Vedadiyan","Number":"8010","RawContent":null,"Title":"Importing css always yields \"file not found\"","State":"closed","Body":"I'm trying to import `CSS` in a component inside the `style` sections and no matter what path I provide (which I have double checked and it is 100% correct), the app fails to build due to not being able to find that file. \r\n\r\nAssuming I have added `a.css` to the `assets` folder under the `src` folder which results in the following path `@/assets/a.css` or `./src/assets/a.css`, when I import the file with the following code, it always fails due to not being able to find the file. The same error happens when pointing to the `static` folder as well.\r\n\r\n    <style scoped>\r\n       @import '@/assets/a.css'\r\n    </style>\r\n\r\nHow can this be done? I need to scope `CSS` to components and reuse them. ","Url":"https://github.com/vuejs/vue/issues/8010","RelatedDescription":"Closed issue \"Importing css always yields \"file not found\"\" (#8010)"},{"Id":"313820289","IsPullRequest":false,"CreatedAt":"2018-04-12T18:55:08","Actor":"foxxyz","Number":"8009","RawContent":null,"Title":"Using v-if/v-else on two v-model'ed select elements mixing value and :value in their option sets produces incorrect option values.","State":"closed","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/eywraw8t/33427/](https://jsfiddle.net/eywraw8t/33427/)\r\n\r\n### Steps to reproduce\r\nClick the `Toggle Field` button twice.\r\n\r\n### What is expected?\r\nThe first `select` element should show with the \"Left\" value selected. Also, the current value of `bar` should remain `left`.\r\n\r\n### What is actually happening?\r\nThe first `select` element shows no selected item and the value of `bar` has changed to an empty value.\r\n\r\n---\r\nIf one looks at the values that are set when selecting a new value of `bar`, two of the three option values are now incorrectly taken from the `foo` select.\r\n\r\nThis bug seems to only happen when one `select` sets `option` values using the `value` attribute while another select sets `option` values using value binding with `:value` (or `v-bind:value`).\r\n\r\nIt also only happens if *both* `select` elements have `v-model` set.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8009","RelatedDescription":"Closed issue \"Using v-if/v-else on two v-model'ed select elements mixing value and :value in their option sets produces incorrect option values.\" (#8009)"},{"Id":"313745513","IsPullRequest":false,"CreatedAt":"2018-04-12T16:36:41","Actor":"Maaiketol","Number":"8008","RawContent":null,"Title":"Page not showing on iPad specifically","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/maaiketol/pen/PRgVpO](https://codepen.io/maaiketol/pen/PRgVpO)\r\n\r\n### Steps to reproduce\r\nYou'll have to open the link in ipad. And you'll see that it'll show: \r\n\r\n{{person.-name}}\r\n{{person.title}}\r\n\r\n\r\n\r\n### What is expected?\r\nThat the persons will show up like they do when opened in a browser .\r\n\r\n### What is actually happening?\r\nIt is not showing me the right content, but it's showing me only {{person.-name}}\r\n{{person.title}}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8008","RelatedDescription":"Closed issue \"Page not showing on iPad specifically\" (#8008)"},{"Id":"313597009","IsPullRequest":false,"CreatedAt":"2018-04-12T10:58:16","Actor":"DontShootMe","Number":"8005","RawContent":null,"Title":"Transition Filckering","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/eywraw8t/31863/](https://jsfiddle.net/eywraw8t/31863/)\r\n\r\n### Steps to reproduce\r\nCreate a transition effect on a page\r\n\r\n### What is expected?\r\na fluid transition without flickering\r\n\r\n### What is actually happening?\r\nDuring the transition, at the step where the 'Original' DOM element is removed and before the 'Replacement'  is injected there is no 'filler', so the space occuped by the 'Orignal' become empty and generate the flickering because every DOM element next the 'Original' fill this empty space, and at the moment the 'Replacement' is injected the next DOM element are pushed to their original place\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8005","RelatedDescription":"Closed issue \"Transition Filckering\" (#8005)"},{"Id":"313633728","IsPullRequest":false,"CreatedAt":"2018-04-12T10:52:51","Actor":"MosheL","Number":"8007","RawContent":null,"Title":"vue.js   android keyboard - the last typed word is missing on the model","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsbin.com/hufopezumu](https://jsbin.com/hufopezumu)\r\n\r\n### Steps to reproduce\r\nI was tried  an Android keyboard with autosuggest enabled.\r\nthe  `input`  JS event isn't fired  when  I am typing. it  fired on space, blur or a click on the suggested word.\r\n\r\n### What is expected?\r\nmodel == input.value\r\n\r\n### What is actually happening?\r\nit did not updated.\r\n\r\n---\r\nworkaround:\r\n\r\nhttps://stackoverflow.com/questions/49791906/vue-js-android-keyboard-the-last-typed-word-is-missing-on-the-model\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8007","RelatedDescription":"Closed issue \"vue.js   android keyboard - the last typed word is missing on the model\" (#8007)"},{"Id":"313594624","IsPullRequest":false,"CreatedAt":"2018-04-12T10:50:39","Actor":"zfeher","Number":"8004","RawContent":null,"Title":".sync doesn't work with kebab case update events","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/293614/](https://jsfiddle.net/50wL7mdz/293614/)\r\n\r\n### Steps to reproduce\r\nJust run the attached fiddle and click on Change Bar button.\r\n\r\n### What is expected?\r\nThe `foo` prop in root component should be updated via .sync\r\n\r\n### What is actually happening?\r\nThe `foo` prop doesn't get updated.\r\n\r\n---\r\nWe are currently migrating from Vue 1 to Vue 2 and we need to stick with using kebab case when naming component and event names. .sync seems useful and less boilerplate and I think it should work with both casing camel/kebab too. \r\n\r\nAlso I found the following in the docs at .sync Modifier: \"That’s why instead, we recommend emitting events in the pattern of update:my-prop-name. \" Which is kebab case but it doesn't work with sync.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8004","RelatedDescription":"Closed issue \".sync doesn't work with kebab case update events\" (#8004)"},{"Id":"313608187","IsPullRequest":true,"CreatedAt":"2018-04-12T07:31:11","Actor":"imyzf","Number":"8006","RawContent":null,"Title":"feat(weex): add code coverage test","State":"open","Body":"1. Add `rollup-plugin-istanbul` to instrument weex package build, this let us see the coverage of each source file rather than the built file.\r\n2. Add nyc package to call istanbul from cli.\r\n3. Add `.weex.nycrc` to config nyc for weex.\r\n4. Add npm script `test:weex:cover` to run the test.\r\n\r\nHere is the result from `coverage/lcov-report/index.html`:\r\n![image](https://user-images.githubusercontent.com/8298849/38661912-16e38fde-3e65-11e8-95ff-39ae2a567ecd.png)\r\n\r\nEmmmm... the coverage is very low now, and I'll write more test case in the next time .\r\n\r\n---\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [x] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8006","RelatedDescription":"Open PR \"feat(weex): add code coverage test\" (#8006)"},{"Id":"313263973","IsPullRequest":true,"CreatedAt":"2018-04-11T10:26:50","Actor":"KaelWD","Number":"8003","RawContent":null,"Title":"fix(types): make VNodeDirective properties optional, fix #8013","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix - fixes #8013\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nPrevents `Property 'oldValue' is missing in type '{ name: string; value: string; }'.` when using directives in a render function (see test). \r\n\r\nThere should probably actually be three different `VNodeDirective`s:\r\n - In `h('', data)` - mostly optional, not readonly\r\n - In `VNodeData` (returned from createElement) - normalised, not readonly\r\n - In `DirectiveFunction` - the current definition (before this change)","Url":"https://github.com/vuejs/vue/pull/8003","RelatedDescription":"Open PR \"fix(types): make VNodeDirective properties optional, fix #8013\" (#8003)"},{"Id":"313163820","IsPullRequest":false,"CreatedAt":"2018-04-11T08:47:49","Actor":"chnliquan","Number":"8001","RawContent":null,"Title":"touchstart event will be executed twice when use breakpoint and debugger in chrome devlop","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/chnliquan/blog/blob/master/index.html](https://github.com/chnliquan/blog/blob/master/index.html)\r\n\r\n### Steps to reproduce\r\nopen the chrome develop useing the mobile mode and click the 'touchstart' then notice the console\r\n\r\n### What is expected?\r\n‘touchstart’ should be printed once whether useing breakpoint and debugger\r\n\r\n### What is actually happening?\r\nUse breakpoints and debugg will print 'touchstart' twice and the program will stop at the second log and it will not stop for the first time\r\n\r\nonly print once when use breakpoint and debugging is not used\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8001","RelatedDescription":"Closed issue \"touchstart event will be executed twice when use breakpoint and debugger in chrome devlop\" (#8001)"},{"Id":"313215045","IsPullRequest":true,"CreatedAt":"2018-04-11T08:06:35","Actor":"levi1994","Number":"8002","RawContent":null,"Title":"remove useless code","State":"open","Body":"remove useless code","Url":"https://github.com/vuejs/vue/pull/8002","RelatedDescription":"Open PR \"remove useless code\" (#8002)"},{"Id":"313154574","IsPullRequest":false,"CreatedAt":"2018-04-11T03:19:34","Actor":"chnliquan","Number":"7999","RawContent":null,"Title":"touchstart event will be executed twice when use breakpoint and debugger  in chrome devlop","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/chnliquan/vue-music.git](https://github.com/chnliquan/vue-music.git)\r\n\r\n### Steps to reproduce\r\nnpm install\r\nnpm run dev\r\n\r\nopen the chrome develop and switch to the singer page and click the letter on the right side of the page then notice the console\r\n\r\n### What is expected?\r\n‘touchstart’  should be printed once whether useing breakpoint and debugger\r\n\r\n### What is actually happening?\r\nUse breakpoints and debugg will print 'touchstart' twice and the program will stop at the second log and it will not stop for the first time\r\n\r\nonly print once when use breakpoint and debugging is not used\r\n\r\n---\r\nIt comes from the line of code: src/base/BaseListView/BaseListView.vue 111:20\r\n![image](https://user-images.githubusercontent.com/34906299/38593957-922e5eb6-3d76-11e8-923f-0065d196594b.png)\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7999","RelatedDescription":"Closed issue \"touchstart event will be executed twice when use breakpoint and debugger  in chrome devlop\" (#7999)"},{"Id":"313159573","IsPullRequest":true,"CreatedAt":"2018-04-11T03:18:36","Actor":"mapleeit","Number":"8000","RawContent":null,"Title":"fix(env/inBrowser): be more precise when sniffing the inBrowser env","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8000","RelatedDescription":"Open PR \"fix(env/inBrowser): be more precise when sniffing the inBrowser env\" (#8000)"},{"Id":"313148939","IsPullRequest":false,"CreatedAt":"2018-04-11T02:09:54","Actor":"victornpb","Number":"7998","RawContent":null,"Title":"Labeling a root instance","State":"open","Body":"### What problem does this feature solve?\r\nMy app doesn't use vue as a base for the project, it is a backbone project, so I this backbone view create instances of vue views inside it and handles the lifecycle of the vue instance. But this means I have a lot of `<root>` instances which makes debugging a challenge. So what I want is a way to make `new Vue({ label: 'root-foo', ... })` or something like that so I can identify them.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nnew Vue({\r\n   name: 'root-bar', //or label or instanceName etc...\r\n   // (...)\r\n})\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7998","RelatedDescription":"Open issue \"Labeling a root instance\" (#7998)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"314287620","IsPullRequest":false,"CreatedAt":"2018-04-14T12:03:44","Actor":"hlefebvre","Number":"2155","RawContent":null,"Title":"isSameRoute test order","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/2zlyzp6mm0](https://codesandbox.io/s/2zlyzp6mm0)\r\n\r\n### Steps to reproduce\r\nin the sample just click 'launch' and then 'fail'\r\n\r\nin general\r\n\r\n1. create a route in the router with a name and a component\r\n2. pragmatically change to the component using this.$router.push({ name: xxx, params: yyy })\r\n3. put some link/button inside the component that will call this.$router.push with the same name but different params\r\n\r\n\r\n### What is expected?\r\nin the sample: the text should update\r\n\r\nin general:\r\n\r\nThe router should update this.$route.params according to the new values given, the \"completion\" callback should be called\r\n\r\n### What is actually happening?\r\nin the sample: the text is not updated\r\n\r\nin general:\r\n\r\nThe router is not loading the new params, the \"abort\" callback is called\r\n\r\n---\r\nin the isSameRoute function there a several cases\r\nwhen there is a 'path' it is tested before when there is a 'name'\r\n'path' is mandatory, we cannot create routes without path\r\nthus the \"name/params\" comparison is never triggered and vue-router considers that the page is the same and aborts the navigation\r\n\r\ninverting the order of the tests (testing for name before path) will fix this issue but I do not know enough the vue-router internals do be sure it will not break some other functionalities\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2155","RelatedDescription":"Closed issue \"isSameRoute test order\" (#2155)"},{"Id":"313786109","IsPullRequest":false,"CreatedAt":"2018-04-12T15:49:24","Actor":"dev-shane","Number":"2154","RawContent":null,"Title":"base option is case sensitive","State":"open","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://github.com/dev-shane/vue-router-bug-demo](https://github.com/dev-shane/vue-router-bug-demo)\r\n\r\n### Steps to reproduce\r\nMy app is served under /app/, then I have config /src/router/index.js as follow\r\n```javascript\r\nexport default new Router({\r\n  mode: 'history',\r\n  base: '/app',\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Index',\r\n      redirect: {name: 'Home'}\r\n    },\r\n    {\r\n      path: '/home',\r\n      name: 'Home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '*',\r\n      name: '/error',\r\n      component: Error\r\n    }\r\n  ]\r\n})\r\n```\r\nBut I got this result\r\n[http://localhost:8080/app/home](http://localhost:8080/app/home) to /home  \r\n[http://localhost:8080/app/Home](http://localhost:8080/app/Home)  to /home  \r\n[http://localhost:8080/App/home](http://localhost:8080/App/home) to /error  \r\n[http://localhost:8080/App/Home](http://localhost:8080/App/Home) to /error  \r\n\r\n\r\n### What is expected?\r\n[http://localhost:8080/app/home](http://localhost:8080/app/home) to /home  \r\n[http://localhost:8080/app/Home](http://localhost:8080/app/Home)  to /home  \r\n[http://localhost:8080/App/home](http://localhost:8080/App/home) to /home  \r\n[http://localhost:8080/App/Home](http://localhost:8080/App/Home) to /home  \r\n\r\n### What is actually happening?\r\n[http://localhost:8080/app/home](http://localhost:8080/app/home) to /home  \r\n[http://localhost:8080/app/Home](http://localhost:8080/app/Home)  to /home  \r\n[http://localhost:8080/App/home](http://localhost:8080/App/home) to /error  \r\n[http://localhost:8080/App/Home](http://localhost:8080/App/Home) to /error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2154","RelatedDescription":"Open issue \"base option is case sensitive\" (#2154)"},{"Id":"313779953","IsPullRequest":false,"CreatedAt":"2018-04-12T15:34:20","Actor":"dev-shane","Number":"2153","RawContent":null,"Title":"base option is case sensitive","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nVersion: 2.8.1\r\nMy app is served under /app/, then I have config router as follow\r\n```javascript\r\nlet router = new Router({\r\n  mode: 'history',\r\n  base: '/app',\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Index',\r\n      redirect: {name: 'Home'}\r\n    },\r\n    {\r\n      path: '/home',\r\n      name: 'Home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '*',\r\n      name: '/error',\r\n      component: Error\r\n    }\r\n  ]\r\n})\r\n```\r\nBut I got this result\r\n[http://localhost:8080/app/home](http://localhost:8080/app/home) to /home\r\n[http://localhost:8080/app/Home](http://localhost:8080/app/Home)  to /home\r\n[http://localhost:8080/App/home](http://localhost:8080/App/home) to /error\r\n[http://localhost:8080/App/Home](http://localhost:8080/App/Home) to /error\r\n\r\nIs it a bug???\r\n\r\nAnd now I have modifed function getLocation to handle this case\r\n```javascript\r\nfunction getLocation (base) {\r\n  var path = window.location.pathname;\r\n  var lowerCasePath = path.toLowerCase()\r\n  if (base && lowerCasePath.indexOf(base.toLowerCase()) === 0) {\r\n    path = path.slice(base.length);\r\n  }\r\n  return (path || '/') + window.location.search + window.location.hash\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vue-router/issues/2153","RelatedDescription":"Closed issue \"base option is case sensitive\" (#2153)"},{"Id":"313546693","IsPullRequest":false,"CreatedAt":"2018-04-12T10:53:40","Actor":"likyh","Number":"2152","RawContent":null,"Title":"有一个机制能让过渡动效左右两侧的界面处于不同的滚动状态，这样才能更像APP能达到的功能","State":"closed","Body":"### What problem does this feature solve?\r\nVue Router在切换加上动画之后，怎么解决滚动栏的问题？\r\n\r\n在页面都处于顶部的时候是正常的，但某一侧页面滚动到一半位置，无论怎么做切换，两侧都会处于同一个滚动位置。\r\n图：https://segmentfault.com/q/1010000013874925\r\n\r\n\r\n但是如果我要离开的界面和右侧等待进入的页面滚动位置不一样，这该怎么处理呢，我没有发现让左右滚动条处于不同地方的办法。\r\n（如果采用元素内加上scroll-y，不使用全局的滚动条，会造成fixed定位的元素位置错乱，并且在ios上transform切换时，会自动一处fixed和scroll-y的效果。当然也许是我某个细节没实现对，请求指正）\r\n\r\n### What does the proposed API look like?\r\n有一个机制能让左右两侧处于不同的滚动状态，这样才能更像APP能达到的功能\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2152","RelatedDescription":"Closed issue \"有一个机制能让过渡动效左右两侧的界面处于不同的滚动状态，这样才能更像APP能达到的功能\" (#2152)"},{"Id":"313474351","IsPullRequest":false,"CreatedAt":"2018-04-11T20:22:40","Actor":"fracz","Number":"2151","RawContent":null,"Title":"Extra params should be ignored","State":"open","Body":"### What problem does this feature solve?\r\nI have a route defined like this:\r\n\r\n```\r\n{path: '/entities/:id', component: () => import(\"....\"), name: 'entity', props: true}\r\n```\r\n\r\nThen, I have a loaded `entity` instance in my code, so in order to create a link, I need to write:\r\n\r\n```\r\n<router-link :to=\"{name: 'entity', params: {id: myEntity.id}}\">Link</router-link>\r\n```\r\n\r\nBeing lazy, I was slightly less explicit about params and relying on the fact that `entity` contains an `id` field required by the route, I have created the link in the following way:\r\n\r\n```\r\n<router-link :to=\"{name: 'entity', params: myEntity}\">Link</router-link>\r\n```\r\n\r\nGlad it worked for quite a long time, until I discovered that all extra parameters are not ignored but added to the `<router-view>` element as html attributes. So, for example, if the `myEntity` contains a `name` property besides the `id`, the `id` prop is properly consumed by the component but all the others are left on HTML element produced by `router-view`.\r\n\r\n```\r\n<div name=\"Name from entity\">\r\n```\r\n\r\nIMO, all extra parameters (not defined in the route) should be ignored and not passed as `props` to the element.\r\n\r\nWhat do you think?\r\n\r\nI know there are at least two solutions: 1. not being lazy and 2. use function mode of the `props` to extract only props that are defined in the route. But I think this should be a default behavior.\r\n\r\nFun fact: I have discovered it when `myEntity` contained a `hidden: true` property and it resulted in `hidden=\"true\"` HTML attribute on the whole `router-view`. You can guess how big WTF I had when debugging it... :-)\r\n\r\n### What does the proposed API look like?\r\nAPI does not change.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2151","RelatedDescription":"Open issue \"Extra params should be ignored\" (#2151)"},{"Id":"313387386","IsPullRequest":false,"CreatedAt":"2018-04-11T18:37:14","Actor":"ccqgithub","Number":"2150","RawContent":null,"Title":" router-view:key=\"$route.path\" hot reload","State":"closed","Body":"### What problem does this feature solve?\r\nnow, if i use router-view with `key` like this:\r\n\r\n```\r\n        <div class=\"sma-mod\">\r\n          <transition name=\"mod\">\r\n            <keep-alive>\r\n              <router-view\r\n                :key=\"$route.path\"\r\n                ref=\"router\"\r\n              ></router-view>\r\n            </keep-alive>\r\n          </transition>\r\n        </div>\r\n```\r\nwhen i modify `js`, the current component disappear, when i modify `template` or `style`, it is right.\r\n\r\nwant:  can hot reload with `key router-view`\r\n\r\n### What does the proposed API look like?\r\n```\r\n        <div class=\"sma-mod\">\r\n          <transition name=\"mod\">\r\n            <keep-alive>\r\n              <router-view\r\n                :key=\"$route.path\"\r\n                ref=\"router\"\r\n              ></router-view>\r\n            </keep-alive>\r\n          </transition>\r\n        </div>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2150","RelatedDescription":"Closed issue \" router-view:key=\"$route.path\" hot reload\" (#2150)"},{"Id":"313282491","IsPullRequest":false,"CreatedAt":"2018-04-11T11:52:38","Actor":"py419569317","Number":"2149","RawContent":null,"Title":"怎么在hash前面添加一个?","State":"closed","Body":"### What problem does this feature solve?\r\nvue-router使用的是hash模式，\r\n如果页面地址为xxx.com/web#/home，支付目录必须为xxx.com/web/；\r\n如果页面被分享出去了，微信会给url添加参数，xxx.com/web?from=singlemessage&isappinstalled=0#/home，微信会忽略?后面的参数，如果去支付，支付目录必须为xx.com/；\r\n如果在hash前添加?，此时url为xxx.com/web?#/home，由于微信会忽略?后面的参数，那么支付目录可以统一成xx.com\r\n\r\n### What does the proposed API look like?\r\n未知\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2149","RelatedDescription":"Closed issue \"怎么在hash前面添加一个?\" (#2149)"},{"Id":"313159597","IsPullRequest":false,"CreatedAt":"2018-04-11T08:40:43","Actor":"LonHon","Number":"2148","RawContent":null,"Title":"<router-link target=“_blank”> 中params只能传递一个值？","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://null.null.null](http://null.null.null)\r\n\r\n### Steps to reproduce\r\n```  javascript\r\n// 不能获取startTime\r\n<router-link :to=\"{ name: 'Detail', params: { uuid: scope.row.equipmentId, startTime: scope.row.createTime}}\" target=\"_blank\">\r\n\r\n// 能够获取startTime\r\n<router-link :to=\"{ name: 'Detail', params: { uuid: scope.row.equipmentId, startTime: scope.row.createTime}}\">\r\n```\r\n\r\n### What is expected?\r\n在target=“_blank”下，获取到 params 中的所有值\r\n\r\n### What is actually happening?\r\n在target=“_blank”下，只能获取params中部分值\r\n\r\n---\r\n现已通过query来获取到startTime，但是很好奇为什么会出现这种情况。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2148","RelatedDescription":"Closed issue \"<router-link target=“_blank”> 中params只能传递一个值？\" (#2148)"},{"Id":"313158982","IsPullRequest":false,"CreatedAt":"2018-04-11T03:14:25","Actor":"LonHon","Number":"2147","RawContent":null,"Title":"<router-link target=“_blank”> 中params只能传递一个值？","State":"closed","Body":"\"vue-router\": \"3.0.1\"\r\n\r\n```  javascript\r\n// 不能获取startTime\r\n<router-link :to=\"{ name: 'Detail', params: { uuid: scope.row.equipmentId, startTime: scope.row.createTime}}\" target=\"_blank\">\r\n\r\n// 能够获取startTime\r\n<router-link :to=\"{ name: 'Detail', params: { uuid: scope.row.equipmentId, startTime: scope.row.createTime}}\">\r\n```\r\n\r\n如上，在新页面中获取到的 params 只有uuid，startTime丢失。\r\n\r\n如果把 * target=\"_blank\" * 去掉，则能正常获取到startTime。\r\n\r\n现已通过query来获取到startTime，但是很好奇为什么会出现这种情况。","Url":"https://github.com/vuejs/vue-router/issues/2147","RelatedDescription":"Closed issue \"<router-link target=“_blank”> 中params只能传递一个值？\" (#2147)"},{"Id":"313131407","IsPullRequest":false,"CreatedAt":"2018-04-11T00:15:01","Actor":"markers16123","Number":"2146","RawContent":null,"Title":"The routed params as props is undefined, when i refresh page.","State":"closed","Body":"router settings:\r\n`        {\r\n            path: 'read',\r\n            name: 'post-read-view',\r\n            component: viewPostsRead,\r\n            props: true\r\n        }`\r\n\r\nrouter link as:\r\n`<router-link :to=\"{ name:'post-read-view', params: { item } }\" class=\"post-title\">{{item.title}}</router-link>`\r\n\r\ntarget component:\r\n`    props: {\r\n        item: Object\r\n    },\r\n\r\n    beforeRouteUpdate(to) {\r\n        console.log(to.params) // <= it is 'undefined' when i refresh the browser page\r\n    },\r\n\r\n    mounted() {\r\n        console.log(this.item) // <= it is 'undefined' when i refresh the browser page\r\n    }`\r\n\r\nPlease help me or advice..","Url":"https://github.com/vuejs/vue-router/issues/2146","RelatedDescription":"Closed issue \"The routed params as props is undefined, when i refresh page.\" (#2146)"},{"Id":"312697052","IsPullRequest":false,"CreatedAt":"2018-04-09T22:19:04","Actor":"quenti77","Number":"2145","RawContent":null,"Title":"Default tab not showing","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/L7hscd8h/7987/](https://jsfiddle.net/L7hscd8h/7987/)\r\n\r\n### Steps to reproduce\r\nIn jsfiddle click on **/user/foo** link\r\nHome component does not appear\r\nBut if use path instead of name, component home appear.\r\n\r\n### What is expected?\r\nThat the home component appear with name property\r\n\r\n### What is actually happening?\r\nThe home component doesn't appear\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2145","RelatedDescription":"Closed issue \"Default tab not showing\" (#2145)"},{"Id":"312317895","IsPullRequest":false,"CreatedAt":"2018-04-08T16:11:35","Actor":"EasonShen1989","Number":"2144","RawContent":null,"Title":"TypeError: _http2.default.get is not a function?why?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2144","RelatedDescription":"Closed issue \"TypeError: _http2.default.get is not a function?why?\" (#2144)"},{"Id":"312041836","IsPullRequest":false,"CreatedAt":"2018-04-06T16:38:20","Actor":"hjx5309","Number":"2143","RawContent":null,"Title":" [vue-router] \"path\" is required in a route configuration","State":"closed","Body":"以下是我的router的代码，为什么老是包上面的错呢？\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\n\r\nVue.use(Router)\r\n\r\n\r\nexport const constantRouterMap = [ \r\n  { path: '/404', component: () => import('@/views/404') , hidden: true },\r\n  { path: '*', redirect: '/404', hidden: true }\r\n]\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      scrollBehavior: () => ({ y: 0 }),\r\n      routes: constantRouterMap\r\n    }\r\n  ]\r\n})\r\n","Url":"https://github.com/vuejs/vue-router/issues/2143","RelatedDescription":"Closed issue \" [vue-router] \"path\" is required in a route configuration\" (#2143)"},{"Id":"311468247","IsPullRequest":false,"CreatedAt":"2018-04-05T15:18:37","Actor":"lepture","Number":"2142","RawContent":null,"Title":"Enhancement on reusable router view","State":"closed","Body":"### What problem does this feature solve?\r\nUse a shared router view among different route paths. I'm creating a dashboard dynamically, which only need three views:\r\n\r\n1. List View\r\n2. Create View\r\n3. Edit View\r\n\r\nLet's create three files: `PageList.vue`, `PageCreate.vue`, `PageEdit.vue`, and use them in routes.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nroutes = [\r\n   {path: '/users', component: PageList},\r\n   {path: '/users/create', component: PageCreate},\r\n   {path: '/users/:id', component: PageEdit},\r\n   {path: '/posts', component: PageList},\r\n   {path: '/posts/create', component: PageCreate},\r\n   {path: '/posts/:id', component: PageEdit},\r\n]\r\n```\r\n\r\nCurrently, this won't work properly. Actually, it has a bug, the `poll` function will run infinitely when switching routes.\r\n\r\n\r\n## Current Bug\r\n\r\nIf you have such routes, and using navigation guard, the `poll` function will run infinitely when switching routes.\r\n\r\n```js\r\nroutes = [\r\n   {path: '/users', component: PageList},\r\n   {path: '/posts', component: PageList},\r\n]\r\n```\r\n\r\nIf you add a `console.log` here https://github.com/vuejs/vue-router/blob/dev/src/history/base.js#L315\r\nit will print log infinitely, because `instances[key]` will always be undefined.\r\n\r\nMy current solution:\r\n\r\n```js\r\nroutes = [\r\n   {path: '/users', component: Object.assign({}, PageList)},\r\n   {path: '/posts', component: Object.assign({}, PageList)},\r\n]\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2142","RelatedDescription":"Closed issue \"Enhancement on reusable router view\" (#2142)"},{"Id":"311141845","IsPullRequest":false,"CreatedAt":"2018-04-04T11:17:24","Actor":"b-3-n","Number":"2141","RawContent":null,"Title":"Allow paths with trailing slash.","State":"closed","Body":"### What problem does this feature solve?\r\nRight now if I specify a route with \"path: '/about/'\" and I redirect to it the browser URL will be set to '.../about'.\r\n\r\nThis creates various issues. For example, Google Analytics will report usage statistics about '/about' and '/about/' (the latter we get if the user arrives on our page at /about as the browser appends a slash). Clearly this should be fixed on our end and I'm sure there are a lot of other cases where this creates problems. \r\n\r\n### What does the proposed API look like?\r\nDisclaimer: I don't know if this breaks something else.\r\n\r\nIt would be great if \"path: '/about/'\" would add a trailing slash when redirecting to the route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2141","RelatedDescription":"Closed issue \"Allow paths with trailing slash.\" (#2141)"},{"Id":"310725041","IsPullRequest":false,"CreatedAt":"2018-04-04T06:12:22","Actor":"iamsayantan","Number":"2139","RawContent":null,"Title":"Router guard not working when coming from page its supposed to redirect if condition does not match","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jrfd3x89/](https://jsfiddle.net/jrfd3x89/)\r\n\r\n### Steps to reproduce\r\nSo I have three components, Secured, NonSecured and Dummy associated to three routes. Secured routes should be accessed only by users who has access. And the router guard checks for that. If the user does not have permission then navigating the user to NonSecured page. \r\n if you navigate from Dummy to Secured you would be redirected to NonSecured which is what supposed to happen. but if you navigate from NonSecured to Secured page, then you would be allowed to access. \r\n\r\n### What is expected?\r\nIf I have router guard enabled for a route, then the route should not be accessed if the guard logic is not met.\r\n\r\n### What is actually happening?\r\nThe protected route can be accessed if I navigate to the protected route from the page where it redirects if guard logic is not met.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2139","RelatedDescription":"Closed issue \"Router guard not working when coming from page its supposed to redirect if condition does not match\" (#2139)"},{"Id":"310961273","IsPullRequest":true,"CreatedAt":"2018-04-03T19:11:11","Actor":"chrisvfritz","Number":"2140","RawContent":null,"Title":"Add section about handling loading state to lazy-loading doc","State":"open","Body":"Partially resolves https://github.com/vuejs/vuejs.org/issues/1534.","Url":"https://github.com/vuejs/vue-router/pull/2140","RelatedDescription":"Open PR \"Add section about handling loading state to lazy-loading doc\" (#2140)"},{"Id":"310532453","IsPullRequest":false,"CreatedAt":"2018-04-02T16:53:21","Actor":"ambrt","Number":"2138","RawContent":null,"Title":"Web browser back button doesn't go back to scroll position when content is created with beforeRouteEnter.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/qjrf9zyu/15/](https://jsfiddle.net/qjrf9zyu/15/)\r\n\r\n### Steps to reproduce\r\nWait for page to load.<br>\r\nScroll to bottom.<br>\r\nClick about.<br>\r\nRight click menu->Back or browser Back.<br>\r\n\r\n\r\n### What is expected?\r\nThe browser window should scroll to bottom (last position)\r\n\r\n### What is actually happening?\r\nBrowser scrolls to top.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2138","RelatedDescription":"Closed issue \"Web browser back button doesn't go back to scroll position when content is created with beforeRouteEnter.\" (#2138)"},{"Id":"310351207","IsPullRequest":false,"CreatedAt":"2018-04-01T20:23:49","Actor":"ambrt","Number":"2137","RawContent":null,"Title":"ScrollBehavior don't work on back, but works on refresh.","State":"closed","Body":"\r\nI added  scroll behavior to router:\r\n```\r\nscrollBehavior(to, from, savedPosition) {\r\n    console.log(to)\r\n    console.log(from)\r\n    console.log(savedPosition)\r\n    if (savedPosition) {\r\n      return savedPosition\r\n    } else {\r\n      return { x: 0, y: 0 }\r\n    }\r\n  }\r\n \r\n```\r\nwhen i click on item, and back to list the console shows\r\n`{x: 0, y: 1057}`\r\nbut window is scrolleld to top.\r\n\r\nWhen i hit refresh (F5) right afterwards then windows scrolls to `x` postition.\r\n\r\nIt happens on latest Chrome.","Url":"https://github.com/vuejs/vue-router/issues/2137","RelatedDescription":"Closed issue \"ScrollBehavior don't work on back, but works on refresh.\" (#2137)"},{"Id":"310320825","IsPullRequest":false,"CreatedAt":"2018-04-01T14:36:41","Actor":"eyad-alshami","Number":"2136","RawContent":null,"Title":"Default deeply nested route and active-class Prop","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Iyadorf/dy0e4412/](https://jsfiddle.net/Iyadorf/dy0e4412/)\r\n\r\n### Steps to reproduce\r\nclick on BrowseCommenters\r\n\r\n### What is expected?\r\nonly dashbord -> commenter -> BrowseCommenters\r\nwill have the router-link-active CSS class on them\r\n\r\n### What is actually happening?\r\n dashbord -> commenter -> [BrowseCommenters and NewCommenter]\r\nare all having the router-link-active CSS class on them\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2136","RelatedDescription":"Closed issue \"Default deeply nested route and active-class Prop\" (#2136)"},{"Id":"309206590","IsPullRequest":true,"CreatedAt":"2018-03-31T17:01:41","Actor":"PeachScript","Number":"2130","RawContent":null,"Title":"Fix forEach error in IE browsers","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: example compatibility\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis PR is used to fix the `forEach` error in IE.","Url":"https://github.com/vuejs/vue-router/pull/2130","RelatedDescription":"Closed or merged PR \"Fix forEach error in IE browsers\" (#2130)"},{"Id":"310228588","IsPullRequest":false,"CreatedAt":"2018-03-31T09:53:54","Actor":"xerosanyam","Number":"2135","RawContent":null,"Title":"Getting Refused to apply style from '<URL>'","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nVersion: 2.5.3\r\nWhen trying to set path: '/u/:username/note/:noteid'\r\nGetting errors like:\r\nRefused to apply style from '<URL>'\r\nRefused to apply style from 'http://localhost:8080/u/xerosanyam/static/distr/stylesheets/sideshow.min.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.\r\n\r\nHowever, this works : path: '/u/:username'\r\n\r\nAny solution or reason why this may be happening ?","Url":"https://github.com/vuejs/vue-router/issues/2135","RelatedDescription":"Closed issue \"Getting Refused to apply style from '<URL>'\" (#2135)"},{"Id":"310207906","IsPullRequest":false,"CreatedAt":"2018-03-31T03:14:52","Actor":"pzanitti","Number":"2134","RawContent":null,"Title":"Vue-Router seeks and makes use of the first anchor element inside the component","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/250344/](https://jsfiddle.net/50wL7mdz/250344/)\r\n\r\n### Steps to reproduce\r\nMake a `router-link` whose `tag` attribute is not `a`, and place an anchor element inside it.\r\n\r\n### What is expected?\r\nThe click listener should bind to self.\r\n\r\n### What is actually happening?\r\nThe click listener binds to the first inner anchor element, disregarding self.\r\n\r\n---\r\nThere are several things at play here:\r\n\r\n1. I want the whole card to be user-clickable.\r\n2. I prerender my pages using `prerenderer-spa-plugin` and I want only the title of the card to be an anchor element for SEO reasons.\r\n3. Again for SEO reasons, I don't want the whole card to be an anchor element since it will also contain `Content` and `More content` as anchor text.\r\n\r\nNow I understand where this behavior is coming from, it's trying to prevent a child anchor from triggering a full page navigation. Without using `router-link` I can get the best of both worlds by making a clickable div whose event does not propagate and trigger the inner anchor while web crawlers still relate `/route/3` to `I am a good link`:\r\n\r\n```\r\n<div class=\"card\" @click.prevent=\"$router.push({ name: 'MyRoute', params: { id: 3 } })\">\r\n  <h2><a href=\"/route/3\">I am a good link</a></h2>\r\n  <p>Content</p>\r\n  <p>More content</p>\r\n</div>\r\n```\r\n\r\nThese lines are responsible for this behavior:\r\n\r\nhttps://github.com/vuejs/vue-router/blob/9880cbda8dd299315a253abaab69da00eecdf635/src/components/link.js#L86-L99\r\n\r\nNote a shortcoming of this implementation: should the user place more than one anchor element inside the `router-link`, only the first one will get enhanced while the other ones will still trigger a full page reload. To me that scenario makes little sense and I have no idea of any real use case, but perhaps it should raise a warning.\r\n\r\nIs there any 'official' stance on my workaround?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2134","RelatedDescription":"Open issue \"Vue-Router seeks and makes use of the first anchor element inside the component\" (#2134)"},{"Id":"309307812","IsPullRequest":false,"CreatedAt":"2018-03-29T17:59:36","Actor":"ralphchristianeclipse","Number":"2132","RawContent":null,"Title":"IOS Url Schemes not working on safari","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[prefs://root=General&path=ManagedConfigurationList](prefs://root=General&path=ManagedConfigurationList)\r\n\r\n### Steps to reproduce\r\n1. Put pref href prefs://root=General&path=ManagedConfigurationList\r\n2. a href=\"prefs://root=General&path=ManagedConfigurationList\"\r\n3. click anchor tag\r\n4. Safari invalid address \r\n\r\n### What is expected?\r\nMust open configuration manager / settings\r\n\r\n### What is actually happening?\r\nSafari invalid address\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2132","RelatedDescription":"Closed issue \"IOS Url Schemes not working on safari\" (#2132)"},{"Id":"309630462","IsPullRequest":false,"CreatedAt":"2018-03-29T06:07:12","Actor":"rodrigowbazevedo","Number":"2133","RawContent":null,"Title":"Handle next(new Error)","State":"closed","Body":"I have a `beforeRouteEnter` in my component that can return a `next(new Error)`, and I have two ways to access this route.\r\n\r\nThe first is from another component using: \r\n```javascript\r\nthis.$router.push(\r\n    `/route/${id}`,\r\n    complete => {\r\n        // Do somenthing\r\n    },\r\n    error => {\r\n        // Handle Error\r\n    }\r\n);\r\n```\r\n\r\nThe second is accessing the route direct from the browser, \r\n in this case I have only one way to handle the error, with the global `router.onError(error => {})`.\r\n\r\nAnd what I want is, if the error occurs coming from the other component I'll show a message error at the component, and if it occurs coming direct from the browser I want to redirect him to another route.\r\nBut the problem is, the global `router.onError(error => {})`  is called  first, so if I redirect him to another route I can't handle the error at my other component, and in the global `onError` I don't even receive at leat a `from` route object.\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2133","RelatedDescription":"Closed issue \"Handle next(new Error)\" (#2133)"},{"Id":"309283750","IsPullRequest":false,"CreatedAt":"2018-03-28T09:16:49","Actor":"Astray-git","Number":"2131","RawContent":null,"Title":"router won't parse programmatic navigated query","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/L7hscd8h/6976/](http://jsfiddle.net/L7hscd8h/6976/)\r\n\r\n### Steps to reproduce\r\nclick 'a'\r\n\r\nquery `z` added as Number in `beforeRouteEnter`\r\n\r\n`typeof query.z` is Number\r\n\r\n### What is expected?\r\nquery props should be String\r\n\r\n### What is actually happening?\r\nno stringify applied on programmatic navigation (`next`, `this.$router.push` etc.)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2131","RelatedDescription":"Open issue \"router won't parse programmatic navigated query\" (#2131)"},{"Id":"308809090","IsPullRequest":true,"CreatedAt":"2018-03-27T06:07:13","Actor":"z1948296027","Number":"2129","RawContent":null,"Title":"Update app.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2129","RelatedDescription":"Closed or merged PR \"Update app.js\" (#2129)"},{"Id":"308805042","IsPullRequest":false,"CreatedAt":"2018-03-27T03:01:33","Actor":"z1948296027","Number":"2128","RawContent":null,"Title":"examples/navigation-guards/app.js Error","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nIn this file, line of number 36, end of tag <p> missing </p>\r\n","Url":"https://github.com/vuejs/vue-router/issues/2128","RelatedDescription":"Closed issue \"examples/navigation-guards/app.js Error\" (#2128)"},{"Id":"308457658","IsPullRequest":true,"CreatedAt":"2018-03-26T07:18:10","Actor":"PeachScript","Number":"2127","RawContent":null,"Title":"Fix instance reuse bug in out-in transition #1874","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis is a PR for #1874 , cc: @LinusBorg ","Url":"https://github.com/vuejs/vue-router/pull/2127","RelatedDescription":"Open PR \"Fix instance reuse bug in out-in transition #1874\" (#2127)"},{"Id":"308434652","IsPullRequest":false,"CreatedAt":"2018-03-26T05:09:29","Actor":"NereusWy","Number":"2126","RawContent":null,"Title":"when i cofig the router correctly, import it at main.js. i find that router.options can`t get all options ","State":"closed","Body":"\"vue\": \"2.5.13\".\r\n\"vue-router\": \"3.0.1\".\r\n\r\nmain.js\r\nimport router from 'router'\r\nconsole.log(router.options.routes) \r\nresult \r\ncan`t get all  routeroptions...\r\n","Url":"https://github.com/vuejs/vue-router/issues/2126","RelatedDescription":"Closed issue \"when i cofig the router correctly, import it at main.js. i find that router.options can`t get all options \" (#2126)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"314313053","IsPullRequest":true,"CreatedAt":"2018-04-14T09:14:33","Actor":"muronglove","Number":"1232","RawContent":null,"Title":"test-pr","State":"closed","Body":"nothing, just test...","Url":"https://github.com/vuejs/vuex/pull/1232","RelatedDescription":"Closed or merged PR \"test-pr\" (#1232)"},{"Id":"314249264","IsPullRequest":false,"CreatedAt":"2018-04-13T21:01:16","Actor":"MrVichr","Number":"1231","RawContent":null,"Title":"A small fix in typings for StoreOptions","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l2wzjwp4vm](https://codesandbox.io/s/l2wzjwp4vm)\r\n\r\n### Steps to reproduce\r\nSorry I'm not going to spend several hours making a minimal demo project and uploading it to github just to have 8 letters added. The error and fix should be obvious.\r\n```typescript\r\n// src/datamodel/appstore.ts\r\nclass TAppStore {\r\n  counter: number=0;\r\n};\r\n\r\nexport var AppStore=new Vuex.Store<TAppStore>({ \r\n  state: function() {\r\n    console.log('creating AppStore'); //gets called just fine\r\n    return new TAppStore();\r\n  }\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\nNo errors reported on compilation.\r\n\r\n### What is actually happening?\r\n```\r\nERROR in j:\\types\\CML\\front\\src\\datamodel\\appstore.ts\r\n[tsl] ERROR in j:\\types\\CML\\front\\src\\datamodel\\appstore.ts(44,2)\r\n      TS2345: Argument of type '{ state: () => TAppStore; }' is not assignable to parameter of type 'StoreOptions<TAppStore>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '() => TAppStore' is not assignable to type 'TAppStore | undefined'.\r\n      Type '() => TAppStore' is not assignable to type 'TAppStore'.\r\n        Property 'counter' is missing in type '() => TAppStore'.\r\n\r\n  Build failed with errors.\r\n```\r\n\r\n---\r\nIt seems that vuex/types/index.d.ts, in interface StoreOptions, is missing the possibility of using a function instead of an object.\r\nThis is the recommended way to initialize state: https://vuex.vuejs.org/en/modules.html (chapter Module Reuse, at the very bottom).\r\nAn easy fix would be editing the vuex/types/index.d.ts StoreOptions:\r\n```diff\r\nexport interface StoreOptions<S> {\r\n- state?: S;\r\n  state?: S|(()=>S);\r\n  getters?: GetterTree<S, S>;\r\n  actions?: ActionTree<S, S>;\r\n  mutations?: MutationTree<S>;\r\n  modules?: ModuleTree<S>;\r\n  plugins?: Plugin<S>[];\r\n  strict?: boolean;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1231","RelatedDescription":"Open issue \"A small fix in typings for StoreOptions\" (#1231)"},{"Id":"314096808","IsPullRequest":false,"CreatedAt":"2018-04-13T12:56:36","Actor":"isaacguerreir","Number":"1230","RawContent":null,"Title":"[docs] I want to write a Portuguese version","State":"open","Body":"### What problem does this feature solve?\r\nI'm from Brazil and using Vuex in my work. I want to translate the documentation to Portuguese. I have to do something before start the translation?\r\n\r\n### What does the proposed API look like?\r\nI will only create a paste in docs with the Portuguese version of the documentation, like other languages do.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1230","RelatedDescription":"Open issue \"[docs] I want to write a Portuguese version\" (#1230)"},{"Id":"314034522","IsPullRequest":false,"CreatedAt":"2018-04-13T09:30:01","Actor":"dongnaebi","Number":"1229","RawContent":null,"Title":"[ssr] getters can't get data in client-side","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Steps to reproduce\r\nI use Vuex module in vue-ssr,`this.$store.getters['product/screening']` in server-side is work,but in client-side is undefined,how can i solve this problem?or it's a bug?here's my code\r\n```javascript\r\n  import {mapState} from 'Vuex'\r\n  import product from '~/store/modules/product'\r\n  import 'vue-awesome/icons/map-marker-alt'\r\n  export default {\r\n    asyncData ({ store, route }) {\r\n      store.registerModule('product', product)\r\n      return store.dispatch('product/getProductList', {coll: '2', page: 1})\r\n    },\r\n    destroyed () {\r\n      this.$store.unregisterModule('product')\r\n    },\r\n    data: () => ({\r\n      \r\n    }),\r\n    computed: {\r\n      ...mapState({\r\n        list: state => state.product.productList.product,\r\n      }),\r\n      screening () {\r\n        let screening = this.$store.getters['product/screening']\r\n        console.log(screening) // server-side is work,client-side is undefined\r\n        ...\r\n        return screening\r\n      }\r\n    }\r\n  }\r\n```\r\n```javascript\r\n// product.js\r\nimport fetch from '../../api'\r\nexport default {\r\n  namespaced: true,\r\n  state: () => ({\r\n    productList: null\r\n  }),\r\n  getters: {\r\n    screening: state => {\r\n      state.productList.screening.forEach(s => {\r\n        s.value = [{id: 0, name: '全部'}].concat(s.value)\r\n      })\r\n      return state.productList.screening\r\n    }\r\n  },\r\n  mutations: {\r\n    setProductList (state, data) {\r\n      state.productList = data\r\n    }\r\n  },\r\n  actions: {\r\n    async getProductList ({commit, dispatch, rootState}, params = {coll: '', keyword: '', productId: 0, page: 1}) {\r\n      const res = await dispatch('handleError', await fetch(rootState, '/web/api/products/v1', params), { root: true })\r\n      commit('setProductList', res.data)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\n`this.$store.getters['product/screening']` do not undefined\r\n\r\n### What is actually happening?\r\n`this.$store.getters['product/screening']` return undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1229","RelatedDescription":"Open issue \"[ssr] getters can't get data in client-side\" (#1229)"},{"Id":"314030129","IsPullRequest":false,"CreatedAt":"2018-04-13T09:17:06","Actor":"dongnaebi","Number":"1228","RawContent":null,"Title":"[ssr] getters can't get data in client-side","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Steps to reproduce\r\nI use Vuex module in vue-ssr,`this.$store.getters['product/screening']` in server-side is work,but in client-side is undefined,how can i solve this problem?here's my code\r\n```javascript\r\n  import {mapState} from 'Vuex'\r\n  import product from '~/store/modules/product'\r\n  import 'vue-awesome/icons/map-marker-alt'\r\n  export default {\r\n    asyncData ({ store, route }) {\r\n      store.registerModule('product', product)\r\n      return store.dispatch('product/getProductList', {coll: '2', page: 1})\r\n    },\r\n    destroyed () {\r\n      this.$store.unregisterModule('product')\r\n    },\r\n    data: () => ({\r\n      \r\n    }),\r\n    computed: {\r\n      ...mapState({\r\n        list: state => state.product.productList.product,\r\n      }),\r\n      screening () {\r\n        let screening = this.$store.getters['product/screening']\r\n        console.log(screening) // server-side is work,client-side is undefined\r\n        ...\r\n        return screening\r\n      }\r\n    }\r\n  }\r\n```\r\n```javascript\r\n// product.js\r\nimport fetch from '../../api'\r\nexport default {\r\n  namespaced: true,\r\n  state: () => ({\r\n    productList: null\r\n  }),\r\n  getters: {\r\n    screening: state => {\r\n      state.productList.screening.forEach(s => {\r\n        s.value = [{id: 0, name: '全部'}].concat(s.value)\r\n      })\r\n      return state.productList.screening\r\n    }\r\n  },\r\n  mutations: {\r\n    setProductList (state, data) {\r\n      state.productList = data\r\n    }\r\n  },\r\n  actions: {\r\n    async getProductList ({commit, dispatch, rootState}, params = {coll: '', keyword: '', productId: 0, page: 1}) {\r\n      const res = await dispatch('handleError', await fetch(rootState, '/web/api/products/v1', params), { root: true })\r\n      commit('setProductList', res.data)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\n`this.$store.getters['product/screening']` do not undefined\r\n\r\n### What is actually happening?\r\n`this.$store.getters['product/screening']` return undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1228","RelatedDescription":"Closed issue \"[ssr] getters can't get data in client-side\" (#1228)"},{"Id":"312920535","IsPullRequest":false,"CreatedAt":"2018-04-11T19:58:30","Actor":"drdaemos","Number":"1224","RawContent":null,"Title":"Proposal: make registerModule() accessible in action context","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, the only way to dynamically create a module is the `$store.registerModule` method. I consider this a leaking abstraction because the components should not control store internals. It would be helpful to have such method as a part of action context object (also, a namespaced version would be very good to have) because more often than not such dynamic activity is strongly tied to API querying (otherwise, why would one not register modules in before?).\r\n\r\nMy end user experience which led to this proposal is trying to build a page, which would show multiple collections of items filtered by various conditions (an app marketplace, to be exact). These collections are acquired from the backend via GraphQL and are tied to a 3rd party API which cannot be accessed directly from the frontend.\r\n\r\nRight now I'm doing this via `beforeMount` hook of the root presentation component:\r\n```\r\n// Presentation component\r\n      this.$store.dispatch('selections/fetchLanding', this.$store.registerModule.bind(this.$store))\r\n}\r\n\r\n// Store module\r\nactions: {\r\n  fetchLanding ({commit, state}, registerModule) {\r\n    queryCollections.bind(self)(state.filter)\r\n      .then((result) => {\r\n        for (let key in result.collections) {\r\n          if (typeof state.collections[key] === 'undefined') {\r\n            registerModule(['collections', key], (new CollectionModule(self.client)).createModule())\r\n          }\r\n        }\r\n        commit('SET_COLLECTIONS', result.collections)\r\n      })\r\n  }\r\n},\r\n```\r\n\r\nBut passing the bound registerModule method in payload looks ugly.\r\n\r\n### What does the proposed API look like?\r\nI've cleaned up the example to keep it precise to the task:\r\n\r\n```\r\n// Store module\r\nnamespaced: true,\r\nactions: {\r\n  fetchSomething ({commit, state, registerModule}) {\r\n    querySomeAPI()\r\n      .then((result) => {\r\n        registerModule(namespacedKey, new ModuleInstance())\r\n      })\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1224","RelatedDescription":"Closed issue \"Proposal: make registerModule() accessible in action context\" (#1224)"},{"Id":"313076294","IsPullRequest":true,"CreatedAt":"2018-04-10T20:25:07","Actor":"hootlex","Number":"1227","RawContent":null,"Title":"Update TodoMVC example","State":"open","Body":"## Updates:\r\n- move `state` from `mutations.js` to `index.js`\r\n- use actions instead of committing mutations from components\r\n- pass actions and mutations only the argument they need, instead of an object, when it's just one argument\r\n- make`Todo` component comply with the style guide\r\n- make mutations simple while actions do more work\r\n\r\n@ktsn \r\n","Url":"https://github.com/vuejs/vuex/pull/1227","RelatedDescription":"Open PR \"Update TodoMVC example\" (#1227)"},{"Id":"313037572","IsPullRequest":true,"CreatedAt":"2018-04-10T18:23:28","Actor":"hootlex","Number":"1226","RawContent":null,"Title":"Update Counter Hot Example","State":"open","Body":"- Make mutations responsible for updating one piece\r\n\r\nThe component in this example is named `Counter` (single word). Though, we might want to keep it like that since this is a very simple example. What do you think @ktsn @chrisvfritz ?","Url":"https://github.com/vuejs/vuex/pull/1226","RelatedDescription":"Open PR \"Update Counter Hot Example\" (#1226)"},{"Id":"313030104","IsPullRequest":true,"CreatedAt":"2018-04-10T18:00:41","Actor":"hootlex","Number":"1225","RawContent":null,"Title":"Update shopping cart example","State":"open","Body":"- Remove getters that return a piece of the state as is\r\n- Make modules namespaced\r\n- Rename cart's `added` to `items`\r\n\r\nhttps://github.com/vuejs/vuex/issues/1109","Url":"https://github.com/vuejs/vuex/pull/1225","RelatedDescription":"Open PR \"Update shopping cart example\" (#1225)"},{"Id":"312773121","IsPullRequest":false,"CreatedAt":"2018-04-10T14:12:40","Actor":"lzxb","Number":"1222","RawContent":null,"Title":"Add module registration to complete the hook.","State":"closed","Body":"### What problem does this feature solve?\r\nI want to develop a plug-in that uses a class to create a module, but you need a hook to bind the currently created module.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nnew Vuex.Store({\r\n    modules: {\r\n        test: {\r\n            namespaced: true,\r\n            state: {},\r\n            getters: {},\r\n            mutations: {},\r\n            actions: {},\r\n            created (module) {\r\n                // A module that is introduced to create the completed module.\r\n            }\r\n        }\r\n    }\r\n});\r\n// My plug-in API\r\nclass Test extends VuexClass {\r\n    constructor () {\r\n        this.state = {\r\n            count: 0\r\n        };\r\n        this.namespaced = true\r\n        // ....\r\n    }\r\n    // mutations\r\n    set plus (payload) { // Automatic conversion to function.\r\n        this.state.count++;\r\n    }\r\n    // getters\r\n    get text () {\r\n        return `Count value: ${this.state.count}`\r\n    }\r\n    // actions\r\n    submitPlus () {\r\n        this.Plus(); // Function call.\r\n    }\r\n}\r\n\r\n const test = new Test();\r\n// output: \r\n//  {\r\n//     namespaced: true,\r\n//     state: {\r\n//         count: 0\r\n//     },\r\n//     getters: {\r\n//         text () {}\r\n//     },\r\n//     mutations: {\r\n//         plus () {}\r\n//     },\r\n//     actions: {\r\n//         submitPlus () {}\r\n//     },\r\n//     create (module) {\r\n//         this.context = module;\r\n//         A module that is introduced to create the completed module.\r\n//     }\r\n//     ...\r\n// }\r\n\r\nnew Vuex.Store({\r\n    modules: {\r\n        test\r\n    }\r\n});\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1222","RelatedDescription":"Closed issue \"Add module registration to complete the hook.\" (#1222)"},{"Id":"312775163","IsPullRequest":true,"CreatedAt":"2018-04-10T05:26:02","Actor":"bichikim","Number":"1223","RawContent":null,"Title":"Fix capital letter","State":"closed","Body":"I am sorry for that :)","Url":"https://github.com/vuejs/vuex/pull/1223","RelatedDescription":"Closed or merged PR \"Fix capital letter\" (#1223)"},{"Id":"312599504","IsPullRequest":false,"CreatedAt":"2018-04-10T00:16:24","Actor":"mzymta","Number":"1220","RawContent":null,"Title":"Vuex/Typescript mappers issue: property does not exist on type 'CombinedVueInstance<Vue, ...>'","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mzymta/vuex-mappers-issue](https://github.com/mzymta/vuex-mappers-issue)\r\n\r\n### Steps to reproduce\r\nAdd mapped methods using mapMutations, mapActions, create another component method that uses any of the mapped methods. Build fails with error:\r\n> Error: Property NAME_OF_MAPPED_METHOD does not exist on type 'CombinedVueInstance<Vue, ...>'\r\n\r\nThe below code works fine if there is no methodThatUsesActionOrMutation() method.\r\nWith methodThatUsesActionOrMutation() method build fails with error:\r\n>TS2339: Property 'pushStringArray' does not exist on type 'CombinedVueInstance<Vue, {}, { methodThatUsesActionOrMutation(): void; }, { newStr: any; getLongS...'.\r\n\r\n```\r\nimport Vue from 'vue';\r\nimport {mapActions, mapGetters, mapMutations} from 'vuex'\r\n\r\nexport default Vue.extend({\r\n  computed: {\r\n    ...mapGetters({\r\n      getStringsArray: 'getStringsArray'\r\n    }),\r\n    newStr: {\r\n      get(): string {\r\n        return this.$store.state.newStr;\r\n      },\r\n      set(value: string) {\r\n        this.$store.commit('setNewStr', value);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      pushStringArray: 'pushStringArray'\r\n    }),\r\n    ...mapActions({\r\n      pushStringArrayAsync: 'pushStringArrayAsync'\r\n    }),\r\n    methodThatUsesActionOrMutation() {\r\n      // HERE COMES THE ERROR\r\n      this.pushStringArray();\r\n      console.log('done');\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nmapped method pushStringArray() can be used in other component methods - build doesn't fail\r\n\r\n### What is actually happening?\r\nBuild fails with error:\r\nTS2339: Property 'pushStringArray' does not exist on type 'CombinedVueInstance<Vue, {}, { methodThatUsesActionOrMutation(): void; }, { newStr: any; }, Reado...'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1220","RelatedDescription":"Closed issue \"Vuex/Typescript mappers issue: property does not exist on type 'CombinedVueInstance<Vue, ...>'\" (#1220)"},{"Id":"312656565","IsPullRequest":false,"CreatedAt":"2018-04-09T19:29:04","Actor":"caiotarifa","Number":"1221","RawContent":null,"Title":"\"replaceState\" disables the state of my module","State":"closed","Body":"I wrote a plugin to persist the states.\r\n\r\n``` js\r\nexport default function (key = 'vuex') {\r\n  let storage = window.localStorage\r\n\r\n  function getState (key) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.parse(storage.getItem(key))\r\n        resolve(item)\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  function setState (key, state) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.stringify(state)\r\n        resolve(storage.setItem(key, item))\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  return function (store) {\r\n    getState(key).then(state => {\r\n      if (typeof state === 'object') {\r\n        let merged = Object.assign({}, store.state, state)\r\n        store.replaceState(merged)\r\n      }\r\n    })\r\n\r\n    store.subscribe((mutation, state) => setState(key, state))\r\n  }\r\n}\r\n```\r\n\r\nAnd I am using it this way:\r\n\r\n``` js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nimport persistedState from './plugins/persisted-state'\r\nimport bananas from './modules/bananas'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  strict: false,\r\n\r\n  modules: {\r\n    bananas\r\n  },\r\n\r\n  plugins: [persistedState()]\r\n})\r\n```\r\n\r\nSo, as you can see... I have a module called `bananas`:\r\n\r\n``` js\r\nconst state = {\r\n  bananas: []\r\n}\r\n\r\nconst getters = {\r\n  bananas: state => state.bananas\r\n}\r\n\r\nconst actions = {\r\n  getBananas ({ commit }) {\r\n    console.log('Where is my localStorage bananas?', state.bananas)\r\n    // commit('setBananas', something)\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  setBananas (state, bananas) {\r\n    state.bananas = bananas\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}\r\n```\r\n\r\nI have `bananas` stored in my `localStorage` and Vue can display them when I use the `mapGetters` method inside of my component.\r\n\r\nBut when I try to access `state.bananas` inside of my module the result is the initial value `[]`. How can I get the current state (from localStorage) inside the module?","Url":"https://github.com/vuejs/vuex/issues/1221","RelatedDescription":"Closed issue \"\"replaceState\" disables the state of my module\" (#1221)"},{"Id":"311500988","IsPullRequest":true,"CreatedAt":"2018-04-09T00:23:25","Actor":"bichikim","Number":"1215","RawContent":null,"Title":"[doc] update for updated map helper  Api","State":"closed","Body":"https://github.com/vuejs/vuex/blob/06eb3df66f8690cf59ed57f6cbd16e88695d6837/src/helpers.js#L50\r\nhttps://github.com/vuejs/vuex/blob/06eb3df66f8690cf59ed57f6cbd16e88695d6837/src/helpers.js#L21","Url":"https://github.com/vuejs/vuex/pull/1215","RelatedDescription":"Closed or merged PR \"[doc] update for updated map helper  Api\" (#1215)"},{"Id":"312304763","IsPullRequest":false,"CreatedAt":"2018-04-08T13:13:40","Actor":"ralphchristianeclipse","Number":"1219","RawContent":null,"Title":"Feature Request: watch","State":"open","Body":"### What problem does this feature solve?\r\nThis solve doing \r\n\r\nstore.watch multiple times\r\n\r\nfor example\r\n\r\nstore.watch multiple getter functions\r\n\r\n### What does the proposed API look like?\r\nwhen declaring a vuex store or module add a watch option on it\r\n```js\r\nVuex.store({\r\n  watch: {\r\n    'getters.auth': {\r\n       mutation: 'test',\r\n       action: 'test',\r\n       deep: true,\r\n       immediate: true\r\n     }\r\n  }\r\n})\r\n```\r\nJust the same idea with Vue JS API\r\n\r\nhttps://vuejs.org/v2/api/#watch\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1219","RelatedDescription":"Open issue \"Feature Request: watch\" (#1219)"},{"Id":"311833659","IsPullRequest":true,"CreatedAt":"2018-04-07T08:18:07","Actor":"genie-youn","Number":"1216","RawContent":null,"Title":"[docs] fix grammar","State":"closed","Body":"컴포넌트는 -> 컴포넌트를","Url":"https://github.com/vuejs/vuex/pull/1216","RelatedDescription":"Closed or merged PR \"[docs] fix grammar\" (#1216)"},{"Id":"311993021","IsPullRequest":true,"CreatedAt":"2018-04-06T16:18:04","Actor":"huruji","Number":"1218","RawContent":null,"Title":"[zh-cn] del unnecessary char","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1218","RelatedDescription":"Closed or merged PR \"[zh-cn] del unnecessary char\" (#1218)"},{"Id":"311885942","IsPullRequest":false,"CreatedAt":"2018-04-06T08:16:27","Actor":"marklbp","Number":"1217","RawContent":null,"Title":"How was the render watch added to the  property subs of a instance Dep when new Vue()","State":"closed","Body":"import Vue from 'vue'\r\nimport store from './store'\r\nimport App from './components/App.vue'\r\n\r\nnew Vue({\r\n  store, // inject store to all children\r\n  el: '#app',\r\n  render: h => h(App)\r\n})\r\n","Url":"https://github.com/vuejs/vuex/issues/1217","RelatedDescription":"Closed issue \"How was the render watch added to the  property subs of a instance Dep when new Vue()\" (#1217)"},{"Id":"310888662","IsPullRequest":true,"CreatedAt":"2018-04-04T00:28:52","Actor":"andRyanMiller","Number":"1214","RawContent":null,"Title":"[feat] Add asyncData Method Type to ComponentOptions Module Augmentation","State":"closed","Body":"We use Vue SSR heavily at @algorithmiaio, and we've followed the [Vue SSR-sanctioned means of declaring async data methods](https://ssr.vuejs.org/en/data.html#logic-collocation-with-components).  We've shimmed together our own module augmentation for the `asyncData` method, but given the prevalence of `asyncData` usage throughout the Vue community, it would be nice to standardize the interface.\r\n\r\nI was torn as per where this should live - there isn't a repo for SSR, given that it lives in the Vue repo, and ultimately it felt right here with the Vuex project, since `asyncData` and Vuex go hand in hand. \r\n\r\nI've added a test for the new type as well, and let me know if there's anything I can tweak. Cheers!","Url":"https://github.com/vuejs/vuex/pull/1214","RelatedDescription":"Closed or merged PR \"[feat] Add asyncData Method Type to ComponentOptions Module Augmentation\" (#1214)"},{"Id":"310503374","IsPullRequest":true,"CreatedAt":"2018-04-03T09:15:09","Actor":"Jinjiang","Number":"1212","RawContent":null,"Title":"[docs][zh-cn] synced updates","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/091c14f...57f3cb2\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1212","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced updates\" (#1212)"},{"Id":"310678717","IsPullRequest":false,"CreatedAt":"2018-04-03T04:14:46","Actor":"zexiplus","Number":"1213","RawContent":null,"Title":"e2e test command went wrong","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/test/e2e/runner.js](https://github.com/vuejs/vuex/blob/dev/test/e2e/runner.js)\r\n\r\n### Steps to reproduce\r\nnpm run test:e2e --test cart.js\r\n\r\n\r\n\r\n### What is expected?\r\nsaw the e2e test result\r\n\r\n### What is actually happening?\r\nsomething went wrong and no test result\r\n\r\n---\r\nwhen I run npm run test:e2e --test cart.js, nothing happens and no result.\r\nI think node won't read args with '--' like '--test' as process.argv .\r\nOne snippet in test/e2e/runner.js is \r\n```js\r\nvar i = args.indexOf('--test')\r\nif (i > -1) {\r\n  args[i   1] = 'test/e2e/specs/'   args[i   1]\r\n}\r\n```\r\nemm, the process.argv seems contains no '--test'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1213","RelatedDescription":"Closed issue \"e2e test command went wrong\" (#1213)"},{"Id":"309904468","IsPullRequest":true,"CreatedAt":"2018-04-02T04:29:26","Actor":"gitlab-winnie","Number":"1209","RawContent":null,"Title":"docs: add spies as an alternative to testAction helper","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1209","RelatedDescription":"Closed or merged PR \"docs: add spies as an alternative to testAction helper\" (#1209)"},{"Id":"310386798","IsPullRequest":true,"CreatedAt":"2018-04-02T04:09:20","Actor":"bichikim","Number":"1211","RawContent":null,"Title":"Update exporting ActionHandler","State":"closed","Body":"I should use this type in my project \r\nAnd I guess some other people need this as well :) ","Url":"https://github.com/vuejs/vuex/pull/1211","RelatedDescription":"Closed or merged PR \"Update exporting ActionHandler\" (#1211)"},{"Id":"309405652","IsPullRequest":false,"CreatedAt":"2018-03-31T02:22:09","Actor":"khg0712","Number":"1203","RawContent":null,"Title":"Vuex KR documentation has an issue","State":"closed","Body":"### What problem does this feature solve?\r\nIn state part of origin Vuex documentation, it use same word 'Object Spread Operator'. but it was translated into different words in the Korean translation '객체 전파 연산자' and ' 객체 확산 연산자'. This problem can be misunderstood by other users.\r\n\r\n### What does the proposed API look like?\r\nin KR Vuex documentation it has an error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1203","RelatedDescription":"Closed issue \"Vuex KR documentation has an issue\" (#1203)"},{"Id":"309874448","IsPullRequest":true,"CreatedAt":"2018-03-31T01:59:01","Actor":"iamphill","Number":"1208","RawContent":null,"Title":"docs: Update docs of testAction helper","State":"closed","Body":"This makes it read & produce the correct error messages\r\n\r\nIt now reads as `expect(actual).to.equal(expected)`","Url":"https://github.com/vuejs/vuex/pull/1208","RelatedDescription":"Closed or merged PR \"docs: Update docs of testAction helper\" (#1208)"},{"Id":"309948880","IsPullRequest":true,"CreatedAt":"2018-03-31T01:54:22","Actor":"bichikim","Number":"1210","RawContent":null,"Title":"refactor: fix throwing error style","State":"closed","Body":"  - all throwing error should be starting with lower case","Url":"https://github.com/vuejs/vuex/pull/1210","RelatedDescription":"Closed or merged PR \"refactor: fix throwing error style\" (#1210)"},{"Id":"309612578","IsPullRequest":true,"CreatedAt":"2018-03-31T01:52:20","Actor":"bichikim","Number":"1204","RawContent":null,"Title":" [DOC KR] update doc for issues #1203","State":"closed","Body":"- change 객체 전파 연산자 to 객체 확산 연산자 (I refer to Redux)\r\n   - https://deminoth.github.io/redux/recipes/UsingObjectSpreadOperator.html","Url":"https://github.com/vuejs/vuex/pull/1204","RelatedDescription":"Closed or merged PR \" [DOC KR] update doc for issues #1203\" (#1204)"},{"Id":"309736309","IsPullRequest":true,"CreatedAt":"2018-03-29T16:49:01","Actor":"bichikim","Number":"1207","RawContent":null,"Title":"for reading process.env in safe way","State":"closed","Body":"I cannot pass \"Store should not call root state function twice\"\r\nplease help me \r\nprocess have to be  protected by this way\r\nit is also for improving running speed slightly","Url":"https://github.com/vuejs/vuex/pull/1207","RelatedDescription":"Closed or merged PR \"for reading process.env in safe way\" (#1207)"},{"Id":"309719148","IsPullRequest":true,"CreatedAt":"2018-03-29T16:46:47","Actor":"lzxb","Number":"1206","RawContent":null,"Title":"[featrue] dispatch and commit function support multiple parameters","State":"closed","Body":"In some cases, multiple parameters need to be passed\r\n### Example\r\n```javascript\r\nstore.dispatch('add', 'one', 'two', 'three')\r\nstore.commit('add', 'one', 'two', 'three')\r\n```","Url":"https://github.com/vuejs/vuex/pull/1206","RelatedDescription":"Closed or merged PR \"[featrue] dispatch and commit function support multiple parameters\" (#1206)"},{"Id":"309627453","IsPullRequest":true,"CreatedAt":"2018-03-29T06:57:37","Actor":"bichikim","Number":"1205","RawContent":null,"Title":"perf: update util find","State":"closed","Body":"The find in util doesn't need to loop all value in list for finding only one value","Url":"https://github.com/vuejs/vuex/pull/1205","RelatedDescription":"Closed or merged PR \"perf: update util find\" (#1205)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-04-15T05:30:35.8077646Z","RunDurationInMilliseconds":4373}