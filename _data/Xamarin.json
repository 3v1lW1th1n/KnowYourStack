{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null},{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null},{"Title":"Developer Community Events in March","PublishedOn":"2019-03-01T17:59:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/developer-community-events-in-march/","RawContent":null},{"Title":"View PDF Files within Your Xamarin.Forms Apps Using the Syncfusion PDF Viewer","PublishedOn":"2019-02-28T17:04:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Suresh Mohan. Suresh is the Product Manager for PDF Viewer at Syncfusion Software where he specializes in desktop and mobile app development. &#160;...","Href":"https://blog.xamarin.com/xamarin-forms-apps-syncfusion-pdf-viewer/","RawContent":null},{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Developer Blog is Getting an Update!","PublishedOn":"2019-02-15T18:56:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the coming weeks, the Xamarin Developer Blog will be migrating to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great...","Href":"https://blog.xamarin.com/xamarin-developer-blog-is-getting-an-update/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9213740649","Type":"PullRequestEvent","CreatedAt":"2019-03-10T14:34:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2811","RelatedDescription":"Merged pull request \"[build] use RegisterTaskObject in <GitCommitInfo/>\" (#2811) at xamarin/xamarin-android","RelatedBody":"When building `Xamarin.Android.sln` (even with no changes),\r\n`<GitCommitInfo/>` runs 15 times, which takes about 6 seconds on my\r\nmachine.\r\n\r\nReviewing the input values to `<GitCommitInfo/>`, 2/3 of the calls\r\nseem to be duplicate. This is a classic example where\r\n`RegisterTaskObject` can help.\r\n\r\nI cached the `CommitInfo` output property using the important inputs\r\nas a key to `RegisterTaskObject`:\r\n\r\n* `WorkingDirectory`\r\n* `XASourceDirectory`\r\n* `SubmoduleName`\r\n* `GitRemoteName`\r\n\r\nI used the simple syntax for creating a C# tuple as the lookup key. I\r\nhad to update the TFV of two projects to v4.7 to use the simplified\r\ntuple syntax. I prefer this over `Tuple<string,string,string,string>`.\r\n\r\nThis saves ~4 seconds on incremental builds of `Xamarin.Android.sln`."},{"Id":"9211289540","Type":"PullRequestEvent","CreatedAt":"2019-03-09T14:07:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2808","RelatedDescription":"Merged pull request \"[build] fixes for jit-times.csproj\" (#2808) at xamarin/xamarin-android","RelatedBody":"`jit-times.csproj` had a couple issues that caused it to not build on\r\nWindows:\r\n\r\n* `Configuration.props` was imported *after* the `Debug` configuration\r\n  settings, so `$(XAInstallPrefix)` wasn't declared.\r\n* The reference to `Mono.Options.dll` should actually point to the\r\n  `packages` directory at the root of this repo."},{"Id":"9209147955","Type":"PullRequestEvent","CreatedAt":"2019-03-08T21:20:06","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2811","RelatedDescription":"Opened pull request \"[build] use RegisterTaskObject in <GitCommitInfo/>\" (#2811) at xamarin/xamarin-android","RelatedBody":"When building `Xamarin.Android.sln` (even with no changes),\r\n`<GitCommitInfo/>` runs 15 times, which takes about 6 seconds on my\r\nmachine.\r\n\r\nReviewing the input values to `<GitCommitInfo/>`, 2/3 of the calls\r\nseem to be duplicate. This is a classic example where\r\n`RegisterTaskObject` can help.\r\n\r\nI cached the `CommitInfo` output property using the important inputs\r\nas a key to `RegisterTaskObject`:\r\n\r\n* `WorkingDirectory`\r\n* `XASourceDirectory`\r\n* `SubmoduleName`\r\n* `GitRemoteName`\r\n\r\nI used the simple syntax for creating a C# tuple as the lookup key. I\r\nhad to update the TFV of two projects to v4.7 to use the simplified\r\ntuple syntax. I prefer this over `Tuple<string,string,string,string>`.\r\n\r\nThis saves ~4 seconds on incremental builds of `Xamarin.Android.sln`."},{"Id":"9209008055","Type":"PullRequestEvent","CreatedAt":"2019-03-08T20:52:31","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2810","RelatedDescription":"Opened pull request \"Revert \"[Xamarin.Android.Build.Tasks] AndroidUseAapt2 defaults to False\" (#2810) at xamarin/xamarin-android","RelatedBody":"This reverts commit 0c7d8fd4425c24bf9d073936d621dd12464ee7a0."},{"Id":"9208938223","Type":"PullRequestEvent","CreatedAt":"2019-03-08T20:38:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2798","RelatedDescription":"Merged pull request \"[mono-runtimes] `make` output is of Low importance\" (#2798) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2790\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-pr-builder-release/1001/\r\n\r\nMono bumps are expected to be time consuming.  They can also be\r\nexpected to produce *lots* of build log output.\r\n\r\nWhat's unexpected is the *vast size* of the build logs: a \"normal\" PR\r\nbuild log is usually ~20-30MB in size.  Add in a complete mono bump,\r\nand the build log becomes 1.4GB.\r\n\r\nTake a page out of commit 987a05fa8: the Console log has \"normal\"\r\nverbosity, and `.binlog` files are produced which contain \"diagnostic\"\r\nlevel output.  Why does the Console log for mono bumps need to be so\r\nginormous?\r\n\r\nThe answer is, they don't.\r\n\r\nUpdate the `<Exec/>` tasks within `mono-runtimes.targets` so that\r\n`StandardOutputImportance=\"Low\"` is specified.  This will *hide*\r\nmono's build messages from the normal Console output, while preserving\r\nthe build logs within the `.binlog` files.\r\n\r\nThis should make the default Console log significantly smaller, which\r\nin turn will allow the Jenkins **Failure Cause Management** scanning\r\nto be effective.  (If the Console log is too large, then the error\r\nindicators that Failure Cause Management aren't actually checked.)\r\n\r\nIf the full mono build log is necessary, it can still be obtained from\r\nthe `.binlog` files within the `xa-build-status*.zip` package."},{"Id":"9208899787","Type":"PullRequestEvent","CreatedAt":"2019-03-08T20:31:19","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2809","RelatedDescription":"Opened pull request \"[build] improve XA's build for proguard & r8\" (#2809) at xamarin/xamarin-android","RelatedBody":"If you build `Xamarin.Android.sln`, a lot of stuff happens even if\r\nthere are no changes...\r\n\r\nOur build doesn't follow our own \"MSBuild Best Practices\", and we have\r\na few MSBuild targets that always run.\r\n\r\n## r8.csproj ##\r\n\r\nThe main problem here was that we were invoking `gradlew` every time,\r\nand it takes quite a while to startup when using the `--no-daemon`\r\nswitch.\r\n\r\nI added proper `Inputs` and `Outputs` for the `_BuildR8` MSBuild\r\ntarget, as well as a `<Touch/>` call.\r\n\r\nThese changes saved 6 seconds(!!!) on incremental builds of\r\n`Xamarin.Android.sln`.\r\n\r\n## proguard.csproj ##\r\n\r\nThis project was invoking `<Ant/>` and copying files every time.\r\n\r\nI cleaned this project up a bit by creating an `@(_Outputs)` item\r\ngroup to be used throughout. Adding `Inputs` and `Outputs` to\r\n`_BuildProGuard` and a `<Touch/>` call fixed the incremental build.\r\n\r\nThe `Clean` target was actually broken. Since there is a chain of\r\n`<ProjectReference/>` here, `Xamarin.Android.Tools.BootstrapTasks`\r\ncontaining the `<Ant/>` MSBuild task gets cleaned! Then the actual\r\ncall to `<Ant/>` fails due to the assembly being missing. The fix here\r\nis to just completely replace the `Clean` target with our own, so\r\n`<ProjectReference/>` will not be cleaned. This is the same behavior\r\n`r8.csproj` already had.\r\n\r\nThere was also a general problem with the `CoreCompile` target. I\r\ndon't think it is appropriate to run `<Ant/>` during a design-time\r\nbuild in Visual Studio. I just made this target empty--I think it is\r\nhere to appease OmniSharp.\r\n\r\nThese changes saved ~2 seconds on incremental builds of\r\n`Xamarin.Android.sln`.\r\n\r\nThis brings us to a grand total of ~8 seconds saved."},{"Id":"9208634291","Type":"PullRequestEvent","CreatedAt":"2019-03-08T19:42:37","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2808","RelatedDescription":"Opened pull request \"[build] fixes for jit-times.csproj\" (#2808) at xamarin/xamarin-android","RelatedBody":"`jit-times.csproj` had a couple issues that caused it to not build on\r\nWindows:\r\n\r\n* `Configuration.props` was imported *after* the `Debug` configuration\r\n  settings, so `$(XAInstallPrefix)` wasn't declared.\r\n* The reference to `Mono.Options.dll` should actually point to the\r\n  `packages` directory at the root of this repo."},{"Id":"9208554383","Type":"PullRequestEvent","CreatedAt":"2019-03-08T19:28:19","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2807","RelatedDescription":"Opened pull request \"[build] Use system cmake and ninja to build mingw deps and libzip\" (#2807) at xamarin/xamarin-android","RelatedBody":"Commit a014bd30 reverted e84e502e in hope that we will be able to properly\r\nbootstrap from a squeeky clean system, but that hope was failed because I missed\r\nthe fact that `mingw-dependencies` and `libzip` as well as `libzip-windows`\r\nprojects, all built during the `android-toolchain` phase used the `cmake` and\r\n`ninja` programs provided with the Android SDK. Well, that couldn't work :P\r\n\r\nThis commit makes the above projects build with the system `cmake` and `ninja`\r\nbinaries and adds both of them to list of macOS dependencies.\r\n\r\nIf this works fine we will be able to restore e84e502e"},{"Id":"9206984596","Type":"PullRequestEvent","CreatedAt":"2019-03-08T15:12:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2801","RelatedDescription":"Merged pull request \"[tools] Add jit-times tool\" (#2801) at xamarin/xamarin-android","RelatedBody":"Original project: https://github.com/radekdoulik/jit-times/\r\n\r\nAlso add jit-times script to ease the use of it"},{"Id":"9206614638","Type":"PullRequestEvent","CreatedAt":"2019-03-08T14:15:08","Actor":"alexischr","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2253","RelatedDescription":"Closed pull request \"Bump to mono:2018-10\" (#2253) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9206315154","Type":"PullRequestEvent","CreatedAt":"2019-03-08T13:24:22","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2806","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for \"build-less\" designer (#2803)\" (#2806) at xamarin/xamarin-android","RelatedBody":"Fixes: http://work.devdiv.io/813889\r\n\r\nBackport to `d16-0`:\r\n\r\n* Had to remove the change to `DesignerTests.cs`, since this test\r\n  doesn't exist here.\r\n\r\nIn VS for Mac 2019 Preview, a specific scenario is broken:\r\n\r\n1. Download the repro (the creatively-named, perhaps legendary?\r\n   `App72.sln`)\r\n2. Delete the `bin` and `obj` directories\r\n3. Open a new VS for Mac instance. (`Automatic NuGet restore` should\r\n   be off)\r\n4. Open the solution, wait for any build progress to complete such as\r\n   `Updating resources...`, etc.\r\n5. Restore NuGet packages via `Project->Restore NuGet Packages`\r\n6. Open `MainPage.xaml`: designer displays a gray rectangle that says\r\n   \"AndroidFormsPreviewerRenderer\"\r\n\r\nDoing a full Build solves the problem, but this is the whole point of\r\nthe \"build-less\" designer/previewer feature in Dev16.\r\n\r\nBehind the scenes, the failure is the `SetupDependenciesForDesigner`\r\nMSBuild target. Opening the designer's log file, there are lots and\r\nlots of `javac` errors, such as:\r\n\r\n    ERROR: :   :  error: cannot find symbol\r\n        public Toolbar_NavigationOnClickEventDispatcher (android.support.v7.widget.Toolbar p0)\r\n    symbol:   class Toolbar\r\n    location: package android.support.v7.widget\r\n\r\nDoing more digging, I was able to reproduce the problem with a bash\r\nscript:\r\n\r\n    PROJ='App72/App72.Android/App72.Android.csproj'\r\n    SLN='App72.sln'\r\n    MSBUILD_ARGS='/nologo /v:quiet /p:DesignTimeBuild=True /p:BuildingInsideVisualStudio=True'\r\n    DESIGNER_ARGS='/p:AndroidUseManagedDesignTimeResourceGenerator=False'\r\n    MSBUILD=msbuild\r\n\r\n    # If you have a local xamarin-android build\r\n    MSBUILD=\"$HOME/Desktop/Git/xamarin-android/bin/Debug/bin/xabuild\"\r\n\r\n    rm logs.zip *.binlog\r\n    rm -r App72/App72.Android/obj App72/App72.Android/bin\r\n\r\n    $MSBUILD $PROJ $MSBUILD_ARGS \\\r\n        /t:UpdateAndroidResources /bl:dtb1.binlog\r\n\r\n    $MSBUILD $SLN $MSBUILD_ARGS /t:Restore /bl:restore.binlog\r\n\r\n    $MSBUILD $PROJ $MSBUILD_ARGS $DESIGNER_ARGS \\\r\n        /t:SetupDependenciesForDesigner /bl:designer2.binlog\r\n\r\n    zip logs.zip *.binlog\r\n\r\nAt this point, I could also reproduce the problem with\r\nxamarin-android/master. So, this is a not something we've fixed in\r\nmaster.\r\n\r\nNow... We have `DesignerTests.DesignerBeforeNuGetRestore` which does\r\nalmost *exactly* what this script is doing!\r\n\r\nBut then I tried splitting apart the NuGet restore, to more closely\r\nmatch the script. When calling `/t:Restore` in a separate MSBuild\r\ncall, the existing test we have failed in the exact same way as the\r\nscript: many `javac` errors.\r\n\r\nI reviewed the `binlog` file, looking for any interesting MSBuild\r\ntargets that were skipped:\r\n\r\n    Skipping target \"_BuildLibraryImportsCache\" because all output files are up-to-date with respect to the input files.\r\n\r\nGoing back through @alanmcgovern's notes, he could resolve the problem\r\nby deleting this file:\r\n\r\n    obj/Debug/designtime/libraryimports.cache.stamp\r\n\r\nBut then reviewing, the `Inputs` for `_BuildLibraryImportsCache`, they\r\ndidn't seem to be correct?\r\n\r\n    <Target Name=\"_BuildLibraryImportsCache\"\r\n        Inputs=\"$(MSBuildProjectFullPath);@(ReferencePath);@(ReferenceDependencyPaths);$(_AndroidBuildPropertiesCache)\"\r\n        Outputs=\"$(_AndroidLibraryImportsCache).stamp\">\r\n      <GetImportedLibraries ... CacheFile=\"$(_AndroidLibraryImportsCache)\" />\r\n      <Touch Files=\"$(_AndroidLibraryImportsCache).stamp\" AlwaysCreate=\"True\" />\r\n\r\nIf `<GetImportedLibraries/>` operates on\r\n`$(_AndroidLibraryProjectImportsCache)`, shouldn't it be an `Input`?\r\n\r\nSure enough, adding one more input solved the problem.\r\n\r\nI looked through our git history, and these `Inputs` have been this\r\nway at least since 2016. So this bug has just been here a while?"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9214716932","Type":"IssuesEvent","CreatedAt":"2019-03-10T22:03:02","Actor":"cprice70","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5507","RelatedDescription":"Opened issue \"[Android] Compiled binding causes crash on Android 32 bit device when boolean binding is included.\" (#5507) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCompiled bindings cause the app to crash when a boolean binding is included.  The crash only seems to happen on an Android device with an ARM 32-bit processor; x86 and ARM64 work correctly.  The crash seems to have been introduced with 3.5 or newer.  The included demo app\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build the included demo app and run it on an Android device with an ARM 32bit processor\r\n2. Launching the demo app from the debugger the app will run correctly\r\n3. Close the app and re-launch the app by tapping on the icon.\r\n4. The app will crash when the MainPage is loaded.\r\n\r\n### Expected Behavior\r\nCompiled bindings with boolean bindings should cause the app to crash\r\n\r\n### Actual Behavior\r\nCompiled bindings cause Android apps to crash\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0.169047 or newer\r\n- Last known good version: 3.4.0.1029999\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  N/A\r\n  - Android: Android 8.1\r\n  - UWP:  N/A\r\n- Android Support Library Version: 27.0.2.1\r\n- Nuget Packages: N/A\r\n- Affected Devices: Android device with ARM32 \r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/cprice70/compiled-bindings-demo\r\n\r\n### Crash Info \r\n03-10 18:00:36.920 21874 21874 I MonoDroid: UNHANDLED EXCEPTION:\r\n03-10 18:00:36.964 21874 21874 I MonoDroid: System.NullReferenceException: Object reference not set to an instance of an object\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].ApplyCore (System.Object sourceObject, Xamarin.Forms.BindableObject target, Xamarin.Forms.BindableProperty property, System.Boolean fromTarget) [0x0011b] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].Apply (System.Object context, Xamarin.Forms.BindableObject bindObj, Xamarin.Forms.BindableProperty targetProperty, System.Boolean fromBindingContextChanged) [0x00058] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.ApplyBindings (System.Boolean skipBindingContext, System.Boolean fromBindingContextChanged) [0x00049] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x0005a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.View.OnBindingContextChanged () [0x0000c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x00062] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.TemplatedPage.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00008] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.Page.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.ContentPage.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.BindingContextPropertyChanged (Xamarin.Forms.BindableObject bindable, System.Object oldvalue, System.Object newvalue) [0x0000f] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent) [0x0012a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes) [0x00179] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.SetValue (Xamarin.Forms.BindableProperty property, System.Object value, System.Boolean fromStyle, System.Boolean checkAccess) [0x0003d] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.SetValue (Xamarin.Forms.BindableProperty property, System.Object value) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Xamarin.Forms.BindableObject.set_BindingContext (System.Object value) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at compiled_bindings.MainPage..ctor () [0x00015] in <c12e6c1759fb4c4194381f33ee011d45>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at compiled_bindings.App..ctor () [0x0000f] in <c12e6c1759fb4c4194381f33ee011d45>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at compiled_bindings.Droid.MainActivity.OnCreate (Android.OS.Bundle savedInstanceState) [0x00027] in <c893c1ba2aa140a9ac4141bf008ebf4d>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at Android.App.Activity.n_OnCreate_Landroid_os_Bundle_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_savedInstanceState) [0x00011] in <3faca578033c421aa590cc3addd3b6d8>:0\r\n03-10 18:00:36.964 21874 21874 I MonoDroid:   at (wrapper dynamic-method) System.Object.7(intptr,intptr,intptr)\r\n03-10 18:00:36.976 21874 21874 W art     : JNI RegisterNativeMethods: attempt to register 0 native methods for android.runtime.JavaProxyThrowable\r\n03-10 18:00:36.980 21874 21874 D Mono    : DllImport searching in: '__Internal' ('(null)').\r\n03-10 18:00:36.980 21874 21874 D Mono    : Searching for 'java_interop_jnienv_throw'.\r\n03-10 18:00:36.980 21874 21874 D Mono    : Probing 'java_interop_jnienv_throw'.\r\n03-10 18:00:36.980 21874 21874 D Mono    : Found as 'java_interop_jnienv_throw'.\r\n03-10 18:00:36.980 21874 21874 D AndroidRuntime: Shutting down VM\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime: FATAL EXCEPTION: main\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime: Process: com.cplabs.compiled_bindings, PID: 21874\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].ApplyCore (System.Object sourceObject, Xamarin.Forms.BindableObject target, Xamarin.Forms.BindableProperty property, System.Boolean fromTarget) [0x0011b] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].Apply (System.Object context, Xamarin.Forms.BindableObject bindObj, Xamarin.Forms.BindableProperty targetProperty, System.Boolean fromBindingContextChanged) [0x00058] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObject.ApplyBindings (System.Boolean skipBindingContext, System.Boolean fromBindingContextChanged) [0x00049] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x0005a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.View.OnBindingContextChanged () [0x0000c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x00062] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.TemplatedPage.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00008] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.Page.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.ContentPage.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObject.BindingContextPropertyChanged (Xamarin.Forms.BindableObject bindable, System.Object oldvalue, System.Object newvalue) [0x0000f] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent) [0x0012a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes) [0x00179] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.987 21874 21874 E AndroidRuntime:   at Xamarin.Forms.BindableObject.SetValue (Xamarin.Forms.BindableProperty property, System.Object value, System.Boolean fromStyle, System.Boole\r\n03-10 18:00:36.988 21874 21874 D Error   : ERR: exClass=android.runtime.JavaProxyThrowable\r\n03-10 18:00:36.988 21874 21874 D Error   : ERR: exMsg=System.NullReferenceException: Object reference not set to an instance of an object\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].ApplyCore (System.Object sourceObject, Xamarin.Forms.BindableObject target, Xamarin.Forms.BindableProperty property, System.Boolean fromTarget) [0x0011b] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].Apply (System.Object context, Xamarin.Forms.BindableObject bindObj, Xamarin.Forms.BindableProperty targetProperty, System.Boolean fromBindingContextChanged) [0x00058] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.ApplyBindings (System.Boolean skipBindingContext, System.Boolean fromBindingContextChanged) [0x00049] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x0005a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.View.OnBindingContextChanged () [0x0000c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x00062] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.TemplatedPage.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00008] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.Page.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.ContentPage.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.BindingContextPropertyChanged (Xamarin.Forms.BindableObject bindable, System.Object oldvalue, System.Object newvalue) [0x0000f] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent) [0x0012a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes) [0x00179] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetValue (Xamarin.Forms.BindableProperty property, System.Object value, System.Boolean fromStyle, System.Boolean checkAccess) [0x0003d] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.988 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetVa\r\n03-10 18:00:36.988 21874 21874 D Error   : ERR: file=MainActivity.java\r\n03-10 18:00:36.988 21874 21874 D Error   : ERR: class=md595076e3c7147ab15ca7da7a9a6ba92f3.MainActivity\r\n03-10 18:00:36.988 21874 21874 D Error   : ERR: method=n_onCreate line=-2\r\n03-10 18:00:36.989 21874 21874 D Error   : ERR: stack=android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].ApplyCore (System.Object sourceObject, Xamarin.Forms.BindableObject target, Xamarin.Forms.BindableProperty property, System.Boolean fromTarget) [0x0011b] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Internals.TypedBinding`2[TSource,TProperty].Apply (System.Object context, Xamarin.Forms.BindableObject bindObj, Xamarin.Forms.BindableProperty targetProperty, System.Boolean fromBindingContextChanged) [0x00058] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.ApplyBindings (System.Boolean skipBindingContext, System.Boolean fromBindingContextChanged) [0x00049] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x0005a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.View.OnBindingContextChanged () [0x0000c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetInheritedBindingContext (Xamarin.Forms.BindableObject bindable, System.Object value) [0x00062] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Element.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.TemplatedPage.SetChildInheritedBindingContext (Xamarin.Forms.Element child, System.Object context) [0x00008] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Element.<OnBindingContextChanged>b__74_0 (Xamarin.Forms.BindableObject child, System.Object bc) [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObjectExtensions.PropagateBindingContext[T] (Xamarin.Forms.BindableObject self, System.Collections.Generic.IList`1[T] children, System.Action`2[T1,T2] setChildBindingContext) [0x0002c] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Element.OnBindingContextChanged () [0x00007] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.Page.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.ContentPage.OnBindingContextChanged () [0x00000] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.BindingContextPropertyChanged (Xamarin.Forms.BindableObject bindable, System.Object oldvalue, System.Object newvalue) [0x0000f] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent) [0x0012a] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes) [0x00179] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   at Xamarin.Forms.BindableObject.SetValue (Xamarin.Forms.BindableProperty property, System.Object value, System.Boolean fromStyle, System.Boolean checkAccess) [0x0003d] in <b1baaea67aeb409ca7e75b039f7cca37>:0\r\n03-10 18:00:36.989 21874 21874 D Error   :   a\r\n03-10 18:00:36.989 21874 21874 D Error   : ERR: TOTAL BYTES WRITTEN: 21804\r\n03-10 18:00:36.991  1448  4606 W ActivityManager:   Force finishing activity com.cplabs.compiled_bindings/md595076e3c7147ab15ca7da7a9a6ba92f3.MainActivity\r\n03-10 18:00:37.293  1448  4606 I WindowManager: Screenshot max retries 4 of Token{6bdab47 ActivityRecord{9d56686 u0 com.cplabs.compiled_bindings/md595076e3c7147ab15ca7da7a9a6ba92f3.MainActivity t66 f}} appWin=Window{90ebc3f u0 Starting com.cplabs.compiled_bindings} drawState=4\r\n03-10 18:00:37.294  4501 11394 D ProcSpeedReader: Failed to read freq stats from null\r\n03-10 18:00:37.340  1448 15213 I OpenGLRenderer: Initialized EGL, version 1.4\r\n03-10 18:00:37.531 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21186): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:37.531 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21187): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:37.795  1448  1501 W ActivityManager: Activity pause timeout for ActivityRecord{9d56686 u0 com.cplabs.compiled_bindings/md595076e3c7147ab15ca7da7a9a6ba92f3.MainActivity t66 f}\r\n03-10 18:00:37.796  1448  1501 I ActivityManager: moveHomeStack, setupComplete:true\r\n03-10 18:00:37.802  4501 11394 D ProcSpeedReader: Failed to read freq stats from null\r\n03-10 18:00:37.841 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21188): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:37.841 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21189): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:37.863   423   511 I ThermalEngine: Sensor:/sys/class/power_supply/battery/capacity:0 mC\r\n03-10 18:00:38.284   358   358 I SFPerfTracer:      triggers: (rate: 13:827) (compose: 0:1) (post: 0:80) (render: 0:160) (11:18798 frames) (12:26392)\r\n03-10 18:00:38.284   358   358 D SFPerfTracer:        layers: (5:12) (FocusedStackFrame (0xb4314400): 0:552)* (DimLayer (0xb4315800): 0:257) (StatusBar (0xb4318000): 0:9038) (NavigationBar (0xb4319400): 0:1426)* (com.android.systemui.ImageWallpaper (0xb46b7000): 0:2021) (com.android.launcher3/com.android.launcher3.Launcher (0xb4313000): 0:10)- (DimLayer (0xb431a800): 0:22)* (DimLayer (0xb431bc00): 0:2)* (Starting com.cplabs.compiled_bindings (0xb46b8400): 12:54)* (Application Error: com.cplabs.compiled_bindings (0xb46b9800): 0:12) (com.android.launcher3/com.android.launcher3.Launcher (0xb4313000): 0:3)\r\n03-10 18:00:38.484   423   514 I ThermalEngine: Sensor:max170xx_battery:28000 mC\r\n03-10 18:00:38.924   358   695 I SFPerfTracer:      triggers: (rate: 0:0) (7231 sw vsyncs) (0 skipped) (208:43661 vsyncs) (210:59778)\r\n03-10 18:00:39.851 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21190): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:39.851 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21191): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:40.805   423   507 I ThermalEngine: Sensor:chg_therm:29000 mC\r\n03-10 18:00:41.871 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21192): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:41.871 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21193): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:42.865   423   511 I ThermalEngine: Sensor:/sys/class/power_supply/battery/capacity:0 mC\r\n03-10 18:00:43.891 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21194): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:43.891 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21195): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:44.138   423   509 I ThermalEngine: Sensor:apq_therm:28000 mC\r\n03-10 18:00:45.811   423   507 I ThermalEngine: Sensor:chg_therm:29000 mC\r\n03-10 18:00:45.911 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21196): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:45.911 13972 13972 W pMonitor.worker: type=1400 audit(0.0:21197): avc: denied { search } for uid=10067 name=\"3892\" dev=\"proc\" ino=20184 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:platform_app:s0:c512,c768 tclass=dir permissive=0\r\n03-10 18:00:47.393  5162 18556 W ctxmgr  : [AclManager]No 2 for (accnt=account#-517948760#, com.google.android.gms(10030):IndoorOutdoorProducer, vrsn=12685000, 0, 3pPkg = null ,  3pMdlId = null ,  pid = 5162). Was: 3 for 57, account#-517948760#\r\n03-10 18:00:47.844  1448  1501 W ActivityManager: Activity destroy timeout for ActivityRecord{9d56686 u0 com.cplabs.compiled_bindings/md595076e3c7147ab15ca7da7a9a6ba92f3.MainActivity t66 f}\r\n\r\n\r\n"},{"Id":"9214027471","Type":"PullRequestEvent","CreatedAt":"2019-03-10T16:42:39","Actor":"mfkl","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5506","RelatedDescription":"Opened pull request \"[GTK] Fix NavigationBar check for Layout calc\" (#5506) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe loop was exiting before `current` was being set.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4713\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- GTK\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nBefore:\r\n![](https://i.imgur.com/1OfqZOz.png)\r\n\r\nAfter:\r\n![](https://i.imgur.com/sup7ZNZ.png)\r\n\r\n### Testing Procedure ###\r\n\r\nRun https://github.com/mfkl/gtk-button-bug\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9212929546","Type":"IssuesEvent","CreatedAt":"2019-03-10T06:47:13","Actor":"mfeingol","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5505","RelatedDescription":"Opened issue \"Setting DatePicker MinimumDate unexpectedly changes DatePicker Date property\" (#5505) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSame issue as https://github.com/xamarin/Xamarin.Forms/issues/4413, but now I have a repro. I'd reopen 4413 if I could.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Set up a DatePicker in XAML, bind Date to D and MinimumDate to MD\r\n2. Set MD=X and D=Y where Y > X\r\n3. Observe that D is set to X\r\n\r\n### Expected Behavior\r\n\r\nMinimumDate should only influence Date when less then Date.\r\n\r\n### Actual Behavior\r\n\r\nDate is reset to MinimumDate even when greater than Date.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: 3.6.0.220655\r\n- IDE: VS 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n- Android Support Library Version: 28.0.0.1\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Reproduction Link\r\n\r\n[XamarinFormsSample.zip](https://github.com/xamarin/Xamarin.Forms/files/2949149/XamarinFormsSample.zip)\r\n\r\n"},{"Id":"9211445821","Type":"IssuesEvent","CreatedAt":"2019-03-09T15:28:45","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5504","RelatedDescription":"Opened issue \"[Shell] DisplayAlert crashes\" (#5504) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn this app, go the About and tap Learn More button to launch an alert. iOS crashes.\r\n\r\n```\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.InvalidCastException: Specified cast is not valid.\r\n  at Xamarin.Forms.Platform.iOS.Platform.PageIsChildOfPlatform (Xamarin.Forms.Page page) [0x00002] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:317 \r\n  at Xamarin.Forms.Platform.iOS.Platform.<.ctor>b__7_1 (Xamarin.Forms.Page sender, Xamarin.Forms.Internals.AlertArguments arguments) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:51 \r\n  at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0003b] in /Library/Frameworks/Xamarin.iOS.framework/Ver\r\nsions/12.6.0.23/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/MonoMethod.cs:305 \r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.x, 3.6.0 (and probably all the 4.0.x)\r\n\r\n### Reproduction Link\r\n\r\n[ShellAlerty.zip](https://github.com/xamarin/Xamarin.Forms/files/2948530/ShellAlerty.zip)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9208233200","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:31:54","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5746","RelatedDescription":"Merged pull request \"[xharness] Simplify/unify the code to load simulators/devices.\" (#5746) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9208229044","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:31:11","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5745","RelatedDescription":"Merged pull request \"[tests] Check all architectures when verifying public symbols.\" (#5745) at xamarin/xamarin-macios","RelatedBody":"Otherwise we'd only check x86_64 (the executing architecture) if the Mach-O\nfile had that architecture.\n\nThis also means updating the whitelisted symbols."},{"Id":"9208210493","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:27:54","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5744","RelatedDescription":"Merged pull request \"[tests] Don't run BitcodeNotSupported tests on watchOS.\" (#5744) at xamarin/xamarin-macios","RelatedBody":"Ref: https://github.com/mono/mono/pull/13007"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":139,"FavoriteCount":67,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":8,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":17,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":259,"FavoriteCount":128,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":21,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":14,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":25,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":51,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2019-03-11T05:30:51.8938619Z","RunDurationInMilliseconds":2882}