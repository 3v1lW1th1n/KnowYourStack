{"Data":{"Blog":{"FeedItems":[{"Title":"Write Better Code Faster with Roslyn Analyzers","PublishedOn":"2019-07-10T16:40:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Roslyn, the .NET compiler platform, helps you catch bugs even before you run your code. One example is Roslynâ€™s spellcheck analyzer that is built into Visual Studio. Letâ€™s say you are creating a...","Href":"https://devblogs.microsoft.com/dotnet/write-better-code-faster-with-roslyn-analyzers/","RawContent":null},{"Title":".NET Core July 2019 Updates â€“ 2.1.12 and 2.2.6","PublishedOn":"2019-07-09T17:50:51+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core July 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a...","Href":"https://devblogs.microsoft.com/dotnet/net-core-july-2019/","RawContent":null},{"Title":".NET Framework July 2019 Security and Quality Rollup","PublishedOn":"2019-07-09T17:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the July 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update for .NET Framework.\nSecurity\nCVE-2019-1006 â€“Â WCF/WIF SAML Token Authentication Bypass...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Apache Sparkâ„¢ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet tryÂ a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"WithÂ .NET Core 3.0 Preview 6Â out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":43,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace calledÂ System.Text.JsonÂ with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9971220766","Type":"IssuesEvent","CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Opened issue \"System.Text.Json usability study results\" (#117) at dotnet/announcements","RelatedBody":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies ðŸ˜Š\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304."},{"Id":"9963969636","Type":"IssuesEvent","CreatedAt":"2019-07-08T03:13:39","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Opened issue \"Updates to releases.json (.NET Core release metadata)\" (#116) at dotnet/announcements","RelatedBody":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, msbuild, nuget, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is a partial example of the new array based on the upcoming July update. \r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n  \"sdks\": [\r\n    {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": [\r\n            {\r\n            \"name\": \"\",\r\n            \"rid\": \"\",\r\n            \"url\": \"\",\r\n            \"hash\": \"\"\r\n            }\r\n        ]\r\n    }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the communitiy which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility comprimises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n"},{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10006401309","Type":"IssuesEvent","CreatedAt":"2019-07-13T22:44:29","Actor":"EgorBo","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25684","RelatedDescription":"Opened issue \"Reduce coreclr and clrjit sizes on macOS via -Oz and -fno-unroll-loops\" (#25684) at dotnet/coreclr","RelatedBody":"I tested different flags passed to clang on macOS to build `libcoreclr.dylib` and `libclrjit.dylib`:\r\n\r\n![image](https://user-images.githubusercontent.com/523221/61177129-50482300-a5d6-11e9-92ac-8f42edab7ce3.png)\r\n\r\nso `-fno-unroll-loops` saves 200kb on these two files (btw, this option is disabled by default in Xcode).\r\n\r\n`-Oz -fno-unroll-loops` saves 1.8Mb! I am not sure about the performance penalties yet but 1.8 Mb sounds nice.\r\n\r\nThus, a minimal \"Hello world\" self-contained x64 app can be less than 11mb or (4.5mb if compressed)\r\n![image](https://user-images.githubusercontent.com/523221/61177201-d5800780-a5d7-11e9-9d61-3791c010b686.png)\r\n"},{"Id":"10006361692","Type":"PullRequestEvent","CreatedAt":"2019-07-13T22:16:00","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25677","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#25677) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n"},{"Id":"10006361433","Type":"PullRequestEvent","CreatedAt":"2019-07-13T22:15:48","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25678","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#25678) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190712.11\r\n- **Date Produced**: 7/13/2019 6:12 AM\r\n- **Commit**: 1841042b99062de13dc80098cede9413be569238\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19362.11\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19362.11\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n"},{"Id":"10006361178","Type":"PullRequestEvent","CreatedAt":"2019-07-13T22:15:38","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25679","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#25679) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n"},{"Id":"10006360704","Type":"PullRequestEvent","CreatedAt":"2019-07-13T22:15:18","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25674","RelatedDescription":"Merged pull request \"Fix use of uninitialized variables in managed decimal implementation\" (#25674) at dotnet/coreclr","RelatedBody":"I have noticed that decimal multiplications and divisions return bogus results intermittently while working on unrelated issues. It turns out a few places in the new managed decimal implementation use uninitialized stack variables. I have added debug-only instrumentation to catch these."},{"Id":"10006358744","Type":"IssuesEvent","CreatedAt":"2019-07-13T22:13:54","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25683","RelatedDescription":"Opened issue \"Fill uninitialized address-taken locals with poison pattern in debug builds\" (#25683) at dotnet/coreclr","RelatedBody":"C/C++ compilers have this debugging/diagnostic aid for years.\r\n\r\nMore context: https://github.com/dotnet/coreclr/pull/25674#issuecomment-511118490\r\n\r\nRelated to: https://github.com/dotnet/csharplang/issues/868"},{"Id":"10006258883","Type":"IssuesEvent","CreatedAt":"2019-07-13T21:09:49","Actor":"Tanawat1990","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25682","RelatedDescription":"Opened issue \"pouri90\" (#25682) at dotnet/coreclr","RelatedBody":"Hello, my name is Thanawat."},{"Id":"10006256754","Type":"IssuesEvent","CreatedAt":"2019-07-13T21:08:25","Actor":"Tanawat1990","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25681","RelatedDescription":"Opened issue \"darc-master-2b7c6a8e-5fee-4ddd-a606-4df0514f48a1\" (#25681) at dotnet/coreclr","RelatedBody":"darc-master-2b7c6a8e-5fee-4ddd-a606-4df0514f48a1\r\n\r\n_Originally posted by @Tanawat1990 in https://github.com/dotnet/coreclr/pull/25679#issuecomment-511153657_"},{"Id":"10005609628","Type":"IssuesEvent","CreatedAt":"2019-07-13T15:19:58","Actor":"AndreyAkinshin","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25680","RelatedDescription":"Opened issue \"Tiered jitting and BenchmarkDotNet\" (#25680) at dotnet/coreclr","RelatedBody":".NET Core 3.0 has tiered jitting enabled by default which is pretty important in the context of benchmarking: it may spoil benchmark results if the number of warmup iterations is not enough. It seems it's not such a big issue since .NET Core 3.0 preview 4 (after https://github.com/dotnet/coreclr/pull/23599 was merged). I didn't observe any noticeable tiered jitting effects with .NET Core 3.0 preview 6: all of my benchmarks produce pretty stable results. However, the internal logic of the tiered jitting can be changed in the future versions of .NET Core, so I would like to discuss how can we prepare for the upcoming changes. Currently, I have the following questions:\r\n\r\n* Is it possible to get the current values of the external configuration knobs like `TieredCompilation` or `TC_QuickJit` from the runtime? It will be nice to see if the tiered complication is enabled or disabled in the environment section of the BenchmarkDotNet output. Of course, we can use the knowledge of the current environment variable values and the corresponding defaults for each version of .NET Core, but I'm looking for a more reliable way that will not depend on the specific .NET Core version.\r\n* Is it possible to get the current values of the internal configuration knobs like `TC_CallCountThreshold` or `TC_CallCountingDelayMs`? It will be great to use these values in the internal BenchmarkDotNet heuristics (e.g., we can always try to invoke the benchmarked method at least `TC_CallCountThreshold` times).\r\n* Is it a good idea to disable tiered jitting in BenchmarkDotNet by default?\r\n* Is it possible to switch the tiered jitting behavior in runtime? (Relevant for the InProcess BenchmarkDotNet mode)\r\n* Is it possible to force the runtime to use a specific jit tier for a specific method? (Can be useful for performance comparison of different tiers).\r\n* Does it make sense to make any other adjustments for the tiered jitting on the BenchmarkDotNet side?\r\n\r\n/cc @kouvel @noahfalk @adamsitnik \r\n\r\nSome relevant discussions: https://github.com/dotnet/coreclr/pull/23599 https://github.com/dotnet/coreclr/issues/19751 https://github.com/dotnet/coreclr/issues/22998 https://github.com/dotnet/core/issues/2257 https://github.com/dotnet/BenchmarkDotNet/issues/1125"},{"Id":"10005290976","Type":"PullRequestEvent","CreatedAt":"2019-07-13T12:33:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25679","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#25679) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10006910217","Type":"PullRequestEvent","CreatedAt":"2019-07-14T05:21:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11880","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#11880) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.09\r\n- **Date Produced**: 7/14/2019 4:25 AM\r\n- **Commit**: 36ad04d936c4613c1b1599b899071d411fe5c9b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-09\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10006869888","Type":"PullRequestEvent","CreatedAt":"2019-07-14T04:51:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11880","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11880) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.09\r\n- **Date Produced**: 7/14/2019 4:25 AM\r\n- **Commit**: 36ad04d936c4613c1b1599b899071d411fe5c9b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-09\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10006866799","Type":"PullRequestEvent","CreatedAt":"2019-07-14T04:48:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11879","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#11879) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.08\r\n- **Date Produced**: 7/14/2019 4:18 AM\r\n- **Commit**: 36ad04d936c4613c1b1599b899071d411fe5c9b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-08\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-08\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10006828319","Type":"PullRequestEvent","CreatedAt":"2019-07-14T04:18:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11879","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11879) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.08\r\n- **Date Produced**: 7/14/2019 4:18 AM\r\n- **Commit**: 36ad04d936c4613c1b1599b899071d411fe5c9b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-08\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-08\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10006771118","Type":"PullRequestEvent","CreatedAt":"2019-07-14T03:33:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11878","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#11878) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.07\r\n- **Date Produced**: 7/14/2019 3:02 AM\r\n- **Commit**: 3ee8e1e4e2259b66f5f3e74cc6a8fecd87dfd169\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-07\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-07\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-07\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10006730473","Type":"PullRequestEvent","CreatedAt":"2019-07-14T03:03:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11878","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11878) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.07\r\n- **Date Produced**: 7/14/2019 3:02 AM\r\n- **Commit**: 3ee8e1e4e2259b66f5f3e74cc6a8fecd87dfd169\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-07\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-07\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-07\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10006650923","Type":"PullRequestEvent","CreatedAt":"2019-07-14T02:03:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11877","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#11877) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.06\r\n- **Date Produced**: 7/14/2019 1:32 AM\r\n- **Commit**: 0613c0429e419649cc2688d314aee9b33ee8b967\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10006612822","Type":"PullRequestEvent","CreatedAt":"2019-07-14T01:33:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11877","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11877) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.06\r\n- **Date Produced**: 7/14/2019 1:32 AM\r\n- **Commit**: 0613c0429e419649cc2688d314aee9b33ee8b967\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10005329613","Type":"PullRequestEvent","CreatedAt":"2019-07-13T12:54:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1339","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1339) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190712.11\r\n- **Date Produced**: 7/13/2019 6:12 AM\r\n- **Commit**: 1841042b99062de13dc80098cede9413be569238\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19362.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10005311363","Type":"PullRequestEvent","CreatedAt":"2019-07-13T12:44:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1339","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1339) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190712.11\r\n- **Date Produced**: 7/13/2019 6:12 AM\r\n- **Commit**: 1841042b99062de13dc80098cede9413be569238\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19362.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10005257388","Type":"PullRequestEvent","CreatedAt":"2019-07-13T12:14:08","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1338","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1338) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10005239974","Type":"PullRequestEvent","CreatedAt":"2019-07-13T12:04:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1338","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1338) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10003536967","Type":"PullRequestEvent","CreatedAt":"2019-07-12T21:43:16","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1326","RelatedDescription":"Merged pull request \"Expose AesCcm and AesGcm\" (#1326) at dotnet/standard","RelatedBody":"Fixes #1295.\r\n\r\n/cc @alecgn"},{"Id":"10003536947","Type":"IssuesEvent","CreatedAt":"2019-07-12T21:43:16","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1295","RelatedDescription":"Closed issue \"Consider adding AesGcm to .NET Standard 2.1\" (#1295) at dotnet/standard","RelatedBody":""},{"Id":"10003176534","Type":"IssuesEvent","CreatedAt":"2019-07-12T20:31:42","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1337","RelatedDescription":"Closed issue \"netcoreapp2.2 referencing netstandard2.0 dependency conflict\" (#1337) at dotnet/standard","RelatedBody":"I have a netcoreapp2.2 project that references a netstandard2.0 project. When I try to build the solution I get the warning below in the log and the build fails completely in Azure Devops.\r\n\r\nAll NuGet packages are up to date.\r\n\r\nI did some searching to find existing issues but they all seem to reference .Net 4.6 or .Net 4.7 and .Net Standard rather than .Net Core\r\n\r\n```\r\n2>    Dependency \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n2>        Could not resolve this reference. Could not locate the assembly \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n2>        Required by \"System.Reflection.Metadata\".\r\n2>    There was a conflict between \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n2>        \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was chosen because it was primary and \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was not.\r\n2>        References which depend on \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" [C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll].\r\n2>            C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\r\n2>              Project file item includes which caused reference \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\".\r\n2>                C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\r\n2>        References which depend on \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" [].\r\n2>            C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\r\n2>              Project file item includes which caused reference \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\".\r\n2>                System.Reflection.Metadata\r\n2>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2106,5): warning MSB3277: Found conflicts between different versions of \"System.Runtime\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed.\r\n2>  Done executing task \"ResolveAssemblyReference\".\r\n```"},{"Id":"10001168465","Type":"IssuesEvent","CreatedAt":"2019-07-12T15:01:03","Actor":"jons-aura","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1337","RelatedDescription":"Opened issue \"netcoreapp2.2 referencing netstandard2.0 dependency conflict\" (#1337) at dotnet/standard","RelatedBody":"I have a netcoreapp2.2 project that references a netstandard2.0 project. When I try to build the solution I get the warning below in the log and the build fails completely in Azure Devops.\r\n\r\nAll NuGet packages are up to date.\r\n\r\nI did some searching to find existing issues but they all seem to reference .Net 4.6 or .Net 4.7 and .Net Standard rather than .Net Core\r\n\r\n```\r\n2>    Dependency \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n2>        Could not resolve this reference. Could not locate the assembly \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n2>        Required by \"System.Reflection.Metadata\".\r\n2>    There was a conflict between \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n2>        \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was chosen because it was primary and \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was not.\r\n2>        References which depend on \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" [C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll].\r\n2>            C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\r\n2>              Project file item includes which caused reference \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\".\r\n2>                C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\r\n2>        References which depend on \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" [].\r\n2>            C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\r\n2>              Project file item includes which caused reference \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\".\r\n2>                System.Reflection.Metadata\r\n2>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2106,5): warning MSB3277: Found conflicts between different versions of \"System.Runtime\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed.\r\n2>  Done executing task \"ResolveAssemblyReference\".\r\n```"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10006801747","Type":"IssuesEvent","CreatedAt":"2019-07-14T03:57:47","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39461","RelatedDescription":"Opened issue \"HTTP2: Dispose on response stream before stream is fully consumed does not remove stream from the stream dictionary\" (#39461) at dotnet/corefx","RelatedBody":"If you dispose the response stream before consuming all the data, we do not remove the Http2Stream from the connection's stream dictionary. This means that the connection still thinks the Http2Stream is open, and the connection will never go away."},{"Id":"10006779920","Type":"IssuesEvent","CreatedAt":"2019-07-14T03:40:27","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39460","RelatedDescription":"Opened issue \"HTTP2 Duplex: Receiving non-success status code does not allow response body to be read\" (#39460) at dotnet/corefx","RelatedBody":"When we receive a non-success status code (e.g. 403), we stop sending the request body. However, we also immediately send a RST_STREAM, which causes the server to stop sending the response body if it hasn't finished already. This means the client cannot reliably read the response body. (Note this works for HTTP/1.1, though we only do this when Expect: 100-continue is used; for HTTP2 we always do it.)\r\n\r\nWe should simply stop sending the request body and defer the RST_STREAM until the response body has been fully read."},{"Id":"10006773695","Type":"IssuesEvent","CreatedAt":"2019-07-14T03:35:30","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39459","RelatedDescription":"Opened issue \"HTTP2: Exception during request body send does not send a RST_STREAM to the server\" (#39459) at dotnet/corefx","RelatedBody":"If an exception occurs while sending the request body (i.e. HttpContent.SerializeToStreamAsync), we do not send a RST_STREAM to the server. We should.\r\n\r\nI'm working on a PR to add a test for this.\r\n\r\n"},{"Id":"10006769893","Type":"IssuesEvent","CreatedAt":"2019-07-14T03:32:16","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39458","RelatedDescription":"Opened issue \"HTTP2: Receiving RST_STREAM from server does not interrupt request body send\" (#39458) at dotnet/corefx","RelatedBody":"If you do a POST and send request content, and the server sends a RST_STREAM, we continue to allow writes on the request body stream, and in fact we keep sending DATA frames to the server.\r\n\r\nInstead, we should fail the next attempted write on the request stream and not send any more DATA frames to the server.\r\n\r\nI'm working on a PR to add a test for this."},{"Id":"10006566793","Type":"IssuesEvent","CreatedAt":"2019-07-14T00:55:32","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39457","RelatedDescription":"Opened issue \"Need tests for JsonSerializerOptions.GetConverter\" (#39457) at dotnet/corefx","RelatedBody":"We should test that `GetConverter` on a default `JsonSerializerOptions` always returns expected converters for given types. (Even though they are mostly currently internal, we should always get the bool converter for bool, etc.)\r\n\r\nIn addition to validating that we get the expected converter, we should add tests to ensure they don't try to dereference options sent to the `Read`/`Write`/`GetConverter` methods. (I.e. get the converter, then call it's methods with a null `JsonSerializerOptions`.)\r\n\r\ncc: @steveharter"},{"Id":"10006480490","Type":"IssuesEvent","CreatedAt":"2019-07-13T23:45:55","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34033","RelatedDescription":"Reopened issue \"SslStream object disposed exception\" (#34033) at dotnet/corefx","RelatedBody":"_From @timmydo on Saturday, 08 December 2018 21:55:49_\r\n\r\nI'm not sure if this is the right place to report this, but I'm seeing this exception occasionally:\r\n\r\nkubernetes docker pod uname -a:\r\nLinux platform-prod-577cf48b4b-wrg7x 4.15.0-1030-azure #31~16.04.1-Ubuntu SMP Tue Oct 30 \r\n\r\ncontext:\r\nrunning kestrel behind nginx on linux in docker image based on dotnet:2.1-aspnetcore-runtime\r\n```\r\n19:40:01 UTC 2018 x86_64 GNU/Linux\r\nUnhandled Exception: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'SslStream'.\r\n   at System.Net.Security.SslState.ThrowIfExceptional()\r\n   at System.Net.Security.SslState.CheckThrow(Boolean authSuccessCheck, Boolean shutdownCheck)\r\n   at System.Net.Security.SslState.CheckOldKeyDecryptedData(Memory`1 buffer)\r\n   at System.Net.Security.SslState.HandleQueuedCallback(Object& queuedStateRequest)\r\n   at System.Net.Security.SslState.FinishHandshakeRead(Int32 newState)\r\n   at System.Net.Security.SslState.FinishHandshake(Exception e, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.RehandshakeCompleteCallback(IAsyncResult result)\r\n   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)\r\n   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)\r\n   at System.Net.AsyncProtocolRequest.CompleteUserWithError(Exception e)\r\n   at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\npod error code:\r\n\r\n```\r\nLast State:     Terminated\r\n      Reason:       Error\r\n      Exit Code:    139\r\n      Started:      Fri, 07 Dec 2018 17:06:46 -0800\r\n      Finished:     Fri, 07 Dec 2018 23:48:04 -0800\r\n```\r\n\r\nlet me know if there is more info I could provide. thanks.\r\n\r\n_Copied from original issue: aspnet/KestrelHttpServer#3111_"},{"Id":"10006479768","Type":"PullRequestEvent","CreatedAt":"2019-07-13T23:45:24","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39456","RelatedDescription":"Opened pull request \"[release/2.1] Catch exception in ssl handshake so it can be propagated to async caller\" (#39456) at dotnet/corefx","RelatedBody":"Port fix from PR #34089 (.NET Core 3.0) to release/2.1 LTS branch.\r\n\r\nFixes #34033"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10006838918","Type":"IssuesEvent","CreatedAt":"2019-07-14T04:26:42","Actor":"panopticoncentral","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37212","RelatedDescription":"Opened issue \"VisualStudioOptionsProcessor holds on to command-line string causing heap growth\" (#37212) at dotnet/roslyn","RelatedBody":"On a large .NET Core-based solution I'm analyzing, about 2.7% of the heap (or 55Mb) is taken up by VisualStudioOptionsProcessor. The issue seems to be that the class holds on to a string that contains the entire command-line, which in the case of .NET Core projects can be extremely long due to all the framework reference parameters. This seems to be somewhat unnecessary as the only reason it appears we hold on to the string is so that if a ruleset file changes we can update the current diagnostic settings. It seems like we could simply remember only what diagnostic settings were specified on the command-line and use that to calculate the effective diagnostic settings instead when a ruleset file changes, without holding on to the entire string."},{"Id":"10006792523","Type":"IssuesEvent","CreatedAt":"2019-07-14T03:50:36","Actor":"panopticoncentral","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37211","RelatedDescription":"Closed issue \"Metadata property storage is inefficient in VisualStudioProject\" (#37211) at dotnet/roslyn","RelatedBody":"In heap dumps of large CPS solutions, ~15% of the heap is taken up by VisualStudioProject instances. The issue is VisualStudioProject._allMetadataReferences. While most metadata references have the default metadata properties, every time a metadata reference is added the code currently adds an entry in _allMetadataReferences pointing to a list of metadata properties. First, if the metadata properties are default and there's only one reference, we're wasting space by allocating the list in the first place. But second, this list starts with an initial capacity of 4, which means that we're wasting quadruple the space. For every metadata reference. Of which there are a _lot_ in .NET Core.\r\n\r\nThe solution is just to optimize the case where there is only one of the metadata reference and it has the default properties. So:\r\n\r\n* `!_allMetadataReferences.TryGetValue(path, out var list)` means \"we have not seen this reference\"\r\n* `_allMetadataReferences.TryGetValue(path, out var list) && list == null` means \"we have seen only one of this reference and its metadata properties are the default ones.\"\r\n* Otherwise, we've either seen this reference multiple times, or the one time we saw it its metadata properties were not the default.\r\n\r\nI chose not to optimize the remove path (i.e. you have multiple references and you remove every one except the default properties) because it seemed to be a pretty esoteric situation."},{"Id":"10006791705","Type":"IssuesEvent","CreatedAt":"2019-07-14T03:50:00","Actor":"panopticoncentral","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37211","RelatedDescription":"Opened issue \"Metadata property storage is inefficient in VisualStudioProject\" (#37211) at dotnet/roslyn","RelatedBody":"In heap dumps of large CPS solutions, ~15% of the heap is taken up by VisualStudioProject instances. The issue is VisualStudioProject._allMetadataReferences. While most metadata references have the default metadata properties, every time a metadata reference is added the code currently adds an entry in _allMetadataReferences pointing to a list of metadata properties. First, if the metadata properties are default and there's only one reference, we're wasting space by allocating the list in the first place. But second, this list starts with an initial capacity of 4, which means that we're wasting quadruple the space. For every metadata reference. Of which there are a _lot_ in .NET Core.\r\n\r\nThe solution is just to optimize the case where there is only one of the metadata reference and it has the default properties. So:\r\n\r\n* `!_allMetadataReferences.TryGetValue(path, out var list)` means \"we have not seen this reference\"\r\n* `_allMetadataReferences.TryGetValue(path, out var list) && list == null` means \"we have seen only one of this reference and its metadata properties are the default ones.\"\r\n* Otherwise, we've either seen this reference multiple times, or the one time we saw it its metadata properties were not the default.\r\n\r\nI chose not to optimize the remove path (i.e. you have multiple references and you remove every one except the default properties) because it seemed to be a pretty esoteric situation."},{"Id":"10006557015","Type":"IssuesEvent","CreatedAt":"2019-07-14T00:46:53","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37210","RelatedDescription":"Opened issue \"Test broken by recent change to target-type switch expressions``\" (#37210) at dotnet/roslyn","RelatedBody":"The following test in `roslyn\\src\\EditorFeatures\\CSharpTest\\ExtractMethod\\ExtractMethodTests.LanguageInteraction.cs` is broken by the change to make switch expressions target-typed.\r\n\r\n``` c#\r\n            [WorkItem(545180, \"http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/545180\")]\r\n            [Fact, Trait(Traits.Feature, Traits.Features.ExtractMethod)]\r\n            public async Task NodeHasSyntacticErrors()\r\n            {\r\n                var code = @\"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Linq.Expressions;\r\n \r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        Expression<Func<int>> f3 = ()=>[|switch {|]\r\n \r\n        };\r\n    }\r\n}\r\n\";\r\n                await ExpectExtractMethodToFailAsync(code);\r\n            }\r\n```\r\n"},{"Id":"10006548131","Type":"IssuesEvent","CreatedAt":"2019-07-14T00:39:24","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32572","RelatedDescription":"Closed issue \"[Question] Why the output is CS0165 when using a Null-Conditional Operator.\" (#32572) at dotnet/roslyn","RelatedBody":"**Steps to Reproduce**:\r\n\r\n1. https://sharplab.io/#v2:D4AQDABCCMAsDcBYAUCkBmKAmCAxA9vhCgN4TnHIUQAOATgJYBuAhgC4CmEdHLAJvgB2AGwCeEACIMAxmwZCWdUQB4YYADRRoYAHwQA+gCNFEALwRBHAO6SZchUtXbNanQAoAlEioUU1DFqQAOIcbG5qEADWHKIeZnpGigD8AHQAKkohbABqLMIArhxu0aKa+PlsEKx0VXmFcabmbHSFlNTUSbUFXH7t5ABcEHwcAGYs+cJs3gC+QA==\r\n\r\nGiven the following C# example:\r\n\r\n```cs\r\nusing System.Collections.Generic;\r\n\r\npublic class Foo \r\n{    \r\n    private readonly Dictionary<string, string> _bar = new Dictionary<string, string>();\r\n    \r\n    public string Get(string key) => _bar?.TryGetValue(key, out var value) == true \r\n        ? value \r\n        : default;\r\n}\r\n```\r\n\r\nThe following result is returned:\r\n\r\n-  CS0165: Use of unassigned local variable 'value'\r\n\r\nWhen I adjust the C# example without the Null-Conditional Operator:\r\n\r\n```cs\r\nusing System.Collections.Generic;\r\n\r\npublic class Foo \r\n{\r\n    \r\n    private readonly Dictionary<string, string> _bar = new Dictionary<string, string>();\r\n    \r\n    public string Get(string key) => _bar != null && _bar.TryGetValue(key, out var value) \r\n        ? value \r\n        : default;\r\n}\r\n```\r\nthis will compile without any error(s). So my question is, aren't these essentially the same? If not could you elaborate on why the output result is CS0165?"},{"Id":"10006534867","Type":"IssuesEvent","CreatedAt":"2019-07-14T00:28:44","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33126","RelatedDescription":"Closed issue \"Warning 4014 (not awaited task) doesn't work properly when a method returns Task<Task>\" (#33126) at dotnet/roslyn","RelatedBody":"```csharp\r\npublic static Task ReturnTask() => Task.CompletedTask;\r\npublic static Task<Task> ReturnTaskOfTask() => Task.FromResult(Task.CompletedTask);\r\n\r\n\r\npublic async Task Main()\r\n{\r\n  ReturnTask(); // Gives warning - as expected\r\n  ReturnTaskOfTask(); // Gives warning - as expected\r\n  await ReturnTask(); // No warning - as expected\r\n  await ReturnTaskOfTask(); // No warning - probably a bug\r\n  await await ReturnTaskOfTask(); // No warning - as expected\r\n}\r\n```\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/405018/warning-4014-not-awaited-task-doesnt-work-properly.html\r\nVSTS ticketId: 748615_\r\n_These are the original issue comments:_\r\n(no comments)\r\n_These are the original issue solutions:_\r\n(no solutions)"},{"Id":"10006531400","Type":"IssuesEvent","CreatedAt":"2019-07-14T00:25:55","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/34865","RelatedDescription":"Closed issue \"Unloadable Assembly Produced for structs containing struct of T, even when T avoids circularity\" (#34865) at dotnet/roslyn","RelatedBody":"**Version Used**:  VS2017 with all updates applies, also dotnet core 2.2.101\r\n\r\n**Steps to Reproduce**:\r\n1. Compile and run the following:\r\n```csharp\r\nusing System;\r\n\r\nnamespace StructuralMadness\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tpublic static void Main()\r\n\t\t{\r\n\t\t\tConsole.WriteLine(new MyThing());\r\n\t\t}\r\n\r\n\t\tstruct IdOf<T> { }\r\n\r\n\t\tstruct MyThing\r\n\t\t{\r\n\t\t\tpublic IdOf<MyThing> Id;\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n**Expected Behavior**:\r\nPrint: StructuralMadness.Program+MyThing\r\n**Actual Behavior**:\r\nCrashes with:\r\n```\r\nUnhandled Exception: System.TypeLoadException: Could not load type 'StructuralMadness.Program+MyThing' from assembly 'ConsoleApp3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at StructuralMadness.Program.Main()\r\n```\r\n\r\nSubstituting either of the \"struct\" for class avoids the issue. \r\nI'm assuming somewhere there's a problem in assuming the size of \"T\" needs to be fully resolved before instantiation. "}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10006859871","Type":"PullRequestEvent","CreatedAt":"2019-07-14T04:43:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7613","RelatedDescription":"Merged pull request \"Add workaround for missing ClearInitLocals CoreLib transform\" (#7613) at dotnet/corert","RelatedBody":"Ideally, we would use the same transform as CoreCLR CoreLib. However, integrating the ILLinker package used for that into CoreRT build does not look simple. For now, add a workaround to ilc."},{"Id":"10006734629","Type":"PullRequestEvent","CreatedAt":"2019-07-14T03:06:07","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7613","RelatedDescription":null,"RelatedBody":"Ideally, we would use the same transform as CoreCLR CoreLib. However, integrating the ILLinker package used for that into CoreRT build does not look simple. For now, add a workaround to ilc."},{"Id":"10006734572","Type":"PullRequestEvent","CreatedAt":"2019-07-14T03:06:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7613","RelatedDescription":"Closed pull request \"Add workaround for missing ClearInitLocals CoreLib transform\" (#7613) at dotnet/corert","RelatedBody":"Ideally, we would use the same transform as CoreCLR CoreLib. However, integrating the ILLinker package used for that into CoreRT build does not look simple. For now, add a workaround to ilc."},{"Id":"10006734219","Type":"PullRequestEvent","CreatedAt":"2019-07-14T03:05:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7616","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7616) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"10006447666","Type":"PullRequestEvent","CreatedAt":"2019-07-13T23:19:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7615","RelatedDescription":"Merged pull request \"Normalize instantiations in reflection method body scanner\" (#7615) at dotnet/corert","RelatedBody":"Noticed we were hitting asserts compiling Draw2D. We were ending up reflection enabling a hybrid `<object, __Canon>` instantiation."},{"Id":"10006367155","Type":"PullRequestEvent","CreatedAt":"2019-07-13T22:20:02","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7616","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7616) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10006257017","Type":"PullRequestEvent","CreatedAt":"2019-07-13T21:08:37","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7615","RelatedDescription":"Opened pull request \"Normalize instantiations in reflection method body scanner\" (#7615) at dotnet/corert","RelatedBody":"Noticed we were hitting asserts compiling Draw2D. We were ending up reflection enabling a hybrid `<object, __Canon>` instantiation."},{"Id":"10004360963","Type":"PullRequestEvent","CreatedAt":"2019-07-13T03:13:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7614","RelatedDescription":"Merged pull request \"Return HardLimitBytes from GCMemoryInfo.TotalAvailableMemoryBytes (#2â€¦\" (#7614) at dotnet/corert","RelatedBody":"â€¦5437)"},{"Id":"10004173672","Type":"PullRequestEvent","CreatedAt":"2019-07-13T01:22:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7614","RelatedDescription":null,"RelatedBody":"â€¦5437)"},{"Id":"10004173632","Type":"PullRequestEvent","CreatedAt":"2019-07-13T01:22:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7614","RelatedDescription":"Closed pull request \"Return HardLimitBytes from GCMemoryInfo.TotalAvailableMemoryBytes (#2â€¦\" (#7614) at dotnet/corert","RelatedBody":"â€¦5437)"},{"Id":"10001971868","Type":"PullRequestEvent","CreatedAt":"2019-07-12T17:02:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7612","RelatedDescription":"Merged pull request \"Split out a couple more JitInterface methods\" (#7612) at dotnet/corert","RelatedBody":"Went over CorInfoImpl.cs and kicked out a couple more methods that are CoreRT specific. Calling into them in ReadyToRun mode would either crash the compiler or produce wrong code."},{"Id":"10001892613","Type":"PullRequestEvent","CreatedAt":"2019-07-12T16:48:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7614","RelatedDescription":"Opened pull request \"Return HardLimitBytes from GCMemoryInfo.TotalAvailableMemoryBytes (#2â€¦\" (#7614) at dotnet/corert","RelatedBody":"â€¦5437)"},{"Id":"10001536398","Type":"PullRequestEvent","CreatedAt":"2019-07-12T15:51:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7613","RelatedDescription":"Opened pull request \"Add workaround for missing ClearInitLocals CoreLib transform\" (#7613) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10005531923","Type":"PullRequestEvent","CreatedAt":"2019-07-13T14:41:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3418","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#3418) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n"},{"Id":"10005450246","Type":"PullRequestEvent","CreatedAt":"2019-07-13T14:00:06","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3417","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#3417) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"10005332205","Type":"PullRequestEvent","CreatedAt":"2019-07-13T12:56:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3418","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#3418) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"467773581","IsPullRequest":false,"CreatedAt":"2019-07-13T22:44:29","Actor":"EgorBo","Number":"25684","RawContent":null,"Title":"Reduce coreclr and clrjit sizes on macOS via -Oz and -fno-unroll-loops","State":"open","Body":"I tested different flags passed to clang on macOS to build `libcoreclr.dylib` and `libclrjit.dylib`:\r\n\r\n![image](https://user-images.githubusercontent.com/523221/61177129-50482300-a5d6-11e9-92ac-8f42edab7ce3.png)\r\n\r\nso `-fno-unroll-loops` saves 200kb on these two files (btw, this option is disabled by default in Xcode).\r\n\r\n`-Oz` (implies `-fno-unroll-loops`) saves 2Mb! I am not sure about the performance penalties yet but 2 Mb sounds nice.\r\n\r\nThus, a minimal \"Hello world\" self-contained x64 app can be less than 11mb or (4.5mb if compressed)\r\n![image](https://user-images.githubusercontent.com/523221/61177201-d5800780-a5d7-11e9-9d61-3791c010b686.png)\r\n","Url":"https://github.com/dotnet/coreclr/issues/25684","RelatedDescription":"Open issue \"Reduce coreclr and clrjit sizes on macOS via -Oz and -fno-unroll-loops\" (#25684)"},{"Id":"467713851","IsPullRequest":true,"CreatedAt":"2019-07-13T22:15:59","Actor":"dotnet-maestro[bot]","Number":"25677","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25677","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25677)"},{"Id":"467714566","IsPullRequest":true,"CreatedAt":"2019-07-13T22:15:48","Actor":"dotnet-maestro[bot]","Number":"25678","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190712.11\r\n- **Date Produced**: 7/13/2019 6:12 AM\r\n- **Commit**: 1841042b99062de13dc80098cede9413be569238\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19362.11\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19362.11\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25678","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25678)"},{"Id":"467715048","IsPullRequest":true,"CreatedAt":"2019-07-13T22:15:38","Actor":"dotnet-maestro[bot]","Number":"25679","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25679","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25679)"},{"Id":"467651086","IsPullRequest":true,"CreatedAt":"2019-07-13T22:15:18","Actor":"jkotas","Number":"25674","RawContent":null,"Title":"Fix use of uninitialized variables in managed decimal implementation","State":"closed","Body":"I have noticed that decimal multiplications and divisions return bogus results intermittently while working on unrelated issues. It turns out a few places in the new managed decimal implementation use uninitialized stack variables. I have added debug-only instrumentation to catch these.","Url":"https://github.com/dotnet/coreclr/pull/25674","RelatedDescription":"Closed or merged PR \"Fix use of uninitialized variables in managed decimal implementation\" (#25674)"},{"Id":"467771496","IsPullRequest":false,"CreatedAt":"2019-07-13T22:13:53","Actor":"jkotas","Number":"25683","RawContent":null,"Title":"Fill uninitialized address-taken locals with poison pattern in debug builds","State":"open","Body":"C/C++ compilers have this debugging/diagnostic aid for years.\r\n\r\nMore context: https://github.com/dotnet/coreclr/pull/25674#issuecomment-511118490\r\n\r\nRelated to: https://github.com/dotnet/csharplang/issues/868","Url":"https://github.com/dotnet/coreclr/issues/25683","RelatedDescription":"Open issue \"Fill uninitialized address-taken locals with poison pattern in debug builds\" (#25683)"},{"Id":"467732343","IsPullRequest":false,"CreatedAt":"2019-07-13T15:19:57","Actor":"AndreyAkinshin","Number":"25680","RawContent":null,"Title":"Tiered jitting and BenchmarkDotNet","State":"open","Body":".NET Core 3.0 has tiered jitting enabled by default which is pretty important in the context of benchmarking: it may spoil benchmark results if the number of warmup iterations is not enough. It seems it's not such a big issue since .NET Core 3.0 preview 4 (after https://github.com/dotnet/coreclr/pull/23599 was merged). I didn't observe any noticeable tiered jitting effects with .NET Core 3.0 preview 6: all of my benchmarks produce pretty stable results. However, the internal logic of the tiered jitting can be changed in the future versions of .NET Core, so I would like to discuss how can we prepare for the upcoming changes. Currently, I have the following questions:\r\n\r\n* Is it possible to get the current values of the external configuration knobs like `TieredCompilation` or `TC_QuickJit` from the runtime? It will be nice to see if the tiered complication is enabled or disabled in the environment section of the BenchmarkDotNet output. Of course, we can use the knowledge of the current environment variable values and the corresponding defaults for each version of .NET Core, but I'm looking for a more reliable way that will not depend on the specific .NET Core version.\r\n* Is it possible to get the current values of the internal configuration knobs like `TC_CallCountThreshold` or `TC_CallCountingDelayMs`? It will be great to use these values in the internal BenchmarkDotNet heuristics (e.g., we can always try to invoke the benchmarked method at least `TC_CallCountThreshold` times).\r\n* Is it a good idea to disable tiered jitting in BenchmarkDotNet by default?\r\n* Is it possible to switch the tiered jitting behavior in runtime? (Relevant for the InProcess BenchmarkDotNet mode)\r\n* Is it possible to force the runtime to use a specific jit tier for a specific method? (Can be useful for performance comparison of different tiers).\r\n* Does it make sense to make any other adjustments for the tiered jitting on the BenchmarkDotNet side?\r\n\r\n/cc @kouvel @noahfalk @adamsitnik \r\n\r\nSome relevant discussions: https://github.com/dotnet/coreclr/pull/23599 https://github.com/dotnet/coreclr/issues/19751 https://github.com/dotnet/coreclr/issues/22998 https://github.com/dotnet/core/issues/2257 https://github.com/dotnet/BenchmarkDotNet/issues/1125 https://github.com/dotnet/coreclr/pull/24576","Url":"https://github.com/dotnet/coreclr/issues/25680","RelatedDescription":"Open issue \"Tiered jitting and BenchmarkDotNet\" (#25680)"},{"Id":"467705653","IsPullRequest":false,"CreatedAt":"2019-07-13T10:57:16","Actor":"k15tfu","Number":"25676","RawContent":null,"Title":"Unable to unwind some \"not managed\" frames followed by the managed ones on Linux","State":"open","Body":"_Originally posted by @k15tfu in https://github.com/dotnet/coreclr/issues/25607#issuecomment-510811129_\r\n> @janvorli I'm asking because sometimes during stack unwinding I get a frame (i.e. IP) which is not managed (in terms of GetFunctionFromIP), but it has non-standard convention and libunwind & GDB is unable to unwind this frame correctly. This pice of code has no prologue/epilogue, it has only few instructions, doesn't have a debug info, and it doesn't belong to any module. I think it may be some kind of trampoline, tail call, or a stub function, which is also produced by JIT (probably), but I don't understand how to unwind it to get a managed frame for DoStackSnapshot.\r\n> \r\n> Do you have any thoughts what it is, how to unwind it, and why the runtime doesn't unwind it by itself?\r\n\r\n_Originally posted by @janvorli in https://github.com/dotnet/coreclr/issues/25607#issuecomment-510818429_\r\n> @k15tfu can you please share a call stack from GDB showing such frame so that I can figure out what is that stuff? We do generate some very short stubs that have no unwind info and tail call to other code so they are present on stack for a very brief period of time.\r\n\r\n_Originally posted by @k15tfu in https://github.com/dotnet/coreclr/issues/25607#issuecomment-510830311_\r\n> @janvorli sure, if you need more just tell me.\r\n> \r\n> ```\r\n> #10 <signal handler called>\r\n> #11 0x00007fa76b61e043 in ?? ()\r\n> #12 0x00007fa76cd03747 in ?? ()\r\n> #13 0x00007ffcf2dbb730 in ?? ()\r\n> #14 0x00007fa734030108 in ?? ()\r\n> #15 0x00007ffcf2dbbb68 in ?? ()\r\n> #16 0x973096d283ab9500 in ?? ()\r\n> #17 0x00007ffcf2dbb7a0 in ?? ()\r\n> #18 0x00007fa76cd02b72 in ?? ()\r\n> #19 0x0000000000000000 in ?? ()\r\n> (gdb) x/20i $pc-37\r\n>    0x7fa76b61e01e:      add    %al,(%rax)\r\n>    0x7fa76b61e020:      add    %al,(%rax)\r\n>    0x7fa76b61e022:      add    %al,(%rax)\r\n>    0x7fa76b61e024:      add    %al,(%rax)\r\n>    0x7fa76b61e026:      add    %al,(%rax)\r\n>    0x7fa76b61e028:      add    %al,(%rax)\r\n>    0x7fa76b61e02a:      add    %al,(%rax)\r\n>    0x7fa76b61e02c:      add    %al,(%rax)\r\n>    0x7fa76b61e02e:      add    %al,(%rax)\r\n>    0x7fa76b61e030:      movabs $0x7fa76cf40310,%rax\r\n>    0x7fa76b61e03a:      cmp    %rax,(%rdi)\r\n>    0x7fa76b61e03d:      jne    0x7fa76b64d075\r\n> => 0x7fa76b61e043:      movabs $0x7fa76cd038b0,%rax\r\n>    0x7fa76b61e04d:      jmpq   *%rax\r\n>    0x7fa76b61e04f:      int3\r\n>    0x7fa76b61e050:      xor    %al,(%rax)\r\n>    0x7fa76b61e052:      add    %al,(%rax)\r\n>    0x7fa76b61e054:      add    %al,(%rax)\r\n>    0x7fa76b61e056:      add    %al,(%rax)\r\n>    0x7fa76b61e058:      add    %eax,(%rax)\r\n> ```\r\n> \r\n> where `0x7fa76cd038b0` is a normal JITe'd method.","Url":"https://github.com/dotnet/coreclr/issues/25676","RelatedDescription":"Open issue \"Unable to unwind some \"not managed\" frames followed by the managed ones on Linux\" (#25676)"},{"Id":"467642726","IsPullRequest":true,"CreatedAt":"2019-07-13T06:41:21","Actor":"pi1024e","Number":"25673","RawContent":null,"Title":"Add a destructor for MethodCallSummarizer in the methodcallsummarizer.cpp file and .h file","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25673","RelatedDescription":"Closed or merged PR \"Add a destructor for MethodCallSummarizer in the methodcallsummarizer.cpp file and .h file\" (#25673)"},{"Id":"467669494","IsPullRequest":true,"CreatedAt":"2019-07-13T04:32:27","Actor":"jkotas","Number":"25675","RawContent":null,"Title":"Delete PAL tests for GetDateFormat and GetCalendarInfo","State":"open","Body":"These APIs do not exist in the CoreCLR PAL anymore.","Url":"https://github.com/dotnet/coreclr/pull/25675","RelatedDescription":"Open PR \"Delete PAL tests for GetDateFormat and GetCalendarInfo\" (#25675)"},{"Id":"467388183","IsPullRequest":true,"CreatedAt":"2019-07-13T01:15:51","Actor":"dotnet-maestro[bot]","Number":"25663","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190711.13\r\n- **Date Produced**: 7/12/2019 8:11 AM\r\n- **Commit**: e519628accc31bd3d5f0a3bc5f937a2ec1dd55d1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19361.13\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19361.13\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25663","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25663)"},{"Id":"467611145","IsPullRequest":true,"CreatedAt":"2019-07-13T01:15:36","Actor":"Dotnet-GitSync-Bot","Number":"25672","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/25672","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#25672)"},{"Id":"467569532","IsPullRequest":true,"CreatedAt":"2019-07-12T23:45:20","Actor":"pi1024e","Number":"25671","RawContent":null,"Title":"DateTimeOffset optimizations to prevent unnecessary checks and conversions","State":"closed","Body":"Running DateTimeOffset caused an unnecessary number of DateTime conversions as well as unnecessary boolean checks during those conversions. This not only optimizes the program but simplifies the control flow for better performance and future maintenance. \r\n\r\nI used the Format Document tool to ensure the files were properly formatted, which is why the diffs show multiple changes in the same files I edited.\r\n\r\nI hope this proves useful!","Url":"https://github.com/dotnet/coreclr/pull/25671","RelatedDescription":"Closed or merged PR \"DateTimeOffset optimizations to prevent unnecessary checks and conversions\" (#25671)"},{"Id":"467564191","IsPullRequest":true,"CreatedAt":"2019-07-12T19:20:44","Actor":"omajid","Number":"25670","RawContent":null,"Title":"Change [:space:] to [[:space:]] in awk scripts","State":"open","Body":"During coreclr build on RHEL 7, awk prints out some warnings:\r\n\r\n    awk: /builddir/build/BUILD/dotnet-v2.2.6/src/coreclr/generateredefinesfile.awk:10:\r\n    warning: regexp component `[:space:]' should probably be `[[:space:]]'\r\n\r\nThe awk man page says:\r\n\r\n    A character class is only valid in a regular expression inside the\r\n    brackets of a character list.\r\n\r\nSo fix the '[:space:]' notation by replacing with the valid\r\n'[[:space:]]'.\r\n\r\nFixing this warning doesn't actually result in a change in the generated\r\nfiles (dbgshim.exports, mscordbi.exports, libredefines.inc,\r\npalredefines.inc, clrjit.exports, mscordac.exports, coreclr.exports,\r\ndlltest1.exports and dlltest2.exports) on my system.","Url":"https://github.com/dotnet/coreclr/pull/25670","RelatedDescription":"Open PR \"Change [:space:] to [[:space:]] in awk scripts\" (#25670)"},{"Id":"467522309","IsPullRequest":true,"CreatedAt":"2019-07-12T17:28:59","Actor":"pi1024e","Number":"25669","RawContent":null,"Title":"Optimizations to reduce extraneous time zone conversions and checks.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25669","RelatedDescription":"Closed or merged PR \"Optimizations to reduce extraneous time zone conversions and checks.\" (#25669)"},{"Id":"467521800","IsPullRequest":true,"CreatedAt":"2019-07-12T17:27:19","Actor":"pi1024e","Number":"25668","RawContent":null,"Title":"Optimizations to reduce extraneous time zone conversions and checks.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25668","RelatedDescription":"Closed or merged PR \"Optimizations to reduce extraneous time zone conversions and checks.\" (#25668)"},{"Id":"467517458","IsPullRequest":true,"CreatedAt":"2019-07-12T17:16:04","Actor":"pi1024e","Number":"25667","RawContent":null,"Title":"Optimizations to reduce extraneous time zone conversions and checks.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25667","RelatedDescription":"Closed or merged PR \"Optimizations to reduce extraneous time zone conversions and checks.\" (#25667)"},{"Id":"467507731","IsPullRequest":true,"CreatedAt":"2019-07-12T17:08:01","Actor":"pi1024e","Number":"25666","RawContent":null,"Title":"Optimizations to reduce extraneous time zone conversions and checks.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25666","RelatedDescription":"Closed or merged PR \"Optimizations to reduce extraneous time zone conversions and checks.\" (#25666)"},{"Id":"467475847","IsPullRequest":true,"CreatedAt":"2019-07-12T15:31:02","Actor":"jkotas","Number":"25665","RawContent":null,"Title":"Rename GC's config.h to avoid name collisions","State":"open","Body":"Port https://github.com/dotnet/corert/pull/7596 to CoreCLR","Url":"https://github.com/dotnet/coreclr/pull/25665","RelatedDescription":"Open PR \"Rename GC's config.h to avoid name collisions\" (#25665)"},{"Id":"467385334","IsPullRequest":true,"CreatedAt":"2019-07-12T14:58:27","Actor":"dotnet-maestro[bot]","Number":"25662","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190711.7\r\n- **Date Produced**: 7/12/2019 2:02 AM\r\n- **Commit**: f1b09644408f45f43f5835786b3e4bdfd2e78141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19361.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19361.7\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25662","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25662)"},{"Id":"467390249","IsPullRequest":true,"CreatedAt":"2019-07-12T14:58:16","Actor":"dotnet-maestro[bot]","Number":"25664","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.01\r\n- **Date Produced**: 7/12/2019 10:22 AM\r\n- **Commit**: f93e96ea9561bd2864a08a676c8656e1fe73e3c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-01\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25664","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25664)"},{"Id":"467384011","IsPullRequest":true,"CreatedAt":"2019-07-12T12:19:00","Actor":"jkotas","Number":"25661","RawContent":null,"Title":"Delete unnecessary method","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25661","RelatedDescription":"Open PR \"Delete unnecessary method\" (#25661)"},{"Id":"467314586","IsPullRequest":true,"CreatedAt":"2019-07-12T09:29:00","Actor":"swift-kim","Number":"25660","RawContent":null,"Title":"Build error fix on FEATURE_PREJIT=true","State":"open","Body":"This fix is to update usages of SetupGcCoverage() under FEATURE_PREJIT aligned to the signature change in #25261.\r\n\r\ncc @kouvel @alpencolt","Url":"https://github.com/dotnet/coreclr/pull/25660","RelatedDescription":"Open PR \"Build error fix on FEATURE_PREJIT=true\" (#25660)"},{"Id":"467250707","IsPullRequest":true,"CreatedAt":"2019-07-12T06:50:02","Actor":"sywhang","Number":"25659","RawContent":null,"Title":"[WIP] Make counters use dedicated thread instead of timer","State":"open","Body":"This fixes #25071. When there is a threadpool starvation, counter timer doesn't get fired because of threadpool starvation. Since counters are used to diagnose such an issue, we should make sure counter itself doesn't just aggravate the problem & become useless in such a scenario. \r\n\r\nThis fix creates a dedicated thread used for polling counter values at the interval requested and removes the existing code using timers. ","Url":"https://github.com/dotnet/coreclr/pull/25659","RelatedDescription":"Open PR \"[WIP] Make counters use dedicated thread instead of timer\" (#25659)"},{"Id":"467223641","IsPullRequest":true,"CreatedAt":"2019-07-12T05:08:49","Actor":"ts2do","Number":"25658","RawContent":null,"Title":"Eliminate extra time zone conversions in DateTimeOffset","State":"open","Body":"PR recreated here (originally dotnet/corefx#38790)\r\n\r\nRevised members dealing specifically with local time by removing delegation to `DateTime` methods to avoid an extra call to `TimeZoneInfo` to determine offset:\r\n> Now\r\n> FromFileTime(long)\r\n> ToLocalTime()\r\n\r\n**Before**\r\n\r\n|        Method |      Mean |     Error |    StdDev |  Gen 0 |  Gen 1 |  Gen 2 |  Allocated |\r\n| ------------- | --------- | --------- | --------- | ------ | ------ | ------ | ---------- |\r\n|           Now |  474.7 ns |  1.913 ns |  1.790 ns |      - |      - |      - |          - |\r\n|  FromFileTime |  498.1 ns |  1.685 ns |  1.494 ns |      - |      - |      - |          - |\r\n|  ToLocalTime  |  459.5 ns |  1.732 ns |  1.620 ns |      - |      - |      - |          - |\r\n\r\n**After**\r\n\r\n|        Method |      Mean |     Error |    StdDev |  Gen 0 |  Gen 1 |  Gen 2 |  Allocated |\r\n| ------------- | --------- | --------- | --------- | ------ | ------ | ------ | ---------- |\r\n|           Now |  303.8 ns |  1.438 ns |  1.269 ns |      - |      - |      - |          - |\r\n|  FromFileTime |  290.1 ns |  1.611 ns |  1.507 ns |      - |      - |      - |          - |\r\n|   ToLocalTime |  236.7 ns |  0.881 ns |  0.824 ns |      - |      - |      - |          - |\r\n\r\n```csharp\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing System;\r\n\r\n[MemoryDiagnoser]\r\npublic class Program\r\n{\r\n    static void Main(string[] args) => BenchmarkSwitcher.FromTypes(new[] { typeof(Program) }).Run(args);\r\n\r\n    private long _fileTime;\r\n    private DateTimeOffset _utc;\r\n\r\n    [GlobalSetup]\r\n    public void GlobalSetup()\r\n    {\r\n        _utc = DateTimeOffset.UtcNow;\r\n        _fileTime = _utc.ToFileTime();\r\n    }\r\n\r\n    [Benchmark] public DateTimeOffset Now() => DateTimeOffset.Now;\r\n    [Benchmark] public DateTimeOffset FromFileTime() => DateTimeOffset.FromFileTime(_fileTime);\r\n    [Benchmark] public DateTimeOffset ToLocalTime() => _utc.ToLocalTime();\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/pull/25658","RelatedDescription":"Open PR \"Eliminate extra time zone conversions in DateTimeOffset\" (#25658)"},{"Id":"467163880","IsPullRequest":true,"CreatedAt":"2019-07-12T00:26:16","Actor":"andy-ms","Number":"25657","RawContent":null,"Title":"Document new GC configuration knobs","State":"open","Body":"* Adds a new column \"Minimum `dotnet` Version\" as the new knobs are only available in dotnet 3.0+.\r\n* The changes to `clr-configuration-knobs.md` are due to running\r\n  `dotnet-script clr-configuration-knobs.csx` which causes some\r\n  unrelated changes. Only `clr-configuration-knobs.csx` was manually\r\n  edited.\r\n* The new properties are:\r\n  - \"System.GC.HeapHardLimit\"\r\n  - \"System.GC.HeapHardLimitPercent\"\r\n  - \"System.GC.HeapAffinitizeMask\"\r\n  - \"System.GC.HeapCount\"\r\n  - \"System.GC.NoAffinitize\"\r\n* These properties are supported as of #25574 and #25653","Url":"https://github.com/dotnet/coreclr/pull/25657","RelatedDescription":"Open PR \"Document new GC configuration knobs\" (#25657)"},{"Id":"467159237","IsPullRequest":true,"CreatedAt":"2019-07-12T00:04:56","Actor":"VSadov","Number":"25656","RawContent":null,"Title":"[WIP] GC reliability tests","State":"open","Body":"\r\nnot done yet","Url":"https://github.com/dotnet/coreclr/pull/25656","RelatedDescription":"Open PR \"[WIP] GC reliability tests\" (#25656)"},{"Id":"467156479","IsPullRequest":true,"CreatedAt":"2019-07-11T23:52:29","Actor":"briansull","Number":"25655","RawContent":null,"Title":"[TEST-ONLY] disable gcstress on Linux_arm, Linux_arm64 and Windows_NT_x86","State":"open","Body":"This allows me to run gcstress on Linux_x64 and Windows_NT_x64 only","Url":"https://github.com/dotnet/coreclr/pull/25655","RelatedDescription":"Open PR \"[TEST-ONLY] disable gcstress on Linux_arm, Linux_arm64 and Windows_NT_x86\" (#25655)"},{"Id":"467112474","IsPullRequest":true,"CreatedAt":"2019-07-11T21:20:22","Actor":"dotnet-maestro-bot","Number":"25654","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @wtgodbe\n* @jashook\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/25654","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#25654)"},{"Id":"467099437","IsPullRequest":true,"CreatedAt":"2019-07-11T20:48:37","Actor":"andy-ms","Number":"25653","RawContent":null,"Title":"Handle more configs in GCToEEInterface","State":"open","Body":"Adds handling for the following configs:\r\n* \"GCNoAffinitize\" (from \"System.GC.NoAffinitize\")\r\n* \"GCHeapAffinitizeMask\" (from \"System.GC.HeapAffinitizeMask\")\r\n* \"GCHeapCount\" (from \"System.GC.HeapCount\")\r\n\r\nThese configs were already handled correctly in EEConfig::sync, so that\r\ndoes not need to be changed. Just the access from GC needs to be fixed.\r\n\r\nPreviously the configs were correctly read,\r\nbut GC did not see those values.\r\n\r\nVerified this change by debugging into\r\nGCToEEInterface::GetBooleanConfigValue and\r\nGCToEEInterface::GetIntConfigValue as well as their uses in\r\nSVR::GCHeap::Initialize.","Url":"https://github.com/dotnet/coreclr/pull/25653","RelatedDescription":"Open PR \"Handle more configs in GCToEEInterface\" (#25653)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"467795083","IsPullRequest":true,"CreatedAt":"2019-07-14T05:21:47","Actor":"dotnet-maestro[bot]","Number":"11880","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.09\r\n- **Date Produced**: 7/14/2019 4:25 AM\r\n- **Commit**: 36ad04d936c4613c1b1599b899071d411fe5c9b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-09\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11880","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11880)"},{"Id":"467793196","IsPullRequest":true,"CreatedAt":"2019-07-14T04:48:59","Actor":"dotnet-maestro[bot]","Number":"11879","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.08\r\n- **Date Produced**: 7/14/2019 4:18 AM\r\n- **Commit**: 36ad04d936c4613c1b1599b899071d411fe5c9b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-08\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-08\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11879","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11879)"},{"Id":"467788630","IsPullRequest":true,"CreatedAt":"2019-07-14T03:33:17","Actor":"dotnet-maestro[bot]","Number":"11878","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.07\r\n- **Date Produced**: 7/14/2019 3:02 AM\r\n- **Commit**: 3ee8e1e4e2259b66f5f3e74cc6a8fecd87dfd169\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-07\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-07\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-07\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11878","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11878)"},{"Id":"467783517","IsPullRequest":true,"CreatedAt":"2019-07-14T02:03:30","Actor":"dotnet-maestro[bot]","Number":"11877","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.06\r\n- **Date Produced**: 7/14/2019 1:32 AM\r\n- **Commit**: 0613c0429e419649cc2688d314aee9b33ee8b967\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11877","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11877)"},{"Id":"467754330","IsPullRequest":true,"CreatedAt":"2019-07-13T19:24:07","Actor":"dotnet-maestro[bot]","Number":"11875","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.05\r\n- **Date Produced**: 7/13/2019 6:48 PM\r\n- **Commit**: 27e4f65255bc771c079542f88422649e1c5cee33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-05\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-05\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-05\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11875","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11875)"},{"Id":"467754654","IsPullRequest":true,"CreatedAt":"2019-07-13T19:22:34","Actor":"dotnet-maestro[bot]","Number":"11876","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190713.1\r\n- **Date Produced**: 7/13/2019 6:51 PM\r\n- **Commit**: 6a95fcc5e3451091f480aafd1857bd1dd241aa68\r\n- **Branch**: refs/heads/release/3.0-preview7\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19363.1\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11876","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#11876)"},{"Id":"467752788","IsPullRequest":false,"CreatedAt":"2019-07-13T18:32:32","Actor":"mayank9804","Number":"11874","RawContent":null,"Title":"How do I publish ASP.NET mvc project from linux using dotnet publish and publish profile?","State":"open","Body":"<pre>\r\n- dotnet publish WebProj.csproj /p:PublishProfile=&lt;publish_profile&gt;\r\n</pre>\r\n(this according to docs is cross platform)\r\n\r\nWhen i execute this in windows platform, it gets executed successfully and it publishes to desired server, but when I execute it in linux machine, it publishes locally in bin folder but not publish in server.  \r\n\r\nPublish Method:  **WebDeploy**\r\n\r\n**Following is the profile**\r\n<pre>\r\n &lt;Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"&gt;\r\n &lt;PropertyGroup&gt;\r\n   &lt;WebPublishMethod&gt;MSDeploy&lt;/WebPublishMethod&gt;\r\n   &lt;LastUsedBuildConfiguration&gt;Release&lt;/LastUsedBuildConfiguration&gt;\r\n   &lt;LastUsedPlatform&gt;Any CPU&lt;/LastUsedPlatform&gt;\r\n   &lt;SiteUrlToLaunchAfterPublish /&gt;\r\n   &lt;LaunchSiteAfterPublish&gt;True&lt;/LaunchSiteAfterPublish&gt;\r\n   &lt;ExcludeApp_Data&gt;False&lt;/ExcludeApp_Data&gt;\r\n   &lt;TargetFramework&gt;netcoreapp2.2&lt;/TargetFramework&gt;\r\n   &lt;ProjectGuid&gt;1e96b425-2c23-42ed-a8b0-1a87b562da28&lt;/ProjectGuid&gt;\r\n   &lt;SelfContained&gt;false&lt;/SelfContained&gt;\r\n   &lt;_IsPortable&gt;true&lt;/_IsPortable&gt;\r\n   &lt;MSDeployServiceURL&gt;----------&lt;/MSDeployServiceURL&gt;\r\n   &lt;DeployIisAppPath&gt;--------&lt;/DeployIisAppPath&gt;\r\n   &lt;RemoteSitePhysicalPath /&gt;\r\n   &lt;SkipExtraFilesOnServer&gt;True&lt;/SkipExtraFilesOnServer&gt;\r\n   &lt;MSDeployPublishMethod&gt;WMSVC&lt;/MSDeployPublishMethod&gt;\r\n   &lt;EnableMSDeployBackup&gt;True&lt;/EnableMSDeployBackup&gt;\r\n   &lt;UserName&gt;Administrator&lt;/UserName&gt;\r\n   &lt;Password&gt;XXXXXXX&lt;/Password&gt;\r\n   &lt;_SavePWD&gt;True&lt;/_SavePWD&gt;\r\n &lt;/PropertyGroup&gt;\r\n&lt;/Project&gt;\r\n</pre>\r\n**I also tried using FTP method, that published locally both in windows and linux. (Both methods work in visual studio publish option)**\r\n\r\n\r\n\r\n`dotnet --info` output:\r\n\r\n**Windows machine:**\r\n.NET Core SDK (reflecting any global.json):<br>                                                                                                                                                                                         Version:   2.2.301                                         <br>                                                                                                                                                                                  Commit:    70d6be0814                                       <br>       \r\n<br>                                                                                                                                                                                                                                                                                                                                                                                                                      Runtime Environment:                                                                                                                                                                                                                          OS Name:     Windows            <br>                                                                                                                                                                                                             OS Version:  10.0.18362                 <br>                                                                                                                                                                                                     OS Platform: Windows                     <br>                                                                                                                                                                                                    RID:         win10-x64                                <br>                                                                                                                                                                                       Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.301\\    <br>      \r\n<br>                                                                                                                                                                                                                                                                                                                                                                                                                              Host (useful for support):                                                   <br>                                                                                                                                                                  Version: 2.2.6                                                                            <br>                                                                                                                                                   Commit:  7dac9b1b51                                                                      <br>     \r\n<br>                                                                                                                                                                                                                                                                                                                                                                                          .NET Core SDKs installed:                                                                      <br>                                                                                                                                                2.1.701 [C:\\Program Files\\dotnet\\sdk]                                                            <br>                                                                                                                                            2.2.301 [C:\\Program Files\\dotnet\\sdk]                 <br>                         \r\n<br>                                                                                                                                                                                                                                                                                                                                                                                                         .NET Core runtimes installed:                                                                                                                                                                                                                  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]  <br>                                                                                                                                                  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]     <br>                                                                                                                                                Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App] <br>                                                                                                                                                   Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   <br>                                                                                                                                                  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]  <br>                                                                                                                                                        Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]     <br>                                                                                                                                                                                                                                                                                                                                                                                                 To install additional .NET Core runtimes or SDKs:                  <br>                                                                                                                                                                            https://aka.ms/dotnet-download <br>\r\n\r\n\r\n\r\n**Linux Machine**\r\n.NET Core SDK (reflecting any global.json):\r\nVersion:   2.2.300\r\nCommit:    73efd5bd87\r\n\r\nRuntime Environment:\r\nOS Name:     ubuntu\r\nOS Version:  18.10\r\nOS Platform: Linux\r\nRID:         ubuntu.18.10-x64\r\nBase Path:   /usr/share/dotnet/sdk/2.2.300/\r\n\r\nHost (useful for support):\r\n Version: 2.2.5\r\n Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n 2.2.300 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n Microsoft.AspNetCore.All 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n Microsoft.AspNetCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n Microsoft.NETCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11874","RelatedDescription":"Open issue \"How do I publish ASP.NET mvc project from linux using dotnet publish and publish profile?\" (#11874)"},{"Id":"467746652","IsPullRequest":true,"CreatedAt":"2019-07-13T18:00:02","Actor":"dotnet-maestro[bot]","Number":"11873","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.04\r\n- **Date Produced**: 7/13/2019 5:29 PM\r\n- **Commit**: 7302102e69744e848a6fa4b8f720a7133fe472d4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-04\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-04\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-04\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11873","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11873)"},{"Id":"467740609","IsPullRequest":true,"CreatedAt":"2019-07-13T17:02:20","Actor":"dotnet-maestro[bot]","Number":"11872","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.03\r\n- **Date Produced**: 7/13/2019 4:26 PM\r\n- **Commit**: 7302102e69744e848a6fa4b8f720a7133fe472d4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-03\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-03\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-03\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11872","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11872)"},{"Id":"467737288","IsPullRequest":true,"CreatedAt":"2019-07-13T16:31:15","Actor":"dotnet-maestro[bot]","Number":"11871","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.02\r\n- **Date Produced**: 7/13/2019 4:00 PM\r\n- **Commit**: 870d024bba34ef3d435e7b90f9917ce7c1ab6ac4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-02\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-02\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-02\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11871","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11871)"},{"Id":"467727500","IsPullRequest":true,"CreatedAt":"2019-07-13T15:06:40","Actor":"dotnet-maestro[bot]","Number":"11870","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190713.01\r\n- **Date Produced**: 7/13/2019 2:36 PM\r\n- **Commit**: 451d8246080cc678eb14de2b7ab2a2da44a523e6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27913-01\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27913-01\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27913-01\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11870","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11870)"},{"Id":"467712829","IsPullRequest":true,"CreatedAt":"2019-07-13T12:42:15","Actor":"dotnet-maestro[bot]","Number":"11869","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190712.1\r\n- **Date Produced**: 7/12/2019 12:46 PM\r\n- **Commit**: d0426f1d5b9d052f3372e75cbda96d782a5c6f5a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview8.19362.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11869","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11869)"},{"Id":"467712215","IsPullRequest":true,"CreatedAt":"2019-07-13T12:36:10","Actor":"dotnet-maestro[bot]","Number":"11868","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190712.4\r\n- **Date Produced**: 7/12/2019 9:19 PM\r\n- **Commit**: e4ce60faae1d51e995c462002210774fcd0da490\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview8.19362.4\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11868","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11868)"},{"Id":"467712168","IsPullRequest":true,"CreatedAt":"2019-07-13T12:35:45","Actor":"dotnet-maestro[bot]","Number":"11867","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11867","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11867)"},{"Id":"467696032","IsPullRequest":true,"CreatedAt":"2019-07-13T09:48:11","Actor":"dotnet-maestro[bot]","Number":"11866","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27912-15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11866","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11866)"},{"Id":"467671561","IsPullRequest":true,"CreatedAt":"2019-07-13T05:29:10","Actor":"dotnet-maestro[bot]","Number":"11865","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.14\r\n- **Date Produced**: 7/13/2019 4:58 AM\r\n- **Commit**: 4da6ee6450e4dd43ef8c05925fec22d9ac3892f3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27912-14\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11865","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#11865)"},{"Id":"467670375","IsPullRequest":true,"CreatedAt":"2019-07-13T05:14:08","Actor":"dotnet-maestro[bot]","Number":"11864","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.13\r\n- **Date Produced**: 7/13/2019 4:23 AM\r\n- **Commit**: b5983343c7ff2946a3ba769c42d025bb731c65b7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-13\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27912-13\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27912-13\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11864","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11864)"},{"Id":"467659626","IsPullRequest":true,"CreatedAt":"2019-07-13T04:43:29","Actor":"dotnet-maestro[bot]","Number":"11862","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.12\r\n- **Date Produced**: 7/13/2019 4:14 AM\r\n- **Commit**: b5983343c7ff2946a3ba769c42d025bb731c65b7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-12\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27912-12\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27912-12\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11862","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11862)"},{"Id":"467661677","IsPullRequest":true,"CreatedAt":"2019-07-13T03:36:30","Actor":"dotnet-maestro[bot]","Number":"11863","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/13/2019 3:05 AM\r\n- **Commit**: 32782cb4216aca416c82083ac0a805fdd26caf04\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19362.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11863","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11863)"},{"Id":"467649295","IsPullRequest":true,"CreatedAt":"2019-07-13T01:35:52","Actor":"dotnet-maestro[bot]","Number":"11861","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190712.4\r\n- **Date Produced**: 7/13/2019 1:00 AM\r\n- **Commit**: 5458a102e68ea1b1f4cbccee6192daa5e54f9196\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19362.4\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11861","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11861)"},{"Id":"467647614","IsPullRequest":true,"CreatedAt":"2019-07-13T00:45:37","Actor":"phenning","Number":"11860","RawContent":null,"Title":"Support comments in launchSettings.json","State":"open","Body":"Fixes #11756\r\n","Url":"https://github.com/dotnet/cli/pull/11860","RelatedDescription":"Open PR \"Support comments in launchSettings.json\" (#11860)"},{"Id":"467607094","IsPullRequest":true,"CreatedAt":"2019-07-13T00:13:12","Actor":"dotnet-maestro[bot]","Number":"11859","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.09\r\n- **Date Produced**: 7/12/2019 11:36 PM\r\n- **Commit**: e2288957ff91dca898e1798be2e6d9cc03b3aa26\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27912-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27912-09\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11859","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11859)"},{"Id":"467567997","IsPullRequest":true,"CreatedAt":"2019-07-12T22:41:38","Actor":"peterhuene","Number":"11854","RawContent":null,"Title":"Update 1.x servicing versions to the latest versions.","State":"closed","Body":"The 1.x servicing version numbers were stale and not the latest (and\r\nfinal) released versions.","Url":"https://github.com/dotnet/cli/pull/11854","RelatedDescription":"Closed or merged PR \"Update 1.x servicing versions to the latest versions.\" (#11854)"},{"Id":"467569747","IsPullRequest":true,"CreatedAt":"2019-07-12T22:41:17","Actor":"peterhuene","Number":"11855","RawContent":null,"Title":"Update 1.x and 2.1 servicing versions.","State":"closed","Body":"The 1.x and 2.1 servicing versions were stale and not the latest\r\nreleased versions.","Url":"https://github.com/dotnet/cli/pull/11855","RelatedDescription":"Closed or merged PR \"Update 1.x and 2.1 servicing versions.\" (#11855)"},{"Id":"467604869","IsPullRequest":true,"CreatedAt":"2019-07-12T21:54:10","Actor":"dotnet-maestro[bot]","Number":"11858","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190712.3\r\n- **Date Produced**: 7/12/2019 9:19 PM\r\n- **Commit**: 78b8210cf94a9d516de694815ce746e84ab21545\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19362.3\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11858","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11858)"},{"Id":"467595142","IsPullRequest":true,"CreatedAt":"2019-07-12T21:19:34","Actor":"dotnet-maestro[bot]","Number":"11857","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190712.2\r\n- **Date Produced**: 7/12/2019 8:48 PM\r\n- **Commit**: 840c226e28ada143d9801be9917975ceb4ca625a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19362.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11857","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11857)"},{"Id":"467482950","IsPullRequest":true,"CreatedAt":"2019-07-12T20:01:16","Actor":"dotnet-maestro[bot]","Number":"11851","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.06\r\n- **Date Produced**: 7/12/2019 7:30 PM\r\n- **Commit**: a812fed3dcd0f57721bfc0ffedfa56006be0cc0f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-27912-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-27912-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11851","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11851)"},{"Id":"467572496","IsPullRequest":false,"CreatedAt":"2019-07-12T19:52:18","Actor":"AnthonyMastrean","Number":"11856","RawContent":null,"Title":"Is there a Visual Studio Code problem matcher for `dotnet test` (using mstest)?","State":"closed","Body":"Everywhere I look, people are using this built in `$msCompile` problem matcher, but it doesn't seem to work on my machine.\r\n\r\n## Steps to reproduce\r\n\r\nWrite some failing mstest unit tests. Use the following VS Code custom task. Run tests w/ that task.\r\n\r\n**tasks.json**\r\n```json\r\n        {\r\n            \"label\": \"test\",\r\n            \"type\": \"process\",\r\n            \"group\": {\r\n                \"kind\": \"test\",\r\n                \"isDefault\": true\r\n            },\r\n            \"command\": \"dotnet\",\r\n            \"args\": [\"test\"],\r\n            \"problemMatcher\": \"$msCompile\"\r\n        }\r\n```\r\n**output**\r\n```\r\nTest run for c:\\Users\\anthony.mastrean.CORP\\Work\\gitlab.com\\anthonymastrean\\simplenetq\\test\\SimpleNetQ.Tests\\bin\\Debug\\netcoreapp3.0\\SimpleNetQ.Tests.dll(.NETCoreApp,Version=v3.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 16.0.1\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nFailed   TestMethod1\r\nError Message:\r\n Assert.Fail failed. \r\nStack Trace:\r\n   at SimpleNetQ.Tests.UnitTest1.TestMethod1() in c:\\Users\\anthony.mastrean.CORP\\Work\\gitlab.com\\anthonymastrean\\simplenetq\\test\\SimpleNetQ.Tests\\UnitTest1.cs:line 11\r\n\r\nFailed   TestMethod2\r\nError Message:\r\n Assert.Fail failed. \r\nStack Trace:\r\n   at SimpleNetQ.Tests.UnitTest1.TestMethod2() in c:\\Users\\anthony.mastrean.CORP\\Work\\gitlab.com\\anthonymastrean\\simplenetq\\test\\SimpleNetQ.Tests\\UnitTest1.cs:line 17\r\n\r\nFailed   TestMethod1\r\nError Message:\r\n Assert.Fail failed. \r\nStack Trace:\r\n   at SimpleNetQ.Tests.UnitTest2.TestMethod1() in c:\\Users\\anthony.mastrean.CORP\\Work\\gitlab.com\\anthonymastrean\\simplenetq\\test\\SimpleNetQ.Tests\\UnitTest2.cs:line 11\r\n\r\n\r\nTotal tests: 3. Passed: 0. Failed: 3. Skipped: 0.\r\nTest Run Failed.\r\nTest execution time: 0.6011 Seconds\r\n```\r\n\r\n## Expected  behavior\r\n\r\nFailed tests should be recorded as problems in the Problems panel.\r\n\r\n## Actual behavior\r\n\r\nFailed tests are not recorded as problems.\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/11856","RelatedDescription":"Closed issue \"Is there a Visual Studio Code problem matcher for `dotnet test` (using mstest)?\" (#11856)"},{"Id":"467536417","IsPullRequest":true,"CreatedAt":"2019-07-12T18:40:58","Actor":"dotnet-maestro[bot]","Number":"11853","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190712.1\r\n- **Date Produced**: 7/12/2019 6:05 PM\r\n- **Commit**: dfe159023ac5ad7752cdac8eaa9635f46dd794d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19362.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11853","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11853)"},{"Id":"467524881","IsPullRequest":false,"CreatedAt":"2019-07-12T17:35:01","Actor":"ViktorHofer","Number":"11852","RawContent":null,"Title":"Allow the --roll-forward switch to be used with local tools","State":"open","Body":"The runtime-option `--roll-forward` is settable when using the `exec` SDK command but currently not when invoking a repo tool with `dotnet tool run`. If a repo tool doesn't define a roll-forward policy then there's no way to make a tool run on a higher shared framework version.\r\n\r\nI'm not up-to-date on the decisions being made around repo tools but naively I would expect that option to be usable with repo tools.\r\n\r\ncc @KathleenDollard @vitek-karas @wli3 ","Url":"https://github.com/dotnet/cli/issues/11852","RelatedDescription":"Open issue \"Allow the --roll-forward switch to be used with local tools\" (#11852)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"467716205","IsPullRequest":true,"CreatedAt":"2019-07-13T12:54:47","Actor":"dotnet-maestro[bot]","Number":"1339","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190712.11\r\n- **Date Produced**: 7/13/2019 6:12 AM\r\n- **Commit**: 1841042b99062de13dc80098cede9413be569238\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19362.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1339","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1339)"},{"Id":"467712007","IsPullRequest":true,"CreatedAt":"2019-07-13T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1338","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1338","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1338)"},{"Id":"466519567","IsPullRequest":true,"CreatedAt":"2019-07-12T21:43:15","Actor":"terrajobst","Number":"1326","RawContent":null,"Title":"Expose AesCcm and AesGcm","State":"closed","Body":"Fixes #1295.\r\n\r\n/cc @alecgn","Url":"https://github.com/dotnet/standard/pull/1326","RelatedDescription":"Closed or merged PR \"Expose AesCcm and AesGcm\" (#1326)"},{"Id":"467460987","IsPullRequest":false,"CreatedAt":"2019-07-12T20:31:42","Actor":"jons-aura","Number":"1337","RawContent":null,"Title":"netcoreapp2.2 referencing netstandard2.0 dependency conflict","State":"closed","Body":"I have a netcoreapp2.2 project that references a netstandard2.0 project. When I try to build the solution I get the warning below in the log and the build fails completely in Azure Devops.\r\n\r\nAll NuGet packages are up to date.\r\n\r\nI did some searching to find existing issues but they all seem to reference .Net 4.6 or .Net 4.7 and .Net Standard rather than .Net Core\r\n\r\n```\r\n2>    Dependency \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n2>        Could not resolve this reference. Could not locate the assembly \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n2>        Required by \"System.Reflection.Metadata\".\r\n2>    There was a conflict between \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n2>        \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was chosen because it was primary and \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was not.\r\n2>        References which depend on \"System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" [C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll].\r\n2>            C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\r\n2>              Project file item includes which caused reference \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\".\r\n2>                C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\ref\\System.Runtime.dll\r\n2>        References which depend on \"System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" [].\r\n2>            C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\r\n2>              Project file item includes which caused reference \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\".\r\n2>                System.Reflection.Metadata\r\n2>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2106,5): warning MSB3277: Found conflicts between different versions of \"System.Runtime\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed.\r\n2>  Done executing task \"ResolveAssemblyReference\".\r\n```","Url":"https://github.com/dotnet/standard/issues/1337","RelatedDescription":"Closed issue \"netcoreapp2.2 referencing netstandard2.0 dependency conflict\" (#1337)"},{"Id":"467395066","IsPullRequest":true,"CreatedAt":"2019-07-12T12:55:56","Actor":"dotnet-maestro[bot]","Number":"1336","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190711.13\r\n- **Date Produced**: 7/12/2019 8:11 AM\r\n- **Commit**: e519628accc31bd3d5f0a3bc5f937a2ec1dd55d1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19361.13\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19361.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19361.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1336","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1336)"},{"Id":"467378098","IsPullRequest":true,"CreatedAt":"2019-07-12T12:14:08","Actor":"dotnet-maestro[bot]","Number":"1335","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190711.7\r\n- **Date Produced**: 7/12/2019 2:02 AM\r\n- **Commit**: f1b09644408f45f43f5835786b3e4bdfd2e78141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19361.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1335","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1335)"},{"Id":"466629123","IsPullRequest":false,"CreatedAt":"2019-07-11T23:32:56","Actor":"terrajobst","Number":"1330","RawContent":null,"Title":"Clarify .NET Standard 2.1 platform support","State":"closed","Body":"The current .NET Standard 2.1 platform support [is listed](https://github.com/dotnet/standard/blob/master/docs/versions.md) as follows:\r\n\r\n\r\n|<div align=\"left\">.NET Standard</div>|             2.1 |\r\n|:-------------------------------------|------------------:|\r\n|.NET Core                             | **3.0**           |\r\n|.NET Framework                        | *N/A<sup>2</sup>* |\r\n|Mono                                  | **6.2**           |\r\n|Xamarin.iOS                           | **12.12**         |\r\n|Xamarin.Mac                           | **5.12**          |\r\n|Xamarin.Android                       | **9.3**           |\r\n|Unity                                 | *TBD*             |\r\n|Universal Windows Platform            | *TBD*             |\r\n\r\n@akoeplinger Are these the correct versions for Mono/Xamarin?\r\n\r\n@joshpeterson Do you already know the version of Unity that will support .NET Standard 2.1?\r\n\r\n/cc @dotnet/nsboard @rowanmiller ","Url":"https://github.com/dotnet/standard/issues/1330","RelatedDescription":"Closed issue \"Clarify .NET Standard 2.1 platform support\" (#1330)"},{"Id":"466944957","IsPullRequest":true,"CreatedAt":"2019-07-11T23:29:25","Actor":"akoeplinger","Number":"1333","RawContent":null,"Title":"Update Xamarin versions for NS2.1 support","State":"closed","Body":"These versions will contain the .NET Standard 2.1 updates.\r\n\r\n@marek-safar @steveisok we're still tracking Mono 2019-06 for this right?","Url":"https://github.com/dotnet/standard/pull/1333","RelatedDescription":"Closed or merged PR \"Update Xamarin versions for NS2.1 support\" (#1333)"},{"Id":"466574515","IsPullRequest":true,"CreatedAt":"2019-07-11T17:42:06","Actor":"wtgodbe","Number":"1329","RawContent":null,"Title":"Add RefEmit nullability annotations to baseline","State":"closed","Body":"CC @terrajobst @safern \r\n\r\nThese pop up when building locally, due to the added annotations in the ref: https://github.com/dotnet/corefx/commit/d688b187115d70ecd6df79a9cb9a04e46b1b00e1#diff-b17852d6d680ddb1418099b32839155c","Url":"https://github.com/dotnet/standard/pull/1329","RelatedDescription":"Closed or merged PR \"Add RefEmit nullability annotations to baseline\" (#1329)"},{"Id":"466956795","IsPullRequest":false,"CreatedAt":"2019-07-11T15:18:07","Actor":"sabmah","Number":"1334","RawContent":null,"Title":"MSBuild can't package .net 4.6.1 project w/ net core refrences. missing netstandard dll ","State":"open","Body":"I have a .net 4.6.1 class library that references these packages:\r\n\r\n- Microsoft.AspNetCore.Http.Abstractions\r\n- Microsoft.AspNetCore.Http.Features\r\n- Microsoft.AspNetCore.Mvc.Abstractions\r\n- Microsoft.AspNetCore.Routing.Abstractions\r\n\r\nI also added `<Reference Include=\"netstandard\" />` in class library .csproj file because it was complaining w/ error below. \r\n`\r\n The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n`\r\n\r\nThat class library is then referenced in another asp.net 4.6.1 web project. I'm able to build this project on TeamCity CI server and includes netstandard.dll in bin folder.\r\n\r\nBut when I package the web project using `msbuild /t:package /p:configuration=Test`, it doesn't include netstandard.dll in bin folder which causes app to not work in IIS after deployment. I get this error message.\r\n\r\n`\r\nException message: Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n`\r\n\r\nIs there any reason that why /t:package is not including the netstandard.dll?","Url":"https://github.com/dotnet/standard/issues/1334","RelatedDescription":"Open issue \"MSBuild can't package .net 4.6.1 project w/ net core refrences. missing netstandard dll \" (#1334)"},{"Id":"466870629","IsPullRequest":true,"CreatedAt":"2019-07-11T12:55:38","Actor":"dotnet-maestro[bot]","Number":"1332","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190710.10\r\n- **Date Produced**: 7/11/2019 5:40 AM\r\n- **Commit**: e75dd151c9e5aa94cf33c7c9d14a53180df747dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19360.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19360.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19360.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1332","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1332)"},{"Id":"466851318","IsPullRequest":true,"CreatedAt":"2019-07-11T12:14:41","Actor":"dotnet-maestro[bot]","Number":"1331","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190710.8\r\n- **Date Produced**: 7/10/2019 11:51 PM\r\n- **Commit**: a6ae1b637ed236354529992729af875f6c8a180a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19360.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19360.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19360.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19360.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19360.8\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19360.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1331","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1331)"},{"Id":"466524102","IsPullRequest":true,"CreatedAt":"2019-07-11T03:12:52","Actor":"riarenas","Number":"1327","RawContent":null,"Title":"Add feeds from Versions.props to NuGet.config","State":"closed","Body":"We need all restore sources to be located in NuGet.config since internal feeds can only be restored from there. More details including next steps [here](https://github.com/dotnet/arcade/blob/master/Documentation/RestoreSourcesUpdateStatus.md)","Url":"https://github.com/dotnet/standard/pull/1327","RelatedDescription":"Closed or merged PR \"Add feeds from Versions.props to NuGet.config\" (#1327)"},{"Id":"466572937","IsPullRequest":true,"CreatedAt":"2019-07-11T03:12:43","Actor":"wtgodbe","Number":"1328","RawContent":null,"Title":" Remove myget dotnet-core feed from restore sources in Versions.props","State":"closed","Body":"It isn't needed as we can restore everything from dotnetfeed.\r\n\r\nCC @ericstj @riarenas ","Url":"https://github.com/dotnet/standard/pull/1328","RelatedDescription":"Closed or merged PR \" Remove myget dotnet-core feed from restore sources in Versions.props\" (#1328)"},{"Id":"465994202","IsPullRequest":true,"CreatedAt":"2019-07-10T20:54:41","Actor":"akeeton","Number":"1323","RawContent":null,"Title":"Fix \"compat shim\" link in FAQ","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1323","RelatedDescription":"Closed or merged PR \"Fix \"compat shim\" link in FAQ\" (#1323)"},{"Id":"466292622","IsPullRequest":true,"CreatedAt":"2019-07-10T13:04:35","Actor":"dotnet-maestro[bot]","Number":"1325","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190710.1\r\n- **Date Produced**: 7/10/2019 11:55 AM\r\n- **Commit**: dcf1c8f51bcdbd79e08cc672e327d50612690a25\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19360.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19360.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19360.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1325","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1325)"},{"Id":"466269735","IsPullRequest":true,"CreatedAt":"2019-07-10T12:14:14","Actor":"dotnet-maestro[bot]","Number":"1324","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190709.6\r\n- **Date Produced**: 7/9/2019 10:54 PM\r\n- **Commit**: 0f5dd7680174620f31c9a00cdb2ac0b0e70e631f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19359.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19359.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19359.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19359.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19359.6\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19359.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1324","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1324)"},{"Id":"465762776","IsPullRequest":true,"CreatedAt":"2019-07-09T13:00:52","Actor":"dotnet-maestro[bot]","Number":"1322","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190708.6\r\n- **Date Produced**: 7/9/2019 4:54 AM\r\n- **Commit**: bfa7b12fb8a3424e4bc5c6e553d9999bb605d397\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19358.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19358.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19358.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1322","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1322)"},{"Id":"465741988","IsPullRequest":true,"CreatedAt":"2019-07-09T12:14:15","Actor":"dotnet-maestro[bot]","Number":"1321","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190709.1\r\n- **Date Produced**: 7/9/2019 7:41 AM\r\n- **Commit**: ef3834feb8615429a58808cdcf9ad9284d767654\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19359.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19359.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19359.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19359.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19359.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19359.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1321","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1321)"},{"Id":"465242195","IsPullRequest":true,"CreatedAt":"2019-07-08T13:05:38","Actor":"dotnet-maestro[bot]","Number":"1320","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190707.5\r\n- **Date Produced**: 7/8/2019 4:45 AM\r\n- **Commit**: 3b426f78a3aab1a45f797ac22e70fd203165d810\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19357.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19357.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19357.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1320","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1320)"},{"Id":"465219152","IsPullRequest":true,"CreatedAt":"2019-07-08T12:14:22","Actor":"dotnet-maestro[bot]","Number":"1319","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190708.1\r\n- **Date Produced**: 7/8/2019 7:34 AM\r\n- **Commit**: 4953cdf6c956adf69a0050c4df503048aed6b271\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19358.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19358.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19358.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19358.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19358.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19358.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1319","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1319)"},{"Id":"464949613","IsPullRequest":true,"CreatedAt":"2019-07-07T13:01:58","Actor":"dotnet-maestro[bot]","Number":"1318","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190706.5\r\n- **Date Produced**: 7/7/2019 1:21 AM\r\n- **Commit**: 15abdfc3816352c64098735b79a98dd97524ee36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19356.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1318","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1318)"},{"Id":"464945513","IsPullRequest":true,"CreatedAt":"2019-07-07T12:14:11","Actor":"dotnet-maestro[bot]","Number":"1317","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1317","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1317)"},{"Id":"464852128","IsPullRequest":true,"CreatedAt":"2019-07-06T13:13:54","Actor":"dotnet-maestro[bot]","Number":"1316","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190705.7\r\n- **Date Produced**: 7/6/2019 4:27 AM\r\n- **Commit**: 6c6d68558aaccbd16de6e84cf7e59c0fb32b8273\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19355.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1316","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1316)"},{"Id":"464847928","IsPullRequest":true,"CreatedAt":"2019-07-06T12:14:14","Actor":"dotnet-maestro[bot]","Number":"1315","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 3e0cbbc6fd6c6d45d7083ee0deb71cec7ea2d91f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19355.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1315","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1315)"},{"Id":"464628179","IsPullRequest":true,"CreatedAt":"2019-07-05T13:04:38","Actor":"dotnet-maestro[bot]","Number":"1314","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190704.4\r\n- **Date Produced**: 7/4/2019 7:32 PM\r\n- **Commit**: 477abf147d8860fae35f975fddafb2711ee42bd4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19354.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19354.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19354.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1314","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1314)"},{"Id":"464608260","IsPullRequest":true,"CreatedAt":"2019-07-05T12:10:56","Actor":"dotnet-maestro[bot]","Number":"1313","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190704.2\r\n- **Date Produced**: 7/4/2019 10:42 PM\r\n- **Commit**: 30553c0de34454fb8da5229962501af65eb1233f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19354.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1313","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1313)"},{"Id":"464366313","IsPullRequest":false,"CreatedAt":"2019-07-04T18:29:29","Actor":"PKYADAV","Number":"1311","RawContent":null,"Title":"DataAnnotation Validation in Xamarin.Forms","State":"open","Body":"Hi Team, \r\n\r\nI have class library in .net Standard 2.0 with EntityFrameworkCore. I have created class with Custom DataAnnotation as below:\r\n\r\n**Model Definition**\r\n\r\n```C#\r\n    public class UserLogin : NotificationObject\r\n    {\r\n        [DbRequired]\r\n        [Display(Name = \"USER NAME\", Prompt = \"ENTER USER NAME\")]\r\n        public string User_Name\r\n        {\r\n            get { return GetValue(() => User_Name); }\r\n            set { SetValue(() => User_Name, value); }\r\n        }\r\n\r\n        [Display(Name = \"PASSWORD\", Prompt = \"ENTER PASSWORD\")]\r\n        [DataType(DataType.Password)]\r\n        [DbRequired]\r\n        public string User_Password\r\n        {\r\n            get { return GetValue(() => User_Password); }\r\n            set { SetValue(() => User_Password, value); }\r\n        }\r\n    }\r\n```\r\n\r\n**But this data annotation validation is working in Asp.Net Core and WPF. But we want to use the same in Xamarin.Forms for Android & iOS and UWP. Is it possible or any workaround? As I heard that in .net Standard you need write once and can be reuse in all other environment**","Url":"https://github.com/dotnet/standard/issues/1311","RelatedDescription":"Open issue \"DataAnnotation Validation in Xamarin.Forms\" (#1311)"},{"Id":"464253942","IsPullRequest":true,"CreatedAt":"2019-07-04T13:09:50","Actor":"dotnet-maestro[bot]","Number":"1310","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190703.8\r\n- **Date Produced**: 7/4/2019 2:48 AM\r\n- **Commit**: b21ca5fddd281f835de98dbe950405bcf9397ac4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19353.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19353.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19353.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1310","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1310)"},{"Id":"464230062","IsPullRequest":true,"CreatedAt":"2019-07-04T12:14:16","Actor":"dotnet-maestro[bot]","Number":"1309","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190703.19\r\n- **Date Produced**: 7/3/2019 10:58 PM\r\n- **Commit**: 733f8297b68dd824044a77d955e62305b9dc43d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19353.19\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1309","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1309)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"467792071","IsPullRequest":false,"CreatedAt":"2019-07-14T03:57:47","Actor":"geoffkizer","Number":"39461","RawContent":null,"Title":"HTTP2: Dispose on response stream before stream is fully consumed does not remove stream from the stream dictionary","State":"open","Body":"If you dispose the response stream before consuming all the data, we do not remove the Http2Stream from the connection's stream dictionary. This means that the connection still thinks the Http2Stream is open, and the connection will never go away.","Url":"https://github.com/dotnet/corefx/issues/39461","RelatedDescription":"Open issue \"HTTP2: Dispose on response stream before stream is fully consumed does not remove stream from the stream dictionary\" (#39461)"},{"Id":"467791101","IsPullRequest":false,"CreatedAt":"2019-07-14T03:40:26","Actor":"geoffkizer","Number":"39460","RawContent":null,"Title":"HTTP2 Duplex: Receiving non-success status code does not allow response body to be read","State":"open","Body":"When we receive a non-success status code (e.g. 403), we stop sending the request body. However, we also immediately send a RST_STREAM, which causes the server to stop sending the response body if it hasn't finished already. This means the client cannot reliably read the response body. (Note this works for HTTP/1.1, though we only do this when Expect: 100-continue is used; for HTTP2 we always do it.)\r\n\r\nWe should simply stop sending the request body and defer the RST_STREAM until the response body has been fully read.","Url":"https://github.com/dotnet/corefx/issues/39460","RelatedDescription":"Open issue \"HTTP2 Duplex: Receiving non-success status code does not allow response body to be read\" (#39460)"},{"Id":"467790856","IsPullRequest":false,"CreatedAt":"2019-07-14T03:35:30","Actor":"geoffkizer","Number":"39459","RawContent":null,"Title":"HTTP2: Exception during request body send does not send a RST_STREAM to the server","State":"open","Body":"If an exception occurs while sending the request body (i.e. HttpContent.SerializeToStreamAsync), we do not send a RST_STREAM to the server. We should.\r\n\r\nI'm working on a PR to add a test for this.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/39459","RelatedDescription":"Open issue \"HTTP2: Exception during request body send does not send a RST_STREAM to the server\" (#39459)"},{"Id":"467790726","IsPullRequest":false,"CreatedAt":"2019-07-14T03:32:15","Actor":"geoffkizer","Number":"39458","RawContent":null,"Title":"HTTP2: Receiving RST_STREAM from server does not interrupt request body send","State":"open","Body":"If you do a POST and send request content, and the server sends a RST_STREAM, we continue to allow writes on the request body stream, and in fact we keep sending DATA frames to the server.\r\n\r\nInstead, we should fail the next attempted write on the request stream and not send any more DATA frames to the server.\r\n\r\nI'm working on a PR to add a test for this.","Url":"https://github.com/dotnet/corefx/issues/39458","RelatedDescription":"Open issue \"HTTP2: Receiving RST_STREAM from server does not interrupt request body send\" (#39458)"},{"Id":"467781462","IsPullRequest":false,"CreatedAt":"2019-07-14T00:55:32","Actor":"JeremyKuhne","Number":"39457","RawContent":null,"Title":"Need tests for JsonSerializerOptions.GetConverter","State":"open","Body":"We should test that `GetConverter` on a default `JsonSerializerOptions` always returns expected converters for given types. (Even though they are mostly currently internal, we should always get the bool converter for bool, etc.)\r\n\r\nIn addition to validating that we get the expected converter, we should add tests to ensure they don't try to dereference options sent to the `Read`/`Write`/`GetConverter` methods. (I.e. get the converter, then call it's methods with a null `JsonSerializerOptions`.)\r\n\r\ncc: @steveharter","Url":"https://github.com/dotnet/corefx/issues/39457","RelatedDescription":"Open issue \"Need tests for JsonSerializerOptions.GetConverter\" (#39457)"},{"Id":"467777317","IsPullRequest":true,"CreatedAt":"2019-07-13T23:45:24","Actor":"davidsh","Number":"39456","RawContent":null,"Title":"[release/2.1] Catch exception in ssl handshake so it can be propagated to async caller","State":"open","Body":"Port fix from PR #34089 (.NET Core 3.0) to release/2.1 LTS branch.\r\n\r\nFixes #34033","Url":"https://github.com/dotnet/corefx/pull/39456","RelatedDescription":"Open PR \"[release/2.1] Catch exception in ssl handshake so it can be propagated to async caller\" (#39456)"},{"Id":"467775740","IsPullRequest":true,"CreatedAt":"2019-07-13T23:17:13","Actor":"benaadams","Number":"39455","RawContent":null,"Title":"Amortize WebSocket.EnsureBufferContainsAsync calls","State":"open","Body":"Pre\r\n![image](https://user-images.githubusercontent.com/1142958/61177396-6b159a00-a5cc-11e9-9552-a6d8c88cf6ba.png)\r\n\r\n\r\nPost\r\n![image](https://user-images.githubusercontent.com/1142958/61177400-8f717680-a5cc-11e9-83fc-c48e18bdfd20.png)\r\n\r\n\r\nContributes to https://github.com/dotnet/corefx/issues/39256\r\n\r\nIgnore ident changes https://github.com/dotnet/corefx/pull/39455/files?w=1\r\n\r\n/cc @stephentoub @davidsh ","Url":"https://github.com/dotnet/corefx/pull/39455","RelatedDescription":"Open PR \"Amortize WebSocket.EnsureBufferContainsAsync calls\" (#39455)"},{"Id":"467771887","IsPullRequest":true,"CreatedAt":"2019-07-13T22:23:22","Actor":"Dotnet-GitSync-Bot","Number":"39454","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/39454","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#39454)"},{"Id":"467757865","IsPullRequest":true,"CreatedAt":"2019-07-13T21:34:30","Actor":"bartonjs","Number":"39452","RawContent":null,"Title":"Remove the WriteNullStringAsProperty test","State":"closed","Body":"The writer has standardized on not allowing null -> Empty coercion, and this\r\ntest no longer is needed since JsonElement doesn't have a WriteProperty method,\r\nand a JsonProperty can't ever have a null property name.\r\n\r\nFixes #39451.","Url":"https://github.com/dotnet/corefx/pull/39452","RelatedDescription":"Closed or merged PR \"Remove the WriteNullStringAsProperty test\" (#39452)"},{"Id":"467746356","IsPullRequest":false,"CreatedAt":"2019-07-13T21:34:30","Actor":"benaadams","Number":"39451","RawContent":null,"Title":"Test ArgumentNullException JsonElementWriteTests.WriteNullStringAsProperty","State":"closed","Body":"`netfx-Windows_NT-Release-x86-Windows.10.Amd64.ClientRS5.Open`\r\n\r\nSystem.Text.Json.Tests.JsonElementWriteTests.WriteNullStringAsProperty(indented: True)\r\nSystem.Text.Json.Tests.JsonElementWriteTests.WriteNullStringAsProperty(indented: False)\r\n```\r\nError message\r\nSystem.ArgumentNullException : Value cannot be null.\\r\\nParameter name: propertyName\r\n\r\nStack trace\r\n   at System.Text.Json.Utf8JsonWriter.WritePropertyName(String propertyName)\r\n       in /_/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.WriteProperties.String.cs:line 52\r\n   at System.Text.Json.Tests.JsonElementWriteTests.WritePropertyValue(Boolean indented, String propertyName, String jsonIn, String expectedIndent, String expectedMinimal)\r\n       in /_/src/System.Text.Json/tests/JsonElementWriteTests.cs:line 1086\r\n   at System.Text.Json.Tests.JsonElementWriteTests.WritePropertyValueBothForms(Boolean indented, String propertyName, String jsonIn, String expectedIndent, String expectedMinimal)\r\n       in /_/src/System.Text.Json/tests/JsonElementWriteTests.cs:line 1042\r\n   at System.Text.Json.Tests.JsonElementWriteTests.WriteNullStringAsProperty(Boolean indented)\r\n       in /_/src/System.Text.Json/tests/JsonElementWriteTests.cs:line 398\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=264150&view=ms.vss-test-web.build-test-results-tab\r\n\r\n/cc @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/39451","RelatedDescription":"Closed issue \"Test ArgumentNullException JsonElementWriteTests.WriteNullStringAsProperty\" (#39451)"},{"Id":"467760392","IsPullRequest":true,"CreatedAt":"2019-07-13T20:34:13","Actor":"benaadams","Number":"39453","RawContent":null,"Title":"Amortize StreamPipeReader ReadAsync calls (async)","State":"closed","Body":"`async` version of https://github.com/dotnet/corefx/pull/39450 and using `ManualResetValueTaskSourceCore` for logic\r\n\r\nResolves #39258","Url":"https://github.com/dotnet/corefx/pull/39453","RelatedDescription":"Closed or merged PR \"Amortize StreamPipeReader ReadAsync calls (async)\" (#39453)"},{"Id":"467737199","IsPullRequest":true,"CreatedAt":"2019-07-13T16:00:23","Actor":"benaadams","Number":"39450","RawContent":null,"Title":"Amortize StreamPipeReader ReadAsync calls","State":"open","Body":"Current\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/61174569-f6c20300-a599-11e9-91e6-f69f8a889996.png)\r\n\r\nPR\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/61174573-080b0f80-a59a-11e9-88ac-6db26303b1e5.png)\r\n\r\n\r\nResolves https://github.com/dotnet/corefx/issues/39258","Url":"https://github.com/dotnet/corefx/pull/39450","RelatedDescription":"Open PR \"Amortize StreamPipeReader ReadAsync calls\" (#39450)"},{"Id":"467723220","IsPullRequest":true,"CreatedAt":"2019-07-13T15:05:59","Actor":"dotnet-maestro[bot]","Number":"39449","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27912-15\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview8-27912-15\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190712.11\r\n- **Date Produced**: 7/13/2019 6:12 AM\r\n- **Commit**: 1841042b99062de13dc80098cede9413be569238\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview8.19362.11\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19362.11\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190713.2\r\n- **Date Produced**: 7/13/2019 1:13 PM\r\n- **Commit**: 820d959a06a5b1a75df4ac7dfa6a52aca4de8f3d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19363.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39449","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard\" (#39449)"},{"Id":"467715601","IsPullRequest":true,"CreatedAt":"2019-07-13T14:21:51","Actor":"dotnet-maestro[bot]","Number":"39448","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190712.2\r\n- **Date Produced**: 7/13/2019 12:47 AM\r\n- **Commit**: 4b5ae70e341bad3c9f25d33cfee58d2bb93d3db7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19362.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19362.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview8.19362.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39448","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#39448)"},{"Id":"467711973","IsPullRequest":true,"CreatedAt":"2019-07-13T13:42:31","Actor":"dotnet-maestro[bot]","Number":"39447","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19362.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19362.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39447","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#39447)"},{"Id":"467662529","IsPullRequest":true,"CreatedAt":"2019-07-13T11:12:29","Actor":"dotnet-maestro-bot","Number":"39446","RawContent":null,"Title":"Update ProjectNTfs, ProjectNTfsTestILC to rel-27913-00, rel-27913-00, respectively (release/uwp6.2)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/39446","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs, ProjectNTfsTestILC to rel-27913-00, rel-27913-00, respectively (release/uwp6.2)\" (#39446)"},{"Id":"467629572","IsPullRequest":true,"CreatedAt":"2019-07-13T01:17:33","Actor":"wtgodbe","Number":"39444","RawContent":null,"Title":"Fix writer depth issue on large stream async (#39417)","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/39413 for preview7. \r\n\r\nPort of https://github.com/dotnet/corefx/pull/39417\r\n\r\nCC @steveharter @pranavkm @ericstj @mmitche ","Url":"https://github.com/dotnet/corefx/pull/39444","RelatedDescription":"Closed or merged PR \"Fix writer depth issue on large stream async (#39417)\" (#39444)"},{"Id":"467626531","IsPullRequest":true,"CreatedAt":"2019-07-13T00:28:57","Actor":"dotnet-maestro[bot]","Number":"39443","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190712.3\r\n- **Date Produced**: 7/12/2019 10:01 PM\r\n- **Commit**: 7d746032296147d82b586df5c6301e90a0bba56e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19362.3\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39443","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#39443)"},{"Id":"467642142","IsPullRequest":false,"CreatedAt":"2019-07-13T00:04:42","Actor":"GrabYourPitchforks","Number":"39445","RawContent":null,"Title":"JavaScriptEncoder shouldn't escape '/' by default","State":"open","Body":"There's no need for the `JavaScriptEncoder` type to escape the `/ (U+002F SOLIDUS)` character by default. It's not JavaScript-sensitive, ECMAScript-sensitive (per ECMA-262), or JSON-sensitive (per RFC 8259).\r\n\r\nSpecifically, given [ECMA-262 Â§11.8.4](https://ecma-international.org/ecma-262/#sec-literals-string-literals) which does not list `/` as type _SingleEscapeCharacter_, and given [RFC 8259 Â§7](https://tools.ietf.org/html/rfc8259#section-7) which lists it as an optional JSON escape character, `JavaScriptEncoder` should have the following behaviors:\r\n\r\n1. `/` is in the default allow list unless the caller has explicitly instantiated the `JavaScriptEncoder` instance with a custom bitmap where this character is not in the allow list.\r\n\r\n2. If `/` is in the allow list, it does not need to be escaped.\r\n\r\n3. Otherwise, if `/` must be escaped and the option `JavaScriptEscapingBehavior.RelaxedJsonEscaping` (see https://github.com/dotnet/corefx/issues/39410) __has not__ been specified, the character `/` is escaped as the six-character string `\\u002F`.\r\n\r\n4. Otherwise, if `/` must be escaped and the option `JavaScriptEscapingBehavior.RelaxedJsonEscaping` __has__ been specified, the character `/` is escaped as the two-character string `\\/`.","Url":"https://github.com/dotnet/corefx/issues/39445","RelatedDescription":"Open issue \"JavaScriptEncoder shouldn't escape '/' by default\" (#39445)"},{"Id":"467550803","IsPullRequest":true,"CreatedAt":"2019-07-12T23:36:37","Actor":"sbomer","Number":"39432","RawContent":null,"Title":"Add reflection root for DataTableMappingConverter","State":"closed","Body":"Used via TypeConverterAttribute.\r\nCaught while investigating linker diffs.\r\n\r\nSeparating this out from https://github.com/dotnet/corefx/pull/39287","Url":"https://github.com/dotnet/corefx/pull/39432","RelatedDescription":"Closed or merged PR \"Add reflection root for DataTableMappingConverter\" (#39432)"},{"Id":"467613241","IsPullRequest":true,"CreatedAt":"2019-07-12T22:46:38","Actor":"safern","Number":"39440","RawContent":null,"Title":"Fix VS Test explorer SDK mismatch","State":"closed","Body":"Currently, since we introduced the SDK into global.json and the version we're using to produce the testhost's SDK is `ProductVersion` it creates an SDK with 3.0.0 version. So when trying to open a solution with `build.cmd -vs` you get the following error: \r\n\r\n> E:\\repos\\corefxCopy\\corefx\\src\\System.Runtime\\ref\\System.Runtime.csproj : error  : The project file cannot be opened by the project system, because it is missing some critical imports or the referenced SDK cannot be found.\r\n>\r\n> Detailed Information:\r\nUnable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.\r\n\r\nThis fixes it to use the version defined in global.json and match the SDK version.\r\n\r\ncc: @scalablecory ","Url":"https://github.com/dotnet/corefx/pull/39440","RelatedDescription":"Closed or merged PR \"Fix VS Test explorer SDK mismatch\" (#39440)"},{"Id":"467621756","IsPullRequest":true,"CreatedAt":"2019-07-12T22:21:35","Actor":"steveharter","Number":"39442","RawContent":null,"Title":"Replace collection instances on deserialize","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/38435 the original issue with \"Collection was of a fixed size\" for pre-populated arrays.\r\n\r\n\r\n\r\nIn addition the semantics for how collections are materialized has changed:\r\n- Pre-populated collections with a setter are replaced on deserialization.\r\n- Pre-populated collections without a setter are ignored on deserialization.\r\n\r\nPreviously, pre-populated collections were appended to (when possible).\r\n\r\nReplaces PR https://github.com/dotnet/corefx/pull/38797. cc @YohDeadfall ","Url":"https://github.com/dotnet/corefx/pull/39442","RelatedDescription":"Open PR \"Replace collection instances on deserialize\" (#39442)"},{"Id":"467617571","IsPullRequest":false,"CreatedAt":"2019-07-12T22:04:27","Actor":"ericstj","Number":"39441","RawContent":null,"Title":"Improve performance of Package testing leg","State":"open","Body":"Related #35693\r\n\r\nA couple ideas we can use to shorten this:\r\n1. Do a sparse matrix of RIDs for all the older frameworks.  The self-contained restores and tests are really the longest part of this work.  We end up doing a dozen tests for each framework, all of which have to download the entire shared framework for those RIDs.\r\n2. Pre-restore the framework packages on the build machine and add them to a package folder that gets shared with all helix clients.  This has the potential of saving multiple clients from hitting nuget servers to download old packages.  They still end up downloading through helix though, so I don't this alone is a sufficient without also doing 1.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/39441","RelatedDescription":"Open issue \"Improve performance of Package testing leg\" (#39441)"},{"Id":"467612350","IsPullRequest":false,"CreatedAt":"2019-07-12T21:45:35","Actor":"terrajobst","Number":"39439","RawContent":null,"Title":"Mark Microsoft.Bcl.AsyncInterfaces & Microsoft.Bcl.HashCode as stable in Preview 8","State":"open","Body":"We have received requests that people would like to ship packages on top of these. Given that\r\n\r\n1. They are done.\r\n2. They are for .NET Standard 2.0 (rather than .NET Core 3.0) earlier is better than later.\r\n\r\n/cc @ericstj @wtgodbe ","Url":"https://github.com/dotnet/corefx/issues/39439","RelatedDescription":"Open issue \"Mark Microsoft.Bcl.AsyncInterfaces & Microsoft.Bcl.HashCode as stable in Preview 8\" (#39439)"},{"Id":"467611011","IsPullRequest":true,"CreatedAt":"2019-07-12T21:40:43","Actor":"JeremyKuhne","Number":"39438","RawContent":null,"Title":"Make CreateConverter public and add options","State":"open","Body":"This is to facilitate composition with factory converters.\r\n\r\nFixes #39307 \r\nFixes #39248 ","Url":"https://github.com/dotnet/corefx/pull/39438","RelatedDescription":"Open PR \"Make CreateConverter public and add options\" (#39438)"},{"Id":"467608600","IsPullRequest":true,"CreatedAt":"2019-07-12T21:32:15","Actor":"Anipik","Number":"39437","RawContent":null,"Title":"Added client operation for posting form data","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/39437","RelatedDescription":"Open PR \"Added client operation for posting form data\" (#39437)"},{"Id":"467607046","IsPullRequest":true,"CreatedAt":"2019-07-12T21:26:53","Actor":"jkotalik","Number":"39436","RawContent":null,"Title":"Increase wait timeout and add extra logs for Pipe Deadlock tests","State":"open","Body":"Part of https://github.com/dotnet/corefx/issues/38156. I don't know whether it's a bad test or there is a legitimate issue. As mentioned in the thread, I'm going to increase the wait timeout and make the exception contain info about which thread didn't finish.","Url":"https://github.com/dotnet/corefx/pull/39436","RelatedDescription":"Open PR \"Increase wait timeout and add extra logs for Pipe Deadlock tests\" (#39436)"},{"Id":"467604510","IsPullRequest":false,"CreatedAt":"2019-07-12T21:11:31","Actor":"olandese","Number":"39435","RawContent":null,"Title":"DangerousAcceptAnyServerCertificateValidator delegated not working on Ubuntu 18.04","State":"open","Body":"# Issue Title\r\n\r\nDangerousAcceptAnyServerCertificateValidator is ignored on Ubuntu 18.04 with .Net Core 2.2.301\r\n\r\n\r\n# General\r\nI'm using the HttpClient and the DangerousAcceptAnyServerCertificateValidator delegate in the HttpClientHandler but calling rest api with self-signed cerificate generated from a self-signed root certificate, I get the following error: \r\n\r\nError Message:\r\n   System.Threading.Tasks.TaskCanceledException : The operation was canceled.\r\n  Stack Trace:\r\n     at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n\r\nFor more information see my blog post https://blog.olandese.nl/2019/07/12/solve-system-threading-tasks-taskcanceledexception-the-operation-was-canceled-on-ubuntu-18-04-in-net-core-2-2/","Url":"https://github.com/dotnet/corefx/issues/39435","RelatedDescription":"Open issue \"DangerousAcceptAnyServerCertificateValidator delegated not working on Ubuntu 18.04\" (#39435)"},{"Id":"467579693","IsPullRequest":false,"CreatedAt":"2019-07-12T20:04:23","Actor":"mdolan92869","Number":"39434","RawContent":null,"Title":"Process.StartTime on macOS returns different values","State":"open","Body":"When getting the StartTime for a process, each time it's called for a new instance of the same process, it has a different value. I believe that the issue is in StartTimeCore where the native \"now\" time is retrieved, a bunch of arithmetic is performed, then the C# \"now\" time is retrieved. Since operations were between the two \"now\" calls, the \"now\" values will obviously be different, but they're used as if they're the same. I've attached a sample program that will show the deltas between StartTime accesses.\r\n\r\nSystem: macOS 10.14.5 Mojave\r\n\r\n[ProcessStartTime.zip](https://github.com/dotnet/corefx/files/3387833/ProcessStartTime.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/39434","RelatedDescription":"Open issue \"Process.StartTime on macOS returns different values\" (#39434)"},{"Id":"467561294","IsPullRequest":false,"CreatedAt":"2019-07-12T19:12:48","Actor":"pranavkm","Number":"39433","RawContent":null,"Title":"Consider adding support for UTF16 inputs to JsonSerializer","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/issues/39433","RelatedDescription":"Open issue \"Consider adding support for UTF16 inputs to JsonSerializer\" (#39433)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"467793654","IsPullRequest":false,"CreatedAt":"2019-07-14T04:26:42","Actor":"panopticoncentral","Number":"37212","RawContent":null,"Title":"VisualStudioOptionsProcessor holds on to command-line string causing heap growth","State":"open","Body":"On a large .NET Core-based solution I'm analyzing, about 2.7% of the heap (or 55Mb) is taken up by VisualStudioOptionsProcessor. The issue seems to be that the class holds on to a string that contains the entire command-line, which in the case of .NET Core projects can be extremely long due to all the framework reference parameters. This seems to be somewhat unnecessary as the only reason it appears we hold on to the string is so that if a ruleset file changes we can update the current diagnostic settings. It seems like we could simply remember only what diagnostic settings were specified on the command-line and use that to calculate the effective diagnostic settings instead when a ruleset file changes, without holding on to the entire string.","Url":"https://github.com/dotnet/roslyn/issues/37212","RelatedDescription":"Open issue \"VisualStudioOptionsProcessor holds on to command-line string causing heap growth\" (#37212)"},{"Id":"467791641","IsPullRequest":false,"CreatedAt":"2019-07-14T03:50:36","Actor":"panopticoncentral","Number":"37211","RawContent":null,"Title":"Metadata property storage is inefficient in VisualStudioProject","State":"closed","Body":"In heap dumps of large CPS solutions, ~15% of the heap is taken up by VisualStudioProject instances. The issue is VisualStudioProject._allMetadataReferences. While most metadata references have the default metadata properties, every time a metadata reference is added the code currently adds an entry in _allMetadataReferences pointing to a list of metadata properties. First, if the metadata properties are default and there's only one reference, we're wasting space by allocating the list in the first place. But second, this list starts with an initial capacity of 4, which means that we're wasting quadruple the space. For every metadata reference. Of which there are a _lot_ in .NET Core.\r\n\r\nThe solution is just to optimize the case where there is only one of the metadata reference and it has the default properties. So:\r\n\r\n* `!_allMetadataReferences.TryGetValue(path, out var list)` means \"we have not seen this reference\"\r\n* `_allMetadataReferences.TryGetValue(path, out var list) && list == null` means \"we have seen only one of this reference and its metadata properties are the default ones.\"\r\n* Otherwise, we've either seen this reference multiple times, or the one time we saw it its metadata properties were not the default.\r\n\r\nI chose not to optimize the remove path (i.e. you have multiple references and you remove every one except the default properties) because it seemed to be a pretty esoteric situation.","Url":"https://github.com/dotnet/roslyn/issues/37211","RelatedDescription":"Closed issue \"Metadata property storage is inefficient in VisualStudioProject\" (#37211)"},{"Id":"467780986","IsPullRequest":false,"CreatedAt":"2019-07-14T00:46:53","Actor":"gafter","Number":"37210","RawContent":null,"Title":"Test broken by recent change to target-type switch expressions``","State":"open","Body":"The following test in `roslyn\\src\\EditorFeatures\\CSharpTest\\ExtractMethod\\ExtractMethodTests.LanguageInteraction.cs` is broken by the change to make switch expressions target-typed.\r\n\r\n``` c#\r\n            [WorkItem(545180, \"http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/545180\")]\r\n            [Fact, Trait(Traits.Feature, Traits.Features.ExtractMethod)]\r\n            public async Task NodeHasSyntacticErrors()\r\n            {\r\n                var code = @\"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Linq.Expressions;\r\n \r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        Expression<Func<int>> f3 = ()=>[|switch {|]\r\n \r\n        };\r\n    }\r\n}\r\n\";\r\n                await ExpectExtractMethodToFailAsync(code);\r\n            }\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/37210","RelatedDescription":"Open issue \"Test broken by recent change to target-type switch expressions``\" (#37210)"},{"Id":"467773075","IsPullRequest":false,"CreatedAt":"2019-07-13T22:36:55","Actor":"CyrusNajmabadi","Number":"37209","RawContent":null,"Title":"Can't build latest roslyn","State":"open","Body":"![image](https://user-images.githubusercontent.com/4564579/61177200-00d90700-a584-11e9-83fd-5376a68e858b.png)\r\n\r\nError is:\r\nError\tCS1025\tSingle-line comment or end-of-line expected\t\r\n\r\nLooks like we're trying to use nullable, but the IDE doesn't understand it.  \r\n\r\nNot sure what to do about this.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/37209","RelatedDescription":"Open issue \"Can't build latest roslyn\" (#37209)"},{"Id":"467772782","IsPullRequest":false,"CreatedAt":"2019-07-13T22:32:26","Actor":"CyrusNajmabadi","Number":"37208","RawContent":null,"Title":"'messages' seem to populate one project at a time (or worse).","State":"open","Body":"Repro: open Roslyn.sln in roslyn.  Turn on fsa.  Wait for 'messages' to populate.  In hte lower left (in the background tasks list), you'll see files flying past as they're analyzed.  However, despite this, items don't show in the error list.  Then, at some point, they'll start coming.  But it's slow, and a huge chunk at a time.  i.e. i went from 150 messages for a long time to like 3000.  Then 7000.  And so on and so forth.\r\n\r\nIt appears as if the messages are getting buffered and are only being reported by a project in bulk, instead of as they are computed and at a much more reasonable \"live\" clip.","Url":"https://github.com/dotnet/roslyn/issues/37208","RelatedDescription":"Open issue \"'messages' seem to populate one project at a time (or worse).\" (#37208)"},{"Id":"467771571","IsPullRequest":true,"CreatedAt":"2019-07-13T22:15:15","Actor":"CyrusNajmabadi","Number":"37207","RawContent":null,"Title":"Use pattern matching in a few more places.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/37207","RelatedDescription":"Open PR \"Use pattern matching in a few more places.\" (#37207)"},{"Id":"467771558","IsPullRequest":false,"CreatedAt":"2019-07-13T22:14:59","Actor":"DanTsk","Number":"37206","RawContent":null,"Title":"Build runnable .NET Core Console App using Roslyn","State":"open","Body":"**Version Used**: \r\n`3.0.100-preview6-012264`\r\n\r\nI am trying to perform compilation to an exe file using Roslyn. \r\nI have used this code to a source for compilation.\r\n```\r\nnamespace Compiler\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello\");\r\n        }\r\n    }\r\n}\r\n```\r\nAnd code of my compiler.\r\n```\r\nnamespace Compiler\r\n{\r\n    public class Compiler\r\n    {\r\n        private CSharpCompilation _compilation;\r\n\r\n        public Compiler(string assamblyName, string[] sources) {\r\n            var syntaxTrees = ParseSyntaxTrees(sources);\r\n\r\n            _compilation = CSharpCompilation.Create(assamblyName, syntaxTrees, GetMetadataReference(), GetCompilationOptions());\r\n        }\r\n\r\n        public EmitResult Emit(string filePath)\r\n        {\r\n            return _compilation.Emit(filePath);\r\n        }\r\n\r\n        private IEnumerable<SyntaxTree> ParseSyntaxTrees(string[] sources)\r\n        {\r\n            return sources.Select(source => CSharpSyntaxTree.ParseText(source));\r\n        }\r\n\r\n        public IEnumerable<MetadataReference> GetMetadataReference()\r\n        {\r\n            var assemblyPath = Path.GetDirectoryName(typeof(object).Assembly.Location);\r\n\r\n            Console.WriteLine(assemblyPath);\r\n\r\n            return new[] {\r\n                MetadataReference.CreateFromFile(Path.Combine(assemblyPath, \"System.Private.CoreLib.dll\")),\r\n                MetadataReference.CreateFromFile(Path.Combine(assemblyPath, \"System.Console.dll\")),\r\n                MetadataReference.CreateFromFile(Path.Combine(assemblyPath, \"System.Runtime.dll\")),\r\n            };\r\n        }\r\n\r\n        private CSharpCompilationOptions GetCompilationOptions()\r\n        {\r\n            return new CSharpCompilationOptions(OutputKind.ConsoleApplication)\r\n                    .WithOverflowChecks(true)\r\n                    .WithOptimizationLevel(OptimizationLevel.Debug);\r\n        }\r\n    }\r\n}\r\n```\r\nAfter generation of exe file in the file system (for experiment) I placed that exe to `Microsoft.NETCore.App` folder with all `dlls`, to confirm that it works. \r\n\r\nRunning generated exe file:\r\n**Expected Behavior**:\r\n```\r\nHello\r\n```\r\n\r\n**Actual Behavior**:\r\nFor: `3.0.100-preview6-012264`\r\n```\r\nUnhandled Exception: System.TypeLoadException: Could not load type 'System.Object' from assembly 'System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e' because the parent does not exist.\r\n```\r\nI really need help with it.\r\nThanks a lot!\r\n","Url":"https://github.com/dotnet/roslyn/issues/37206","RelatedDescription":"Open issue \"Build runnable .NET Core Console App using Roslyn\" (#37206)"},{"Id":"467765501","IsPullRequest":false,"CreatedAt":"2019-07-13T20:55:33","Actor":"CyrusNajmabadi","Number":"37205","RawContent":null,"Title":"\"Time to all errors\" much slower with VS versus rider/resharper","State":"open","Body":"Repro steps:\r\n\r\nClone https://github.com/DotNetAnalyzers/ReflectionAnalyzers\r\n`dotnet restore` the solution\r\nopen in a recent VS.\r\nturn on FSA.\r\nmake a change to: C:\\github\\ReflectionAnalyzers\\ReflectionAnalyzers\\Helpers\\Reflection\\BindingFlags.cs\r\n\r\nFor example, edit `internal enum BindingFlags` to `internal enum BindingFlags1`\r\n\r\nWait for all errors to be reported.\r\n\r\nThis takes roughly 50 seconds on my machine.   For comparison, resharper does it in around 5 seconds (see the spinning icon in hte lower right):\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/61176439-ce281200-a575-11e9-9cde-df798428dc39.png)\r\n\r\nThat's an order of magnitude difference and greatly impacts the experience around being able to introduce issues then efficiently find and fix them.","Url":"https://github.com/dotnet/roslyn/issues/37205","RelatedDescription":"Open issue \"\"Time to all errors\" much slower with VS versus rider/resharper\" (#37205)"},{"Id":"467759701","IsPullRequest":false,"CreatedAt":"2019-07-13T19:45:33","Actor":"CyrusNajmabadi","Number":"37204","RawContent":null,"Title":"Can't 'configure' some IDE analyzers","State":"open","Body":"![image](https://user-images.githubusercontent.com/4564579/61175892-062a5780-a56c-11e9-8921-1d57190e246f.png)\r\n\r\n@mavasani I can 'suppress' this, but i can't configure this.  For example, if i want to make this an error, i don't see how i can use the UI to do that.  \r\n\r\nIs this a bug?  Intentional behavior?\r\n\r\nThanks!","Url":"https://github.com/dotnet/roslyn/issues/37204","RelatedDescription":"Open issue \"Can't 'configure' some IDE analyzers\" (#37204)"},{"Id":"467711775","IsPullRequest":true,"CreatedAt":"2019-07-13T12:01:49","Actor":"dotnet-bot","Number":"37203","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37203","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#37203)"},{"Id":"467658399","IsPullRequest":true,"CreatedAt":"2019-07-13T02:29:41","Actor":"jcouv","Number":"37202","RawContent":null,"Title":"Fix parsing for double-slash langver","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/35719","Url":"https://github.com/dotnet/roslyn/pull/37202","RelatedDescription":"Open PR \"Fix parsing for double-slash langver\" (#37202)"},{"Id":"467653539","IsPullRequest":true,"CreatedAt":"2019-07-13T01:38:42","Actor":"jcouv","Number":"37201","RawContent":null,"Title":"Honor NotNullIfNotNull(string)","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/31549\r\n\r\nRelates to https://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-05-15.md#nullness-dependencies-between-inputs-and-outputs","Url":"https://github.com/dotnet/roslyn/pull/37201","RelatedDescription":"Open PR \"Honor NotNullIfNotNull(string)\" (#37201)"},{"Id":"467377220","IsPullRequest":true,"CreatedAt":"2019-07-13T00:30:05","Actor":"dotnet-bot","Number":"37188","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37188","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#37188)"},{"Id":"467640894","IsPullRequest":true,"CreatedAt":"2019-07-12T23:57:06","Actor":"gafter","Number":"37200","RawContent":null,"Title":"Working State","State":"open","Body":"@tmat As discussed.","Url":"https://github.com/dotnet/roslyn/pull/37200","RelatedDescription":"Open PR \"Working State\" (#37200)"},{"Id":"467616063","IsPullRequest":false,"CreatedAt":"2019-07-12T21:58:30","Actor":"cartermp","Number":"37199","RawContent":null,"Title":"notnull constraint is allowed outside of enabled nullable context","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Community 2019 Int Preview\r\nVersion 16.3.0 Preview 1.0 [29111.216.d16.3]\r\nVisualStudio.16.IntPreview/16.3.0-pre.1.0+29111.216.d16.3\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\n**Steps to Reproduce**:\r\n\r\nCreate a new .NET Core console app with the following code:\r\n\r\n```csharp\r\nusing System;\r\n\r\nnamespace ConsoleApp114\r\n{\r\n    class Foo<T> where T: notnull\r\n    {\r\n\r\n    }\r\n\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nUnrecognized `notnull` constraint, since I have not enabled a nullable context.\r\n\r\n**Actual Behavior**:\r\n\r\n`notnull` is allowed.\r\n\r\nIMO the severity here is low I suppose.","Url":"https://github.com/dotnet/roslyn/issues/37199","RelatedDescription":"Open issue \"notnull constraint is allowed outside of enabled nullable context\" (#37199)"},{"Id":"467613941","IsPullRequest":false,"CreatedAt":"2019-07-12T21:51:09","Actor":"cartermp","Number":"37198","RawContent":null,"Title":"Completion suggests items that will never work at generic constraint site","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Community 2019 Int Preview\r\nVersion 16.3.0 Preview 1.0 [29111.216.d16.3]\r\nVisualStudio.16.IntPreview/16.3.0-pre.1.0+29111.216.d16.3\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\n**Steps to Reproduce**:\r\n\r\nCreate a new .NET Core console app.\r\n\r\nWrite code like this:\r\n\r\n```csharp\r\nusing System;\r\n\r\nnamespace ConsoleApp114\r\n{\r\n    class Foo<T> where T: //<<--- cursor here!\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nOnly generic constraints, or nothing at all.\r\n\r\n**Actual Behavior**:\r\n\r\n![image](https://user-images.githubusercontent.com/6309070/61160483-72498480-a4b4-11e9-928e-13ad992ad158.png)","Url":"https://github.com/dotnet/roslyn/issues/37198","RelatedDescription":"Open issue \"Completion suggests items that will never work at generic constraint site\" (#37198)"},{"Id":"467612247","IsPullRequest":false,"CreatedAt":"2019-07-12T21:45:11","Actor":"genlu","Number":"37197","RawContent":null,"Title":"Import completion might benifit from persisting data to disk and pre-calculation","State":"open","Body":"FYI @heejaechang ","Url":"https://github.com/dotnet/roslyn/issues/37197","RelatedDescription":"Open issue \"Import completion might benifit from persisting data to disk and pre-calculation\" (#37197)"},{"Id":"467611530","IsPullRequest":true,"CreatedAt":"2019-07-12T21:42:37","Actor":"petrroll","Number":"37196","RawContent":null,"Title":"[WIP] Move refactorings to common helpers","State":"open","Body":"Continuation of work on #35525 and #35180","Url":"https://github.com/dotnet/roslyn/pull/37196","RelatedDescription":"Open PR \"[WIP] Move refactorings to common helpers\" (#37196)"},{"Id":"467601784","IsPullRequest":false,"CreatedAt":"2019-07-12T21:09:50","Actor":"CyrusNajmabadi","Number":"37195","RawContent":null,"Title":"Testing results progress flashes continuously while running tests in an extremely distracting manner.","State":"open","Body":"I can't tell what would cause this behavior.  But it's highly annoying and distracting.\r\n\r\n![testing](https://user-images.githubusercontent.com/4564579/61158713-ac178c80-a4ae-11e9-864c-fd23e305cb89.gif)\r\n","Url":"https://github.com/dotnet/roslyn/issues/37195","RelatedDescription":"Open issue \"Testing results progress flashes continuously while running tests in an extremely distracting manner.\" (#37195)"},{"Id":"467600111","IsPullRequest":true,"CreatedAt":"2019-07-12T21:04:23","Actor":"RikkiGibson","Number":"37194","RawContent":null,"Title":"Check for implicit 'this' copy when binding pattern indexers","State":"open","Body":"Resolves #36872","Url":"https://github.com/dotnet/roslyn/pull/37194","RelatedDescription":"Open PR \"Check for implicit 'this' copy when binding pattern indexers\" (#37194)"},{"Id":"467592836","IsPullRequest":false,"CreatedAt":"2019-07-12T20:42:19","Actor":"gafter","Number":"37193","RawContent":null,"Title":"Changes needed to support nullability of tuple and switch expressions","State":"open","Body":"Tuple expressions can be either target-typed or self-typed.  The nullability walker needs to know which it is in order to properly compute the types with nullability.  It currently guesses based on whether the natural type is the same as the converted type, but that is not correct.\r\n\r\nIn order to support that, the bound node for a (converted) tuple literal should have a boolean flag that says whether it was self-typed or target-typed.\r\n\r\nSimilarly for switch expressions.\r\n","Url":"https://github.com/dotnet/roslyn/issues/37193","RelatedDescription":"Open issue \"Changes needed to support nullability of tuple and switch expressions\" (#37193)"},{"Id":"467527396","IsPullRequest":true,"CreatedAt":"2019-07-12T17:41:37","Actor":"RikkiGibson","Number":"37192","RawContent":null,"Title":"Remove support for '#pragma warning enable' directive (take 2)","State":"open","Body":"Related to #36550. Disables the syntax without ripping out the logic in DiagnosticFilter and PragmaWarningMap.","Url":"https://github.com/dotnet/roslyn/pull/37192","RelatedDescription":"Open PR \"Remove support for '#pragma warning enable' directive (take 2)\" (#37192)"},{"Id":"467518277","IsPullRequest":false,"CreatedAt":"2019-07-12T17:17:31","Actor":"mikadumont","Number":"37191","RawContent":null,"Title":"Files with errors should have a red underline in Solution Explorer","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019\r\n\r\n**Steps to Reproduce**:\r\n\r\nFiles with errors should be surfaced in solution explorer with a red underline: \r\n\r\n![sln-error-surface](https://user-images.githubusercontent.com/46729679/61146100-0a804300-a48e-11e9-9353-97c574575511.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/37191","RelatedDescription":"Open issue \"Files with errors should have a red underline in Solution Explorer\" (#37191)"},{"Id":"467419183","IsPullRequest":true,"CreatedAt":"2019-07-12T13:38:37","Actor":"olegtk","Number":"37190","RawContent":null,"Title":"Expose Roslyn OOP as a limited LSP server supporting code search via extended LSP","State":"open","Body":"This prototype exposes RoslynCodeAnalysis service hub service as a limited LSP server supporting only extended (streaming) version of LSP's workspace symbol search. This allows Roslyn to support VS search on par with GoTo.\r\n\r\nMore context: VS Search (former Quick Launch) public extensibility is LSP only, it supports both standard workspace/symbol and extended workspace/beginSymbol, workspace/publishSymbol, workspace/completeSymbol (not yet documented). Standard LSP's workspace/symbol doesn't support streaming of results yet (expected in next version via https://github.com/microsoft/vs-streamjsonrpc/issues/139), that's why until it does we need to extend LSP with workspace/beginSymbol.\r\n\r\nThis implementation is reusing AbstractNavigateToSearchServic, just like GoTo, but unlike GoTo it uses PrimaryWorkspace as LSP doesn't support workspace synchronization.\r\n\r\nInitialization of this Roslyn LSP server is left to VS LSP client for now, it will initialize it when user starts interacting with VS Search (based on \"Capability\" metadata).","Url":"https://github.com/dotnet/roslyn/pull/37190","RelatedDescription":"Open PR \"Expose Roslyn OOP as a limited LSP server supporting code search via extended LSP\" (#37190)"},{"Id":"467383488","IsPullRequest":true,"CreatedAt":"2019-07-12T12:17:39","Actor":"dotnet-maestro[bot]","Number":"37189","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/37189","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#37189)"},{"Id":"467246904","IsPullRequest":false,"CreatedAt":"2019-07-12T06:38:01","Actor":"agocke","Number":"37187","RawContent":null,"Title":"Special case nullability for IEquatable<T>","State":"open","Body":"IEquatable<T> should be regarded as contravariant for the purpose of nullability.","Url":"https://github.com/dotnet/roslyn/issues/37187","RelatedDescription":"Open issue \"Special case nullability for IEquatable<T>\" (#37187)"},{"Id":"467200113","IsPullRequest":true,"CreatedAt":"2019-07-12T04:47:00","Actor":"RikkiGibson","Number":"37186","RawContent":null,"Title":"Full-ngen ResultProvider","State":"closed","Body":"Working around an optprof issue. The assembly seems to be just 150kb in size so it feels like we should be able to get away with a full ngen.","Url":"https://github.com/dotnet/roslyn/pull/37186","RelatedDescription":"Closed or merged PR \"Full-ngen ResultProvider\" (#37186)"},{"Id":"467173998","IsPullRequest":false,"CreatedAt":"2019-07-12T01:17:40","Actor":"jasonmalinowski","Number":"37185","RawContent":null,"Title":"Class view / object browser doesn't show ? for nullable annotated types","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/37185","RelatedDescription":"Open issue \"Class view / object browser doesn't show ? for nullable annotated types\" (#37185)"},{"Id":"467173397","IsPullRequest":false,"CreatedAt":"2019-07-12T01:15:02","Actor":"jasonmalinowski","Number":"37184","RawContent":null,"Title":"Navigate to decompiled source doesn't handle nullable attributes","State":"open","Body":"We'll need to update to a newer ILSpy library.","Url":"https://github.com/dotnet/roslyn/issues/37184","RelatedDescription":"Open issue \"Navigate to decompiled source doesn't handle nullable attributes\" (#37184)"},{"Id":"467173047","IsPullRequest":false,"CreatedAt":"2019-07-12T01:13:25","Actor":"jasonmalinowski","Number":"37183","RawContent":null,"Title":"Navigation bars should show nullable annotations","State":"open","Body":"Navigation bars don't show nullable annotations when showing method signatures. This is actually kinda useful if you're in a method since it shows you your signature if it's scrolled off the screen.","Url":"https://github.com/dotnet/roslyn/issues/37183","RelatedDescription":"Open issue \"Navigation bars should show nullable annotations\" (#37183)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"467485274","IsPullRequest":true,"CreatedAt":"2019-07-14T04:43:22","Actor":"jkotas","Number":"7613","RawContent":null,"Title":"Add workaround for missing ClearInitLocals CoreLib transform","State":"closed","Body":"Ideally, we would use the same transform as CoreCLR CoreLib. However, integrating the ILLinker package used for that into CoreRT build does not look simple. For now, add a workaround to ilc.","Url":"https://github.com/dotnet/corert/pull/7613","RelatedDescription":"Closed or merged PR \"Add workaround for missing ClearInitLocals CoreLib transform\" (#7613)"},{"Id":"467771900","IsPullRequest":true,"CreatedAt":"2019-07-14T03:05:49","Actor":"Dotnet-GitSync-Bot","Number":"7616","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7616","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7616)"},{"Id":"467766531","IsPullRequest":true,"CreatedAt":"2019-07-13T23:19:58","Actor":"MichalStrehovsky","Number":"7615","RawContent":null,"Title":"Normalize instantiations in reflection method body scanner","State":"closed","Body":"Noticed we were hitting asserts compiling Draw2D. We were ending up reflection enabling a hybrid `<object, __Canon>` instantiation.","Url":"https://github.com/dotnet/corert/pull/7615","RelatedDescription":"Closed or merged PR \"Normalize instantiations in reflection method body scanner\" (#7615)"},{"Id":"467507599","IsPullRequest":true,"CreatedAt":"2019-07-13T03:13:00","Actor":"jkotas","Number":"7614","RawContent":null,"Title":"Return HardLimitBytes from GCMemoryInfo.TotalAvailableMemoryBytes (#2â€¦","State":"closed","Body":"â€¦5437)","Url":"https://github.com/dotnet/corert/pull/7614","RelatedDescription":"Closed or merged PR \"Return HardLimitBytes from GCMemoryInfo.TotalAvailableMemoryBytes (#2â€¦\" (#7614)"},{"Id":"467400415","IsPullRequest":true,"CreatedAt":"2019-07-12T17:02:00","Actor":"MichalStrehovsky","Number":"7612","RawContent":null,"Title":"Split out a couple more JitInterface methods","State":"closed","Body":"Went over CorInfoImpl.cs and kicked out a couple more methods that are CoreRT specific. Calling into them in ReadyToRun mode would either crash the compiler or produce wrong code.","Url":"https://github.com/dotnet/corert/pull/7612","RelatedDescription":"Closed or merged PR \"Split out a couple more JitInterface methods\" (#7612)"},{"Id":"467070772","IsPullRequest":true,"CreatedAt":"2019-07-12T10:05:00","Actor":"MichalStrehovsky","Number":"7610","RawContent":null,"Title":"Enable generic inlining","State":"closed","Body":"RyuJIT is capable of some limited generic inlining - we just have to make sure we're resolving tokens in the inlining context.","Url":"https://github.com/dotnet/corert/pull/7610","RelatedDescription":"Closed or merged PR \"Enable generic inlining\" (#7610)"},{"Id":"467152268","IsPullRequest":true,"CreatedAt":"2019-07-11T23:33:25","Actor":"trylek","Number":"7611","RawContent":null,"Title":"Exclude methods dependent on HW intrinsics from R2R compilation","State":"open","Body":"","Url":"https://github.com/dotnet/corert/pull/7611","RelatedDescription":"Open PR \"Exclude methods dependent on HW intrinsics from R2R compilation\" (#7611)"},{"Id":"467053308","IsPullRequest":true,"CreatedAt":"2019-07-11T21:13:03","Actor":"cshung","Number":"7609","RawContent":null,"Title":"Converge to a single copy of volatile.h","State":"closed","Body":"Fixes #7607","Url":"https://github.com/dotnet/corert/pull/7609","RelatedDescription":"Closed or merged PR \"Converge to a single copy of volatile.h\" (#7609)"},{"Id":"467020988","IsPullRequest":true,"CreatedAt":"2019-07-11T20:42:15","Actor":"Dotnet-GitSync-Bot","Number":"7608","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7608","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7608)"},{"Id":"466031346","IsPullRequest":true,"CreatedAt":"2019-07-11T17:36:21","Actor":"Dotnet-GitSync-Bot","Number":"7606","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7606","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7606)"},{"Id":"466813265","IsPullRequest":false,"CreatedAt":"2019-07-11T10:41:51","Actor":"karanjitsingh","Number":"7607","RawContent":null,"Title":"build failing on mac os","State":"open","Body":"Trying to build on mac os 10.14.5 (18F132)\r\n\r\n```bash\r\nNitins-MacBook-Pro-2:corert vstest$ ./build.sh release\r\nUnknown CPU i386 detected, configuring as if for x64\r\nSetting up directories for build\r\nChecking pre-requisites...\r\nCommencing build of corert native components for OSX.x64.Release\r\n~/github/corert/bin/obj/Native/OSX.x64.Release ~/github/corert\r\nInvoking cmake with arguments: \"/Users/vstest/github/corert/buildscripts/..\" Release\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/vstest/github/corert/bin/obj/Native/OSX.x64.Release\r\nExecuting make install -j 9 \r\n[  1%] Built target AsmOffsets\r\n[  2%] Built target jitinterface\r\n[  4%] Built target bootstrapperdll\r\n[  6%] Built target bootstrapper\r\n[  8%] Built target bootstrappercpp\r\n[  9%] Built target System.Private.CoreLib.Native\r\n[ 10%] Building ASM object System.Private.TypeLoader.Native/CMakeFiles/System.Private.TypeLoader.Native.dir/amd64/ConstrainedCallSupportHelpers.S.o\r\n[ 10%] Building ASM object System.Private.TypeLoader.Native/CMakeFiles/System.Private.TypeLoader.Native.dir/amd64/MethodEntrypointStubs.S.o\r\n[ 11%] Building ASM object System.Private.TypeLoader.Native/CMakeFiles/System.Private.TypeLoader.Native.dir/amd64/VTableResolver.S.o\r\n/Users/vstest/github/corert/src/Native/inc/unix/../../Runtime/unix/unixasmmacrosamd64.inc:310:34: /Users/vstest/github/corert/src/Native/inc/unix/../../Runtime/unix/unixasmmacrosamd64.inc:310:34: /Users/vstest/github/corert/src/Native/inc/unix/../../Runtime/unix/unixasmmacrosamd64.inc:310error: :34: unexpected token\r\nerror: error: DEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\nunexpected token\r\nunexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                    ^ \r\n                             ^\r\nmake[2]: *** [System.Private.TypeLoader.Native/CMakeFiles/System.Private.TypeLoader.Native.dir/amd64/MethodEntrypointStubs.S.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[2]: *** [System.Private.TypeLoader.Native/CMakeFiles/System.Private.TypeLoader.Native.dir/amd64/VTableResolver.S.o] Error 1\r\nmake[2]: *** [System.Private.TypeLoader.Native/CMakeFiles/System.Private.TypeLoader.Native.dir/amd64/ConstrainedCallSupportHelpers.S.o] Error 1\r\nmake[1]: *** [System.Private.TypeLoader.Native/CMakeFiles/System.Private.TypeLoader.Native.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n[ 12%] Building CXX object Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/__/gc/unix/gcenv.unix.cpp.o\r\n[ 13%] Building CXX object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/__/gc/unix/gcenv.unix.cpp.o\r\n[ 14%] Building ASM object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/CallDescrWorker.S.o\r\n[ 14%] Building ASM object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/AllocFast.S.o\r\n[ 14%] Building ASM object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/CallingConventionConverterHelpers.S.o\r\n[ 15%] Building ASM object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/ExceptionHandling.S.o\r\n[ 15%] Building ASM object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/Interlocked.S.o\r\n[ 15%] Building ASM object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/PInvoke.S.o\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: /Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: /Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.incerror: :310:34: unexpected token\r\nunexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^ \r\n                          error:       ^\r\nunexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: unexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/Interlocked.S.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/CallingConventionConverterHelpers.S.o] Error 1\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/CallDescrWorker.S.o] Error 1\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: unexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/ExceptionHandling.S.o] Error 1/Users/vstest/github/corert/src/Native/Runtime/amd64/PInvoke.S:31:37: \r\nerror: unknown token in expression\r\n        mov dword ptr [rbx + 0x18], 00008000h\r\n                                    ^\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: unexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\n[ 16%] Building CXX object Runtime/Full/CMakeFiles/Runtime.dir/__/__/gc/unix/gcenv.unix.cpp.o\r\n<instantiation>:3:24: error: unknown token in expression\r\n    lea rcx, [rsp + 10h]\r\n                       ^\r\n/Users/vstest/github/corert/src/Native/Runtime/amd64/AllocFast.S:73:9: note: while in macro instantiation\r\n        PUSH_COOP_PINVOKE_FRAME rcx\r\n        ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/PInvoke.S.o] Error 1\r\n/Users/vstest/github/corert/src/Native/Runtime/amd64/AllocFast.S:206:28: error: unknown token in expression\r\n        cmp rsi, 07fffffffh\r\n                           ^\r\n<instantiation>:3:24: error: unknown token in expression\r\n    lea rcx, [rsp + 10h]\r\n                       ^\r\n/Users/vstest/github/corert/src/Native/Runtime/amd64/AllocFast.S:289:9: note: while in macro instantiation\r\n        PUSH_COOP_PINVOKE_FRAME rcx\r\n        ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/amd64/AllocFast.S.o] Error 1\r\n[ 16%] Building ASM object Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/AllocFast.S.o\r\n[ 16%] Building ASM object Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/CallDescrWorker.S.o\r\n[ 17%] Building ASM object Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/CallingConventionConverterHelpers.S.o\r\n[ 17%] Building ASM object Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/ExceptionHandling.S.o\r\n[ 18%] Building ASM object Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/Interlocked.S.o\r\n[ 18%] Building ASM object Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/PInvoke.S.o\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: /Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: error: unexpected token\r\nunexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n   DEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h \r\n                             ^\r\n                                 ^\r\n<instantiation>:3:24: error: unknown token in expression\r\n    lea rcx, [rsp + 10h]\r\n                       ^\r\n/Users/vstest/github/corert/src/Native/Runtime/amd64/AllocFast.S:73:9: note: while in macro instantiation\r\n        PUSH_COOP_PINVOKE_FRAME rcx\r\n        ^\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: unexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\n/Users/vstest/github/corert/src/Native/Runtime/amd64/AllocFast.S:206:28: error: unknown token in expression\r\n        cmp rsi, 07fffffffh\r\n                           ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/CallDescrWorker.S.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n<instantiation>:3:24: error: unknown token in expression\r\n    lea rcx, [rsp + 10h]\r\n                       ^\r\n/Users/vstest/github/corert/src/Native/Runtime/amd64/AllocFast.S:289:9: note: while in macro instantiation\r\n        PUSH_COOP_PINVOKE_FRAME rcx\r\n        ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/CallingConventionConverterHelpers.S.o] Error 1\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: /Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: error: unexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\nunexpected token\r\n                                 ^\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/AllocFast.S.o] Error 1\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/Interlocked.S.o] Error 1\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/ExceptionHandling.S.o] Error 1\r\n/Users/vstest/github/corert/src/Native/Runtime/unix/unixasmmacrosamd64.inc:310:34: error: unexpected token\r\nDEFAULT_FRAME_SAVE_FLAGS = 000000F1h + 00008000h\r\n                                 ^\r\n/Users/vstest/github/corert/src/Native/Runtime/amd64/PInvoke.S:31:37: error: unknown token in expression\r\n        mov dword ptr [rbx + 0x18], 00008000h\r\n                                    ^\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/__/amd64/PInvoke.S.o] Error 1\r\n/Users/vstest/github/corert/src/Native/gc/unix/gcenv.unix.cpp:19:10: error: \r\n      non-portable path to file '\"Volatile.h\"'; specified path differs in case\r\n      from file name on disk [-Werror,-Wnonportable-include-path]\r\n#include \"volatile.h\"\r\n         ^~~~~~~~~~~~\r\n         \"Volatile.h\"\r\n/Users/vstest/github/corert/src/Native/gc/unix/gcenv.unix.cpp:19:10: error: \r\n      non-portable path to file '\"Volatile.h\"'; specified path differs in case\r\n      from file name on disk [-Werror,-Wnonportable-include-path]\r\n#include \"volatile.h\"\r\n         ^~~~~~~~~~~~\r\n         \"Volatile.h\"\r\n/Users/vstest/github/corert/src/Native/gc/unix/gcenv.unix.cpp:19:10: error: \r\n      non-portable path to file '\"Volatile.h\"'; specified path differs in case\r\n      from file name on disk [-Werror,-Wnonportable-include-path]\r\n#include \"volatile.h\"\r\n         ^~~~~~~~~~~~\r\n         \"Volatile.h\"\r\n1 error generated.\r\nmake[2]: *** [Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/__/gc/unix/gcenv.unix.cpp.o] Error 1\r\nmake[1]: *** [Runtime/Portable/CMakeFiles/PortableRuntime.dir/all] Error 2\r\n1 error generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/__/gc/unix/gcenv.unix.cpp.o] Error 1\r\nmake[1]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/all] Error 2\r\n1 error generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/__/__/gc/unix/gcenv.unix.cpp.o] Error 1\r\nmake[1]: *** [Runtime/Full/CMakeFiles/Runtime.dir/all] Error 2\r\nmake: *** [all] Error 2\r\nFailed to build corert native components.\r\n```","Url":"https://github.com/dotnet/corert/issues/7607","RelatedDescription":"Open issue \"build failing on mac os\" (#7607)"},{"Id":"465922181","IsPullRequest":true,"CreatedAt":"2019-07-10T19:10:17","Actor":"trylek","Number":"7604","RawContent":null,"Title":"Add CPAOT - Crossgen executable size comparison to SuperIlc","State":"closed","Body":"During investigation of the remaining bug buckets I noticed a test\r\napp that was about 3 times longer when compiled with CPAOT than\r\nwith Crossgen (on top of the fact that it was malfunctioning).\r\nI am working on a separate change to fix the size regression;\r\nin this change I'm adding monitoring of executable size comparisons\r\nto SuperIlc to help me monitor size comparisons on a regular basis.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7604","RelatedDescription":"Closed or merged PR \"Add CPAOT - Crossgen executable size comparison to SuperIlc\" (#7604)"},{"Id":"464568921","IsPullRequest":true,"CreatedAt":"2019-07-10T06:41:35","Actor":"trylek","Number":"7590","RawContent":null,"Title":"Miscellaneous CPAOT fixes for several Pri# bug buckets","State":"closed","Body":"1) We were missing support for structs with explicit layout. I have\r\nadded the appropriate logic.\r\n\r\n2) Nullable is not blittable (however it is managed sequential if\r\nits instantiation type is managed sequential).\r\n\r\n3) Structs with explicit layout aren't managed sequential.\r\n\r\n4) We were putting the cctor trigger helper into the wrong import\r\ntable - DispatchImports emits GC ref map and cctor trigger doesn't\r\nneed one because it's not a method call helper. This was crashing\r\nR2RDump when trying to disassemble some R2R executables.\r\n\r\n5) I have added two unit tests to the R2R unit test suite by\r\nadapting two CoreCLR tests that were crashing in interesting ways\r\nwhen manipulating explicit layouts and nullables.\r\n\r\n6) Instantiated type signature encoding was incorrect in large\r\nversion bubble case. As JanV described earlier, the context for\r\nencoding of the instantiation type parameters is the outer context,\r\nnot the generic type context.\r\n\r\n7) Always emit all import tables even when they are empty, otherwise\r\nthe fixup encoding gets out of sync as it refers to import table\r\nindices.\r\n\r\n8) When SuperIlc calls R2RDump in the large version bubble mode, it\r\nneeds to pass CORE_ROOT as the \"reference path\" parameter so that\r\nR2RDump can resolve framework assembly references.\r\n\r\n9) Field encoding was doing an unnecessarily strong check - replaced\r\nContainsType with VersionsWithType.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7590","RelatedDescription":"Closed or merged PR \"Miscellaneous CPAOT fixes for several Pri# bug buckets\" (#7590)"},{"Id":"465498463","IsPullRequest":true,"CreatedAt":"2019-07-09T23:42:42","Actor":"Dotnet-GitSync-Bot","Number":"7602","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @andy-ms","Url":"https://github.com/dotnet/corert/pull/7602","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7602)"},{"Id":"465992478","IsPullRequest":false,"CreatedAt":"2019-07-09T21:26:26","Actor":"OshoNot","Number":"7605","RawContent":null,"Title":"Build failing when Adding Npgsql","State":"open","Body":"Hello,\r\n\r\nI keep getting the same problem when running the HelloWorld Sample with Npgsql.\r\n\r\nRunning `dotnet publish -r linux-x64 -c Release -v d`\r\n\r\nI get this error during the \"Exec\" task of the publish command: \r\n`Task \"Exec\"\r\n         \"/root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27906-01/tools/ilc\" @\"obj/Release/netcoreapp2.1/linux-x64/native/DbPrototype.ilc.rsp\"\r\n         Killed\r\n   1:7>/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27906-01/build/Microsoft.NETCore.Native.targets(248,5): error MSB3073: The command \"\"/root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27906-01/tools/ilc\" @\"obj/Release/netcoreapp2.1/linux-x64/native/DbPrototype.ilc.rsp\"\" exited with code 137. [/DbPrototype/DbPrototype.fsproj]\r\n       Done executing task \"Exec\" -- FAILED.\r\n   1:7>Done building target \"IlcCompile\" in project \"DbPrototype.fsproj\" -- FAILED.\r\n   1:7>Done Building Project \"/DbPrototype/DbPrototype.fsproj\" (Publish target(s)) -- FAILED.`\r\n\r\n\r\nOS: Ubuntu 18.04 (All pre requisites installed based on [Helloworld sample](https://github.com/dotnet/corert/tree/master/samples/HelloWorld))\r\n","Url":"https://github.com/dotnet/corert/issues/7605","RelatedDescription":"Open issue \"Build failing when Adding Npgsql\" (#7605)"},{"Id":"465449956","IsPullRequest":true,"CreatedAt":"2019-07-09T18:55:39","Actor":"trylek","Number":"7599","RawContent":null,"Title":"ArgIterator hardening to gracefully handle indeterminate return types","State":"closed","Body":"When analyzing the remaining CPAOT error buckets, I noticed several\r\ntests that were still crashing CPAOT due to indeterminate types\r\nin the ArgIterator. I found out that I had previously only fixed\r\nthe argument types but I overlooked the need to fix the return value\r\nin a similar manner. I have also applied a tiny cleanup that Michal\r\nsuggested earlier - using InstanceFieldSize instead of GetElementSize.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. I double-checked the other few callers of TypeHandle.GetSize\r\nand I believe this is the last remaining place that is not protected\r\nby an upfront indeterminate type check and graceful bail-out.","Url":"https://github.com/dotnet/corert/pull/7599","RelatedDescription":"Closed or merged PR \"ArgIterator hardening to gracefully handle indeterminate return types\" (#7599)"},{"Id":"465474015","IsPullRequest":true,"CreatedAt":"2019-07-09T08:51:20","Actor":"MichalStrehovsky","Number":"7601","RawContent":null,"Title":"Expose invariant globalization mode","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7601","RelatedDescription":"Closed or merged PR \"Expose invariant globalization mode\" (#7601)"},{"Id":"465473002","IsPullRequest":true,"CreatedAt":"2019-07-09T08:51:02","Actor":"MichalStrehovsky","Number":"7600","RawContent":null,"Title":"Make Enum.ToString work with reflection disabled","State":"closed","Body":"This will just use the numerical value.","Url":"https://github.com/dotnet/corert/pull/7600","RelatedDescription":"Closed or merged PR \"Make Enum.ToString work with reflection disabled\" (#7600)"},{"Id":"465653320","IsPullRequest":false,"CreatedAt":"2019-07-09T08:50:15","Actor":"MichalStrehovsky","Number":"7603","RawContent":null,"Title":"Intermittent failure in GC\\Scenarios\\StringCreator\\stringcreator","State":"open","Body":"Seen in #7601 on Windows x64 Debug.\r\n\r\n```\r\nF:\\workspace\\_work\\1\\s\\tests_downloaded\\CoreCLR\\GC\\Scenarios\\StringCreator\\stringcreator\\\\*.dll \r\n                0 file(s) copied.\r\n        Test should return with ExitCode 100 ...\r\n        Creating Strings..\r\n        Created Strings: 0 : 580328\r\n        Created Strings: 100 : 604904\r\n        Created Strings: 200 : 678632\r\n        Created Strings: 300 : 817896\r\n        Created Strings: 400 : 1014504\r\n        Created Strings: 500 : 1268456\r\n        Created Strings: 600 : 1579752\r\n        Created Strings: 700 : 1956584\r\n        Created Strings: 800 : 2390760\r\n        Created Strings: 900 : 2890472\r\n        Created Strings: 1000 : 3447528\r\n        Created Strings: 1100 : 4070120\r\n        Created Strings: 1200 : 4774632\r\n        Created Strings: 1300 : 5561184\r\n        Created Strings: 1400 : 6432976\r\n        Created Strings: 1500 : 7376576\r\n        Created Strings: 1600 : 8408368\r\n        Created Strings: 1700 : 9511968\r\n        Created Strings: 1800 : 10695568\r\n        Created Strings: 1900 : 11967360\r\n        Creating More Strings..\r\n        Created Strings: 0 : 13392616\r\n        Created Strings: 100 : 13531880\r\n        Created Strings: 200 : 13916904\r\n        Created Strings: 300 : 14457576\r\n        Created Strings: 400 : 15159200\r\n        \r\n  slicer = 1\r\n        Creating Strings..\r\n        Created Strings: 0 : 16121000\r\n        Created Strings: 100 : 16145576\r\n        Created Strings: 200 : 16218856\r\n        Created Strings: 300 : 16358120\r\n        Created Strings: 400 : 16554728\r\n        Created Strings: 500 : 16808680\r\n        Created Strings: 600 : 17119976\r\n        Created Strings: 700 : 17496808\r\n        Created Strings: 800 : 17930984\r\n        Created Strings: 900 : 18430696\r\n        Created Strings: 1000 : 18987752\r\n        Created Strings: 1100 : 19610344\r\n        Created Strings: 1200 : 20314856\r\n        Created Strings: 1300 : 21101408\r\n        Created Strings: 1400 : 21973200\r\n        Created Strings: 1500 : 22916800\r\n        Created Strings: 1600 : 23948592\r\n        Created Strings: 1700 : 25052192\r\n        Created Strings: 1800 : 26235792\r\n        Created Strings: 1900 : 1389096\r\n        Creating More Strings..\r\n        Created Strings: 0 : 2765464\r\n        Created Strings: 100 : 2912920\r\n        Created Strings: 200 : 3289752\r\n        Created Strings: 300 : 3830424\r\n        Created Strings: 400 : 4540240\r\n        \r\n  slicer = 1\r\n        Expected: 100\r\n        Actual: -1073741819\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/corert/issues/7603","RelatedDescription":"Open issue \"Intermittent failure in GC\\Scenarios\\StringCreator\\stringcreator\" (#7603)"},{"Id":"464981240","IsPullRequest":true,"CreatedAt":"2019-07-09T06:35:00","Actor":"MichalStrehovsky","Number":"7597","RawContent":null,"Title":"Drop size of Hello World to 1.16 MB","State":"closed","Body":"Set of commits that allow us to drop the size of a fully self-contained native C# Hello World to 1.16 MB (with all the [documented](http://aka.ms/OptimizeCoreRT) size optimization switches enabled, that is).\r\n\r\nSee individual commits for descriptions.","Url":"https://github.com/dotnet/corert/pull/7597","RelatedDescription":"Closed or merged PR \"Drop size of Hello World to 1.16 MB\" (#7597)"},{"Id":"465081965","IsPullRequest":true,"CreatedAt":"2019-07-08T23:16:45","Actor":"Suchiman","Number":"7598","RawContent":null,"Title":"Port many core perf fixes","State":"closed","Body":"Ports dotnet/coreclr#25350","Url":"https://github.com/dotnet/corert/pull/7598","RelatedDescription":"Closed or merged PR \"Port many core perf fixes\" (#7598)"},{"Id":"464946822","IsPullRequest":true,"CreatedAt":"2019-07-08T04:03:23","Actor":"Suchiman","Number":"7596","RawContent":null,"Title":"Use the GC provided environments instead of the PAL ones","State":"closed","Body":"This fixes 3/6 from #7339","Url":"https://github.com/dotnet/corert/pull/7596","RelatedDescription":"Closed or merged PR \"Use the GC provided environments instead of the PAL ones\" (#7596)"},{"Id":"464870626","IsPullRequest":true,"CreatedAt":"2019-07-07T21:12:25","Actor":"MichalStrehovsky","Number":"7593","RawContent":null,"Title":"Change how we root all application libraries","State":"closed","Body":"When `rootallapplicationassemblies` is specified, we currently go over all assemblies passed to ILC as input or reference, find out which ones are not framework assemblies, and root all types in them so that they're available for arbitrary reflection at runtime.\r\n\r\nThe problem is that NuGet packages or SDKs can have many assemblies in them, but only some of them are actually used by user code. Good example is the Microsoft.WindowsDesktop.App SDK that has both WinForms and WPF in it.\r\n\r\nWith this change, we'll only root assemblies where we actually saw the app using something in them. This way a WinForms app will not include all of WPF.\r\n\r\nWith this, we could possibly regress apps that do `Assembly.Load` on an assembly that is otherwise unused. Those apps will have to use RD.XML. We could also add a simple data flow analysis for the simplest cases to avoid RD.XML if really needed.\r\n\r\nASP.NET still works without RD.XML for this.\r\n\r\nMost of this commit is just mechanically moving stuff around.","Url":"https://github.com/dotnet/corert/pull/7593","RelatedDescription":"Closed or merged PR \"Change how we root all application libraries\" (#7593)"},{"Id":"464932259","IsPullRequest":true,"CreatedAt":"2019-07-07T14:24:35","Actor":"MichalStrehovsky","Number":"7595","RawContent":null,"Title":"Add bodies for a couple more missing methods","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7595","RelatedDescription":"Closed or merged PR \"Add bodies for a couple more missing methods\" (#7595)"},{"Id":"464870932","IsPullRequest":true,"CreatedAt":"2019-07-06T22:35:40","Actor":"MichalStrehovsky","Number":"7594","RawContent":null,"Title":"Change error message for unsupported marshallers","State":"closed","Body":"We now support many marshallers that I would consider non-trivial. The error should just say the marshaller is not implemented...","Url":"https://github.com/dotnet/corert/pull/7594","RelatedDescription":"Closed or merged PR \"Change error message for unsupported marshallers\" (#7594)"},{"Id":"464587884","IsPullRequest":true,"CreatedAt":"2019-07-05T18:30:19","Actor":"mjsabby","Number":"7591","RawContent":null,"Title":"Harmonize ContainsPointers flags between CoreRT & CoreCLR","State":"closed","Body":"If there's no reason for these flags to be different between coreclr and corert, I'd like to have the same value across them.\r\n\r\nThis allows the frozen segment deserializer code to not have to be forked across the runtimes.","Url":"https://github.com/dotnet/corert/pull/7591","RelatedDescription":"Closed or merged PR \"Harmonize ContainsPointers flags between CoreRT & CoreCLR\" (#7591)"},{"Id":"464646387","IsPullRequest":true,"CreatedAt":"2019-07-05T15:40:24","Actor":"yowl","Number":"7592","RawContent":null,"Title":"WASM: Enable GCStaticsNode instead of llvm globals","State":"closed","Body":"In order to progress #7248 , this change enables GCStatics by uncommenting some code that was already present but commented due to the earlier problem of `InitializeModules` not being called at startup.  `InitializeModules` is now called for wasm at startup (I added a printf to be sure) and the commented GCStatics code worked as it was.  I added a test for static field access and it produces this snippet of llvm:\r\n\r\n```\r\n%LoadAddressOfSymbolNode4 = load i32*, i32** @__Str_first_string_31DAE213E988224C1F7CFBECD99A0DA573F5FDAB1922570E42F281A9DCFFC1E9___SYMBOL, !dbg !7923\r\n  %LoadAddressOfSymbolNode5 = load i32*, i32** @__GCStaticBase_HelloWasm_FieldStatics___SYMBOL, !dbg !7923\r\n  %castBasePtrPtr = bitcast i32* %LoadAddressOfSymbolNode5 to i8***, !dbg !7923\r\n  %basePtr = load i8**, i8*** %castBasePtrPtr, !dbg !7923\r\n  %base = load i8*, i8** %basePtr, !dbg !7923\r\n  %S1_addr = getelementptr i8, i8* %base, i32 4, !dbg !7923\r\n  %CastPtrstring = bitcast i8* %S1_addr to i8**, !dbg !7923\r\n  %CastPtr = bitcast i32* %LoadAddressOfSymbolNode4 to i8*, !dbg !7923\r\n  store i8* %CastPtr, i8** %CastPtrstring, !dbg !7923\r\n  %LoadAddressOfSymbolNode6 = load i32*, i32** @__Str_a_different_string_1B09B108E59054EEE2BADD80C449F869A0EEBD1B5472EF5FC727ED498E6D54C8___SYMBOL, !dbg !7924\r\n  %LoadAddressOfSymbolNode7 = load i32*, i32** @__GCStaticBase_HelloWasm_FieldStatics___SYMBOL, !dbg !7924\r\n  %castBasePtrPtr8 = bitcast i32* %LoadAddressOfSymbolNode7 to i8***, !dbg !7924\r\n  %basePtr9 = load i8**, i8*** %castBasePtrPtr8, !dbg !7924\r\n  %base10 = load i8*, i8** %basePtr9, !dbg !7924\r\n  %S2_addr = getelementptr i8, i8* %base10, i32 8, !dbg !7924\r\n```\r\n\r\nWhere we can see that it is going to the GCStaticBase for the class and has 2 different offsets in the `getelementptr` statements, 4 and 8, so looks fine to me.\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/7592","RelatedDescription":"Closed or merged PR \"WASM: Enable GCStaticsNode instead of llvm globals\" (#7592)"},{"Id":"464418814","IsPullRequest":true,"CreatedAt":"2019-07-05T06:18:31","Actor":"mjsabby","Number":"7589","RawContent":null,"Title":"Implement _RegisterFrozenSegment & _UnregisterFrozenSegment","State":"closed","Body":"Brings https://github.com/dotnet/coreclr/pull/22776 into CoreRT.","Url":"https://github.com/dotnet/corert/pull/7589","RelatedDescription":"Closed or merged PR \"Implement _RegisterFrozenSegment & _UnregisterFrozenSegment\" (#7589)"},{"Id":"464379081","IsPullRequest":true,"CreatedAt":"2019-07-04T19:57:45","Actor":"Suchiman","Number":"7588","RawContent":null,"Title":"Make CLRServices::GarbageCollect behave like CoreCLR's","State":"closed","Body":"fixes #7475","Url":"https://github.com/dotnet/corert/pull/7588","RelatedDescription":"Closed or merged PR \"Make CLRServices::GarbageCollect behave like CoreCLR's\" (#7588)"},{"Id":"463949789","IsPullRequest":true,"CreatedAt":"2019-07-04T19:50:37","Actor":"Suchiman","Number":"7587","RawContent":null,"Title":"Make fields readonly properties to avoid confusion, fixes #4811","State":"closed","Body":"fixes #4811","Url":"https://github.com/dotnet/corert/pull/7587","RelatedDescription":"Closed or merged PR \"Make fields readonly properties to avoid confusion, fixes #4811\" (#7587)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"467717297","IsPullRequest":true,"CreatedAt":"2019-07-13T14:41:50","Actor":"dotnet-maestro[bot]","Number":"3418","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190712.15\r\n- **Date Produced**: 7/13/2019 9:17 AM\r\n- **Commit**: a7d2e0d27b2a6be92b620de7c321a29fe42fca53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-27912-15\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3418","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#3418)"},{"Id":"467712059","IsPullRequest":true,"CreatedAt":"2019-07-13T14:00:05","Actor":"dotnet-maestro[bot]","Number":"3417","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3417","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3417)"},{"Id":"467642227","IsPullRequest":true,"CreatedAt":"2019-07-13T00:05:14","Actor":"dotnet-bot","Number":"3416","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3416","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#3416)"},{"Id":"467616771","IsPullRequest":true,"CreatedAt":"2019-07-12T22:01:17","Actor":"nguerrera","Number":"3415","RawContent":null,"Title":"Select appropriate VB runtime by default","State":"open","Body":"Fix #3387 \r\nFix #2793 \r\n\r\nThis comment in the code describes and documents the approach:\r\n\r\n```\r\nBy default, VBRuntime is chosen as follows:\r\n\r\n    .NET Framework:\r\n      Same as classic vbproj. $(FrameworkPathOverride) is passed  as\r\n      /sdkpath to compiler and Microsoft.VisualBasic.dll will be used\r\n      from there even if there is no explicit reference to it. This is\r\n      accomplished by leaving $(VBRuntime) unset.\r\n\r\n    .NET Core 3.0+:\r\n      Locate Microsoft.VisualBasic among references and pass it as\r\n      /vbruntime to compiler.\r\n\r\n    .NET Core < 3.0 or .NET Standard:\r\n      Use embedded VB runtime as there is no Microsoft.VisualBasic.dll\r\n      available that is complete enough to serve as /vbruntime.\r\n\r\n   These defaults can be overridden as follows:\r\n\r\n    $(UseReferencedVBRuntime) == true:\r\n      Use referenced Microsoft.VisualBasic regardless of TFM.\r\n\r\n      This is an escape hatch for a custom Microsoft.VisualBasic reference\r\n      that can work as /vbruntime on a target framework other than .NET Core 3.0+\r\n\r\n    $(VBRuntime) != '':\r\n      Pass it through to compiler unchanged.\r\n```","Url":"https://github.com/dotnet/sdk/pull/3415","RelatedDescription":"Open PR \"Select appropriate VB runtime by default\" (#3415)"},{"Id":"467142910","IsPullRequest":true,"CreatedAt":"2019-07-12T19:42:10","Actor":"elinor-fung","Number":"3411","RawContent":null,"Title":"Update Microsoft.NET.HostModel version","State":"closed","Body":"This is for dotnet/core-setup#7173\r\n\r\nIt is also affecting Preview 7. This is just the change in master.","Url":"https://github.com/dotnet/sdk/pull/3411","RelatedDescription":"Closed or merged PR \"Update Microsoft.NET.HostModel version\" (#3411)"},{"Id":"467159353","IsPullRequest":true,"CreatedAt":"2019-07-12T19:40:27","Actor":"elinor-fung","Number":"3412","RawContent":null,"Title":"Update Microsoft.NET.HostModel version","State":"closed","Body":"This is for dotnet/core-setup#7173\r\n\r\nSame change as #3411, but for Preview 7","Url":"https://github.com/dotnet/sdk/pull/3412","RelatedDescription":"Closed or merged PR \"Update Microsoft.NET.HostModel version\" (#3412)"},{"Id":"467378256","IsPullRequest":true,"CreatedAt":"2019-07-12T14:15:20","Actor":"dotnet-maestro[bot]","Number":"3414","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190711.7\r\n- **Date Produced**: 7/12/2019 2:02 AM\r\n- **Commit**: f1b09644408f45f43f5835786b3e4bdfd2e78141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19361.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19361.7\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3414","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3414)"},{"Id":"464463291","IsPullRequest":true,"CreatedAt":"2019-07-12T13:24:35","Actor":"drewnoakes","Number":"3399","RawContent":null,"Title":"Continue design time builds if resolving package assets fails","State":"closed","Body":"(This is an alternative implementation of #3398.)\r\n\r\nDesign time builds are stopping if `ResolvePackageAssets` hits an error (dotnet/project-system#4992).\r\n\r\nThis PR uses the fact that design-time builds set the `ContinueOnError` property to `ErrorAndContinue`.\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3399","RelatedDescription":"Closed or merged PR \"Continue design time builds if resolving package assets fails\" (#3399)"},{"Id":"466851435","IsPullRequest":true,"CreatedAt":"2019-07-12T05:48:46","Actor":"dotnet-maestro[bot]","Number":"3408","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190710.8\r\n- **Date Produced**: 7/10/2019 11:51 PM\r\n- **Commit**: a6ae1b637ed236354529992729af875f6c8a180a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19360.8\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19360.8\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3408","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3408)"},{"Id":"464419999","IsPullRequest":true,"CreatedAt":"2019-07-12T05:17:47","Actor":"drewnoakes","Number":"3398","RawContent":null,"Title":"Continue design time builds if resolving package assets fails","State":"closed","Body":"Design time builds are stopping if `ResolvePackageAssets` hits an error (https://github.com/dotnet/project-system/issues/4992). This PR sets `ContinueOnError` on `ResolvePackageAssets` to `ErrorAndContinue` for design time builds only.\r\n\r\nWould the property be better defined in `Microsoft.NET.Sdk.props` with a more general name for broader use?\r\n\r\nAlternatively, should this logic piggyback off the `DesignTimeBuild` property of the task itself?\r\n\r\nhttps://github.com/dotnet/sdk/blob/adf76a594158a742e2c22b49b0fb4942cb53317d/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs#L153","Url":"https://github.com/dotnet/sdk/pull/3398","RelatedDescription":"Closed or merged PR \"Continue design time builds if resolving package assets fails\" (#3398)"},{"Id":"467217501","IsPullRequest":true,"CreatedAt":"2019-07-12T04:57:33","Actor":"drewnoakes","Number":"3413","RawContent":null,"Title":"Document testing local builds and remove VS version","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3413","RelatedDescription":"Closed or merged PR \"Document testing local builds and remove VS version\" (#3413)"},{"Id":"467000319","IsPullRequest":true,"CreatedAt":"2019-07-12T01:34:29","Actor":"nguerrera","Number":"3410","RawContent":null,"Title":"Disable flaky test against bug","State":"closed","Body":"Good news: The test found a product bug (#3409) that it is designed to catch.\r\n\r\nBad news: It can still pass depending on what's in the nuget cache from prior tests. So the change that regressed it slipped through and now we have flaky CI.\r\n\r\nDisabling the test against the bug that it caught for now.","Url":"https://github.com/dotnet/sdk/pull/3410","RelatedDescription":"Closed or merged PR \"Disable flaky test against bug\" (#3410)"},{"Id":"465465681","IsPullRequest":true,"CreatedAt":"2019-07-11T16:37:12","Actor":"dsplaisted","Number":"3406","RawContent":null,"Title":"Supply rid graph to NuGet","State":"closed","Body":"Fix #3325","Url":"https://github.com/dotnet/sdk/pull/3406","RelatedDescription":"Closed or merged PR \"Supply rid graph to NuGet\" (#3406)"},{"Id":"466996372","IsPullRequest":false,"CreatedAt":"2019-07-11T16:36:25","Actor":"nguerrera","Number":"3409","RawContent":null,"Title":"Changing RID to one that hasn't been used before can cause design-time build failure","State":"open","Body":"I believe this regressed with #3394 \r\n\r\nIf you do not have the runtime pack in your nuget cache yet, and you change the RID of your project, the design time build will fail. Unfortunately the test that is specifically designed to test this case of changing RIDs is not reliable because dependening on state of nuget cache (say due to tests that have already run), it may pass even though the bug is present.\r\n\r\nWe need a better approach than just skipping ResolveRuntimePackAssets always in design-time builds as was done before #3394, but we can't have it fail as this will block the nomination that would restore the runtime pack.","Url":"https://github.com/dotnet/sdk/issues/3409","RelatedDescription":"Open issue \"Changing RID to one that hasn't been used before can cause design-time build failure\" (#3409)"},{"Id":"466269901","IsPullRequest":true,"CreatedAt":"2019-07-10T18:42:26","Actor":"dotnet-maestro[bot]","Number":"3407","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190709.6\r\n- **Date Produced**: 7/9/2019 10:54 PM\r\n- **Commit**: 0f5dd7680174620f31c9a00cdb2ac0b0e70e631f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19359.6\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19359.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3407","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3407)"},{"Id":"465287305","IsPullRequest":false,"CreatedAt":"2019-07-10T17:29:38","Actor":"vitek-karas","Number":"3405","RawContent":null,"Title":"Add a way to customize the path imprinted into apphost.exe","State":"closed","Body":"Currently there's no supported public way to customize the path to the app which is imprinted into the apphost.exe (to get the native executable). For normal apps it's always the name of the main application dll.\r\n\r\nThere are scenarios where it would be handy to be able to customize the path by redirecting it to a subfolder relative the native exe. See for example https://github.com/dotnet/core-setup/issues/5120 and https://github.com/dotnet/cli/issues/11713. It would not provide a full solution to the issue described there, but it would make it significantly easier to implement a custom solution.","Url":"https://github.com/dotnet/sdk/issues/3405","RelatedDescription":"Closed issue \"Add a way to customize the path imprinted into apphost.exe\" (#3405)"},{"Id":"465219313","IsPullRequest":true,"CreatedAt":"2019-07-10T12:04:12","Actor":"dotnet-maestro[bot]","Number":"3404","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190709.1\r\n- **Date Produced**: 7/9/2019 7:41 AM\r\n- **Commit**: ef3834feb8615429a58808cdcf9ad9284d767654\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19359.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19359.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3404","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3404)"},{"Id":"463478792","IsPullRequest":true,"CreatedAt":"2019-07-09T21:24:23","Actor":"dsplaisted","Number":"3389","RawContent":null,"Title":"Fix NullReferenceException in ResolvePackageFileConflicts","State":"closed","Body":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/941481","Url":"https://github.com/dotnet/sdk/pull/3389","RelatedDescription":"Closed or merged PR \"Fix NullReferenceException in ResolvePackageFileConflicts\" (#3389)"},{"Id":"464024281","IsPullRequest":true,"CreatedAt":"2019-07-09T00:46:38","Actor":"MSLukeWest","Number":"3394","RawContent":null,"Title":"Updating PublishItemsOutputGroup to resolve runtime assets during design time builds","State":"closed","Body":"Since this output group is meant to be used by installer projects which deal exclusively with design time builds we need ResolveRuntimePackAssets to always run when building it.\r\n\r\nAlso updating tests for this output group to set DesignTimeBuild=true to more accurately simulate this scenario.","Url":"https://github.com/dotnet/sdk/pull/3394","RelatedDescription":"Closed or merged PR \"Updating PublishItemsOutputGroup to resolve runtime assets during design time builds\" (#3394)"},{"Id":"464945545","IsPullRequest":true,"CreatedAt":"2019-07-07T13:55:07","Actor":"dotnet-maestro[bot]","Number":"3403","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3403","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3403)"},{"Id":"464847952","IsPullRequest":true,"CreatedAt":"2019-07-06T14:20:21","Actor":"dotnet-maestro[bot]","Number":"3402","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 3e0cbbc6fd6c6d45d7083ee0deb71cec7ea2d91f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19355.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3402","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3402)"},{"Id":"464230214","IsPullRequest":true,"CreatedAt":"2019-07-06T12:04:13","Actor":"dotnet-maestro[bot]","Number":"3396","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190704.2\r\n- **Date Produced**: 7/4/2019 10:42 PM\r\n- **Commit**: 30553c0de34454fb8da5229962501af65eb1233f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19354.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3396","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3396)"},{"Id":"464827099","IsPullRequest":false,"CreatedAt":"2019-07-06T07:19:22","Actor":"vitek-karas","Number":"3401","RawContent":null,"Title":"Publishing for win fails with unhelpful error message","State":"open","Body":"Trying to publish an app for `win` RID like this:\r\n```\r\ndotnet publish -r win\r\n```\r\n\r\nFails with error like this:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(99,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'win'. [E:\\AppModel\\repro\\ca5\\ca5.csproj]\r\n```\r\n\r\nWhile technically correct, the error doesn't help the user to figure out the solution. Ideally we would check that the specified RID exists and that it's not a leaf in the RID graph. In which case we could report an error with guidance that a more specific RID is required. Or even better list all the available apphost RIDs which are a more specific version of the specified RID. That way we could state that there's win-x86 and win-x64 and the user should pick one.","Url":"https://github.com/dotnet/sdk/issues/3401","RelatedDescription":"Open issue \"Publishing for win fails with unhelpful error message\" (#3401)"},{"Id":"464619133","IsPullRequest":false,"CreatedAt":"2019-07-05T12:30:18","Actor":"appel1","Number":"3400","RawContent":null,"Title":"MSBuild task restore target sometimes fails if multiple projects share a project reference","State":"open","Body":"As part of our build script for CI we do something like this to prepare our projects, about 1500 csproj projects using the 2017 format. They all share a project reference to a common project. \r\n\r\n```xml\r\n<ItemGroup>\r\n  <TargetProjects Include=\"src\\**\\*.csproj\"/>\r\n</ItemGroup>\r\n<MSBuild Projects=\"@(TargetProjects)\" Targets=\"Restore\" BuildInParallel=\"True\"/>\r\n```\r\n\r\nWhen we do this we sometimes, like every other build or so, one or more of the following errors. \r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(121,5): error : The process cannot access the file 'CommonProject\\obj\\CommonProject.csproj.nuget.dgspec.json' because it is being used by another process. [src\\proj1\\proj1.csproj]\r\n\r\nA workaround is to set BuildInParallel to False but that reduces performance quite a bit. \r\n\r\nIs BuildInParallel not supported or is this some other kind of configuration error?","Url":"https://github.com/dotnet/sdk/issues/3400","RelatedDescription":"Open issue \"MSBuild task restore target sometimes fails if multiple projects share a project reference\" (#3400)"},{"Id":"464416897","IsPullRequest":true,"CreatedAt":"2019-07-05T02:31:06","Actor":"dotnet-bot","Number":"3397","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3397","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3397)"},{"Id":"464066841","IsPullRequest":true,"CreatedAt":"2019-07-05T00:08:59","Actor":"drewnoakes","Number":"3395","RawContent":null,"Title":"Remove double computation of settings hash","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3395","RelatedDescription":"Closed or merged PR \"Remove double computation of settings hash\" (#3395)"},{"Id":"463915913","IsPullRequest":true,"CreatedAt":"2019-07-04T15:16:20","Actor":"dsplaisted","Number":"3392","RawContent":null,"Title":"Don't write the same framework multiple times to RuntimeConfig.json","State":"closed","Body":"Fix dotnet/cli#11709","Url":"https://github.com/dotnet/sdk/pull/3392","RelatedDescription":"Closed or merged PR \"Don't write the same framework multiple times to RuntimeConfig.json\" (#3392)"},{"Id":"464018687","IsPullRequest":true,"CreatedAt":"2019-07-04T01:35:13","Actor":"peterhuene","Number":"3393","RawContent":null,"Title":"Fix unhandled exception when RuntimeList.xml contains duplicates.","State":"open","Body":"This PR fixes an unhandled exception that results when RuntimeList.xml\r\ncontains entries that have the same destination subpath when resolving the\r\nruntime pack assets.  An error is now emitted instead of the unhandled\r\nexception.\r\n\r\nAdditionally, this fixes an unhandled exception that occurs when the\r\nRuntimeList.xml file is not present in the runtime pack that is caused by\r\nthe exception message not having a NETSDK prefix.\r\n\r\nAlso removed an unnecessary override of the `Execute` method for\r\n`GenerateDepsFile` task.  This override should have been removed with a\r\nprevious cleanup PR, but was overlooked.\r\n\r\nFixes dotnet/cli#11705.","Url":"https://github.com/dotnet/sdk/pull/3393","RelatedDescription":"Open PR \"Fix unhandled exception when RuntimeList.xml contains duplicates.\" (#3393)"},{"Id":"463798216","IsPullRequest":true,"CreatedAt":"2019-07-03T14:50:59","Actor":"rynowak","Number":"3391","RawContent":null,"Title":"Add build perf test for server-side Blazor template","State":"open","Body":"Adds performance coverage for Blazor, which interacts with the compiler\r\nand SDK differently from other ASP.NET Core templates.\r\n\r\nThis is currently a draft waiting for https://github.com/aspnet/AspNetCore/pull/11550/files to be merged and inserted - that PR renames the template. ","Url":"https://github.com/dotnet/sdk/pull/3391","RelatedDescription":"Open PR \"Add build perf test for server-side Blazor template\" (#3391)"},{"Id":"463496606","IsPullRequest":true,"CreatedAt":"2019-07-03T01:03:09","Actor":"dsplaisted","Number":"3390","RawContent":null,"Title":"Support automatic Link metadata for Page and Resource items","State":"open","Body":"Fix #2697 \r\n","Url":"https://github.com/dotnet/sdk/pull/3390","RelatedDescription":"Open PR \"Support automatic Link metadata for Page and Resource items\" (#3390)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies ðŸ˜Š\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2â€¦ Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA â€œmulti-arch tagsâ€œ), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA â€œmulti-arch tagsâ€œ), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customerâ€™s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>TheÂ </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span>Â was released earlier this week. We have received multiple customer reports ofÂ issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studioâ€™s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your projectâ€™s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studioâ€™s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your projectâ€™s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1149432245909905409","CreatedAt":"2019-07-11T21:36:17+00:00","UserScreenname":"dotnet","Text":"Discover the world of .NET\n\n#dotNETConf is coming September 23 â€” 25\nCome celebrate the new .NET Core 3.0 launch witâ€¦ https://t.co/gVCxErAzFJ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":158,"FavoriteCount":83,"RawContent":null},{"Id":"1148794653312868355","CreatedAt":"2019-07-10T03:22:43+00:00","UserScreenname":"dotnet","Text":"New .NET libraries for Azure. Check it out. The @AzureSdk team is looking for feedback. https://t.co/B6lEi9GIuA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":23,"RawContent":null},{"Id":"1148301725071216640","CreatedAt":"2019-07-08T18:44:00+00:00","UserScreenname":"dotnet","Text":"Check out this episode of #OnDotNet ðŸš€ðŸš€\n\n \"Understanding how to use Task and ValueTask\"\n https://t.co/hV7oFV3zdI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":17,"RawContent":null},{"Id":"1146463009100853249","CreatedAt":"2019-07-03T16:57:36+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":4,"RawContent":null},{"Id":"1146188625828147200","CreatedAt":"2019-07-02T22:47:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-07-14T05:30:39.2037837Z","RunDurationInMilliseconds":13705}