{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null},{"Title":"Modernize existing .NET apps with Windows Containers and Azure","PublishedOn":"2017-11-01T23:14:48+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/01/modernize-existing-net-apps-with-windows-containers-and-azure/","RawContent":null},{"Title":"Introducing API Analyzer","PublishedOn":"2017-10-31T23:24:24+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"This post was written by Olia Gavrysh. Have you ever wondered which APIs are deprecated and which should you use instead? Or have you ever used an API and then found out it didn&#8217;t work on Mac or...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/31/introducing-api-analyzer/","RawContent":null},{"Title":"Welcome to C# 7.1","PublishedOn":"2017-10-31T22:39:48+00:00","CommentsCount":78,"FacebookCount":0,"Summary":"With C# we have always tended towards major releases: bundle a lot of features up, and release less frequently. We even went so far as routinely omitting the traditional &#34;.0&#34; when we talked...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/31/welcome-to-c-7-1/","RawContent":null},{"Title":"Moving to real time test discovery in Test Explorer","PublishedOn":"2017-10-30T22:46:58+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Real time test discovery is a new Visual Studio feature that uses a Roslyn analyzer to discover tests and populate the test explorer in real time without requiring you to build your project. This...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/30/real-time-test-discovery/","RawContent":null},{"Title":"Entity Framework 6.2 Runtime Released","PublishedOn":"2017-10-26T21:32:59+00:00","CommentsCount":35,"FacebookCount":0,"Summary":"Today we announce the availability of EF 6.2 runtime in NuGet.org. Entity Framework (EF) is Microsoft&#8217;s traditional object/relational mapper (O/RM) for .NET Framework. To understand the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/26/entity-framework-6-2-runtime-released/","RawContent":null},{"Title":".NET Core Performance Profiling with Intel® VTune™ Amplifier 2018","PublishedOn":"2017-10-23T16:41:13+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"This post was written by Varun Venkatesan, Li Tian, and Juan Rodriguez, engineers at Intel. They are excited to share .NET Core-specific enhancements that Intel has made to VTune Amplifier 2018....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/23/net-core-performance-profiling-with-intel-vtune-amplifier-2018/","RawContent":null},{"Title":"Experiment with Azure for FREE!","PublishedOn":"2017-10-19T14:00:11+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"What is Azure? What can it do for me? Do I need it? How do I find out? How do I use it? Will it help my business? Can it help my career? With all the things Azure can do, it&#8217;s hard to know where...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/19/experiment-with-azure-for-free/","RawContent":null},{"Title":"Announcing the .NET Framework 4.7.1","PublishedOn":"2017-10-17T21:26:30+00:00","CommentsCount":40,"FacebookCount":0,"Summary":"Today, we are announcing the release of the .NET Framework 4.7.1. It’s included in the Windows 10 Fall Creators Update. .NET Framework 4.7.1 is also available on Windows 7+ and Windows Server 2008...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6767783059","Type":"IssuesEvent","CreatedAt":"2017-10-26T05:52:31","Actor":"HarelM","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Opened issue \"File system watcher crach\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6854176970","Type":"IssuesEvent","CreatedAt":"2017-11-14T18:00:49","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Reopened issue \"Microsoft Security Advisory CVE-2017-11770 : Malformed Certificate can cause Denial of Service\" (#44) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2017-11770 \r\n## Malformed Certificate can cause Denial of Service\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public version of .NET Core where a malformed certificate or other ASN.1 formatted data could lead to a denial of service via an infinite loop on Linux and macOS.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.8, 1.1.5 and 2.0.1. Developers are advised to update their .NET Core SDK to version 2.0.3 or 1.1.5.\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\n.NET Core applications running on Windows are not affected by this vulnerability. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed blow and is running on Linux.\r\n\r\nPlatform  | Runtime Version | Fixed runtime version\r\n----------------|----------------| -------------------------\r\nLinux | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4<br />2.0.0 |  1.0.8<br />1.1.5<br />2.0.1\r\nmacOS | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4 |  1.0.8<br />1.1.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nAny application running against .NET Core 1.0.7 or lower, or 1.1.2 or lower, or 2.0.0 is affected. The default version of the .NET core runtime can be listed by running `dotnet --info`, which should produce output in the form of \r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\nAs this only displays the latest version of the runtime installed it may hide the fact that you have a vulnerable runtime. A complete list of runtimes can be discovered by performing a directory listing in the install root directories. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.8, 1.1.5 or 2.0.1 then any applications targeting .NET Core will be vulnerable.\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Version 1.1.5 will also install version 1.0.8 of the runtime.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Bachraty Gergely for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11770](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8585)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2017-11-14_"},{"Id":"6853282986","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:23:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/48","RelatedDescription":"Closed issue \"Reserved\" (#48) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853280485","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:35","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Closed issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853280272","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:33","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Opened issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853278942","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:20","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Closed issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853278548","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:15","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Opened issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853276874","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:58","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/45","RelatedDescription":"Closed issue \"Reserved\" (#45) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853274106","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:28","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Closed issue \"Reserved\" (#44) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853272527","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:12","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Opened issue \"Reserved\" (#44) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6840049093","Type":"IssuesEvent","CreatedAt":"2017-11-10T22:00:55","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/27","RelatedDescription":"Reopened issue \"microsoft/dotnet Docker Hub README adopts segmented OS/Arch style\" (#27) at dotnet/announcements","RelatedBody":"# microsoft/dotnet Docker Hub README adopts segmented OS/Arch style\r\n\r\nThe Docker Hub README style used by [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) has been updated to use a new model that is segmented by OS and chip architecture.\r\n\r\nYou can see an example of the new style in the following image. \r\n\r\n<img width=\"803\" alt=\"screen shot 2017-08-13 at 10 44 34 pm\" src=\"https://user-images.githubusercontent.com/2608468/29259667-0c73b3e4-8079-11e7-9c43-26894534ca7a.png\">\r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #275](https://github.com/dotnet/dotnet-docker/issues/275)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #328](https://github.com/dotnet/dotnet-docker-nightly/pull/328)\r\n* [moby/moby #33759](https://github.com/moby/moby/issues/33759)\r\n\r\nThe [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo (and by extension [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)) has been steadily  growing with each release of .NET Core and also of the underlying operating systems that we support. We wanted to present simple-to-read tag lists.  As the repo has grown, the tag list has gotten longer and more complicated. \r\n\r\nThe addition of `arm32v7` to the repo caused us to spend considerable time thinking about repo organization generally. We looked at other approaches and also talked to Docker employees about their long-term plans for `arm32v7` in particular.\r\n\r\nWe considered various options:\r\n\r\n* Split the repo by architecture (this seemed to match what Debian and other official repos were doing). See [debian](https://hub.docker.com/_/debian/) and [arm32v7/debian](https://hub.docker.com/r/arm32v7/debian/). Note how the [Debian GitHub repo](https://github.com/debuerreotype/docker-debian-artifacts) is structured, branching by architecture.\r\n* Split the repo by SDK and Runtime. We've discussed this multiple times but we believe that discoverability would be a significant challenge. Also, other peer development platforms do not segment on the SDK/Runtime boundary.\r\n* Stay the course on the repo structure, but adopt a new (hopefully better) approach for the tag list.\r\n\r\nThere are three main reasons that we adopted a new README style:\r\n\r\n* Multi-arch tags are visually awkward when you have multiple versions of an operating system for a given tag type. For example, the dotnet repo offers both Debian 8 and 9 variants of the `2-sdk` tag. Only one of them can participate in the multi-arch tag while the other variant (in this case Debian 8) is only available with the longer tag name: `2.0.0-sdk-jessie`. The way the bullets in the tag list compose looks odd, as you can see in the following image. It also doesn't communicate the relationship between tags well. <img width=\"724\" alt=\"screen shot 2017-08-13 at 11 14 22 pm\" src=\"https://user-images.githubusercontent.com/2608468/29260189-2f58da84-807d-11e7-868e-7e1f888fd42d.png\">\r\n* A multi-arch-first tag list works well when all OSes offer the same image types, but is poor at showing differences when they don't. The .NET Core offering for `arm32v7` is quite limited currently. We wanted to make that obvious.\r\n* We believe that most users look at the README with a specific OS in mind. We thought that it was best to cater to that, providing a simplified view for a given OS.\r\n\r\nThe downside is that this README style is unique (AFAIK). We've never tried to be novel with our Docker offering, but fit into existing conventions. This is our first significant departure from Docker norms. There is a lot changing in the Docker space, with multi-arch and `arm32v7` being top of the list (as it relates to this topic). As a result, we thought that now was a good time for experimentation based on the conclusion that the existing README style no longer scales to our needs. Our conversations with Docker employees also led us to believe that there are no good established answers to these challenges.\r\n\r\nPlease give us your feedback @ [dotnet/dotnet-docker #275](https://github.com/dotnet/dotnet-docker/issues/275)."},{"Id":"6840048672","Type":"IssuesEvent","CreatedAt":"2017-11-10T22:00:48","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/24","RelatedDescription":"Reopened issue \" .NET Standard 2.0 is final\" (#24) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\n[.NET Standard 2.0](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md) is final. \r\n\r\nYou can now start producing .NET Standard 2.0 libraries and NuGet packages. Please use the latest [.NET Core 2.0 Preview 2](https://www.microsoft.com/net/core/preview) as it contains many improvements that were necessary to provide a good experience.\r\n      \r\n## Details\r\n\r\n* **Bigger API Surface**: We have more than doubled the set of available APIs from **13k** in [.NET Standard 1.6](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard1.6.md) to **32k** in [.NET Standard 2.0](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md). Most of the added APIs are .NET Framework APIs. These additions make it much easier to port existing code to .NET Standard, and, by extension, to any .NET implementation of .NET Standard, such as .NET Core 2.0 and the upcoming version of UWP.\r\n\r\n* **.NET Framework compatibility mode**: The vast majority of NuGet packages are currently still targeting .NET Framework. Many projects are currently blocked from moving to .NET Standard because not all their dependencies are targeting .NET Standard yet. That's why we added a compatibility mode that allows .NET Standard projects to depend on .NET Framework libraries as if they were compiled for .NET Standard. Of course, this may not work in all cases (for instance, if the .NET Framework binaries uses WPF), but we found that [70% of all NuGet packages on nuget.org are API compatible][video] with .NET Standard 2.0, so in practice it unblocks many projects.\r\n\r\n[video]: https://www.youtube.com/watch?v=iIlQer4LEac\r\n\r\n* **Broad platform support**. .NET Standard 2.0 is [supported on the following platforms](https://github.com/dotnet/standard/blob/master/docs/versions.md):\r\n    - .NET Framework 4.6.1\r\n    - .NET Core 2.0\r\n    - Mono 5.4\r\n    - Xamarin.iOS 10.14\r\n    - Xamarin.Mac 3.8\r\n    - Xamarin.Android 7.5\r\n    - UWP is work in progress and will ship later this year.\r\n\r\n## Tooling Prerequisites\r\n\r\nIn general, make sure you run the latest version of the tooling:\r\n\r\n* **.NET Core SDK**. You always need to install [.NET Core 2.0 Preview 2](https://www.microsoft.com/net/core/preview). This also includes the CLI (`dotnet`) for building packages, so if you only want to use the CLI, you can stop here.\r\n* **Visual Studio**. If you want to use Visual Studio for authoring .NET Standard 2.0 libraries, you also need to install [Visual Studio 2017 15.3](https://www.visualstudio.com/vs/preview/). Make sure to use 15.3 and not an earlier version, as this release addressed a couple of key issues to provide a good experience. If you only need to consume .NET Standard 2.0 libraries, you can do that even in Visual Studio 2015 but you'll need NuGet client 3.6 or higher ([download from Nuget.org/downloads](https://www.nuget.org/downloads))\r\n* **Visual Studio for Mac**. The latest version of [Visual Studio for Mac](https://www.visualstudio.com/vs/visual-studio-mac/) supports building .NET Standard 2.0 libraries. \r\n* **Rider**. The [latest version](https://www.jetbrains.com/rider/download) also has support for .NET Standard 2.0.\r\n\r\nLearn more [by reading the .NET Standard FAQ](http://aka.ms/netstandardfaq).\r\n\r\n## Discussion\r\n\r\nFor discussion, see https://github.com/dotnet/standard/issues/439."},{"Id":"6840048225","Type":"IssuesEvent","CreatedAt":"2017-11-10T22:00:40","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/22","RelatedDescription":"Reopened issue \".NET Core Support for macOS High Sierra\" (#22) at dotnet/announcements","RelatedBody":"# .NET Core Support for macOS High Sierra\r\n\r\n## Summary\r\n\r\n.NET Core 1.x and 2.0 do not currently support macOS High Sierra (version 10.13, currently in beta) due to changes in macOS. The .NET Core team has been testing macOS High Sierra builds and has filed bugs with Apple so that the two products can work better together.\r\n\r\nWe intend to have both .NET Core 1.x and 2.0 supporting macOS High Sierra by the time Apple ships the final production release. We are hoping to ship .NET Core 2.0 RTW with High Sierra support.\r\n\r\nAs .NET Core support for macOS High Sierra is improved, this announcement will be updated with the new status.\r\n\r\n## Impact\r\n\r\n.NET Core does not work on macOS High Sierra.\r\n\r\n## Details\r\n\r\n* [dotnet/core #677](https://github.com/dotnet/core/issues/677) -- tracking bug\r\n* [dotnet/corefx #22243](https://github.com/dotnet/corefx/pull/22243) -- workaround for issue 33294006, listed below.\r\n\r\nWe have reported the following issues to Apple as part of supporting .NET Core on macOS High Sierra.\r\n\r\n> Note: The issue links can only be accessed by Apple employees.\r\n\r\n* [33275095](https://bugreport.apple.com/web/?problemID=33275095) SSL Failure: macOS 10.13 (17A291j) SecureTransport in server mode can select ciphersuites not applicable to the TLS version.\r\n\r\n    **.NET Core Note:** When hosting an [SslStream](https://docs.microsoft.com/dotnet/api/system.net.security.sslstream?view=netcore-2.0) limited to TLS 1.0 or TLS 1.1 clients other than Apple SecureTransport may fail to connect.\r\n\r\n* [33143630](https://bugreport.apple.com/web/?problemID=33143630) macOS 10.13 (17A291j) SecTrustExecute fails with no error building revocation-enabled chain against a self-issued certificate.\r\n    \r\n    **.NET Core Note:** In this situation an Apple-specific derived type of CryptographicException will be thrown with a message of “No error”.\r\n\r\n* [33294006](https://bugreport.apple.com/web/?problemID=33294006) macOS 10.13 (17A291j) libcurl changing to LibreSSL changes thread-safety model from safe to unsafe \r\n    \r\n    **.NET Core Note:** A functioning workaround is in place, but it may regress performance for parallel HTTP requests (to avoid crashes caused by the loss of thread safety).\r\n\r\n* [32948209](https://bugreport.apple.com/web/?problemID=32948209) CCCryptorReset returns kCCUnimplemented for ECB on 10.13.\r\n\r\n    **.NET Core Note:** .NET Core has worked around this regression, so it should not be user-impacting."},{"Id":"6840047669","Type":"IssuesEvent","CreatedAt":"2017-11-10T22:00:31","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/17","RelatedDescription":"Reopened issue \".NET Core Preview 2\" (#17) at dotnet/announcements","RelatedBody":"Today we announce the availability of .NET Core 2.0.0 Preview .\r\n\r\n* [Download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.0-preview2-download.md)\r\n* [Getting Started](https://www.microsoft.com/net/core/preview)\r\n* [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.0-preview2.md)\r\n* [Blog](https://blogs.msdn.microsoft.com/dotnet/2017/06/28/announcing-net-core-2-0-preview-2/)\r\n\r\nPlease use [dotnet/core #711](https://github.com/dotnet/core/issues/711) for discussion and questions."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6856275204","Type":"IssuesEvent","CreatedAt":"2017-11-15T02:48:30","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15033","RelatedDescription":"Opened issue \"Null reference in JITCompilationFinished\" (#15033) at dotnet/coreclr","RelatedBody":"@sillyousu reported a crash in the profiler in thread #445 - I am creating a new issue for that discussion here.\r\n\r\nMy suggestion to investigate this is either to manually map the disassembly to source, or to build your own coreclr with symbols so the debugger will do it for you. The function where it failed is fairly small so if you are familiar with disassembly it shouldn't be too bad:\r\nhttps://github.com/dotnet/coreclr/blob/67a66156d0307b49522a13618522d289268bc1f9/src/vm/eetoprofinterfaceimpl.cpp#L3184\r\n\r\nThat will narrow the issue from the method to the particular operation that encountered the NULL.\r\n"},{"Id":"6856226115","Type":"IssuesEvent","CreatedAt":"2017-11-15T02:30:54","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15001","RelatedDescription":"Closed issue \"AppDomain::CacheStringsForDAC missing implementation\" (#15001) at dotnet/coreclr","RelatedBody":"I've just found that an implementation of the method `AppDomain::CacheStringsForDAC` is [missing](https://github.com/dotnet/coreclr/blob/56ec8cb6dcbb0e7a844f2f3e37b646bb57a737db/src/vm/appdomain.cpp#L6425-L6439) and wasn't pretty sure if it's ok.\r\n\r\nWould you mind to let me know any explanation about the current state of this method?"},{"Id":"6856225738","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:30:45","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15029","RelatedDescription":"Merged pull request \"Remove out-of-use method and properties from appdomain\" (#15029) at dotnet/coreclr","RelatedBody":"Not supported on CoreCLR appdomain's method and properties were removed\r\n\r\n#15001"},{"Id":"6856096329","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:45:09","Actor":"tarekgh","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15024","RelatedDescription":"Merged pull request \"Enable Globalization Invariant mode using Environment Variable\" (#15024) at dotnet/coreclr","RelatedBody":""},{"Id":"6856035710","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:24:02","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15032","RelatedDescription":"Opened pull request \"Fix 14455: _opt_relrotarg_valref test failure on amd64.\" (#15032) at dotnet/coreclr","RelatedBody":"Do not zero-initialize temps, that were created by jit and do not have GC refs.\r\nThe confusion was that `varDsc->lvIsTemp` means `short live` variable, when we wanted to ask is it IL temp or not."},{"Id":"6856025015","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:20:16","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15031","RelatedDescription":"Opened pull request \"Update CoreFx to preview1-25914-04 (master)\" (#15031) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"6855923896","Type":"PullRequestEvent","CreatedAt":"2017-11-15T00:46:51","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15007","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, PgoData to prerelease-02214-03, preview1-25914-01, preview1-25913-03, master-20171113-1530, respectively (master)\" (#15007) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify<details><summary>Discarded auto-update commits (click to expand)</summary><auto-pr-discard-list>\r\n\r\n * [`fcf39e0`](https://github.com/dotnet-maestro-bot/coreclr/commits/fcf39e02844e19b06162b2ffd8a0e8e58c2881af) Update BuildTools, CoreClr, CoreFx, PgoData to prerelease-02213-01, preview1-25914-01, preview1-25913-03, master-20171113-1530, respectively\r\n   * :x: **CentOS7.1 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_centos7.1_flow_prtest/855/)\r\n   * :x: **OSX10.12 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_osx10.12_flow_prtest/9309/)\r\n   * :x: **Ubuntu x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_ubuntu_flow_prtest/13073/)\r\n   * :x: **Ubuntu16.04 armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu16.04_prtest/2062/)\r\n   * :x: **Windows_NT x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_windows_nt_prtest/845/)\r\n   * :hourglass: **Perf Build and Test** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/master/job/perf-pipeline-XUNIT_PERFORMANCE_MAX_ITERATION_6+XUNIT_PERFORMANCE_MAX_ITERATION_INNER_SPECIFIED_6_prtest/53/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/debug_centos7.1_prtest/12670/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/CROSS_check_prtest/7987/)\r\n   * :heavy_check_mark: **license/cla** All CLA requirements met. [Details](https://cla.dotnetfoundation.org/dotnet/coreclr?pullRequest=15007)\r\n   * :heavy_check_mark: **Tizen armel Cross Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armel_cross_checked_tizen_prtest/766/)\r\n   * :heavy_check_mark: **Ubuntu arm64 Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/arm64_debug_small_page_size_prtest/2262/)\r\n   * :heavy_check_mark: **Ubuntu armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu_prtest/858/)\r\n   * :heavy_check_mark: **Ubuntu x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_ubuntu_formatting_prtest/12786/)\r\n   * :heavy_check_mark: **Windows_NT x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_windows_nt_formatting_prtest/12724/)\r\n   * :heavy_check_mark: **Windows_NT x86 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x86_checked_windows_nt_prtest/12437/)\r\n   * :heavy_check_mark: **WIP** ready for review [Details](https://github.com/apps/wip)\r\n * [`cf71d7a`](https://github.com/dotnet-maestro-bot/coreclr/commits/cf71d7a49c62ce7ad3fc1790d1700477fe9edf4d) Update BuildTools, CoreClr, CoreFx, PgoData to prerelease-02213-01, preview1-25913-03, preview1-25913-03, master-20171113-1530, respectively\r\n   * :x: **CentOS7.1 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_centos7.1_flow_prtest/847/)\r\n   * :x: **Tizen armel Cross Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armel_cross_checked_tizen_prtest/759/)\r\n   * :hourglass: **Perf Build and Test** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/master/job/perf-pipeline-XUNIT_PERFORMANCE_MAX_ITERATION_6+XUNIT_PERFORMANCE_MAX_ITERATION_INNER_SPECIFIED_6_prtest/41/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/debug_centos7.1_prtest/12663/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/CROSS_check_prtest/7979/)\r\n   * :heavy_check_mark: **license/cla** All CLA requirements met. [Details](https://cla.dotnetfoundation.org/dotnet/coreclr?pullRequest=15007)\r\n   * :heavy_check_mark: **OSX10.12 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_osx10.12_flow_prtest/9300/)\r\n   * :heavy_check_mark: **Ubuntu arm64 Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/arm64_debug_small_page_size_prtest/2254/)\r\n   * :heavy_check_mark: **Ubuntu armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu_prtest/850/)\r\n   * :heavy_check_mark: **Ubuntu x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_ubuntu_flow_prtest/13065/)\r\n   * :heavy_check_mark: **Ubuntu x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_ubuntu_formatting_prtest/12779/)\r\n   * :heavy_check_mark: **Ubuntu16.04 armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu16.04_prtest/2054/)\r\n   * :heavy_check_mark: **Windows_NT x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_windows_nt_prtest/838/)\r\n   * :heavy_check_mark: **Windows_NT x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_windows_nt_formatting_prtest/12716/)\r\n   * :heavy_check_mark: **Windows_NT x86 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x86_checked_windows_nt_prtest/12428/)\r\n   * :heavy_check_mark: **WIP** ready for review [Details](https://github.com/apps/wip)\r\n * [`d8c73d8`](https://github.com/dotnet-maestro-bot/coreclr/commits/d8c73d85970331a24ce3c03a5e40da1ced7b3f7c) Update BuildTools, CoreClr, CoreFx to prerelease-02213-01, preview1-25913-03, preview1-25913-03, respectively\r\n   * :x: **CentOS7.1 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_centos7.1_flow_prtest/840/)\r\n   * :x: **OSX10.12 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_osx10.12_flow_prtest/9293/)\r\n   * :x: **Ubuntu armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu_prtest/843/)\r\n   * :x: **Ubuntu x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_ubuntu_flow_prtest/13057/)\r\n   * :hourglass: **Perf Build and Test** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/master/job/perf-pipeline-XUNIT_PERFORMANCE_MAX_ITERATION_6+XUNIT_PERFORMANCE_MAX_ITERATION_INNER_SPECIFIED_6_prtest/34/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/debug_centos7.1_prtest/12656/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/CROSS_check_prtest/7972/)\r\n   * :heavy_check_mark: **license/cla** All CLA requirements met. [Details](https://cla.dotnetfoundation.org/dotnet/coreclr?pullRequest=15007)\r\n   * :heavy_check_mark: **Tizen armel Cross Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armel_cross_checked_tizen_prtest/752/)\r\n   * :heavy_check_mark: **Ubuntu arm64 Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/arm64_debug_small_page_size_prtest/2247/)\r\n   * :heavy_check_mark: **Ubuntu x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_ubuntu_formatting_prtest/12772/)\r\n   * :heavy_check_mark: **Ubuntu16.04 armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu16.04_prtest/2047/)\r\n   * :heavy_check_mark: **Windows_NT x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_windows_nt_prtest/831/)\r\n   * :heavy_check_mark: **Windows_NT x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_windows_nt_formatting_prtest/12709/)\r\n   * :heavy_check_mark: **Windows_NT x86 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x86_checked_windows_nt_prtest/12421/)\r\n   * :heavy_check_mark: **WIP** ready for review [Details](https://github.com/apps/wip)\r\n * [`612b441`](https://github.com/dotnet-maestro-bot/coreclr/commits/612b441e5d5cb1472cbc522283022b42db222668) Update BuildTools, CoreClr to prerelease-02213-01, preview1-25913-03, respectively\r\n   * :x: **Ubuntu armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu_prtest/831/)\r\n   * :x: **Ubuntu x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_ubuntu_flow_prtest/13046/)\r\n   * :hourglass: **Perf Build and Test** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/master/job/perf-pipeline-XUNIT_PERFORMANCE_MAX_ITERATION_6+XUNIT_PERFORMANCE_MAX_ITERATION_INNER_SPECIFIED_6_prtest/22/)\r\n   * :hourglass: **Windows_NT x86 Checked Innerloop Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x86_checked_windows_nt_prtest/12417/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_centos7.1_flow_prtest/828/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/debug_centos7.1_prtest/12645/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/CROSS_check_prtest/7961/)\r\n   * :heavy_check_mark: **license/cla** All CLA requirements met. [Details](https://cla.dotnetfoundation.org/dotnet/coreclr?pullRequest=15007)\r\n   * :heavy_check_mark: **OSX10.12 x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_osx10.12_flow_prtest/9282/)\r\n   * :heavy_check_mark: **Tizen armel Cross Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armel_cross_checked_tizen_prtest/741/)\r\n   * :heavy_check_mark: **Ubuntu arm64 Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/arm64_debug_small_page_size_prtest/2236/)\r\n   * :heavy_check_mark: **Ubuntu x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_ubuntu_formatting_prtest/12761/)\r\n   * :heavy_check_mark: **Ubuntu16.04 armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu16.04_prtest/2036/)\r\n   * :heavy_check_mark: **Windows_NT x64 Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_windows_nt_prtest/819/)\r\n   * :heavy_check_mark: **Windows_NT x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_windows_nt_formatting_prtest/12698/)\r\n   * :heavy_check_mark: **WIP** ready for review [Details](https://github.com/apps/wip)\r\n * [`1382a3a`](https://github.com/dotnet-maestro-bot/coreclr/commits/1382a3a4c27c807852e3ac94e5be8f4247f94c02) Update BuildTools to prerelease-02213-01\r\n   * :hourglass: **CentOS7.1 x64 Checked Innerloop Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_centos7.1_flow_prtest/822/)\r\n   * :hourglass: **OSX10.12 x64 Checked Innerloop Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_osx10.12_flow_prtest/9277/)\r\n   * :hourglass: **Perf Build and Test** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/master/job/perf-pipeline-XUNIT_PERFORMANCE_MAX_ITERATION_6+XUNIT_PERFORMANCE_MAX_ITERATION_INNER_SPECIFIED_6_prtest/17/)\r\n   * :hourglass: **Ubuntu x64 Checked Innerloop Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_ubuntu_flow_prtest/13041/)\r\n   * :hourglass: **Windows_NT x64 Checked Innerloop Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_windows_nt_prtest/814/)\r\n   * :hourglass: **Windows_NT x86 Checked Innerloop Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x86_checked_windows_nt_prtest/12404/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/debug_centos7.1_prtest/12640/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/CROSS_check_prtest/7956/)\r\n   * :heavy_check_mark: **license/cla** All CLA requirements met. [Details](https://cla.dotnetfoundation.org/dotnet/coreclr?pullRequest=15007)\r\n   * :heavy_check_mark: **Tizen armel Cross Checked Innerloop Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armel_cross_checked_tizen_prtest/736/)\r\n   * :heavy_check_mark: **Ubuntu arm64 Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/arm64_debug_small_page_size_prtest/2231/)\r\n   * :heavy_check_mark: **Ubuntu armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu_prtest/825/)\r\n   * :heavy_check_mark: **Ubuntu x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_ubuntu_formatting_prtest/12756/)\r\n   * :heavy_check_mark: **Ubuntu16.04 armlb Cross Debug Innerloop Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/armlb_cross_debug_ubuntu16.04_prtest/2030/)\r\n   * :heavy_check_mark: **Windows_NT x64 Innerloop Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_windows_nt_formatting_prtest/12693/)\r\n   * :heavy_check_mark: **WIP** ready for review [Details](https://github.com/apps/wip)\r\n\r\n</auto-pr-discard-list></details>"},{"Id":"6855877030","Type":"PullRequestEvent","CreatedAt":"2017-11-15T00:30:54","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14966","RelatedDescription":"Merged pull request \"move fgFixupStructReturn call to the beggining of fgMorphCall\" (#14966) at dotnet/coreclr","RelatedBody":"This transformation looked strange in the list of the tail call checks.\r\n\r\nIt was done twice during the tail call optimization and in the args morphing. The problem is that if the tail call optimization was aborted it was not clear was `fgFixupStructReturn` called or not.\r\n\r\nNo spmi diffs."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6856292610","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:54:53","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8019","RelatedDescription":"Merged pull request \"Update F# compiler\" (#8019) at dotnet/cli","RelatedBody":"Update F# Compiler to match VS2017.5"},{"Id":"6856292073","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:54:42","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8020","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-25914-05 (master)\" (#8020) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6855689149","Type":"PullRequestEvent","CreatedAt":"2017-11-14T23:31:55","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8021","RelatedDescription":"Opened pull request \"Merge release/1.1.0-MSRC into rel/1.1.0\" (#8021) at dotnet/cli","RelatedBody":"This was a clean merge."},{"Id":"6855591507","Type":"PullRequestEvent","CreatedAt":"2017-11-14T23:04:37","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8020","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-25914-05 (master)\" (#8020) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6855559135","Type":"PullRequestEvent","CreatedAt":"2017-11-14T22:56:14","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8019","RelatedDescription":"Opened pull request \"Update F# compiler\" (#8019) at dotnet/cli","RelatedBody":"Update F# Compiler to match VS2017.5"},{"Id":"6855554252","Type":"PullRequestEvent","CreatedAt":"2017-11-14T22:55:01","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8018","RelatedDescription":"Closed pull request \"Update cli to latest FSharp.Compiler\" (#8018) at dotnet/cli","RelatedBody":"Update F# Compiler  to match VS2017.5 release.\r\n\r\nVS Bug # 519012\r\n\r\n"},{"Id":"6855531954","Type":"PullRequestEvent","CreatedAt":"2017-11-14T22:49:45","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8005","RelatedDescription":"Merged pull request \"Update non-web templates to version 1.0.0-beta3-20171110-312\" (#8005) at dotnet/cli","RelatedBody":"cc @singhsarab"},{"Id":"6855519122","Type":"PullRequestEvent","CreatedAt":"2017-11-14T22:46:33","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8018","RelatedDescription":"Opened pull request \"Update cli to latest FSharp.Compiler\" (#8018) at dotnet/cli","RelatedBody":"Update F# Compiler  to match VS2017.5 release.\r\n\r\nVS Bug # 519012\r\n\r\n"},{"Id":"6855461725","Type":"PullRequestEvent","CreatedAt":"2017-11-14T22:33:02","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8001","RelatedDescription":"Merged pull request \"Removing the MyGet 'dotnet-core' from the Nuget.config \" (#8001) at dotnet/cli","RelatedBody":"Removing:\r\n key=\"dotnet-core\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json \r\nfrom the Nuget.config\r\n\r\n"},{"Id":"6855449274","Type":"IssuesEvent","CreatedAt":"2017-11-14T22:30:10","Actor":"borrrden","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8008","RelatedDescription":"Closed issue \"dotnet crashing during xunit testing\" (#8008) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n`dotnet xunit -Verbose`\r\n\r\nUnfortunately, this appears to be environmental, but I have no idea what is causing it thanks to a stack trace full of question marks.  If I run unit tests on [https://github.com/couchbase/couchbase-lite-net/tree/feature/api-v2/src/Couchbase.Lite.Tests.NetCore](my testing project) the dotnet process almost immediately crashes (after one test, no matter which test is run) on a macOS machine (10.12.6).  \r\n\r\n## Expected  behavior\r\n\r\nAs on other mac machines, the tests should run normally\r\n\r\n## Actual behavior\r\n\r\nOutput\r\n\r\n> Detecting target frameworks in Couchbase.Lite.Tests.NetCore.Source.csproj...\r\nBuilding for framework netcoreapp1.0...\r\n  Couchbase.Lite -> /Users/borrrden/Development/couchbase-lite-net/src/Couchbase.Lite/bin/Debug/netstandard1.4/Couchbase.Lite.dll\r\n  Couchbase.Lite.Support.NetDesktop -> /Users/borrrden/Development/couchbase-lite-net/src/Couchbase.Lite.Support.NetDesktop/bin/Debug/netstandard1.4/Couchbase.Lite.Support.NetDesktop.dll\r\n  Couchbase.Lite.Tests.NetCore.Source -> /Users/borrrden/Development/couchbase-lite-net/src/Couchbase.Lite.Tests.NetCore/bin/Debug/netcoreapp1.0/Couchbase.Lite.Tests.NetCore.dll\r\nRunning .NET Core tests for framework netcoreapp1.0...\r\nxUnit.net Console Runner (64-bit .NET Core 4.6.25714.02)\r\n  Discovering: Couchbase.Lite.Tests.NetCore\r\n  Discovered:  Couchbase.Lite.Tests.NetCore\r\n  Starting:    Couchbase.Lite.Tests.NetCore\r\n    Test.FragmentTest.TestNonDictionaryFragmentSetObject\r\n\r\nThe last line varies by whatever gets chosen first, and then [this crash](https://gist.github.com/borrrden/f906622ba8a97840f5de4da736a76f3a) happens.\r\n\r\n\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.2/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6855030501","Type":"PullRequestEvent","CreatedAt":"2017-11-14T20:58:57","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8011","RelatedDescription":"Merged pull request \"Merge release/15.5 to master\" (#8011) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171114-080040\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171114-080040 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6855025516","Type":"PullRequestEvent","CreatedAt":"2017-11-14T20:57:56","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8017","RelatedDescription":"Opened pull request \"Merge release/2.0.0-MSRC into release/2.0.0\" (#8017) at dotnet/cli","RelatedBody":"Clean merge."},{"Id":"6854990396","Type":"PullRequestEvent","CreatedAt":"2017-11-14T20:50:21","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8016","RelatedDescription":"Opened pull request \"Merge release/15.5-MSRC into release/15.5\" (#8016) at dotnet/cli","RelatedBody":""},{"Id":"6854690625","Type":"IssuesEvent","CreatedAt":"2017-11-14T19:47:15","Actor":"m1evankaiser","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8015","RelatedDescription":"Opened issue \"MSBuild error: MSB4014 \"Illegal characters in path\"\" (#8015) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nUnknown other than run MSBuild on any .NET Framework project with a dotnet standard class library with dotnet 2.0 installed, perhaps.\r\n\r\n## Expected  behavior\r\n\r\nMSBuild succeeds\r\n\r\n## Actual behavior\r\n\r\nMSBuild fails with error:\r\n```\r\n    error MSB4014: The build stopped unexpectedly because of an internal failure.\\r\r\n    error MSB4014: System.ArgumentException: Illegal characters in path.\\r\r\n    error MSB4014:    at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\\r\r\n    error MSB4014:    at System.IO.Path.Combine(String path1, String path2)\\r\r\n    error MSB4014:    at Microsoft.DotNet.MSBuildSdkResolver.EnvironmentProvider.<>c__DisplayClass7_0.<GetCommandPath>b__0(String p)\\r\r\n    error MSB4014:    at System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\\r\r\n    error MSB4014:    at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\\r\r\n    error MSB4014:    at Microsoft.DotNet.MSBuildSdkResolver.EnvironmentProvider.GetCommandPath(String commandName)\\r\r\n    error MSB4014:    at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.GetDotnetExeDirectory()\\r\r\n    error MSB4014:    at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.ResolveNetcoreSdkDirectory(SdkResolverContext context)\\r\r\n    error MSB4014:    at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext context, SdkResultFactory factory)\\r\r\n    error MSB4014:    at Microsoft.Build.BackEnd.SdkResolution.GetSdkPath(SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath)\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n## Additional Info\r\n1. I noticed that the error originates from this function in MSBuild that looks for the path to dotnet, so I set the `DOTNET_MSBUILD_SDK_RESOLVER_CLI_DIR` to `C:\\Program Files\\dotnet` get around it.\r\nhttps://github.com/dotnet/cli/blob/aacd49f514fecca254f631d4add049c4f8fa0861/src/Microsoft.DotNet.MSBuildSdkResolver/MSBuildSdkResolver.cs#L170\r\n\r\n2. It presumes the `PATH` has an invalid character, but the following is the exact `PATH` environment variable with no invalid characters:\r\n`C:\\Program Files (x86)\\EMC IRM\\Common\\;C:\\ProgramData\\Oracle\\Java\\javapath;%SystemRoot%\\system32;%SystemRoot%;%SystemRoot%\\System32\\Wbem;%SYSTEMROOT%\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;C:\\Program Files (x86)\\Microsoft ASP.NET\\ASP.NET Web Pages\\v1.0\\;C:\\Program Files (x86)\\Microsoft SQL Server\\90\\Tools\\binn\\;C:\\Program Files (x86)\\Kaspersky Lab\\Kaspersky Anti-Virus 6.0 for Windows Servers MP4\\;C:\\Program Files\\Windows Imaging\\;C:\\Program Files\\Microsoft\\Web Platform Installer\\;C:\\Program Files (x86)\\Dell\\SysMgt\\oma\\bin;C:\\Program Files (x86)\\Dell\\SysMgt\\shared\\bin;C:\\Program Files (x86)\\Dell\\SysMgt\\idrac;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\Tools\\Binn\\ManagementStudio\\;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.8\\;C:\\Users\\tfsservice\\AppData\\Roaming\\npm;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Git\\cmd\r\n;C:\\Program Files\\nodejs\\;%USERPROFILE%\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\dotnet\\`\r\n\r\n"},{"Id":"6854131124","Type":"IssuesEvent","CreatedAt":"2017-11-14T17:51:31","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8013","RelatedDescription":"Closed issue \"Cordova Plugin Diagnostic Visual Studio 2017 Error\" (#8013) at dotnet/cli","RelatedBody":"Hello mate\r\nI installed your plugin in my apache cordova app vs2017 and i recived lots of error while build\r\ncordova tools > 6.3.1 platform > 5.2.1 and nodjs > 44.3\r\nmin target 14 and max 23\r\nAll android sdk and build tools installed\r\nBuild Errors :\r\n![32649897-02b71a98-c611-11e7-9fa6-9a756e9d8e9b](https://user-images.githubusercontent.com/33541948/32776300-5b59f7e0-c947-11e7-9b48-78482281b384.png)\r\n![32650156-f559f63a-c611-11e7-8967-9181fcb9a3b3](https://user-images.githubusercontent.com/33541948/32776320-68844db2-c947-11e7-9090-a00e3c6fb04c.png)\r\n\r\n![32650101-bf0fb664-c611-11e7-9f28-2e5ac85073cd](https://user-images.githubusercontent.com/33541948/32776309-6212d34a-c947-11e7-845a-cc2da4cc722c.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6851965744","Type":"IssuesEvent","CreatedAt":"2017-11-14T10:51:20","Actor":"dmenoud","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/583","RelatedDescription":"Opened issue \"Possible System.Net.Http version conflict\" (#583) at dotnet/standard","RelatedBody":"In one of our MVC 5 project with Web API 2, we have to use .net standard 2.x library.\r\n\r\nWhen we add a package requiring .net standard 2.0, we have an issue with \r\n\r\n`system.web.http.controllers.httpactioncontext.get_request() method not found`\r\n\r\nThis happens when we are doing an API call.\r\n\r\nIt seems the System.Net.Http from .net standard 2.0 is conflicting with the one from framwork 4.6.1.\r\n\r\nFrom the original project, we have removed the <DependentAssembly> forcing version of System.Net.Http"},{"Id":"6848751190","Type":"IssuesEvent","CreatedAt":"2017-11-13T19:36:27","Actor":"JanEggers","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/580","RelatedDescription":"Closed issue \"Visual Studio uses netstandard1.3  instead of net452 when consumed by a net461 project\" (#580) at dotnet/standard","RelatedBody":"i am contributing to a library https://github.com/chkr1011/MQTTnet this library targets netstandard1.3 and net452.\r\n\r\nrecently we get complaints by consumers of the library that we have added so many dependencies.\r\n\r\nif a project targeting net461 all dependencies that are required for netstandard 1.3 are forced on that project. \r\n\r\nwhy is that the case?\r\n\r\nMy understanding is that visual studio should use net452 dlls when targeting net462 not netstandard1.3 + added polyfill dependencies\r\n\r\nif this issue is in the wrong place feel free to move it where it belongs i didnt know a better place to start with.\r\n\r\n"},{"Id":"6843530945","Type":"IssuesEvent","CreatedAt":"2017-11-12T16:15:18","Actor":"stephentoub","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/582","RelatedDescription":"Closed issue \"Generic Enum.Parse in netstandard 2.0\" (#582) at dotnet/standard","RelatedBody":"Yesterday I moved some code written under NetCoreApp2.0 into a NetStandard2.0 classlib and experienced that my calls to `Enum.Parse<MyType>(myValue)` failed to build. \r\n\r\nIs there a specific reason for the generic version of Enum.Parse not being present in netstd?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6856612598","Type":"IssuesEvent","CreatedAt":"2017-11-15T05:06:49","Actor":"Vohuman","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25260","RelatedDescription":"Opened issue \"Error: CS1703: System.Runtime, Version=4.1.2.0\" (#25260) at dotnet/corefx","RelatedBody":"When my MVC.core project tries to open any page, I face with the following error:\r\n\r\n> CS1703: An assembly with the same identity 'System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' has already been imported."},{"Id":"6856498370","Type":"PullRequestEvent","CreatedAt":"2017-11-15T04:15:43","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24809","RelatedDescription":"Merged pull request \"Improve SO_REUSE{ADDR,PORT} xplat behavior for TCP\" (#24809) at dotnet/corefx","RelatedBody":"Ref https://github.com/dotnet/corefx/issues/24562\r\n\r\nThe test cases added would fail on Unix and pass on Windows.\r\n\r\nThe ProtocolType is passed to Bind, GetSockOpt and SetSockOpt to change the behavior for TCP in pal_networking.cpp.\r\n\r\nCC @wfurt @geoffkizer @Priya91 @halter73 @stephentoub "},{"Id":"6856483795","Type":"IssuesEvent","CreatedAt":"2017-11-15T04:09:27","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/23710","RelatedDescription":"Closed issue \"Ensure file path is in IO exception messages \" (#23710) at dotnet/corefx","RelatedBody":"Historically IO exceptions have often not contained the path often due to CAS. That is not a concern any more and it is certainly more helpful to get \"Access to the path '{0}' is denied.\" rather than \"Access to the path is denied.\"\r\n\r\nWe fixed this in Corelib https://github.com/dotnet/coreclr/commit/6ba74dc2a7194f8d6c86c3aeab572a074ef645c8  .. we should do a similar pass over CoreFX. \r\n\r\nLook for strings like `Could not find a part of the path` `The specified file name or path is too long, or a component of the specified path is too long.` `Access to the path is denied` and insert the path where possible. Similarly `Illegal characters in path.`"},{"Id":"6856483794","Type":"PullRequestEvent","CreatedAt":"2017-11-15T04:09:27","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25195","RelatedDescription":"Merged pull request \"File path is in IO exception messages\" (#25195) at dotnet/corefx","RelatedBody":"Fixes #23710."},{"Id":"6856477292","Type":"PullRequestEvent","CreatedAt":"2017-11-15T04:06:25","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25215","RelatedDescription":"Merged pull request \"Microsoft.CSharp: Replace IExprWithArgs interface with ExprWithArgs class in hierarchy\" (#25215) at dotnet/corefx","RelatedBody":"Allows for less casting, and tighter return types.\r\n\r\n* Preliminary: Remove always-null parameter to `BindToProperty`\r\n\r\nRemoval of paths for that parameter being null allows tightening return type from `Expr` to `ExprProperty`.\r\n\r\n* Replace `IExprWithArgs` interface with `ExprWithArgs` class in hierarchy\r\n\r\nMakes `OptionalArguments` non-virtual\r\n\r\nAllows implicit cast from `ExprWithArgs` to `Expr` for reduced casting.\r\n\r\n* Change return types from `Expr` to `ExprWithArgs` where possible.\r\n\r\n* Remove redundant cast from `ReorderArgumentsForNamedAndOptional`\r\n\r\nAlso make it void, since it always returns the same argument, to be clearer it's mutating its argument.\r\n\r\n* Remove redundant call to `ExprMemberGroup.OptionalObject` property.\r\n\r\nStored as part of extension-method handling, but dynamic doesn't support extension methods."},{"Id":"6856454298","Type":"PullRequestEvent","CreatedAt":"2017-11-15T03:56:46","Actor":"VSadov","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25214","RelatedDescription":"Merged pull request \"Microsoft.CSharp: Remove check for ExprMemberGroup being used as a lvalue\" (#25214) at dotnet/corefx","RelatedBody":"`ExprMemberGroup`s only exist within `ExprCall` and `ExprProperty` objects and can never be passed as operands, so this is unreachable. (Unlike in static compilation where it would be the result of someone trying e.g. `obj.ToString = 3`).\r\n\r\nResults in removal of ERR_AssgReadonlyLocalCause, contributes to #22470.\r\n\r\n* Remove `ErrArgIds` class\r\n\r\nOnly place it was instantiated has now been removed.\r\n\r\nClean-up all unused `ErrArgKind` as well as `Ids` that this makes unused."},{"Id":"6856450793","Type":"PullRequestEvent","CreatedAt":"2017-11-15T03:55:22","Actor":"VSadov","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25217","RelatedDescription":"Merged pull request \"Microsoft.CSharp: Remove code for checking possible membergroup → delegate conversion\" (#25217) at dotnet/corefx","RelatedBody":"* Remove `MethodGroupReturnTypeInference()` method.\r\n\r\nInitial `if (!(pSource is ExprMemberGroup memGrp))` will always be hit, since we can't have a member group expression as an argument within dynamic code, so it will always return false.\r\n\r\n* Remove `GroupToArgsBinder._pDelegate`\r\n\r\nThe only remaining call to the constructor always passes null to this.\r\nRemove it, and paths for it being non-null.\r\n\r\nResults in removal of `ERR_MethDelegateMismatch`. Contributes to #22470"},{"Id":"6856447373","Type":"IssuesEvent","CreatedAt":"2017-11-15T03:53:56","Actor":"VSadov","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25201","RelatedDescription":"Closed issue \"Pontential failure in Microsoft.CSharp on hashcode collision.\" (#25201) at dotnet/corefx","RelatedBody":"In the table that stores `AggregateType` instances the key is a composite of the `AggregateSymbol` (same for all instances of the same generic type and a `Name` that in turn composed from the outer `AggregateType` and the type arguments.\r\n\r\nThat composition though depends on the (default implementation) hash code of the type array for the type arguments:\r\n\r\n```C#\r\npublic Name GetNameFromPtrs(object u1, object u2)\r\n{\r\n    // Note: this won't produce the same names as the native logic\r\n    if (u2 != null)\r\n    {\r\n        return NameManager.Add(string.Format(CultureInfo.InvariantCulture, \"{0:X}-{1:X}\", u1.GetHashCode(), u2.GetHashCode()));\r\n    }\r\n    else\r\n    {\r\n        return NameManager.Add(string.Format(CultureInfo.InvariantCulture, \"{0:X}\", u1.GetHashCode()));\r\n    }\r\n}\r\n```\r\n\r\n(`u1` is the type array, `u2` is the outer type, which is often null).\r\n\r\nSince the hash code isn't guaranteed to be unique, this could potentially create the same key for two type arrays. (Note; the hash code is used as the actual key, not as a hash code of it).\r\n\r\nIf this happens, then e.g. an attempt to find the object for the type `Dictionary<string, Uri>` could return the object for the type `Dictionary<int, List<string>>`, or any other different instance (or even the open type, or a half-open type) of `Dictionary<,>`. The binding would then fail.\r\n\r\nRestarting the application would result in different hash codes and the code working, making any such issue intermittent and hard to trace.\r\n\r\nAdding a deliberately bad `GetHashCode()` override to `TypeArray` causes this issue consistently, demonstrating the potential.\r\n\r\n(A similar approach is used for storing `ErrorType` instances, but is harmless for the same reason that the type arguments to that type are actually redundant and could be safely removed)."},{"Id":"6856447361","Type":"PullRequestEvent","CreatedAt":"2017-11-15T03:53:56","Actor":"VSadov","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25202","RelatedDescription":"Merged pull request \"Key AggregateType lookup on triple of symbol, outer type and type args\" (#25202) at dotnet/corefx","RelatedBody":"Avoid potential for false key matching.\r\n\r\nFixes #25201\r\n\r\n* Remove `ErrorType.typeArgs`\r\n\r\nConsistently empty for named errors, null for unnamed, so have no real effect.\r\n\r\nAllows removal of remaining use of `GetNameFromPtrs()`\r\n\r\n* Add multiply into KeyPair.GetHashCode()\r\n\r\nMix the bits a bit more."},{"Id":"6856439056","Type":"PullRequestEvent","CreatedAt":"2017-11-15T03:50:28","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25061","RelatedDescription":"Merged pull request \"Add test for setting min worker threads in thread pool to 0\" (#25061) at dotnet/corefx","RelatedBody":"Related to https://github.com/dotnet/coreclr/issues/14239\r\nDepends on https://github.com/dotnet/coreclr/pull/14864"},{"Id":"6856437609","Type":"PullRequestEvent","CreatedAt":"2017-11-15T03:49:53","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25256","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-25915-01, preview1-25914-04, preview1-25914-05, respectively (master)\" (#25256) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6856655322","Type":"IssuesEvent","CreatedAt":"2017-11-15T05:25:02","Actor":"npolyak","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23176","RelatedDescription":"Opened issue \"replace/original feature\" (#23176) at dotnet/roslyn","RelatedBody":"What is happening with replace/original feature described in https://github.com/dotnet/roslyn/blob/master/docs/features/generators.md? It seems the keywords are still not part of the language."},{"Id":"6856645402","Type":"IssuesEvent","CreatedAt":"2017-11-15T05:20:56","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/16102","RelatedDescription":"Closed issue \"Rename should report a conflict when renaming Deconstruct\" (#16102) at dotnet/roslyn","RelatedBody":"**Version Used**: 2017 RC Refresh\r\n\r\n_pedantic_ :)\r\n\r\n```C#\r\nclass C {\r\n\tC() {\r\n\t\tvar (a, b) = new C();\r\n\t}\r\n\r\n\tpublic void Deconstruct(out int a, out int b) => a = b = 1;\r\n}\r\n```\r\n\r\nRenaming `Deconstruct` to anything else should report an unresolvable conflict on the deconstructing declaration.\r\n\r\nFor maximum awesomeness, it should resolve the conflict to\r\n```C#\r\nnew C().Deconstruct2(out int a, out int b);\r\n```"},{"Id":"6856566332","Type":"PullRequestEvent","CreatedAt":"2017-11-15T04:46:50","Actor":"khyperia","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23117","RelatedDescription":"Merged pull request \"Reduce the use of the preprocessor\" (#23117) at dotnet/roslyn","RelatedBody":"Prefer to use runtime checks instead. Only use a the preprocessor where an API actually matters at compile-time.\r\n\r\nRemaining preprocessor checks:\r\n\r\n* `DesktopAnalyzerAssemblyLoader`/`CoreClrAnalyzerAssemblyLoader`/`ShadowCopyAnalyzerAssemblyLoader`: preprocessor needed for badly-structured inherentence for `ShadowCopy`, and for the API `AssemblyLoadContext`.\r\n* `NamedPipeClientConnection.cs` `NamedPipeServerStream` constructor (the `WRITE_DAC` stuff)\r\n* `BuildServerConnection.cs` `CheckIdentityUnix` - private reflection not available on netstandard (for authentication of pipes). (However, it doesn't matter, since the only netstandard project here is clientside, not serverside)\r\n* `BuildServerConnection.cs` `GetPipeSecurity` - `PipeStream.GetAccessControl` not available on netstandard (preprocessor changes it to reflection).\r\n* Bunches of tests."},{"Id":"6856561269","Type":"IssuesEvent","CreatedAt":"2017-11-15T04:44:32","Actor":"khyperia","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21639","RelatedDescription":"Closed issue \"PathMap ignored when passed through MSBuild\" (#21639) at dotnet/roslyn","RelatedBody":"_From @cincuranet on August 21, 2017 14:45_\n\nI'm trying to use `PathMap` in MSBuild and I'm failing in passing it to `Csc`.\r\n\r\nI have a minimal `csproj`:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup> \r\n  <Target Name=\"Echo\" BeforeTargets=\"CoreCompile\" >\r\n    <Message Text=\"PathMap Value: $(PathMap)\" Importance=\"High\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nI'm calling it with `MSBuild \"/p:PathMap=C:\\Users\\Jiri\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp2\\ConsoleApp1=I:\\foobar\" /v:m`. Although the same `PathMap` works fine when I call `csc` directly manually, it doesn't seem to be passed from MSBuild.\r\n\r\nThe output I'm getting from MSBuild:\r\n```\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  PathMap Value: C:\\Users\\Jiri\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp2\\ConsoleApp1=I:\\foobar\r\n  ConsoleApp1 -> C:\\Users\\Jiri\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp2\\ConsoleApp1\\bin\\Debug\\netcoreapp2.0\r\n  \\ConsoleApp1.dll\r\n```\r\n\r\nWith `diag` verbosity I see `CSharpCoreTargetsPath = C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\bin\\Roslyn\\Microsoft.CSharp.Core.targets` being used and then `Target \"CoreCompile: (TargetId:64)\" in file \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\bin\\Roslyn\\Microsoft.CSharp.Core.targets\" from project \"C:\\Users\\Jiri\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp2\\ConsoleApp1\\ConsoleApp1.csproj\" (target \"Compile\" depends on it):`. This target file contains the `PathMap` for `Csc`, so it should be passed, I think.\r\n\r\nIs there something I'm missing?\n\n_Copied from original issue: Microsoft/msbuild#2457_"},{"Id":"6856560291","Type":"IssuesEvent","CreatedAt":"2017-11-15T04:44:03","Actor":"khyperia","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22815","RelatedDescription":"Closed issue \"PathMap incorrectly handles unix-style root path \" (#22815) at dotnet/roslyn","RelatedBody":"On Windows running this command:\r\n\r\n```\r\nD:\\temp>csc a.cs /debug:portable /pathmap:D:\\temp=/\r\n```\r\n\r\nproduces document name ```\\a.cs``` in the PDB while I expect it to be ```/a.cs```. \r\n\r\nThe problem is the combination of trimming separators here:\r\n\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis/CommandLine/CommonCommandLineParser.cs,209\r\n\r\nand then then not having the separator available in this check:\r\n\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis/FileSystem/PathUtilities.cs,643 \r\n\r\nAs a result we flip the separator from ```/``` to ```\\```. \r\n\r\n"},{"Id":"6856512159","Type":"PullRequestEvent","CreatedAt":"2017-11-15T04:21:53","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23139","RelatedDescription":"Merged pull request \"Add support for recursive patterns in `is`\" (#23139) at dotnet/roslyn","RelatedBody":"- Add support for recursive patterns in `is`.\r\n- Add the discard pattern `_`.\r\n- Add skeletal IOperation support.\r\n"},{"Id":"6856470266","Type":"IssuesEvent","CreatedAt":"2017-11-15T04:03:18","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23175","RelatedDescription":"Opened issue \"ExtractMethodCodeRefactoringProvider  encountered an error and has been disabled\" (#23175) at dotnet/roslyn","RelatedBody":"I’ve got this version of VS:\r\n \r\n![image](https://user-images.githubusercontent.com/12449387/32818109-2b83d76e-c976-11e7-87ec-a9f35f7364aa.png)\r\n\r\n I  tried to select this [section of code](https://devdiv.visualstudio.com/DevDiv/_git/PostBuildSteps?path=%2Fsrc%2FSubmitPullRequest%2FProgram.cs&version=GBdev%2Frickkr%2FaddJobUri&_a=contents&line=301&lineStyle=plain&lineEnd=352&lineStartColumn=1&lineEndColumn=18) to do an extract method and got this:\r\n  \r\n![image](https://user-images.githubusercontent.com/12449387/32818134-5dcbff62-c976-11e7-8d6e-e09904c80bb8.png)\r\n\r\n stack \r\nSystem.InvalidOperationException : Failed to compare two elements in the array. ---> System.InvalidOperationException : Shouldn't reach here\r\n   at Roslyn.Utilities.Contract.FailWithReturn[T](String message)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ParameterVariableSymbol.CompareTo(IMethodSymbol left,IMethodSymbol right)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ParameterVariableSymbol.CompareTo(ParameterVariableSymbol other)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ParameterVariableSymbol.CompareTo(VariableSymbol right)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.VariableSymbol.Compare(VariableSymbol left,VariableSymbol right,INamedTypeSymbol cancellationTokenType)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.VariableInfo.<>c__DisplayClass24_0.<SortVariables>b__0(VariableInfo v1,VariableInfo v2)\r\n   at System.Array.FunctorComparer`1.Compare(T x,T y)\r\n   at System.Collections.Generic.ArraySortHelper`1.SwapIfGreater(T[] keys,IComparer`1 comparer,Int32 a,Int32 b)\r\n   at System.Collections.Generic.ArraySortHelper`1.IntroSort(T[] keys,Int32 lo,Int32 hi,Int32 depthLimit,IComparer`1 comparer)\r\n   at System.Collections.Generic.ArraySortHelper`1.IntrospectiveSort(T[] keys,Int32 left,Int32 length,IComparer`1 comparer)\r\n   at System.Collections.Generic.ArraySortHelper`1.Sort(T[] keys,Int32 index,Int32 length,IComparer`1 comparer)\r\n   --- End of inner exception stack trace ---\r\n   at System.Collections.Generic.ArraySortHelper`1.Sort(T[] keys,Int32 index,Int32 length,IComparer`1 comparer)\r\n   at System.Array.Sort[T](T[] array,Int32 index,Int32 length,IComparer`1 comparer)\r\n   at System.Collections.Generic.List`1.Sort(Comparison`1 comparison)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.VariableInfo.SortVariables(Compilation compilation,List`1 list)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.GetMethodParameters(ICollection`1 variableInfo)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.GetSignatureInformation(DataFlowAnalysis dataFlowAnalysisData,IDictionary`2 variableInfoMap,Boolean isInExpressionOrHasReturnStatement)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.AnalyzeAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ExtractMethodAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.AbstractExtractMethodService`3.ExtractMethodAsync[TValidator,TExtractor,TResult](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.GetCodeActionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n \r\n"},{"Id":"6856432829","Type":"IssuesEvent","CreatedAt":"2017-11-15T03:47:54","Actor":"xiaolu6t","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23174","RelatedDescription":"Opened issue \"A Csharp Expression Bug In Task Function!\" (#23174) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual Studio 2017 \r\n**Steps to Reproduce**:\r\n1. \r\n I found i compile bug。\r\n This is my Code.\r\n```\r\n //sample1：\r\nstring json = Newtonsoft.Json.JsonConvert.SerializeObject(context.ViewBag,\r\n  new Newtonsoft.Json.Converters.JavaScriptDateTimeConverter());\r\nawait context.WriteAsync(json);\r\n                \r\n//sample2：\r\n//It will come out a Exception：\r\n//Can't Convert“System.Runtime.CompilerServices.TaskAwaiter” To\r\n//“System.Runtime.CompilerServices.INotifyCompletion”。\r\n\r\nawait context.WriteAsync(Newtonsoft.Json.JsonConvert.SerializeObject(context.ViewBag,\r\nnew Newtonsoft.Json.Converters.JavaScriptDateTimeConverter()));\r\n```\r\nPlease fill this bug.\r\nemail:\r\n348764327@qq.com\r\n"},{"Id":"6855965264","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:00:09","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23173","RelatedDescription":"Opened pull request \"Enable multicore JIT in the compilers\" (#23173) at dotnet/roslyn","RelatedBody":"Here is the output from my perf testing tool currently in review that\r\nshows a significant difference in csc.exe after the change:\r\n\r\n```\r\n// * Detailed results *\r\nPlaceholderBenchmarkRunner.PlaceholderMethod: Job-TGYVCW(Toolchain=Perf.ExternalProcessToolchain, LaunchCount=0, RunStrategy=Monitoring, TargetCount=25, WarmupCount=0) [Commit=HEAD^]\r\nRuntime = ; GC =\r\nMean = 4.8018 s, StdErr = 0.0215 s (0.45%); N = 25, StdDev = 0.1073 s\r\nMin = 4.6717 s, Q1 = 4.7297 s, Median = 4.7892 s, Q3 = 4.8438 s, Max = 5.1998 s\r\nIQR = 0.1141 s, LowerFence = 4.5585 s, UpperFence = 5.0149 s\r\nConfidenceInterval = [4.7214 s; 4.8822 s] (CI 99.9%), Margin = 0.0804 s (1.67% of Mean)\r\nSkewness = 1.87, Kurtosis = 7.98\r\n\r\nPlaceholderBenchmarkRunner.PlaceholderMethod: Job-TGYVCW(Toolchain=Perf.ExternalProcessToolchain, LaunchCount=0, RunStrategy=Monitoring, TargetCount=25, WarmupCount=0) [Commit=HEAD]\r\nRuntime = ; GC =\r\nMean = 3.6409 s, StdErr = 0.0650 s (1.78%); N = 25, StdDev = 0.3249 s\r\nMin = 3.4381 s, Q1 = 3.5510 s, Median = 3.5781 s, Q3 = 3.6189 s, Max = 5.1720 s\r\nIQR = 0.0679 s, LowerFence = 3.4491 s, UpperFence = 3.7209 s\r\nConfidenceInterval = [3.3975 s; 3.8842 s] (CI 99.9%), Margin = 0.2433 s (6.68% of Mean)\r\nSkewness = 4.16, Kurtosis = 19.76\r\n\r\nTotal time: 00:07:11 (431.13 sec)\r\n\r\n// * Summary *\r\n\r\nBenchmarkDotNet=v0.10.9, OS=Windows 10 Redstone 1 (10.0.14393)\r\nProcessor=Intel Xeon CPU E5645 2.40GHz, ProcessorCount=24\r\nFrequency=2337892 Hz, Resolution=427.7358 ns, Timer=TSC\r\n.NET Core SDK=2.1.1-preview-007094\r\n  [Host] : .NET Core 2.0.0 (Framework 4.6.00001.0), 64bit RyuJIT\r\n\r\nToolchain=Perf.ExternalProcessToolchain  LaunchCount=0  RunStrategy=Monitoring\r\nTargetCount=25  WarmupCount=0\r\n\r\n            Method | Commit |    Mean |    Error |   StdDev | Rank |\r\n------------------ |------- |--------:|---------:|---------:|-----:|\r\n PlaceholderMethod |   HEAD | 3.641 s | 0.2433 s | 0.3249 s |    1 |\r\n PlaceholderMethod |  HEAD^ | 4.802 s | 0.0804 s | 0.1073 s |    2 |\r\n\r\n// * Legends *\r\n  Commit : Value of the 'Commit' parameter\r\n  Mean   : Arithmetic mean of all measurements\r\n  Error  : Half of 99.9% confidence interval\r\n  StdDev : Standard deviation of all measurements\r\n  Rank   : Relative position of current benchmark mean among all benchmarks (Arabic style)\r\n  1 s    : 1 Second (1 sec)\r\n\r\n```"},{"Id":"6855891007","Type":"PullRequestEvent","CreatedAt":"2017-11-15T00:35:34","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23172","RelatedDescription":"Opened pull request \"Fixes an issue with flow analysis where branches within `try` could be considered as going through `finally`\" (#23172) at dotnet/roslyn","RelatedBody":"Fixes an issue with flow analysis where branches within `try` could be considered as going through `finally`\r\n\r\nWe could incorrectly assume that variable is assigned (or unassigned in async capture tracking case).\r\n\r\nAs a resutl we could\r\n- allow use of unassigned locals (undefined behavior)\r\n- not capture a local whose value survives `await` (NRE crash)\r\n\r\nAlso added a regression test for VB, which does not seem affected.\r\n\r\nFixes:#19831\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6856293989","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:55:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4932","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#4932) at dotnet/corert","RelatedBody":""},{"Id":"6856293603","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:55:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4932","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#4932) at dotnet/corert","RelatedBody":""},{"Id":"6855692098","Type":"PullRequestEvent","CreatedAt":"2017-11-14T23:32:46","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4931","RelatedDescription":"Opened pull request \"Added support for calling methods via virtual slots\" (#4931) at dotnet/corert","RelatedBody":"This fills out more of the implementation for #4515. In order to finish we still need to check for null *this* pointer and implement interface dispatch, which requires runtime support."},{"Id":"6853362592","Type":"PullRequestEvent","CreatedAt":"2017-11-14T15:36:23","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4930","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#4930) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6856451803","Type":"PullRequestEvent","CreatedAt":"2017-11-15T03:55:47","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1736","RelatedDescription":null,"RelatedBody":"\"TargetFramework\" is not needed; moreover it changes the property: \"OutputPath\" [see: PushToBlobFeed.targets]"},{"Id":"6856307122","Type":"PullRequestEvent","CreatedAt":"2017-11-15T03:00:13","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1736","RelatedDescription":"Closed pull request \"\"TargetFramework\" is not needed: BuildTools.csproj \" (#1736) at dotnet/sdk","RelatedBody":"\"TargetFramework\" is not needed; moreover it changes the property: \"OutputPath\" [see: PushToBlobFeed.targets]"},{"Id":"6856225394","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:30:38","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1736","RelatedDescription":"Opened pull request \"\"TargetFramework\" is not needed: BuildTools.csproj \" (#1736) at dotnet/sdk","RelatedBody":"\"TargetFramework\" is not needed; moreover it changes the property: \"OutputPath\" [see: PushToBlobFeed.targets]"},{"Id":"6855909373","Type":"IssuesEvent","CreatedAt":"2017-11-15T00:41:56","Actor":"michaelcfanning","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1735","RelatedDescription":"Opened issue \"HighEntropyVA not set by default for 64-bit .net core apps\" (#1735) at dotnet/sdk","RelatedBody":"1. Create default .net core console app\r\n2. Set configuration to x64, compile\r\n\r\nresult: high entropy va bit not set in PE.\r\n\r\nAdding relevant MSBUILD property with correct value to the project resolves the issue. So the problem appears to be that our default property settings need to be corrected.\r\n\r\n    <HighEntropyVA>true</HighEntropyVA>"},{"Id":"6855864651","Type":"PullRequestEvent","CreatedAt":"2017-11-15T00:26:37","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1734","RelatedDescription":"Merged pull request \"Fixing the 'PushToBlobFeed' target\" (#1734) at dotnet/sdk","RelatedBody":"1. Fixing the 'PushToBlobFeed' target. \r\n2. BuildTools 'props' and 'targets' should be imported automatically."},{"Id":"6855564528","Type":"PullRequestEvent","CreatedAt":"2017-11-14T22:57:38","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1702","RelatedDescription":"Merged pull request \"Moving to the repo toolset.\" (#1702) at dotnet/sdk","RelatedBody":"Still doing some final validation (cross-plat test still needs a fix or two), but this should be otherwise \"complete\"."},{"Id":"6855170729","Type":"PullRequestEvent","CreatedAt":"2017-11-14T21:28:45","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1733","RelatedDescription":"Closed pull request \"Fixing the 'PushToBlobFeed' target: SDK\" (#1733) at dotnet/sdk","RelatedBody":"1. Fixing the 'PushToBlobFeed' target. \r\n2. BuildTools 'props' and 'targets' should be imported automatically."},{"Id":"6854512291","Type":"PullRequestEvent","CreatedAt":"2017-11-14T19:10:34","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1733","RelatedDescription":"Opened pull request \"Removing BuildTools 'props' and 'targets' importations: SDK\" (#1733) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"930645655290122240","CreatedAt":"2017-11-15T03:56:29+00:00","UserScreenname":"dotnet","Text":".NET Framework November 2017 Security and Quality Rollup https://t.co/lwHXxu2AvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":13,"RawContent":null},{"Id":"927634989499301888","CreatedAt":"2017-11-06T20:33:10+00:00","UserScreenname":"dotnet","Text":"Windows Docker Tag Scheme Changed https://t.co/ULufUyjXq6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":35,"RawContent":null},{"Id":"926165116084658176","CreatedAt":"2017-11-02T19:12:25+00:00","UserScreenname":"dotnet","Text":"Great post and resources by @cesardelatorre: Modernize existing .NET apps with Windows Containers and #Azure https://t.co/c8HL8dfH4d #dotnet","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":46,"RawContent":null}]}},"RunOn":"2017-11-15T05:30:21.6749477Z","RunDurationInMilliseconds":8127}