{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11408867722","Type":"PullRequestEvent","CreatedAt":"2020-01-31T19:17:54","Actor":"pakrym","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7831","RelatedDescription":"Opened pull request \"Format package URLs in descriptions\" (#7831) at NuGet/NuGetGallery","RelatedBody":"Just a suggestion. \r\n\r\nCurrently package links in descriptions look like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1697911/73567108-83d78700-441a-11ea-988a-ad0a8161e951.png)\r\n\r\nWhat if we did something similar to what github does with issue links and formatted them with a shorter text:\r\n\r\n![image](https://user-images.githubusercontent.com/1697911/73567252-d87b0200-441a-11ea-9959-f01f7fa09db3.png)\r\n"},{"Id":"11399878816","Type":"IssuesEvent","CreatedAt":"2020-01-30T19:53:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7830","RelatedDescription":"Opened issue \"[C2R] Switch over to registration5\" (#7830) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11410277980","Type":"IssuesEvent","CreatedAt":"2020-01-31T22:53:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9128","RelatedDescription":"Opened issue \"RestoreNetCore_MultipleProjects_SameTool_DifferentVersionRanges_DoesNotNoOpAsync is flaky\" (#9128) at NuGet/Home","RelatedBody":"A few failures in the last week \r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3433306&view=ms.vss-test-web.test-result-details\r\n\r\n//cc @zivkan "},{"Id":"11410153827","Type":"IssuesEvent","CreatedAt":"2020-01-31T22:30:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9121","RelatedDescription":"Closed issue \"RestoreSources together with SDK dependencies seems not to work\" (#9121) at NuGet/Home","RelatedBody":"I tried to move away from the NuGet.Config to a pure MSBuild based restore logic. When I try to set the RestoreSources in the Directory.Build.props and reference an SDK I get build errors:\r\n\r\n```xml\r\n   <RestoreSources>\r\n      $(LocalSource);\r\n      $(NugetSource);\r\n      $(PrivateRemoteSource);\r\n    </RestoreSources>\r\n  </PropertyGroup>\r\n\r\n  <Import Sdk=\"My.Sdk\" Version=\"1.0.0\" Project=\"Sdk.props\"/>\r\n\r\n```\r\n\r\nThe error messages are : \r\n\r\n> Unable to resolve My.Sdk for NetStandard, Version=0.0.\r\n> C:\\Program Files\\.....\\Sdk not found. Check that recent enough .NET Core SDK is installed. \r\n\r\nActually I expect that sdk to be restored from the PrivateRemoteSource. It works, when I use a NuGet.Config instead.\r\n\r\n"},{"Id":"11409876265","Type":"IssuesEvent","CreatedAt":"2020-01-31T21:45:27","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9127","RelatedDescription":"Opened issue \"Set NuGet 5.5 to RTM branding in preparation for GA release\" (#9127) at NuGet/Home","RelatedBody":""},{"Id":"11409874387","Type":"IssuesEvent","CreatedAt":"2020-01-31T21:45:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9112","RelatedDescription":"Closed issue \"FireAndForget PM UI startup\" (#9112) at NuGet/Home","RelatedBody":"The menu command builds the PM UI by calling JTF.Run blocking the UI thread. \r\n\r\nThis is unnecessary. \r\nThat can be made async. While that won't fix all issues with the PM UI startup performance, it will make it a bit better simply because now the UI thread is an async flow.\r\n\r\nRelated to [438211](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/438211/)"},{"Id":"11409747798","Type":"IssuesEvent","CreatedAt":"2020-01-31T21:25:34","Actor":"archfz","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9126","RelatedDescription":"Opened issue \"Docker dotnet restore file already exists\" (#9126) at NuGet/Home","RelatedBody":"## Details about Problem\r\n/usr/share/dotnet/sdk/2.2.207/NuGet.targets(119,5): error : The file '/app/.nupkg/system.numerics.vectors/4.4.0/system.numerics.vectors.nuspec' already exists.\r\n\r\nNuGet product used: dotnet restore\r\nNuGet version (x.x.x.xxx): not sure how to check nuget version\r\ndotnet.exe --version: 2.2.207\r\nOS version (i.e. win10 v1607 (14393.321)): win10 19551 pro\r\nSDK Docker image: mcr.microsoft.com/dotnet/core/sdk:2.2-alpine\r\nDocker version: 2.2.0.0 (42247)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nMount app in docker image mcr.microsoft.com/dotnet/core/sdk:2.2-alpine and run restore\r\n```bash\r\ndotnet restore ./MyApp --packages .nupkg --runtime linux-musl-x64\r\n```\r\n\r\nRunning the dotnet from windows directly does not cause issues.\r\nTested with dotnet sdk image 3.1 as well, same results.\r\n\r\n### Verbose Logs\r\nhttps://filebin.net/p2csdej08vp8ln1b/logs.txt?t=suthfyn8\r\n"},{"Id":"11409394499","Type":"IssuesEvent","CreatedAt":"2020-01-31T20:32:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9122","RelatedDescription":"Closed issue \"Doc: \"nuget config /?\" has typo in config get exapmle\" (#9122) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0.6315\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Run `nuget config /?`:\r\n\r\n  ```\r\n  usage: NuGet config <-Set name=value | name>\r\n\r\n  Gets or sets NuGet config values.\r\n\r\n  options:\r\n\r\n   -Set +                        One on more key-value pairs to be set in config.\r\n   -AsPath                       Returns the config value as a path. This option is ignored when -Set is specified.\r\n   -Help                    (?)  help\r\n   -Verbosity                    Display this amount of details in the output: normal, quiet, detailed.\r\n   -NonInteractive               Do not prompt for user input or confirmations.\r\n   -ConfigFile                   The NuGet configuration file. If specified, only the settings from this file will be used. If not specified, the hierarchy of configuration files from the current directory will be used. To learn more abou\r\n                                 t NuGet configuration go to https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior.\r\n   -ForceEnglishOutput           Forces the application to run using an invariant, English-based culture.\r\n\r\n  examples:\r\n\r\n  nuget config -Set HTTP_PROXY=http://127.0.0.1 -Set HTTP_PROXY.USER=domain\\user\r\n  nuget.config HTTP_PROXY\r\n\r\n  For more information, visit https://docs.nuget.org/docs/reference/command-line-reference\r\n  ```\r\n\r\n2. See that the `nuget config HTTP_PROXY` command has an extra dot.\r\n"},{"Id":"11408032555","Type":"IssuesEvent","CreatedAt":"2020-01-31T17:23:43","Actor":"thomaslevesque","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9125","RelatedDescription":"Opened issue \"Add a TypeConverter for the SemanticVersion class\" (#9125) at NuGet/Home","RelatedBody":"The `SemanticVersion` class lacks a `TypeConverter`. Although it's easy to manually use `Parse` and `ToString()`, it's not always convenient. If, for instance, I want to use `SemanticVersion` in my model, I need to create a converter myself to support JSON serialization. Same if I want to accept a `SemanticVersion` as an parameter to an API endpoint.\r\n\r\nIf `SemanticVersion` had a `TypeConverter`, it would be automatically picked up by JSON.NET and `SimpleTypeModelBinder`.\r\n\r\nIn the meantime, a workaround is to implement that converter manually and add it dynamically using `TypeDescriptor.AddAttributes`:\r\n\r\n```csharp\r\n    class SemanticVersionConverter : TypeConverter\r\n    {\r\n        public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)\r\n        {\r\n            return sourceType == typeof(string);\r\n        }\r\n    \r\n        public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)\r\n        {\r\n            if (value is null)\r\n                return null;\r\n            if (value is string versionString)\r\n                return SemanticVersion.Parse(versionString);\r\n\r\n            throw new ArgumentException($\"Cannot convert '{value.GetType()}' to '{typeof(SemanticVersion)}'\");\r\n        }\r\n\r\n        public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)\r\n        {\r\n            return destinationType == typeof(string);\r\n        }\r\n\r\n        public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)\r\n        {\r\n            if (value is null)\r\n                return null;\r\n\r\n            if (destinationType != typeof(string))\r\n                throw new ArgumentException($\"Cannot convert '{value.GetType()}' to '{typeof(string)}'\");\r\n\r\n            if (value is SemanticVersion version)\r\n            {\r\n                return version.ToString();\r\n            }\r\n            \r\n            throw new ArgumentException($\"Cannot convert '{value.GetType()}' to '{typeof(string)}'\");\r\n        }\r\n    }\r\n\r\n    ...\r\n\r\n    TypeDescriptor.AddAttributes(\r\n        typeof(SemanticVersion),\r\n        new TypeConverterAttribute(typeof(SemanticVersionConverter)));\r\n\r\n```"},{"Id":"11407662224","Type":"IssuesEvent","CreatedAt":"2020-01-31T16:37:39","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9124","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Error on downgrade version due to transitive central dependency. \" (#9124) at NuGet/Home","RelatedBody":"When a transitive dependency cause a version downgrade an error needs to happen. This item tracks the work needed to find a solution for this problem. \r\nLinked with [[Centrally managing NuGet packages and versions] Implement the restore graph changes](https://github.com/NuGet/Home/issues/8910)\r\n\r\n"},{"Id":"11407559434","Type":"IssuesEvent","CreatedAt":"2020-01-31T16:25:59","Actor":"althurman","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9123","RelatedDescription":"Opened issue \"Contentfile in nuget gets compiled causing build errors\" (#9123) at NuGet/Home","RelatedBody":"I have a nuget that has a contentfile in it. ContentFile is a json file and denoted as such in the nuspec file when the nuget is packed.\r\n\r\nWhen installing the nuget in a regular wpf app, I get a couple build errors. It appears that Visual Studio is trying to compile the .json file. Wondering if anyone knows what may cause this. As you'll see in the nuspec snippet I have BuildAction=None in the nuspec\r\n\r\nContentFile.json(1,1,1,2): error CS1022: Type or namespace definition, or end-of-file expected\r\nContentFile.json(4,16,4,26): error CS1001: Identifier expected\r\nContentFile.json(4,37,4,45): error CS1001: Identifier expected\r\n\r\n![image](https://user-images.githubusercontent.com/19433674/73555610-f1d07e00-441b-11ea-81be-05b14b2ab0f2.png)\r\n\r\n\r\nNote: Visual Studio 19. The nuget was packed from command line using nuget.exe in a batch script. The batch script runs \"nuget.exe update --self\" before packing the nuget\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-01T05:30:41.9933107Z","RunDurationInMilliseconds":1991}