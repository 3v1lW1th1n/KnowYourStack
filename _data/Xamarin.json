{"Data":{"Blog":{"FeedItems":[{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 previews are now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null},{"Title":"Find Local Xamarin and .NET Developer Events This April","PublishedOn":"2018-04-02T18:42:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Spring into action this April by finding a Xamarin or .NET user group hosting Xamarin (and related technology) events near you! Get the latest news on exciting releases, tooling, and updates all month...","Href":"https://blog.xamarin.com/xamarin-developer-community-events-april/","RawContent":null},{"Title":"Update to Xamarin.Forms 3.0 Pre-Release Available Today!","PublishedOn":"2018-03-30T19:02:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that the latest update to the Xamarin.Forms 3.0 Pre-release is now available! Help us make this our best Xamarin.Forms release ever by updating today and giving it a...","Href":"https://blog.xamarin.com/update-to-xamarin-forms-3-0-pre-release-available-today/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 2 – Xamarin.iOS","PublishedOn":"2018-03-28T19:17:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the second part in a four-part series. In the first post, we covered building Xamarin.Forms from the source and then stepping into and debugging that code. In this post, we&#8217;ll explore...","Href":"https://blog.xamarin.com/debugging-xamarin-ios/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7551305819","Type":"PullRequestEvent","CreatedAt":"2018-04-18T19:41:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1570","RelatedDescription":"Merged pull request \"[android-toolchain] support Windows again\" (#1570) at xamarin/xamarin-android","RelatedBody":"Context fef4541\r\n\r\nSince the `mono-sdks` took over the installation of `android-toolchain`,\r\nthese dependencies are now installed by `make` scripts. This\r\nunfortunately, will not work on Windows since we allow builds with\r\na vanilla install of Visual Studio 2017 and a simple:\r\n`msbuild Xamarin.Android.sln /t:Prepare` then `/t:Build`.\r\n\r\nTo fix this, I brought back the old MSBuild code in a\r\n`android-toolchain-windows.targets` file to be used only on Windows. I\r\nhad to rearrange how things are imported a bit to get this to work\r\nproperly.\r\n\r\nThis should give us what we want:\r\n- The `mono-sdks` install the Android toolchain on macOS/linux\r\n- Windows still functions as it did before"},{"Id":"7551148760","Type":"PullRequestEvent","CreatedAt":"2018-04-18T19:10:03","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1567","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Deploying to Android fails with zipalign error\" (#1567) at xamarin/xamarin-android","RelatedBody":"Fixes #1519\r\n\r\nThe change to introduce `apksigner` had a slight flaw in its\r\nsigning logic. It only ever deleted `$(ApkFileSigned)` when\r\nrebuilding the apk. So in the case where we are splitting the\r\napk by abi.. we didn't delete the other abi specific apks..\r\n\r\nThis commit fixes up the targets so that we correctly remove\r\nthe abi specific apks if they are being used when `$(AndroidUseApkSigner)`\r\nis `true`."},{"Id":"7551148744","Type":"IssuesEvent","CreatedAt":"2018-04-18T19:10:03","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1519","RelatedDescription":"Closed issue \"Deploying to Android fails with zipalign error\" (#1519) at xamarin/xamarin-android","RelatedBody":"_From @johnshardman on April 4, 2018 10:25_\n\nBug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nAfter upgrading Visual Studio to 15.6, deployment of app to Android (physical devices and emulators) failed with a zipalign error.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Check the \"Generate one package (.apk) per selected ABI\" option in the Android project properties.\r\n2. Hit F5\r\n\r\n### Expected Behavior\r\n\r\nApp should build, deploy and run in debug mode.\r\n\r\n### Actual Behavior\r\n\r\nDeployment error reported:\r\n\r\nAndroidZipAlign Task\r\nAlignment: 4\r\nSource: G:\\tfs\\MyApp\\Top\\MyApp.Android\\obj\\Debug\\android\\bin\\com.MyApp.MyApp-arm64-v8a.apk\r\nDestinationDirectory: bin\\Debug\\\r\nC:\\ProgramFiles\\Android\\AndroidSDK\\build-tools\\25.0.2\\zipalign.exe 4 \"G:\\tfs\\MyApp\\Top\\MyApp.Android\\obj\\Debug\\android\\bin\\com.MyApp.MyApp-arm64-v8a.apk\" \"bin\\Debug\\com.MyApp.MyApp-arm64-v8a-Signed.apk\" \r\nOutput file 'bin\\Debug\\com.MyApp.MyApp-arm64-v8a-Signed.apk' exists\r\n\"zipalign.exe\" exited with code 1.\r\nDone executing task \"AndroidZipAlign\" -- FAILED\r\n\r\n### Basic Information\r\n\r\nVS 15.6\r\nXF 2.4.0.38779\r\n\r\nI'm not the only one seeing this. @batmaci has also reported it at https://forums.xamarin.com/discussion/comment/325764\r\n\n\n_Copied from original issue: xamarin/Xamarin.Forms#2243_"},{"Id":"7550458496","Type":"IssuesEvent","CreatedAt":"2018-04-18T16:58:26","Actor":"koz01","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1578","RelatedDescription":"Opened issue \"How to reduce and clean memory usage in android programmatically?\" (#1578) at xamarin/xamarin-android","RelatedBody":"How to reduce and clean memory usage in android programmatically?"},{"Id":"7550192706","Type":"IssuesEvent","CreatedAt":"2018-04-18T16:09:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1576","RelatedDescription":"Opened issue \"IncrementalClean deletes pdb/mdb files on Mac\" (#1576) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build a project (command line)\r\n2. Build the project again with no changes\r\n3. The `IncrementalClean` target will delete all pdb/mdb files in the intermediate output\r\n\r\nI discovered this with my test project here: https://github.com/jonathanpeppers/XamarinAndroidBuildTimes#xamarinandroid\r\n\r\nThis issue doesn't occur on Windows due to this additional [Xamarin.Android.Windows.targets](https://github.com/xamarin/xamarin-android/blob/24cbb188f1da79b13e75648d7956dca4a69f2f15/src/Xamarin.Android.Build.Tasks/MSBuild/Xamarin/Android/Xamarin.Android.Common/ImportAfter/Xamarin.Android.Windows.targets) file being imported.\r\n\r\n### Expected Behavior\r\n\r\n`IncrementalClean` shouldn't delete pdb or mdb files.\r\n\r\n### Actual Behavior\r\n\r\n`IncrementalClean` _can_ delete pdb or mdb files on subsequent builds.\r\n\r\n### Version Information\r\n\r\nI originally tested this with VS 2017 15.6.4, but it also occurs on current master.\r\n\r\n### Log File\r\n\r\nBinary logs from my test repo can be found [here](https://github.com/jonathanpeppers/XamarinAndroidBuildTimes/releases)."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7552196151","Type":"PullRequestEvent","CreatedAt":"2018-04-18T22:59:35","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2501","RelatedDescription":"Opened pull request \"Fixing Issue2266 to comform to new test structure and automating test\" (#2501) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis test was based on the older UI Test structure and was crashing when anyone tried to run it. This PR updates it to the newer testing structure, adds preserve attributes for android, and includes a UI Test for automation\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7551898636","Type":"PullRequestEvent","CreatedAt":"2018-04-18T21:42:11","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2500","RelatedDescription":"Opened pull request \"[UITests] Fix failing tests\" (#2500) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTry fix test that are failing on master \r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7551611113","Type":"IssuesEvent","CreatedAt":"2018-04-18T20:42:19","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2489","RelatedDescription":"Reopened issue \"[Android] Using a page renderer on Android completely breaks the UI\" (#2489) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhile creating a sample for a different bug, I came across a very odd issue.\r\n\r\nThe sample app is just a content page in a navigation page with a button to go to a tabbed page with two tabs. \r\n\r\nIf you have the page renderer enabled (the renderer just has a WriteLine), when you press the button to go to the tabbed page, the tabbed page comes up all messed up (see screen shots). If you remove the renderer, it works fine. No issues on iOS.\r\n\r\n### Steps to Reproduce\r\n\r\nLoad app.\r\nPress the \"press me\" button\r\nNote that the button is still on the page and text is displayed on top of it\r\nGo the the android APageRenderer class and remove the ExportRenderer\r\nLoad app and press the button again\r\nNote that the tabbed page looks fine \r\n\r\n### Expected Behavior\r\nApp loads the tabbed page without issue\r\n\r\n### Actual Behavior\r\nUI is messed up \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: N/A\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  no\r\n  - Android: yes\r\n  - UWP:  not tested\r\n- Android Support Library Version: 26\r\n- Nuget Packages: just forms\r\n- Affected Devices: Tested on Nexus 5x on Android 8 and iPhone 6 running iOS 9.3\r\n\r\n### Screenshots\r\nhttps://imgur.com/a/7fIAu\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/b0l0vojl273ffrj/tabpagesamplebug.zip?dl=0  \r\n"},{"Id":"7551608308","Type":"IssuesEvent","CreatedAt":"2018-04-18T20:41:46","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2490","RelatedDescription":"Closed issue \"[iOS] PageRenderer is not called on TabbedPage and NavigationPage\" (#2490) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nA PageRenderer with the ExportRenderer set to be called on a Xamarin.Forms.Page is not called for TabbedPages and NavigationPages on iOS. On Android it does get called.\r\n\r\n### Steps to Reproduce\r\n\r\nRun app in debug mode on iOS\r\nThere is a WriteLine call in the PageRenderer. Note that on iOS it outputs:\r\nMain - the first page\r\nPress the \"press me\" button. It loads the tabbed page with 2 tabs\r\nNote it outputs:\r\nOne - that's the first tab\r\nTwo- that's the second tab\r\n\r\nRepeat on Android (see note)\r\nNote it outputs:\r\nnav - that's the navigation page the main page is wrapped in\r\nmain - the first page\r\ntab - that's the tabbed page\r\ntabone - that's the navigation page that the first tab is wrapped in\r\none - the first tab\r\ntabtwo - that's the navigation page that the second tab is wrapped in\r\ntwo - the second tab\r\n\r\n### Expected Behavior\r\nThe PageRenderer gets hit for everything that inherits from Xamarin.Forms.Page\r\n\r\n### Actual Behavior\r\nIt only seems to get hit for ContentPages\r\n\r\nNote: Ignore the broken UI on Android, that's from bug #2489. This is an extremely frustrating bug because as a workaround I need to duplicate a lot of code in my renderers, can we please get a hotfix for this?\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: N/A\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  yes\r\n  - Android: no\r\n  - UWP:  not tested\r\n- Android Support Library Version: 26\r\n- Nuget Packages: just forms\r\n- Affected Devices: Tested on Nexus 5x on Android 8 and iPhone 6 running iOS 9.3\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/b0l0vojl273ffrj/tabpagesamplebug.zip?dl=0\r\n"},{"Id":"7551598243","Type":"IssuesEvent","CreatedAt":"2018-04-18T20:39:46","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2490","RelatedDescription":"Reopened issue \"[iOS] PageRenderer is not called on TabbedPage and NavigationPage\" (#2490) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nA PageRenderer with the ExportRenderer set to be called on a Xamarin.Forms.Page is not called for TabbedPages and NavigationPages on iOS. On Android it does get called.\r\n\r\n### Steps to Reproduce\r\n\r\nRun app in debug mode on iOS\r\nThere is a WriteLine call in the PageRenderer. Note that on iOS it outputs:\r\nMain - the first page\r\nPress the \"press me\" button. It loads the tabbed page with 2 tabs\r\nNote it outputs:\r\nOne - that's the first tab\r\nTwo- that's the second tab\r\n\r\nRepeat on Android (see note)\r\nNote it outputs:\r\nnav - that's the navigation page the main page is wrapped in\r\nmain - the first page\r\ntab - that's the tabbed page\r\ntabone - that's the navigation page that the first tab is wrapped in\r\none - the first tab\r\ntabtwo - that's the navigation page that the second tab is wrapped in\r\ntwo - the second tab\r\n\r\n### Expected Behavior\r\nThe PageRenderer gets hit for everything that inherits from Xamarin.Forms.Page\r\n\r\n### Actual Behavior\r\nIt only seems to get hit for ContentPages\r\n\r\nNote: Ignore the broken UI on Android, that's from bug #2489. This is an extremely frustrating bug because as a workaround I need to duplicate a lot of code in my renderers, can we please get a hotfix for this?\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: N/A\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  yes\r\n  - Android: no\r\n  - UWP:  not tested\r\n- Android Support Library Version: 26\r\n- Nuget Packages: just forms\r\n- Affected Devices: Tested on Nexus 5x on Android 8 and iPhone 6 running iOS 9.3\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/b0l0vojl273ffrj/tabpagesamplebug.zip?dl=0\r\n"},{"Id":"7551285822","Type":"IssuesEvent","CreatedAt":"2018-04-18T19:37:44","Actor":"Yelnik","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2481","RelatedDescription":"Reopened issue \"[iOS] Removing item from ObservableCollection causes app closure\" (#2481) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAttempting to remove an item from an ObservableCollection list causes an un-catchable exception that closes the application. Note, this issue existed in a previous combination of iOS SDK and Xamarin.Forms package but was fixed.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create an ObservableCollection list of a simple class (i.e. class MyClass { string _name; int _id; } - Something like this\r\n2.  Add 1 item to the list\r\n3.  Obtain a reference to this item in any way: (ex: var itemRef = _deviceList.First(x => x._name == ConnectedDevice.Name);     OR obtain the index of the item with `IndexOf`\r\n4. Attempt to remove the item with `.Remove` or `.RemoveAt`\r\n\r\n\r\n### Expected Behavior\r\nI expect the item to be removed and the application to continue\r\n### Actual Behavior\r\nThe application fails fatally with the following messages in the Debug window:\r\n\r\n2018-04-16 15:50:57.099 TSApp.iOS[1844:127772] *** Assertion failure in -[UITableView _endCellAnimationsWithContext:], /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3698.52.10/UITableView.m:1685\r\n[0:] Objective-C exception thrown.  Name: NSInternalInconsistencyException Reason: attempt to delete row 0 from section 0 which only contains 0 rows before the update\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x0000000183ebada4 <redacted> + 252\r\n\t1   libobjc.A.dylib                     0x00000001830745ec objc_exception_throw + 56\r\n\t2   CoreFoundation                      0x0000000183ebabf8 <redacted> + 0\r\n\t3   Foundation                          0x00000001848aafa0 <redacted> + 112\r\n\t4   UIKit                               0x000000018dbb1200 <redacted> + 4608\r\n\t5   UIKit                               0x000000018dbaff10 <redacted> + 92\r\n\t6   TSApp.iOS                      0x0000000104dd7738 wrapper_managed_to_native_ObjCRuntime_Messaging_void_objc_msgSend_intptr_intptr + 104\r\n\t7   TSApp.iOS                      0x0000000104d72448 UIKit_UITableView_EndUpdates + 40\r\n\t8   TSApp.iOS                      0x00000001052c3050 Xamarin_Forms_Platform_iOS_ListViewRenderer_UpdateItems_System_Collections_Specialized_NotifyCollectionChangedEventArgs_int_bool + 2448\r\n\t9   TSApp.iOS                      0x00000001052bf738 Xamarin_Forms_Platform_iOS_ListViewRenderer_OnCollectionChanged_object_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 120\r\n\t10  TSApp.iOS                      0x000000010555683c Xamarin_Forms_Internals_TemplatedItemsList_2_TView_REF_TItem_REF_OnCollectionChanged_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 172\r\n\t11  TSApp.iOS                      0x000000010555b7d8 Xamarin_Forms_Internals_TemplatedItemsList_2_TView_REF_TItem_REF_OnProxyCollectionChanged_object_System_Collections_Specialized_NotifyCollectionChangedEventArgs_bool + 8456\r\n\t12  TSApp.iOS                      0x00000001055596a4 Xamarin_Forms_Internals_TemplatedItemsList_2_TView_REF_TItem_REF_OnProxyCollectionChanged_object_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 116\r\n\t13  TSApp.iOS                      0x00000001054712e0 Xamarin_Forms_ListProxy_OnCollectionChanged_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 176\r\n\t14  TSApp.iOS                      0x0000000105473758 Xamarin_Forms_ListProxy__c__DisplayClass33_0__OnCollectionChangedb__0 + 152\r\n\t15  TSApp.iOS                      0x0000000104d425d4 Foundation_NSAsyncActionDispatcher_Apply + 36\r\n\t16  TSApp.iOS                      0x0000000104c98368 wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 248\r\n\t17  TSApp.iOS                      0x00000001069c498c mono_jit_runtime_invoke + 796\r\n\t18  TSApp.iOS                      0x0000000106a40bb8 mono_runtime_invoke_checked + 148\r\n\t19  TSApp.iOS                      0x0000000106a4427c mono_runtime_invoke + 80\r\n\t20  TSApp.iOS                      0x00000001049cca08 _ZL30native_to_managed_trampoline_1P11objc_objectP13objc_selectorPP11_MonoMethodj + 232\r\n\t21  TSApp.iOS                      0x00000001049cd0ec -[__MonoMac_NSAsyncActionDispatcher xamarinApplySelector] + 52\r\n\t22  Foundation                          0x00000001849060ec <redacted> + 340\r\n\t23  CoreFoundation                      0x0000000183e63404 <redacted> + 24\r\n\t24  CoreFoundation                      0x0000000183e62c2c <redacted> + 276\r\n\t25  CoreFoundation                      0x0000000183e6079c <redacted> + 1204\r\n\t26  CoreFoundation                      0x0000000183d80da8 CFRunLoopRunSpecific + 552\r\n\t27  GraphicsServices                    0x0000000185d63020 GSEventRunModal + 100\r\n\t28  UIKit                               0x000000018dd6178c UIApplicationMain + 236\r\n\t29  TSApp.iOS                      0x0000000104de1f80 wrapper_managed_to_native_UIKit_UIApplication_UIApplicationMain_int_string___intptr_intptr + 368\r\n\t30  TSApp.iOS                      0x0000000104d6a93c UIKit_UIApplication_Main_string___intptr_intptr + 44\r\n\t31  TSApp.iOS                      0x0000000104d6a8fc UIKit_UIApplication_Main_string___string_string + 172\r\n\t32  TSApp.iOS                      0x0000000104a01484 TSApp_iOS_Application_Main_string__ + 164\r\n\t33  TSApp.iOS                      0x0000000104c98368 wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 248\r\n\t34  TSApp.iOS                      0x00000001069c498c mono_jit_runtime_invoke + 796\r\n\t35  TSApp.iOS                      0x0000000106a40bb8 mono_runtime_invoke_checked + 148\r\n\t36  TSApp.iOS                      0x0000000106a468f8 mono_runtime_exec_main_checked + 120\r\n\t37  TSApp.iOS                      0x00000001069a79a4 mono_jit_exec + 268\r\n\t38  TSApp.iOS                      0x0000000106b2f088 xamarin_main + 2220\r\n\t39  TSApp.iOS                      0x0000000104a01364 main + 96\r\n\t40  libdyld.dylib                       0x0000000183811fc0 <redacted> + 4\r\nThe app has been terminated.\r\nFailed to Stop app:  An error occured on client IDB490753 while executing a reply for topic xvs/idb/4.9.0.753/stop-app\r\nThe app has been terminated.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Version of what?\r\n- Last known good version:\r\n- IDE: Visual Studio 2017 Professional\r\n- Platform Target Frameworks: iOS targets 11.3\r\n  - iOS:  11.9.1.24\r\n  - Android: Does not affect Android\r\n  - UWP:  N/A\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: Xamarin.Forms 2.5.1.444934\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7551280604","Type":"IssuesEvent","CreatedAt":"2018-04-18T19:36:41","Actor":"Yelnik","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2481","RelatedDescription":"Closed issue \"[iOS] Removing item from ObservableCollection causes app closure\" (#2481) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAttempting to remove an item from an ObservableCollection list causes an un-catchable exception that closes the application. Note, this issue existed in a previous combination of iOS SDK and Xamarin.Forms package but was fixed.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create an ObservableCollection list of a simple class (i.e. class MyClass { string _name; int _id; } - Something like this\r\n2.  Add 1 item to the list\r\n3.  Obtain a reference to this item in any way: (ex: var itemRef = _deviceList.First(x => x._name == ConnectedDevice.Name);     OR obtain the index of the item with `IndexOf`\r\n4. Attempt to remove the item with `.Remove` or `.RemoveAt`\r\n\r\n\r\n### Expected Behavior\r\nI expect the item to be removed and the application to continue\r\n### Actual Behavior\r\nThe application fails fatally with the following messages in the Debug window:\r\n\r\n2018-04-16 15:50:57.099 TSApp.iOS[1844:127772] *** Assertion failure in -[UITableView _endCellAnimationsWithContext:], /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3698.52.10/UITableView.m:1685\r\n[0:] Objective-C exception thrown.  Name: NSInternalInconsistencyException Reason: attempt to delete row 0 from section 0 which only contains 0 rows before the update\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x0000000183ebada4 <redacted> + 252\r\n\t1   libobjc.A.dylib                     0x00000001830745ec objc_exception_throw + 56\r\n\t2   CoreFoundation                      0x0000000183ebabf8 <redacted> + 0\r\n\t3   Foundation                          0x00000001848aafa0 <redacted> + 112\r\n\t4   UIKit                               0x000000018dbb1200 <redacted> + 4608\r\n\t5   UIKit                               0x000000018dbaff10 <redacted> + 92\r\n\t6   TSApp.iOS                      0x0000000104dd7738 wrapper_managed_to_native_ObjCRuntime_Messaging_void_objc_msgSend_intptr_intptr + 104\r\n\t7   TSApp.iOS                      0x0000000104d72448 UIKit_UITableView_EndUpdates + 40\r\n\t8   TSApp.iOS                      0x00000001052c3050 Xamarin_Forms_Platform_iOS_ListViewRenderer_UpdateItems_System_Collections_Specialized_NotifyCollectionChangedEventArgs_int_bool + 2448\r\n\t9   TSApp.iOS                      0x00000001052bf738 Xamarin_Forms_Platform_iOS_ListViewRenderer_OnCollectionChanged_object_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 120\r\n\t10  TSApp.iOS                      0x000000010555683c Xamarin_Forms_Internals_TemplatedItemsList_2_TView_REF_TItem_REF_OnCollectionChanged_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 172\r\n\t11  TSApp.iOS                      0x000000010555b7d8 Xamarin_Forms_Internals_TemplatedItemsList_2_TView_REF_TItem_REF_OnProxyCollectionChanged_object_System_Collections_Specialized_NotifyCollectionChangedEventArgs_bool + 8456\r\n\t12  TSApp.iOS                      0x00000001055596a4 Xamarin_Forms_Internals_TemplatedItemsList_2_TView_REF_TItem_REF_OnProxyCollectionChanged_object_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 116\r\n\t13  TSApp.iOS                      0x00000001054712e0 Xamarin_Forms_ListProxy_OnCollectionChanged_System_Collections_Specialized_NotifyCollectionChangedEventArgs + 176\r\n\t14  TSApp.iOS                      0x0000000105473758 Xamarin_Forms_ListProxy__c__DisplayClass33_0__OnCollectionChangedb__0 + 152\r\n\t15  TSApp.iOS                      0x0000000104d425d4 Foundation_NSAsyncActionDispatcher_Apply + 36\r\n\t16  TSApp.iOS                      0x0000000104c98368 wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 248\r\n\t17  TSApp.iOS                      0x00000001069c498c mono_jit_runtime_invoke + 796\r\n\t18  TSApp.iOS                      0x0000000106a40bb8 mono_runtime_invoke_checked + 148\r\n\t19  TSApp.iOS                      0x0000000106a4427c mono_runtime_invoke + 80\r\n\t20  TSApp.iOS                      0x00000001049cca08 _ZL30native_to_managed_trampoline_1P11objc_objectP13objc_selectorPP11_MonoMethodj + 232\r\n\t21  TSApp.iOS                      0x00000001049cd0ec -[__MonoMac_NSAsyncActionDispatcher xamarinApplySelector] + 52\r\n\t22  Foundation                          0x00000001849060ec <redacted> + 340\r\n\t23  CoreFoundation                      0x0000000183e63404 <redacted> + 24\r\n\t24  CoreFoundation                      0x0000000183e62c2c <redacted> + 276\r\n\t25  CoreFoundation                      0x0000000183e6079c <redacted> + 1204\r\n\t26  CoreFoundation                      0x0000000183d80da8 CFRunLoopRunSpecific + 552\r\n\t27  GraphicsServices                    0x0000000185d63020 GSEventRunModal + 100\r\n\t28  UIKit                               0x000000018dd6178c UIApplicationMain + 236\r\n\t29  TSApp.iOS                      0x0000000104de1f80 wrapper_managed_to_native_UIKit_UIApplication_UIApplicationMain_int_string___intptr_intptr + 368\r\n\t30  TSApp.iOS                      0x0000000104d6a93c UIKit_UIApplication_Main_string___intptr_intptr + 44\r\n\t31  TSApp.iOS                      0x0000000104d6a8fc UIKit_UIApplication_Main_string___string_string + 172\r\n\t32  TSApp.iOS                      0x0000000104a01484 TSApp_iOS_Application_Main_string__ + 164\r\n\t33  TSApp.iOS                      0x0000000104c98368 wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 248\r\n\t34  TSApp.iOS                      0x00000001069c498c mono_jit_runtime_invoke + 796\r\n\t35  TSApp.iOS                      0x0000000106a40bb8 mono_runtime_invoke_checked + 148\r\n\t36  TSApp.iOS                      0x0000000106a468f8 mono_runtime_exec_main_checked + 120\r\n\t37  TSApp.iOS                      0x00000001069a79a4 mono_jit_exec + 268\r\n\t38  TSApp.iOS                      0x0000000106b2f088 xamarin_main + 2220\r\n\t39  TSApp.iOS                      0x0000000104a01364 main + 96\r\n\t40  libdyld.dylib                       0x0000000183811fc0 <redacted> + 4\r\nThe app has been terminated.\r\nFailed to Stop app:  An error occured on client IDB490753 while executing a reply for topic xvs/idb/4.9.0.753/stop-app\r\nThe app has been terminated.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Version of what?\r\n- Last known good version:\r\n- IDE: Visual Studio 2017 Professional\r\n- Platform Target Frameworks: iOS targets 11.3\r\n  - iOS:  11.9.1.24\r\n  - Android: Does not affect Android\r\n  - UWP:  N/A\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: Xamarin.Forms 2.5.1.444934\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7551207713","Type":"IssuesEvent","CreatedAt":"2018-04-18T19:21:47","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2424","RelatedDescription":"Closed issue \"TabbedPageRenderer crash on v3-pre3\" (#2424) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. create new xamarin forms project with tabbedpage\r\n2. update xamarin forms nuget package to v3 pre3 and android suppor libraries on v 27.0\r\n3. move         InitializeComponent(); in OnAppearing instead of Constructor\r\n\r\n### Expected Behavior\r\nsame code works on xf 2.5 version\r\n### Actual Behavior\r\nthrows exception as \r\n\r\n```\r\nOnPageChangeListener.OnPageSelected (System.Int32 position)\r\nD:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\AppCompat\\TabbedPageRenderer.cs - line 77\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\nIOnPageChangeListener.OnPageSelected (System.Int32 position) D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\AppCompat\\TabbedPageRenderer.cs:77\r\nViewPager+IOnPageChangeListenerInvoker.n_OnPageSelected_I (System.IntPtr jnienv, System.IntPtr native__this, System.Int32 position)\r\n(wrapper dynamic-method) System.Object.dae3e3a8-ea38-4b7c-94ee-8d16d3bb7f24(intptr,intptr,int)\r\n```\r\n\r\n### Basic Information\r\n\r\nPlease dont judge the usage. maybe for some of you calling    InitializeComponent(); in onappearing sounds not correct but according to my application I do that if i am using masterdetail and avoid masterdetail to execute every page constructor in the list when the app is first loaded. This usage below works fine in 2.5 version and worked all other version but not v3-pre3. therefore I have generally control to execute it only once in OnAppearing. like for a contentpage below works\r\n\r\n```\r\n protected override void OnAppearing()\r\n        {\r\n            base.OnAppearing();\r\n            if (Content == null)\r\n            {\r\n              InitializeComponent();\r\n            }\r\n```\r\n\r\nbut for tabbedpage, below throws exception\r\n\r\n```\r\npublic partial class MainPage : TabbedPage\r\n\t{\r\n\t\tpublic MainPage ()\r\n\t\t{\r\n\t\t\t//InitializeComponent ();\r\n\t\t}\r\n\r\n        protected override void OnAppearing()\r\n        {\r\n            base.OnAppearing();\r\n            if (this.CurrentPage == null)\r\n            {\r\n                InitializeComponent();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  \r\n  - Android: 7.1\r\n  - UWP:   \r\n- Android Support Library Version:  27.0.2\r\n- Nuget Packages: \r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n \r\n[App1.zip](https://github.com/xamarin/Xamarin.Forms/files/1898575/App1.zip)\r\n\r\n\r\n"},{"Id":"7551073130","Type":"IssuesEvent","CreatedAt":"2018-04-18T18:55:23","Actor":"t4lm1d","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2499","RelatedDescription":"Opened issue \"Picker.cs Line 215 Throws Argument Out Of Range Exception when Binding Context gets set to Null\" (#2499) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\n\r\nIn Picker.cs, when we close a popup dialog that contains a picker control inside the \"SelectedIndexChanged\" event, the Items collection has 0 elements and a SelectedIndex still set. This occurs when some portion of the code sets the BindingContext to null.  \r\n\r\nUnder these conditions, we get an argument out of range exception within the UpdateSelectedItem() method on line 215:\r\n\r\nvoid UpdateSelectedItem()\r\n\t\t{\r\n\t\t\tif (SelectedIndex == -1) {\r\n\t\t\t\tSelectedItem = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (ItemsSource != null) {\r\n\t\t\t\tSelectedItem = ItemsSource [SelectedIndex];\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t**SelectedItem = Items [SelectedIndex];**\r\n\t\t}\r\n\r\n### Steps to Reproduce\r\n\r\n1. Set up a Picker control in a popup dialog\r\n2. In the SelectedIndexChanged event, set the BindingContext to null when the last element in the picker is chosen\r\n3. In the SelectedIndexChanged event close the popup when the last element in the Picker is chosen\r\n4. Run the code\r\n5. Select the last element\r\n6. Index out of bounds exception on line 215 of Picker.cs\r\n\r\n### Expected Behavior\r\n\r\nI would expect there to be a check on line 215 of the Picker.cs that does not allow choosing an item by index value when there aren't any elements in the list.\r\n\r\n### Actual Behavior\r\n\r\nThrows exception\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7552811498","Type":"PullRequestEvent","CreatedAt":"2018-04-19T02:31:28","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3958","RelatedDescription":"Opened pull request \"[build] Sprinkle -nologo to csc usages to avoid spam fest in our logs\" (#3958) at xamarin/xamarin-macios","RelatedBody":"This commit https://github.com/xamarin/xamarin-macios/pull/3815/commits/7623ca9ec8cfd466460d1feb0f89a64795b32167 removed /nologo from the general SYSTEM_CSC declaration because it was not usable that way in every case where csc was used. This commit removes the spam fest output from src build.\r\n\r\nI am not sure if we want to get rid of it this way or if we want a more general fix instead of sprinkling `-nologo` everywhere."},{"Id":"7552446378","Type":"PullRequestEvent","CreatedAt":"2018-04-19T00:20:27","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3957","RelatedDescription":"Opened pull request \"[build] Remove MT.D source build and replace it with a binary\" (#3957) at xamarin/xamarin-macios","RelatedBody":"This commit removes MonoTouch.Dialog from our source build and\r\nreplaces it with a binary from https://github.com/xamarin/macios-binaries/tree/c913506df2d106f9c073f211b7c66b03eefc89f2/MonoTouch.Dialog-Unified\r\n\r\nThe MT.D hash used in this commit is fixed to migueldeicaza/MonoTouch.Dialog@92c6e14"},{"Id":"7551392085","Type":"PullRequestEvent","CreatedAt":"2018-04-18T19:59:07","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3956","RelatedDescription":"Opened pull request \"[apidiff] Update mono-api-html and Makefile to output markdown for API diffs\" (#3956) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7551324857","Type":"PullRequestEvent","CreatedAt":"2018-04-18T19:45:37","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3954","RelatedDescription":"Merged pull request \"[apidiff] Update mono-api-html and Makefile to output markdown for API diffs\" (#3954) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7551066260","Type":"IssuesEvent","CreatedAt":"2018-04-18T18:54:04","Actor":"zengable","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3955","RelatedDescription":"Opened issue \"imessage archiving is broken\" (#3955) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. create a new app and a corresponding iMessage extension\r\n2. set all mandatory iMessage app icons in the asset catalog, and also for the hosting app\r\n2. archive for publishing\r\n3. try to upload to iTunes connect\r\n\r\n### Expected Behavior\r\n\r\nIt should be possible to publish the app without errors.\r\n\r\n### Actual Behavior\r\niTunes returns errors, eg.: iMessage upload problem: ITMS-90642 : MSMessagesExtensionStoreIconName missing from the iMessage appex\r\n\r\n### Further Details / Workaround / Solution suggestion\r\n\r\nBy comparing the same new app + imessage extension archive created with XCode, there are 2 notable differences:\r\n1. Indeed, the MSMessagesExtensionStoreIconName is present in the Info.plist of the archived iMessage appex bundle (this key is not present in the project's Info.plist, only gets inserted during archiving), however this is not present in the output of the VS archive\r\n2. Assets.car are generated and included in the iMessage.appex pluging project, containing all the mandatory app icon assets (again, VS output does not do this)\r\n\r\n\r\nBy manually adding the MSMessagesExtensionStoreIconName to the Visual Studio iMessage project's Info.plist and adding the Assets.car file generated by XCode to the VS project and setting the Build Action to BundleResource, I was able to force the Asset.car file to the appex project generated by VS. \r\n\r\nAfter these two manual steps, I was able to upload the app to iTunes Connect.\r\n\r\nI do not know if I missed any other differences honestly, I was just happy that after spending endless hours running in circles iTunes Connect finally accepted the binary.\r\n\r\n### Environment\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: 4c89704f-df6f-403f-b4dd-a7956d6da813\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.29 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Community)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Community)\r\nAndroid SDK: /Users/gable/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7550295206","Type":"PullRequestEvent","CreatedAt":"2018-04-18T16:27:53","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3951","RelatedDescription":"Merged pull request \"[builds] Try to fix a makefile infinite loop by using real files as dependencies.\" (#3951) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7550156148","Type":"IssuesEvent","CreatedAt":"2018-04-18T16:03:26","Actor":"alanmcgovern","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3929","RelatedDescription":"Closed issue \"Resources are always considered as 'newer than output'\" (#3929) at xamarin/xamarin-macios","RelatedBody":"The step for me is to build any ios project with resources. If you then build it a second time it complains that the input file is newer than the output file for all resources, so we copy them all instead of doing a no-op.\r\n\r\nI uploaded a 200mb log file here: https://xamarinhq.slack.com/files/U03CFBR1A/FA4T824L8/output\r\n\r\nMy repro project was the ios designer's `MTDesigner.sln`. In this project the issue shows up everywhewre, but you can look for `FillTexture.png` as one example when searching the logs"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"986658974685679617","CreatedAt":"2018-04-18T17:33:25+00:00","UserScreenname":"xamarinhq","Text":"Automatic iOS app provisioning with #VS2017 15.7 Preview 3: https://t.co/vFjy3uXtie https://t.co/sLhjkaHc9X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":38,"RawContent":null},{"Id":"986626430950920192","CreatedAt":"2018-04-18T15:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/piucqHprNe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":28,"RawContent":null},{"Id":"986268805629345792","CreatedAt":"2018-04-17T15:43:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/eK0geeikW6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":21,"RawContent":null},{"Id":"985953326079594496","CreatedAt":"2018-04-16T18:49:25+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":33,"RawContent":null},{"Id":"985907924479479811","CreatedAt":"2018-04-16T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/HMGMdGgDYr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":15,"RawContent":null},{"Id":"985296899346456576","CreatedAt":"2018-04-14T23:21:01+00:00","UserScreenname":"xamarinhq","Text":"Try out the #Xamarin Android Device Manager Preview, a tool for creating, editing, and controlling Android virtual… https://t.co/POMrs2vlnD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":33,"RawContent":null},{"Id":"984843662428459008","CreatedAt":"2018-04-13T17:20:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/1JLVLvKR0M","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":26,"RawContent":null},{"Id":"984821292938465285","CreatedAt":"2018-04-13T15:51:07+00:00","UserScreenname":"xamarinhq","Text":"Start shipping better apps, faster with this curated list of #VSAppCenter resources: https://t.co/jU0cnONnM8 https://t.co/KTX4gcGjqZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":12,"RawContent":null},{"Id":"984463408073408513","CreatedAt":"2018-04-12T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/tX03cw88GD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":15,"RawContent":null},{"Id":"984140279061020672","CreatedAt":"2018-04-11T18:45:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with new #XamarinForms #XAML IntelliSense functionality in #VisualStudio 2017: https://t.co/EPKoitU5bA https://t.co/JnlquxCZN9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":37,"RawContent":null},{"Id":"983738884319334400","CreatedAt":"2018-04-10T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build Xamarin.iOS from the source code in the second part of our four-part series on debugging… https://t.co/uVkITyoInQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"983374729166934016","CreatedAt":"2018-04-09T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/O4ILyulYAJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":27,"RawContent":null},{"Id":"983104477468266496","CreatedAt":"2018-04-08T22:09:07+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your Xamarin apps with Azure CosmosDB: https://t.co/acrN8gdJdS https://t.co/7dgtdHbqn9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":14,"RawContent":null},{"Id":"982728475831390208","CreatedAt":"2018-04-07T21:15:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/FGw0WVLZMU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":20,"RawContent":null},{"Id":"982351517544996870","CreatedAt":"2018-04-06T20:17:07+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/0hyFj6caS2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":27,"RawContent":null},{"Id":"982287570737315842","CreatedAt":"2018-04-06T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/jQc7aGUfzQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"981917376756232193","CreatedAt":"2018-04-05T15:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"981605676123344896","CreatedAt":"2018-04-04T18:53:25+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/eB7EyBcngh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":14,"RawContent":null},{"Id":"981383112331493377","CreatedAt":"2018-04-04T04:09:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/xM3dAE2jRZ https://t.co/pKafHtrM4C","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-04-19T05:30:44.2879062Z","RunDurationInMilliseconds":4487}