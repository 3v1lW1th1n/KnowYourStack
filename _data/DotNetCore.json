{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Today, we are releasing the January 2018 Security and Quality Rollup. Please avoid installing this update on Windows 7 or Windows Server 2008 R2. See .NET Framework January 2018 Rollup Known Issue...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7120728149","Type":"PullRequestEvent","CreatedAt":"2018-01-19T02:57:15","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15902","RelatedDescription":"Merged pull request \"Cache Invariant CompareInfo\" (#15902) at dotnet/coreclr","RelatedBody":"The Invariant CompareInfo is used in number of places. It is fetched via virtual method on CultureInfo. Caching it avoids the virtual method calls and extra indirections."},{"Id":"7120576907","Type":"PullRequestEvent","CreatedAt":"2018-01-19T02:01:44","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15920","RelatedDescription":"Merged pull request \"Allow COMPlus_JitHalt to display a pop-up on ARM/ARM64\" (#15920) at dotnet/coreclr","RelatedBody":"Note that you need to `set COMPlus_NoGuiOnAssert=0` for the\r\npop-up to be displayed."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7120993380","Type":"PullRequestEvent","CreatedAt":"2018-01-19T04:52:18","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8430","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.7.0-preview1-4839 into cli\" (#8430) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.7.0-preview1-4839 into cli master branch"},{"Id":"7120537234","Type":"PullRequestEvent","CreatedAt":"2018-01-19T01:47:42","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8430","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.7.0-preview1-4839 into cli\" (#8430) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.7.0-preview1-4839 into cli master branch"},{"Id":"7120261751","Type":"PullRequestEvent","CreatedAt":"2018-01-19T00:13:20","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8429","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.6.0-rtm-4825 into cli\" (#8429) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4825 into cli release/2.1.1xx branch"},{"Id":"7120175105","Type":"PullRequestEvent","CreatedAt":"2018-01-18T23:45:16","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8428","RelatedDescription":"Opened pull request \"Merge release/2.1 to master\" (#8428) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180118-234515\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180118-234515 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7120169085","Type":"IssuesEvent","CreatedAt":"2018-01-18T23:43:26","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/626","RelatedDescription":"Opened issue \"Trimming will break when SDK stops running RunResolvePackageDependencies\" (#626) at dotnet/standard","RelatedBody":"I chatted with @nguerrera and he mentioned that SDK will no longer run RunResolvePackageDependencies as part of the build for perf reasons.\r\n\r\nWe depend on the PackageDependencies item in trimming in order to construct the package graph and will no longer get them.\r\n\r\nWe should update the target sequencing so that we run RunResolvePackageDependencies ourselves in order to get these items.  We should be careful when doing this to not regress the non-SDK case which may not have the RunResolvePackageDependencies target."},{"Id":"7109083941","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:51:48","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/625","RelatedDescription":"Closed issue \"(Spam)\" (#625) at dotnet/standard","RelatedBody":"*Spam*"},{"Id":"7109082451","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:51:11","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/624","RelatedDescription":"Closed issue \"(Spam)\" (#624) at dotnet/standard","RelatedBody":"*Spam*"},{"Id":"7109063815","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:44:12","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/623","RelatedDescription":"Closed issue \"dick and pusy\" (#623) at dotnet/standard","RelatedBody":"# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]"},{"Id":"7109058620","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:42:04","Actor":"viperxlink","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/625","RelatedDescription":"Opened issue \"ass\" (#625) at dotnet/standard","RelatedBody":"# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7120836633","Type":"PullRequestEvent","CreatedAt":"2018-01-19T03:41:04","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26152","RelatedDescription":"Merged pull request \"Fixing X509Certificate2Collection.Export on Unix with multiple certs and private key\" (#26152) at dotnet/corefx","RelatedBody":"See previous discussion of this bug here: https://github.com/dotnet/corefx/issues/26125\r\n\r\nThis passes tests on Ubuntu 16.04 machine"},{"Id":"7120789003","Type":"PullRequestEvent","CreatedAt":"2018-01-19T03:21:58","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26442","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#26442) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7120734449","Type":"PullRequestEvent","CreatedAt":"2018-01-19T02:59:49","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26442","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#26442) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7120768077","Type":"PullRequestEvent","CreatedAt":"2018-01-19T03:13:11","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24335","RelatedDescription":"Opened pull request \"Fix symbol completion after 'in'\" (#24335) at dotnet/roslyn","RelatedBody":"@dotnet/roslyn-ide for review, for 15.6\r\n\r\n### Customer scenario\r\nWhen typing a method or lambda declaration with an `in` parameter, symbol completion should be offered for the type of the parameter.\r\nWhen invoking a method with an `in` argument, symbol completion should be offered for the expression of the argument.\r\n\r\n### Bugs this fixes\r\nFixes https://github.com/dotnet/roslyn/issues/24326\r\n\r\n### Workarounds, if any\r\nType without IntelliSense.\r\n\r\n### Risk\r\n### Performance impact\r\nLow. This is adding an additional case for `in` in a few places that already had cases for `ref` and `out`.\r\n\r\n### Is this a regression from a previous update?\r\nNo.\r\n\r\n### How was the bug found?\r\nPartly reported by customer. I found the second part from cursory manual validation.\r\n\r\n\r\nTagging @VSadov @OmarTawfik as FYI"},{"Id":"7120589975","Type":"IssuesEvent","CreatedAt":"2018-01-19T02:06:19","Actor":"JonHanna","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24334","RelatedDescription":"Opened issue \"Support non-trailing named arguments with dynamic.\" (#24334) at dotnet/roslyn","RelatedBody":"Currently with the likes of:\r\n\r\n```C#\r\ndynamic s = \"abcabc\";\r\nint i = s.IndexOf(value: 'a', 2);\r\n```\r\nWe get CS8324.\r\n\r\nSince support for non-trailing named arguments has [recently been merged into corefx](https://github.com/dotnet/corefx/pull/25819), ideally roslyn could make use of it, rather than raising that error.\r\n\r\nIn itself this is simple, but identifying whether it will be supported or not is another matter."},{"Id":"7120350833","Type":"IssuesEvent","CreatedAt":"2018-01-19T00:44:31","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24333","RelatedDescription":"Opened issue \"Intermittent test failure in CompilerServerUnitTests.FallbackToVbc\" (#24333) at dotnet/roslyn","RelatedBody":"See https://ci.dot.net/job/dotnet_roslyn/job/features_async-streams/job/windows_release_unit64_prtest/26/ in PR https://github.com/dotnet/roslyn/pull/23961#issuecomment-358827027\r\n\r\n```\r\nMicrosoft.CodeAnalysis.CompilerServer.UnitTests.CompilerServerUnitTests.FallbackToVbc (from Roslyn.Compilers.CompilerServer.UnitTests)\r\n\r\n\r\nSystem.IO.IOException : The process cannot access the file 'D:\\\\j\\\\workspace\\\\windows_relea---3cac39cd\\\\Binaries\\\\Temp\\\\RoslynTests\\\\aeb95ce7-72c4-41dd-be0c-28fd1c4720d1\\\\hello.exe' because it is being used by another process.\r\n```"},{"Id":"7120343958","Type":"PullRequestEvent","CreatedAt":"2018-01-19T00:42:02","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24328","RelatedDescription":"Merged pull request \"Merge dev15.6.x-vs-deps to dev15.7.x-vs-deps\" (#24328) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev15.6.x-vs-deps into dev15.7.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev15.6.x-vs-deps-to-dev15.7.x-vs-deps-20180118-234435\ngit reset --hard upstream/dev15.7.x-vs-deps\ngit merge upstream/dev15.6.x-vs-deps\n# Fix merge conflicts\ngit commit\ngit push merges/dev15.6.x-vs-deps-to-dev15.7.x-vs-deps-20180118-234435 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7121072885","Type":"PullRequestEvent","CreatedAt":"2018-01-19T05:29:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5262","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5262) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7120730676","Type":"PullRequestEvent","CreatedAt":"2018-01-19T02:58:15","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5262","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5262) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7120625840","Type":"PullRequestEvent","CreatedAt":"2018-01-19T02:18:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5261","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5261) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7120479793","Type":"PullRequestEvent","CreatedAt":"2018-01-19T01:27:19","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5261","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5261) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7120465618","Type":"PullRequestEvent","CreatedAt":"2018-01-19T01:22:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5260","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5260) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7120146096","Type":"PullRequestEvent","CreatedAt":"2018-01-18T23:36:12","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5260","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5260) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7119405300","Type":"PullRequestEvent","CreatedAt":"2018-01-18T20:45:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5258","RelatedDescription":"Merged pull request \"ILVerify: split into exe and library\" (#5258) at dotnet/corert","RelatedBody":"Per discussion in https://github.com/dotnet/corert/issues/5235, the library code and corresponding tests go into `src/ILVerification`, while the command-line exe is produced from `src/ILVerify`.\r\n\r\nI kept a single solution (under `ILVerify`) which points to the three projects.\r\n\r\nAside from solution and project file changes, the code changes were:\r\n- `Program.cs` was removed from `ILVerification` and moved to `ILVerify`.\r\n- The resource file for `ILVerification` changed name.\r\n- Added some `InternalsVisibleTo` to `ILVerify`.\r\n\r\nFixes https://github.com/dotnet/corert/issues/5235\r\nRelates to https://github.com/dotnet/roslyn/issues/22872\r\n\r\nTagging @jkotas @ArztSamuel @A-And "},{"Id":"7119405296","Type":"IssuesEvent","CreatedAt":"2018-01-18T20:45:49","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5235","RelatedDescription":"Closed issue \"[ILVerify] Directory structure for splitting ILVerify into exe+dll\" (#5235) at dotnet/corert","RelatedBody":"I’m going to split ILVerify.exe into an exe and a dll containing the public APIs, as we discussed in https://github.com/dotnet/corert/pull/5186.\r\n\r\nCurrently, the directory structure is:\r\n```\r\nILVerify/\r\n              Src/ -> produces ILVerify.exe\r\n              Test/\r\n```\r\n\r\nI see two options: \r\n```\r\nILVerify/\r\n              Src/ -> produces ILVerify.exe\r\nILVerification/\r\n              Src/ -> produces new library\r\n              Test/\r\n```\r\nOR\r\n```\r\nILVerify/\r\n              Src/ -> produces ILVerify.exe\r\n              Lib/ -> produces new library (which I propose calling ILVerification.dll)\r\n              Test/\r\n```\r\n\r\nThe first option is more in-line with the organization of the repo, so I’m assuming that’s what you prefer. \r\nCan you confirm?\r\n\r\nDoes ILVerification.dll sound ok? (an alternative could be ILAnalysis.dll)\r\n\r\nTagging @jkotas @ArztSamuel @KrzysztofCwalina \r\n\r\n"},{"Id":"7115898322","Type":"PullRequestEvent","CreatedAt":"2018-01-18T09:05:51","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5259","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5259) at dotnet/corert","RelatedBody":""},{"Id":"7115214151","Type":"PullRequestEvent","CreatedAt":"2018-01-18T05:39:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5259","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5259) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7121044715","Type":"IssuesEvent","CreatedAt":"2018-01-19T05:16:06","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1478","RelatedDescription":"Closed issue \"Build of web project fails with .NET Core 2.0 preview 2 / VS 2017 (15.3.0 Preview 7.0)\" (#1478) at dotnet/sdk","RelatedBody":"We have a project which successfully builds with VS 2017 (15.2) and target framework .NetCoreApp 1.1.\r\n\r\nWhen trying to build it with .NET Core 2.0 preview 2 or VS 2017 (15.3.0 preview 7.0), we get the following build error:\r\n`C:\\Program Files (x86)\\dotnet\\sdk\\2.0.0-preview2-006497\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.DefaultItems.targets(285,5): error : Duplicate 'Content' items were included.\r\n The .NET SDK includes 'Content' items from your project directory by default. You can either remove these items from your project file, or set the 'EnableDefaultContentItems' property to 'false' if you want to explicitly include them in your project file. For more information, see https://aka.ms/sdkimplicititems. The duplicate items were: 'wwwroot\\swagger\\custom.css'; 'wwwroot\\swagger\\index.html' [D:\\AutomationServer\\Source\\DotNetCore\\AutomationServer\\AutomationServer\\AutomationServer.csproj]`\r\n\r\nNo changes were made to the project or solution files, so I'd expect it to build fine.\r\n\r\nAdditional information: The project contains an explicit ItemGroup for the two files:\r\n`\r\n  <ItemGroup>\r\n    <Content Include=\"wwwroot\\swagger\\custom.css\" />\r\n    <Content Include=\"wwwroot\\swagger\\index.html\" />\r\n  </ItemGroup>`"},{"Id":"7121035721","Type":"IssuesEvent","CreatedAt":"2018-01-19T05:11:59","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1476","RelatedDescription":"Closed issue \".NET core 2.2 unable to run the tests with the following message Mising hostpolicy.dll\" (#1476) at dotnet/sdk","RelatedBody":"Not able to run dotnet test due to the missing hostpolicy.dll file\r\n\r\nTesthost process exited with error: A fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'G:\\DS\\Security\\test\\Microsoft.AspNetCore.Authentication.Test\\bin\\Debug\\netstandard2.0\\'.\r\n\r\nI have tried inside visual studio using Debug Tests, but nothing succeeds. When tried to use dotnet xunit, it says command not found. How are developers meant to run tests in this version?"},{"Id":"7121025312","Type":"IssuesEvent","CreatedAt":"2018-01-19T05:07:07","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1481","RelatedDescription":"Closed issue \"Microsoft.NET.Sdk with Razor support\" (#1481) at dotnet/sdk","RelatedBody":"I'm trying to get Razor syntax support for Visual Studio 2017 in a `Microsoft.NET.Sdk` library, which is dynamically loaded into a `Microsoft.NET.Sdk.Web` project.\r\n\r\nI've noticed that when I change the library to the Web SDK, .cshtml files get proper support for Razor code, so that I can access `@Html` or `@Context` with IntelliSense, and reports no longer errors (red squiggles).\r\n\r\nHowever, with that SDK I have to add an app entry point, and the output is an EXE. Moreover, when loading the library as an Application Part in MVC, similar to https://github.com/dotnet/sdk/issues/1213, then I get the below exception.\r\n\r\n```\r\nSystem.InvalidOperationException: Can not find compilation library location for package 'quantifeed.webapp.cub'\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.<SelectManyIterator>d__16`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRoslynCompilationService.CreateCompilation(String compilationContent, String assemblyName)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRoslynCompilationService.Compile(RelativeFileInfo fileInfo, String compilationContent)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorCompilationService.Compile(RelativeFileInfo file)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCache.CreateCacheEntry(String relativePath, String normalizedPath, Func`2 compile)\r\n```\r\n\r\nIs there a way to get Razor support in VS 2017 with a `Microsoft.NET.Sdk`  SDK?\r\n\r\n\r\n"},{"Id":"7121020766","Type":"IssuesEvent","CreatedAt":"2018-01-19T05:05:04","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1464","RelatedDescription":"Closed issue \"Incorrect publish output for netcoreapp1.1 on linux-x64 targets\" (#1464) at dotnet/sdk","RelatedBody":"**Repro steps**\r\n\r\n- Install preview2 SDK\r\n- `dotnet new console`\r\n- change TFM to netcoreapp1.1\r\n- `dotnet restore`\r\n- `dotnet publish -r linux-x64 -c Release -o out`\r\n\r\n**Expected behavior:**\r\nEither this works and the output has the required runtime assets (host, System.Private.CoreLib.dll), or this is not a supported scenario, and I get an error message.\r\n\r\n**Actual behavior:**\r\nPublish seems to succeed, but the published app contains no host or System.Private.CoreLib.dll. If I understand correctly, the linux-x64 rid isn't supported for netcoreapp1.1 targets, so the SDK should detect this and emit an error message.\r\n\r\n@richlander @russellhadley "},{"Id":"7121011972","Type":"IssuesEvent","CreatedAt":"2018-01-19T05:01:03","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1792","RelatedDescription":"Closed issue \"Restore FAILS with <RuntimeIdentifiers> set and <PackageReference> to BOTH NS 1.x + 2.0\" (#1792) at dotnet/sdk","RelatedBody":"Repro repo:\r\nhttps://github.com/ogreenz/rid-netstandard2-repro\r\n\r\n`dotnet --info`:\r\n\r\n```\r\ndotnet --info\r\n.NET Command Line Tools (2.0.3)\r\n\r\nProduct Information:\r\n Version:            2.0.3\r\n Commit SHA-1 hash:  12f0c7efcc\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.3\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\nProject references both NodaTime (NS 1.x) and Dapper (NS 2.0).\r\n\r\nWhen built WITHOUT `<RuntimeIdentifiers>` in the .csproj `dotnet restore` runs to completion and restore is successfull.\r\n\r\nWhen `<RuntimeIdentifiers>` is set to any valid value AND both packages are referenced/used restore fails with these cryptic messages:\r\n\r\n```\r\n$ dotnet restore\r\n  Restoring packages for C:\\projects\\repro-netstandard\\repro-netstandard.csproj...\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605: Detected package downgrade: System.IO.FileSystem.Primitives from 4.3.0 to 4.0.1. Reference the package directly from the project to select a different version.\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.IO.FileSystem.Primitives (>= 4.3.0)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem.Primitives (>= 4.0.1)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605: Detected package downgrade: System.Resources.ResourceManager from 4.3.0 to 4.0.1. Reference the package directly from the project to select a different version.\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Resources.ResourceManager (>= 4.3.0)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.Resources.ResourceManager (>= 4.0.1)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605: Detected package downgrade: System.Runtime.Handles from 4.3.0 to 4.0.1. Reference the package directly from the project to select a different version.\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Runtime.Handles (>= 4.3.0)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem 4.0.1 -> System.Runtime.Handles (>= 4.0.1)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version.\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605: Detected package downgrade: System.Text.Encoding.Extensions from 4.3.0 to 4.0.11. Reference the package directly from the project to select a different version.\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Text.Encoding.Extensions (>= 4.3.0)\r\nC:\\projects\\repro-netstandard\\repro-netstandard.csproj : error NU1605:  repro-netstandard -> NodaTime 2.2.3 -> System.Runtime.Serialization.Xml 4.1.1 -> System.Xml.ReaderWriter 4.0.11 -> System.Text.Encoding.Extensions (>= 4.0.11)\r\n  Generating MSBuild file C:\\projects\\repro-netstandard\\obj\\repro-netstandard.csproj.nuget.g.props.\r\n  Restore failed in 378 ms for C:\\projects\\repro-netstandard\\repro-netstandard.csproj.\r\n```\r\n\r\nNote that if Dapper / NodaTime are used exclusively dotnet restore while using `<RuntimeIdentifiers>` runs successfully again...."},{"Id":"7120992789","Type":"IssuesEvent","CreatedAt":"2018-01-19T04:52:01","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1779","RelatedDescription":"Closed issue \"Running Restore and Build on clean project in one invocation produces invalid deps\" (#1779) at dotnet/sdk","RelatedBody":"Repro:\r\n1. `dotnet new web`\r\n2. `rm obj -rec -force`\r\n3. `dotnet msbuild /t:\"Restore;Build\"`\r\n\r\nExpected:\r\n\r\n`.deps.json` file is trimmed\r\n```\r\n      \"System.ComponentModel/4.3.0\": {\r\n        \"dependencies\": {\r\n          \"System.Runtime\": \"4.3.0\"\r\n        }\r\n      },\r\n```\r\n\r\nActual:\r\n\r\n```\r\n      \"System.ComponentModel/4.3.0\": {\r\n        \"dependencies\": {\r\n          \"System.Runtime\": \"4.3.0\"\r\n        },\r\n        \"runtime\": {\r\n          \"lib/netstandard1.3/System.ComponentModel.dll\": {}\r\n        }\r\n      },\r\n```\r\n"},{"Id":"7120790881","Type":"PullRequestEvent","CreatedAt":"2018-01-19T03:22:42","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1863","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/2.1\" (#1863) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180118-234517\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180118-234517 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7120790850","Type":"PullRequestEvent","CreatedAt":"2018-01-19T03:22:42","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1862","RelatedDescription":"Merged pull request \" Updating repo-toolset to 1.0.0-beta-62518-01 to support manifest publishing\" (#1862) at dotnet/sdk","RelatedBody":""},{"Id":"7120537540","Type":"PullRequestEvent","CreatedAt":"2018-01-19T01:47:48","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1867","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.7.0-preview1-4839 into sdk\" (#1867) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.7.0-preview1-4839 into sdk master branch"},{"Id":"7120326000","Type":"IssuesEvent","CreatedAt":"2018-01-19T00:35:34","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1781","RelatedDescription":"Closed issue \"Warning C4691 when building a C++/CLI executable\" (#1781) at dotnet/sdk","RelatedBody":"When using assemblies from NuGet, I am virtually guaranteed to encounter this warning\r\n\r\nAn easy example is when trying to use Microsoft.Extensions.Logger.  One can easily reproduce the issue with [this project](https://www.dropbox.com/s/9261ina8p4gyce1/SW-132v2.zip?dl=0)\r\n\r\nWe also [explored the issue on MSDN](https://social.msdn.microsoft.com/Forums/vstudio/en-US/fae48caa-7746-4c8f-9c44-839bd23ed128/warning-c4691-when-building-a-ccli-executable-referencing-microsoftextensionslogging-via-nuget?forum=vcgeneral)\r\n\r\nAlso this is a semi-cross-post from [here](https://github.com/aspnet/Logging/issues/734) but it seemed like the logging folks aren't the right ones to bug.  I felt this is a better spot to ask because the C4691 warning appears to be referring to a netstandard assembly.\r\n\r\nIf a) I am posting in the right place and b) you would like me to break it down more/provide more detail please let me know"},{"Id":"7120291152","Type":"IssuesEvent","CreatedAt":"2018-01-19T00:23:36","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1788","RelatedDescription":"Closed issue \"Error FS1108: The type 'Object' is required here and is unavailable\" (#1788) at dotnet/sdk","RelatedBody":"If I pull the latest [Giraffe source code](https://github.com/dustinmoris/Giraffe/tree/develop) on Windows it builds totally fine, but when I pull the same code on macOS I am getting the following error:\r\n\r\n```\r\nerror FS1108: The type 'Object' is required here and is unavailable. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n```\r\n\r\n### Reproduction steps:\r\n\r\n1. Pull repo\r\n2. Run `./build.sh`\r\n\r\n(If you don't have PowerShell installed on macOS then open ./build.sh and run the `export ...` command and then build `Giraffe.fsproj` by directly running `dotnet build ./src/giraffe/giraffe.fsproj`)\r\n\r\n### Workaround:\r\n\r\nI can fix this error by adding the following to the `Giraffe.fsproj` file:\r\n\r\n```\r\n<ItemGroup>\r\n  <Reference Include=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" />\r\n</ItemGroup>\r\n```\r\n\r\n... but I don't understand why I have to do this on macOS. Shouldn't it work the same on both environments?\r\n\r\nI tried googling this issue and didn't really find anything which could explain the issue or what is going on. Is anyone able to shed some light on this please? Thank you!\r\n\r\n### EDIT:\r\n\r\nI shall mention that this project targets `net461` as well as `netstandard2.0`, but I don't think that this is the problem, because I have two other projects which also target both frameworks and they build fine on macOS without any additional references.\r\n\r\ne.g.:\r\n```\r\n<TargetFrameworks>net461;netstandard2.0</TargetFrameworks>\r\n```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"953279226869960704","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/ZtyD9ubcE6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"952185961085067266","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"dotnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/kXZpzdtOqA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"950980824685412352","CreatedAt":"2018-01-10T06:41:11+00:00","UserScreenname":"dotnet","Text":".NET Framework January 2018 Security and Quality Rollup https://t.co/vyjtKwKpkb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":14,"RawContent":null},{"Id":"950944972588462080","CreatedAt":"2018-01-10T04:18:43+00:00","UserScreenname":"dotnet","Text":".NET for UWP January 2018 Update https://t.co/zckziEWmv7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":28,"RawContent":null},{"Id":"950850103652139008","CreatedAt":"2018-01-09T22:01:45+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog! https://t.co/Hr3fLteMDg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":57,"RawContent":null},{"Id":"950842872890191872","CreatedAt":"2018-01-09T21:33:01+00:00","UserScreenname":"dotnet","Text":".NET Core January 2018 Update https://t.co/waKNOsvgKU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":64,"RawContent":null}]}},"RunOn":"2018-01-19T05:30:20.808163Z","RunDurationInMilliseconds":7690}