{"Data":{"GitHub":{"Issues":[{"Id":"576696780","IsPullRequest":true,"CreatedAt":"2020-03-06T04:50:18","Actor":"dehghani-mehdi","Number":"2953","RawContent":null,"Title":"Fixed issue #2931","State":"open","Body":"I just changed few characters in doc section.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2953)","Url":"https://github.com/dotnet/winforms/pull/2953","RelatedDescription":"Open PR \"Fixed issue #2931\" (#2953)"},{"Id":"576670836","IsPullRequest":false,"CreatedAt":"2020-03-06T03:21:33","Actor":"vatsan-madhavan","Number":"2952","RawContent":null,"Title":"Check `Environment.UserInteractive` before showing UX","State":"open","Body":">It doesn't seem to affect WinForms. The checks come from WPF itself. \r\n\r\n>Perhaps winforms should add these checks 😄 - no point in trying to show ux when `Environment.UserInteractive` is (genuinely) `false`.\r\n\r\n_Originally posted by @vatsan-madhavan in https://github.com/dotnet/wpf/issues/2663#issuecomment-592207176_","Url":"https://github.com/dotnet/winforms/issues/2952","RelatedDescription":"Open issue \"Check `Environment.UserInteractive` before showing UX\" (#2952)"},{"Id":"573731841","IsPullRequest":false,"CreatedAt":"2020-03-06T00:23:35","Actor":"dehghani-mehdi","Number":"2931","RawContent":null,"Title":"Typo in winforms designer doc","State":"closed","Body":"At [winforms-designer](https://github.com/dotnet/winforms/blob/master/Documentation/winforms-designer.md#option-1)\r\n\r\nDoc says:\r\n\r\n```\r\n<TargetFrameworks>net472;netcoreapp5.0</TargetFrameworks>\r\n```\r\n\r\nBut in picture below it, the value of `TargetFrameworks` is `net472;netcoreapp3.0`.","Url":"https://github.com/dotnet/winforms/issues/2931","RelatedDescription":"Closed issue \"Typo in winforms designer doc\" (#2931)"},{"Id":"574598224","IsPullRequest":false,"CreatedAt":"2020-03-06T00:21:35","Actor":"Jessie-Zhang01","Number":"2935","RawContent":null,"Title":"An exception occurred when using Class library project in Winforms Core project","State":"closed","Body":"* .NET Core Version: .Net Core 3.1.200-preview-015008 from 3.1 release branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\nThis issue cannot reproduce when reopen the solution.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a Winforms Core application. \r\n2. Drag and drop a label to the form designer. \r\n3. Create a new Class Library(.Net Core) project under the solution.\r\n4. Open Class1.cs in ClassLibrary1 and design a function in Class1.cs as below:\r\n```\r\npublic static bool ReferenceMe()\r\n{\r\n\treturn true;\r\n}\t\r\n```\r\n5. Build the solution. Right click References under Core application then click Add Reference… Select Projects under Solution and check ClassLibrary1.\r\n6. Select Form1 of Core project and double click the form to generate a load event and design as below:\r\n```\r\nprivate void Form1_Load(object sender, EventArgs e)\r\n{\r\n\tif (ClassLibrary1.Class1.ReferenceMe())\r\n\t{\r\n\t\tthis.label1.Text += \"\\n\"+\"ClassLibrary is referenced\";\r\n\t}\r\n}\r\n```\r\n7. Build and run the app.\r\n[WindowsFormsApp8.zip](https://github.com/dotnet/winforms/files/4280955/WindowsFormsApp8.zip)\r\n\r\n**Expected behavior:**\r\nThe application build and run successfully.\r\n\r\n**Actual behavior:**\r\nAn exception occurred when using Class library project in Winforms Core project.\r\n![image](https://user-images.githubusercontent.com/45864649/75770418-b9fb7580-5cfc-11ea-9383-5fda0682025d.png)\r\n```\r\nSystem.IO.FileNotFoundException\r\n  HResult=0x80070002\r\n  Message=Could not load file or assembly 'ClassLibrary1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.\r\n  Source=WindowsFormsApp12\r\n  StackTrace:\r\n   at WindowsFormsApp12.Form1.Form1_Load(Object sender, EventArgs e) in C:\\Users\\v-ruizha\\source\\repos\\WindowsFormsApp12\\WindowsFormsApp12\\Form1.cs:line 29\r\n   at System.Windows.Forms.Form.OnLoad(EventArgs e)\r\n   at System.Windows.Forms.Form.OnCreateControl()\r\n   at System.Windows.Forms.Control.CreateControl(Boolean fIgnoreVisible)\r\n   at System.Windows.Forms.Control.CreateControl()\r\n   at System.Windows.Forms.Control.WmShowWindow(Message& m)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(Message& m)\r\n   at System.Windows.Forms.ContainerControl.WndProc(Message& m)\r\n   at System.Windows.Forms.Form.WmShowWindow(Message& m)\r\n   at System.Windows.Forms.Form.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n```","Url":"https://github.com/dotnet/winforms/issues/2935","RelatedDescription":"Closed issue \"An exception occurred when using Class library project in Winforms Core project\" (#2935)"},{"Id":"576343109","IsPullRequest":true,"CreatedAt":"2020-03-05T15:38:26","Actor":"M-Lipin","Number":"2951","RawContent":null,"Title":"WIP: Fixing 2947: Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2947 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Changing call to Handle with call to HandleInternal to prevent throwing an error when garbage collection is in progress.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not see an error in case garbage collector cleans up the references to WinForms controls which are not used anymore.\r\n- The case is applicable on high load environments when running application may require garbage collector to clean up controls to free memory.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nCross-thread error on garbage collection.\r\n\r\n### After\r\n\r\nNo error.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.20072.3\r\n  Commit:  c3dc1fdfdc\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.200-preview-014883 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha.1.20073.10 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-05536 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2951)","Url":"https://github.com/dotnet/winforms/pull/2951","RelatedDescription":"Open PR \"WIP: Fixing 2947: Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load\" (#2951)"},{"Id":"576236925","IsPullRequest":true,"CreatedAt":"2020-03-05T13:16:22","Actor":"dotnet-maestro[bot]","Number":"2950","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200304.1\r\n- **Date Produced**: 3/4/2020 2:28 PM\r\n- **Commit**: 5d8c586ca1bed15f630ba7d2ed16f591be06eafd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20154.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2950)","Url":"https://github.com/dotnet/winforms/pull/2950","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2950)"},{"Id":"574801924","IsPullRequest":true,"CreatedAt":"2020-03-05T04:53:04","Actor":"hughbe","Number":"2941","RawContent":null,"Title":"Add DataGridViewColumn tests","State":"closed","Body":"## Proposed Changes\r\n- Add DataGridViewColumn tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2941)","Url":"https://github.com/dotnet/winforms/pull/2941","RelatedDescription":"Closed or merged PR \"Add DataGridViewColumn tests\" (#2941)"},{"Id":"573560104","IsPullRequest":true,"CreatedAt":"2020-03-05T00:30:21","Actor":"gpetrou","Number":"2929","RawContent":null,"Title":"Add NIN enum to Interop Shell32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add NIN enum to Interop Shell32.\r\n- Remove NIN constants and replace their usages with the above enum values.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2929)","Url":"https://github.com/dotnet/winforms/pull/2929","RelatedDescription":"Closed or merged PR \"Add NIN enum to Interop Shell32\" (#2929)"},{"Id":"574895598","IsPullRequest":true,"CreatedAt":"2020-03-05T00:23:59","Actor":"hughbe","Number":"2943","RawContent":null,"Title":"Add MenuStrip and related tests","State":"closed","Body":"## Proposed Changes\r\n- Add MenuStrip and related tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2943)","Url":"https://github.com/dotnet/winforms/pull/2943","RelatedDescription":"Closed or merged PR \"Add MenuStrip and related tests\" (#2943)"},{"Id":"574783525","IsPullRequest":true,"CreatedAt":"2020-03-04T23:29:11","Actor":"hughbe","Number":"2938","RawContent":null,"Title":"Add more AxHost tests","State":"closed","Body":"## Proposed Changes\r\n- Add more AxHost tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2938)","Url":"https://github.com/dotnet/winforms/pull/2938","RelatedDescription":"Closed or merged PR \"Add more AxHost tests\" (#2938)"},{"Id":"575046043","IsPullRequest":true,"CreatedAt":"2020-03-04T18:06:22","Actor":"JuditRose","Number":"2946","RawContent":null,"Title":"Add reference to ToolStripDropDownMenu.ico","State":"closed","Body":"#Fixes #2939\r\n \r\nThe [ToolStripDropDownMenu.ico file](https://github.com/dotnet/winforms/blob/b666dc7a94d8ac87a7d300cfb4fa86332fb79bae/src/System.Windows.Forms/src/Resources/System/Windows/Forms/ToolStrip/ToolStripDropDownMenu.ico) is already there, but the reference was missing.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2946)","Url":"https://github.com/dotnet/winforms/pull/2946","RelatedDescription":"Closed or merged PR \"Add reference to ToolStripDropDownMenu.ico\" (#2946)"},{"Id":"574800005","IsPullRequest":false,"CreatedAt":"2020-03-04T18:06:21","Actor":"DustinCampbell","Number":"2939","RawContent":null,"Title":"ToolStripDropDownMenu.ico is missing from embedded resources","State":"closed","Body":"The `ToolStripDropDownMenu.ico` is correctly included in the winforms repo: https://github.com/dotnet/winforms/blob/b666dc7a94d8ac87a7d300cfb4fa86332fb79bae/src/System.Windows.Forms/src/Resources/System/Windows/Forms/ToolStrip/ToolStripDropDownMenu.ico.\r\n\r\nHowever, it was apparently missed when resources for ToolStrips were added to `System.Windows.Forms.csproj`. It should be included in this block of embedded resources:\r\n\r\nhttps://github.com/dotnet/winforms/blob/804091a825f723579f18fcd1b82b7b86cb001c04/src/System.Windows.Forms/src/System.Windows.Forms.csproj#L554-L565\r\n\r\nThis is observable when the `ToolStripCollectionEditor` is used to edit the drop down items of a `MenuStrip`. This appears in the new WinForms designer and likely appears in the .NET Core `PropertyGrid` when used to edit a `MenuStrip`.\r\n\r\nCompare the images in https://github.com/dotnet/winforms-designer/issues/1427 to see the effect.\r\n\r\ncc @merriemcgaw ","Url":"https://github.com/dotnet/winforms/issues/2939","RelatedDescription":"Closed issue \"ToolStripDropDownMenu.ico is missing from embedded resources\" (#2939)"},{"Id":"575632242","IsPullRequest":false,"CreatedAt":"2020-03-04T18:05:22","Actor":"JuditRose","Number":"2949","RawContent":null,"Title":"Replace resource embedding with globs in csproj files","State":"open","Body":"In the `csproj` files we have a lot of `ico` files as embedded resources defined for all resource files for all the components. \r\n\r\ne.g.:\r\n```\r\n<EmbeddedResource Include=\"Resources\\System\\Windows\\Forms\\ToolStrip\\ToolStripDropDownMenu.ico\">\r\n      <LogicalName>System.Windows.Forms.ToolStripDropDownMenu</LogicalName>\r\n    </EmbeddedResource>\r\n```\r\n\r\nIt would be nicer to replace them with something like this:\r\n\r\n ``` \r\n<ItemGroup>\r\n    <EmbeddedResource Include=\"Resources\\System\\Windows\\Forms\\**\\*.ico\">\r\n      <LogicalName>$(AssemblyName).$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)'))</LogicalName>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n```\r\n\r\nRelates to https://github.com/dotnet/winforms/issues/2939","Url":"https://github.com/dotnet/winforms/issues/2949","RelatedDescription":"Open issue \"Replace resource embedding with globs in csproj files\" (#2949)"},{"Id":"575382616","IsPullRequest":true,"CreatedAt":"2020-03-04T13:16:23","Actor":"dotnet-maestro[bot]","Number":"2948","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200303.1\r\n- **Date Produced**: 3/3/2020 2:12 PM\r\n- **Commit**: 421b20fb860907c45673de791177e3fd61402197\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20153.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2948)","Url":"https://github.com/dotnet/winforms/pull/2948","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2948)"},{"Id":"575315029","IsPullRequest":false,"CreatedAt":"2020-03-04T11:05:42","Actor":"M-Lipin","Number":"2947","RawContent":null,"Title":"Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\nVersion: 5.0.0-alpha.1.20072.3\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nCall to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load\r\n\r\n**Expected behavior:**\r\nThere should be no error when GC frees the resources.\r\n\r\n**Minimal repro:**\r\nRun WinForms app under load and trigger GC to free resources.\r\n\r\n```\r\nSystem.InvalidOperationException: 'Cross-thread operation not valid: Control '' accessed from a thread other than the thread it was created on.'\r\n>\tSystem.Windows.Forms.dll!System.Windows.Forms.Control.Handle.get() Line 2502\tC#\r\n \tSystem.Windows.Forms.Primitives.dll!Interop.User32.GetWindowThreadProcessId(IHandle hWnd, out uint lpdwProcessId) Line 17\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Application.ParkingWindow.RemoveReflectChild() Line 81\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.ReflectParent.set(System.Windows.Forms.Control value) Line 3137\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.UpdateReflectParent(bool findNewParent) Line 11630\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.Dispose(bool disposing) Line 5188\tC#\r\n \tSystem.ComponentModel.Primitives.dll!System.ComponentModel.Component.~Component() Line 22\tC#\r\n \t[Native to Managed Transition]\t\r\n```","Url":"https://github.com/dotnet/winforms/issues/2947","RelatedDescription":"Open issue \"Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load\" (#2947)"},{"Id":"574801091","IsPullRequest":true,"CreatedAt":"2020-03-04T05:22:16","Actor":"hughbe","Number":"2940","RawContent":null,"Title":"Add FlowLayout tests","State":"closed","Body":"Lays groundwork for testing fix for #522\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2940)","Url":"https://github.com/dotnet/winforms/pull/2940","RelatedDescription":"Closed or merged PR \"Add FlowLayout tests\" (#2940)"},{"Id":"575029313","IsPullRequest":true,"CreatedAt":"2020-03-03T23:37:08","Actor":"AdamYoblick","Number":"2945","RawContent":null,"Title":"updated nuget config","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nUpdate nuget config based on e-mail recommendations from dnceng\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2945)","Url":"https://github.com/dotnet/winforms/pull/2945","RelatedDescription":"Open PR \"updated nuget config\" (#2945)"},{"Id":"574941599","IsPullRequest":true,"CreatedAt":"2020-03-03T21:02:28","Actor":"hughbe","Number":"2944","RawContent":null,"Title":"Cleanup ToolStripManager code","State":"open","Body":"## Proposed Changes\r\n- Cleanup ToolStripManager code\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2944)","Url":"https://github.com/dotnet/winforms/pull/2944","RelatedDescription":"Open PR \"Cleanup ToolStripManager code\" (#2944)"},{"Id":"574870683","IsPullRequest":true,"CreatedAt":"2020-03-03T18:53:07","Actor":"JeremyKuhne","Number":"2942","RawContent":null,"Title":"Remove ExitInternal","State":"open","Body":"There are no security checks in Core so ExitInternal is unnecessary (the security checks were already removed).\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2942)","Url":"https://github.com/dotnet/winforms/pull/2942","RelatedDescription":"Open PR \"Remove ExitInternal\" (#2942)"},{"Id":"574660931","IsPullRequest":true,"CreatedAt":"2020-03-03T13:16:35","Actor":"hughbe","Number":"2937","RawContent":null,"Title":"Cleanup WM_CONTEXTMENU handler in TextBox","State":"open","Body":"## Proposed Changes\r\n- Cleanup WM_CONTEXTMENU handler in TextBox following removal of `ContextMenu` and the like\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2937)","Url":"https://github.com/dotnet/winforms/pull/2937","RelatedDescription":"Open PR \"Cleanup WM_CONTEXTMENU handler in TextBox\" (#2937)"},{"Id":"574651918","IsPullRequest":true,"CreatedAt":"2020-03-03T13:16:23","Actor":"dotnet-maestro[bot]","Number":"2936","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200302.4\r\n- **Date Produced**: 3/2/2020 6:28 PM\r\n- **Commit**: d8c2d041341ea7974fd3f2057e9d6afdd4f37598\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20152.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2936)","Url":"https://github.com/dotnet/winforms/pull/2936","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2936)"},{"Id":"573735309","IsPullRequest":true,"CreatedAt":"2020-03-03T04:14:19","Actor":"RussKie","Number":"2932","RawContent":null,"Title":"fix: Restore missing TF for `System.Windows.Forms.HighDpiMode`","State":"closed","Body":"Resolves #2925\r\n\r\n`System.Windows.Forms.HighDpiMode` was accidentally placed under `Internal` namespace, which caused a missing type-forward decoration.\r\nThis resulted in users receiving the following error when attempting to roll forward from .NET Core 3.x to .NET 5:\r\n\r\n```\r\nSystem.MissingMethodException : Method not found: 'Boolean System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode)'.\r\n```\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Move the type into the correct location and add the missing `TypeForward` decoration.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- User can now roll forward from .NET Core 3.x and use `Boolean System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode)`\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology\r\n* [Use the repro app](https://github.com/RussKie/Test-TypeForwards/commit/c5f76dca248dee7fd69d95fc9b5af0f76c32578e) or generate a new Windows Forms app targeting .NET Core 3.0 (or 3.1) and set it to rollforward:\r\n  ```json\r\n  {\r\n    \"sdk\": {\r\n      \"rollForward\": \"major\"\r\n    }\r\n  }\r\n  ```\r\n* Ensure no .NET Core 3.x runtime is installed. Best to run a VM with only .NET5 Preview1 installed\r\n* Run the app, observe the failure:\r\n  ![image](https://user-images.githubusercontent.com/4403806/75741880-12b02a00-5d60-11ea-9365-2042177f0eff.png)\r\n* Build the current commit with `pack` option:\r\n  ```powershell\r\n  PS> .\\build.ps1 -pack\r\n  ```\r\n* Copy and replace `System.Windows.Forms.dll` and `System.Windows.Forms.Primitives.dll`\r\n\t- from .\\artifacts\\packages\\Debug\\NonShipping\\Microsoft.Private.Winforms.5.0.0-dev.nupkg\\lib\\netcoreapp5.0 --> C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\5.0.0-preview.2.20119.5\r\n\t- from .\\artifacts\\packages\\Debug\\NonShipping\\Microsoft.Private.Winforms.5.0.0-dev.nupkg\\ref\\netcoreapp5.0 --> C:\\Program Files\\dotnet\\packs\\Microsoft.WindowsDesktop.App.Ref\\5.0.0-preview.2.20119.5\\ref\\netcoreapp5.0\r\n* Re-run the app, observe the app start\r\n  ![image](https://user-images.githubusercontent.com/4403806/75742168-eb0d9180-5d60-11ea-9b79-ad4ce33344e1.png)\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2932)","Url":"https://github.com/dotnet/winforms/pull/2932","RelatedDescription":"Closed or merged PR \"fix: Restore missing TF for `System.Windows.Forms.HighDpiMode`\" (#2932)"},{"Id":"572766872","IsPullRequest":false,"CreatedAt":"2020-03-03T04:14:19","Actor":"DotNetAppCompatFeiWang","Number":"2925","RawContent":null,"Title":"System.MissingMethodException at System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode) in GreenShot unit tests","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.1.20125.9\r\n Commit:    12e88ed2e5\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.1.20125.9\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.1.20120.5\r\n  Commit:  3c523a6a7a\r\n\r\n.NET Core SDKs installed:\r\n  5.0.100-preview.1.20125.9 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0-preview.1.20124.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.1.20120.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.1.20122.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nRepro steps:\r\n\r\nOn the repo machine (could be found at https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1075435)\r\n\r\n1) On CMD, go to C:\\Repro\\GreenshotTest09\r\n2)run command \"dotnet vstest Greenshot.Tests.dll\"\r\n\r\nExpected Result:\r\n\r\nTests should pass\r\n\r\nActual Result:\r\n\r\nTotal tests: 21\r\n     Passed: 16\r\n     Failed: 5\r\n\r\nFindings :\r\n\r\nTests return this exception :\r\n\r\n   System.MissingMethodException : Method not found: 'Boolean System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode)'.\r\n\r\nWhen we create/build winforms app with .net core sdk 3.1 and run it against .net core 5.0, we get this issue. It is fine when we run against 3.1.\r\n\r\nThis issue does not repro if we build the same with code .net core 5.0 SDK.\r\n\r\nThis line in program.cs causes this issue : \r\n\r\nApplication.SetHighDpiMode(HighDpiMode.SystemAware);\r\n\r\n**Expected behavior:**\r\nAll unites passed.\r\n\r\nApp Source on GitHub link: https://github.com/greenshot/greenshot\r\n\r\n**Minimal repro:**\r\n1. create winforms app ===> dotnet new winforms on machine has .NET Core 3.1 SDK installed.\r\n2. dotnet build\r\n3. Run the app only have .NET 5 installed.\r\n\r\n@dotnet-actwx-bot  FYI","Url":"https://github.com/dotnet/winforms/issues/2925","RelatedDescription":"Closed issue \"System.MissingMethodException at System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode) in GreenShot unit tests\" (#2925)"},{"Id":"573958668","IsPullRequest":true,"CreatedAt":"2020-03-02T13:21:34","Actor":"dotnet-maestro[bot]","Number":"2934","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200301.1\r\n- **Date Produced**: 3/1/2020 2:16 PM\r\n- **Commit**: 8ccad075bbb0db445e03eed0a6073d27bdd4f31a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20151.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2934)","Url":"https://github.com/dotnet/winforms/pull/2934","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2934)"},{"Id":"573748064","IsPullRequest":false,"CreatedAt":"2020-03-02T06:26:45","Actor":"Marie-Shi","Number":"2933","RawContent":null,"Title":"[Accessibility]Narrator cannot announce localized control type of TextBox/MaskedTextBox","State":"open","Body":"* .NET Core Version: \r\n.Net Core 5.0.100-preview.2.20151.5 from 5.0 master branch + VISX inserted in the Dev16 16.6.0 [29901.3.master]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info:**\r\n1.\tThis issue can reproduce on TextBox/MaskedTextBox/TextBox with MultiLine=true.\r\n2.\tThis issue can also reproduce on .Net Core 3.1 release branch.\r\n\r\n**Steps to reproduce:**\r\n1.\tOpen the attached app “Narrator_Not_Annouce_control_type.zip” in VS.\r\n[Narrator_Not_Annouce_control_type.zip](https://github.com/dotnet/winforms/files/4273713/Narrator_Not_Annouce_control_type.zip)\r\n\r\n2.\tBuild and run this application. \r\n3.\tStart Narrator and focus on TextBox, observe Narrator behavior.\r\n\r\n**Actual behavior:**\r\nNarrator cannot announce localized control type of TextBox, it just announces “edit”, missing “TextBox”.\r\n![Actual](https://user-images.githubusercontent.com/45864017/75650624-6738a400-5c91-11ea-9e7e-83b9848fb1b7.png)\r\n\r\n**Expected behavior:**\r\nNarrator should announce localized control type of TextBox. The behavior should be like below:\r\n![Expected](https://user-images.githubusercontent.com/45864017/75650725-c0a0d300-5c91-11ea-94dd-b9d535de8d38.png)","Url":"https://github.com/dotnet/winforms/issues/2933","RelatedDescription":"Open issue \"[Accessibility]Narrator cannot announce localized control type of TextBox/MaskedTextBox\" (#2933)"},{"Id":"573563458","IsPullRequest":true,"CreatedAt":"2020-03-01T15:14:43","Actor":"gpetrou","Number":"2930","RawContent":null,"Title":"Add DTN enum to Interop ComCtl32","State":"open","Body":"## Proposed changes\r\n\r\n- Add DTN enum to Interop ComCtl32.\r\n- Remove DTN constants and replace their usages with the above enum values.\r\n- Remove usused LPSTR_TEXTCALLBACK, STATUS_PENDING, FRERR_BUFFERLENGTHZERO and HDS_FULLDRAG constants.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2930)","Url":"https://github.com/dotnet/winforms/pull/2930","RelatedDescription":"Open PR \"Add DTN enum to Interop ComCtl32\" (#2930)"},{"Id":"573542714","IsPullRequest":true,"CreatedAt":"2020-03-01T13:21:21","Actor":"dotnet-maestro[bot]","Number":"2928","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200229.1\r\n- **Date Produced**: 2/29/2020 2:10 PM\r\n- **Commit**: 86e54fb5076d46a6f959f0329d53c1c72e2280df\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20129.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2928)","Url":"https://github.com/dotnet/winforms/pull/2928","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2928)"},{"Id":"573290306","IsPullRequest":true,"CreatedAt":"2020-02-29T13:16:22","Actor":"dotnet-maestro[bot]","Number":"2927","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200228.3\r\n- **Date Produced**: 2/29/2020 12:26 AM\r\n- **Commit**: 5966c5dd9deb5aca8fd8183eec454cf6cf864d14\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20128.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2927)","Url":"https://github.com/dotnet/winforms/pull/2927","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2927)"},{"Id":"572988125","IsPullRequest":false,"CreatedAt":"2020-02-28T20:29:39","Actor":"weltkante","Number":"2926","RawContent":null,"Title":"Tests always run x64 in VS (even when selecting x86)","State":"open","Body":"### Problem ###\r\n\r\nPR #2851 will introduce tests specific to x86/x64 environments but winforms build infrastructure is broken and always runs tests in x64 when running within Visual Studio, even when explicitly selecting x86 in the VS test explorer toolbar.\r\n\r\n### Workaround ###\r\nrun tests from console via `.\\build.cmd -platform x86 -test`\r\n\r\n### Root Cause / Fix ###\r\n* this was a bug in VS which has been fixed in 16.4\r\n* you [need to update](https://github.com/xunit/visualstudio.xunit/issues/148#issuecomment-579156956) the nuget package `Microsoft.Net.Test.Sdk` to version 16.4 or newer\r\n  * currently this package is pulled in by the SDK in version 16.1.1, so you either need to update the SDK or override the nuget package import\r\n* even when importing the package with the fix you'll still run into an error because winforms only installs the x64 sdk when running the build scripts; you also need to install the x86 sdk or VS complains\r\n  * according to [this log](https://github.com/dotnet/aspnetcore/issues/16664#issuecomment-553601518) it looks like aspnetcore already is able to install both sdks, so you should be able to do something similar\r\n\r\n### Proof of Concept ###\r\n* edit `System.Windows.Forms.Primitives.Tests.csproj` and add an explicit package reference `<PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.4\" />`\r\n* download and install the [x86 sdk](https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.0-alpha1-19514/dotnet-sdk-5.0.0-alpha1-19514-win-x64.exe) manually\r\n* observe that you can now run both `PRINTDLGW_32_ensure_layout` and `PRINTDLGW_64_ensure_layout` from PR #2851 inside VS (you can switch the bitness of the test runner in the test explorer toolbar)","Url":"https://github.com/dotnet/winforms/issues/2926","RelatedDescription":"Open issue \"Tests always run x64 in VS (even when selecting x86)\" (#2926)"},{"Id":"572741671","IsPullRequest":true,"CreatedAt":"2020-02-28T13:16:24","Actor":"dotnet-maestro[bot]","Number":"2924","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200227.9\r\n- **Date Produced**: 2/27/2020 11:49 PM\r\n- **Commit**: 9c66925c608f3c0ee3e1f66c05943865b64590e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20127.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2924)","Url":"https://github.com/dotnet/winforms/pull/2924","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2924)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-06T05:31:00.1330959Z","RunDurationInMilliseconds":790}