{"Data":{"GitHub":{"Issues":[{"Id":"566631748","IsPullRequest":true,"CreatedAt":"2020-02-18T04:03:35","Actor":"Tanya-Solyanik","Number":"2869","RawContent":null,"Title":"Read Name property instead of name field when serializing ColumnHeader.Name ","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2867 \r\n\r\n\r\n## Proposed changes\r\n\r\nThe `name` field is not set in this code, however it is read in ShouldSerializeName. Thus ShouldSerialize always returns `false` and ColumnHeader names are never serialized into `InitializeComponent` method. Thus `Name` property is always null at run time. However this property is used as a key  when accessing column display order. See issue for details. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nlistView1.Columns.IndexOfKey(\"columnHeader1\") - always return `-1`\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-Winforms Core designer will be generating different code compared to the Framework designer.  \r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nUnit test\r\n \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2869)","Url":"https://github.com/dotnet/winforms/pull/2869","RelatedDescription":"Open PR \"Read Name property instead of name field when serializing ColumnHeader.Name \" (#2869)"},{"Id":"565785591","IsPullRequest":true,"CreatedAt":"2020-02-18T03:56:40","Actor":"gpetrou","Number":"2860","RawContent":null,"Title":"Add NIM enum to Interop Shell32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add NIM enum to Interop Shell32.\r\n- Remove NIM constants and replace their usages with the above enum values.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2860)","Url":"https://github.com/dotnet/winforms/pull/2860","RelatedDescription":"Closed or merged PR \"Add NIM enum to Interop Shell32\" (#2860)"},{"Id":"566142956","IsPullRequest":false,"CreatedAt":"2020-02-18T03:48:42","Actor":"vsfeedback","Number":"2866","RawContent":null,"Title":"Problema com ListView","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/887266/problema-com-listview.html)._\n\n---\nBom dia á todos, o que ocorre é o seguinte, quando inserimos um controle **ListView em um Form VB**, acontece que eu declaro em **Design as colunas deste ListView e sempre coloco na propriedade (Name) das colunas** um nome realtivo á esta coluna, até aí tudo bem em _Design_!\n\nMas o problema suge no momento em **Execução**, sendo que em execução todas as propriedades (Name) das colunas se torna uma **string vazia**, então o que acontece acredito seja um problema no VB, pois em **Design o mesmo mantém os campos das colunas da ListView (Name)** só que em execução perdemos estes campos!\n\nEntão fiz o teste de adicionar na programação todos os campos das colunas (Name) e os mesmos colocando na programação se mantém em todo o processo da execução, então vejo que o problema é manter o mesmo que foi feito em Design também em execução!\n\nEspero que tenham compreendido a minha explicação e que isso realmente seja um porblema que possa ser corrigido em uma atualização futura!\n\nGrato,\nRenato\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 1/17/2020, 07:42 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Zheng Li [MSFT] on 1/19/2020, 10:15 AM: \n\n<p>Dear customer, thanks for your feedback.</p>\n<p>I can’t repoduce the issue accordind to ypur description, Please see the reproduce  gif, and figure out if there have wrong steps. And could you please provide more info for us to investigate the issue in the future, such as your reproduce Video, or reproduce gif.</p>\n<p>In addtion, have you have the same experience in before, such VS 16.2, VS 2017. And if the issue also can reproduce on C# Windows Form Application.</p>\n<p>Repro Gif:</p><p><img src=\"https://developercommunity.visualstudio.com/storage/temp/114635-feedback.gif\">Thanks</p><p>\nZheng</p>\n\n#### Renato Maia on 1/23/2020, 00:52 AM: \n\nSee that the program is running without change and with its column names declared in the control, but as soon as it is executed, it no longer has this information! So I put the name of the columns in code and it doesn&#39;t lose in execution!\n#### Renato Maia on 1/21/2020, 07:16 PM: \n\nGood morning my friend, thanks for the feedback you gave and the work you had in making a GIF of the procedure, well what I can say you did correctly what is happening, but the problem is generated when the application is running , because when running these Listview columns (Name) are completely reset (string.empty), that is, you don&#39;t have any more information about them running, so you must insert them again in code, so the system keeps these columns (Name) in Listview! So I can use the columns .IndexOfKey, because I believe that you remember more (name) than Interger to return it!<br><br>* I using Google Translate for creat this text!\n#### Zheng Li [MSFT] on 1/22/2020, 11:00 AM: \n\n<p>Dear customer, thankk for your response.</p>\n<p>For the issue, could you please provide more details for use? such as your repro reproduce steps/Gif/Video etc.</p>\n<p>There have some confused that about the “The issue generated when application is runing”,what’s meaning? it’s that calling the columns(Name) in running? how to implement it?</p>\n<p>Will be appreciate if you also can provide your project for us to investigate the issuein future?</p>\n<p>Thanks<br>\nZheng</p>\n\n#### Zheng Li [MSFT] on 2/5/2020, 04:25 PM: \n\n<p>Thanks for your response, Ciould you please provide reproduce steps &amp; project for us tp investigate the issue in tthe future.</p>\n<p>Thanks<br>\nZheng</p>\n\n#### Visual Studio Feedback System on 2/12/2020, 08:17 PM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n#### Renato Maia on 2/13/2020, 00:53 AM: \n\nHi friend, i send details of problem to user Zheng Li, no have more details with me! I send the video of project and see the problem!\n#### Zheng Li [MSFT] on 2/17/2020, 02:29 PM: \n\n<p>Dear customer, thanks for your help and details info.</p>\n<p>For the issue, we found the root cause is that Docs say that ColumnHeaderCollection.IndexOfKey uses <a target='_blank' href=\"http://ColumnHeader.Name\">ColumnHeader.Name</a> property as the key. However designer does not generate ‘<a target='_blank' href=\"http://columnHeader1.Name\">columnHeader1.Name</a> =”columnHeader1”; line in InitializeComponent in designer.cs. As a result, runtime does not have this value and uses an empty string as a key in the columns collection.</p>\n<p>And we provide the workaround for now, please refer it, and we are investigate it for now, will give you a response once have ny process.</p>\n<p><strong>Workaround</strong><br>\nSo when I do this:<br>\npublic Form1()<br>\n{<br>\nInitializeComponent();<br>\n<a target='_blank' href=\"http://columnHeader1.Name\">columnHeader1.Name</a> = “columnHeader1”;<br>\n<a target='_blank' href=\"http://columnHeader2.Name\">columnHeader2.Name</a> = “columnHeader2”;<br>\n}</p>\n<pre><code>    private void button1_Click(object sender, EventArgs e)\n    {\n        Text = &quot;IndexofKey &quot; + listView1.Columns.IndexOfKey(&quot;columnHeader1&quot;);\n    }\n</code></pre>\n<p>This code works as expected and returns 0.</p>\n<p>Thanks<br>\nZheng</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/2866","RelatedDescription":"Closed issue \"Problema com ListView\" (#2866)"},{"Id":"564897778","IsPullRequest":true,"CreatedAt":"2020-02-18T01:06:35","Actor":"hughbe","Number":"2854","RawContent":null,"Title":"Add DomainUpDown tests and remove dead code","State":"closed","Body":"## Proposed Changes\r\n- Add DomainUpDown tests and remove dead code\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2854)","Url":"https://github.com/dotnet/winforms/pull/2854","RelatedDescription":"Closed or merged PR \"Add DomainUpDown tests and remove dead code\" (#2854)"},{"Id":"565937449","IsPullRequest":true,"CreatedAt":"2020-02-18T01:03:49","Actor":"hughbe","Number":"2864","RawContent":null,"Title":"Cleanup UpDownBase","State":"closed","Body":"## Proposed Changes\r\n- Cleanup UpDownBase\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2864)","Url":"https://github.com/dotnet/winforms/pull/2864","RelatedDescription":"Closed or merged PR \"Cleanup UpDownBase\" (#2864)"},{"Id":"566284279","IsPullRequest":true,"CreatedAt":"2020-02-17T13:16:45","Actor":"dotnet-maestro[bot]","Number":"2868","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200216.1\r\n- **Date Produced**: 2/16/2020 2:07 PM\r\n- **Commit**: 2086e534f12e6116889ee480646ef54c1f781887\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20116.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2868)","Url":"https://github.com/dotnet/winforms/pull/2868","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2868)"},{"Id":"566143432","IsPullRequest":false,"CreatedAt":"2020-02-17T08:45:58","Actor":"vsfeedback","Number":"2867","RawContent":null,"Title":"`ListView.IndexOfKey()` returns incorrect value","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/887266/problema-com-listview.html)._\n\n---\nBom dia á todos, o que ocorre é o seguinte, quando inserimos um controle **ListView em um Form VB**, acontece que eu declaro em **Design as colunas deste ListView e sempre coloco na propriedade (Name) das colunas** um nome realtivo á esta coluna, até aí tudo bem em _Design_!\n\nMas o problema suge no momento em **Execução**, sendo que em execução todas as propriedades (Name) das colunas se torna uma **string vazia**, então o que acontece acredito seja um problema no VB, pois em **Design o mesmo mantém os campos das colunas da ListView (Name)** só que em execução perdemos estes campos!\n\nEntão fiz o teste de adicionar na programação todos os campos das colunas (Name) e os mesmos colocando na programação se mantém em todo o processo da execução, então vejo que o problema é manter o mesmo que foi feito em Design também em execução!\n\nEspero que tenham compreendido a minha explicação e que isso realmente seja um porblema que possa ser corrigido em uma atualização futura!\n\nGrato,\nRenato\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 1/17/2020, 07:42 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Zheng Li [MSFT] on 1/19/2020, 10:15 AM: \n\n<p>Dear customer, thanks for your feedback.</p>\n<p>I can’t repoduce the issue accordind to ypur description, Please see the reproduce  gif, and figure out if there have wrong steps. And could you please provide more info for us to investigate the issue in the future, such as your reproduce Video, or reproduce gif.</p>\n<p>In addtion, have you have the same experience in before, such VS 16.2, VS 2017. And if the issue also can reproduce on C# Windows Form Application.</p>\n<p>Repro Gif:</p><p><img src=\"https://developercommunity.visualstudio.com/storage/temp/114635-feedback.gif\">Thanks</p><p>\nZheng</p>\n\n#### Renato Maia on 1/23/2020, 00:52 AM: \n\nSee that the program is running without change and with its column names declared in the control, but as soon as it is executed, it no longer has this information! So I put the name of the columns in code and it doesn&#39;t lose in execution!\n#### Renato Maia on 1/21/2020, 07:16 PM: \n\nGood morning my friend, thanks for the feedback you gave and the work you had in making a GIF of the procedure, well what I can say you did correctly what is happening, but the problem is generated when the application is running , because when running these Listview columns (Name) are completely reset (string.empty), that is, you don&#39;t have any more information about them running, so you must insert them again in code, so the system keeps these columns (Name) in Listview! So I can use the columns .IndexOfKey, because I believe that you remember more (name) than Interger to return it!<br><br>* I using Google Translate for creat this text!\n#### Zheng Li [MSFT] on 1/22/2020, 11:00 AM: \n\n<p>Dear customer, thankk for your response.</p>\n<p>For the issue, could you please provide more details for use? such as your repro reproduce steps/Gif/Video etc.</p>\n<p>There have some confused that about the “The issue generated when application is runing”,what’s meaning? it’s that calling the columns(Name) in running? how to implement it?</p>\n<p>Will be appreciate if you also can provide your project for us to investigate the issuein future?</p>\n<p>Thanks<br>\nZheng</p>\n\n#### Zheng Li [MSFT] on 2/5/2020, 04:25 PM: \n\n<p>Thanks for your response, Ciould you please provide reproduce steps &amp; project for us tp investigate the issue in tthe future.</p>\n<p>Thanks<br>\nZheng</p>\n\n#### Visual Studio Feedback System on 2/12/2020, 08:17 PM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n#### Renato Maia on 2/13/2020, 00:53 AM: \n\nHi friend, i send details of problem to user Zheng Li, no have more details with me! I send the video of project and see the problem!\n#### Zheng Li [MSFT] on 2/17/2020, 02:29 PM: \n\n<p>Dear customer, thanks for your help and details info.</p>\n<p>For the issue, we found the root cause is that Docs say that ColumnHeaderCollection.IndexOfKey uses <a target='_blank' href=\"http://ColumnHeader.Name\">ColumnHeader.Name</a> property as the key. However designer does not generate ‘<a target='_blank' href=\"http://columnHeader1.Name\">columnHeader1.Name</a> =”columnHeader1”; line in InitializeComponent in designer.cs. As a result, runtime does not have this value and uses an empty string as a key in the columns collection.</p>\n<p>And we provide the workaround for now, please refer it, and we are investigate it for now, will give you a response once have ny process.</p>\n<p><strong>Workaround</strong><br>\nSo when I do this:<br>\npublic Form1()<br>\n{<br>\nInitializeComponent();<br>\n<a target='_blank' href=\"http://columnHeader1.Name\">columnHeader1.Name</a> = “columnHeader1”;<br>\n<a target='_blank' href=\"http://columnHeader2.Name\">columnHeader2.Name</a> = “columnHeader2”;<br>\n}</p>\n<pre><code>    private void button1_Click(object sender, EventArgs e)\n    {\n        Text = &quot;IndexofKey &quot; + listView1.Columns.IndexOfKey(&quot;columnHeader1&quot;);\n    }\n</code></pre>\n<p>This code works as expected and returns 0.</p>\n<p>Thanks<br>\nZheng</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/2867","RelatedDescription":"Open issue \"`ListView.IndexOfKey()` returns incorrect value\" (#2867)"},{"Id":"565947333","IsPullRequest":true,"CreatedAt":"2020-02-16T18:27:59","Actor":"hughbe","Number":"2865","RawContent":null,"Title":"Cleanup single line getters/setters","State":"open","Body":"## Proposed Changes\r\n- Cleanup single line getters/setters\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2865)","Url":"https://github.com/dotnet/winforms/pull/2865","RelatedDescription":"Open PR \"Cleanup single line getters/setters\" (#2865)"},{"Id":"565916059","IsPullRequest":false,"CreatedAt":"2020-02-16T14:43:28","Actor":"NikolaosWakem","Number":"2863","RawContent":null,"Title":"Application crash when using .ocx with events that have ref objects, works in Framework - System.Windows.Forms.AxHost","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n3.0 & 3.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nUsing ActiveX .ocx  user control that has specifically not null, ref objects passed on events crashes entire application due to corrupt memory - Same code works in Framework\r\n\r\n**Expected behavior:**\r\n\r\nref object is not corrupt on return to OCX after calling event inside core application\r\n\r\n**Minimal repro:**\r\n```\r\nusing System;\r\nusing System.Windows.Forms;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        [STAThread]\r\n        static void Main(string[] args)\r\n        {\r\n            var c = new WindowsFormsControlLibrary1.UserControl1();\r\n            c.CreateControl();\r\n            c.TestEventByRef += C_TestEventByRef;\r\n            c.WithObjectByRefTestEvent();\r\n            c.Dispose();\r\n\r\n            var c2 = new AxAxolotl.AxTestControl();\r\n            c2.CreateControl();\r\n            c2.TestEventByRef += axTestControl1_TestEventByRef;\r\n            c2.WithObjectByRefTestEvent();\r\n            c2.Dispose();\r\n        }\r\n\r\n        private static void C_TestEventByRef(object sender, WindowsFormsControlLibrary1.TestEventByRefEventArgs e)\r\n        {\r\n            e.TestObject = new WindowsFormsControlLibrary1.TestObject { Text = \"Framework Out\" };\r\n        }\r\n\r\n        private static void axTestControl1_TestEventByRef(object sender, AxAxolotl.__TestControl_TestEventByRefEvent e)\r\n        {\r\n            MessageBox.Show(e.column.Text);\r\n\r\n            e.column = new Axolotl.CTestObject { Text = \"OCX Out\" };\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\nexample winforms control that works in framework and core\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Drawing;\r\nusing System.Data;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.Windows.Forms;\r\n\r\nnamespace WindowsFormsControlLibrary1\r\n{\r\n    public class TestEventByRefEventArgs : EventArgs\r\n    {\r\n        public TestObject TestObject { get; set; }\r\n    }\r\n\r\n    public partial class UserControl1 : UserControl\r\n    {\r\n        public event EventHandler<TestEventByRefEventArgs> TestEventByRef;\r\n\r\n        public UserControl1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        public void WithObjectByRefTestEvent()\r\n        {\r\n            var testObject = new TestObject { Text = \"In\" };\r\n\r\n            var testEventByRefEventArgs = new TestEventByRefEventArgs { TestObject = testObject };\r\n\r\n            TestEventByRef?.Invoke(this, testEventByRefEventArgs);\r\n\r\n            MessageBox.Show(testEventByRefEventArgs.TestObject.Text);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\nexample OCX (in VB6) control that works in framework by crashes in core\r\n\r\n```\r\nOption Explicit\r\n\r\nEvent TestEventByRef(ByRef Column As CTestObject)\r\n\r\nPublic Sub WithObjectByRefTestEvent()\r\n    Dim a As CTestObject\r\n    Set a = New CTestObject\r\n    a.Text = \"OCX In\"\r\n    RaiseEvent TestEventByRef(a)\r\n    MsgBox a.Text\r\nEnd Sub\r\n```\r\n\r\n\r\n// CTestObject.cls\r\n```\r\nOption Explicit\r\n\r\nPublic Text As String\r\n```\r\n\r\nHere is a repro in a zip\r\n\r\nhttps://axolotl.blob.core.windows.net/issue2863/Issue2863.zip\r\n\r\nyou have to first register the .ocx \"regsvr32 Issue2863\\VB6OCX\\Axolotl.TestControl.ocx\"\r\n\r\nthen run ConsoleApp1 (core) in debug with exceptions turned on.. (ConsoleApp2 is framework and works)\r\n\r\nIssue2863\\VB6OCX\\Axolotl.TestControl.ctl\r\n\r\nMsgBox a.Text <== a is corrupt\r\n\r\nException thrown at 0x11001F16 (Axolotl.TestControl.ocx) in ConsoleApp1.exe: 0xC0000005: Access violation reading location 0x00000000. occurred\r\n","Url":"https://github.com/dotnet/winforms/issues/2863","RelatedDescription":"Open issue \"Application crash when using .ocx with events that have ref objects, works in Framework - System.Windows.Forms.AxHost\" (#2863)"},{"Id":"565901666","IsPullRequest":true,"CreatedAt":"2020-02-16T13:16:40","Actor":"dotnet-maestro[bot]","Number":"2862","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200215.1\r\n- **Date Produced**: 2/15/2020 2:11 PM\r\n- **Commit**: e133be6cf759f6badf7bc4052118ad8197eb03bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20115.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2862)","Url":"https://github.com/dotnet/winforms/pull/2862","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2862)"},{"Id":"565799397","IsPullRequest":false,"CreatedAt":"2020-02-15T19:45:01","Actor":"oswaldtech","Number":"2861","RawContent":null,"Title":"Add a generic host lifetime for Windows Forms","State":"open","Body":"Enterprise customers want to keep using Windows Forms, and we want to use the generic host.\r\n\r\nCan we add a feature to use the generic host with Windows Forms and use the lifetime of the start up form such as this library I created?\r\n\r\nhttps://github.com/oswald-technologies/WindowsFormsLifetime\r\n\r\nhttps://github.com/dotnet/extensions/issues/2949","Url":"https://github.com/dotnet/winforms/issues/2861","RelatedDescription":"Open issue \"Add a generic host lifetime for Windows Forms\" (#2861)"},{"Id":"565779212","IsPullRequest":true,"CreatedAt":"2020-02-15T17:04:25","Actor":"jnm2","Number":"2859","RawContent":null,"Title":"[Reference] Add FileDialog.ClientGuid","State":"open","Body":"DO NOT MERGE\r\n\r\nReference implementation for proposal https://github.com/dotnet/winforms/issues/2858\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2859)","Url":"https://github.com/dotnet/winforms/pull/2859","RelatedDescription":"Open PR \"[Reference] Add FileDialog.ClientGuid\" (#2859)"},{"Id":"565778777","IsPullRequest":false,"CreatedAt":"2020-02-15T17:01:34","Actor":"jnm2","Number":"2858","RawContent":null,"Title":"Proposal to expose FileDialog.ClientGuid","State":"open","Body":"### What it is\r\n\r\nFrom docs: [`IFileDialog::SetClientGuid`](\r\nhttps://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nf-shobjidl_core-ifiledialog-setclientguid) enables a calling application to associate a GUID with a dialog's persisted state. A dialog's state can include factors such as the last visited folder and the position and size of the dialog. Typically, this state is persisted based on the name of the executable file. By specifying a GUID, an application can have different persisted states for different versions of the dialog within the same application (for example, an import dialog and an open dialog).\r\n\r\nExposing `IFileDialog::SetClientGuid` is in line with one of the aims which [contributing guide](https://github.com/dotnet/winforms/blob/master/Documentation/contributing.md) calls out for .NET 5.0 and beyond:\r\n\r\n> [U]pdate implementations to deliver all aspects of modern Windows UI, including missings properties or actions\r\n\r\n### API proposal\r\n\r\nDraft implementation: https://github.com/dotnet/winforms/pull/2859\r\n\r\n```diff\r\nnamespace System.Windows.Forms\r\n{\r\n    public abstract partial class FileDialog : CommonDialog\r\n    {\r\n        // Public instance properties\r\n        public bool AddExtension { get; set; }\r\n        public virtual bool CheckFileExists { get; set; }\r\n        public bool CheckPathExists { get; set; }\r\n+       public System.Guid? ClientGuid { get; set; }\r\n        public string DefaultExt { get; set; }\r\n        public bool DereferenceLinks { get; set; }\r\n        public string FileName { get; set; }\r\n        public string[] FileNames { get; }\r\n        public string Filter { get; set; }\r\n        public int FilterIndex { get; set; }\r\n        public string InitialDirectory { get; set; }\r\n        public bool RestoreDirectory { get; set; }\r\n        public bool ShowHelp { get; set; }\r\n        public bool SupportMultiDottedExtensions { get; set; }\r\n        public bool Title { get; set; }\r\n        public bool ValidateNames { get; set; }\r\n    }\r\n}\r\n```\r\n\r\n### Lack of alternatives\r\n\r\nWe were recently in a situation where the use case fit the SetClientGuid concept perfectly. In our plugin for an application which is not published by us, our file dialogs needed to track and open to a last-used import directory without affecting the initial directory of the existing file dialogs across the base application. The base application doesn't set the initial directory when it shows a file dialog. Windows shares the state of all dialogs which have no client GUID across the whole app. The only way to keep our dialogs from overwriting the last-used directory for all the dialogs across the base application was to use SetClientGuid.\r\n\r\nBecause Windows Forms does not expose this capability, nor does it even provide a hook we could use to obtain the object instance to make COM calls on, I ended up taking a few hours and implementing our own file dialog library with a ClientGuid property.\r\n\r\n📝 If we were in a situation where we had control over the code in the base application that showed file dialogs, one alternative would be to save and restore FileDialog.InitialDirectory to two separate storage locations. This feels more like a hack than idiomatic use of the Windows file dialog feature.\r\n\r\n### Template questions\r\n\r\n> Will this feature affect UI controls?\r\n\r\n**Yes**, Windows saves and restores initial directory and dialog screen position with the application name as the key. This feature would enable opting in to using an arbitrary GUID as the key instead of the application name.\r\n\r\n> Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\n\r\n**No**, `[Browsable(false)]` should be fine. On the other hand, the property grid's default behavior for a property of type `System.Guid?` might be desirable. We could even be fancy and add an editor button that sets the property to `Guid.NewGuid()`.\r\n\r\n> What impact will it have on accessibility?\r\n\r\n**None.**\r\n\r\n> Will this feature need to be localized or be localizable?\r\n\r\nJust the SRDescriptionAttribute on the new property, I think? At runtime, **no**.","Url":"https://github.com/dotnet/winforms/issues/2858","RelatedDescription":"Open issue \"Proposal to expose FileDialog.ClientGuid\" (#2858)"},{"Id":"565745232","IsPullRequest":true,"CreatedAt":"2020-02-15T13:16:39","Actor":"dotnet-maestro[bot]","Number":"2857","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2857)","Url":"https://github.com/dotnet/winforms/pull/2857","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2857)"},{"Id":"563985219","IsPullRequest":true,"CreatedAt":"2020-02-14T21:55:36","Actor":"dotnet-maestro[bot]","Number":"2849","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200213.6\r\n- **Date Produced**: 2/13/2020 9:22 PM\r\n- **Commit**: ba6bfb25914e3434264352dd24ba00b406d23393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20113.6\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2849)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2849","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2849)"},{"Id":"565047535","IsPullRequest":false,"CreatedAt":"2020-02-14T01:25:35","Actor":"RussKie","Number":"2856","RawContent":null,"Title":"Flaky tests: `GroupBoxTests.GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected`","State":"open","Body":"\r\n**Problem description:**\r\n\r\n`GroupBoxTests.GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected` sporadically yet regularly fail in the internal CI\r\nE.g.:\r\n* https://dev.azure.com/dnceng/internal/_build/results?buildId=520646&view=results\r\n* https://dev.azure.com/dnceng/internal/_build/results?buildId=515654&view=results\r\n\r\nUpon re-run the test typically pass.\r\n\r\n```\r\nxUnit.net Console Runner v2.4.1 (64-bit .NET Core 5.0.0-alpha1.19514.1)\r\n  Discovering: System.Windows.Forms.Tests\r\n  Discovered:  System.Windows.Forms.Tests\r\n  Starting:    System.Windows.Forms.Tests\r\n    System.Windows.Forms.Tests.ApplicationTests.Application_VisualStyleState_Set_ReturnsExpected [SKIP]\r\n      Deadlock, see: https://github.com/dotnet/winforms/issues/2192\r\nUnhandled exception. Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 41\r\n   at Xunit.Assert.Equal[T](T expected, T actual) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 25\r\n   at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithHandleWithVisualStyles_GetReturnsExpected>b__21_0(String valueString, String boolStrings, String intStrings) in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs:line 752\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(String[] args) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Program.cs:line 91\r\n    System.Windows.Forms.Tests.GroupBoxTests.GroupBox_FlatStyle_SetWithHandleWithVisualStyles_GetReturnsExpected(valueParam: System, containerControlParam: True, ownerDrawParam: False, userMouseParam: False, expectedInvalidatedCallCountParam: 1, expectedCreatedCallCountParam: 1) [FAIL]\r\n      Microsoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n      Stack Trace:\r\n        \r\n        Child exception:\r\n          Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n        Expected: 1\r\n        Actual:   0\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs(752,0): at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithHandleWithVisualStyles_GetReturnsExpected>b__21_0(String valueString, String boolStrings, String intStrings)\r\n        \r\n        Child process:\r\n          System.Windows.Forms.Tests, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 System.Windows.Forms.Tests.GroupBoxTests+<>c Void <GroupBox_FlatStyle_SetWithHandleWithVisualStyles_GetReturnsExpected>b__21_0(System.String, System.String, System.String)\r\n        \r\n        Child arguments:\r\n          System, True,False,False, 1,1\r\n        \r\nUnhandled exception. Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 41\r\n   at Xunit.Assert.Equal[T](T expected, T actual) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 25\r\n   at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(String oldValueString, String valueString, String boolStrings, String intStrings) in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs:line 884\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(String[] args) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Program.cs:line 91\r\n    System.Windows.Forms.Tests.GroupBoxTests.GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected(oldValueParam: Flat, valueParam: System, containerControlParam: True, ownerDrawParam: False, userMouseParam: False, expectedInvalidatedCallCountParam: 1, expectedCreatedCallCountParam: 1) [FAIL]\r\n      Microsoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n      Stack Trace:\r\n        \r\n        Child exception:\r\n          Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n        Expected: 1\r\n        Actual:   0\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs(884,0): at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(String oldValueString, String valueString, String boolStrings, String intStrings)\r\n        \r\n        Child process:\r\n          System.Windows.Forms.Tests, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 System.Windows.Forms.Tests.GroupBoxTests+<>c Void <GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(System.String, System.String, System.String, System.String)\r\n        \r\n        Child arguments:\r\n          Flat, System, True,False,False, 1,1\r\n        \r\nUnhandled exception. Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 41\r\n   at Xunit.Assert.Equal[T](T expected, T actual) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 25\r\n   at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(String oldValueString, String valueString, String boolStrings, String intStrings) in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs:line 884\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(String[] args) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Program.cs:line 91\r\n    System.Windows.Forms.Tests.GroupBoxTests.GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected(oldValueParam: Popup, valueParam: System, containerControlParam: True, ownerDrawParam: False, userMouseParam: False, expectedInvalidatedCallCountParam: 1, expectedCreatedCallCountParam: 1) [FAIL]\r\n      Microsoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n      Stack Trace:\r\n        \r\n        Child exception:\r\n          Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n        Expected: 1\r\n        Actual:   0\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs(884,0): at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(String oldValueString, String valueString, String boolStrings, String intStrings)\r\n        \r\n        Child process:\r\n          System.Windows.Forms.Tests, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 System.Windows.Forms.Tests.GroupBoxTests+<>c Void <GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(System.String, System.String, System.String, System.String)\r\n        \r\n        Child arguments:\r\n          Popup, System, True,False,False, 1,1\r\n        \r\nUnhandled exception. Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 41\r\n   at Xunit.Assert.Equal[T](T expected, T actual) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 25\r\n   at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(String oldValueString, String valueString, String boolStrings, String intStrings) in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs:line 884\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(String[] args) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Program.cs:line 91\r\n    System.Windows.Forms.Tests.GroupBoxTests.GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected(oldValueParam: Standard, valueParam: System, containerControlParam: True, ownerDrawParam: False, userMouseParam: False, expectedInvalidatedCallCountParam: 1, expectedCreatedCallCountParam: 1) [FAIL]\r\n      Microsoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n      Stack Trace:\r\n        \r\n        Child exception:\r\n          Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n        Expected: 1\r\n        Actual:   0\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/GroupBoxTests.cs(884,0): at System.Windows.Forms.Tests.GroupBoxTests.<>c.<GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(String oldValueString, String valueString, String boolStrings, String intStrings)\r\n        \r\n        Child process:\r\n          System.Windows.Forms.Tests, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 System.Windows.Forms.Tests.GroupBoxTests+<>c Void <GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected>b__23_0(System.String, System.String, System.String, System.String)\r\n        \r\n        Child arguments:\r\n          Standard, System, True,False,False, 1,1\r\n        \r\n  Finished:    System.Windows.Forms.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Windows.Forms.Tests  Total: 46240, Errors: 0, Failed: 4, Skipped: 1, Time: 90.474s\r\n=== COMMAND LINE ===\r\n\"F:\\workspace\\_work\\1\\s\\.dotnet\\dotnet.exe\" exec --depsfile \"F:\\workspace\\_work\\1\\s\\artifacts\\bin\\System.Windows.Forms.Tests\\Release\\netcoreapp5.0\\System.Windows.Forms.Tests.deps.json\" --runtimeconfig \"F:\\workspace\\_work\\1\\s\\artifacts\\bin\\System.Windows.Forms.Tests\\Release\\netcoreapp5.0\\System.Windows.Forms.Tests.runtimeconfig.json\"  \"F:\\workspace\\_work\\1\\s\\.packages\\xunit.runner.console/2.4.1/tools/netcoreapp2.0/xunit.console.dll\" \"F:\\workspace\\_work\\1\\s\\artifacts\\bin\\System.Windows.Forms.Tests\\Release\\netcoreapp5.0\\System.Windows.Forms.Tests.dll\" -noautoreporters -xml \"F:\\workspace\\_work\\1\\s\\artifacts\\TestResults\\Release\\System.Windows.Forms.Tests_netcoreapp5.0_x64.xml\" -html \"F:\\workspace\\_work\\1\\s\\artifacts\\TestResults\\Release\\System.Windows.Forms.Tests_netcoreapp5.0_x64.html\"  > \"F:\\workspace\\_work\\1\\s\\artifacts\\log\\Release\\System.Windows.Forms.Tests_netcoreapp5.0_x64.log\" 2>&1\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nTests pass.\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/2856","RelatedDescription":"Open issue \"Flaky tests: `GroupBoxTests.GroupBox_FlatStyle_SetWithCustomOldValueWithHandleWithVisualStyles_GetReturnsExpected`\" (#2856)"},{"Id":"565027058","IsPullRequest":true,"CreatedAt":"2020-02-14T00:38:38","Actor":"dotnet-maestro[bot]","Number":"2855","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: a2a5ea62-d9bf-419c-0c86-08d7315b512a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.20113.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2855)","Url":"https://github.com/dotnet/winforms/pull/2855","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#2855)"},{"Id":"564532406","IsPullRequest":false,"CreatedAt":"2020-02-13T08:58:28","Actor":"M-Lipin","Number":"2853","RawContent":null,"Title":"Prevent throwing error on reset DataGridView current cell address while binding with DataSource","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n\r\nThe issue is that in some circumstances there is an error when showing the DataGridView control that is already has a DataSource bound. On control show binding is reset which may lead to an error while resetting current cell to -1;-1 coordinates.\r\n\r\nAn error is shown on form opening / control showing:\r\n_\"Operation is not valid because it results in a reentrant call to the SetCurrentCellAddressCore function.\"_\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nStacktrace:\r\n```\r\nSystem.Windows.Forms!System.Windows.Forms.DataGridView.SetCurrentCellAddressCore in DataGridViewMethods.cs\r\nat System.Windows.Forms!System.Windows.Forms.DataGridView.set_CurrentCell in DataGridView.cs\r\nat System.Windows.Forms!System.Windows.Forms.DataGridView.OnBindingContextChanged in DataGridViewMethods.cs\r\nat System.Windows.Forms!System.Windows.Forms.Control.CreateControl in Control.cs\r\nat System.Windows.Forms!System.Windows.Forms.Control.WmShowWindow in Control.cs\r\nat System.Windows.Forms!System.Windows.Forms.Control.WndProc in Control.cs\r\nat System.Windows.Forms!System.Windows.Forms.DataGridView.WndProc in DataGridViewMethods.cs\r\n```\r\n\r\n**Expected behavior:**\r\nThere should be no error.\r\n\r\n**Minimal repro:**\r\nTo be found.","Url":"https://github.com/dotnet/winforms/issues/2853","RelatedDescription":"Open issue \"Prevent throwing error on reset DataGridView current cell address while binding with DataSource\" (#2853)"},{"Id":"564480804","IsPullRequest":false,"CreatedAt":"2020-02-13T08:03:19","Actor":"John-Qiao","Number":"2852","RawContent":null,"Title":"'StatusBar' class could not be found in System.Windows.Forms","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0.100-preview.1.20112.13\r\n\r\n* Have you experienced this same bug with .NET Framework?: No \r\n\r\n**Problem description:**\r\nCannot create the System.Windows.Forms.StatusBar class object in .NET Core 5.0 project.\r\n![StatusBar-5 0](https://user-images.githubusercontent.com/45864985/74408964-b0ef5500-4e70-11ea-8ee0-1f30406fd6ab.png)\r\n\r\n**More info:**\r\n1. This issue cannot repro in the latest NET Core 3.1 project.\r\n2. The System.Windows.Forms.StatusBarPanel class object cannot be created too.\r\n\r\n**Expected behavior:**\r\nCan create the System.Windows.Forms.StatusBar class object in .NET Core 5.0 project successfully.\r\n![StatusBar-3 1](https://user-images.githubusercontent.com/45864985/74408977-b9e02680-4e70-11ea-9b2b-39fbea868fd5.png)\r\n\r\n**Minimal repro:**\r\n1. Create a Winforms Core application.\r\n2. Open Form1.cs file and add the following code in Form1 class. \r\n        StatusBar ss = new StatusBar();\r\n3. Build the application.","Url":"https://github.com/dotnet/winforms/issues/2852","RelatedDescription":"Closed issue \"'StatusBar' class could not be found in System.Windows.Forms\" (#2852)"},{"Id":"564470482","IsPullRequest":true,"CreatedAt":"2020-02-13T06:32:47","Actor":"RussKie","Number":"2851","RawContent":null,"Title":"fix: `PrintDialog` not shown","State":"open","Body":"Resolves #2814\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- fix the interop imports\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `PrintDialog` is now shown as expected\r\n- \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2851)","Url":"https://github.com/dotnet/winforms/pull/2851","RelatedDescription":"Open PR \"fix: `PrintDialog` not shown\" (#2851)"},{"Id":"564430761","IsPullRequest":true,"CreatedAt":"2020-02-13T05:04:42","Actor":"gpetrou","Number":"2850","RawContent":null,"Title":"Move EndDialog to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move EndDialog to Interop User32.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2850)","Url":"https://github.com/dotnet/winforms/pull/2850","RelatedDescription":"Closed or merged PR \"Move EndDialog to Interop User32\" (#2850)"},{"Id":"563817062","IsPullRequest":true,"CreatedAt":"2020-02-13T04:55:06","Actor":"gpetrou","Number":"2847","RawContent":null,"Title":"Replace SendCallbackMessage with SendMessageW","State":"closed","Body":"## Proposed changes\r\n\r\n- Replace SendCallbackMessage with SendMessageW.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2847)","Url":"https://github.com/dotnet/winforms/pull/2847","RelatedDescription":"Closed or merged PR \"Replace SendCallbackMessage with SendMessageW\" (#2847)"},{"Id":"563815978","IsPullRequest":true,"CreatedAt":"2020-02-13T04:53:45","Actor":"gpetrou","Number":"2846","RawContent":null,"Title":"Move ERROR_INSUFFICIENT_BUFFER to Interop ERROR class","State":"closed","Body":"## Proposed changes\r\n\r\n- Move ERROR_INSUFFICIENT_BUFFER to Interop ERROR class.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2846)","Url":"https://github.com/dotnet/winforms/pull/2846","RelatedDescription":"Closed or merged PR \"Move ERROR_INSUFFICIENT_BUFFER to Interop ERROR class\" (#2846)"},{"Id":"563153230","IsPullRequest":false,"CreatedAt":"2020-02-12T22:25:20","Actor":"AlexNek","Number":"2842","RawContent":null,"Title":"TableLayoutPanel missing on toolbox and not rendered on designer.","State":"closed","Body":"* .NET Core Version: \r\n\r\n.NET Core SDK (reflecting any global.json) \r\nVersion:\t3.1.200-preview-014883\r\nCommit:\t4e2a0ee959\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo \r\n\r\n**Problem description:**\r\nIt is not possible to create TableLayoutPanel as it is not visible on toolbox but present on \"Choose Toolbox Items\" dialog.\r\nI tried to move my old Winforms project to Core. I have created new Winforms Core project and copy my old sources there. All forms are destroyed - all resource information are missing. I can't recreate forms from scratch too as TableLayoutPanel is missing and not rendered.\r\n\r\n**Expected behavior:**\r\nIt must be possible to create TableLayoutPanel for winforms core\r\n\r\n**Minimal repro:**\r\nCreate empty winfroms core project try to add TableLayoutPanel over toolbox\r\n\r\n![Winforms-netcore](https://user-images.githubusercontent.com/2191467/74234116-6fbe4000-4ccc-11ea-8b1d-d4cdfcea7cb6.jpg)\r\n\r\n![Winforms-netcore2](https://user-images.githubusercontent.com/2191467/74234134-78af1180-4ccc-11ea-8247-4c7ff100246d.jpg)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2842","RelatedDescription":"Closed issue \"TableLayoutPanel missing on toolbox and not rendered on designer.\" (#2842)"},{"Id":"563934938","IsPullRequest":false,"CreatedAt":"2020-02-12T11:25:52","Actor":"Marie-Shi","Number":"2848","RawContent":null,"Title":"[Inspect]There is no \"Font\" edit item below \"Font\" tree item node when Font property is Expanded","State":"open","Body":" .NET Core Version: .Net Core 3.1.200-preview-014978 from 3.1 Release branch + VISX inserted in the Dev16 16.6.0 [29811.150.master]\r\nHave you experienced this same bug with .NET Framework?: Yes\r\n\r\n**More Info:**\r\n1.\tThis issue can reproduce on Font, Location, Margin, Size… properties.\r\n2.\tThis issue can also reproduce on Framework project with latest .Net 4.8.\r\n3.\tUsing Inspect to focus Font property, there is \"Font\" edit item in the first time for collapse status, no \"Font\" edit item in the second time. Please see the result of Step5.\r\n\r\n**Steps to reproduce:**\r\n1.\tOpen the attached “Font_Inspect_issue.zip” in VS. \r\n[Font_Inspect_issue.zip](https://github.com/dotnet/winforms/files/4191735/Font_Inspect_issue.zip)\r\n2.\tBuild and run this application, select the PropertyGrid control. \r\n3.\tOpen Inspect and focus on the Font property, observe the inspect behavior. \r\n4.\tExpand the Font property and observe the inspect behavior. \r\n5.\tCollapse the Font property and observe the inspect behavior.\r\n\r\n**Actual behavior:**\r\nAfter step 3, there is \"Font\" edit item below \"Font\" tree item node.\r\n![Step3](https://user-images.githubusercontent.com/45864017/74330482-c01cc700-4dcc-11ea-8052-0da3c7de94bd.png)\r\nAfter step 4, there is no \"Font\" edit item below \"Font\" tree item node.\r\n![Step4](https://user-images.githubusercontent.com/45864017/74330495-c612a800-4dcc-11ea-9bb5-530f39b25ceb.png)\r\nAfter step 5, there is no \"Font\" edit item below \"Font\" tree item node. Please see the Gif:\r\n![Font_expand_collapse_issue](https://user-images.githubusercontent.com/45864017/74330551-d88ce180-4dcc-11ea-80c0-cec04ee5a59e.gif)\r\n\r\n**Expected behavior:**\r\nAfter step 4, there should be \"Font\" edit item below \"Font\" tree item node.\r\nAfter step 5, there should be \"Font\" edit item below \"Font\" tree item node, the result should be same as step3.","Url":"https://github.com/dotnet/winforms/issues/2848","RelatedDescription":"Open issue \"[Inspect]There is no \"Font\" edit item below \"Font\" tree item node when Font property is Expanded\" (#2848)"},{"Id":"563691081","IsPullRequest":true,"CreatedAt":"2020-02-12T02:16:14","Actor":"EatonZ","Number":"2845","RawContent":null,"Title":"fix: Application.Restart throws InvalidOperationException","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2769\r\n\r\n\r\n## Proposed changes\r\n\r\nImplemented the [suggested fix](https://github.com/dotnet/winforms/issues/2769#issuecomment-579180352) from @stephentoub.\r\n\r\n## Customer Impact\r\n\r\nThis fixes a method broken by changes in .NET Core. Most customers are probably unaware of the broken method since it is not a documented breaking change, nor are there other issues reporting the breakage.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\nThere should be no risk. I have tested this fix myself and confirmed that it works.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2845)","Url":"https://github.com/dotnet/winforms/pull/2845","RelatedDescription":"Open PR \"fix: Application.Restart throws InvalidOperationException\" (#2845)"},{"Id":"563191761","IsPullRequest":true,"CreatedAt":"2020-02-11T13:16:57","Actor":"dotnet-maestro[bot]","Number":"2844","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2844)","Url":"https://github.com/dotnet/winforms/pull/2844","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2844)"},{"Id":"563183518","IsPullRequest":true,"CreatedAt":"2020-02-11T12:46:19","Actor":"vladimir-krestov","Number":"2843","RawContent":null,"Title":"[Accessibility] Fixing a default accessible name of a list of a dropdown entry value in PropertyGridView","State":"open","Body":"Fixes #2802\r\n\r\n## Proposed changes\r\n\r\n- Use a PropertyGrid entry name if a list AccessibleName isn't set\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A user can see a non-empty accessible name of a values list using Inspect \r\n(Does not affect Narrator announcing)\r\n- Fixed MAS requirement:\r\n![image](https://user-images.githubusercontent.com/49272759/74232511-02b1a700-4cda-11ea-85a2-1aa4f06b659f.png)\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- An empty AccessibleName\r\n![image](https://user-images.githubusercontent.com/49272759/74237738-4b229200-4ce5-11ea-80eb-5819be3450f5.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n- A non-empty AccessibleName (<del>\"{Property name}\"</del> -> \"{Property name} property values\")\r\n![image](https://user-images.githubusercontent.com/49272759/74641239-02098c80-5182-11ea-99c4-88e32aab364e.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CTI\r\n- Unit testing\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Using Narrator, Accessibility Insights and Inspect\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core SDK: 5.0.0-alpha.1.20072.3\r\n- Microsoft Windows [Version 10.0.18363.592]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2843)","Url":"https://github.com/dotnet/winforms/pull/2843","RelatedDescription":"Open PR \"[Accessibility] Fixing a default accessible name of a list of a dropdown entry value in PropertyGridView\" (#2843)"},{"Id":"562546210","IsPullRequest":true,"CreatedAt":"2020-02-10T23:46:30","Actor":"dotnet-maestro[bot]","Number":"2840","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2840)","Url":"https://github.com/dotnet/winforms/pull/2840","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2840)"},{"Id":"562592998","IsPullRequest":false,"CreatedAt":"2020-02-10T14:21:27","Actor":"hughbe","Number":"2841","RawContent":null,"Title":"ScrollableControl.ScaleDockPadding seems to be broken?","State":"open","Body":"Problem:\r\n\r\nLooking at the implementation of `ScrollableControl.Scale{Core}:\r\n\r\n```cs\r\ninternal void ScaleDockPadding(float dx, float dy)\r\n{\r\n    dockPadding?.Scale(dx, dy);\r\n}\r\n\r\n[EditorBrowsable(EditorBrowsableState.Never)]\r\nprotected override void ScaleCore(float dx, float dy)\r\n{\r\n    ScaleDockPadding(dx, dy);\r\n    base.ScaleCore(dx, dy);\r\n}\r\n```\r\n\r\nWhere DockPadding.Scale is implemented as\r\n\r\n```cs\r\ninternal void Scale(float dx, float dy) => _owner.Padding.Scale(dx, dy);\r\n```\r\n\r\nI would expect the scrollable control's padding to scale by `dx` and `dy`. However, the following tests demonstrate that no scaling is happening.\r\n\r\nI think something may be weird in that calling `Padding.Scale` does not seem to affect the underlying `Padding` instance stored in `Control`\r\n\r\n```cs\r\n\r\n[WinFormsFact]\r\npublic void ScrollableControl_Scale_InvokeWithoutPaddingWithDockPadding_Success()\r\n{\r\n    using var control = new ScrollableControl();\r\n    Assert.Equal(0, control.DockPadding.Left);\r\n    Assert.Equal(0, control.DockPadding.Top);\r\n    Assert.Equal(0, control.DockPadding.Right);\r\n    Assert.Equal(0, control.DockPadding.Bottom);\r\n    control.Scale(10, 20);\r\n\r\n    Assert.Equal(0, control.DockPadding.Left);\r\n    Assert.Equal(0, control.DockPadding.Top);\r\n    Assert.Equal(0, control.DockPadding.Right);\r\n    Assert.Equal(0, control.DockPadding.Bottom);\r\n    Assert.Equal(Padding.Empty, control.Padding);\r\n}\r\n\r\n[WinFormsFact]\r\npublic void ScrollableControl_Scale_InvokeWithoutPaddingWithoutDockPadding_Success()\r\n{\r\n    using var control = new ScrollableControl();\r\n    control.Scale(10, 20);\r\n    Assert.Equal(0, control.DockPadding.Left);\r\n    Assert.Equal(0, control.DockPadding.Top);\r\n    Assert.Equal(0, control.DockPadding.Right);\r\n    Assert.Equal(0, control.DockPadding.Bottom);\r\n    Assert.Equal(Padding.Empty, control.Padding);\r\n}\r\n\r\n[WinFormsFact]\r\npublic void ScrollableControl_Scale_InvokeWithPaddingWithDockPadding_Success()\r\n{\r\n    using var control = new ScrollableControl\r\n    {\r\n        Padding = new Padding(1, 2, 3, 4)\r\n    };\r\n    control.Scale(10, 20);\r\n    Assert.Equal(1, control.DockPadding.Left);\r\n    Assert.Equal(2, control.DockPadding.Top);\r\n    Assert.Equal(3, control.DockPadding.Right);\r\n    Assert.Equal(4, control.DockPadding.Bottom);\r\n    Assert.Equal(new Padding(1, 2, 3, 4), control.Padding);\r\n}\r\n\r\n[WinFormsFact]\r\npublic void ScrollableControl_Scale_InvokeWithPaddingWithoutDockPadding_Success()\r\n{\r\n    using var control = new ScrollableControl\r\n    {\r\n        Padding = new Padding(1, 2, 3, 4)\r\n    };\r\n    Assert.Equal(1, control.DockPadding.Left);\r\n    Assert.Equal(2, control.DockPadding.Top);\r\n    Assert.Equal(3, control.DockPadding.Right);\r\n    Assert.Equal(4, control.DockPadding.Bottom);\r\n    control.Scale(10, 20);\r\n    Assert.Equal(1, control.DockPadding.Left);\r\n    Assert.Equal(2, control.DockPadding.Top);\r\n    Assert.Equal(3, control.DockPadding.Right);\r\n    Assert.Equal(4, control.DockPadding.Bottom);\r\n    Assert.Equal(new Padding(1, 2, 3, 4), control.Padding);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/2841","RelatedDescription":"Open issue \"ScrollableControl.ScaleDockPadding seems to be broken?\" (#2841)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-18T05:30:59.4335882Z","RunDurationInMilliseconds":753}