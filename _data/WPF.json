{"Data":{"GitHub":{"Issues":[{"Id":"456471302","IsPullRequest":true,"CreatedAt":"2019-06-14T23:21:42","Actor":"ojhad","Number":"969","RawContent":null,"Title":"Remove System.Security.Permission.dll dependence for internal permissions types","State":"open","Body":"- Removed dependence on System.Security.Permission.dll for internal types that extend from System.Security.Permission.dll types\r\n- Deleted UserInitiatedRoutedEventPermissionAttribute completely","Url":"https://github.com/dotnet/wpf/pull/969","RelatedDescription":"Open PR \"Remove System.Security.Permission.dll dependence for internal permissions types\" (#969)"},{"Id":"456392512","IsPullRequest":false,"CreatedAt":"2019-06-14T19:04:56","Actor":"grubioe","Number":"968","RawContent":null,"Title":"ComboBox drop down opens in PerMonitor awareness when hosted in System aware UI","State":"open","Body":"Copied from VSO ID:803149\r\n\r\nApplication Name:  Mathcad Prime\r\n\r\nOS: Windows 10 RS4\r\n\r\nCPU: X64\r\n\r\n.NET Build Number: 4.8.03707\r\n\r\nMin Repro Project:\r\nSee VSO ID\r\n\r\nRepro Steps:\r\n\r\nHave .NET 4.7.2+, and 100% primary, 200% secondary\r\nLaunch repro proj exe on primary\r\nMove it to secondary\r\nClick “Launch Dialog”\r\nClick ComboBox in dialog (Or tab to it and hit Alt+DownArrow if using keyboard)\r\n \r\n\r\nExpected:\r\n\r\n    Popup is aligned correctly, and system scaled\r\n\r\n \r\n\r\nActual:\r\n\r\n    Popup is misaligned and PMA scaled\r\n\r\n![image](https://user-images.githubusercontent.com/49078227/59532056-7cb83480-8e9c-11e9-95b5-7409898928e3.png)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/968","RelatedDescription":"Open issue \"ComboBox drop down opens in PerMonitor awareness when hosted in System aware UI\" (#968)"},{"Id":"456374647","IsPullRequest":true,"CreatedAt":"2019-06-14T18:56:41","Actor":"vatsan-madhavan","Number":"963","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/963","RelatedDescription":"Closed or merged PR \"test pr\" (#963)"},{"Id":"456389248","IsPullRequest":false,"CreatedAt":"2019-06-14T18:56:22","Actor":"grubioe","Number":"967","RawContent":null,"Title":"[PMA] Dragging a window outside the title bar causes the mouse position to shift when changing DPIs","State":"open","Body":"Copied from VSO ID: 780675\r\n\r\nMin Repro Proj:\r\n[WpfWeirdDrag.zip](https://github.com/dotnet/wpf/files/3291838/WpfWeirdDrag.zip)\r\n \r\nThis bug is found during PMA testing.  To setup PMA review the VSO ID\r\n\r\nRepro:\r\n\r\nOpen Update Dialog in main window.\r\nLeft click on the spinning circle, and drag to a secondary window.\r\n \r\n\r\nExpected: After dragging the UI to the secondary Window, the mouse pointer is in the same location.\r\n\r\nActual: After dragging the UI to the secondary Window, the mouse pointer is repositioned to a different location.\r\n\r\nNote: The dialog's title bar doesn't have this issue.  Other VS UI appears to have similar issue.\r\n![image](https://user-images.githubusercontent.com/49078227/59531635-4cbc6180-8e9b-11e9-8a10-9a4e1662a58a.png)\r\n\r\n \r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/967","RelatedDescription":"Open issue \"[PMA] Dragging a window outside the title bar causes the mouse position to shift when changing DPIs\" (#967)"},{"Id":"456387179","IsPullRequest":false,"CreatedAt":"2019-06-14T18:50:42","Actor":"grubioe","Number":"966","RawContent":null,"Title":"Feature ASK: Implement IList on PageContentCollection and DocumentReferenceCollection","State":"open","Body":"Copied from VSO: 776611\r\n\r\nThis comes from user feedback:\r\nhttps://developercommunity.visualstudio.com/content/problem/418015/fixeddocument-pagecontent-bug.html\r\n![image](https://user-images.githubusercontent.com/49078227/59531228-41b50180-8e9a-11e9-9cc3-6c9c1d813b71.png)\r\n\r\n\r\nREPRO:\r\nIn a WPF project in Visual Studio, construct a file like in the following screenshot:\r\n\r\nRESULT:\r\nThe content of FixedDocument is always shown as an error.\r\n\r\nEXPECT:\r\nNo error squiggles or error messages","Url":"https://github.com/dotnet/wpf/issues/966","RelatedDescription":"Open issue \"Feature ASK: Implement IList on PageContentCollection and DocumentReferenceCollection\" (#966)"},{"Id":"456384099","IsPullRequest":false,"CreatedAt":"2019-06-14T18:42:36","Actor":"grubioe","Number":"964","RawContent":null,"Title":"[Perf] Family Show 1.1 Build scenario regressed by 24% compared to Dev 15.9","State":"open","Body":"Copied from VSO: 774775\r\n\r\nAffected Branch: d16.0\r\n\r\nSteps to reproduce:\r\n\r\nFamily Show integration test\r\n\r\nhttp://devdivperf/TestTrend.aspx#CID=2810317&SID=65356&SH=1&MD=100&LabID=694,696,695&BID=211979&HE=1703&SE=74&LM=652&OS=128&SKU=&TA=4&DOSV=0&DOSO=0&DOSG=0&DOSC=1&DOSGL=1&SO=237\r\n\r\n![image](https://user-images.githubusercontent.com/49078227/59530829-678dd680-8e99-11e9-9da9-9398210ece99.png)\r\n\r\n\r\nThere is a similar regression in CreateWPF_CSharp_VS rebuild scenario (new blank WPF project).\r\n\r\nLooking at the MSBuild Diagnostics logs shows that the following build steps regressed significantly:\r\n\r\nFamily Show clean build in D16.0stg\r\n1>     4310 ms  CoreCompile                                2 calls\r\n1>     4356 ms  GenerateTemporaryTargetAssembly            1 calls\r\nFamily Show clean build in D15.9rtwsvc:\r\n2>      109 ms  CoreResGen                                 1 calls\r\n2>      375 ms  GenerateTemporaryTargetAssembly            1 calls\r\n2>      500 ms  CoreCompile                                2 calls\r\n2>      531 ms  MarkupCompilePass2                         1 calls\r\n2>      734 ms  MarkupCompilePass1                         1 calls\r\n\r\nRebuild clean WPF project in D16.0stg:\r\n1>     4310 ms  CoreCompile                                2 calls\r\n1>     4356 ms  GenerateTemporaryTargetAssembly            1 calls\r\nRebuild clean WPF project in D15.9rtwsvc:\r\n1>     3725 ms  CoreCompile                                2 calls\r\n1>     3787 ms  GenerateTemporaryTargetAssembly            1 calls\r\n\r\nThe FamilyShow project is in the VS.TestAssets.Xaml NuGet package, see VSO for details\r\n","Url":"https://github.com/dotnet/wpf/issues/964","RelatedDescription":"Open issue \"[Perf] Family Show 1.1 Build scenario regressed by 24% compared to Dev 15.9\" (#964)"},{"Id":"456371692","IsPullRequest":true,"CreatedAt":"2019-06-14T18:12:25","Actor":"vatsan-madhavan","Number":"962","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/962","RelatedDescription":"Closed or merged PR \"test pr\" (#962)"},{"Id":"456369887","IsPullRequest":true,"CreatedAt":"2019-06-14T18:08:29","Actor":"vatsan-madhavan","Number":"961","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/961","RelatedDescription":"Closed or merged PR \"test pr\" (#961)"},{"Id":"456362041","IsPullRequest":true,"CreatedAt":"2019-06-14T17:43:46","Actor":"vatsan-madhavan","Number":"960","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/960","RelatedDescription":"Closed or merged PR \"test pr\" (#960)"},{"Id":"456361432","IsPullRequest":true,"CreatedAt":"2019-06-14T17:41:57","Actor":"vatsan-madhavan","Number":"959","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/959","RelatedDescription":"Closed or merged PR \"test pr\" (#959)"},{"Id":"456329478","IsPullRequest":true,"CreatedAt":"2019-06-14T17:26:37","Actor":"vatsan-madhavan","Number":"958","RawContent":null,"Title":"Change _TestHelixAgentPool from Windows.10.Amd64.Client19H1.Open to Windows.10.Amd64.Client19H1","State":"closed","Body":"Change _TestHelixAgentPool from Windows.10.Amd64.Client19H1.Open to Windows.10.Amd64.Client19H1 when building internally. \r\n\r\nFixes #952 and an ongoing build-break.","Url":"https://github.com/dotnet/wpf/pull/958","RelatedDescription":"Closed or merged PR \"Change _TestHelixAgentPool from Windows.10.Amd64.Client19H1.Open to Windows.10.Amd64.Client19H1\" (#958)"},{"Id":"456005214","IsPullRequest":true,"CreatedAt":"2019-06-14T15:54:21","Actor":"vatsan-madhavan","Number":"953","RawContent":null,"Title":"Fix for #952 dotnet/wpf builds failing intermittently due to timeouts ","State":"closed","Body":"Fixes #952 \r\n\r\nWPF builds fail intermittently due to timeouts when Run Developer Regression Tests on Helix Machine stage fails to start within its timeout period (60 mins).\r\n\r\nExample of a failed build: https://dev.azure.com/dnceng/internal/_build/results?buildId=224164\r\n\r\n=\r\n\r\n_TestHelixAgentPool in eng\\pipeline.yml is currently set to Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.ServerRS5.Open\r\n\r\nIt should be changed to Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.Client19H1.Open.\r\n\r\nIn short, stop running tests on ServerRS5. It's a \"server core\" machine machine, and seems to have problems running tests right now. Change it to Client19H1.","Url":"https://github.com/dotnet/wpf/pull/953","RelatedDescription":"Closed or merged PR \"Fix for #952 dotnet/wpf builds failing intermittently due to timeouts \" (#953)"},{"Id":"456003379","IsPullRequest":false,"CreatedAt":"2019-06-14T15:54:21","Actor":"vatsan-madhavan","Number":"952","RawContent":null,"Title":"WPF Builds fail intermittently due to timeouts","State":"closed","Body":"WPF builds fail intermittently due to timeouts when _Run Developer Regression Tests on Helix Machine_ stage fails to start within its timeout period (60 mins). \r\n\r\nExample of a failed build: https://dev.azure.com/dnceng/internal/_build/results?buildId=224164 \r\n\r\n= \r\n\r\n`_TestHelixAgentPool` in `eng\\pipeline.yml` is currently set to `Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.ServerRS5.Open` \r\n\r\nIt should be changed to `Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.Client19H1.Open`. \r\n\r\nIn short, stop running tests on _ServerRS5_. It's a \"server core\" machine machine, and seems to have problems running tests right now. Change it to _Client19H1_. ","Url":"https://github.com/dotnet/wpf/issues/952","RelatedDescription":"Closed issue \"WPF Builds fail intermittently due to timeouts\" (#952)"},{"Id":"456238414","IsPullRequest":true,"CreatedAt":"2019-06-14T13:54:01","Actor":"dotnet-maestro[bot]","Number":"957","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5a60b451-e3fe-4910-c0e5-08d6df169eee)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190613.4\r\n- **Date Produced**: 6/13/2019 1:35 PM\r\n- **Commit**: 95e20dfc1b2acd503e8308962a8fd905a8f16e1a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19313.4\r\n\r\n[marker]: <> (End:5a60b451-e3fe-4910-c0e5-08d6df169eee)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/957","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#957)"},{"Id":"456229422","IsPullRequest":true,"CreatedAt":"2019-06-14T13:13:58","Actor":"dotnet-maestro[bot]","Number":"956","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190613.1\r\n- **Date Produced**: 6/14/2019 2:31 AM\r\n- **Commit**: 23e72e7957ec6b24943ab82a78bfee5b6531a55b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview7.19313.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/956","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#956)"},{"Id":"456228966","IsPullRequest":true,"CreatedAt":"2019-06-14T13:07:56","Actor":"dotnet-maestro[bot]","Number":"955","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e27f4734-4755-4c9b-6655-08d6b00a94b3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190613.08\r\n- **Date Produced**: 6/13/2019 9:26 PM\r\n- **Commit**: 2a663574a47d8ac25b9b959e5a9f9fa67fc97ecc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27813-08\r\n\r\n[marker]: <> (End:e27f4734-4755-4c9b-6655-08d6b00a94b3)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/955","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#955)"},{"Id":"456213844","IsPullRequest":true,"CreatedAt":"2019-06-14T12:52:29","Actor":"dotnet-maestro[bot]","Number":"954","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190613.18\r\n- **Date Produced**: 6/13/2019 11:28 PM\r\n- **Commit**: 8952b877fa6bca387cd4321b33dcdf6778e31240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19313.18\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/954","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#954)"},{"Id":"455720602","IsPullRequest":true,"CreatedAt":"2019-06-14T12:42:58","Actor":"dotnet-maestro[bot]","Number":"943","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190612.1\r\n- **Date Produced**: 6/12/2019 1:15 PM\r\n- **Commit**: e14ae1b4d92fb20e9b7dddd4c23e2b2245b142fd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview7.19312.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/943","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#943)"},{"Id":"455702939","IsPullRequest":true,"CreatedAt":"2019-06-14T12:06:11","Actor":"dotnet-maestro[bot]","Number":"941","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190612.21\r\n- **Date Produced**: 6/13/2019 7:23 AM\r\n- **Commit**: e5cd71926eaa13aba3138c14cd80def0ccfebb30\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19312.21\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/941","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#941)"},{"Id":"455893501","IsPullRequest":true,"CreatedAt":"2019-06-13T22:27:58","Actor":"jmarolf","Number":"946","RawContent":null,"Title":"Ensure the identity name is the same for C# and VB templates","State":"closed","Body":"Having mismatched identities means that shim templates cannot be re-used across languages in VS","Url":"https://github.com/dotnet/wpf/pull/946","RelatedDescription":"Closed or merged PR \"Ensure the identity name is the same for C# and VB templates\" (#946)"},{"Id":"455975842","IsPullRequest":true,"CreatedAt":"2019-06-13T22:14:55","Actor":"miguep","Number":"951","RawContent":null,"Title":"Fixing the list of uncommon assemblies used by AssemblyHelper","State":"open","Body":"AssemblyHelper keeps track of uncommon assemblies and loads the appropriate extension assembly (e.g. PresentationFramework-SystemData), only when it determines that the assembly has already been loaded by the application (to prevent said assembly from being loaded by WPF all the time). The types used by the extension assemblies have moved to different assemblies, so we need to update the list of uncommon assemblies.\r\n\r\nfixes #756 ","Url":"https://github.com/dotnet/wpf/pull/951","RelatedDescription":"Open PR \"Fixing the list of uncommon assemblies used by AssemblyHelper\" (#951)"},{"Id":"455973133","IsPullRequest":false,"CreatedAt":"2019-06-13T22:05:47","Actor":"bergmeister","Number":"950","RawContent":null,"Title":"New feature: Add property to JumpTask to allow for elevated jump list entry","State":"open","Body":"Background: PowerShell Core has a lot of custom code [here](https://github.com/PowerShell/PowerShell/tree/master/src/Microsoft.PowerShell.ConsoleHost/WindowsTaskbarJumpList) that makes COM calls to the Windows API for creating a jumplist entry to run PowerShell as an Administrator. However, in both .Net Core 2.1 and .Net Core 3.0-preview5, it has been observed that the CLR fails sporadically with a fatal error: https://github.com/PowerShell/PowerShell/issues/9295\r\n\r\nWPF has APIs for creating a taskbar jump list but not for launching the application as elevated. PowerShell would therefore like to rather use WPF to minimize the amount of (possibly buggy code).\r\n\r\nProposal:\r\n\r\nWe add a boolean property to `JumpTask` (I don't mind about its name, what about `RequestElevation`?) so that when when `JumpList.Apply()` gets called the application will be elevated. The default will be to start unelevated.\r\nThe implementation will be quite simple, all we need to do is to use `SLDF_RUNAS_USER` enum on [SHELL_LINK_DATA_FLAGS](https://docs.microsoft.com/en-us/windows/desktop/api/shlobj_core/ne-shlobj_core-shell_link_data_flags). We will be calling [IShellLinkDataList::GetFlag](https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nf-shobjidl_core-ishelllinkdatalist-getflags)`, adding the enum value using XOR and then call [IShellLinkDataList::SetFlags](https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nf-shobjidl_core-ishelllinkdatalist-setflags) on the `shellLink`  object of type `IShellLinkW` in JumpList.\r\n\r\nAre you OK with this proposal that includes no breaking change?\r\nI would first code this from a theoretical perspective, open a draft PR and from then on I would be grateful for some assistance for being able to test it and will have to do some homework to get familiar with this repo (I have never committed to .Net Core before although I use it a lot)\r\n\r\nIn terms of the usage, do you expect the process that is calling those APIs to be in STA mode or does it not matter? WPF is STA by default AFAIK but PowerShell Core is a console app and currently still in MTA mode due to .Net Core not offering STA yet in 2.1. There is a check for STA in WPF [https://github.com/dotnet/wpf/blob/ae1790531c3b993b56eba8b1f0dd395a3ed7de75/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Shell/JumpList.cs#L564](https://github.com/dotnet/wpf/blob/ae1790531c3b993b56eba8b1f0dd395a3ed7de75/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Shell/JumpList.cs#L564) but I am not sure if this is due to WPF or the COM calls being made","Url":"https://github.com/dotnet/wpf/issues/950","RelatedDescription":"Open issue \"New feature: Add property to JumpTask to allow for elevated jump list entry\" (#950)"},{"Id":"455915166","IsPullRequest":true,"CreatedAt":"2019-06-13T19:30:08","Actor":"ryalanms","Number":"949","RawContent":null,"Title":"Include GAC in changed ref assembly check during WPF build on .NET Framework","State":"open","Body":"**PresentationBuildTasks** is the only multi-targeted WPF component.  Both .NET Core and .NET Framework PBT assemblies are produced by the WPF build.\r\n\r\nPresentationBuildTasks contains Global Assembly Cache code that was #ifdef'd out that should be included when compiling PresentationBuildTasks for .NET Framework.  **The Global Assembly Cache does not exist in .NET Core.**","Url":"https://github.com/dotnet/wpf/pull/949","RelatedDescription":"Open PR \"Include GAC in changed ref assembly check during WPF build on .NET Framework\" (#949)"},{"Id":"455909360","IsPullRequest":false,"CreatedAt":"2019-06-13T19:15:08","Actor":"grubioe","Number":"948","RawContent":null,"Title":"Suggestion to change default method behavior for .Children (and add it to all elements)","State":"open","Body":"Copying from WPF Samples Repo: https://github.com/microsoft/WPF-Samples/issues/77\r\n\r\nDear Devs,\r\nit is kind of a pain to iterate through the whole page xaml for finding certain items.\r\nThe default methods .Content and .Children differ on the tree which is annoying (for beginners).\r\nCould you improve the default method like using default examples for VisualTreeHelper?\r\n\r\nFurther it is annoying being forced to cast the method\r\n(having not the same container providing .Children method) for the IntelliCode support.\r\n\r\nUsing multiple or deep Pages could be written recursively or iteratively much faster when the type is fixed providing and the same method could be used.\r\n\r\nThis\r\nhttps://stackoverflow.com/questions/636383/how-can-i-find-wpf-controls-by-name-or-type/1759923#1759923\r\nand this\r\nhttps://codereview.stackexchange.com/questions/44760/is-there-a-better-way-to-get-a-child\r\nrelates to that.","Url":"https://github.com/dotnet/wpf/issues/948","RelatedDescription":"Open issue \"Suggestion to change default method behavior for .Children (and add it to all elements)\" (#948)"},{"Id":"455905960","IsPullRequest":false,"CreatedAt":"2019-06-13T19:06:28","Actor":"grubioe","Number":"947","RawContent":null,"Title":"DPI aware splash screen","State":"open","Body":"Transferring from WPF Samples Repo: https://github.com/microsoft/WPF-Samples/issues/69 \r\n\r\nWPF splash screen images are not scaled according to the DPI.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/947","RelatedDescription":"Open issue \"DPI aware splash screen\" (#947)"},{"Id":"455732554","IsPullRequest":true,"CreatedAt":"2019-06-13T18:49:00","Actor":"dotnet-maestro[bot]","Number":"944","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190612.6\r\n- **Date Produced**: 6/12/2019 7:15 PM\r\n- **Commit**: 3204af57b16e48251dd355fef00d3d8289659ee9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19312.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/944","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#944)"},{"Id":"455720122","IsPullRequest":true,"CreatedAt":"2019-06-13T18:42:58","Actor":"dotnet-maestro[bot]","Number":"942","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190612.11\r\n- **Date Produced**: 6/13/2019 4:08 AM\r\n- **Commit**: c1eb853e11bb0adccc1f2bd284da000232704133\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27812-11\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview7.19312.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview7.19312.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19312.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19312.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19312.2 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/942","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#942)"},{"Id":"455610802","IsPullRequest":false,"CreatedAt":"2019-06-13T15:09:45","Actor":"turboyang-cn","Number":"940","RawContent":null,"Title":"Dynamically Create TextBox Issue","State":"closed","Body":"- .NET Core Version: 3.0.100-preview6-012264\r\n- OS: Windows 10\r\n- OS Version: 17134.471\r\n- Visual Studio Version: Visual Studio 2019 16.1.3\r\n\r\nErrors occurred when I created text boxes dynamically in my code\r\n\r\n> System.ArgumentException:\"Requested value 'Delete' was not found.\"\r\n\r\n`TextBox TextBox = new TextBox();`\r\n","Url":"https://github.com/dotnet/wpf/issues/940","RelatedDescription":"Closed issue \"Dynamically Create TextBox Issue\" (#940)"},{"Id":"455795319","IsPullRequest":true,"CreatedAt":"2019-06-13T15:04:35","Actor":"lindexi","Number":"945","RawContent":null,"Title":"Catch and rethrow the exception in StylusPlugIn","State":"open","Body":"This code running in Stylus Input thread and this thread is a backgroud thread that will be break when anyone throw an exception in this code\r\n\r\nThis MR may fix the problem that some friend throws an exception in StylusPlugIn.\r\n\r\nJust like this code. The code will break the Stylus Input thread.\r\n\r\n    public partial class MainWindow : Window\r\n    {\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            StylusPlugIns.Add(new Foo());\r\n        }\r\n    }\r\n\r\n    public class Foo : StylusPlugIn\r\n    {\r\n        /// <inheritdoc />\r\n        protected override void OnStylusDown(RawStylusInput rawStylusInput)\r\n        {\r\n            throw new Exception();\r\n        }\r\n    }\r\n\r\nThe OnStylusDown running in Stylus Input thread and if some friend throws any exceptions that will break the thread. And the application will stop responding touch. Of course, the actual situation may be more complicated. Maybe some of my friends just didn't realize that the code he wrote was unstable. But add `try catch` to all the method is an evil code.\r\n\r\nBut I do not think we can throw any unintended exceptions in StylusPlugIn.\r\n\r\nSee [StylusPlugIn Class (System.Windows.Input.StylusPlugIns)](https://docs.microsoft.com/en-us/dotnet/api/system.windows.input.stylusplugins.stylusplugin?view=netframework-4.8 )\r\n\r\n> If you use a StylusPlugIn inside a control, you should test the plug-in and control extensively to make sure they do not throw any unintended exceptions.\r\n\r\nSee [Intercepting Input from the Stylus](https://msdn.microsoft.com/en-us/data/ms749105(v=vs.80) )\r\n\r\n> If a StylusPlugIn throws or causes an exception, the application will close. You should thoroughly test controls that consume a StylusPlugIn and only use a control if you are certain the StylusPlugIn will not throw an exception.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/945","RelatedDescription":"Open PR \"Catch and rethrow the exception in StylusPlugIn\" (#945)"},{"Id":"456384577","IsPullRequest":false,"CreatedAt":"2019-06-12T18:58:00","Actor":"vitidev","Number":"965","RawContent":null,"Title":"WPF TextBox XamlParseException when culture is not \"en-US\" (.NET Core 3.0.0 Preview 6)","State":"open","Body":"# WPF TextBox XamlParseException when culture is \"ru-RU\" (.NET Core 3.0.0 Preview 6)\r\n\r\nEmpty netcore wpf project and window with textbox\r\n\r\n```c#\r\n    public MainWindow()\r\n    {\r\n         InitializeComponent(); // System.Windows.Markup.XamlParseException\r\n    }\r\n```\r\n\r\n```xml\r\n    <Window\r\n        x:Class=\"WpfApp1.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:local=\"clr-namespace:WpfApp1\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        Title=\"MainWindow\"\r\n        Width=\"800\"\r\n        Height=\"450\"\r\n        mc:Ignorable=\"d\">\r\n        <TextBox />\r\n    </Window>\r\n```\r\n\r\nException details (localized (ru))\r\n```\r\n    System.Windows.Markup.XamlParseException\r\n      HResult=0x80131501\r\n      Message=\"Вызов конструктора для типа \"System.Windows.Controls.TextBox\", удовлетворяющего указанным ограничениям привязки, привел к выдаче исключения.\": номер строки \"13\" и позиция в строке \"10\".\r\n      Source=PresentationFramework\r\n      StackTrace:\r\n       at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n       at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n       at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n       at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n       at System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)\r\n       at WpfApp1.MainWindow.InitializeComponent() in F:\\dev\\test\\WpfApp1\\WpfApp1\\MainWindow.xaml:line 1\r\n\r\n    Inner Exception 1:\r\n    ArgumentException: Requested value 'УДАЛИТЬ' was not found.\r\n```\r\n\r\nbut it works with en-US culture\r\n\r\n```c#\r\n    public MainWindow()\r\n    {\r\n        Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"en-us\");\r\n        InitializeComponent();\r\n    }\r\n```\r\n\r\nps: .NET Core 3.0.0 Preview 5 - everything works well\r\n","Url":"https://github.com/dotnet/wpf/issues/965","RelatedDescription":"Open issue \"WPF TextBox XamlParseException when culture is not \"en-US\" (.NET Core 3.0.0 Preview 6)\" (#965)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-15T05:30:50.6006627Z","RunDurationInMilliseconds":698}