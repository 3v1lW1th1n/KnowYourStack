{"Data":{"Blog":{"FeedItems":[{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create an application that uses a database you control to register and track user accounts, that introduces other complications over the long term. As... <a aria-label=\"read more about User accounts made easy with Azure\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains a number of changes (including API changes) and improvements. Notable Changes The JSON hub protocol now uses camel casing... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core Alpha 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T01:56:39+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T23:00:07+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T17:02:15+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6754805768","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:08","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2254","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed - discussion\" (#2254) at aspnet/Home","RelatedBody":"This is the discussion issue for this announcement: https://github.com/aspnet/Announcements/issues/274"},{"Id":"6750482547","Type":"IssuesEvent","CreatedAt":"2017-10-23T05:13:53","Actor":"Varorbc","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1404","RelatedDescription":"Closed issue \"asp.net core pre-release for visual studio 2015\" (#1404) at aspnet/Home","RelatedBody":"asp.net core tool can be released in order to be able to develop in studio visual 2015?\n"},{"Id":"6750471465","Type":"IssuesEvent","CreatedAt":"2017-10-23T05:08:06","Actor":"kobosh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2253","RelatedDescription":"Opened issue \"vs 2017 error Error\tNU1202\tPackage System.Threading.Overlapped 4.0.1 is not compatible with netcoreapp2.0\" (#2253) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFramework\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - ASP.NET Core in Docker: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n\r\nOther common projects:\r\n\r\n - NuGet: https://github.com/NuGet/home\r\n - .NET Core CLI, SDK, or runtime: https://github.com/dotnet/core\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n"},{"Id":"6747341008","Type":"IssuesEvent","CreatedAt":"2017-10-21T15:24:22","Actor":"TimRowe","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2252","RelatedDescription":"Closed issue \"where it sets default implementation of IDistributedCache\" (#2252) at aspnet/Home","RelatedBody":"As we know in https://docs.microsoft.com/en-us/aspnet/core/fundamentals/app-state?tabs=aspnetcore2x.\r\nWe need to Adds a default in-memory implementation of IDistributedCache like below.\r\n```c#\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddMvc();\r\n\r\n    // Adds a default in-memory implementation of IDistributedCache.\r\n    services.AddDistributedMemoryCache();\r\n\r\n    services.AddSession(options =>\r\n    {\r\n        options.Cookie.Name = \".AdventureWorks.Session\";\r\n        options.IdleTimeout = TimeSpan.FromSeconds(10);\r\n    });\r\n}\r\n```\r\n\r\nBut I found that `services.AddDistributedMemoryCache()` is not necessary，session can work without that. \r\n\r\n```c#\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n   services.AddMvc();\r\n   services.AddSession();\r\n}\r\n```\r\nAs we know session is depend on IDistributedCache. **So, where it sets default in-memory implementation of IDistributedCache?** I have found `Microsoft.AspNetCore.Session` `Microsoft.AspNetCore.Caching` `Microsoft.AspNetCore.Mvc`, but not result.\r\n\r\nAny one help?\r\n\r\n"},{"Id":"6746692081","Type":"IssuesEvent","CreatedAt":"2017-10-21T06:20:28","Actor":"TimRowe","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2252","RelatedDescription":"Opened issue \"where it sets default implementation of IDistributedCache\" (#2252) at aspnet/Home","RelatedBody":"As we know in https://docs.microsoft.com/en-us/aspnet/core/fundamentals/app-state?tabs=aspnetcore2x.\r\nWe need to Adds a default in-memory implementation of IDistributedCache like below.\r\n```c#\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddMvc();\r\n\r\n    // Adds a default in-memory implementation of IDistributedCache.\r\n    services.AddDistributedMemoryCache();\r\n\r\n    services.AddSession(options =>\r\n    {\r\n        options.Cookie.Name = \".AdventureWorks.Session\";\r\n        options.IdleTimeout = TimeSpan.FromSeconds(10);\r\n    });\r\n}\r\n```\r\n\r\nBut I found that `services.AddDistributedMemoryCache()` is not necessary，session can work without that. \r\n\r\n```c#\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n   services.AddMvc();\r\n   services.AddSession();\r\n}\r\n```\r\nAs we know session is depend on IDistributedCache. **So, where it sets default in-memory implementation of IDistributedCache?** I have found `Microsoft.AspNetCore.Session` `Microsoft.AspNetCore.Caching` `Microsoft.AspNetCore.Mvc`, but not result.\r\n\r\nAny one help?\r\n\r\n"},{"Id":"6746473498","Type":"IssuesEvent","CreatedAt":"2017-10-21T02:40:43","Actor":"TimRowe","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2251","RelatedDescription":"Opened issue \"How to get setting value in starup.cs ConfigureServices\" (#2251) at aspnet/Home","RelatedBody":"As we know, we can get setting in starup.cs Configure function with ioc inject. But I want to get setting value in ConfigureServices function wich run before Configure function. How can i get AppSettings value in ConfigureServices  like below?\r\n\r\n\r\n```c#\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            //appsetting\r\n            services.Configure<AppSettings>(Configuration.GetSection(\"AppSettings\"));\r\n            \r\n            //can i get the setting value here? because i want to confiure service with setting.such as sql connection string.\r\n        }\r\n    }\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6756142127","Type":"PullRequestEvent","CreatedAt":"2017-10-24T05:20:32","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1046","RelatedDescription":"Merged pull request \"Default\" (#1046) at aspnet/SignalR","RelatedBody":"default(CancellationToken ...) -> default"},{"Id":"6755459087","Type":"PullRequestEvent","CreatedAt":"2017-10-24T00:39:37","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1049","RelatedDescription":"Opened pull request \"Late parameter binding - Prototype\" (#1049) at aspnet/SignalR","RelatedBody":"Soliciting early feedback. "},{"Id":"6754843055","Type":"PullRequestEvent","CreatedAt":"2017-10-23T21:24:56","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1048","RelatedDescription":"Opened pull request \"[Redis] Add functional test support\" (#1048) at aspnet/SignalR","RelatedBody":"Only added a single test as proof-of-concept.\r\n\r\nRequires #1037 to be in before merging."},{"Id":"6754010275","Type":"IssuesEvent","CreatedAt":"2017-10-23T18:23:03","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/988","RelatedDescription":"Closed issue \"Transport selection may not work correctly in TS client when the user is requesting WebSockets\" (#988) at aspnet/SignalR","RelatedBody":"The reason is that we [check](https://github.com/aspnet/SignalR/blob/ba1c210f036cdd29befb9a80b40e66ca257d17d1/client-ts/Microsoft.AspNetCore.SignalR.Client.TS/HttpConnection.ts#L93) if the transport was passed to the function incorrectly. The value of `TransportType.WebSocket` is 0 so the condition evaluates to be `falsy` and as a result we use the first transport returned by the server (even if it's not websockets)) instead of returning an error."},{"Id":"6753831650","Type":"PullRequestEvent","CreatedAt":"2017-10-23T17:45:15","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1041","RelatedDescription":"Merged pull request \"Adding StreamCompletion message to the HubProtocol spec\" (#1041) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6755890531","Type":"IssuesEvent","CreatedAt":"2017-10-24T03:30:47","Actor":"Cuiqs76","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6990","RelatedDescription":"Opened issue \"razor page as partial view throw error\" (#6990) at aspnet/Mvc","RelatedBody":"my _layout as below:\r\n`<body>\r\n    <div>\r\n       @await Html.PartialAsync(\"_LayoutHeader\") \r\n        <div class=\"row\">\r\n            <div>\r\n                <div class=\"row\">\r\n                    @RenderBody()\r\n                </div>\r\n            </div>\r\n        </div>\r\n</div>`\r\n\r\nrenderbody will load index view.  the index and _LayoutHeader view are razor pages.\r\n\r\nwhen run throw error:\r\nAn unhandled exception occurred while processing the request.\r\nInvalidOperationException: The model item passed into the ViewDataDictionary is of type 'Yiko.Ent.WebRazorPages.Pages.Home.IndexModel', but this ViewDataDictionary instance requires a model item of type 'Yiko.Ent.WebRazorPages.Pages._LayoutHeaderModel'.\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.EnsureCompatible(object value) "},{"Id":"6755265587","Type":"IssuesEvent","CreatedAt":"2017-10-23T23:27:17","Actor":"RickStrahl","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6989","RelatedDescription":"Opened issue \"Socket Exception on TryValidateModel in RazorPages\" (#6989) at aspnet/Mvc","RelatedBody":"I have a very simple Razor Page I'm experimenting with and I'm having issues getting model state to validate. \r\n\r\nBasically I have a text box in form with a value that has a Validation attribute (MinLength) and I'm trying to get the model to validate. It doesn't happen automatically in OnPost so I'm using `TryValidateModel(this)` which throws a Socket Exception:\r\n\r\n![image](https://user-images.githubusercontent.com/1374013/31917696-8cd225d6-b7f4-11e7-8e66-fd93f3cf0195.png)\r\n\r\nThe page is a very simple self-contained (no code behind model - but tried that with same behavior) razor page:\r\n```razor\r\n@page\r\n@model IndexModel\r\n@using System.ComponentModel.DataAnnotations\r\n@using Microsoft.AspNetCore.Mvc.RazorPages\r\n@functions {\r\n\r\n    public class IndexModel : PageModel\r\n    {\r\n        [MinLength(2)]\r\n        public string Name { get; set; }\r\n\r\n        public string Message { get; set; }\r\n\r\n        public void OnGet()\r\n        {\r\n            Message = \"Getting somewhere\";\r\n        }\r\n\r\n\r\n        public void OnPost()\r\n        {\r\n            TryValidateModel(this);\r\n\r\n            if (this.ModelState.IsValid)\r\n                Message = \"Posted all clear!\";\r\n            else\r\n                Message = \"Posted no trespassing!\";\r\n        }\r\n\r\n    }\r\n\r\n}\r\n@{    \r\n    Layout = null;\r\n}\r\n<!DOCTYPE html>\r\n<html>\r\n<head>    \r\n</head>\r\n<body>\r\n<form method=\"post\" asp-antiforgery=\"true\">\r\n    <input asp-for=\"Name\" type=\"text\" />\r\n    <button type=\"submit\" class=\"btn btn-default\">Show Hello</button>\r\n    @Model.Name\r\n</form>\r\n\r\n<div class=\"alert alert-warning\">\r\n    @Model.Message\r\n</div>\r\n</body>\r\n</html>\r\n```\r\n\r\n#### More Observations\r\nThe page works otherwise and the model data (the message) display. The model is also updated properly - OnPost() has the model value set to the entered value. The problem isn't the binding it's the model validation that appears to be not working.\r\n\r\nEntirely possible I'm missing something but I don't see it :-)\r\n\r\nTwo questions here:\r\n\r\n* I would have expected OnPost to unbind the model automatically and give me ModelState I can work with. Not happening here. Not sure if it should.\r\n\r\n* Why would TryValidateModelState() throw a Socket exception of all things?\r\n\r\n\r\n\r\n\r\nStack Trace:\r\n```\r\n   at System.Net.IPAddress.get_Address()\r\n   at Microsoft.Extensions.Internal.PropertyHelper.CallNullSafePropertyGetter[TDeclaringType,TValue](Func`2 getter, Object target)\r\n   at Microsoft.AspNetCore.Mvc.Internal.DefaultComplexObjectValidationStrategy.Enumerator.GetModel(Object container, ModelMetadata property)\r\n   at Microsoft.AspNetCore.Mvc.Internal.DefaultComplexObjectValidationStrategy.Enumerator.<>c__DisplayClass10_0.<MoveNext>b__1()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry.get_Model()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Validate(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.Internal.DefaultObjectValidator.Validate(ActionContext actionContext, ValidationStateDictionary validationState, String prefix, Object model)\r\n   at Microsoft.AspNetCore.Mvc.RazorPages.PageBase.TryValidateModel(Object model, String prefix)\r\n   at Microsoft.AspNetCore.Mvc.RazorPages.PageBase.TryValidateModel(Object model)\r\n   at AspNetCore._Pages_Test_cshtml.OnPost() in c:\\projects2010\\Conferences\\AspNetCoreLocalization\\AspNetCoreLocalization\\Pages\\Test.cshtml:line 22\r\n   at Microsoft.AspNetCore.Mvc.RazorPages.Internal.ExecutorFactory.VoidHandlerMethod.Execute(Object receiver, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker.<InvokeHandlerMethodAsync>d__29.MoveNext()\r\n```"},{"Id":"6754863404","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:29:51","Actor":"RickStrahl","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6987","RelatedDescription":"Closed issue \"RazorPages and AntiForgery Token\" (#6987) at aspnet/Mvc","RelatedBody":"I playing around with Razor Pages and I noticed that I can't get pages to post unless I explicitly add `@Html.AntiForgeryToken()` to the form.\r\n\r\nI was under the impression that when using the form tag helper the Anti-forgery token gets automatically injected?\r\n\r\nHere's the test RazorPage I'm using. Note I'm even explicitly setting `asp-antiforgery=\"true\"` but it still fails to send the cookie.\r\n\r\n```html\r\n@page\r\n@functions {\r\n    \r\n    public string Name { get; set; } = \"Rick\";\r\n    public string Message { get; set; } = \"Initial Message\";\r\n\r\n    public void OnGet()\r\n    {\r\n        Message = \"Getting somewhere\";\r\n    }\r\n\r\n    public void OnPost()\r\n    {\r\n        if (ModelState.IsValid)\r\n            Message = \"Posted no trespassing!\";\r\n        else\r\n            Message = \"Posted no trespassing!\";\r\n\r\n    }\r\n}\r\n@{\r\n    Layout = null;\r\n}\r\n<html>\r\n<body>\r\n    <form method=\"post\" asp-antiforgery=\"true\" >\r\n\r\n       @*@Html.AntiForgeryToken()*@\r\n\r\n        <input asp-for=\"Name\" type=\"text\" name=\"name\" id=\"name\" />\r\n        <button type=\"submit\" class=\"btn btn-default\">Show Hello</button>\r\n    </form>\r\n\r\n    <div class=\"alert alert-warning\">\r\n        @Model.Message\r\n    </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n"},{"Id":"6754853644","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:27:30","Actor":"khellang","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6988","RelatedDescription":"Opened issue \"Add support for the Sunset header\" (#6988) at aspnet/Mvc","RelatedBody":"It would be nice if MVC supported [the `Sunset` header](https://tools.ietf.org/html/draft-wilde-sunset-header-03), possibly through an attribute that you could annotate actions with.\r\n\r\nThis metadata, as well as `ObsoleteAttribute`, could then feed into something like https://github.com/json-schema-org/json-schema-spec/issues/74 and https://github.com/OAI/OpenAPI-Specification/issues/782.\r\n\r\nI realize that you might want to hold off until things move further down the IETF process, but thought I'd file this to start a discussion."},{"Id":"6754782276","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:10:40","Actor":"RickStrahl","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6987","RelatedDescription":"Opened issue \"RazorPages and AntiForgery Token\" (#6987) at aspnet/Mvc","RelatedBody":"I playing around with Razor Pages and I noticed that I can't get pages to post unless I explicitly add `@Html.AntiForgeryToken()` to the form.\r\n\r\nI was under the impression that when using the form tag helper the Anti-forgery token gets automatically injected?\r\n\r\nHere's the test RazorPage I'm using. Note I'm even explicitly setting `asp-antiforgery=\"true\"` but it still fails to send the cookie.\r\n\r\n```html\r\n@page\r\n@functions {\r\n    \r\n    public string Name { get; set; } = \"Rick\";\r\n    public string Message { get; set; } = \"Initial Message\";\r\n\r\n    public void OnGet()\r\n    {\r\n        Message = \"Getting somewhere\";\r\n    }\r\n\r\n    public void OnPost()\r\n    {\r\n        if (ModelState.IsValid)\r\n            Message = \"Posted no trespassing!\";\r\n        else\r\n            Message = \"Posted no trespassing!\";\r\n\r\n    }\r\n}\r\n@{\r\n    Layout = null;\r\n}\r\n<html>\r\n<body>\r\n    <form method=\"post\" asp-antiforgery=\"true\" >\r\n\r\n       @*@Html.AntiForgeryToken()*@\r\n\r\n        <input asp-for=\"Name\" type=\"text\" name=\"name\" id=\"name\" />\r\n        <button type=\"submit\" class=\"btn btn-default\">Show Hello</button>\r\n    </form>\r\n\r\n    <div class=\"alert alert-warning\">\r\n        @Model.Message\r\n    </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n"},{"Id":"6754268669","Type":"IssuesEvent","CreatedAt":"2017-10-23T19:18:19","Actor":"Rabadash8820","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6986","RelatedDescription":"Opened issue \"Add vary-by-culture Attribute to Cache Tag Helpers\" (#6986) at aspnet/Mvc","RelatedBody":"I have numerous Views with large sections of markup that do not change unless the user changes their language preferences.  I prefer the CookieRequestCultureProvider to handle language selection, so when I want to cache these Views, I have to use code like below.  This feels quite verbose to me, for what I imagine is a fairly common use case in production apps; namely, caching by request culture.\r\n\r\n```html\r\n<cache vary-by-cookie=\"@CookieRequestCultureProvider.DefaultCookieName\">\r\n    <!-- Other markup... -->\r\n</cache>\r\n```\r\n\r\nIt would be great if the `<cache>` element included some kind of `vary-by-culture` attribute out of the box which, turning the above code into:\r\n\r\n```html\r\n<cache vary-by-culture=\"true\">\r\n    <!-- Other markup... -->\r\n</cache>\r\n```\r\n\r\nNot only is this syntax cleaner, but it would also be `RequestCultureProvider`-agnostic, I think, as the caching mechanism could read the request culture from `HttpContext`'s `IRequestCultureFeature`, which could be set by query string, cookie, database, or whatever.  The only debate is probably whether to use Culture or UI Culture.  I would err on the side of UI Culture, but perhaps the cache key could be some kind of concatenation of both?"},{"Id":"6753989579","Type":"IssuesEvent","CreatedAt":"2017-10-23T18:18:45","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6985","RelatedDescription":"Opened issue \"Flaky test CacheTagHelperTest.ProcessAsync_WorksForNestedCacheTagHelpers\" (#6985) at aspnet/Mvc","RelatedBody":"I ran this non-stop for over an hour without repro. Seems very inconsistent but still flaky 😄 \r\n\r\nhttp://aspnetci/viewLog.html?buildId=347170&tab=buildResultsDiv&buildTypeId=Patches_20x_Public_TestWin2012#testNameId-8007269666152451102\r\n\r\n/cc @ryanbrandenburg "},{"Id":"6753455938","Type":"IssuesEvent","CreatedAt":"2017-10-23T16:26:00","Actor":"rjperes","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6984","RelatedDescription":"Opened issue \"Base class for ViewResult and PartialViewResult\" (#6984) at aspnet/Mvc","RelatedBody":"Since ViewResult and PartialViewResult share so much (properties and execution), why not have them inherit from a, abstract base class and just override ExecuteResultAsync, or some abstract method?"},{"Id":"6753185618","Type":"IssuesEvent","CreatedAt":"2017-10-23T15:36:49","Actor":"tarekgh","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6982","RelatedDescription":"Closed issue \"the Package: System.Text.Encoding.CodePages (ver:4.4.0) cannot be published\" (#6982) at aspnet/Mvc","RelatedBody":"_From @ringrid on October 15, 2017 21:38_\n\nI found this package of version 4.4.0 cannot be publish when I use \"dotnet publish\".\r\nwhen I change to version 4.3.0, It's ok, It has rutimes\\win and runtimes\\unix.\r\nfor version 4.4-preview, it has only runtimes\\win, no runtimes\\unix.\n\n_Copied from original issue: dotnet/corefx#24657_"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6755165506","Type":"PullRequestEvent","CreatedAt":"2017-10-23T22:53:17","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1481","RelatedDescription":"Opened pull request \"Fix issue with AddEntityFrameworkStores and user only store\" (#1481) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1480\r\n\r\nAlso patches test hole, the existing tests were using the store classes directly, rather than exercising the AddEntityFrameworkStores reflection logic so this code was never hit.\r\n\r\n@ajcvickers "},{"Id":"6755156586","Type":"IssuesEvent","CreatedAt":"2017-10-23T22:50:34","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1480","RelatedDescription":"Opened issue \"AddEntityFrameworkStores with only User specifies too many generic arguments\" (#1480) at aspnet/Identity","RelatedBody":"Reported by https://github.com/aspnet/Identity/pull/1479\r\n"},{"Id":"6751897477","Type":"PullRequestEvent","CreatedAt":"2017-10-23T11:29:51","Actor":"KhuongNtrd","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1479","RelatedDescription":"Opened pull request \" remove roleType while make UserOnlyStore\" (#1479) at aspnet/Identity","RelatedBody":""},{"Id":"6749174271","Type":"IssuesEvent","CreatedAt":"2017-10-22T15:59:24","Actor":"CarbonFactory","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1478","RelatedDescription":"Opened issue \"ASP.NET Core 2.0 Identity Expiration\" (#1478) at aspnet/Identity","RelatedBody":"There is a cookie with the name \".AspNetCore.Identity.Application\" added after I login the user and it's expiration time is set to 14 days from now, `2017-11-05T15:52:03.669Z`\r\n\r\n````\r\n services.AddIdentity<ApplicationUser, ApplicationRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddUserManager<ApplicationUserManager>()\r\n                .AddSignInManager<ApplicationSignInManagerr>()\r\n                .AddDefaultTokenProviders();\r\n\r\n\r\nservices.AddMvc(opts =>\r\n            {\r\n                opts.Filters.AddService(typeof(AjaxAntiforgeryCookieResultFilter));\r\n            })\r\n services\r\n                .AddAuthentication()\r\n                .AddJwtBearer(options =>\r\n                {\r\n                    options.RequireHttpsMetadata = false;\r\n                    options.SaveToken = true;\r\n                    options.TokenValidationParameters = tokenValidationParameters;\r\n                    options.Events = jwtBearerEvents;\r\n                });\r\n\r\n            services.ConfigureApplicationCookie(options =>\r\n            {\r\n                options.AccessDeniedPath = new PathString(\"/login\");\r\n                options.LoginPath = new PathString(\"/login\");\r\n                options.Cookie.Expiration = TimeSpan.FromMinutes(1);\r\n            });\r\n\r\n            services.AddAuthorization();\r\n\r\n````\r\n\r\nAbove is the related part of the code for brevity.\r\n\r\nHow do I ensure that after 10 mins, if the user refreshes the webpage, he is logged out and re-directed to login.\r\n\r\nThe `ConfigureApplicationCookie` values seem to be ignored."},{"Id":"6740275572","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:17:48","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1463","RelatedDescription":"Closed issue \"How to generate mobile  4 digit token in .net core?\" (#1463) at aspnet/Identity","RelatedBody":""},{"Id":"6740272895","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:17:14","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1464","RelatedDescription":"Closed issue \"How to change Type from String to Int and Auto-generated UserName and NormalizedUserName Properties?\" (#1464) at aspnet/Identity","RelatedBody":"I intended to use UserName property as Employee Codes (integers and auto-incrementing). \r\n\r\nAs per policy, My application requires the employee to be able to log in using their employee code (which are integer values of 5 digits, if that's relevant ). \r\n\r\nI was using UserName property to store the employee codes, but now the requirement is to automatically generate an Employee Code (similar behavior of auto increment in SQL Server.) \r\n\r\nIs their anyway to override UserName and used it as integer and auto-generate it whenever a new record is inserted in the table. "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6755240350","Type":"PullRequestEvent","CreatedAt":"2017-10-23T23:18:16","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2121","RelatedDescription":"Merged pull request \"Switching to the new toolset compiler - 2.6.0-beta2-62211-02\" (#2121) at aspnet/KestrelHttpServer","RelatedBody":"This brings support for the final syntax of \"ref readonly\" and some bug fixes.\r\n\r\nNoticeable changes:\r\n- use `in` at declaration of \"in\" parameters, not `ref readonly`\r\n- `ref` comes before `partial` when declaring partial ref structs.\r\n- unboxing conversions for ref-like types are statically rejected as impossible to succeed\r\n\r\nThe corresponding VSIX to match these compiler bits with IDE experience is -\r\nhttps://dotnet.myget.org/F/roslyn/vsix/0b48e25b-9903-4d8b-ad39-d4cca196e3c7-2.6.0.6221102.vsix"},{"Id":"6755061373","Type":"IssuesEvent","CreatedAt":"2017-10-23T22:21:32","Actor":"thengakkola","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2114","RelatedDescription":"Closed issue \"How to configure Https in servicefabric with kestrel if no port is specified.\" (#2114) at aspnet/KestrelHttpServer","RelatedBody":"My internal stateful service doesn't expose a port in Service Endpoint. I.e no  Endpoints in ServiceManifest.xml. In this case if I want to configure ListenOptions with https how will I  use this ListenOptions?\r\n\r\n .UseKestrel(options =>\r\n {\r\n    options.Listen(System.Net.IPAddress.Any, \"what here?\" , listenOptions =>\r\n     {     \r\n       listenOptions.UseHttps(certificate);\r\n     });\r\n  })"},{"Id":"6753871682","Type":"IssuesEvent","CreatedAt":"2017-10-23T17:53:45","Actor":"anurse","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2085","RelatedDescription":"Closed issue \"Perf Regression: Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations\" (#2085) at aspnet/KestrelHttpServer","RelatedBody":"\"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations\" (https://github.com/aspnet/KestrelHttpServer/issues/2017) seems to have caused a 5% regression in Plaintext on both Cloud and Physical hardware.  You can repro the regression by comparing branch `mikeharder/perf-test-before` to 1470ee0.\r\n\r\nHardware | mikeharder/perf-test-before | 1470ee0 | Ratio\r\n------------ | ------------- | ------------ | ------------\r\nCloud | 560k | 534k | 0.95\r\nPhysical | 1.30M | 1.22M | 0.94\r\n"},{"Id":"6753863532","Type":"PullRequestEvent","CreatedAt":"2017-10-23T17:52:03","Actor":"anurse","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2123","RelatedDescription":"Merged pull request \"Fix for #2085 - \"The Detaskening\"\" (#2123) at aspnet/KestrelHttpServer","RelatedBody":"PR #2041 ended up introducing a 5% perf regression in the HTTP/1.1 path. After investigating, I tracked it down to the refactoring of parsing logic into a helper function. Prior to #2041, the HTTP/1.1 and HTTP/2 implementations of `Frame` (what is now `HttpProtocol`) had their own request processing loops and the parsing was done inline in this function (in fact, much of the logic was done in-line, or in functions that intentionally avoid creating an async state machine until necessary). In #2041, by refactoring the parsing logic into a helper function, an async state machine was created in every request (within the `Http1Connection.ParseRequestAsync` method).\r\n\r\nSo, unfortunately this means we can't have nice things and we have to unrefactor that logic. It also means that `Http1Connection` and `Http2Stream` (the two implementations of `HttpProtocol`) have to have mostly-similar `ProcessRequestsAsync` methods but we can't refactor them up to the base class (because it would create more state machines).\r\n\r\nOpen to suggestions on how to add the code sharing back in a performant way.\r\n\r\nPerf Data:\r\n\r\n| Hardware | Benchmark | `dev` | This change | Ratio |\r\n|-|-|-|-|-|\r\n| Physical | Plaintext | 1.246M | 1.307M | 1.246 / 1.307 = **0.953** |\r\n| Cloud | Plaintext | 501,510.91 | 537,988.42 | **0.933** (but Cloud data is also a bit volatile) |\r\n\r\n/fyi @cesarbs, in case you're curious what the fix ended up being ;).\r\n"},{"Id":"6753579414","Type":"PullRequestEvent","CreatedAt":"2017-10-23T16:51:01","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2126","RelatedDescription":"Merged pull request \"Validate benchmarks\" (#2126) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6752473476","Type":"IssuesEvent","CreatedAt":"2017-10-23T13:34:02","Actor":"Tornhoof","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2129","RelatedDescription":"Opened issue \"Kestrelserver ReasonPhrase formatting\" (#2129) at aspnet/KestrelHttpServer","RelatedBody":"I know that reason phrase is not in Http/2 anymore and even optional in Http/1.1, but according to RFC spec the current calculation is wrong:\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/3fbfba63f813de004030615546546360b565b8d5/src/Kestrel.Core/Internal/Http/ReasonPhrases.cs#L223-L227\r\n\r\nAccording to the RFC https://tools.ietf.org/html/rfc7230#section-3.1.2 you need to print the space regardless if the reason phrase is empty.\r\n>  status-line = HTTP-version SP status-code SP reason-phrase CRLF\r\n\r\nI know this is nit-picking, but I actually stumbled across while writing my http batch handler middleware."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6755311594","Type":"IssuesEvent","CreatedAt":"2017-10-23T23:43:23","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1733","RelatedDescription":"Opened issue \"Protect against NREs in DirectiveCompletionProvider\" (#1733) at aspnet/Razor","RelatedBody":"Today we attempt to locate the owner of a change and if its `null` we NRE. That NRE crashes VS.\r\n\r\nShould fix this for the 15.5 release and then port back to latest."},{"Id":"6754901629","Type":"PullRequestEvent","CreatedAt":"2017-10-23T21:39:16","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1722","RelatedDescription":"Merged pull request \"Manage VisualStudioRazorParser lifetime.\" (#1722) at aspnet/Razor","RelatedBody":"- Exposed `VisualStudioRazorParser`, `DocumentStructureChangedEventArgs` and `ICanHasContextChangedListener` as ways to consume the new parser for a Razor document.\r\n- Split the `VisualStudioRazorParser` into an abstract base and an implementation to avoid internal constructors.\r\n- Changed the parser and corresponding smart indenter to take in document trackers, template engine factories and parser context change listeners. Of these additions the parser context change listeners will be deprecated once we own the TagHelper discovery mechanisms.\r\n- Changed how the parser manages its internal parsing life cycle. It now creates template engines when the document tracker tells it to. So when project changes happen or new documents are opened the parser will re-instantiate its internal parsers to ensure that they're parsing against the correct configurations.\r\n- Split the `VisualStudioDocumentTrackerFactory` into a provider and a factory. The provider exposes the old `GetTracker` methods where the factory is the text view connection listener implementation.\r\n- Changed the code document provider to now use the parser provider in order to locate code documents associated with buffers. Prior to this that logic was hard coded.\r\n- Removed old template engine reconstruction logic in the document tracker now that the parser owns that piece.\r\n\r\n#1630"},{"Id":"6754386461","Type":"PullRequestEvent","CreatedAt":"2017-10-23T19:44:30","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1727","RelatedDescription":"Merged pull request \"RazorPageGenerator: extracted creating RazorEngine into a method [refactoring]\" (#1727) at aspnet/Razor","RelatedBody":"RazorPageGenerator: extracted creating RazorEngine into a method to simplify reusing logic in custom generators\r\nRazorPageGenerator: added optional cli argument with base directory  (previously current dir always was used)"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6755370001","Type":"IssuesEvent","CreatedAt":"2017-10-24T00:04:44","Actor":"ezeasharma","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/874","RelatedDescription":"Opened issue \"The project file could not be loaded.\" (#874) at aspnet/Templates","RelatedBody":"I migrated my .netcore 1.1 proj to 2.0 using this link https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/\r\n\r\nbut when i perform \"dotnet restore -v d\" i get the following error:\r\n\r\n`Build started 10/23/2017 19:57:01.\r\n     1>Project \"someproj.csproj\" on node 1 (Restore target(s)).\r\n     1>Building with tools version \"15.0\".\r\n     1>someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n     1>Done Building Project \"someproj.csproj\" (Restore target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"/someproj/someproj.csproj\" (Restore target) (1) ->\r\n         /someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)`"},{"Id":"6746261533","Type":"IssuesEvent","CreatedAt":"2017-10-21T00:03:24","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/872","RelatedDescription":"Closed issue \"Unnecessary User.Id provided in password reset link?\" (#872) at aspnet/Templates","RelatedBody":"The user Id is provided in the callback link:\r\n\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L424\r\n\r\nBut in the controller action only code is used:\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L443\r\n\r\nIn my opinion it's better not to provide more information than necessary."},{"Id":"6739078198","Type":"PullRequestEvent","CreatedAt":"2017-10-19T15:14:22","Actor":"s-whaley","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/pull/873","RelatedDescription":"Opened pull request \"Account AccessDenied View Razor Syntax Bug Fix\" (#873) at aspnet/Templates","RelatedBody":"views/account/accessdenied ViewData[title] missing @ symbol"},{"Id":"6727246559","Type":"IssuesEvent","CreatedAt":"2017-10-17T12:58:45","Actor":"tverboon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/872","RelatedDescription":"Opened issue \"Unnecessary User.Id provided in password reset link?\" (#872) at aspnet/Templates","RelatedBody":"The user Id is provided in the callback link:\r\n\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L424\r\n\r\nBut in the controller action only code is used:\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L443\r\n\r\nIn my opinion it's better not to provide more information than necessary."},{"Id":"6715213451","Type":"IssuesEvent","CreatedAt":"2017-10-13T20:09:17","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Closed issue \"Add HttpsRedirection and HSTS middleware template\" (#871) at aspnet/Templates","RelatedBody":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher "},{"Id":"6715040017","Type":"IssuesEvent","CreatedAt":"2017-10-13T19:22:44","Actor":"jkotalik","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Opened issue \"Add HttpsRedirection and HSTS middleware template\" (#871) at aspnet/Templates","RelatedBody":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher "},{"Id":"6698255499","Type":"PullRequestEvent","CreatedAt":"2017-10-10T17:47:03","Actor":"scottsauber","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Opened pull request \"Change Lockout wording of comment\" (#870) at aspnet/Templates","RelatedBody":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want."},{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"},{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6754805124","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:00","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/274","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed\" (#274) at aspnet/Announcements","RelatedBody":"Hi, we now have a public test feed that you can use to try out the ASP.NET/EF Core 2.0.3 patch!\r\n\r\nYou can test this pre-release patch by adding the following feed to your app's or machine's NuGet.config file:\r\n* `https://dotnet.myget.org/F/aspnet-2-0-2-october2017-patch-public/api/v3/index.json`\r\n   * ![image](https://user-images.githubusercontent.com/202643/31913542-4757d2a0-b7fc-11e7-9bf7-7157bd18a6ca.png)\r\n   * (please ignore the *name* of the feed; it is incorrect 😦)\r\n\r\n## Update your project\r\n1. Open an existing .NET Core 2.0 project's CSPROJ file\r\n2. Update the version of the `Microsoft.AspNetCore.All` package from `2.0.0` to `2.0.3-*`\r\n3. Update the version of all the other `<PackageReference>` items from `2.0.0` to `2.0.1-*` (*Note: This is a different version than the `.All` package!*)\r\n4. Add the following element to the `<PropertyGroup>` at the top of the CSPROJ file:\r\n   * `<NoWarn>$(NOWARN);NU1605</NoWarn>`\r\n5. From a command line window (terminal), run `dotnet restore` to restore the pre-release patch packages into the project (or restore packages from your IDE, such as Visual Studio 2017)\r\n6. You should now be able to run your project with the pre-release patch packages\r\n\r\n## Additional resources\r\n* More info on updating NuGet packages is available here:\r\n   * https://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages\r\n* The full list of fixes and changes made in this patch are available using this query:\r\n   * https://github.com/search?utf8=%E2%9C%93&q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.0.3&type=Issues\r\n* You can browse the list of updated packages on this gallery page:\r\n   * https://dotnet.myget.org/gallery/aspnet-2-0-2-october2017-patch-public\r\n\r\n## Feedback\r\nWe are looking for feedback on this patch. We'd like to know if you have any issues with this patch by updating your apps and libraries to the latest packages and seeing if it fixes the issues you've had, or if it introduces any new issues. If you have any issues or questions, please reply on the [discussion thread](XYZ) to let us know as soon as possible.\r\n\r\n## What's next\r\nWe will post an update when the patch is publicly available on [NuGet.org](https://nuget.org).\r\n\r\nThanks,\r\nEilon"},{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-24T05:30:10.5558884Z","RunDurationInMilliseconds":8852}