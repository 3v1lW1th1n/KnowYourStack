{"Data":{"GitHub":{"Issues":[{"Id":"429566389","IsPullRequest":true,"CreatedAt":"2019-04-05T03:17:15","Actor":"wschin","Number":"3210","RawContent":null,"Title":"Fix marshalling of bool flags in MF","State":"open","Body":"Fix #3003. The marshalled Boolean size from C# to C should be 1 byte, not 4. Also, the change from LIBMF is for supporting quiet option in new implicit-feedback MF.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3210","RelatedDescription":"Open PR \"Fix marshalling of bool flags in MF\" (#3210)"},{"Id":"429540526","IsPullRequest":false,"CreatedAt":"2019-04-05T00:49:56","Actor":"prathyusha12345","Number":"3209","RawContent":null,"Title":"[1.0.0-preview] Bug? - Getting an exception while loading .ZIP model MultiClass-Classification trained with SdcaNonCalibrated","State":"open","Body":"I am trying to migrate IRIS Classification sample in the repo [here](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/MulticlassClassification_Iris) to **v1.0.0-preview**.\r\n\r\nWhile loading the model for prediction I am getting the below error at the statement \r\n\r\n                trainedModel = mlContext.Model.Load(stream, out var modelInputSchema);\r\n\r\n\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=Error during class instantiation\r\n  Source=Microsoft.ML.Core\r\n  StackTrace:\r\n   at Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo.CreateInstanceCore(Object[] ctorArgs)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes](IHostEnvironment env, Type signatureType, TRes& result, String name, String options, Object[] extra)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes,TSig](IHostEnvironment env, TRes& result, String name, String options, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.TryLoadModelCore[TRes,TSig](IHostEnvironment env, TRes& result, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.TryLoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, Entry ent, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, Entry ent, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModelOrNull[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelOperationsCatalog.Load(Stream stream, DataViewSchema& inputSchema)\r\n   at MulticlassClassification_Iris.Program.TestSomePredictions(MLContext mlContext) in C:\\GitRepos\\machinelearning-samples-v1.0.0-Preview\\samples\\csharp\\getting-started\\MulticlassClassification_Iris\\IrisClassification\\IrisClassificationConsoleApp\\Program.cs:line 99\r\n   at MulticlassClassification_Iris.Program.Main(String[] args) in C:\\GitRepos\\machinelearning-samples-v1.0.0-Preview\\samples\\csharp\\getting-started\\MulticlassClassification_Iris\\IrisClassification\\IrisClassificationConsoleApp\\Program.cs:line 36\r\n\r\nInner Exception 1:\r\nTargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\nInner Exception 2:\r\nInvalidOperationException: Error during class instantiation\r\n\r\nInner Exception 3:\r\nTargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\nInner Exception 4:\r\nInvalidOperationException: Error during class instantiation\r\n\r\nInner Exception 5:\r\nTargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\nInner Exception 6:\r\nFormatException: Couldn't load model: 'TransformerChain\\Transform_002\\Transform_000\\Model'\r\n\r\n```\r\nthe dataset format is like this \r\n\r\n```\r\n#Label\tSepal length\tSepal width\tPetal length\tPetal width\r\n0\t5.4\t3.7\t1.5\t0.2\r\n0\t4.8\t3.4\t1.6\t0.2\r\n0\t4.8\t3.0\t1.4\t0.1\r\n0\t4.3\t3.0\t1.1\t0.1\r\n```\r\n\r\n\r\nI have pushed the code to the Github repo  here https://github.com/dotnet/machinelearning-samples/tree/migration/1.1.0-preview/samples/csharp/getting-started/MulticlassClassification_Iris\r\n\r\nI did not understand the reason for the error. Could anyone help","Url":"https://github.com/dotnet/machinelearning/issues/3209","RelatedDescription":"Open issue \"[1.0.0-preview] Bug? - Getting an exception while loading .ZIP model MultiClass-Classification trained with SdcaNonCalibrated\" (#3209)"},{"Id":"428965681","IsPullRequest":true,"CreatedAt":"2019-04-05T00:13:11","Actor":"zeahmed","Number":"3191","RawContent":null,"Title":" Created sample for 'LatentDirichletAllocation' API.","State":"closed","Body":"Related to #1209.","Url":"https://github.com/dotnet/machinelearning/pull/3191","RelatedDescription":"Closed or merged PR \" Created sample for 'LatentDirichletAllocation' API.\" (#3191)"},{"Id":"429531451","IsPullRequest":true,"CreatedAt":"2019-04-05T00:00:20","Actor":"abgoswam","Number":"3208","RawContent":null,"Title":"Fixing namespace for image samples","State":"open","Body":"Towards #3205 \r\n\r\n- fixing the Image samples (which were previously updated via #3165)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3208","RelatedDescription":"Open PR \"Fixing namespace for image samples\" (#3208)"},{"Id":"428479112","IsPullRequest":true,"CreatedAt":"2019-04-04T21:17:21","Actor":"zeahmed","Number":"3183","RawContent":null,"Title":"Created samples for 'ProduceWordBags' and 'ProduceHashedWordBags' API.","State":"closed","Body":"Related to #1209.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3183","RelatedDescription":"Closed or merged PR \"Created samples for 'ProduceWordBags' and 'ProduceHashedWordBags' API.\" (#3183)"},{"Id":"429452655","IsPullRequest":false,"CreatedAt":"2019-04-04T19:47:41","Actor":"sfilipi","Number":"3207","RawContent":null,"Title":"Error for KeyType attribute without initializing the Count ","State":"open","Body":"The KeyType attribute has a public parameterless constructor, that initializes [the Count to int.maxInt ](https://github.com/dotnet/machinelearning/blob/45b6c43387294d19cad843a21e87539213e8d34c/src/Microsoft.ML.Data/Data/SchemaDefinition.cs#L398).\r\n\r\nWhen we process the KeyTypes with  [KeyToMappingTransformer ](https://github.com/dotnet/machinelearning/blob/45b6c43387294d19cad843a21e87539213e8d34c/src/Microsoft.ML.Data/Transforms/KeyToVector.cs#L252) we [check that the Count of the KeyType is less than maxInt](https://github.com/dotnet/machinelearning/blob/45b6c43387294d19cad843a21e87539213e8d34c/src/Microsoft.ML.Core/Data/ColumnTypeExtensions.cs#L37).  \r\n\r\nThe error message is that the 'counts exceeds int.MaxValue', which for the case described (user annotating with the parameterless KeyType) leads to error. \r\n\r\nEither don't expose the parameterless KeyType constructor, or initialize to somethign else (MaxInt- 1?, is such a  large number even practical?) or accept MaxInt as a valid value. \r\n\r\n@TomFinley  @eerhardt @glebuk for suggestions. \r\n\r\nCode to repro\r\n```\r\n    class MapKeyToVector\r\n    {\r\n        /// This example demonstrates the use of the ValueMappingEstimator by mapping strings to other string values, or floats to strings. \r\n        /// This is useful to map types to a category. \r\n        public static void Example()\r\n        {\r\n            // Create a new ML context, for ML.NET operations. It can be used for exception tracking and logging, \r\n            // as well as the source of randomness.\r\n            var mlContext = new MLContext();\r\n\r\n            // Get a small dataset as an IEnumerable.\r\n            var rawData = new[] {\r\n                new DataPoint() { Timeframe = 45, Category = 5 },\r\n                new DataPoint() { Timeframe = 15, Category = 4 },\r\n                new DataPoint() { Timeframe = 65, Category = 4 },\r\n                new DataPoint() { Timeframe = 25, Category = 3 },\r\n                new DataPoint() { Timeframe = 45, Category = 3 },\r\n                new DataPoint() { Timeframe = 45, Category = 5 }\r\n            };\r\n\r\n            var data = mlContext.Data.LoadFromEnumerable(rawData);\r\n\r\n            // Constructs the ML.net pipeline\r\n            var pipeline = mlContext.Transforms.Conversion.MapKeyToVector(\"TimeframeVector\", \"Timeframe\")\r\n                           .Append(mlContext.Transforms.Conversion.MapKeyToVector(\"CategoryVector\", \"Category\", outputCountVector: true));\r\n\r\n            // Fits the pipeline to the data.\r\n            IDataView transformedData = pipeline.Fit(data).Transform(data);\r\n        }\r\n\r\n        private class DataPoint\r\n        {\r\n            [KeyType]\r\n            public uint Timeframe { get; set; }\r\n\r\n            [KeyType]\r\n            public uint Category { get; set; }\r\n\r\n        }\r\n}","Url":"https://github.com/dotnet/machinelearning/issues/3207","RelatedDescription":"Open issue \"Error for KeyType attribute without initializing the Count \" (#3207)"},{"Id":"429420795","IsPullRequest":false,"CreatedAt":"2019-04-04T18:26:22","Actor":"rogancarr","Number":"3206","RawContent":null,"Title":"ONNX Exports are Lossy","State":"open","Body":"As shown in the [ONNX Functional Tests](https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Functional.Tests/ONNX.cs), export to ONNX models are lossy: They are not high-fidelity representations of the original ML.NET model and agree numerically to a relatively lower precision than expected.","Url":"https://github.com/dotnet/machinelearning/issues/3206","RelatedDescription":"Open issue \"ONNX Exports are Lossy\" (#3206)"},{"Id":"429418962","IsPullRequest":false,"CreatedAt":"2019-04-04T18:21:57","Actor":"shmoradims","Number":"3205","RawContent":null,"Title":"API reference - Remove Microsoft.ML prefix from samples' namespace","State":"open","Body":"Currently the samples are written like this:\r\n\r\n```csharp\r\nnamespace **Microsoft.ML**.Samples.Dynamic.*\r\n{ \r\n}\r\n```\r\nThis is causing the samples to not require `using Microsoft.ML`. We want to drop the Microsoft.ML prefix from samples and write them like this:\r\n\r\n```csharp\r\nnamespace Samples.Dynamic.*\r\n{ \r\n}\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3205","RelatedDescription":"Open issue \"API reference - Remove Microsoft.ML prefix from samples' namespace\" (#3205)"},{"Id":"429393248","IsPullRequest":false,"CreatedAt":"2019-04-04T17:17:18","Actor":"sfilipi","Number":"3204","RawContent":null,"Title":"The XML documentation for the transforms should contain information about schema ","State":"open","Body":"The XML documentation for the transforms should contain information about the schema: requirements about the type of the columns to work on, and information about the type of the columns produced. \r\n\r\n@shmoradims \r\n","Url":"https://github.com/dotnet/machinelearning/issues/3204","RelatedDescription":"Open issue \"The XML documentation for the transforms should contain information about schema \" (#3204)"},{"Id":"429018234","IsPullRequest":true,"CreatedAt":"2019-04-04T16:49:59","Actor":"TomFinley","Number":"3194","RawContent":null,"Title":"Key type documentation.","State":"closed","Body":"Towards #3095, specifically w.r.t. key types.","Url":"https://github.com/dotnet/machinelearning/pull/3194","RelatedDescription":"Closed or merged PR \"Key type documentation.\" (#3194)"},{"Id":"429317754","IsPullRequest":false,"CreatedAt":"2019-04-04T14:40:09","Actor":"esso23","Number":"3203","RawContent":null,"Title":"Extension methods from TimeSeriesStatic.cs (A Typo and A Missing Nuget for Static Time Series)","State":"open","Body":"### System information\r\n\r\n- Windows 10 Pro\r\n- .NET 4.6.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI am trying to use extension method `DetectSpikeBySsa` from class `SsaSpikeDetecotStaticExtensions` (there's a typo in the name btw). I'm using static API and TimeSeries package.\r\n\r\n- **What happened?**\r\nThe extension method (and any other extension methods from that namespace) is not available to use on Scalar\\<float\\> type.\r\nI am using `SsaSpikeDetection()` test from `TimeSeriesStaticTests.cs` as a reference.\r\n\r\n- **What did you expect?**\r\nExpected usage (from the referenced test):\r\n```cs\r\nvar staticLearningPipeline = staticData.MakeNewEstimator()\r\n                .Append(r => r.Value.DetectSpikeBySsa(80, ChangeHistoryLength, TrainingWindowSize, SeasonalityWindowSize));\r\n```\r\nbut `DetectSpikeBySsa` is not available on my Scalar\\<float\\>.\r\n\r\n### Source code / logs\r\n\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Transforms;\r\nusing Microsoft.ML.Transforms.TimeSeries;\r\nusing Microsoft.ML.StaticPipe;\r\nusing Microsoft.ML.Trainers;\r\n\r\nnamespace xxx.Modules.Data.ML.Dev\r\n{\r\n    public class DataLoader\r\n    {\r\n        private sealed class SpikePrediction\r\n        {\r\n            [VectorType(3)]\r\n            public double[] Data;\r\n        }\r\n\r\n        private class DataObject\r\n        {\r\n            public float Gain { get; set; }\r\n        }\r\n\r\n        public DataLoader()\r\n        {\r\n            MLContext mlContext = new MLContext(seed: 0);\r\n            var loader = mlContext.Data.CreateTextLoader(ctx => (\r\n                    Id: ctx.LoadText(0),\r\n                    Begin: ctx.LoadText(1),\r\n                    End: ctx.LoadText(2),\r\n                    Gain: ctx.LoadFloat(3),\r\n                    Confidence: ctx.LoadFloat(4)\r\n                ), separator: ',', hasHeader: true);\r\n\r\n            var data = loader.Load(\"output_intervals.csv\");\r\n\r\n            var preview = data.AsDynamic.Preview();\r\n\r\n            var learningPipeline = loader.MakeNewEstimator()\r\n                .Append(r => (\r\n                    r.Gain.DetectSpikeBySsa(80, 800 / 4, 800 / 2, 800 / 8) // Cannot resolve symbol...\r\n                ));\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIncluded packages:\r\n```\r\n<packages>\r\n  <package id=\"Castle.Core\" version=\"4.2.1\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML\" version=\"1.0.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.CpuMath\" version=\"1.0.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.DataView\" version=\"1.0.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.Experimental\" version=\"0.12.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.FastTree\" version=\"1.0.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.ImageAnalytics\" version=\"1.0.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.Mkl.Redist\" version=\"1.0.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.Recommender\" version=\"0.12.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.StaticPipe\" version=\"0.12.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.ML.TimeSeries\" version=\"0.12.0-preview\" targetFramework=\"net461\" />\r\n  <package id=\"Newtonsoft.Json\" version=\"10.0.3\" targetFramework=\"net461\" />\r\n  <package id=\"NLog\" version=\"4.6.1\" targetFramework=\"net461\" />\r\n  <package id=\"System.Buffers\" version=\"4.4.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.CodeDom\" version=\"4.4.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.Collections.Immutable\" version=\"1.5.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.Drawing.Common\" version=\"4.5.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.Memory\" version=\"4.5.1\" targetFramework=\"net461\" />\r\n  <package id=\"System.Numerics.Vectors\" version=\"4.4.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.Reactive\" version=\"4.0.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.Reflection.Emit.Lightweight\" version=\"4.3.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.Runtime.CompilerServices.Unsafe\" version=\"4.5.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.Threading.Tasks.Dataflow\" version=\"4.8.0\" targetFramework=\"net461\" />\r\n  <package id=\"System.ValueTuple\" version=\"4.4.0\" targetFramework=\"net461\" />\r\n  <package id=\"WampSharp\" version=\"19.3.1\" targetFramework=\"net461\" />\r\n</packages>\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3203","RelatedDescription":"Open issue \"Extension methods from TimeSeriesStatic.cs (A Typo and A Missing Nuget for Static Time Series)\" (#3203)"},{"Id":"429316614","IsPullRequest":false,"CreatedAt":"2019-04-04T14:38:05","Actor":"luisquintanilla","Number":"3202","RawContent":null,"Title":"LoadColumn Attribute Inconsistent Behavior for Vector Properties Between File and In-Memory Sources","State":"open","Body":"Given the following data model / schema where `Features` is a float vector:\r\n\r\n```csharp\r\npublic class IrisData\r\n{\r\n    [LoadColumn(0,2)]\r\n    public float Features { get; set; }\r\n    [LoadColumn(3)]\r\n    public float Label { get; set; }\r\n}\r\n```\r\n\r\nWhen loading data from a file and applying transformations, there are no errors and transforms work as expected. However, when trying to use the same data model / schema to create and work with in-memory data, there are errors as shown in the screenshot below:\r\n\r\n![image](https://user-images.githubusercontent.com/46974588/55563915-caf2cf80-56c4-11e9-92e6-016c4932b9d7.png)\r\n\r\nWorkarounds are\r\n\r\na) Create a new data model / schema for in-memory data\r\n```csharp\r\npublic class IrisDataFloatArrayFeatures{\r\n    [LoadColumn(0,2)]\r\n    [VectorType(3)]\r\n    public float[] Features { get; set; }\r\n    [LoadColumn(3)]\r\n    public float Label { get; set; }\r\n}\r\n```\r\nb) Apply `VectorType` attribute to the original model and change property type to `float[]`\r\n```csharp\r\npublic class IrisData\r\n{\r\n    [LoadColumn(0,2)]\r\n    [VectorType(3)]\r\n    public float[] Features { get; set; }\r\n    [LoadColumn(3)]\r\n    public float Label { get; set; }\r\n}\r\n```\r\nSince `LoadColumn` works for file data, it would be preferable to reuse the same data model / schema for in-memory data. Additionally, simply converting the property type to `float[]` without the `VectorType` attribute does not work when trying to apply transforms since the framework does not automatically pick up that the `float[]` property is a vector like it otherwise would with `LoadColumn` annotation leaving it to the user to manually convert the property to a vector.","Url":"https://github.com/dotnet/machinelearning/issues/3202","RelatedDescription":"Open issue \"LoadColumn Attribute Inconsistent Behavior for Vector Properties Between File and In-Memory Sources\" (#3202)"},{"Id":"429306551","IsPullRequest":false,"CreatedAt":"2019-04-04T14:19:13","Actor":"luisquintanilla","Number":"3201","RawContent":null,"Title":"Normalize Transform on In-Memory Data Returns Zero","State":"open","Body":"Given the code below:\r\n\r\n```csharp\r\nstatic void RunNormalizeExample()\r\n{\r\n    MLContext mlContext = new MLContext();\r\n\r\n    SampleData[] inMemoryCollection = new SampleData[]\r\n    {\r\n        new SampleData {Features = new float[] {5.1f,3.5f,1.4f}}\r\n    };\r\n\r\n    IDataView data = mlContext.Data.LoadFromEnumerable<SampleData>(inMemoryCollection);\r\n\r\n    IEstimator<ITransformer> dataPrep = mlContext.Transforms.Normalize(\"Features\");\r\n        \r\n    ITransformer dataPrepTransformer = dataPrep.Fit(data);\r\n\r\n    IDataView transformedDataView = dataPrepTransformer.Transform(data);\r\n\r\n    var transformedFeatures = transformedDataView.GetColumn<float[]>(mlContext, \"Features\").ToList();\r\n}\r\n```\r\n\r\nWhere the schema for `SampleData` is the following:\r\n\r\n```csharp\r\npublic class SampleData\r\n{\r\n    [VectorType(3)]\r\n    public float[] Features { get; set; }\r\n    public float Label { get; set; }\r\n}\r\n```\r\n\r\nThe values in `transformedFeatures` which are the normalized values using the default (MinMax) implementation of `Normalize` are all zero.\r\n\r\n![image](https://user-images.githubusercontent.com/46974588/55562853-cf1ded80-56c2-11e9-8ee4-d178168d7876.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3201","RelatedDescription":"Open issue \"Normalize Transform on In-Memory Data Returns Zero\" (#3201)"},{"Id":"429301300","IsPullRequest":false,"CreatedAt":"2019-04-04T14:09:25","Actor":"xperiandri","Number":"3200","RawContent":null,"Title":"Templates support for Visual Studio 2019","State":"open","Body":"Add support for Visual Studio 2019 in templates\r\nhttps://marketplace.visualstudio.com/items?itemName=MLNET.07\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3200","RelatedDescription":"Open issue \"Templates support for Visual Studio 2019\" (#3200)"},{"Id":"429020485","IsPullRequest":false,"CreatedAt":"2019-04-04T01:21:58","Actor":"najeeb-kazmi","Number":"3196","RawContent":null,"Title":"Custom Exception exposes .Message","State":"closed","Body":"Related to: VSO Task [799758](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/799758)\r\n\r\nSecurity guidelines for release include the following for exposing sensitive data.\r\n\r\nApplications MUST NOT expose sensitive application data to end-users through error messages. This can be achieved by trapping all errors or exceptions within an application and exposing only a generic, innocuous message to the end-user. For example:\r\n\r\n- If a user attempts to login to a resource using a username/password combination, failures MUST NOT disclose whether it was the username or password that was incorrect. Instead, a more generic error message such as \"Invalid credentials, please try again.\" should be displayed to the user.\r\n- For custom exception classes, display MUST NOT include direct output from .ToString(), .Message, or .StackTrace. On other platforms, similar guidance applies.\r\n- For web applications, a generic \"HTTP 500\" page SHOULD BE returned instead of a stack trace. This can be enabled within IIS through customer error pages (via CustomErrors).\r\n\r\n\r\nFound one instance of a custom exception class having .Message exposed. I don't think exposing a message related to premature convergence is in any way exposing sensitive information, but filing this issue for the sake of completeness. \r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs#L575-L581\r\n\r\ncc: @glebuk @TomFinley ","Url":"https://github.com/dotnet/machinelearning/issues/3196","RelatedDescription":"Closed issue \"Custom Exception exposes .Message\" (#3196)"},{"Id":"429036395","IsPullRequest":true,"CreatedAt":"2019-04-04T01:00:27","Actor":"rogancarr","Number":"3199","RawContent":null,"Title":"Renaming OptimizationTolerance to fix a spelling error.","State":"open","Body":"In the `LbfgsTrainerBase`, the `OptmizationTolerance` option was misspelled.\r\n\r\nFixes #3198","Url":"https://github.com/dotnet/machinelearning/pull/3199","RelatedDescription":"Open PR \"Renaming OptimizationTolerance to fix a spelling error.\" (#3199)"},{"Id":"429027388","IsPullRequest":false,"CreatedAt":"2019-04-04T00:14:25","Actor":"daholste","Number":"3198","RawContent":null,"Title":"OptmizationTolerance public trainer API options misspelling","State":"open","Body":"Should be \"Optim\" instead of \"Optm\". Misspelling occurs on the public API for some trainers, like\r\nhttps://github.com/dotnet/machinelearning/blob/b6c5b703de4bdc2e0212597075223f4710dc98da/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs#L54","Url":"https://github.com/dotnet/machinelearning/issues/3198","RelatedDescription":"Open issue \"OptmizationTolerance public trainer API options misspelling\" (#3198)"},{"Id":"429021548","IsPullRequest":false,"CreatedAt":"2019-04-03T23:47:19","Actor":"ganik","Number":"3197","RawContent":null,"Title":"internal class GraphRunner needs to be exposed for NimbusML","State":"open","Body":"Version 0.12.0-preview\r\ninternal sealed class GraphRunner  breaks NimbusML build as the class can not be found.\r\nNeed [BestFriend] attribute","Url":"https://github.com/dotnet/machinelearning/issues/3197","RelatedDescription":"Open issue \"internal class GraphRunner needs to be exposed for NimbusML\" (#3197)"},{"Id":"429019876","IsPullRequest":true,"CreatedAt":"2019-04-03T23:39:27","Actor":"TomFinley","Number":"3195","RawContent":null,"Title":"Update DataViewRow and DataViewRowCursor implementation documentation.","State":"open","Body":"Towards #3095. The XML documentation for the classes themselves, while it could potentially be improved, is actually mostly correct already, unlike the situation for key-types where some information was wrong.","Url":"https://github.com/dotnet/machinelearning/pull/3195","RelatedDescription":"Open PR \"Update DataViewRow and DataViewRowCursor implementation documentation.\" (#3195)"},{"Id":"429009394","IsPullRequest":false,"CreatedAt":"2019-04-03T22:55:29","Actor":"najeeb-kazmi","Number":"3193","RawContent":null,"Title":"Exception Swallowing issues","State":"open","Body":"Related to: VSO Task [799764](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/799764)\r\n\r\nSecurity guidelines for release include the following for exception handling.\r\n\r\nException Handlers\r\nAll new product code must be free of \"swallow everything\" exception handlers:\r\n\r\n- C code must not catch and dismiss all SEH exceptions or SEH exceptions that your application cannot responsibly handle.\r\n- In unmanaged C++ code, do not enable asynchronous exception handling [/EHa flag] in combination with catching and \"swallowing\" all exceptions.\r\n/Eha has the side-effect of swallowing all exceptions from hardware (ex. floating point exceptions, division by zero, and access violations) when catch(…) is used.\r\n- In managed code do not use HandleProcessCorruptedStateExceptionsAttribute in combination with catching and \"swallowing\" all exceptions.\r\n- Recover only on exceptions that your application can handle safely, and let all other exceptions pass through.\r\n\r\n\r\nReviewing the repo, I found the following cases that looked questionable to me in src folder (ignoring test folder).  Please see if any of these requires more adequate handling.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/CommandLine/CmdParser.cs#L1895-L1898\r\n\r\nShould we inform user what the exception is here and then return null?\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/ComponentModel/AssemblyLoadingUtils.cs#L213-L216\r\n\r\nShould we raise the actual error instead of just saying that Action xyz failed in IFileHandle?\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/IFileHandle.cs#L110-L114\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/IFileHandle.cs#L125-L129\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/IFileHandle.cs#L142-L146\r\n\r\nA comment explaining that this should not throw.\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/Repository.cs#L181-L183\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/Repository.cs#L381-L383\r\n\r\nSee the review comment here.\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Data/DataLoadSave/Binary/BinaryLoader.cs#L1384-L1393\r\n\r\nAn error message here?\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.TensorFlow/TensorFlow/TensorflowUtils.cs#L206-L207\r\n\r\ncc: @glebuk @TomFinley ","Url":"https://github.com/dotnet/machinelearning/issues/3193","RelatedDescription":"Open issue \"Exception Swallowing issues\" (#3193)"},{"Id":"428975243","IsPullRequest":false,"CreatedAt":"2019-04-03T21:06:52","Actor":"Ivanidzo4ka","Number":"3192","RawContent":null,"Title":"LDA always prints to console","State":"open","Body":"Run LDA documentation sample:\r\n```\r\nusing 10 thread(s) to do train/test\r\nmem_block_size = 252\r\nalias_mem_block_size = 348\r\nstarted training with 10 threads\r\nIter: 0000      Thread = 0      Tokens: 29      Took: 0.0002612 sec     Throughput: 111026 token/(thread*sec)\r\nTotal likelihood: -210.838      ..........[Nomralized word ll: -323.375 Word  likelihood: 174.678       Doc   likelihood: -62.1403]\r\n```\r\nand so on without any option to turn it off.","Url":"https://github.com/dotnet/machinelearning/issues/3192","RelatedDescription":"Open issue \"LDA always prints to console\" (#3192)"},{"Id":"428898327","IsPullRequest":false,"CreatedAt":"2019-04-03T17:55:23","Actor":"shmoradims","Number":"3190","RawContent":null,"Title":"API reference: Add a sanity test that ensures samples are runnable","State":"open","Body":"This is a simpler version of #2954.\r\n\r\nWe need to make sure all the samples are runnable. Basically we'd need to look inside Microsoft.ML.Samples with reflection and run all static methods called Example().","Url":"https://github.com/dotnet/machinelearning/issues/3190","RelatedDescription":"Open issue \"API reference: Add a sanity test that ensures samples are runnable\" (#3190)"},{"Id":"428474581","IsPullRequest":true,"CreatedAt":"2019-04-03T16:56:26","Actor":"eerhardt","Number":"3182","RawContent":null,"Title":"Fix IncludeBuildNumberInPackageVersion for official builds","State":"closed","Body":"When doing an official build and setting a AzDO build variable, the variable turns into an environment variable. When MSBuild props/targets files declare a property, if they don't check if the property is already set, the MSBuild props file will override the environment variable. This causes the AzDO build variable to be ignored.\r\n\r\nAdding a check if the IncludeBuildNumberInPackageVersion property is already set before setting it in Directory.Build.props.\r\n\r\nThis is a cherry-pick of #3181 for the `master` branch.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3182","RelatedDescription":"Closed or merged PR \"Fix IncludeBuildNumberInPackageVersion for official builds\" (#3182)"},{"Id":"428809129","IsPullRequest":true,"CreatedAt":"2019-04-03T16:32:35","Actor":"eerhardt","Number":"3189","RawContent":null,"Title":"Fix NuGet badge on README to show pre-release","State":"closed","Body":"Currently, the badge on the README is still showing `v0.11.0`, and not `v1.0.0-preview`.\r\n\r\nUse the `vpre` URL to show pre-release versions on the badge, as specified by\r\n\r\nhttps://shields.io/category/version\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3189","RelatedDescription":"Closed or merged PR \"Fix NuGet badge on README to show pre-release\" (#3189)"},{"Id":"428744072","IsPullRequest":false,"CreatedAt":"2019-04-03T12:39:35","Actor":"byQ96","Number":"3188","RawContent":null,"Title":"Evaluation ArgumentOutOfRangeException 'Score not found' and predicted val=0","State":"open","Body":"### System information\r\n\r\n- OS version/distro: Windows 10\r\n- .NET Version (eg., dotnet --info): Core 2.1 \r\n\r\n### Issue\r\n\r\n- What did you do?\r\nTrying to implement Movie recommendation example from: https://docs.microsoft.com/pl-pl/dotnet/machine-learning/tutorials/movie-recommmendation#other-recommendation-algorithms\r\n- What happened?\r\nReturned predicted values are 0. While model evaluation there is an error: ArgumentOutOfRangeException 'Score not found'\r\n- What did you expect?\r\nReturns wellpredicted rating values. evaluation proccess ends successfully and returns R2 error.\r\n\r\n### Source code / logs\r\n\r\nModels:\r\n```C#\r\npublic class MovieRating\r\n{\r\n    [LoadColumn(0)]\r\n    public string userId;\r\n\r\n    [LoadColumn(1)]\r\n    public string movieId;\r\n\r\n    [LoadColumn(2)]\r\n    public float Label;\r\n}\r\n\r\npublic class MovieRatingPrediction\r\n{\r\n    [ColumnName(\"Label\")]\r\n    public float Label;\r\n       \r\n    [ColumnName(\"Score\")]\r\n    public float Score;\r\n}\r\n```\r\nTraining:\r\n```C#\r\nIEstimator<ITransformer> estimator = mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"userIdEncoded\", inputColumnName: \"userId\")\r\n                .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"movieIdEncoded\", inputColumnName: \"movieId\"));\r\n\r\nvar options = new MatrixFactorizationTrainer.Options\r\n            {\r\n                MatrixColumnIndexColumnName = \"userIdEncoded\",\r\n                MatrixRowIndexColumnName = \"movieIdEncoded\",\r\n                LabelColumnName = \"Label\",\r\n                NumberOfIterations = 20,\r\n                ApproximationRank = 100\r\n            };\r\n\r\nvar trainerEstimator = estimator.Append(mlContext.Recommendation().Trainers.MatrixFactorization(options));\r\n\r\nvar trained_model = estimator.Fit(dataView);\r\n```\r\nSingle prediction:\r\n```C#\r\nvar predictionFunction = loadedModel.CreatePredictionEngine<MovieRating, MovieRatingPrediction>(mlContext);\r\n\r\nvar prediction = predictionFunction.Predict(new MovieRating { userId = \"1\", movieId = \"2\" });\r\n\r\nLog(\"Predicted rating: \" + prediction.Score);\r\n```\r\nEvaluation:\r\n\r\n```C#\r\nvar predictions = model.Transform(dataView);\r\n\r\nvar metrics = mlContext.Regression.Evaluate(data: predictions, label: \"Label\", score: \"Score\");\r\n```\r\nEvaluation error\r\n```C#\r\nSystem.ArgumentOutOfRangeException: „Score column 'Score' not found”\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3188","RelatedDescription":"Open issue \"Evaluation ArgumentOutOfRangeException 'Score not found' and predicted val=0\" (#3188)"},{"Id":"428588549","IsPullRequest":true,"CreatedAt":"2019-04-03T06:31:10","Actor":"sfilipi","Number":"3187","RawContent":null,"Title":"Multi column MapKeyToValue and MapValueToKey","State":"open","Body":"Towards #1209 more samples for MapKeyToValue and MapValueToKey\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3187","RelatedDescription":"Open PR \"Multi column MapKeyToValue and MapValueToKey\" (#3187)"},{"Id":"428533121","IsPullRequest":false,"CreatedAt":"2019-04-03T02:27:14","Actor":"agarwal-peeush","Number":"3186","RawContent":null,"Title":"How to transform Date column into C# DateTime Column?","State":"open","Body":"I'm working on a specific regression problem which provides Date of journey in string in dd/MM/yyyy format. How can I GetColumn as C# DateTime datatype column?\r\n\r\n```\r\npublic class IssueSample\r\n{\r\n        [LoadColumn(0)]\r\n        public string Col1;\r\n        [LoadColumn(1)]\r\n        public string DateOfJourneyStr;\r\n        \r\n        private const string DATETIME_FORMAT = \"dd/MM/yyyy\";\r\n        public DateTime? DateOfJourney\r\n            => ParseDateTime(DateOfJourneyStr);\r\n        public static DateTime? ParseDateTime(string dateOfJourneyStr)\r\n        {\r\n            if (DateTime.TryParseExact(dateOfJourneyStr, DATETIME_FORMAT, CultureInfo.InvariantCulture, DateTimeStyles.None, out var result))\r\n                return result;\r\n            return null;\r\n        }\r\n}\r\n```\r\n\r\nI'm trying to get Min and Max DateOfJourney values as following:\r\n```\r\nprivate static void BuildTrainEvaluateAndSaveModel(MLContext mlContext)\r\n        {\r\n            // STEP 1: Common data loading configuration\r\n            IDataView baseTrainingDataView = mlContext.Data.LoadFromTextFile<IssueSample>(TrainDataPath, hasHeader: true, separatorChar: ',');\r\n            IDataView testDataView = mlContext.Data.LoadFromTextFile<IssueSample>(TestDataPath, hasHeader: true, separatorChar: ',');\r\n\r\n            var dateOfJourneyMin = baseTrainingDataView.GetColumn<DateTime?>(mlContext, nameof(IssueSample.DateOfJourney)).Min();\r\n            System.Console.WriteLine($\"Min DateOfJourney = {dateOfJourneyMin}\");\r\n            var dateOfJourneyMax = baseTrainingDataView.GetColumn<DateTime?>(mlContext, nameof(IssueSample.DateOfJourney)).Max();\r\n            System.Console.WriteLine($\"Max DateOfJourney = {dateOfJourneyMax}\");\r\n        }\r\n```\r\n\r\nBut I get an error as follows: \r\n\r\n> System.ArgumentOutOfRangeException: 'Could not find input column 'DateOfJourney'\r\n> Parameter name: columnName'\r\n\r\nCould somebody suggest how to achieve this in ML.NET?","Url":"https://github.com/dotnet/machinelearning/issues/3186","RelatedDescription":"Open issue \"How to transform Date column into C# DateTime Column?\" (#3186)"},{"Id":"428507463","IsPullRequest":true,"CreatedAt":"2019-04-03T00:39:43","Actor":"yaeldekel","Number":"3185","RawContent":null,"Title":"Improve saving and loading of TextFeaturizingEstimator","State":"open","Body":"Fixes #3128.","Url":"https://github.com/dotnet/machinelearning/pull/3185","RelatedDescription":"Open PR \"Improve saving and loading of TextFeaturizingEstimator\" (#3185)"},{"Id":"428502357","IsPullRequest":true,"CreatedAt":"2019-04-03T00:16:07","Actor":"abgoswam","Number":"3184","RawContent":null,"Title":"Samples for FeatureSelection transform estimators","State":"open","Body":"Towards #1209 \r\n\r\nThe PR makes the following changes\r\n\r\n- Adds sample for the `SelectFeaturesBasedOnCount` transform estimator.\r\n- Adds sample for the `SelectFeaturesBasedOnMutualInformation` transform estimator.\r\n- Delete old sample.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3184","RelatedDescription":"Open PR \"Samples for FeatureSelection transform estimators\" (#3184)"},{"Id":"428473929","IsPullRequest":true,"CreatedAt":"2019-04-02T22:39:01","Actor":"eerhardt","Number":"3181","RawContent":null,"Title":"Fix IncludeBuildNumberInPackageVersion for official builds","State":"closed","Body":"When doing an official build and setting a AzDO build variable, the variable turns into an environment variable. When MSBuild props/targets files declare a property, if they don't check if the property is already set, the MSBuild props file will override the environment variable. This causes the AzDO build variable to be ignored.\r\n\r\nAdding a check if the IncludeBuildNumberInPackageVersion property is already set before setting it in Directory.Build.props.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3181","RelatedDescription":"Closed or merged PR \"Fix IncludeBuildNumberInPackageVersion for official builds\" (#3181)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-05T05:30:33.1243926Z","RunDurationInMilliseconds":515}