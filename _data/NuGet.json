{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12114920551","Type":"PullRequestEvent","CreatedAt":"2020-04-21T18:10:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7958","RelatedDescription":"Opened pull request \"Add simulated error for exceptions in view and error page\" (#7958) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/7868.\r\nAlso switched from diagnostics service to logger factory to aid in debugging."},{"Id":"12109293279","Type":"IssuesEvent","CreatedAt":"2020-04-21T08:31:38","Actor":"SeshagiriSriram","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7957","RelatedDescription":"Opened issue \"NUGET.SERVER - server packages from local\" (#7957) at NuGet/NuGetGallery","RelatedBody":"I have set up a local server with nuget.server. I can push packages to the repos. When I try to do install like so: \r\nnuget install <package>\r\nUnable to load the service index for source '<mylocalrepos>' \r\nThe content at '<mylocalrepos>' is not a valid JSON object\r\nAm i missing something here? The source is defined in Nuget.Config as http://myserver/nuget\r\n\r\n"},{"Id":"12105796265","Type":"IssuesEvent","CreatedAt":"2020-04-20T23:09:10","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7934","RelatedDescription":"Closed issue \"Improve ToU readability\" (#7934) at NuGet/NuGetGallery","RelatedBody":"“You acknowledge that code (object or source) and related technology available via the Services (collectively, “Code”) may be subject to export control and economic sanctions laws, regulations, or orders of the United States or any other applicable jurisdiction (collectively, “Export Laws”). In using the Services, you agree to comply with all applicable Export Laws **, including end-user, end use, and destination restrictions imposed by such Export Laws.** ”\r\n\r\nRemove the **bold** text."},{"Id":"12104422822","Type":"IssuesEvent","CreatedAt":"2020-04-20T20:11:10","Actor":"nkolev92","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7956","RelatedDescription":"Opened issue \"Surface the releaseNotes field in registration to allow the release notes to be displayed in VS PM UI \" (#7956) at NuGet/NuGetGallery","RelatedBody":"Related issue: https://github.com/NuGet/Home/issues/1823"},{"Id":"12102097137","Type":"IssuesEvent","CreatedAt":"2020-04-20T16:09:38","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7952","RelatedDescription":"Closed issue \"Unable to add Nuget.org in visual studio 2019 for mac\" (#7952) at NuGet/NuGetGallery","RelatedBody":"\r\nHi Team,\r\n\r\nI am trying to add Nuget packages for ios application development but unable to add any nuget packages from Nuget.org due to the below error message. I have attached the screen shots here for your reference.\r\n\r\nCould you please check and let me know the issue here?\r\n\r\nios version: macOS Mojave 10.14.6\r\nVisual studio version: visual studio community (preview) for mac\r\nNuget Version: 5.0.2.5988\r\n\r\n![Nuget Org_Issue](https://user-images.githubusercontent.com/63851947/79563443-1d731400-80ad-11ea-8ef0-03b3f2c122e3.JPG)\r\n![PackageConsoleErrorMessage](https://user-images.githubusercontent.com/63851947/79563447-1f3cd780-80ad-11ea-94d3-fe527182ef79.JPG)\r\n![CompileErrorMessage](https://user-images.githubusercontent.com/63851947/79563449-1fd56e00-80ad-11ea-8ff8-cdbdf5cadaaf.JPG)\r\n![NugetVersion](https://user-images.githubusercontent.com/63851947/79563451-1fd56e00-80ad-11ea-8f4f-51eef22cc0fc.JPG)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12117270123","Type":"IssuesEvent","CreatedAt":"2020-04-21T22:42:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6716","RelatedDescription":"Closed issue \"Suggestion - Git repository on RestoreSources information\" (#6716) at NuGet/Home","RelatedBody":"When configuring Nuget packages restore on MSBuild in the new **`PackageReference`** format, allow to use a personal git repository containing all the packages as if it was a Windows Shared folder.\r\n\r\nThis would simplify a lot several Continuous Integration / Testing / Deployment and DevOps operations.\r\n\r\nIt also would be cool to be able to set different branches for different build targets (e.g.: point to a .git#development branch when building on a Testing scenario for getting preview packages, not still used on production).\r\n```\r\n<PropertyGroup>\r\n    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>\r\n    <RestoreSources>http://source-control/project.git</RestoreSources>\r\n</PropertyGroup>\r\n```"},{"Id":"12117173519","Type":"IssuesEvent","CreatedAt":"2020-04-21T22:27:29","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9461","RelatedDescription":"Opened issue \"Package source dropdown Tooltip is not always in sync with sources\" (#9461) at NuGet/Home","RelatedBody":"## Details about Problem\r\nThe tooltip over Package source dropdown in PM UI does not update when modifying package sources.\r\n\r\nNuGet product used VS\r\nNuGet version (x.x.x.xxx): 16.6.0\r\nWorked before? Probably never\r\n\r\n### Actual:\r\n\r\n1. Open PMUI\r\n\r\n2. Enable a disabled package source (also may work by simply adding/removing package sources) using the Tools -> Options method of adding package sources.\r\n\r\n3. Hover over the Package source dropdown and observe that the state did not change to reflect the change in package sources. However, clicking the dropdown, you'll see the change reflected.\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/79919749-fc882700-83fc-11ea-9f0e-bbf4a3f99713.png)\r\n![image](https://user-images.githubusercontent.com/49205731/79919784-0873e900-83fd-11ea-899d-8dd469ea2fee.png)\r\n\r\n4. Reopen the PMUI window and you'll first see the name of the project rather than the package sources.\r\n![image](https://user-images.githubusercontent.com/49205731/79919895-3bb67800-83fd-11ea-980c-62ab4bd2e924.png)\r\n\r\n5. Switch tabs (possibly other actions will work) then the correct tooltip will be shown.\r\n\r\n### Expected:\r\n\r\nRegardless if PMUI is already open, or it's opened for the first time, the tooltip should show the options currently in the packages source list:\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/79919840-23465d80-83fd-11ea-8bc7-e6505dcab4a7.png)\r\n"},{"Id":"12117162783","Type":"IssuesEvent","CreatedAt":"2020-04-21T22:25:51","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8238","RelatedDescription":"Closed issue \"Reference metadata is not preserved if NuGet packages add duplicate Framework Reference\" (#8238) at NuGet/Home","RelatedBody":"Metadata on `Reference` items is lost if the references are replaced by a reference from a NuGet package.  For example, in a .NET 4.7.2 project with the following:\r\n\r\n```xml\r\n<ItemGroup>\r\n    <Reference Include=\"System.Net.Http\" Aliases=\"snh\" />\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.1.0\" />\r\n</ItemGroup>\r\n```\r\n\r\nAnd with the following code:\r\n\r\n```c#\r\nextern alias snh;\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var client = new snh::System.Net.Http.HttpClient();\r\n    }\r\n}\r\n```\r\n\r\nWill fail to build, because NuGet will try to replace the `Reference` to System.Net.Http with the version of that DLL that comes from the NuGet package, and the Aliases information is lost.  This happens here: \r\n\r\nhttps://github.com/NuGet/NuGet.BuildTasks/blob/640c8e13a9b7ab6e86264a296638fbf3cc016ad1/src/Microsoft.NuGet.Build.Tasks/Microsoft.NuGet.targets#L209-L210\r\n\r\nConflict resolution comes along later and replaces the NuGet reference with a simple name reference again, but by that time the Aliases metadata is gone.\r\n\r\nThere are currently several ways that references can flow and get replaced, losing this metadata.  I am planning to fix some of them in this PR: https://github.com/dotnet/sdk/pull/3331\r\n\r\nThe changes in that PR, together with deleting the referenced line from Microsoft.NuGet.targets, make this scenario work.  That may be the right fix.  It will result in multiple references to System.Net.Http (one a simple reference and one in the NuGet package), but ResolvePackageFileConflicts should choose the right one."},{"Id":"12117143372","Type":"IssuesEvent","CreatedAt":"2020-04-21T22:22:59","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8511","RelatedDescription":"Closed issue \"Running msbuild t:restore,build in one step does not add dlls in output\" (#8511) at NuGet/Home","RelatedBody":"@scorpionlion commented on [Mon Aug 19 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1642)\n\nI was expecting same behaviour as would be for dotnet build , where it calls dotnet restore by default and copies all required package dlls in output. But when calling these two targets in one step, the build step does not find the project.asset.json file and does not copy some of the files due to the target CopyOutofDateSourceItemsToOutputDirectory does not get called (as I understood). It took me a while to figure out why some dlls were not getting copied to the output and at deploy time execution was failing.\r\nAs a workaround  calling msbuild t:restore and msbuild t:build in two steps works.\n\n"},{"Id":"12117137040","Type":"IssuesEvent","CreatedAt":"2020-04-21T22:22:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8062","RelatedDescription":"Closed issue \"Consume NuGet /embed assets group for interop type assemblies from NuGet package\" (#8062) at NuGet/Home","RelatedBody":"@jainaashish did some work to support package authors to influence when assemblies have EmbedInteropTypes set to true in projects that reference their package.  See:\r\n\r\n* Issue:  https://github.com/NuGet/Home/issues/2365\r\n* Spec:  [Embed Interop Types with PackageReference](https://github.com/NuGet/Home/wiki/Embed-Interop-Types-with-PackageReference\r\n* PR:  https://github.com/NuGet/NuGet.Client/pull/2532\r\n\r\nThe VS project system needs to consume the updated asset file and embed interop types appropriately.\r\n\r\n(The corresponding .NET SDK change is tracked via https://github.com/dotnet/sdk/issues/2732.)"},{"Id":"12117058871","Type":"IssuesEvent","CreatedAt":"2020-04-21T22:11:07","Actor":"tmat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9460","RelatedDescription":"Opened issue \"Inconsistent analyzer references between legacy and CPS based projects\" (#9460) at NuGet/Home","RelatedBody":"NuGet version (x.x.x.xxx):\r\n\r\n```\r\n>msbuild /version\r\nMicrosoft (R) Build Engine version 16.7.0-preview-20215-01+aa655667e for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.7.0.21501\r\n```\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nUnzip [Repro.zip](https://github.com/NuGet/Home/files/4512818/Repro.zip) and build the solution.\r\n\r\nChecking the binlog, the compiler receives different sets of analyzers, even though both projects have the same PackageReference:\r\n\r\n![image](https://user-images.githubusercontent.com/41759/79918785-f6d11800-83e1-11ea-839b-53e1fb0a7ee6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/41759/79918793-f9337200-83e1-11ea-9ddd-2650badbe10a.png)\r\n\r\nIn legacy project the compiler receives satellite assemblies. This is unexpected.\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"12115947126","Type":"IssuesEvent","CreatedAt":"2020-04-21T19:58:56","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9260","RelatedDescription":"Closed issue \"additional pull request feedback for net5.0 tfm work.\" (#9260) at NuGet/Home","RelatedBody":"about 3 feedback items to still investigate and consider from https://github.com/NuGet/NuGet.Client/pull/3265"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-04-22T05:30:40.0038623Z","RunDurationInMilliseconds":1990}