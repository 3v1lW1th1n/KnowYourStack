{"Data":{"GitHub":{"Issues":[{"Id":"452754710","IsPullRequest":true,"CreatedAt":"2019-06-06T02:54:12","Actor":"ryalanms","Number":"879","RawContent":null,"Title":"Don't generate ref assemblies for WPF extension assemblies","State":"closed","Body":"Fixes #801. ","Url":"https://github.com/dotnet/wpf/pull/879","RelatedDescription":"Closed or merged PR \"Don't generate ref assemblies for WPF extension assemblies\" (#879)"},{"Id":"452773301","IsPullRequest":true,"CreatedAt":"2019-06-06T00:16:27","Actor":"rladuca","Number":"882","RawContent":null,"Title":"Remove null reference workaround for PresentationFramework-SystemXmlLinq","State":"open","Body":"Remove workaround for https://github.com/dotnet/corefx/issues/32641.\r\n\r\nFixes #743 ","Url":"https://github.com/dotnet/wpf/pull/882","RelatedDescription":"Open PR \"Remove null reference workaround for PresentationFramework-SystemXmlLinq\" (#882)"},{"Id":"452743134","IsPullRequest":true,"CreatedAt":"2019-06-06T00:13:58","Actor":"rladuca","Number":"877","RawContent":null,"Title":"Suppress all GUI from IL(D)Asm calls.","State":"closed","Body":"Set Quiet on ILAsm and NoBar on ILDAsm.\r\n\r\nFixes #875 ","Url":"https://github.com/dotnet/wpf/pull/877","RelatedDescription":"Closed or merged PR \"Suppress all GUI from IL(D)Asm calls.\" (#877)"},{"Id":"452663190","IsPullRequest":false,"CreatedAt":"2019-06-06T00:13:58","Actor":"vatsan-madhavan","Number":"875","RawContent":null,"Title":"ILDASM shows popups during build","State":"closed","Body":"`ILDASM` shows popups during builds. \r\n\r\nDuring local/dev builds, the popup window is prone to accidental dismissal and consequent build failure. \r\n\r\nSuppress UI using `/quiet`","Url":"https://github.com/dotnet/wpf/issues/875","RelatedDescription":"Closed issue \"ILDASM shows popups during build\" (#875)"},{"Id":"452762872","IsPullRequest":true,"CreatedAt":"2019-06-05T23:34:28","Actor":"vatsan-madhavan","Number":"881","RawContent":null,"Title":"Ensure that implicit references for .NET Framework projects are appropriate when targeting net3x and net40","State":"open","Body":"Fixes #255\r\n\r\nTraditionally, Visual Studio has supplied these references for .NET Framework based WPF Projects: \r\n    \r\n - .NET 3.x:   PresentationCore, PresentationFramework, WindowsBase \r\n - .NET 4.x:   PresentationCore, PresentationFramework, WindowsBase, System.Xaml \r\n\r\n\r\n    `Microsoft.NET.WindowsDesktop.SDK` will supply the following references to .NET Framework based \r\n    WPF Projects: \r\n    \r\n    - .NET 3.x:\r\n       - PresentationCore, PresentationFramework, WindowsBase \r\n    \r\n    - .NET 4.0:   \r\n       - PresentationCore, PresentationFramework, WindowsBase, System.Xaml, \r\n       - UIAutomationClient, UIAutomationClientSideProviders, UIAutomationProvider, UIAutomationTypes\r\n                \r\n    - .NET 4.5+:  \r\n       - PresentationCore, PresentationFramework, WindowsBase, System.Xaml, \r\n        - UIAutomationClient, UIAutomationClientSideProviders, UIAutomationProvider, UIAutomationTypes\r\n         - System.Windows.Controls.Ribbon","Url":"https://github.com/dotnet/wpf/pull/881","RelatedDescription":"Open PR \"Ensure that implicit references for .NET Framework projects are appropriate when targeting net3x and net40\" (#881)"},{"Id":"452754825","IsPullRequest":true,"CreatedAt":"2019-06-05T23:03:15","Actor":"rladuca","Number":"880","RawContent":null,"Title":"WIP - Enable APICompat in WPF Builds","State":"open","Body":"Fixes #724 \r\n\r\nSee: https://github.com/rladuca/ApiCompatNotes/blob/master/ApiCompat%20Notes.txt\r\n\r\nThis sets up and enables API Compat against .NET 4.8 reference assemblies and also ensures compat between hand-crafted ref assemblies and their lib counterparts.\r\n\r\nTODO: WIP for now as we're working to get blob storage for a copy of the 4.8 ref assemblies so we don't have to add a requirement to install the 4.8 developer pack.","Url":"https://github.com/dotnet/wpf/pull/880","RelatedDescription":"Open PR \"WIP - Enable APICompat in WPF Builds\" (#880)"},{"Id":"452148238","IsPullRequest":false,"CreatedAt":"2019-06-05T22:45:34","Actor":"miguep","Number":"861","RawContent":null,"Title":"HierarchicalDataTemplate not working due to missing WPF extension assemblies from Preview 6 Build","State":"closed","Body":"* .NET Core Version: Preview6\r\n* Windows version: Win10\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n HierarchicalDataTemplate appears to not be working correctly, using the XAML below you should see a window with a hierarchical view, but instead only a textblock with \"System.Xml.XmlElement\". This is a regression from Preview5\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n A textblock with \"System.Xml.XmlElement\"\r\n\r\n **Expected behavior:**\r\n A hierarchical view\r\n\r\n **Minimal repro:**\r\n \r\n```xaml\r\n<Window x:Class=\"TreeViewRegression.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:TreeViewRegression\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\r\n\r\n    <Grid Background=\"{DynamicResource {x:Static SystemColors.ControlBrushKey}}\">\r\n        <Grid.Resources>\r\n            <XmlDataProvider x:Key=\"FoodDataSource\" XPath=\"FoodGroups\">\r\n                <x:XData>\r\n                    <FoodGroups xmlns=\"\">\r\n                        <FoodItem Name=\"Food\">\r\n                            <FoodItem Name=\"Fruit\">\r\n                                <FoodItem Name=\"Apple\" />\r\n                                <FoodItem Name=\"Citrus\">\r\n                                    <FoodItem Name=\"Orange\" />\r\n                                    <FoodItem Name=\"Lemon\" />\r\n                                </FoodItem>\r\n                            </FoodItem>\r\n                            <FoodItem Name=\"Bread\">\r\n                                <FoodItem Name=\"White\" />\r\n                                <FoodItem Name=\"Wheat\" />\r\n                            </FoodItem>\r\n                            <FoodItem Name=\"Dairy\">\r\n                                <FoodItem Name=\"Cheese\" />\r\n                                <FoodItem Name=\"Milk\" />\r\n                            </FoodItem>\r\n                            <FoodItem Name=\"Vegetable\">\r\n                                <FoodItem Name=\"Broccoli\" />\r\n                                <FoodItem Name=\"Lettuce\" />\r\n                            </FoodItem>\r\n                            <FoodItem Name=\"Meat\">\r\n                                <FoodItem Name=\"Beef\" />\r\n                                <FoodItem Name=\"Chicken\" />\r\n                            </FoodItem>\r\n                        </FoodItem>\r\n                    </FoodGroups>\r\n                </x:XData>\r\n            </XmlDataProvider>\r\n\r\n            <HierarchicalDataTemplate DataType=\"FoodItem\" ItemsSource=\"{Binding XPath=FoodItem}\">\r\n                <TextBlock Text=\"{Binding XPath=@Name}\" />\r\n            </HierarchicalDataTemplate>\r\n\r\n        </Grid.Resources>\r\n\r\n\r\n        <TreeView  Name=\"HierarchicalDB\" ItemsSource=\"{Binding Source={StaticResource FoodDataSource}, XPath=FoodItem}\" Margin=\"5\" />\r\n    </Grid>\r\n\r\n</Window>\r\n\r\n}\r\n```","Url":"https://github.com/dotnet/wpf/issues/861","RelatedDescription":"Closed issue \"HierarchicalDataTemplate not working due to missing WPF extension assemblies from Preview 6 Build\" (#861)"},{"Id":"452746382","IsPullRequest":false,"CreatedAt":"2019-06-05T22:31:33","Actor":"cbaysinger","Number":"878","RawContent":null,"Title":"An ActiveX control hosted in a WindowsFormsHost is redrawn incorrectly after resizing the host window.","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview15-27626-15)\r\n* Windows version: (1809(OS Build 17763.503)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No in 4.7.2\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\nActiveX control is redrawn shifted to the left and up such that its left and top edge are clipped when the control has focus and the window is resized. The control continues to shift left and up as the above steps are repeated. \r\n<img width=\"367\" alt=\"image\" src=\"https://user-images.githubusercontent.com/22218080/58994284-d46fe500-87a4-11e9-8bce-98c759c111a5.png\">\r\n\r\nI found this issue while attempting to port our code to Core3. \r\nWe have a highly customized ActiveX graphing control that we moved from MFC to WPF a couple of years ago. \r\nWe are now moving to Core 3 and noticed a problem with the control. When a user clicks on the graph it is redrawn shifted to the left and up such that its left and top edge are clipped.\r\nWe then tested several other ActiveX components and found similar behavior although resizing the host window was required to reproduce the shifted drawing.\r\nJust to rule out our ActiveX controls we built a sample button from GetHub\\VCSamples-master\\VC2008Samples\\MFC\\controls\\button and observed the same behavior although it throws a pair of unrelated exceptions when the window loses focus.\r\n\r\nExpected Behavior:\r\nBuilding the same application but using .Net 4.7.2 does not display the drawing defect although the exceptions are thrown by the sample button. The control simply changes size as the window changes size.\r\n\r\nMinimal Repro:\r\nUsing Visual Studio 2019 Preview Version 16.1.0 Preview 3.0 create a new WPF application using .NET Core 3.\r\nAdd to the MainWindow.xaml a Loaded event and a 3x3 grid containing a WindowsFormsHost in row 1 column 1. Set the background property of the WindowsFormsHost to yellow and the grid background to azure or any contrasting color.\r\nTo Dependencies add a registered ActiveX component wrapped by aximp.exe to the Assemblies and add NuGet Microsoft.NETCore.App.Host.win-x86 (3.0.0-preview5-27626-15).\r\nIn MainWindow.xaml.cs add the Window_Loaded event and within the function new the button and assign it to WindowsFormsHost.Child.\r\n\r\nAlternatively the two projects at https://1drv.ms/f/s!AB8PEB5wHC4Jeg contain the button control and the WPF application. \r\nAfter building the button control register it using regsvr32.\r\nThen create the import wrapper by running aximp.exe. \r\nIn my case C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.7.2 Tools>aximp.exe button.ocx /out: C:\\Download\\MS MFC Samples\\GetHub\\VCSamples-master\\VC2008Samples\\MFC\\controls\\button\\Debug\\AxInterop.button.dll\r\nNext build the WPF application and ensure the following dependencies: \r\nUnder Assemblies AxInterop.button  \r\nNuGet Microsoft.NETCore.App.Host.win-x86 (3.0.0-preview5-27626-15) \r\n\r\n1. Run the app\r\n2. click the button\r\n3. Resize the window by dragging lower right corner \r\n4. button is redrawn with boarder on all sides\r\n5. Minimize the window\r\n6. Restore the window. Button is now drawn in the upper left corner of the WindowsFormsHost\r\n7. Repeat steps 2-4, button is redrawn with small boarder at top-left, larger boarder bottom-right.\r\n8. Repeat steps 5-6, button is redrawn in upper left corner with large boarder at bottom-right.\r\n9. As these steps are repeated the button's upper left corner is increasingly clipped. \r\n\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/878","RelatedDescription":"Open issue \"An ActiveX control hosted in a WindowsFormsHost is redrawn incorrectly after resizing the host window.\" (#878)"},{"Id":"452736955","IsPullRequest":true,"CreatedAt":"2019-06-05T22:01:19","Actor":"grubioe","Number":"876","RawContent":null,"Title":"Update THIRD-PARTY-NOTICES.TXT","State":"open","Body":"Added license notice for Zlib and Json.NET","Url":"https://github.com/dotnet/wpf/pull/876","RelatedDescription":"Open PR \"Update THIRD-PARTY-NOTICES.TXT\" (#876)"},{"Id":"452491021","IsPullRequest":true,"CreatedAt":"2019-06-05T13:17:12","Actor":"dotnet-maestro[bot]","Number":"874","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190604.6\r\n- **Date Produced**: 6/4/2019 8:58 PM\r\n- **Commit**: 24fbf672601b7b9c088abed2e850bfe14a69875f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19304.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/874","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#874)"},{"Id":"452479988","IsPullRequest":true,"CreatedAt":"2019-06-05T12:53:36","Actor":"dotnet-maestro[bot]","Number":"873","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190604.03\r\n- **Date Produced**: 6/5/2019 4:08 AM\r\n- **Commit**: a620d0dba57cd18e49fa686e28e18369be23d067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27804-03\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/873","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#873)"},{"Id":"452465557","IsPullRequest":true,"CreatedAt":"2019-06-05T12:17:49","Actor":"dotnet-maestro[bot]","Number":"872","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/872","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#872)"},{"Id":"452409220","IsPullRequest":false,"CreatedAt":"2019-06-05T09:46:35","Actor":"shaggygi","Number":"871","RawContent":null,"Title":"System.Printing Support","State":"open","Body":"This was created based on a discussion from https://github.com/dotnet/corefx/issues/37978\r\n\r\n> I was trying to port an API to .NET Core that uses System.Printing PrintServer and related.  I came across this [doc](https://docs.microsoft.com/en-us/dotnet/api/system.printing.printserver?view=netcore-3.0) and have the impression System.Printing is supported.\r\n\r\nI was informed ([from issue link above](https://github.com/dotnet/corefx/issues/37978#issuecomment-498908611)) this is part of WPF and can be use by creating a `dotnet new wpf`.  However, I would like to use as a Class Library even if it must use the Win Compatibility package and Windows only.\r\n\r\nWe have many APIs to create/print labels that call the System.Printing APIs.  It would be nice to continue the same approach using WPF with .NET Core v3 and beyond.\r\n\r\nThanks in advance for any help.  It will be appreciated.","Url":"https://github.com/dotnet/wpf/issues/871","RelatedDescription":"Open issue \"System.Printing Support\" (#871)"},{"Id":"452339189","IsPullRequest":false,"CreatedAt":"2019-06-05T06:46:29","Actor":"DinoChan","Number":"870","RawContent":null,"Title":"Make SaveFileDialog support NOTESTFILECREATE.","State":"open","Body":"Needs to stop SaveFileDialog from creating an empty file.\r\n\r\nThe problem for us is that we have configured the file system security so that a file can be created and filled with data, but once it has been closed, it may not be modified or deleted (by a regular user). When our application tries to use file name returned by the SaveFileDialog, that file already exists and we get the following error when we try to fill it with data: “You don’t have permission to modify files in this network location.”","Url":"https://github.com/dotnet/wpf/issues/870","RelatedDescription":"Open issue \"Make SaveFileDialog support NOTESTFILECREATE.\" (#870)"},{"Id":"452124853","IsPullRequest":false,"CreatedAt":"2019-06-05T02:49:40","Actor":"grubioe","Number":"859","RawContent":null,"Title":"NET Core WPF applications are not high DPI aware by default","State":"closed","Body":"Copied from VSO ID 860905\r\n\r\nAffected Branch: rel/d16.1 \r\nAffected Build:  Version 16.1.0 Preview 3.0 [28829.227.d16.1] + .NET Core SDK 3.0.100-preview5-011568\r\nAffected Product Language: C#\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Create a new .NET Core WPF project.\r\n2. Open MainWindow.xaml in the designer.\r\n3. Drag a button control onto the window.  Note that the designer appears to be high-DPI aware as the button is easily readable.\r\n4. Run the application.\r\n\r\nExpected results:\r\nThe window should match what the designer displayed, namely an easy to read button.\r\n\r\nIt should look like this:\r\n![1](https://user-images.githubusercontent.com/49078227/58901159-74e6dc00-86b5-11e9-8a7e-3ef87d0701d5.png)\r\n\r\n\r\n\r\nActual results:\r\nThe window is small and the button has text that is very difficult to read.\r\n\r\nIt looks like this:\r\n![2](https://user-images.githubusercontent.com/49078227/58901170-7a442680-86b5-11e9-907e-93659f1b625b.png)\r\n\r\n\r\n\r\n\r\nWorkaround:\r\nAdd a \"app.manifest\" file to the project with the following contents:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<assembly manifestVersion=\"1.0\" xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n  <assemblyIdentity version=\"1.0.0.0\" name=\"foo\"/>\r\n\r\n  <application xmlns=\"urn:schemas-microsoft-com:asm.v3\">\r\n    <windowsSettings>\r\n      <dpiAwareness xmlns=\"http://schemas.microsoft.com/SMI/2016/WindowsSettings\">PerMonitor</dpiAwareness>\r\n      <dpiAware xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">true</dpiAware>\r\n    </windowsSettings>\r\n  </application>\r\n\r\n</assembly>\r\n```\r\n\r\nIn project properties, change Application -> Icon and Manifest -> Manifest to `app.manifest`.\r\n\r\nBy default, the apphost has the same manifest that a .NET Framework application executable has (the one generated by the C# compiler).  However, the .NET Framework application starts high DPI aware.\r\n\r\nAlso, it's hard to see the difference from the screenshots as they're being scaled in the issue, but there's a night and day difference with and without the manifest workaround.\r\n","Url":"https://github.com/dotnet/wpf/issues/859","RelatedDescription":"Closed issue \"NET Core WPF applications are not high DPI aware by default\" (#859)"},{"Id":"452206252","IsPullRequest":true,"CreatedAt":"2019-06-05T00:41:31","Actor":"vatsan-madhavan","Number":"868","RawContent":null,"Title":"Support `Microsoft.NetCore.App.Wpf` and `Microsoft.NetCore.App.WinForms` profiles in `Microsoft.NET.Sdk.WidnowsDesktop` ","State":"closed","Body":"Fixes #866 \r\n\r\nRelated: [WindowsDesktop reference assembly split](https://github.com/dotnet/cli/issues/10536)\r\n\r\n| UseWPF  | UseWindowsForms  | FrameworkReference |\r\n| --- | --- | --- |\r\n| False | False  | *Error* (Will be addressed in #867)  |\r\n| True  | False   | `Microsoft.WindowsDesktop.App.WPF` |\r\n| False | True   | `Microsoft.WindowsDesktop.App.WindowsForms`   |\r\n| True | True    | `Microsoft.WindowsDesktop.App` | \r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/868","RelatedDescription":"Closed or merged PR \"Support `Microsoft.NetCore.App.Wpf` and `Microsoft.NetCore.App.WinForms` profiles in `Microsoft.NET.Sdk.WidnowsDesktop` \" (#868)"},{"Id":"452196078","IsPullRequest":false,"CreatedAt":"2019-06-05T00:41:31","Actor":"vatsan-madhavan","Number":"866","RawContent":null,"Title":"Support Microsoft.NetCore.App.Wpf and Microsoft.NetCore.App.WinForms profiles in Microsoft.NET.Sdk.WidnowsDesktop","State":"closed","Body":"Support `Microsoft.NetCore.App.Wpf` and `Microsoft.NetCore.App.WinForms` profiles in `Microsoft.NET.Sdk.WidnowsDesktop` when `UseWpf` and/or `UseWindowsForms` is `true`\r\n\r\nhttps://github.com/dotnet/sdk/pull/3259","Url":"https://github.com/dotnet/wpf/issues/866","RelatedDescription":"Closed issue \"Support Microsoft.NetCore.App.Wpf and Microsoft.NetCore.App.WinForms profiles in Microsoft.NET.Sdk.WidnowsDesktop\" (#866)"},{"Id":"452227217","IsPullRequest":true,"CreatedAt":"2019-06-04T22:00:27","Actor":"ojhad","Number":"869","RawContent":null,"Title":"Hollowed out public types extending from System.Security.Permissions types","State":"open","Body":"**Currently this PR does not include Type Forwarding of these types**\r\n\r\nPart of Issue #241 \r\nHollowing out public types that should be moved out of WPF to System.Security.Permissions.dll","Url":"https://github.com/dotnet/wpf/pull/869","RelatedDescription":"Open PR \"Hollowed out public types extending from System.Security.Permissions types\" (#869)"},{"Id":"452163210","IsPullRequest":true,"CreatedAt":"2019-06-04T21:08:43","Actor":"SamBent","Number":"862","RawContent":null,"Title":"Crash in DataGridItemAutomationPeer","State":"closed","Body":"VS 2017 and 2019 crash when\r\na. Automation is enabled (e.g. Narrator or Inspect are running)\r\nb. User clicks on the Text Editor\\C#\\Code Style\\Naming page in Tools\\Options\r\n(also other similar pages)\r\n\r\nThis is a regression in 4.8.  The bad pages contain a DataGrid whose cells contain a ComboBox, and whose virtualizing mode is Recycling\r\n\r\nFixes #860 ","Url":"https://github.com/dotnet/wpf/pull/862","RelatedDescription":"Closed or merged PR \"Crash in DataGridItemAutomationPeer\" (#862)"},{"Id":"452127683","IsPullRequest":false,"CreatedAt":"2019-06-04T21:08:43","Actor":"SamBent","Number":"860","RawContent":null,"Title":"Crash in VS opening 'Naming'","State":"closed","Body":"Port from .Net 4.8 bug.","Url":"https://github.com/dotnet/wpf/issues/860","RelatedDescription":"Closed issue \"Crash in VS opening 'Naming'\" (#860)"},{"Id":"452197715","IsPullRequest":false,"CreatedAt":"2019-06-04T20:41:01","Actor":"vatsan-madhavan","Number":"867","RawContent":null,"Title":"Show error when neither UseWpf nor UseWindowsForms is set to true","State":"open","Body":"When neither `UseWpf` nor `UseWindowsForms` is set to `true`, `Microsoft.NET.Sdk.WindowsDesktop` should show a (suppressible) error","Url":"https://github.com/dotnet/wpf/issues/867","RelatedDescription":"Open issue \"Show error when neither UseWpf nor UseWindowsForms is set to true\" (#867)"},{"Id":"452192218","IsPullRequest":false,"CreatedAt":"2019-06-04T20:28:38","Actor":"chabiss","Number":"865","RawContent":null,"Title":"Need to embed wpf loose theme files into their theme assemblies","State":"open","Body":"<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n\r\nFor the XAML tooling experience for WPF NetCore needs to be decoupled from .Net Framework.  The themes loose file will need to be embeded into their theme assemblies so that XAML Designer can extract theme when creating a copy of a template.  \r\n\r\nBelow is the table of the loose file to be included into their respective theme assemblies\r\n\r\nXAML | Assembly\r\n-- | --\r\naero.normalcolor.xaml | PresentationFramework.Aero.dll\r\naero2.normalcolor.xaml | PresentationFramework.Aero2.dll\r\naerolite.normalcolor.xaml | PresentationFramework.AeroLite.dll\r\nclassic.xaml | PresentationFramework.Classic.dll\r\nluna.homestead.xaml | PresentationFramework.Luna.dll\r\nluna.metallic.xaml\r\nluna.normalcolor.xaml\r\nroyale.normalcolor.xaml | PresentationFramework.Royale.dll\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/865","RelatedDescription":"Open issue \"Need to embed wpf loose theme files into their theme assemblies\" (#865)"},{"Id":"452184060","IsPullRequest":true,"CreatedAt":"2019-06-04T20:23:48","Actor":"dotnet-maestro[bot]","Number":"864","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190604.3\r\n- **Date Produced**: 6/4/2019 1:14 PM\r\n- **Commit**: d6b2e22e267239ebf9baed3d164e938e4eea09c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19304.3\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/864","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#864)"},{"Id":"452183995","IsPullRequest":true,"CreatedAt":"2019-06-04T20:18:35","Actor":"dotnet-maestro[bot]","Number":"863","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190604.2\r\n- **Date Produced**: 6/4/2019 4:46 PM\r\n- **Commit**: f59e9a9dde144098bb58365f210dfdf4acc9e693\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview7.19304.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/863","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#863)"},{"Id":"452121516","IsPullRequest":false,"CreatedAt":"2019-06-04T17:36:19","Actor":"grubioe","Number":"858","RawContent":null,"Title":"[netcore3] XamlToRtfWriter.WriteShapeImage fails on unseekable streams","State":"open","Body":"In PresentationFramework (XamlToRtfWriter.cs), the 'WriteShapeImage' function fails to due change in seekability of the zip streams returned in Read mode. The function reads from the same stream twice. This becomes a problem because after the first read, the stream becomes disposed, which causes an exception to be thrown when trying to set the position of the stream back to 0 in order to read the stream again. \r\n\r\nGithub issue #585  is related to the root cause \r\n\r\n**Steps to reproduce:**\r\n\r\n1. Run DigitalDocuments/...../DrtSequence\r\n2. Observe following exception thrown when trying to update the stream position in function 'ConvertToImageHexDataString'\r\n\r\nSystem.ObjectDisposedException: 'A stream from ZipArchiveEntry has been disposed.\r\n\r\nObject name: 'System.IO.Compression.SubReadStream'.'\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/858","RelatedDescription":"Open issue \"[netcore3] XamlToRtfWriter.WriteShapeImage fails on unseekable streams\" (#858)"},{"Id":"452120194","IsPullRequest":false,"CreatedAt":"2019-06-04T17:33:10","Actor":"grubioe","Number":"857","RawContent":null,"Title":"[netcore3] PresentationBuildTasks TaskHelper.cs contains #if false conditional code required for .NET Framework GAC cache","State":"open","Body":"Copied from VSO ID 840043\r\n\r\n[netcore3] PresentationBuildTasks TaskHelper.cs contains #if false conditional code required for .NET Framework GAC cache\r\n\r\nThis code should be re-enabled, only for . NET Framework.","Url":"https://github.com/dotnet/wpf/issues/857","RelatedDescription":"Open issue \"[netcore3] PresentationBuildTasks TaskHelper.cs contains #if false conditional code required for .NET Framework GAC cache\" (#857)"},{"Id":"452119082","IsPullRequest":false,"CreatedAt":"2019-06-04T17:30:37","Actor":"grubioe","Number":"856","RawContent":null,"Title":"[Regression] AdvXamlFeatureTests.LocalAssembly_FriendWithKey and AttachablePropertyServicesTests.SerializeWithAttachedPropertyOnInstanceOfOwner are failing with latest shared framework","State":"open","Body":"Run Xaml DRT's on any recent build of the shared framework. \r\nObserve that AdvXamlFeatureTests.LocalAssembly_FriendWithKey and AttachablePropertyServicesTests.SerializeWithAttachedPropertyOnInstanceOfOwner are failing \r\n\r\nAttachablePropertyServicesTests.SerializeWithAttachedPropertyOnInstanceOfOwner is returning extra x:Null properties that are unexpected. This is not incorrect, but likely breaks compat (or even correctness). We need to understand what is happening, and how to get this back in line with our original expectations. \r\n\r\nAdvXamlFeatureTests.LocalAssembly_FriendWithKey failure reason is unclear. We should investigate whether it has anything to do with loading Xaml types from internalsvisibleto: assemblies. If this is broken, this is a very basic scenario that should be fixed. \r\n\r\nNote: When this is fixed, these tests should be re-enabled in dnceng\\dotnet-wpf-systemxaml-proto (or dnceng\\dotnet-wpf)","Url":"https://github.com/dotnet/wpf/issues/856","RelatedDescription":"Open issue \"[Regression] AdvXamlFeatureTests.LocalAssembly_FriendWithKey and AttachablePropertyServicesTests.SerializeWithAttachedPropertyOnInstanceOfOwner are failing with latest shared framework\" (#856)"},{"Id":"452116729","IsPullRequest":false,"CreatedAt":"2019-06-04T17:29:43","Actor":"grubioe","Number":"854","RawContent":null,"Title":"[netcore3] Create an overarching sln file for wpf.","State":"closed","Body":"Copied from VSO ID 662934","Url":"https://github.com/dotnet/wpf/issues/854","RelatedDescription":"Closed issue \"[netcore3] Create an overarching sln file for wpf.\" (#854)"},{"Id":"452117514","IsPullRequest":false,"CreatedAt":"2019-06-04T17:27:00","Actor":"grubioe","Number":"855","RawContent":null,"Title":"[netcore3] Fixup \"Source compilation required\" linker issues","State":"open","Body":"Copied from VSO ID 66416\r\n\r\nVarious projects will give \"Source compilation required\" style errors when building incrementally.\r\n\r\nWe should ensure that these go away as they will slow the build and have previously caused errors.\r\n\r\nCurrent projects that seem to have this issue are:\r\n\r\n\r\n\r\nmilctrl, wpfgfx, exts, PresentationNative, and PenIMC","Url":"https://github.com/dotnet/wpf/issues/855","RelatedDescription":"Open issue \"[netcore3] Fixup \"Source compilation required\" linker issues\" (#855)"},{"Id":"452116299","IsPullRequest":false,"CreatedAt":"2019-06-04T17:23:59","Actor":"grubioe","Number":"853","RawContent":null,"Title":"[netcore3] Remove dependencies on <wingdip.h> and WPF_REMOTE_SUPPRESS_DRAWING","State":"open","Body":"Copied from VSO ID: 660416\r\n\r\nCommit 1bb28a36\r\n\r\nAffects core\\uce\\{hwndtarget.cpp, precomp.hpp}","Url":"https://github.com/dotnet/wpf/issues/853","RelatedDescription":"Open issue \"[netcore3] Remove dependencies on <wingdip.h> and WPF_REMOTE_SUPPRESS_DRAWING\" (#853)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-06T05:30:55.2206903Z","RunDurationInMilliseconds":1080}