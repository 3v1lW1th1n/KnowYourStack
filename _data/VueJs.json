{"Data":{"Vue-Issues":{"Issues":[{"Id":"406003019","IsPullRequest":true,"CreatedAt":"2019-02-02T17:27:35","Actor":"elevatebart","Number":"9408","RawContent":null,"Title":"fix(vue-template-compiler): allow comments on the root node in templates (fix #9407)","State":"open","Body":"in SFC templates, we are alloed to have comments on the root node. We are not alloed to do so if we\r\ntry to extract these comments. This commits ignores the root components instead of breaking.\r\n\r\n#9407\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9408","RelatedDescription":"Open PR \"fix(vue-template-compiler): allow comments on the root node in templates (fix #9407)\" (#9408)"},{"Id":"405997418","IsPullRequest":false,"CreatedAt":"2019-02-02T16:24:53","Actor":"elevatebart","Number":"9407","RawContent":null,"Title":"vue-template-compiler fails when parsing a template with a comment as a root node.","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/52k2p9po54](https://codesandbox.io/s/52k2p9po54)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGo to the codesandbox.\r\nTry to parse the given template with comments on.\r\n\r\n```vue\r\n<template>\r\n <!-- here is a nice component template -->\r\n <button class=\"buttonComponent\">click</button>\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nThe comment AST node should be attached to the root object.\r\n\r\n### What is actually happening?\r\n```path\r\nnode_modules/vue-template-compiler/build.js:2469:21)\r\nTypeError: Cannot read property 'children' of undefined\r\n\r\n(currentParent is undefined)\r\n```\r\n\r\n---\r\nI am going to try my hand at a PR. Wish me luck ;)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9407","RelatedDescription":"Open issue \"vue-template-compiler fails when parsing a template with a comment as a root node.\" (#9407)"},{"Id":"405688651","IsPullRequest":true,"CreatedAt":"2019-02-02T15:53:47","Actor":"vue-bot","Number":"9405","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9405","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9405)"},{"Id":"405815703","IsPullRequest":false,"CreatedAt":"2019-02-01T18:14:08","Actor":"sleewoo","Number":"9406","RawContent":null,"Title":"On SSR, script tag escaped","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kx35l39lkv](https://codesandbox.io/s/kx35l39lkv)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen tab Console\r\n\r\n### What is expected?\r\n```html\r\n<script data-server-rendered=\"true\">\r\n            var a = 'a';\r\n            var x = \"x\";\r\n            if (a && x) {}\r\n            if (a > x) {}\r\n            if (a < x) {}\r\n          </script> \r\n```\r\n\r\n### What is actually happening?\r\n```html\r\n<script data-server-rendered=\"true\">\r\n            var a = 'a';\r\n            var x = &quot;x&quot;;\r\n            if (a &amp;&amp; x) {}\r\n            if (a &gt; x) {}\r\n            if (a &lt; x) {}\r\n          </script> \r\n```\r\n\r\n---\r\nThere are no restrictions on rendering `script` tags on the server\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9406","RelatedDescription":"Open issue \"On SSR, script tag escaped\" (#9406)"},{"Id":"405608980","IsPullRequest":false,"CreatedAt":"2019-02-01T09:00:38","Actor":"robot1d59cc305","Number":"9404","RawContent":null,"Title":"The issue has been closed.","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/9404","RelatedDescription":"Closed issue \"The issue has been closed.\" (#9404)"},{"Id":"405460987","IsPullRequest":true,"CreatedAt":"2019-01-31T22:04:11","Actor":"visualfanatic","Number":"9403","RawContent":null,"Title":"chore: add `repository.directory` field to each `package.json`","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\nI created a similar PR in `vue-cli` repo, so I will just copy&paste my comment here:\r\n> This field allows you specify path of each package in a monorepo thanks to [this npm RFC](https://github.com/npm/rfcs/blob/latest/accepted/0010-monorepo-subdirectory-declaration.md). Main benefit of providing this field is a more accurate link to the package's source code from its npmjs.com page.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9403","RelatedDescription":"Open PR \"chore: add `repository.directory` field to each `package.json`\" (#9403)"},{"Id":"405353553","IsPullRequest":false,"CreatedAt":"2019-01-31T17:29:46","Actor":"devedse","Number":"9402","RawContent":null,"Title":"How do you import a JSON file with VueJS / Typescript?","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/devedse/VueJSImportJsonFile](https://github.com/devedse/VueJSImportJsonFile)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the folder with VSCode and see the Home.vue page.\r\n\r\n### What is expected?\r\nThe JSON file should import without errors.\r\n\r\n### What is actually happening?\r\nAn error is shown: \"Cannot find module '@/assets/hi.json'\r\n\r\n---\r\nIt's probably something I'm doing wrong but I've been spending the last 4 hours on this.\r\nI've already done everything said and told in the following posts but I can't get it to work:\r\nhttps://stackoverflow.com/questions/49996456/importing-json-file-in-typescript/50674344#50674344\r\nhttps://stackoverflow.com/questions/32950966/typescript-compiler-error-when-importing-json-file\r\nhttps://github.com/chybie/ts-json\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9402","RelatedDescription":"Closed issue \"How do you import a JSON file with VueJS / Typescript?\" (#9402)"},{"Id":"405335651","IsPullRequest":false,"CreatedAt":"2019-01-31T16:49:18","Actor":"Giwayume","Number":"9401","RawContent":null,"Title":"Vue version 2.5.22 is missing vue.esm.browser.js in the dist folder.","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://repl.it/repls/CreepyStaticInstitute](https://repl.it/repls/CreepyStaticInstitute)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nnpm init\r\nnpm install vue@2.5.22\r\n```\r\n\r\nView the contents of node_modules/vue/dist. The file 'vue.esm.browser.js` is missing.\r\n\r\n### What is expected?\r\n'vue.esm.browser.js` should exist, like in version 2.5.21\r\n\r\n### What is actually happening?\r\n'vue.esm.browser.js` is missing.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9401","RelatedDescription":"Closed issue \"Vue version 2.5.22 is missing vue.esm.browser.js in the dist folder.\" (#9401)"},{"Id":"405192236","IsPullRequest":false,"CreatedAt":"2019-01-31T15:24:59","Actor":"KaelWD","Number":"9396","RawContent":null,"Title":"[2.6-beta] regression: component without slots re-renders when parent updates","State":"closed","Body":"### Version\r\n2.6.0-beta.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/JxEpJK?editors=1011](https://codepen.io/anon/pen/JxEpJK?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- click the \"root\" button\r\n\r\n### What is expected?\r\n`\"update root\"` should be logged\r\n\r\n### What is actually happening?\r\n`\"update ChildComponent\"` is also logged\r\n\r\n---\r\nIf you add `v-slot:default` it works as expected: https://codepen.io/anon/pen/exgVVm?editors=1011\r\nVue 2.5.22 also works correctly: https://codepen.io/anon/pen/KJaQQL?editors=1011\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9396","RelatedDescription":"Closed issue \"[2.6-beta] regression: component without slots re-renders when parent updates\" (#9396)"},{"Id":"404361890","IsPullRequest":true,"CreatedAt":"2019-01-31T15:08:36","Actor":"Itisfilipe","Number":"9386","RawContent":null,"Title":"style does not work with zIndex (fix #9382)","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThe [documentation](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty#Parameters) states that the first parameter for `setProperty` must be hyphenated.\r\n\r\ncloses #9382","Url":"https://github.com/vuejs/vue/pull/9386","RelatedDescription":"Closed or merged PR \"style does not work with zIndex (fix #9382)\" (#9386)"},{"Id":"403903545","IsPullRequest":false,"CreatedAt":"2019-01-31T15:08:36","Actor":"blimmer","Number":"9382","RawContent":null,"Title":"vbind:style does not work with zIndex","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rm36pyr37q](https://codesandbox.io/s/rm36pyr37q)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGiven a very simple component:\r\n\r\n```\r\n<template>\r\n  <div v-bind:style=\"styleObject\">This div should have a large z-index</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HelloWorld\",\r\n  data() {\r\n    return {\r\n      styleObject: {\r\n        maxWidth: \"400px\",\r\n        minWidth: \"auto\",\r\n        opacity: 1,\r\n        padding: \"5px\",\r\n        position: \"fixed\",\r\n        right: \"10px\",\r\n        top: \"10px\",\r\n        zIndex: \"100 !important\" // this doesn't work\r\n        // \"z-index\": \"100 !important\" // this works\r\n      }\r\n    };\r\n  }\r\n};\r\n</script>\r\n```\r\n\r\n`zIndex` is not bound to style\r\n\r\n### What is expected?\r\nBinding `zIndex` does not get kebab-cased like `maxWidth` and `minWidth`. I expected it to work the same way. Passing `z-index` works as expected.\r\n\r\n### What is actually happening?\r\nThe `zIndex` variable is ignored entirely.\r\n\r\n---\r\nI was creating an alert-style box that needs a high z-index to appear \"on top\" of other elements on the page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9382","RelatedDescription":"Closed issue \"vbind:style does not work with zIndex\" (#9382)"},{"Id":"405287634","IsPullRequest":true,"CreatedAt":"2019-01-31T15:04:44","Actor":"vue-bot","Number":"9400","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9400","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9400)"},{"Id":"405140580","IsPullRequest":true,"CreatedAt":"2019-01-31T14:58:09","Actor":"vue-bot","Number":"9393","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9393","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9393)"},{"Id":"405267420","IsPullRequest":false,"CreatedAt":"2019-01-31T14:20:30","Actor":"bewhite","Number":"9399","RawContent":null,"Title":"Is VNode.componentInstance intended to a stable interface?","State":"closed","Body":"I am creating a component of type A containing as children: (1) a list of components of type B and (2) one component of type C. I want component C to have access to computed properties of the components B so I pass the list of VNodes into C as a prop. I can then access the computed properties via VNode.componentInstance. My question is: is VNode.componentInstance a stable interface, i.e. is it going to be future-proof?","Url":"https://github.com/vuejs/vue/issues/9399","RelatedDescription":"Closed issue \"Is VNode.componentInstance intended to a stable interface?\" (#9399)"},{"Id":"405207514","IsPullRequest":false,"CreatedAt":"2019-01-31T13:37:30","Actor":"cyboning","Number":"9397","RawContent":null,"Title":"contenteditable=\"plaintext-only\"  always rendered into contenteditable=\"true\"","State":"closed","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/pupilGradeSix/busmq2zp/2/](https://jsfiddle.net/pupilGradeSix/busmq2zp/2/)\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen the link\r\n\r\n### What is expected?\r\ncontenteditable=\"plaintext-only\"   能正常渲染成  plaintext-only 而不会变成 true\r\n\r\n### What is actually happening?\r\ncontenteditable=\"plaintext-only\"  总是会被渲染成 contenteditable=\"true\" 。最终我只能通过给 contenteditable 动态添加属性 plaintext-only 才能成功。试了几个 vue 的版本发现都存在这个问题。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9397","RelatedDescription":"Closed issue \"contenteditable=\"plaintext-only\"  always rendered into contenteditable=\"true\"\" (#9397)"},{"Id":"405234151","IsPullRequest":false,"CreatedAt":"2019-01-31T13:34:14","Actor":"szmarczak","Number":"9398","RawContent":null,"Title":"A better way to listen to events programatically","State":"closed","Body":"### What problem does this feature solve?\r\n```ts\r\nimport WrappedInput from './WrappedInput.vue'; // Assume `WrappedInput` is the example metioned below.\r\n\r\nexport default WrappedInput.extend({\r\n\tcreated() {\r\n\t\tthis.$on('focus', function () {\r\n\t\t\tconsole.log('focus'); // Won't show up.\r\n\t\t});\r\n\t}\r\n});\r\n```\r\n\r\nThe way to fix this would be to use a custom `focus` handler like it's done here: https://vuejs.org/v2/guide/components-custom-events.html#Binding-Native-Events-to-Components\r\n\r\nIt gets quite annoying while other events come to play, like `blur`, `click` etc.\r\n\r\n### What does the proposed API look like?\r\nJust `this.$on('focus', fn)` without the additional wrappers.\r\n\r\nAnyway, there's a workaround here:\r\n```js\r\nthis.$el.addEventListener('focus', function () {\r\n\tconsole.log('focus'); // Shows up.\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9398","RelatedDescription":"Closed issue \"A better way to listen to events programatically\" (#9398)"},{"Id":"405151798","IsPullRequest":false,"CreatedAt":"2019-01-31T09:25:45","Actor":"tower000","Number":"9395","RawContent":null,"Title":"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned ","State":"closed","Body":"### What problem does this feature solve?\r\nrefresh token and retry the last request\r\n\r\nwhat happened in my case is:\r\n1. Attempt to pull a list data from server\r\n2. returned 401\r\n3. then hited the axios interceptor\r\n4. request refresh the token and retry the \"pull\" call. its successful, and there is the response data in the interceptor.\r\n5. here is my problem: vue page has no return\r\n\r\n\r\n### What does the proposed API look like?\r\nhere is the vue page code: the request code\r\n\r\ncreated () {\r\n    this.$http.apps().then(result => {\r\n        console.log(result)\r\n        this.data = result.data\r\n        this.$Loading.finish()\r\n    }).catch(error => {\r\n        this.$Message.error(error.msg   '#'   error.error_code)\r\n    })\r\n}\r\n\r\nand this is my axios code:\r\n\r\nwindow.regranting = false\r\n\r\nexport default (options) => {\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        const ajax = axios.create({\r\n            baseURL:  'http://api.aaa.com',\r\n            timeout: 1000,\r\n            withCredentials: true,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n            },\r\n        })\r\n\r\n        ajax.interceptors.request.use((config) => {\r\n            config.data = help.serialize(config.data)\r\n            if (help.getAuth()) {\r\n                config.headers.common['Authorization'] = help.getAuth()\r\n            }\r\n            return config\r\n        },error => {\r\n            return reject(error.response)\r\n        })\r\n\r\n        ajax.interceptors.response.use(undefined, error => {\r\n            switch(error.response.status){\r\n                case 401:\r\n                    let $refresh = cookie.get('refresh');\r\n                    let lastRuest = error.config   // the last quest config\r\n\r\n                    // 防止重复刷新请求\r\n                    if (!window.regranting) {\r\n                        if ($refresh) {\r\n                            // is regranting now\r\n                            window.regranting = true\r\n                            http.regrant($refresh).then((res) => {\r\n                                // update cookie\r\n                                cookie.set('access', res.headers.authorization)\r\n                                cookie.set('refresh', res.headers.refresh)\r\n                                // regranted successfully\r\n                                window.regranting = false\r\n                                // update config.header.Authorization\r\n                                lastRuest.headers.Authorization = res.headers.authorization\r\n                                // retry the last request\r\n                                return resolve(ajax(lastRuest))\r\n                            }).catch((error) => {\r\n                                router.push({name: 'login'})\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return reject(error.response.data)\r\n                    }\r\n\r\n                    break\r\n                default:\r\n                    return reject(error.response.data)\r\n            }\r\n        })\r\n\r\n        if (options.length && options.length>1) {\r\n            let p = []\r\n            for (let item of options) {\r\n                p.push(await ajax(item))\r\n            }\r\n            return resolve(Promise.all(p))\r\n        } else {\r\n            return resolve(await ajax(options))\r\n        }\r\n    })\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9395","RelatedDescription":"Closed issue \"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned \" (#9395)"},{"Id":"405146499","IsPullRequest":false,"CreatedAt":"2019-01-31T09:20:17","Actor":"tower000","Number":"9394","RawContent":null,"Title":"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned ","State":"closed","Body":"### What problem does this feature solve?\r\nrefresh token and retry the last request\r\n\r\nwhat happened in my case is:\r\n1. Attempt to pull a list data from server\r\n2. returned 401\r\n3. then hited the axios interceptor\r\n4. request refresh the token and retry the \"pull\" call. its successful, and there is the response data in the interceptor.\r\n5. here is my problem: vue page has no return\r\n\r\n\r\n### What does the proposed API look like?\r\nhere is the vue page code: the request code\r\n\r\n```\r\ncreated () {\r\n    this.$http.apps().then(result => {\r\n        // console.log(result)         there are no result after retry the lastrequest\r\n        this.data = result.data\r\n        this.$Loading.finish()\r\n    }).catch(error => {\r\n        this.$Message.error(error.msg   '#'   error.error_code)\r\n    })\r\n}\r\n```\r\n\r\nand this is my axios code:\r\n```\r\nwindow.regranting = false\r\n\r\nexport default (options) => {\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        const ajax = axios.create({\r\n            baseURL:  'http://api.aaa.com',\r\n            timeout: 1000,\r\n            withCredentials: true,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n            },\r\n        })\r\n\r\n        ajax.interceptors.request.use((config) => {\r\n            config.data = help.serialize(config.data)\r\n            if (help.getAuth()) {\r\n                config.headers.common['Authorization'] = help.getAuth()\r\n            }\r\n            return config\r\n        },error => {\r\n            return reject(error.response)\r\n        })\r\n\r\n        ajax.interceptors.response.use(response => {\r\n            // console.log(response)      it's works after retry the lastrequest\r\n            return response\r\n        },  error => {\r\n            switch(error.response.status){\r\n                case 401:\r\n                    let $refresh = cookie.get('refresh');\r\n                    let lastRuest = error.config   // the last quest config\r\n\r\n                    if (!window.regranting) {\r\n                        if ($refresh) {\r\n                            // is regranting now\r\n                            window.regranting = true\r\n                            http.regrant($refresh).then((res) => {\r\n                                // update cookie\r\n                                cookie.set('access', res.headers.authorization)\r\n                                cookie.set('refresh', res.headers.refresh)\r\n                                // regranted successfully\r\n                                window.regranting = false\r\n                                // update config.header.Authorization\r\n                                lastRuest.headers.Authorization = res.headers.authorization\r\n                                // retry the last request\r\n                                return resolve(ajax(lastRuest))\r\n                            }).catch((error) => {\r\n                                router.push({name: 'login'})\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return reject(error.response.data)\r\n                    }\r\n\r\n                    break\r\n                default:\r\n                    return reject(error.response.data)\r\n            }\r\n        })\r\n\r\n        if (options.length && options.length>1) {\r\n            let p = []\r\n            for (let item of options) {\r\n                p.push(await ajax(item))\r\n            }\r\n            return resolve(Promise.all(p))\r\n        } else {\r\n            return resolve(await ajax(options))\r\n        }\r\n    })\r\n}\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9394","RelatedDescription":"Closed issue \"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned \" (#9394)"},{"Id":"405134974","IsPullRequest":false,"CreatedAt":"2019-01-31T08:37:47","Actor":"tower000","Number":"9392","RawContent":null,"Title":"axios refesh token and retry the last request successfully but vue cant get the response","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9392","RelatedDescription":"Closed issue \"axios refesh token and retry the last request successfully but vue cant get the response\" (#9392)"},{"Id":"404898112","IsPullRequest":false,"CreatedAt":"2019-01-30T20:43:04","Actor":"frlinw","Number":"9391","RawContent":null,"Title":"v-slot with v-if","State":"closed","Body":"### Version\r\n2.6.0-beta.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/frlinw/pen/zeobvd](https://codepen.io/frlinw/pen/zeobvd)\r\n\r\n### Steps to reproduce\r\nClick on the \"click me\" button\r\n\r\n### What is expected?\r\ncontent should be displayed and changed on click\r\n\r\n### What is actually happening?\r\nv-slot inside a wrapper with v-if is not displayed\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9391","RelatedDescription":"Closed issue \"v-slot with v-if\" (#9391)"},{"Id":"404778037","IsPullRequest":false,"CreatedAt":"2019-01-30T13:49:21","Actor":"duszekmestre","Number":"9390","RawContent":null,"Title":"v-for \"Duplicate keys detected\"","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hsac4jbq/](https://jsfiddle.net/hsac4jbq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate two v-for on two different collection within the same parent HTML element.\r\n\r\n### What is expected?\r\n:key should be unique in one v-for not on two v-for with same parent HTML element\r\n\r\n### What is actually happening?\r\nIn attached link I show that when we have two v-for with single parent HTML element on two different collection with similar data I have \"Duplicate keys detected\".\r\n\r\nBut when I created the same v-for with different parent HTML element then no error occured.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9390","RelatedDescription":"Closed issue \"v-for \"Duplicate keys detected\"\" (#9390)"},{"Id":"404770494","IsPullRequest":false,"CreatedAt":"2019-01-30T13:30:11","Actor":"danyadev","Number":"9389","RawContent":null,"Title":"Unnecessary item update with directive","State":"closed","Body":"### Version\r\n2.6.0-beta.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/danyadev/pen/QYGmLb](https://codepen.io/danyadev/pen/QYGmLb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Open the desired item using DevTools\r\n2) Click the button\r\n\r\n### What is expected?\r\nThe element with the directive does not update\r\n\r\n### What is actually happening?\r\nElement with directive updated\r\n\r\n---\r\nThis happens ONLY when there is something in the component that changes the elements in the DOM.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9389","RelatedDescription":"Closed issue \"Unnecessary item update with directive\" (#9389)"},{"Id":"404591701","IsPullRequest":false,"CreatedAt":"2019-01-30T03:59:39","Actor":"varyoung","Number":"9388","RawContent":null,"Title":"Dynamic Component  shows the warning: Failed to mount component: template or render function not defined.","State":"closed","Body":"It's my code \r\n\r\ntemplate \r\n\r\n\r\n<component :is=\"leftComponentOne.component\" :style=\"{'background-color':theme1==='light' && 'rgba(255,255,255,0.4)'}\"></component>\r\n\r\n\r\nimport \r\n\r\nimport LeftOne from \"../leftComponents/leftOne\";\r\n\r\ntake it in data Array \r\ndata(){\r\n return {\r\n  leftComponents: [LeftOne],\r\n leftComponentOne:{\r\n    component:\"\"\r\n  }\r\n }\r\n}\r\n\r\nbased watcher  from my handle to choose one then Vue shows the warning\r\n\r\nthis.checkLeftArr[0] === undefined ? this.leftComponentOne = { component: \"\", src: \"\" } : this.leftComponentOne = { component: this.leftComponents[JSON.parse(this.checkLeftArr[0]).index] };\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/9388","RelatedDescription":"Closed issue \"Dynamic Component  shows the warning: Failed to mount component: template or render function not defined.\" (#9388)"},{"Id":"404570167","IsPullRequest":false,"CreatedAt":"2019-01-30T03:13:09","Actor":"ly1989abc","Number":"9387","RawContent":null,"Title":"使用mouseenter和mouseleave时，鼠标左键规律单击所选元素时，会偶尔触发mouseleave","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/intotheprogram/pen/ZjxZdg](https://codepen.io/intotheprogram/pen/ZjxZdg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n首先将鼠标移向Hove Me按钮，然后鼠标左键匀速点击，大约十几次时会触发mouseleave。鼠标重新动一下，才会重新触发mouseenter。\r\n\r\n### What is expected?\r\n鼠标点击时，不应触发mouseleave\r\n\r\n### What is actually happening?\r\n鼠标点击时，偶尔触发mouseleave\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9387","RelatedDescription":"Closed issue \"使用mouseenter和mouseleave时，鼠标左键规律单击所选元素时，会偶尔触发mouseleave\" (#9387)"},{"Id":"404159981","IsPullRequest":false,"CreatedAt":"2019-01-29T09:20:21","Actor":"CyberAP","Number":"9385","RawContent":null,"Title":"Support delay in transitions","State":"closed","Body":"### What problem does this feature solve?\r\nThere's no way to declaratively set transition delay right now. You'll have to use transition hooks for that, which is not that great of experience if you're just using CSS transitions without any JS. Or you'll have to create a new CSS transition for every delay value you want.\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<transition name=\"fade\" delay=\"1.5\">\r\n  <div v-if=\"show\">Test</div>\r\n</transition>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9385","RelatedDescription":"Closed issue \"Support delay in transitions\" (#9385)"},{"Id":"404155153","IsPullRequest":false,"CreatedAt":"2019-01-29T07:39:59","Actor":"luoxixi","Number":"9384","RawContent":null,"Title":"Blank in the list in chrome 70+","State":"closed","Body":"### Version\r\n2.2.2\r\n\r\n### Reproduction link\r\n[http://blog.luoxixi.com/wp-content/uploads/2019/01/ertyu-1.gif](http://blog.luoxixi.com/wp-content/uploads/2019/01/ertyu-1.gif)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am using vue2.2.2 in the development project. After upgrading the browser to 70  recently, I found that the list in some pages is blank. In fact, the HTML has been rendered, but the page is not displayed. This is a very strange problem. We didn't do any positioning and hierarchical relationships; when I tried to upgrade vue to 2.5 or downgrade the browser to below 69, the problem would automatically disappear, but I can't currently make this change in the project;\r\n\r\n### What is expected?\r\nI can't currently make this change in the project;I hope it will display properly.\r\n\r\n### What is actually happening?\r\n\r\nIn fact, it doesn't happen to all pages. I don't know why only some pages exist instead of all. When I try to add a case test at jsfiddle.net, it can't be reproduced. . .\r\n\r\nhttp://blog.luoxixi.com/wp-content/uploads/2019/01/%E8%AF%95%E5%9B%BE.png;\r\n\r\nhttp://blog.luoxixi.com/wp-content/uploads/2019/01/347.png\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9384","RelatedDescription":"Closed issue \"Blank in the list in chrome 70+\" (#9384)"},{"Id":"403953381","IsPullRequest":false,"CreatedAt":"2019-01-28T18:43:08","Actor":"spectrum128","Number":"9383","RawContent":null,"Title":"In IE 11 the first input event on a text input is blocked if placeholder is set and the model is initialised","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsbin.com/dobagokure/1/edit?html,js,output](https://jsbin.com/dobagokure/1/edit?html,js,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://jsbin.com/dobagokure/1/edit?html,js,output in IE 11.\r\n\r\n2. Enter a single character in the text input just after 'Hello Vue!'\r\n\r\n3. Model will not be updated on the first character input but will be on subsequent inputs\r\n\r\n*Note to reproduce a second time you will need to refresh the page.\r\n\r\n### What is expected?\r\nWhen a single character is entered the model should update\r\n\r\n### What is actually happening?\r\nThe input event is blocked and the model does not update until a second character is entered.\r\n\r\n---\r\nI believe it could be related to a previous fix for an issue that IE11 is firing an input event when the placeholder is set:\r\n\r\nhttps://github.com/lovelope/vue/commit/15e8fa59b99890268b9a06ff263a6db131e0aa63\r\n\r\nPerhaps it should check if the value is set first before blocking the initial event?\r\n\r\n\r\n\r\nMany Thanks,\r\nDeclan\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9383","RelatedDescription":"Open issue \"In IE 11 the first input event on a text input is blocked if placeholder is set and the model is initialised\" (#9383)"},{"Id":"403685378","IsPullRequest":false,"CreatedAt":"2019-01-28T08:22:39","Actor":"myhnuhai","Number":"9381","RawContent":null,"Title":"Vue整合Cesium开发出现FPS降低，同时内存撑爆的问题，如何解决？","State":"closed","Body":"### What problem does this feature solve?\r\nVue整合Cesium开发出现FPS降低，同时内存撑爆的问题，如何解决？\r\n\r\n### What does the proposed API look like?\r\nVue整合Cesium开发出现FPS降低，同时内存撑爆的问题，如何解决？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9381","RelatedDescription":"Closed issue \"Vue整合Cesium开发出现FPS降低，同时内存撑爆的问题，如何解决？\" (#9381)"},{"Id":"403660647","IsPullRequest":false,"CreatedAt":"2019-01-28T05:54:51","Actor":"IDeepspace","Number":"9380","RawContent":null,"Title":"Vue lifecycle","State":"closed","Body":"when the child component was mounted, will the parent component execute the beforeUpdate/update hook function？","Url":"https://github.com/vuejs/vue/issues/9380","RelatedDescription":"Closed issue \"Vue lifecycle\" (#9380)"},{"Id":"403554530","IsPullRequest":true,"CreatedAt":"2019-01-27T14:05:44","Actor":"andoshin11","Number":"9379","RawContent":null,"Title":"feat(types): expose ElementAttributesProperty for TSX","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n# Descriptions\r\nWith current type definitions, it's extremely difficult for developers to pass props to children components when writing TSX since there's no exposed property that JSX can handle as element attributes properties.\r\n\r\n![2019-01-27 22 45 39](https://user-images.githubusercontent.com/8381075/51801762-4e3b1380-2285-11e9-8262-18136c6afbe1.png)\r\n \r\nThis PullRequest achieves 2 things.\r\n- Creates new property `_attrs` to the `ExtendedVue` type so it can be used inside `JSX.ElementAttributesProperty`.(Examples are below)\r\n- Transform non-required props into optional properties of `props` interface.\r\n\r\n## Example\r\n\r\nGiven these 2 children components...\r\n\r\n```js\r\n// PrimaryButton.tsx\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'Primary Button',\r\n  props: {\r\n    label: {\r\n      type: String,\r\n      required: true as true\r\n    },\r\n    color: String\r\n  },\r\n  computed: {\r\n    style(): string {\r\n      return `color: ${this.color || 'blue'};`\r\n    }\r\n  },\r\n  render() {\r\n    return <button style={this.style}>{this.label}</button>\r\n  }\r\n})\r\n```\r\n\r\n```js\r\n// SecondaryButton.tsx\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'Secondary Button',\r\n  props: ['color', 'label'],\r\n  computed: {\r\n    style(): string {\r\n      return `color: ${this.color || 'blue'};`\r\n    }\r\n  },\r\n  render() {\r\n    return <button style={this.style}>{this.label}</button>\r\n  }\r\n})\r\n```\r\n\r\nand prepare `shims-tsx.d.ts` like this\r\n\r\n```js\r\n// shims-tsx.d.ts\r\nimport Vue, { VNode } from 'vue'\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface Element extends VNode {}\r\n    interface ElementClass extends Vue {}\r\n    interface ElementAttributesProperty {\r\n      _attrs: any\r\n    }\r\n    interface IntrinsicElements {\r\n      [elem: string]: any\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nProperty completion works as expected.\r\n\r\n![2019-01-27 22 55 58](https://user-images.githubusercontent.com/8381075/51801907-2e0c5400-2287-11e9-95db-6d99dfa59ddb.png)\r\n\r\nType error warned as expected.\r\n\r\n![2019-01-27 22 56 15](https://user-images.githubusercontent.com/8381075/51801908-2e0c5400-2287-11e9-8953-9f0357920edb.png)\r\n\r\nand no more errors with correct props declaration 👍 \r\n\r\n![2019-01-27 23 00 09](https://user-images.githubusercontent.com/8381075/51801914-52683080-2287-11e9-8b29-31700b54c77f.png)\r\n","Url":"https://github.com/vuejs/vue/pull/9379","RelatedDescription":"Open PR \"feat(types): expose ElementAttributesProperty for TSX\" (#9379)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"405301212","IsPullRequest":false,"CreatedAt":"2019-01-31T15:34:59","Actor":"WisdomEye","Number":"2603","RawContent":null,"Title":"v-if mutating router-link to","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8](https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add an li using v-if, and then try change the value of variable, in the example bellow update start with value 0, I can add a button to increment or decrement it, and get error about mutating :for from router-link.\r\n\r\n\t<li v-if=\"update\" id=\"dashboard-menu-top-updates\">\r\n\t\t<router-link :to=\"{ name: 'Update' }\" :exact=\"$route.name === 'Update'\">Atualizações</router-link>\r\n\t</li>\r\n\r\n### What is expected?\r\nThe expected is render or remove the element without errors about mutating \":to\" from router-link\r\n\r\n### What is actually happening?\r\nThe li is correctly rendered as wished, but make a lot of erros on console about mutating \":to\" from router-link.\r\n\r\nError:\r\n\r\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"to\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2603","RelatedDescription":"Closed issue \"v-if mutating router-link to\" (#2603)"},{"Id":"404807174","IsPullRequest":true,"CreatedAt":"2019-01-30T14:52:24","Actor":"kazupon","Number":"2602","RawContent":null,"Title":"update ja docs","State":"open","Body":"ping @ktsn \r\nCould you review it please? 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2602","RelatedDescription":"Open PR \"update ja docs\" (#2602)"},{"Id":"404175057","IsPullRequest":false,"CreatedAt":"2019-01-29T09:25:39","Actor":"avele","Number":"2601","RawContent":null,"Title":"Keep previous component until next mounted","State":"closed","Body":"### What problem does this feature solve?\r\nI want the ability to change the router-view component only when the next one is mounted. For instance, the next router-view component could be mounted separately with ```display: none```, and after the \"mounted\" event I would make the new component visible and destroy the previous component.\r\n\r\nCurrently I can only show a spinner or an overlay while the new component is loading, but I can't keep the previous component on the screen.\r\n\r\nMy usecase is similar to github repository tabs\r\n![github tabs](https://user-images.githubusercontent.com/34437766/51894559-8f384280-23c1-11e9-9637-3fc10ae17fa4.gif)\r\nI want to mimic the standard, non-SPA browser behavior.\r\n\r\n### What does the proposed API look like?\r\nA prop for ```<router-view>,``` perhaps \"preload\" or \"changeOnMounted\".\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2601","RelatedDescription":"Closed issue \"Keep previous component until next mounted\" (#2601)"},{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"},{"Id":"402529730","IsPullRequest":false,"CreatedAt":"2019-01-24T08:23:24","Actor":"mice33","Number":"2596","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mice33/router-demo](https://github.com/mice33/router-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.run dev && visit website  \r\n2.click 'go to h2' link  \r\n3.click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\n### What is expected?\r\n3.click 'go back' link, can go back\r\n\r\n### What is actually happening?\r\n3.click 'go back' link, can't go back\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nSame problem #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2596","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2596)"},{"Id":"402518493","IsPullRequest":false,"CreatedAt":"2019-01-24T07:49:51","Actor":"ovarte","Number":"2594","RawContent":null,"Title":"vue-router and axios 拦截器一起使用 出现的异步问题","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwdtae9u/3/](https://jsfiddle.net/jwdtae9u/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n详见JSFiddle。通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，请问怎么解决呢\r\n\r\n### What is expected?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。请问怎么解决呢\r\n\r\n### What is actually happening?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。\r\n\r\n---\r\n怎么解决 vue-router和 axios 拦截器 一起使用的问题呢 非常感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2594","RelatedDescription":"Closed issue \"vue-router and axios 拦截器一起使用 出现的异步问题\" (#2594)"},{"Id":"402529161","IsPullRequest":false,"CreatedAt":"2019-01-24T03:41:50","Actor":"mice33","Number":"2595","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"Demo: https://github.com/mice33/router-demo\r\n\r\nChrome 70\r\n\r\ncan't from 'h2' page go back 'Hello World' page when the onload event of window not triggered\r\n\r\nsteps:\r\n1. run dev && visit website\r\n2. click 'go to h2' link\r\n3. click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\nlink #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2595","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2595)"},{"Id":"401790731","IsPullRequest":false,"CreatedAt":"2019-01-22T14:29:48","Actor":"yegorLitvinov","Number":"2593","RawContent":null,"Title":"replaceState Error when path starts with // and scrollBehavior is set","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/yegorLitvinov/vue-router-bug](https://github.com/yegorLitvinov/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSet scrollBehavior property in router config. Put two forward slashes into beginning of the url (e.g. http://localhost:8081//about)\r\n\r\n### What is expected?\r\nNo errors in console\r\n\r\n### What is actually happening?\r\nIn firefox: SecurityError: The operation is insecure.\r\nIn Chrome: Uncaught DOMException: Failed to execute 'replaceState' on 'History': A history state object with URL 'http://about/' cannot be created in a document with origin 'http://localhost:8081' and URL 'http://localhost:8081//about'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2593","RelatedDescription":"Open issue \"replaceState Error when path starts with // and scrollBehavior is set\" (#2593)"},{"Id":"401651538","IsPullRequest":true,"CreatedAt":"2019-01-22T08:34:55","Actor":"zrh122","Number":"2592","RawContent":null,"Title":"fix(router-view): add condition to see whether the tree is inactive (fix #2552)","State":"open","Body":"close #2552\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2592","RelatedDescription":"Open PR \"fix(router-view): add condition to see whether the tree is inactive (fix #2552)\" (#2592)"},{"Id":"401560199","IsPullRequest":true,"CreatedAt":"2019-01-22T01:15:28","Actor":"Sayegh7","Number":"2591","RawContent":null,"Title":"Warn about root paths without a leading slash (fix #2550)","State":"open","Body":"close #2550\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR creates the following warning message when a root route exists without a leading slash:\r\n<img width=\"583\" alt=\"screen shot 2019-01-22 at 3 12 15 am\" src=\"https://user-images.githubusercontent.com/13800170/51506192-b2785600-1df3-11e9-8ef0-7607ac68aa2b.png\">\r\n\r\nThis facilitates the debugging process as the current behavior does not generate any warnings or errors.","Url":"https://github.com/vuejs/vue-router/pull/2591","RelatedDescription":"Open PR \"Warn about root paths without a leading slash (fix #2550)\" (#2591)"},{"Id":"401548570","IsPullRequest":true,"CreatedAt":"2019-01-22T00:02:47","Actor":"zigomir","Number":"2590","RawContent":null,"Title":"feat: add browser ESM build","State":"open","Body":"POC\r\n\r\nfixes https://github.com/vuejs/vue-router/issues/2589\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2590","RelatedDescription":"Open PR \"feat: add browser ESM build\" (#2590)"},{"Id":"401532763","IsPullRequest":false,"CreatedAt":"2019-01-21T22:37:34","Actor":"zigomir","Number":"2589","RawContent":null,"Title":"Browser ES module build","State":"open","Body":"### What problem does this feature solve?\r\nNow with https://github.com/vuejs/vue/pull/7110 in place and https://github.com/vuejs/vuex/pull/1401 we should probably expose `vue-router` ES module build (minified and non–minifed) so that develpers can use main three vue libraries with `<script type=\"module>` and without any build step.\r\n\r\nWould you merge a PR that solves that?\r\n\r\n\r\n### What does the proposed API look like?\r\nNo changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2589","RelatedDescription":"Open issue \"Browser ES module build\" (#2589)"},{"Id":"401382250","IsPullRequest":true,"CreatedAt":"2019-01-21T14:39:41","Actor":"pfeiferbit","Number":"2588","RawContent":null,"Title":"docs: add descriptions for parseQuery / stringifyQuery","State":"open","Body":"This clears up what the implementor of these functions has to expect.\r\n\r\n---\r\n\r\nStumbled across this while trying to use the [qs](https://www.npmjs.com/package/qs) package for `parseQuery` and `stringifyQuery` since I work with a PHP backend that relies on `foo[bar][baz]=qux` syntax with a strict RFC-3986 encoding.\r\n\r\nWording could probably be better since English ain't my primary language.\r\n\r\nGreetings","Url":"https://github.com/vuejs/vue-router/pull/2588","RelatedDescription":"Open PR \"docs: add descriptions for parseQuery / stringifyQuery\" (#2588)"},{"Id":"401250071","IsPullRequest":true,"CreatedAt":"2019-01-21T09:53:43","Actor":"bbbbx","Number":"2587","RawContent":null,"Title":"docs: make title more understandable","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nThe title does not match the body description.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2587","RelatedDescription":"Closed or merged PR \"docs: make title more understandable\" (#2587)"},{"Id":"401127483","IsPullRequest":true,"CreatedAt":"2019-01-20T18:53:21","Actor":"Aferz","Number":"2586","RawContent":null,"Title":"feat(transition): Using router push/replace instead of private history functions","State":"open","Body":"I've found myself overriding the main Router to be able to control the `.back` method to prevent the user clicks on my app button a leaves the application. Check this example:\r\n\r\n```javascript\r\nclass Router extends VueRouter {\r\n  constructor (...args) {\r\n    super(...args)\r\n\r\n    this.counter = 0\r\n  }\r\n\r\n  push (location, ...args) {\r\n    super.push(location, ...args)\r\n\r\n    this.counter++\r\n  }\r\n\r\n  go (n) {\r\n    if (this.counter + n < 0) {\r\n      super.replace({ name: 'home.feed' })\r\n    } else {\r\n      super.go(n)\r\n    }\r\n\r\n    this.counter += n\r\n  }\r\n}\r\n```\r\n\r\nThanks to this approach, product links can be shared without worring the back button that linked pages contain will destroy the application once pressed. (The same behaviour as Twitter PWA)\r\n\r\n---\r\n\r\nWhat I mean is the `beforeEach` guard is not respecting the overriden methods (push, replace, etc...), because it uses the `history` driver directly when it has to redirect to a route, instead of using the router instance.\r\n\r\nThis could be taken as a _Breaking Change_ for users like me that decided to wrap the router in their own classes, but I honestly think that this usage of the router is outside of the scope of the vue-router maintainers.\r\n\r\nWhat do you all think?","Url":"https://github.com/vuejs/vue-router/pull/2586","RelatedDescription":"Open PR \"feat(transition): Using router push/replace instead of private history functions\" (#2586)"},{"Id":"400645992","IsPullRequest":false,"CreatedAt":"2019-01-18T09:43:00","Actor":"zpcalan","Number":"2585","RawContent":null,"Title":"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2585","RelatedDescription":"Closed issue \"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效\" (#2585)"},{"Id":"400532266","IsPullRequest":false,"CreatedAt":"2019-01-18T08:36:39","Actor":"igorveremsky","Number":"2584","RawContent":null,"Title":"router-view mounted lifehook?","State":"closed","Body":"### What problem does this feature solve?\r\nI use preloader at my spa and want to hide it only if page DOM ready, for not clone code to mounted lifehook of all my routes components will be good to have general mounted lifehook for `router-view` \r\n\r\n### What does the proposed API look like?\r\n```js\r\nRouter.viewMounted(() => {\r\n\t// do some on router view mounted\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2584","RelatedDescription":"Closed issue \"router-view mounted lifehook?\" (#2584)"},{"Id":"398942715","IsPullRequest":true,"CreatedAt":"2019-01-17T19:28:16","Actor":"tuxinghuan","Number":"2578","RawContent":null,"Title":"docs(zh):fix a mistake of style","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2578","RelatedDescription":"Closed or merged PR \"docs(zh):fix a mistake of style\" (#2578)"},{"Id":"400231452","IsPullRequest":true,"CreatedAt":"2019-01-17T11:58:02","Actor":"SetSplin","Number":"2583","RawContent":null,"Title":"fix(create-matcher): \"cannot assign to read only property path\"","State":"closed","Body":"In create-matcher.js in match function location was marked as constant. That course as error described here (https://github.com/vuejs/vue-router/issues/1381)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2583","RelatedDescription":"Closed or merged PR \"fix(create-matcher): \"cannot assign to read only property path\"\" (#2583)"},{"Id":"400009896","IsPullRequest":false,"CreatedAt":"2019-01-16T21:39:40","Actor":"trainiac","Number":"2582","RawContent":null,"Title":"Ability to set and reference redirectParams","State":"open","Body":"### What problem does this feature solve?\r\nIn order to issue a 301 redirect vs a 302 redirect in vue router there is no easy way to do that in userland.  Currently you have to write a custom redirect function and throw an error with the information that you need.\r\n\r\n```\r\n{ \r\n  path: '/old-path': \r\n  redirect() => {\r\n    const error = new Error('Permanent Redirect')\r\n    error.redirect = {\r\n      code: 301,\r\n      url: '/new-path',\r\n    }\r\n    throw error\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nIn your redirects you can define\r\n```js\r\n{ \r\n  path: '/old-path': \r\n  redirect: '/new-path', \r\n  redirectParams: { \r\n    responseCode: 301 \r\n  } \r\n}\r\n```\r\n\r\nAnd in a `beforeEach` handler you could reference the meta info\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n   to.redirectedFrom === '/old-path'\r\n   to.redirectParams.responseCode === 301\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2582","RelatedDescription":"Open issue \"Ability to set and reference redirectParams\" (#2582)"},{"Id":"399751623","IsPullRequest":false,"CreatedAt":"2019-01-16T13:04:21","Actor":"JeromeDeLeon","Number":"2581","RawContent":null,"Title":"Unknown element of vue router (e.g. router-link, router-view)","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/JeromeDeLeon/vue-router-bug](https://github.com/JeromeDeLeon/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Create a project using vue-cli choosing manual preset.\r\n* Enable the following features:\r\n   -  Babel\r\n   -  Router\r\n   -  Vuex\r\n   -  Use config files\r\n* Run the application in development\r\n\r\n### What is expected?\r\nShow the template of Home.vue\r\n\r\n### What is actually happening?\r\nThe app was just showing the \"Home | About\" and nothing else. In console (dev tools), there's an error showing unknown elements for router-link and router-view.\r\n\r\n---\r\nI just did nothing but follow the documentation when creating a project but did a side note of manually selecting the features.\r\nI tried again to create another project, but same result. Again, I tried, same result but there's no error in the console (dev tools)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2581","RelatedDescription":"Closed issue \"Unknown element of vue router (e.g. router-link, router-view)\" (#2581)"},{"Id":"399397648","IsPullRequest":false,"CreatedAt":"2019-01-15T18:41:38","Actor":"salomvary","Number":"2580","RawContent":null,"Title":"beforeRouteUpdate is not called on the first navigation when routing to the same component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/salomvary/qcfg8xm7/18/](https://jsfiddle.net/salomvary/qcfg8xm7/18/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open the linked JSFiddle link\r\n- Open the developer console\r\n- Click on \"Go to /foo/one\"\r\n- Look at the console logs\r\n\r\n### What is expected?\r\n'foo:beforeRouteUpdate'  to be logged on the first navigation.\r\n\r\n### What is actually happening?\r\n'foo:beforeRouteUpdate'  is not logged on the first navigation.\r\n\r\n---\r\nWorkaround: watching `$route` seems to work as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2580","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on the first navigation when routing to the same component\" (#2580)"},{"Id":"399242944","IsPullRequest":true,"CreatedAt":"2019-01-15T08:51:35","Actor":"CharlesOkwuagwu","Number":"2579","RawContent":null,"Title":"Change `url=\"/\"` to `url=\"index.html\"`","State":"open","Body":"When `publicPath` is set, for some reason `url=\"/\"` fails in the Rewrite.\r\n\r\n`url=\"index.html\"` works regardless of `publicPath` setting\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2579","RelatedDescription":"Open PR \"Change `url=\"/\"` to `url=\"index.html\"`\" (#2579)"},{"Id":"398212810","IsPullRequest":true,"CreatedAt":"2019-01-11T09:59:34","Actor":"tuxinghuan","Number":"2577","RawContent":null,"Title":"docs(zh): link to the correct website","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2577","RelatedDescription":"Closed or merged PR \"docs(zh): link to the correct website\" (#2577)"},{"Id":"398186851","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:49","Actor":"tuxinghuan","Number":"2576","RawContent":null,"Title":"fix: fix typo in examples","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\njust fix a typo","Url":"https://github.com/vuejs/vue-router/pull/2576","RelatedDescription":"Closed or merged PR \"fix: fix typo in examples\" (#2576)"},{"Id":"398124430","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:11","Actor":"Jinjiang","Number":"2575","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vue-router/compare/d97d902...4bf3ba5\r\n/ping @Justineo","Url":"https://github.com/vuejs/vue-router/pull/2575","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#2575)"},{"Id":"397551510","IsPullRequest":true,"CreatedAt":"2019-01-10T00:17:03","Actor":"Alex-Sokolov","Number":"2574","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/5ae633e900aea1e975f1ca94284924d0ef172e26#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2574","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2574)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-01-31T13:55:17","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"open","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Open PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-31T13:11:02","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"closed","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Closed or merged PR \"docs: complement preserveState information\" (#1484)"},{"Id":"397545948","IsPullRequest":true,"CreatedAt":"2019-01-31T11:18:22","Actor":"periscuelo","Number":"1481","RawContent":null,"Title":"docs: Update to version 3.1.0 [pt-br]","State":"closed","Body":"I made one update to be equal to english version explanation.\r\n@ktsn Can you review / merge it?\r\n\r\nThanks","Url":"https://github.com/vuejs/vuex/pull/1481","RelatedDescription":"Closed or merged PR \"docs: Update to version 3.1.0 [pt-br]\" (#1481)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"395016740","IsPullRequest":true,"CreatedAt":"2019-01-30T09:31:05","Actor":"angeliski","Number":"1476","RawContent":null,"Title":"docs: Removed english from translated guide [pt-br]","State":"closed","Body":"Hi!\r\nI noticed a english paragraph forgotten  in the guide translated,\r\nthe pr is just to fix.","Url":"https://github.com/vuejs/vuex/pull/1476","RelatedDescription":"Closed or merged PR \"docs: Removed english from translated guide [pt-br]\" (#1476)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-01-30T03:09:09","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"open","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Open PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-01-24T09:32:52","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"open","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Open issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-01-15T11:56:19","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Open issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"397755794","IsPullRequest":true,"CreatedAt":"2019-01-10T10:14:56","Actor":"lishihong","Number":"1483","RawContent":null,"Title":"Revert 1457 patch 1","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1483","RelatedDescription":"Closed or merged PR \"Revert 1457 patch 1\" (#1483)"},{"Id":"397745237","IsPullRequest":true,"CreatedAt":"2019-01-10T09:40:39","Actor":"lishihong","Number":"1482","RawContent":null,"Title":"Update index.js","State":"closed","Body":"test","Url":"https://github.com/vuejs/vuex/pull/1482","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1482)"},{"Id":"396165778","IsPullRequest":false,"CreatedAt":"2019-01-07T10:20:13","Actor":"SebastianS90","Number":"1480","RawContent":null,"Title":"Store getters do not re-evaluate on dynamic module registration","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ll6zjklq97](https://codesandbox.io/s/ll6zjklq97)\r\n\r\n### Steps to reproduce\r\n- Open the CodeSandbox\r\n- Click \"Register Module\"\r\n\r\n### What is expected?\r\nAll four values should switch to true\r\n\r\n### What is actually happening?\r\nOnly the values based on watchers from the component switch to true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1480","RelatedDescription":"Closed issue \"Store getters do not re-evaluate on dynamic module registration\" (#1480)"},{"Id":"395304196","IsPullRequest":false,"CreatedAt":"2019-01-02T16:31:37","Actor":"brophdawg11","Number":"1479","RawContent":null,"Title":"registerModule causing unneccesary getter evaluations","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkrn0zojqr](https://codesandbox.io/s/kkrn0zojqr)\r\n\r\n### Steps to reproduce\r\n* Open the code sandbox\r\n* Open the console\r\n* Reload the sandbox and note the log of \"Running Getter\"\r\n* Click `Register Module`\r\n* Note that \"Running Getter\" is logged again, even though state.foo hasn't changed\r\n\r\n### What is expected?\r\nJust like normal reactivity, I wouldn't expect the `foo` getter to re-run unless one of it's dependencies (`state.foo`) was changed.\r\n\r\n### What is actually happening?\r\nCalling `registerModule` causes getters to re-execute regardless\r\n\r\n---\r\nThis is more noticeable and more problematic if the getters return non-primitives, since they can then trigger re-renders down the component tree\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1479","RelatedDescription":"Open issue \"registerModule causing unneccesary getter evaluations\" (#1479)"},{"Id":"395119125","IsPullRequest":true,"CreatedAt":"2019-01-01T23:03:14","Actor":"haversnail","Number":"1478","RawContent":null,"Title":"Fix: add `devtools` to StoreOptions interface","State":"open","Body":"Updates `StoreOptions` type to include the [`devtools`](https://vuex.vuejs.org/api/#devtools) option, resolving TypeScript error when option is included in store constructor.","Url":"https://github.com/vuejs/vuex/pull/1478","RelatedDescription":"Open PR \"Fix: add `devtools` to StoreOptions interface\" (#1478)"},{"Id":"395077834","IsPullRequest":true,"CreatedAt":"2019-01-01T12:17:21","Actor":"hkthai","Number":"1477","RawContent":null,"Title":"docs & examples: rewrite state object to functions everywhere","State":"open","Body":"## Overview\r\nRewrite state, object to function everywhere.\r\n\r\n## Details\r\nTo avoid shared state on the server side, we should change our state from object to functions everywhere.\r\n\r\n## Related Pages\r\n[stack overflow](https://stackoverflow.com/questions/49557177/vuex-state-returned-as-function-or-object-literal)\r\n\r\n\r\nIf it is wrong, please close this pr:bow:","Url":"https://github.com/vuejs/vuex/pull/1477","RelatedDescription":"Open PR \"docs & examples: rewrite state object to functions everywhere\" (#1477)"},{"Id":"394976929","IsPullRequest":false,"CreatedAt":"2018-12-31T14:48:24","Actor":"mbana","Number":"1475","RawContent":null,"Title":"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug](https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug)\r\n\r\n### Steps to reproduce\r\n```sh\r\ngit clone git@github.com:banaio/vue_js_samples.git\r\ncd vue_js_samples\r\ncd vuex_accessing_nested_property_bug\r\nyarn install\r\nyarn serve\r\nopen http://localhost:8080/\r\n```\r\n\r\n### What is expected?\r\nWe should see the message `{ \"level_3_field\": \"level_3_field_value\" }` twice, however it\r\nappears only once. Please see the screenshot.\r\n\r\n### What is actually happening?\r\nThe message `{ \"level_3_field\": \"level_3_field_value\" }` appears only once. As per this screenshot:\r\n\r\n![Image of broken](https://raw.githubusercontent.com/banaio/vue_js_samples/master/vuex_accessing_nested_property_bug/broken.png)\r\n\r\n---\r\n\r\nWhen `state`, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js), is defined as:\r\n\r\n```js\r\n  state: {\r\n    level_1: {\r\n      level_2: {\r\n        level_3: {\r\n          level_3_field: 'level_3_field_value',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n    level_1: (state) => state.level_1,\r\n  },\r\n```\r\n\r\nAnd used as, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue),\r\nthe `level_3_broken` does not work, but the `level_3_working` seems to work:\r\n\r\n```js\r\n  computed: {\r\n    ...mapGetters({\r\n      level_3_broken: 'level_1.level_2.level_3',\r\n    }),\r\n    level_3_working() {\r\n      return this.$store.getters['level_1']['level_2'].level_3;\r\n    },\r\n  },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1475","RelatedDescription":"Closed issue \"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store\" (#1475)"},{"Id":"394070232","IsPullRequest":false,"CreatedAt":"2018-12-31T10:26:24","Actor":"devindwan","Number":"1474","RawContent":null,"Title":"Provide a way to re-compute a getter","State":"closed","Body":"### What problem does this feature solve?\r\nAs we all know `Vue` does not support `Map`(ES6) right now. However, this `Map` feature is useful and it can not be replaced by normal object totally. Maybe we can provide an approach  to manually re-compute a getter when the depended `Map object` has been changed. It's not quite elegant and break reactivity rule, but we can temporarily improve such reactivity support by this patch like function before Vue 3.0 is released.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst state = {\r\n  map: new Map()\r\n}\r\n\r\n// Some getters depend on the map object. Not a necessary use case, just for example.\r\nconst getters = {\r\n  keys: state => {\r\n    return state.map.keys()\r\n  },\r\n  values: state => {\r\n    return state.map.values()\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  SOME_MUTATION (state, value) {\r\n    state.map = value\r\n    // Try to re-compute relevant getters\r\n    recompute(['keys', 'values'])\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1474","RelatedDescription":"Closed issue \"Provide a way to re-compute a getter\" (#1474)"},{"Id":"392025334","IsPullRequest":false,"CreatedAt":"2018-12-18T07:15:58","Actor":"hqzh","Number":"1473","RawContent":null,"Title":"辅助函数连接多个store","State":"open","Body":"### What problem does this feature solve?\r\n有时我的组件需要连多个store,比如公共的和我自己的\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport { createNamespacedHelpers } from \"vuex\";\r\n\r\nconst {\r\n    mapState,\r\n    mapGetters,\r\n    mapActions,\r\n    mapMutations\r\n         } = createNamespacedHelpers([\"myStore\",\"commonStore\"]);\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1473","RelatedDescription":"Open issue \"辅助函数连接多个store\" (#1473)"},{"Id":"391765521","IsPullRequest":true,"CreatedAt":"2018-12-17T15:33:35","Actor":"s-pace","Number":"1472","RawContent":null,"Title":"doc: Enabling DocSearch","State":"open","Body":"👋 vuex,\r\n\r\nI am [working on DocSearch](https://community.algolia.com/docsearch/), this PR will enable vuex to use the same search [experience as vuepress](https://vuepress.vuejs.org/theme/default-theme-config.html#algolia-search), [vuejs](https://vuejs.org/), [bootstrap](https://getbootstrap.com/docs/4.1/getting-started/introduction/) ...\r\n\r\nOur scraper will run every 24H to update your Algolia index. Feel free to [PR your configuration](https://github.com/algolia/docsearch-configs/blob/0b171ddf626dac501b2d9bf4a80e79613c874918/configs/vuex.json) if you need any update, the search is out of the box.\r\n\r\nLet us know if you need anything.","Url":"https://github.com/vuejs/vuex/pull/1472","RelatedDescription":"Open PR \"doc: Enabling DocSearch\" (#1472)"},{"Id":"390153226","IsPullRequest":false,"CreatedAt":"2018-12-12T10:11:47","Actor":"jdoubleu","Number":"1471","RawContent":null,"Title":"Destroy hook in plugin for hotReload","State":"open","Body":"### What problem does this feature solve?\r\nSo far it is only possible for a plugin to be registered through a single function. On the other hand it is not possible to hook into a plugins destroy/replacement.\r\nIn production mode there is no need for such hook, because it's not possible to remove a plugin (this might be reconsidered after https://github.com/vuejs/vuex/issues/467#issuecomment-266493888).\r\n\r\nBut given the [plugin example](https://vuex.vuejs.org/guide/plugins.html#committing-mutations-inside-plugins) which registers event handlers on the `socket` and taking [hot reloading](https://vuex.vuejs.org/guide/hot-reload.html) into account, the handlers are registered multiple times.\r\nThere is no way to unregister an event handler before the plugin gets replaced.\r\n\r\nI'm not sure if this is a general problem with a HMR system (like webpack's) or if its caused by the [`store.hotUpdate()`](https://vuex.vuejs.org/api/#hotupdate) function. I suspect, that even `store.subscribe()` gets called multiple times causing the code to be executed multiple times after some hot replacements.\r\n\r\n**Workaround**:\r\nStore event handlers in a local variable outside the plugin's context.\r\n\r\n### What does the proposed API look like?\r\nEither additional methods exposed by the plugin (similar to [this](https://github.com/vuejs/vuex/issues/467#issuecomment-270836284)):\r\n```\r\nconst myPlugin = {\r\n  init(store) {\r\n     registerAllEventListeners()\r\n\r\n     store.subscribe((mutation, state) => {\r\n        doSomething()\r\n     })\r\n  },\r\n  beforeDestroy(store) {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nOr as a store instance method:\r\n```\r\nconst myPlugin = (store) => {\r\n   registerAllEventListeners()\r\n\r\n   store.subscribe((mutation, state) => {\r\n       doSomething()\r\n   })\r\n\r\n  store.subscribeBeforeDestroy(() => {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nThe latter wouldn't introduce breaking changes of the plugin API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1471","RelatedDescription":"Open issue \"Destroy hook in plugin for hotReload\" (#1471)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-03T05:31:01.0098432Z","RunDurationInMilliseconds":2562}