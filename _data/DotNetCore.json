{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7312607641","Type":"IssuesEvent","CreatedAt":"2018-02-28T21:34:09","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16293","RelatedDescription":"Closed issue \"Test failure: JIT_Regression._VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_/_VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_cmd\" (#16293) at dotnet/coreclr","RelatedBody":"Opened on behalf of @Sunny-pu\r\n\r\nThe test `JIT_Regression._VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_/_VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_cmd` has failed.\r\n\r\n```\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    \r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n.........\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    \r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-64f80d91dfc9\\Work\\e6d99d84-3bac-4f9a-ac1f-82209b067aba\\Unzip\\VS-ia64-JIT\\V1.2-M02\\b28158\\b28158\\\\lock already exists.\\r\r\n    ERROR: Input redirection is not supported, exiting the process immediately.\\r\r\n    A subdirectory or file C:\\dotnetbuild\\work\\b7a58b75-a397-42b6-8256-\r\n```\r\n        Stack Trace:\r\n\r\n           at JIT_Regression._VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_._VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_cmd()\r\nBuild : Master - 20180208.05 (Core Tests)\r\nFailing configurations:\r\n- windows.10.arm64-arm\r\n  - \r\nDetails:\r\nhttps://mc.dot.net/#/product/netcore/master/source/official~2Fcoreclr~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20180208.05/workItem/JIT.Regression.XUnitWrapper/analysis/xunit/JIT_Regression._VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_~2F_VS_ia64_JIT_V1_2_M02_b28158_b28158_b28158_cmd"},{"Id":"7312553741","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:26:21","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16657","RelatedDescription":"Merged pull request \"Crypto arm64 intrinsics\" (#16657) at dotnet/coreclr","RelatedBody":"Arm64 intrinsics for Crypto Operations.\r\n\r\nRefer: https://github.com/dotnet/coreclr/pull/16499"},{"Id":"7312517825","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:16:14","Actor":"WinCPP","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16666","RelatedDescription":"Opened pull request \"Edits to fix conflicts in generated Vector.cs file\" (#16666) at dotnet/coreclr","RelatedBody":"Fixed minor space changes and one syntax error that causes conflict between checked in Vector.cs file and the freshly auto-generated Vector.cs file.\r\n\r\nThis is as per the discussion at this [link](https://github.com/dotnet/corefx/pull/26499#issuecomment-369376926).\r\n\r\n@eerhardt Please review the changes.\r\n\r\nThanks,\r\nMandar"},{"Id":"7312471907","Type":"IssuesEvent","CreatedAt":"2018-02-28T21:06:47","Actor":"fujiy","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16665","RelatedDescription":"Opened issue \"SOS - Error message in Linux mention a command that doesn't exist in lldb\" (#16665) at dotnet/coreclr","RelatedBody":"When I call sos ClrStack and can't walk the stack, it returns:\r\n\r\n(lldb) sos ClrStack\r\nOS Thread Id: 0x0 (1)\r\nUnable to walk the managed stack. The current thread is likely not a\r\nmanaged thread. You can run **!threads** to get a list of managed threads in\r\nthe process\r\n\r\nIt should be clrthreads or sos Threads\r\n"},{"Id":"7312442855","Type":"IssuesEvent","CreatedAt":"2018-02-28T21:00:47","Actor":"nerzhulart","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16664","RelatedDescription":"Opened issue \"Rider debugger crashes when trying to debug .net core 2.1 preview\" (#16664) at dotnet/coreclr","RelatedBody":"We call libdbgshim.dylib via PInvoke on Mono 5.8.0.\r\nDebugging of .net core 2.0 and prior works fine.\r\n\r\nI see something suspicious at runtime startup thread:\r\n```\r\n  thread #22\r\n    frame #0: 0x0000000112276ca3 libmscordaccore.dylib`EnsureStackSize(unsigned long) + 51\r\n    frame #1: 0x0000000112276831 libmscordaccore.dylib`Initialize(int, char const* const*, unsigned int) + 1153\r\n    frame #2: 0x000000011227841e libmscordaccore.dylib`PAL_RegisterModule + 14\r\n    frame #3: 0x0000000111153b85 libdbgshim.dylib`LOADRegisterLibraryDirect(void*, char const*, int) + 69\r\n    frame #4: 0x0000000111152c76 libdbgshim.dylib`LoadLibraryExA + 198\r\n    frame #5: 0x0000000111121e9a libdbgshim.dylib`RuntimeStartupHelper::InvokeStartupCallback(char*, void*) + 618\r\n    frame #6: 0x000000011117bcf5 libdbgshim.dylib`PAL_RuntimeStartupHelper::InvokeStartupCallback() + 229\r\n    frame #7: 0x000000011117baa4 libdbgshim.dylib`PAL_RuntimeStartupHelper::StartupHelperThread() + 276\r\n    frame #8: 0x000000011117b95e libdbgshim.dylib`StartupHelperThread(void*) + 14\r\n    frame #9: 0x000000011117cf58 libdbgshim.dylib`CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n    frame #10: 0x00007fff6add26c1 libsystem_pthread.dylib`_pthread_body + 340\r\n    frame #11: 0x00007fff6add256d libsystem_pthread.dylib`_pthread_start + 377\r\n    frame #12: 0x00007fff6add1c5d libsystem_pthread.dylib`thread_start + 13\r\n```\r\n\r\nThe whole threads dump \r\nhttps://gist.github.com/nerzhulart/35d0b28e41464cc4adffeaf266beb914\r\n\r\nSeems that code with EnsureStackSize function was added only on 2.1 branch\r\n"},{"Id":"7312316184","Type":"PullRequestEvent","CreatedAt":"2018-02-28T20:35:01","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16649","RelatedDescription":"Merged pull request \"Set isInternalRegDelayFree for several of the x86 hwintrinsics\" (#16649) at dotnet/coreclr","RelatedBody":"FYI. @CarolEidt, @mikedn, @fiigii. As per the discussion here: https://github.com/dotnet/coreclr/pull/16558#issuecomment-368923707"},{"Id":"7312275486","Type":"PullRequestEvent","CreatedAt":"2018-02-28T20:26:37","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16663","RelatedDescription":"Opened pull request \"[WIP] Fix reachability, part1\" (#16663) at dotnet/coreclr","RelatedBody":"Separate `fgSetBlockHasGCSafepoint` and `fgComputeReachabilitySets` then optimize `fgSetBlockHasGCSafepoint` to use a linear algorithm (O(N * [JitHashTable access time]).\r\n\r\nThe previous algorithm:\r\n1) was slow;\r\n2) did not run new iteration if ` BBF_GC_SAFE_POINT` changes, but `bbReach` did not; however, because we do many extra iteration for ``bbReach` we did not hit this case (and because missing `BBF_GC_SAFE_POINT` does not affect correctness).\r\n"},{"Id":"7312270113","Type":"PullRequestEvent","CreatedAt":"2018-02-28T20:25:29","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16662","RelatedDescription":"Opened pull request \"Remove vs2015 build dependencies\" (#16662) at dotnet/coreclr","RelatedBody":"This effects the official buildpipeline.\r\n\r\n/cc @RussKeldorph"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7312603562","Type":"IssuesEvent","CreatedAt":"2018-02-28T21:33:19","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8298","RelatedDescription":"Closed issue \"dotnet publish does not work with full name parameters (output, runtime)\" (#8298) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nPublishing a project with at least one of `--output` or `--runtime` parameters as fullname.\r\n\r\n## Expected  behavior\r\nPublish to work normally like:\r\n`dotnet publish PROJECT_DIR -o PUBLISH_DIR -r linux-x64`\r\n\r\n## Actual behavior\r\nWhen publishing like this\r\n\r\n`dotnet publish PROJECT_DIR --output PUBLISH_DIR -r linux-x64`\r\nOR\r\n`dotnet publish PROJECT_DIR -o PUBLISH_DIR --runtime linux-x64`\r\nOR\r\n`dotnet publish PROJECT_DIR --output PUBLISH_DIR --runtime linux-x64`\r\n\r\nthrows an exception when invoking `dotnet` on the main dll:\r\n```\r\nUnhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'System.Runtime, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\nAborted\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.2/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"7312448746","Type":"IssuesEvent","CreatedAt":"2018-02-28T21:02:01","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8685","RelatedDescription":"Closed issue \"Dotnet Cli does not display message in correct encoding\" (#8685) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nrun `dotnet -h`. \r\n\r\n## Expected  behavior\r\nA readable help message is displayed\r\n\r\n## Actual behavior\r\n\r\n```\r\nUsage: dotnet [options]\r\nUsage: dotnet [path-to-application]\r\n\r\nOptions:\r\n  -h|--help            Display help.\r\n  --version         Display version.\r\n\r\npath-to-application:\r\n  The path to an application .dll file to execute.\r\nPS C:\\Source\\vscodeprojects\\sabs-service> dotnet -h\r\n.NET ???? ??? ??? (2.1.4)\r\n???: dotnet [runtime-options] [path-to-application]\r\n???: dotnet [sdk-options] [command] [arguments] [command-options]\r\n\r\npath-to-application:\r\n  ???????????? .dll ?????????\r\n\r\nSDK ????:\r\n  new              .NET ??????????????\r\n  restore          .NET ?????????????????????????\r\n  run              .NET ????????????????????????\r\n  build            .NET ?????????????\r\n  publish          ???? .NET ???????????? (????????)?\r\n  test             ????????????????? ??????????????????????\r\n  pack             NuGet ????????????\r\n  migrate          project.json ??????????? msbuild ?????????????????\r\n  clean            ????????????\r\n  sln              ??????? (SLN) ???????????\r\n  add              ????????????????\r\n  remove           ?????????????????\r\n  list             ???????????????????\r\n  nuget            ??? NuGet ???????????\r\n  msbuild          Microsoft Build Engine (MSBuild) ???????\r\n  vstest           Microsoft Test Execution Command Line Tool ???????\r\n\r\n????????:\r\n  -v|--verbosity        ???????????????????????: q[uiet]?m[inimal]?n[ormal]?d[etailed]?diag[nostic]?\r\n  -h|--help             ??????????\r\n\r\n??????????????????'dotnet COMMAND --help' ???????\r\n\r\nsdk-options:\r\n  --version        .NET Core SDK ????????????\r\n  --info           .NET Core ?????????\r\n  -d|--diagnostics ????????????\r\n\r\nruntime-options:\r\n  --additionalprobingpath <path>    ??????????????????????\r\n  --fx-version <version>            ???????????????????????????? Shared Framework ???????\r\n  --roll-forward-on-no-candidate-fx ????? Shared Framework ??????????????????\r\n  --additional-deps <path>          ?? deps.json ?????????\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET ???? ??? ??? (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n```\r\n\r\nPrimary display language is set to Japanese. English (United States) is the second on Language settings. Date format is also set to English (United States).\r\n\r\nNote this is concerning the output of Cli tool. Not the application I am writing. This has the same behavior in both CMD and Powershell, as well as VSCode Terminal.\r\n\r\n\r\n"},{"Id":"7312334315","Type":"PullRequestEvent","CreatedAt":"2018-02-28T20:38:49","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8703","RelatedDescription":"Opened pull request \"Update CoreSetup, CoreSetup, CoreSetup, Roslyn to preview2-26228-04, preview2-26228-04, preview2-26228-04, beta1-62628-07, respectively (master)\" (#8703) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7312248828","Type":"PullRequestEvent","CreatedAt":"2018-02-28T20:21:03","Actor":"JunTaoLuo","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8702","RelatedDescription":"Opened pull request \"Update Microsoft.DotNet.Archive version\" (#8702) at dotnet/cli","RelatedBody":"Apparently we pick up the version of Microsoft.DotNet.Archive from the sdk so I'm updating the version here to the latest one with the null ref fix. Let me know if this is the correct branch.\r\n"},{"Id":"7312108968","Type":"PullRequestEvent","CreatedAt":"2018-02-28T19:53:26","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8625","RelatedDescription":"Closed pull request \"Update CoreSetup, CoreSetup, CoreSetup, to preview2-26219-02, preview2-26219-02, preview2-26219-02, respectively (master)\" (#8625) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7312130000","Type":"PullRequestEvent","CreatedAt":"2018-02-28T19:57:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/661","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02528-05 (master)\" (#661) at dotnet/standard","RelatedBody":""},{"Id":"7312017249","Type":"IssuesEvent","CreatedAt":"2018-02-28T19:36:13","Actor":"mwilton","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/660","RelatedDescription":"Opened issue \"TimeZoneInfo for Samoa Standard Time doesn't match online documentation\" (#660) at dotnet/standard","RelatedBody":"Here are the properties of the Samoa Standard Time TimeZoneInfo object (+13):\r\n![image](https://user-images.githubusercontent.com/7872394/36808900-502351dc-1c7b-11e8-89ea-b0d9addaa71a.png)\r\n\r\nAnd here is Microsoft's online documentation (-11):\r\n![image](https://user-images.githubusercontent.com/7872394/36808960-75af3d62-1c7b-11e8-9e79-60ee13c891c5.png)\r\n\r\nWhich comes from:\r\nhttps://msdn.microsoft.com/en-us/library/ms912053(v=winembedded.10).aspx\r\n\r\n\r\n"},{"Id":"7298903116","Type":"PullRequestEvent","CreatedAt":"2018-02-26T18:24:07","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/659","RelatedDescription":"Merged pull request \"Fix typo\" (#659) at dotnet/standard","RelatedBody":""},{"Id":"7298225710","Type":"PullRequestEvent","CreatedAt":"2018-02-26T16:22:39","Actor":"elbro","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/659","RelatedDescription":"Opened pull request \"Fix typo\" (#659) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7312645209","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:41:44","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27556","RelatedDescription":"Merged pull request \"Update WebSocket status when the underlying connection is closed\" (#27556) at dotnet/corefx","RelatedBody":"This fix addresses a behavior difference between the new managed `WebSocket` implementation and the old Windows only version.\r\n\r\nWhen the underlying connection is closed, we need to also update the state of the `WebSocket` to show that it has been aborted. All of the code to do this was already written, it just needed to be called in one additional place. Making this fix also allowed me to remove most of the platform specific code in the relevant test.\r\n\r\nFixes #26219"},{"Id":"7312624365","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:37:32","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27563","RelatedDescription":"Merged pull request \"Tweak Socket.InitializeSockets\" (#27563) at dotnet/corefx","RelatedBody":"Scratching an itch; it's called in a bunch of places to ensure sockets have been initialized, but it's not inlineable.  Make it so.\r\n\r\ncc: @geoffkizer "},{"Id":"7312556028","Type":"IssuesEvent","CreatedAt":"2018-02-28T21:26:32","Actor":"keeratsingh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27574","RelatedDescription":"Opened issue \"System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest crashes with Unhandled Exception on Linux\" (#27574) at dotnet/corefx","RelatedBody":"System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest crashes on Linux while executing the following tests:\r\n**MultiThreadedCancel_NonAsync**\r\n**MultiThreadedCancel_Async**\r\n\r\nThe same tests pass on windows, I am creating this GitHub issue to track and fix the tests.\r\n\r\n**Command to Reproduce:**\r\n```bash\r\n<CoreFX Location>/Tools/msbuild.sh /t:RebuildAndTest /p:ConfigurationGroup=Release /p:XunitOptions=\"-method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_NonAsync\"\r\n```\r\n\r\n```bash\r\n<CoreFX Location>/Tools/msbuild.sh /t:RebuildAndTest /p:ConfigurationGroup=Release /p:XunitOptions=\"-method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_Async\"\r\n```\r\n\r\n**Logs MultiThreadedCancel_NonAsync:**\r\n```bash\r\nkeerats@ubuntu:/mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests$ ~/dotnetcore/corefx/Tools/msbuild.sh /t:RebuildAndTest /p:ConfigurationGroup=Release /p:XunitOptions=\"-method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_NonAsync\"\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Address -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Address/netstandard/Address.dll\r\n  Circle -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Circle/netstandard/Circle.dll\r\n  Shapes -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Shapes/netstandard/Shapes.dll\r\n  Utf8String -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Utf8String/netstandard/Utf8String.dll\r\n  System.Data.SqlClient.ManualTesting.Tests -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/System.Data.SqlClient.ManualTesting.Tests/netstandard/System.Data.SqlClient.ManualTesting.Tests.dll\r\n  ----- start 10:37:27 =============== To repro directly: =====================================================\r\n  pushd /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64\r\n  chmod +x /mnt/d/corefx/bin/testhost/netcoreapp-Linux-Release-x64//dotnet\r\n  /mnt/d/corefx/bin/testhost/netcoreapp-Linux-Release-x64//dotnet xunit.console.netcore.exe System.Data.SqlClient.ManualTesting.Tests.dll  -xml testResults.xml -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_NonAsync  -notrait category=OuterLoop -notrait category=failing\r\n  popd\r\n  ===========================================================================================================\r\n  /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64 /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests\r\n  xUnit.net console test runner (64-bit .NET Core)\r\n  Copyright (C) 2014 Outercurve Foundation.\r\n  \r\n  Discovering: System.Data.SqlClient.ManualTesting.Tests\r\n  Discovered:  System.Data.SqlClient.ManualTesting.Tests\r\n  Starting:    System.Data.SqlClient.ManualTesting.Tests\r\n  \r\n  Unhandled Exception: System.Data.SqlClient.SqlException: A severe error occurred on the current command.  The results, if any, should be discarded.\r\n     at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs:line 1170\r\n     at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/TdsParser.cs:line 1106\r\n     at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n     at System.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs:line 2861\r\n     at System.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs:line 3121\r\n     at System.Data.SqlClient.SqlDataReader.Read() in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs:line 3083\r\n     at System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.<>c__DisplayClass16_0.<ExecuteCommandCancelExpected>b__0() in /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/SQL/CommandCancelTest/CommandCancelTest.cs:line 220\r\n     at System.Data.SqlClient.ManualTesting.Tests.DataTestUtility.ExpectFailure[TException](Action actionThatFails, String exceptionMessage, Boolean innerExceptionMustBeNull, Func`2 customExceptionVerifier) in /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/DataCommon/DataTestUtility.cs:line 159\r\n     at System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.ExecuteCommandCancelExpected(Object state) in /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/SQL/CommandCancelTest/CommandCancelTest.cs:line 226\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in /root/coreclr/src/mscorlib/shared/System/Threading/ExecutionContext.cs:line 166\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionDispatchInfo.cs:line 132\r\n  /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64/RunTests.sh: line 83:  2669 Aborted                 (core dumped) $RUNTIME_PATH/dotnet xunit.console.netcore.exe System.Data.SqlClient.ManualTesting.Tests.dll -xml testResults.xml -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_NonAsync -notrait category=OuterLoop -notrait category=failing\r\n  /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests\r\n  ----- end 10:37:29 ----- exit code 134 ----------------------------------------------------------\r\n/mnt/d/corefx/Tools/tests.targets(492,5): warning MSB3073: The command \"/mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64/RunTests.sh /mnt/d/corefx/bin/testhost/netcoreapp-Linux-Release-x64/\" exited with code 134. [/mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/System.Data.SqlClient.ManualTesting.Tests.csproj]\r\n/mnt/d/corefx/Tools/tests.targets(500,5): error : One or more tests failed while running tests from 'System.Data.SqlClient.ManualTesting.Tests' please check /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64/testResults.xml for details! [/mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/System.Data.SqlClient.ManualTesting.Tests.csproj]\r\n\r\n```\r\n**Logs MultiThreadedCancel_Async:**\r\n```bash\r\nkeerats@ubuntu:/mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests$ ~/dotnetcore/corefx/Tools/msbuild.sh /t:RebuildAndTest /p:ConfigurationGroup=Release /p:XunitOptions=\"-method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_Async\"\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Address -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Address/netstandard/Address.dll\r\n  Circle -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Circle/netstandard/Circle.dll\r\n  Shapes -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Shapes/netstandard/Shapes.dll\r\n  Utf8String -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/Utf8String/netstandard/Utf8String.dll\r\n  System.Data.SqlClient.ManualTesting.Tests -> /mnt/d/corefx/bin/AnyOS.AnyCPU.Release/System.Data.SqlClient.ManualTesting.Tests/netstandard/System.Data.SqlClient.ManualTesting.Tests.dll\r\n  ----- start 10:39:45 =============== To repro directly: =====================================================\r\n  pushd /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64\r\n  chmod +x /mnt/d/corefx/bin/testhost/netcoreapp-Linux-Release-x64//dotnet\r\n  /mnt/d/corefx/bin/testhost/netcoreapp-Linux-Release-x64//dotnet xunit.console.netcore.exe System.Data.SqlClient.ManualTesting.Tests.dll  -xml testResults.xml -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_Async  -notrait category=OuterLoop -notrait category=failing\r\n  popd\r\n  ===========================================================================================================\r\n  /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64 /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests\r\n  xUnit.net console test runner (64-bit .NET Core)\r\n  Copyright (C) 2014 Outercurve Foundation.\r\n  \r\n  Discovering: System.Data.SqlClient.ManualTesting.Tests\r\n  Discovered:  System.Data.SqlClient.ManualTesting.Tests\r\n  Starting:    System.Data.SqlClient.ManualTesting.Tests\r\n  \r\n  Unhandled Exception: System.Data.SqlClient.SqlException: A severe error occurred on the current command.  The results, if any, should be discarded.\r\n     at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs:line 1170\r\n     at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/TdsParser.cs:line 1106\r\n     at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n     at System.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs:line 2861\r\n     at System.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more) in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs:line 3121\r\n     at System.Data.SqlClient.SqlDataReader.Read() in /mnt/d/corefx/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs:line 3083\r\n     at System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.<>c__DisplayClass16_0.<ExecuteCommandCancelExpected>b__0() in /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/SQL/CommandCancelTest/CommandCancelTest.cs:line 220\r\n     at System.Data.SqlClient.ManualTesting.Tests.DataTestUtility.ExpectFailure[TException](Action actionThatFails, String exceptionMessage, Boolean innerExceptionMustBeNull, Func`2 customExceptionVerifier) in /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/DataCommon/DataTestUtility.cs:line 159\r\n     at System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.ExecuteCommandCancelExpected(Object state) in /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/SQL/CommandCancelTest/CommandCancelTest.cs:line 226\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in /root/coreclr/src/mscorlib/shared/System/Threading/ExecutionContext.cs:line 166\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionDispatchInfo.cs:line 132\r\n  /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64/RunTests.sh: line 83:  3044 Aborted                 (core dumped) $RUNTIME_PATH/dotnet xunit.console.netcore.exe System.Data.SqlClient.ManualTesting.Tests.dll -xml testResults.xml -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -method System.Data.SqlClient.ManualTesting.Tests.CommandCancelTest.MultiThreadedCancel_Async -notrait category=OuterLoop -notrait category=failing\r\n  /mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests\r\n  ----- end 10:39:48 ----- exit code 134 ----------------------------------------------------------\r\n/mnt/d/corefx/Tools/tests.targets(492,5): warning MSB3073: The command \"/mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64/RunTests.sh /mnt/d/corefx/bin/testhost/netcoreapp-Linux-Release-x64/\" exited with code 134. [/mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/System.Data.SqlClient.ManualTesting.Tests.csproj]\r\n/mnt/d/corefx/Tools/tests.targets(500,5): error : One or more tests failed while running tests from 'System.Data.SqlClient.ManualTesting.Tests' please check /mnt/d/corefx/bin/tests/System.Data.SqlClient.ManualTesting.Tests/netcoreapp-Linux-Release-x64/testResults.xml for details! [/mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests/System.Data.SqlClient.ManualTesting.Tests.csproj]\r\nkeerats@ubuntu:/mnt/d/corefx/src/System.Data.SqlClient/tests/ManualTests$ \r\n```\r\n\r\n@saurabh500 @geleems @corivera @AfsanehR "},{"Id":"7312548872","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:24:27","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27573","RelatedDescription":"Opened pull request \"PipeOptions.CurrentUserOnly: remove dir on Unix and add negative tests for Windows\" (#27573) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7312471780","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:06:46","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25130","RelatedDescription":"Opened pull request \"VB: Unify CreateCompilation helpers\" (#25130) at dotnet/roslyn","RelatedBody":"Next phase in the VB test helper changes. This unifies our CreateCompilation helpers to match the style of the C# counterparts. \r\n\r\nItems specifically excluded from this change:\r\n\r\n- Changes to CreateCompilation...AndReferences. These methods will be going away as they are redundant with their counterparts that lack the AndReferences suffix. \r\n- Changes to CompileAndVerify \r\n\r\nBoth of these items are coming but they are largely refactoring operations. Going to separate that out into a separate PR to help with the reviews."},{"Id":"7312450333","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:02:20","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25075","RelatedDescription":"Merged pull request \"Refactor PR: Visual Basic Test Helpers 2\" (#25075) at dotnet/roslyn","RelatedBody":"More renames of Visual Basic Test Helpers to match the counterparts in\r\nthe CSharp code\r\n\r\n"},{"Id":"7312301240","Type":"PullRequestEvent","CreatedAt":"2018-02-28T20:31:57","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24913","RelatedDescription":"Merged pull request \"Allow default literal in comparisons\" (#24913) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\nCurrently, the compiler rejects `x == default` when the overload resolution comes back with object equality. This means the comparison works if `x` is a built-in type (with built-in `==` operator) or a type with a user-defined `==` operator.\r\nThis PR fixes this inconsistency. The `object` comparison will be allowed and `default` will be `default(object)`. That means `x == default` is allowed for reference types, and still fails for value types.\r\n\r\nNote that  `nullable == default` is disallowed, since nullable types are structs and don't have `==` operator defined.\r\nThe same applies to `tuple == default`, although I intend to fix that in the branch implementing tuple equality.\r\n\r\n### Bugs this fixes\r\nFixes https://github.com/dotnet/roslyn/issues/24725\r\n\r\n### Workarounds, if any\r\nYou can always use explicit type `default(object)` or simply `null`.\r\n\r\n### Risk\r\n### Performance impact\r\n\r\n\r\n### Is this a regression from a previous update?\r\nNo\r\n\r\n### Root cause analysis\r\n\r\n\r\n### How was the bug found?\r\nInternally. Noticed while working on Roslyn."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7312242614","Type":"PullRequestEvent","CreatedAt":"2018-02-28T20:19:52","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5468","RelatedDescription":"Merged pull request \"Cache the results of CanCompareValueTypeBits\" (#5468) at dotnet/corert","RelatedBody":"This is a recursive algorithm and there's a pathological test in the CoreCLR test assets that has been timing out ever since the code was introduced.\r\n\r\nMade the cache a bit more general purpose, since I'm expecting this to be reused for more things later."},{"Id":"7312220767","Type":"IssuesEvent","CreatedAt":"2018-02-28T20:15:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5461","RelatedDescription":"Closed issue \"Repeated crashes from rmrcorer.dll on UWP, can't figure out why\" (#5461) at dotnet/corert","RelatedBody":"Hello, I'm sorry if this is not the exact place to ask for help about this (although I suspect this is related to the .NET Native compiler and maybe the additional processing made by the Store, as I can't reproduce the issue locally), but I've been struggling with this issue for months and I have no clue on what's going on.\r\n\r\nI have [this app](https://www.microsoft.com/store/apps/9NBLGGH3T7G3) in the Store, and I'm constantly getting a ton of crashes, with the following info:\r\n\r\n`application_fault_1007_mrmcorer.dll!\r\nwindows::applicationmodel::resources::core::cqualifierevent::registerscaleevent`\r\n\r\nThese usually make up more than 80% of my total crashes (according from the Dev Dashboard), and my usual situation looks like this because of this issue:\r\n![image](https://user-images.githubusercontent.com/10199417/36758264-398b5b02-1c14-11e8-9670-509f81e5a96a.png)\r\nNow, this number is just ridiculously big in proportion to the number of users I have for my app.\r\n\r\nHere's a typical stack trace for these crashes: [crash_stacktrace.zip](https://github.com/dotnet/corert/files/1764904/crash_stacktrace.zip)\r\n\r\nApparently these crashes come from different places in my app, but they all have this line in common:\r\n\r\n`MrmCoreR.dll | Windows::ApplicationModel::Resources::CResourceLoaderFactory::GetForCurrentView`\r\n\r\nWhich I guess corresponds to this call:\r\n\r\n`Windows.ApplicationModel.Resources.ResourceLoader.GetForCurrentView()`\r\n\r\n\r\nThe problem is that **the only place** where I use that line in my app is inside a `try/catch` block:\r\n\r\n```C#\r\nprivate static ResourceLoader _Loader;\r\n\r\npublic static string GetResource(string resource)\r\n{\r\n    try\r\n    {\r\n        if (_Loader == null) _Loader = ResourceLoader.GetForCurrentView();\r\n        return _Loader.GetString(resource);\r\n    }\r\n    catch\r\n    {\r\n        return string.Empty;\r\n    }\r\n}\r\n```\r\n\r\nSo, I have these questions:\r\n\r\n- How's it possible that that `try/catch` block has no effect whatsoever, as I still see all those crashes from the dashboard?\r\n- I'm using HockeyApp to collect crash reports, and these crashes don't show up over there, why are they only displayed in the Dashboard? Is that some particular/special kind of application crash?\r\n- The number don't seem right. I published a new version of my app yesterday and I can already see over 200 crashes like this one, but I usually only have around 400 weekly users. If the app had really crashes that often I'd already received at least some emails complaining about the app crashing on its own. I honestly have no idea about what's happening here.\r\n\r\nI think this might be related to the .NET Native as the stack trace has the typical \"clutter\" that usually comes from the additional optimization passes of .NET Native, and also because I can't seem to be able to reproduce the issue locally in Debug mode (and in Release, so I wonder if the Store has something to do with this too).\r\n\r\nAny help would really be appreciated here.\r\nThanks! 😄\r\nSergio\r\n"},{"Id":"7311630706","Type":"PullRequestEvent","CreatedAt":"2018-02-28T18:22:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5468","RelatedDescription":"Opened pull request \"Cache the results of CanCompareValueTypeBits\" (#5468) at dotnet/corert","RelatedBody":"This is a recursive algorithm and there's a pathological test in the CoreCLR test assets that has been timing out ever since the code was introduced.\r\n\r\nMade the cache a bit more general purpose, since I'm expecting this to be reused for more things later."},{"Id":"7309309505","Type":"IssuesEvent","CreatedAt":"2018-02-28T11:18:38","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5467","RelatedDescription":"Closed issue \"Getting current assembly location returns empty string\" (#5467) at dotnet/corert","RelatedBody":"```c#\r\n            var asm = Assembly.GetExecutingAssembly();\r\n            Console.WriteLine($\"Location: {asm.Location}\");\r\n```\r\n\r\nVersion: https://github.com/dotnet/corert/commit/026c9341a023cfc112e6ac92cf58f788f9d332b6\r\n\r\nOutput: ``Location:`` \r\n\r\nExpected (.net core 2.0):  ``Location: C:\\Users\\Scellow\\dev\\test\\bin\\Debug\\netcoreapp2.0\\test.dll``\r\n\r\nOS: Win 10 x64"},{"Id":"7309094747","Type":"IssuesEvent","CreatedAt":"2018-02-28T10:35:00","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5467","RelatedDescription":"Opened issue \"Getting current assembly location returns empty string\" (#5467) at dotnet/corert","RelatedBody":"```c#\r\n            var asm = Assembly.GetExecutingAssembly();\r\n            Console.WriteLine($\"Location: {asm.Location}\");\r\n```\r\n\r\nVersion: https://github.com/dotnet/corert/commit/026c9341a023cfc112e6ac92cf58f788f9d332b6\r\n\r\nOutput: ``Location:`` \r\n\r\nExpected (.net core 2.0):  ``Location: C:\\Users\\Scellow\\dev\\test\\bin\\Debug\\netcoreapp2.0\\test.dll``"},{"Id":"7308716776","Type":"PullRequestEvent","CreatedAt":"2018-02-28T09:22:28","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5448","RelatedDescription":"Closed pull request \"Revert \"Make g_rgWellKnownMethodNames specific to binder (#5390)\"\" (#5448) at dotnet/corert","RelatedBody":"This reverts commit b02c2edaa6b4390615de5bb1daefdf1ec39d5e7b.\r\n\r\nThis commit didn't actually fully fix #5390 (it's an external issue), but it triggered a linker warning on Windows (`AsmOffsetsVerify.obj : warning LNK4221: This object file does not define any previously undefined public symbols, so it will not be used by any link operation that consumes this library`). It doesn't seem worth it to try to fix the warning and the useless `extern` nicely works around the problem..."},{"Id":"7308714620","Type":"PullRequestEvent","CreatedAt":"2018-02-28T09:22:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5463","RelatedDescription":"Merged pull request \"Add workaround for LNK4221 warning\" (#5463) at dotnet/corert","RelatedBody":""},{"Id":"7308694491","Type":"PullRequestEvent","CreatedAt":"2018-02-28T09:18:03","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5466","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5466) at dotnet/corert","RelatedBody":""},{"Id":"7308404737","Type":"PullRequestEvent","CreatedAt":"2018-02-28T08:12:55","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5465","RelatedDescription":"Merged pull request \"Fix Project N build break\" (#5465) at dotnet/corert","RelatedBody":"@dotnet-bot skip ci please"},{"Id":"7308404124","Type":"PullRequestEvent","CreatedAt":"2018-02-28T08:12:46","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5465","RelatedDescription":"Opened pull request \"Fix Project N build break\" (#5465) at dotnet/corert","RelatedBody":"@dotnet-bot skip ci please"},{"Id":"7307961904","Type":"PullRequestEvent","CreatedAt":"2018-02-28T05:59:05","Actor":"jcouv","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5464","RelatedDescription":"Opened pull request \"ILVerification: Use correct name to fetch embedded resource\" (#5464) at dotnet/corert","RelatedBody":"While integrating the preview package that @A-And sent me (thanks!), I ran into an error loading resource strings.\r\nLooking at the resources embedded into the dll, the proper resource name is `FxResources.ILVerification.SR`. That's the resource that exists in the dll, both from the package and from my local build. I suspect the name of the embedded resource changed as a result of recent build changes, which uses the coreRT build infrastructure to build ILVerify.\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/36771962-2a1e034c-1c08-11e8-8336-01284789494b.png)\r\n\r\nThe bad news is that I was only able to validate this change by testing from Roslyn, because it seems the test project is broken. The test project no longer lists its two source files, and the test project doesn't build if I add them. \r\nTagging @ArztSamuel in case he's encountered this.\r\n\r\nTagging @jkotas @VSadov "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7312518571","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:16:23","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2006","RelatedDescription":"Opened pull request \"Fix issues with dogfood environment setup\" (#2006) at dotnet/sdk","RelatedBody":"1. There's a typo in the extensions targets in some branches\r\n2. DotNetRoot was not set early enough in .sh"},{"Id":"7312498497","Type":"PullRequestEvent","CreatedAt":"2018-02-28T21:12:19","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2002","RelatedDescription":"Merged pull request \"Merge release/2.1 to release/2.1.1xx\" (#2002) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into release/2.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-release/2.1.1xx\ngit reset --hard upstream/release/2.1.1xx\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-release/2.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7312114136","Type":"IssuesEvent","CreatedAt":"2018-02-28T19:54:28","Actor":"KevinH-MS","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2005","RelatedDescription":"Opened issue \"Project specifying <Platforms> element cannot be referenced from agnostic project\" (#2005) at dotnet/sdk","RelatedBody":"I have a lib project with:\r\n```<Platforms>x64</Platforms>```\r\n\r\nand a test project that does not specify any platforms (that references the lib).\r\n\r\nWhen I compile, I get:\r\n```\r\n2>CSC : error CS0006: Metadata file 'C:\\Users\\kevinh\\Source\\Repos\\x64\\CoreLib\\bin\\x64\\Release\\net461\\CoreLib.dll' could not be found\r\n2>Done building project \"CoreTests.csproj\" -- FAILED.\r\n```\r\n\r\nIf I add ```<Platforms>x64<Platforms>``` to the test project, I don't get the compile error, but other things in VS break (like test explorer).  If I change everything to singular ```<Platform>``` everything seems to work as expected."},{"Id":"7311341388","Type":"PullRequestEvent","CreatedAt":"2018-02-28T17:29:12","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1971","RelatedDescription":"Merged pull request \"Displaying a message whenever a build happens using a preview version of the CLI\" (#1971) at dotnet/sdk","RelatedBody":"Displaying a message whenever a build happens using a preview version of the CLI. Also replaced NETSdkError with NETSdkMessage. This message will be driven by a property set by the CLI."},{"Id":"7311308083","Type":"PullRequestEvent","CreatedAt":"2018-02-28T17:22:31","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/2004","RelatedDescription":"Closed pull request \"Remove -log parameter\" (#2004) at dotnet/sdk","RelatedBody":"Log parameter is passed automatically by the build definitions. Passing twice causes parse errors in powershell"},{"Id":"7311051092","Type":"PullRequestEvent","CreatedAt":"2018-02-28T16:38:02","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2004","RelatedDescription":"Opened pull request \"Remove -log parmaeter\" (#2004) at dotnet/sdk","RelatedBody":"Log parameter is passed automatically by the build definitions. Passing twice causes parse errors in powershell"},{"Id":"7308872040","Type":"IssuesEvent","CreatedAt":"2018-02-28T09:51:36","Actor":"DoCode","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2003","RelatedDescription":"Opened issue \"Setting BaseIntermediateOutputPath breaks netstandard2.0 builds\" (#2003) at dotnet/sdk","RelatedBody":"## **Because:**\r\n\r\nWhen I use a `netcoreapp2.x` with a _project reference_ to a `netstandard2.x` project and I set the `BaseIntermediateOutputPath`, then the build/publish failed with this error:\r\n```\r\n~\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(201,5): error :\r\nAssets file '~\\netcoreapp-netstandard-refs\\src\\_build\\bin\\obj\\project.assets.json' doesn't have a target for '.NETStandard,Version=v2.0'.\r\nEnsure that restore has run and that you have included 'netstandard2.0' in the TargetFrameworks for your project.\r\n[~\\netcoreapp-netstandard-refs\\src\\dotnetcore-lib\\dotnetcore-lib.csproj]\r\n```\r\n\r\n## Steps to reproduce:\r\n\r\n1) Create class lib\r\n`dotnet new classlib --name dotnetcore-lib --output src/dotnetcore-lib`\r\n2) Create web app\r\n`dotnet new web --name aspnetcore --output src/aspnetcore`\r\n3) Add `class lib` as reference to `web app`\r\n`dotnet add .\\src\\aspnetcore\\aspnetcore.csproj reference .\\src\\dotnetcore-lib\\dotnetcore-lib.csproj`\r\n4) Restore and publish (**without** custom `BaseIntermediateOutputPath`) => that works 👍\r\n    ```\r\n    dotnet restore .\\src\\dotnetcore-lib\\dotnetcore-lib.csproj\r\n    dotnet restore .\\src\\aspnetcore\\aspnetcore.csproj\r\n    dotnet publish .\\src\\dotnetcore-lib\\dotnetcore-lib.csproj\r\n    dotnet publish .\\src\\aspnetcore\\aspnetcore.csproj\r\n    ```\r\n5) Restore and publish (**with** custom `BaseIntermediateOutputPath`) => that fails 👎\r\n    ```\r\n    dotnet restore .\\src\\dotnetcore-lib\\dotnetcore-lib.csproj /p:BaseIntermediateOutputPath=..\\..\\_build\\bin\\obj\\dotnetcore-lib\\\r\n    dotnet publish .\\src\\dotnetcore-lib\\dotnetcore-lib.csproj /p:BaseIntermediateOutputPath=..\\..\\_build\\bin\\obj\\dotnetcore-lib\\\r\n    dotnet restore .\\src\\aspnetcore\\aspnetcore.csproj /p:BaseIntermediateOutputPath=..\\..\\_build\\bin\\obj\\aspnetcore\\\r\n    dotnet publish .\\src\\aspnetcore\\aspnetcore.csproj /p:BaseIntermediateOutputPath=..\\..\\_build\\bin\\obj\\aspnetcore\\\r\n    ```\r\n\r\n## What the hell we make it wrong?"},{"Id":"7308358402","Type":"PullRequestEvent","CreatedAt":"2018-02-28T08:00:47","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2002","RelatedDescription":"Opened pull request \"Merge release/2.1 to release/2.1.1xx\" (#2002) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into release/2.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-release/2.1.1xx\ngit reset --hard upstream/release/2.1.1xx\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-release/2.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"968893314832285697","CreatedAt":"2018-02-28T16:59:02+00:00","UserScreenname":"dotnet","Text":"And by \"check out\" @terrajobst really means: please subscribe :-) https://t.co/O2IOMK3aAU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"968549530395336704","CreatedAt":"2018-02-27T18:12:57+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0-preview1 now available https://t.co/jAZAQmZq7Q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":103,"FavoriteCount":98,"RawContent":null},{"Id":"968549278879592449","CreatedAt":"2018-02-27T18:11:57+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 Preview 1 https://t.co/myZTqqSPuJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":88,"FavoriteCount":67,"RawContent":null},{"Id":"968549057403604992","CreatedAt":"2018-02-27T18:11:04+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 Preview 1 https://t.co/YMrTQJHDhU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":479,"FavoriteCount":378,"RawContent":null},{"Id":"968171532038975489","CreatedAt":"2018-02-26T17:10:55+00:00","UserScreenname":"dotnet","Text":"Learn about async/await best practices from @BrandonXamarin - https://t.co/JMIkq5iZti show https://t.co/lHr6F9jmEI /cc @ch9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":120,"FavoriteCount":44,"RawContent":null},{"Id":"967455752855027712","CreatedAt":"2018-02-24T17:46:40+00:00","UserScreenname":"dotnet","Text":"Please take a moment and think of all the office chairs that were destroyed in the office olympics.\n\n@gotheap’s tea… https://t.co/8RvGxAQI5o","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":29,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2018-02-28T21:46:41.2052781Z","RunDurationInMilliseconds":8201}