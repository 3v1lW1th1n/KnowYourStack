{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-02-12T17:36:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released stable packages for ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/12/announcing-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Two Lesser Known Tools for Local Azure Development","PublishedOn":"2018-02-09T00:01:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you’re developing applications that target Azure services (e.g. Web Apps, Functions, Storage), you’ll want to know about two powerful tools that come with Visual Studio 2017 and the Azure...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/08/two-lesser-known-tools-for-local-azure-development/","RawContent":null},{"Title":"File nesting in Solution Explorer","PublishedOn":"2018-02-08T06:09:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to share with you a new capability in Visual Studio that was a clear ask from you, the community. Visual Studio has been nesting related files in Solution Explorer for a long time now,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/file-nesting-in-solution-explorer/","RawContent":null},{"Title":"Diagnosing Errors on your Cloud Apps","PublishedOn":"2018-02-07T16:00:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most frustrating experiences is when you have your app working on your local machine, but when you publish it it’s inexplicably failing. Fortunately, Visual Studio provides handy features...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/diagnosing-errors-on-your-cloud-apps/","RawContent":null},{"Title":"A new experiment: Browser-based web apps with .NET and Blazor","PublishedOn":"2018-02-06T18:00:53+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today I’m excited to announce a new experimental project from the ASP.NET team called Blazor. Blazor is an experimental web UI framework based on C#, Razor, and HTML that runs in the browser via...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/06/blazor-experimental-project/","RawContent":null},{"Title":"Learn how to do Image Recognition with Cognitive Services and ASP.NET","PublishedOn":"2018-02-05T21:27:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With all the talk about artificial intelligence (AI) and machine learning (ML) doing crazy things, it’s easy to be left wondering, “what are practical ways I can use this today?&#8221; It turns out...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/05/learn-how-to-do-image-recognition-with-cognitive-services-and-asp-net/","RawContent":null},{"Title":"ASP.NET Core 2.1 roadmap","PublishedOn":"2018-02-02T18:00:52+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Five months ago, we shipped ASP.NET Core 2.0 as a foundational release for our high performance, cross-platform web framework for .NET and .NET Core. Since then we have been hard at work to deliver...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/","RawContent":null},{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7285109705","Type":"IssuesEvent","CreatedAt":"2018-02-23T02:04:07","Actor":"JunTaoLuo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2898","RelatedDescription":"Opened issue \"Build and pack symbols for libuv\" (#2898) at aspnet/Home","RelatedBody":"The libuv packages we build do not have any corresponding debug symbols. We should explore how we can produce and pack debug symbols in a libuv symbols package and publish this to the symbols server.\r\n\r\ncc @davidfowl @halter73 @Eilon @muratg \r\n"},{"Id":"7284785384","Type":"IssuesEvent","CreatedAt":"2018-02-23T00:14:36","Actor":"Matthew-Bonner","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2862","RelatedDescription":"Closed issue \"StatusCodePagesExtensions.UseStatusCodePages causes a white screen of death for internal server errors\" (#2862) at aspnet/Home","RelatedBody":"StatusCodePagesExtensions.UseStatusCodePages causes a white screen of death for internal server errors which is not what I expected given:\r\nhttps://github.com/aspnet/Diagnostics/blob/dev/src/Microsoft.AspNetCore.Diagnostics/StatusCodePage/StatusCodePagesExtensions.cs#L17\r\n\r\n```\r\npublic class HomeController : Controller\r\n{\r\n    public IActionResult Index()\r\n    {\r\n        throw new Exception();\r\n    }\r\n}\r\n\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n    app.UseStatusCodePages();\r\n    app.UseMvc();\r\n}\r\n```\r\n\r\nWhen visiting / using IIS Express.\r\n\r\nASP.NET Core 2.\r\n\r\n"},{"Id":"7284595698","Type":"IssuesEvent","CreatedAt":"2018-02-22T23:17:52","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2814","RelatedDescription":"Closed issue \"Deploy Identityserver in a docker Linux container\" (#2814) at aspnet/Home","RelatedBody":"### Issue / Steps to reproduce the problem\r\n\r\nI'm trying to deploy Identityserver for high availability in a docker container with Linux but always have the following error when I try to login through mvc. I'm using a pfx certificate.\r\n\r\nThis is how I configure the DataProtection:\r\n\r\n```\r\nservices.AddDataProtection()\r\n                .PersistKeysToFileSystem(dirInfo)\r\n                .ProtectKeysWithCertificate(new X509Certificate2(Configuration[\"server:pfxFilePath\"], Configuration[\"server:pfxPassword\"]))\r\n                .SetApplicationName(!string.IsNullOrWhiteSpace(Configuration[\"appName\"]) ? Configuration[\"appName\"] : \"XXXXXXXXX\")\r\n                .DisableAutomaticKeyGeneration();\r\n```\r\n\r\n### Relevant parts of the log file\r\n\r\n```\r\n\r\nAn error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.\r\n\r\nInnerException: \r\nClassName : \"System.InvalidOperationException\"\r\nMessage : \"The key ring does not contain a valid default protection key. The data protection system cannot create a new key because auto-generation of keys is disabled.\"\r\nData : null\r\nInnerException : null\r\nHelpURL : null\r\nStackTraceString : \" at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded) at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow) at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\"\r\nRemoteStackTraceString : null\r\nRemoteStackIndex : 0\r\nExceptionMethod : null\r\nHResult : -2146233079\r\nSource : \"Microsoft.AspNetCore.DataProtection\"\r\nWatsonBuckets : null\r\n```\r\nThis is the complete message:\r\n\r\n[Log message](https://github.com/IdentityServer/IdentityServer4/files/1640589/e.2.txt)\r\n\r\nPD: use a json viewer to see it i.e. http://jsonviewer.stack.hu/\r\n"},{"Id":"7284521466","Type":"IssuesEvent","CreatedAt":"2018-02-22T22:58:31","Actor":"JunTaoLuo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2810","RelatedDescription":"Closed issue \"ResponseCaching  Repository  QueryString created a cache key with a bug.\" (#2810) at aspnet/Home","RelatedBody":"https://github.com/aspnet/ResponseCaching/blob/5b239d44c0d749600a60ccd2951e0a67edd11a10/src/Microsoft.AspNetCore.ResponseCaching/Internal/ResponseCachingKeyProvider.cs#L142-L152\r\n\r\nQuery String| Cache Key\r\n---|---\r\n?key=12&key=34 | key=1234\r\n?key=1&key=234 | key=1234\r\n\r\nThe cache key of query string **?key=12&key=34** and **?key=1&key=234** is the same , both **key=1234**.\r\n\r\n"},{"Id":"7284506875","Type":"IssuesEvent","CreatedAt":"2018-02-22T22:54:49","Actor":"Matthew-Bonner","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2897","RelatedDescription":"Opened issue \"IWebHostBuilder.UseContentRoot(Directory.GetCurrentDirectory()) is fragile\" (#2897) at aspnet/Home","RelatedBody":"I want to run integration tests. I am using BenchmarkDotNet to do so. BenchmarkDotNet builds a dll per benchmark which then runs via dotnet like so:\r\ndotnet 55330d8b-483a-457c-a103-e28f178488e4.dll\r\n\r\nWhen `IWebHostBuilder.UseContentRoot(Directory.GetCurrentDirectory())` is invoked during a call to `WebHost.CreateDefaultBuilder()` the path to the content root and the web root are incorrect. This means the wwwroot content cannot be found, resulting in a lot of 404's during the running of the integration tests.\r\n\r\nIn another scenario, where someone is having problems with paths, can be seen on Stack Overflow https://stackoverflow.com/questions/42909568/visual-studio-2017-csproj-net-core-build-views-not-being-copied-correctly.\r\n\r\nIn this instance the PE is being executed to run the web application, and because the wwwroot content, views and appsettings.json file are not published during the build, errors are being output.\r\n\r\nI've used the hack in the Stack Overflow post to work around the issue but it doesn't feel right.\r\n\r\nExplicity setting the paths is not an option either because the web application is not stored in the same location for every machine that it is built on.\r\n\r\nI am also aware that I can publish the web application, however I don't want to publish the web application each time I want to make a code change and then run an integration test.\r\n\r\nIs the an alternative, recommended method, to work around this problem?"},{"Id":"7283391642","Type":"IssuesEvent","CreatedAt":"2018-02-22T18:58:46","Actor":"vairamsvsjdo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2896","RelatedDescription":"Opened issue \"change default .net core web app template deploy wwwroot code to wwwroot\" (#2896) at aspnet/Home","RelatedBody":"Regarding: https://github.com/aspnet/Home/issues/1636  #1636 \r\nchange default .net core web app template deploy wwwroot code to wwwroot\r\nIs this backward compatibility needed as asp.net 5 is dead and asp.net core is what being developed.?\r\n Or change the name wwwroot to staticfiles as the default folder name\r\n\r\nTo address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFrameworkCore\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - Docker with ASP.NET Core: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n - note: several repositories have migrated their issues tracker to this repo here\r\n\r\nOther common projects:\r\n\r\n - .NET Core CLI and SDK: https://github.com/dotnet/core\r\n - .NET Core runtime: https://github.com/dotnet/coreclr\r\n - .NET Core libraries: https://github.com/dotnet/corefx\r\n - NuGet: https://github.com/NuGet/home\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n"},{"Id":"7282921289","Type":"IssuesEvent","CreatedAt":"2018-02-22T17:25:35","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2892","RelatedDescription":"Closed issue \"Specify sub protocol for WebSocket Client\" (#2892) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI can't work out how to specify the sub protocol when creating a client connect to a websocket endpoint. Is this possible like it is with this JavaScript client? (https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications)\r\n\r\nThanks,\r\nAndy"},{"Id":"7282755722","Type":"IssuesEvent","CreatedAt":"2018-02-22T16:56:26","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2884","RelatedDescription":"Closed issue \"Support multiple key decryption certificates without X509Store\" (#2884) at aspnet/Home","RelatedBody":"When using the X509Store, you can decrypt an old key encrypted XML key with multiple certificates. \r\n\r\nIn https://github.com/aspnet/DataProtection/pull/299, we added support for decrypting without using the X509Store for one certificate (the one passed to .ProtectKeysWithCertificate()). This doesn't yet support multiple certs though. It wouldn't be too hard to support this.\r\n\r\nUsage:\r\n```c#\r\n.AddDataProtection()\r\n.ProtectKeysWithCertificate(certificate)\r\n.UseKeyDecryptionCertificates(oldCert1, oldCert2, oldCert3)\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7285576861","Type":"IssuesEvent","CreatedAt":"2018-02-23T05:12:49","Actor":"pardahlman","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1488","RelatedDescription":"Opened issue \"Strategies for handling flaky connections?\" (#1488) at aspnet/SignalR","RelatedBody":"Based on code for `HubConnection`, [an error is thrown](https://github.com/aspnet/SignalR/blob/dev/client-ts/signalr/src/HttpConnection.ts#L154) if the connection does not have the correct `ConnectionState` when calling `send`.\r\n\r\nMy first thought was to check the connection state before making the call, but that property is private. This got me thinking: what is the strategy to handle flaky connections? Will the connection try to re-connect or is it up to the application to `stop` the connection and create a new one? If the connection reconnects, how can I get a notification that the connection is re-established again? Is there any documentation or discussions you can point me to? Thanks a bunch!"},{"Id":"7285546739","Type":"IssuesEvent","CreatedAt":"2018-02-23T04:59:36","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/924","RelatedDescription":"Closed issue \"Add support to HubLifetimeManager for handling incoming invocations before the hub method is called\" (#924) at aspnet/SignalR","RelatedBody":"This is basically slowly bringing back the hub pipeline. We'll eventually end up with a decorator pattern again for wrapping all hub incoming and outgoing invocations"},{"Id":"7285546707","Type":"PullRequestEvent","CreatedAt":"2018-02-23T04:59:35","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1479","RelatedDescription":"Merged pull request \"Fix #924 by introducing HubDispatcher abstraction\" (#1479) at aspnet/SignalR","RelatedBody":"We originally talked about using HubLifetimeManager for this, but I have concerns about that. It makes HubLifetimeManager into a God Object that has lots of different unrelated behaviors. For example, the RedisHubLifetimeManager would have to provided implementations of the dispatching-related methods that have the same implementation as the DefaultHubLifetimeManager. Even if we provide a common type or base-class to do so, it feels wrong. I have some thoughts on how to factor things a little better among these types but they're a little too big to do in one go and need some discussion first. I tried a few attempts today but it got tricky fast.\r\n\r\nSo this is the keep-it-simple first pass at doing this refactoring. There is a new service, `HubDispatcher<THub>` which contains all the logic needed to dispatch `OnConnectedAsync`, `OnDisconnectedAsync` and `HubMessage`s to the Hub. Almost all the code is just literally extracted from HubEndpoint.\r\n\r\nInterestingly, no test changes were needed. I like this because it tells me that the tests weren't coupled to the specific architecture of the system 😄, also because it tells me I didn't break things. The HubEndpointTests actually use `.AddSignalR` to build a DI container, so everything Just Worked(TM).\r\n\r\nAlso, while I was there, I did the `Log` nested class refactoring (since I was moving log messages around already)"},{"Id":"7285357594","Type":"PullRequestEvent","CreatedAt":"2018-02-23T03:35:46","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1487","RelatedDescription":"Opened pull request \"Run browser functional tests in CI builds\" (#1487) at aspnet/SignalR","RelatedBody":"TODO:\r\n* [ ] Verify dependencies (Chrome, and Java) are installed on the CI agents (cc @natemcmaster for visibility, I'll be checking in with you Friday for info on running scripts on the agents ;))\r\n* [ ] Verify builds succeed on the CI and leave no orphaned processes (that's been a problem... :( )\r\n\r\nI kinda reworked the test runner code this morning in rage and frustration with issues I was seeing in Travis. As a benefit, it feels cleaner :). I refactored a piece of the code into a separate \"package\" (though it isn't something we pack and ship) called `selenium-tap-runner`, which runs any URL that renders [TAP](https://testanything.org/tap-version-13-specification.html) output in a particular way. Our test script now just has to launch the server and then run this tool against that URL.\r\n\r\nIt turns out, that rage and frustration was misdirected, as I then realized that the reason the builds weren't working properly on the CI but were working locally was because I didn't properly clean my repo locally... turns out the build scripts weren't producing the necessary JavaScript files in the right order (see comments in `repo.targets` below). Still, it's a lot cleaner and I was doing other work in parallel on Wednesday when peak frustration hit 😝 \r\n\r\nIt paid off in the end though:\r\n\r\n<img width=\"1066\" alt=\"screen shot 2018-02-22 at 7 34 53 pm\" src=\"https://user-images.githubusercontent.com/7574/36576742-7fad6c76-1807-11e8-8154-ad3689069e8b.png\">\r\n"},{"Id":"7284601427","Type":"PullRequestEvent","CreatedAt":"2018-02-22T23:19:26","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1481","RelatedDescription":"Merged pull request \"Do over the websocket transport\" (#1481) at aspnet/SignalR","RelatedBody":"- Unify client and server logic (no code sharing yet)\r\n- Removed use of cancellation tokens to communicate shutdown and instead used the pipe reader and socket abort.\r\n- Added CloseTimeout to HttpOptions\r\n\r\nI started looking at this because of a test failure with the following error in a test:\r\n\r\n```\r\n[00:05:19] [xUnit.net 00:00:13.0999990]         | TestLifetime Information: Finished test InvokeNonExistantClientMethodFromServer_messagepack_WebSockets_default in 0.0684804s\r\n[00:05:19] [xUnit.net 00:00:13.1268739]     Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.InvokeNonExistantClientMethodFromServer(protocol: MessagePackHubProtocol { Name = \"messagepack\", SerializationContext = \r\n[00:05:19] SerializationContext { Compatibi\r\n[00:05:19] lityOptions = SerializationCompatibilityOptions { ... }, DefaultCollectionTypes = DefaultConcreteTypeRepository { ... }, DefaultDateTimeConversionMethod = Timestamp, DictionarySerlaizationOptions = DictionarySerlaizationOptions \r\n[00:05:19] { ... }, EnumSerializationMethod = ByName, ... }, Type = Binary }, transportType: WebSockets, path: \"/dynamic\") [FAIL]\r\n[00:05:19] \r\n[00:05:19] [xUnit.net 00:00:13.1270787]       System.Net.WebSockets.WebSocketException : The 'System.Net.WebSockets.InternalClientWebSocket' instance cannot be used for communication because it has been transitioned into the 'Aborted' state.\r\n[00:05:19] [xUnit.net 00:00:13.1271324]       ---- System.Threading.Tasks.TaskCanceledException : A task was canceled.\r\n[00:05:19] [xUnit.net 00:00:13.1273979]       Stack Trace:\r\n[00:05:19] [xUnit.net 00:00:13.1274872]            at System.Net.WebSockets.WebSocketBase.ThrowIfAborted(Boolean aborted, Exception innerException)\r\n[00:05:19] [xUnit.net 00:00:13.1275419]            at System.Net.WebSockets.WebSocketBase.ThrowIfConvertibleException(String methodName, Exception exception, CancellationToken cancellationToken, Boolean aborted)\r\n[00:05:19] [xUnit.net 00:00:13.1275898]            at System.Net.WebSockets.WebSocketBase.<ReceiveAsyncCore>d__45.MoveNext()\r\n[00:05:19] [xUnit.net 00:00:13.1276267]         --- End of stack trace from previous location where exception was thrown ---\r\n[00:05:19] [xUnit.net 00:00:13.1276699]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1277120]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1277631]         C:\\projects\\signalr\\src\\Microsoft.AspNetCore.Sockets.Client.Http\\WebSocketsTransport.cs(114,0): at Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport.<ReceiveMessages>d__16.MoveNext()\r\n[00:05:19] [xUnit.net 00:00:13.1278121]         --- End of stack trace from previous location where exception was thrown ---\r\n[00:05:19] [xUnit.net 00:00:13.1278556]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1278975]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1279461]         C:\\projects\\signalr\\src\\Microsoft.AspNetCore.Sockets.Client.Http\\WebSocketsTransport.cs(231,0): at Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport.<StopAsync>d__19.MoveNext()\r\n[00:05:19] [xUnit.net 00:00:13.1279867]         --- End of stack trace from previous location where exception was thrown ---\r\n[00:05:19] [xUnit.net 00:00:13.1280255]            at System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n[00:05:19] [xUnit.net 00:00:13.1280637]            at System.IO.Pipelines.Pipe.GetResult(ReadResult& result)\r\n[00:05:19] [xUnit.net 00:00:13.1281065]            at System.IO.Pipelines.Pipe.System.Threading.IAwaiter<System.IO.Pipelines.ReadResult>.GetResult()\r\n[00:05:19] [xUnit.net 00:00:13.1281520]         C:\\projects\\signalr\\src\\Microsoft.AspNetCore.Sockets.Client.Http\\HttpConnection.cs(390,0): at Microsoft.AspNetCore.Sockets.Client.HttpConnection.<ReceiveAsync>d__50.MoveNext()\r\n[00:05:19] [xUnit.net 00:00:13.1281915]         --- End of stack trace from previous location where exception was thrown ---\r\n[00:05:19] [xUnit.net 00:00:13.1282319]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1282800]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1283278]         C:\\projects\\signalr\\test\\Microsoft.AspNetCore.SignalR.Tests.Utils\\TaskExtensions.cs(0,0): at System.Threading.Tasks.TaskExtensions.<OrTimeout>d__4`1.MoveNext()\r\n[00:05:19] [xUnit.net 00:00:13.1283681]         --- End of stack trace from previous location where exception was thrown ---\r\n[00:05:19] [xUnit.net 00:00:13.1284087]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1284523]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1284914]            at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n[00:05:19] [xUnit.net 00:00:13.1285406]         C:\\projects\\signalr\\test\\Microsoft.AspNetCore.SignalR.Client.FunctionalTests\\HubConnectionTests.cs(282,0): at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.<InvokeNonExistantClientMethodFromServer>d__8.MoveNext()\r\n```\r\n\r\nI still haven't found a great way to share this code (maybe a shared file with stub methods for the logs).\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7284050615","Type":"IssuesEvent","CreatedAt":"2018-02-22T21:14:35","Actor":"ryanbrandenburg","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7307","RelatedDescription":"Closed issue \".Net Core MVC Localization cannot work on ubuntu16.0.4\" (#7307) at aspnet/Mvc","RelatedBody":"\"zh-cn\" cannot work when .net core mvc is deployed on ubuntu16.0.4.\r\n\r\nI create Resource files follow the hierarchy of Views, and name them \"en\" and \"zh-cn\". \r\nMy local env. (win10) works fine, but it cannot work on ubuntu, it always show the \"Keys\" on page.\r\n\r\nWhen I use \"zh\" instead, the issue fixed. So I guess the \"-\" is the key."},{"Id":"7283976346","Type":"PullRequestEvent","CreatedAt":"2018-02-22T20:58:42","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7401","RelatedDescription":"Opened pull request \"Add more fine grained logging to RazorViewCompiler\" (#7401) at aspnet/Mvc","RelatedBody":""},{"Id":"7282286529","Type":"IssuesEvent","CreatedAt":"2018-02-22T15:39:35","Actor":"karthicksu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7400","RelatedDescription":"Opened issue \"Memory Leak in ASP.NET 2.0.5\" (#7400) at aspnet/Mvc","RelatedBody":"I'm developing an web app using asp.net core. When I run the app in VS 2017 (15.5.5) with Diagnostic tools enabled, memory is constantly increasing at-least 10 to 20MB per click. I thought the app has a memory leak and troubleshooting the app for many hours and I've landed on this link https://blog.markvincze.com/troubleshooting-high-memory-usage-with-asp-net-core-on-kubernetes/\r\n\r\nI have created a new project from ASP.NET Core - Web Application Template which has few razor pages and returns HTML. When I refresh the page continuously (like a smoke test) the memory gradually increases from 200MB to 500MB and even more...\r\n\r\nhave a look on [this](https://www.screencast.com/t/Fpe348hEU)\r\n\r\nAs suggested in Mark Vincze blog, I've added following config in .csproj\r\n\r\n<PropertyGroup> \r\n    <ServerGarbageCollection>false</ServerGarbageCollection>\r\n</PropertyGroup>\r\n\r\nUnfortunately it doesn't help. Memory still increases gradually. \r\n\r\nAll ASP.NET Packages are up-to-date https://www.screencast.com/t/iaQVx9bH5Y1\r\nOS: Windows 10 (1709)\r\nIDE: Visual Studio 2017 (15.5.5) \r\nASP.NET 2.0.5\r\n\r\nSteps to reproduce:\r\n1) Create a project in Visual Studio (ASP.NET Core - Web Application)\r\n2) Run the project with Diagnostic tools enabled\r\n3) Refresh the page continuously and watch the diagnostic tool\r\n4) Memory will increase gradually. \r\n\r\n"},{"Id":"7280636911","Type":"IssuesEvent","CreatedAt":"2018-02-22T10:14:34","Actor":"nphmuller","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7399","RelatedDescription":"Opened issue \"ApiExplorer documents required properties confusingly \" (#7399) at aspnet/Mvc","RelatedBody":"On ASP.NET Core 2.0, but this also affects older versions. See [this repo](https://github.com/nphmuller/ApiExplorer_IsRequired) for a working repro.\r\n\r\nSay I have the following controller action and model:\r\n``` c#\r\n[Route(\"controller\")]\r\npublic class MyController : ControllerBase\r\n{\r\n    [HttpPost]\r\n    public void MyAction(MyModel model) { }\r\n}\r\n\r\npublic class MyModel\r\n{\r\n    public int Param1 { get; set; }\r\n}\r\n```\r\n\r\nWhen I check the `ModelMetadata` of the `ApiParameterDescription` from `Param1` the property `IsRequired` is set to true. See the following code which is part of `Startup.cs`:\r\n``` c#\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n    var apiDescriptionsProvider = app.ApplicationServices.GetRequiredService<IApiDescriptionGroupCollectionProvider>();\r\n    var parameterDescription = apiDescriptionsProvider.ApiDescriptionGroups.Items.Single().Items.Single().ParameterDescriptions.Single();\r\n    var isRequired = parameterDescription.ModelMetadata.IsRequired;\r\n}\r\n```\r\n\r\nThis is probably because Param1 is a non-nullable and hence always required technically. The reason I think this is confusing however, is because ApiExplorer is used to document the behaviour of your API. \r\n\r\nThe IsRequired property suggests that the request should always contain this property, which is not true because if a non-nullable parameter is not included in the (for example json) request, it's simply set to its default value. This means the ModelState.IsValid property always returns true, which means that excluding this property from a request will never result in a BadRequest response.\r\n\r\nSee for example the discussion over here: https://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/599\r\n\r\nSwashbuckle uses ApiExplorer to create a swagger.json file, which described the API. Because of this confusing behaviour it's more difficult for Swashbuckle to document which parameters are actually required from an API consumer's perspective."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7284804683","Type":"IssuesEvent","CreatedAt":"2018-02-23T00:20:52","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1648","RelatedDescription":"Opened issue \"Flaky test: TraditionalWebApplicationTests.CanPerform_IdToken_Flow \" (#1648) at aspnet/Identity","RelatedBody":"This test currently has a 6% failure rate on release/2.1 for Windows.\r\n\r\n```\r\n======= Failed test run #1 ==========\r\nAssert.Equal() Failure\r\nExpected: OK\r\nActual:   InternalServerError\r\n   at Microsoft.AspnetCore.Identity.Service.FunctionalTests.TraditionalWebApplicationTests.<CanPerform_IdToken_Flow>d__3.MoveNext() in C:\\b\\w\\33bdfc1cae7b2a38\\modules\\Identity\\test\\Service.FunctionalTests\\TraditionalWebApplicationTests.cs:line 166\r\n--- End of stack trace from previous location where exception was thrown ---\r\n======= Failed test run #2 ==========\r\nAssert.Equal() Failure\r\nExpected: OK\r\nActual:   InternalServerError\r\n   at Microsoft.AspnetCore.Identity.Service.FunctionalTests.TraditionalWebApplicationTests.<CanPerform_IdToken_Flow>d__3.MoveNext() in C:\\b\\w\\33bdfc1cae7b2a38\\modules\\Identity\\test\\Service.FunctionalTests\\TraditionalWebApplicationTests.cs:line 166\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nhttp://aspnetci/project.html?tab=testDetails&testNameId=-4945557580194386605&projectId=Releases_21Public&buildTypeId=Releases_21Public_Win2012\r\n\r\ncc @ryanbrandenburg @javiercn "},{"Id":"7283203847","Type":"IssuesEvent","CreatedAt":"2018-02-22T18:21:07","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1646","RelatedDescription":"Closed issue \"Difference between Microsoft.Extensions.Identity.Stores and Microsoft.AspNetCore.Identity\" (#1646) at aspnet/Identity","RelatedBody":"On Nuget there are 2 packages that seem identical. What is the difference between them?\r\n\r\nhttps://www.nuget.org/packages/Microsoft.AspNetCore.Identity/\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Identity.Stores/"},{"Id":"7282716893","Type":"IssuesEvent","CreatedAt":"2018-02-22T16:49:50","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1647","RelatedDescription":"Opened issue \"Configuring Alternate Key for User Role\" (#1647) at aspnet/Identity","RelatedBody":"**Scenario:**\r\n- I have an Admin Role (among others)\r\n- That Admin Role can be assigned to a specific company.  So someone can be an Admin at Company 1,2 and 4, but not 3.\r\n\r\n**Problem:**\r\nWhen I try to add a User with the Roles above, I get this error:\r\nThe instance of entity type 'UserRole' cannot be tracked because another instance with the same key value for {'UserId', 'RoleId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached.\r\n\r\nIt seems to be complaining that the PK is UserId and RoleId.  But I've already overridden that in my `IEntityTypeConfiguration` below:\r\n\r\n```csharp\r\n    public class UserRoleConfig : IEntityTypeConfiguration<UserRole>\r\n    {\r\n        public void Configure(EntityTypeBuilder<UserRole> builder)\r\n        {\r\n            builder.HasKey(r => r.Id);\r\n        }\r\n    }\r\n```\r\n\r\nID is a long I've defined below:\r\n```csharp\r\n    public class UserRole : IdentityUserRole<string>\r\n    {\r\n        public long Id { get; set; }\r\n        public int CompanyId { get; set; }\r\n        public Company Company { get; set; }\r\n    }\r\n```\r\n\r\nMy `OnModelCreating` looks like below.\r\n```csharp\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);\r\n\r\n            builder.ApplyConfiguration(new UserRoleConfig());\r\n        }\r\n```\r\n\r\nWhat am I doing wrong?  Why isn't EF respecting my ID override?"},{"Id":"7281833082","Type":"IssuesEvent","CreatedAt":"2018-02-22T14:24:06","Actor":"enemyofthedawn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1646","RelatedDescription":"Opened issue \"Difference between Microsoft.Extensions.Identity.Stores and Microsoft.AspNetCore.Identity\" (#1646) at aspnet/Identity","RelatedBody":"On Nuget there are 2 packages that seem identical. What is the difference between them?\r\n\r\nhttps://www.nuget.org/packages/Microsoft.AspNetCore.Identity/\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Identity.Stores/"},{"Id":"7281414251","Type":"IssuesEvent","CreatedAt":"2018-02-22T13:03:20","Actor":"brgrz","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1645","RelatedDescription":"Opened issue \"Default provided claims in System.IdentityModel is missing new claims from JWT\" (#1645) at aspnet/Identity","RelatedBody":"The claims provided in System.IdentityModel.JwtRegisteredClaimNames are only a few of those currently provided by IANA\r\n\r\nHere is the current full list for JWT claims:\r\nhttps://www.iana.org/assignments/jwt/jwt.xhtml\r\n\r\nMy question is if, when and how are you going to introduce new claims to ASP.NET Core or IdentityModel in general?"},{"Id":"7277467688","Type":"PullRequestEvent","CreatedAt":"2018-02-21T19:33:19","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1644","RelatedDescription":"Opened pull request \"Add AllowAnonymous for some Identity razor pages\" (#1644) at aspnet/Identity","RelatedBody":"Addresses #1617"},{"Id":"7277291790","Type":"IssuesEvent","CreatedAt":"2018-02-21T18:59:34","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1643","RelatedDescription":"Opened issue \"Add third party notice to identity UI package\" (#1643) at aspnet/Identity","RelatedBody":""}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7284881733","Type":"PullRequestEvent","CreatedAt":"2018-02-23T00:46:19","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2313","RelatedDescription":"Merged pull request \"Flatten exception handling\" (#2313) at aspnet/KestrelHttpServer","RelatedBody":"3 nested try blocks  with 3 finallys (4 total) and 7 catches in same function O_o\r\n\r\nSimplifies the request processing loop function by separating it from the connection cleanup, and reducing the blocks to a single try around the user code call."},{"Id":"7284879480","Type":"PullRequestEvent","CreatedAt":"2018-02-23T00:45:32","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1973","RelatedDescription":"Merged pull request \"Speed up TryGetAsciiString\" (#1973) at aspnet/KestrelHttpServer","RelatedBody":"Also added benchmarks\r\n\r\n`KestrelBytesToString` is current\r\n`AsciiBytesToStringVectorWiden` is new implementation\r\n\r\n```\r\n                        Method |      Type |       Mean |    StdDev |          Op/s | Scaled |\r\n------------------------------ |---------- |-----------:|----------:|--------------:|-------:|\r\n         EncodingAsciiGetChars |    Accept |  72.422 ns | 0.1574 ns |  13,807,896.6 |   2.00 |\r\n          KestrelBytesToString |    Accept |  36.263 ns | 0.0888 ns |  27,576,055.6 |   1.00 |\r\n AsciiBytesToStringVectorCheck |    Accept |  27.963 ns | 0.1742 ns |  35,761,365.2 |   0.77 |\r\n AsciiBytesToStringVectorWiden |    Accept |  16.453 ns | 0.2194 ns |  60,779,003.1 |   0.45 |\r\n\r\n         EncodingAsciiGetChars |    Cookie | 189.233 ns | 1.4270 ns |   5,284,484.5 |   1.90 |\r\n          KestrelBytesToString |    Cookie |  99.461 ns | 0.8052 ns |  10,054,218.5 |   1.00 |\r\n AsciiBytesToStringVectorCheck |    Cookie |  76.246 ns | 0.1394 ns |  13,115,377.9 |   0.77 |\r\n AsciiBytesToStringVectorWiden |    Cookie |  25.221 ns | 0.1223 ns |  39,649,543.3 |   0.25 |\r\n\r\n         EncodingAsciiGetChars | KeepAlive |  16.365 ns | 0.0569 ns |  61,107,710.3 |   2.14 |\r\n          KestrelBytesToString | KeepAlive |   7.660 ns | 0.0232 ns | 130,556,529.1 |   1.00 |\r\n AsciiBytesToStringVectorCheck | KeepAlive |   6.804 ns | 0.0293 ns | 146,971,227.7 |   0.89 |\r\n AsciiBytesToStringVectorWiden | KeepAlive |   7.100 ns | 0.0258 ns | 140,852,217.0 |   0.93 |\r\n\r\n         EncodingAsciiGetChars | UserAgent |  87.329 ns | 0.2732 ns |  11,450,989.8 |   1.95 |\r\n          KestrelBytesToString | UserAgent |  44.895 ns | 0.2006 ns |  22,274,096.7 |   1.00 |\r\n AsciiBytesToStringVectorCheck | UserAgent |  36.028 ns | 0.2746 ns |  27,756,566.2 |   0.80 |\r\n AsciiBytesToStringVectorWiden | UserAgent |  15.624 ns | 0.1465 ns |  64,004,553.0 |   0.35 |\r\n```\r\n\r\nResolves: https://github.com/aspnet/KestrelHttpServer/issues/2302\r\n\r\n/cc @GrabYourPitchforks "},{"Id":"7284879477","Type":"IssuesEvent","CreatedAt":"2018-02-23T00:45:32","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2302","RelatedDescription":"Closed issue \"TryGetAsciiString can be streamlined and vectorized\" (#2302) at aspnet/KestrelHttpServer","RelatedBody":"Should be more efficient and less messy"},{"Id":"7284876902","Type":"PullRequestEvent","CreatedAt":"2018-02-23T00:44:40","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2290","RelatedDescription":"Merged pull request \"Faster IFeatureCollection.Get<TFeature>\" (#2290) at aspnet/KestrelHttpServer","RelatedBody":"Go via Generic rather than wrapping with `(TFeature)Get(typeof(TFeature))` as it scales better\r\n\r\npre\r\n```\r\n                 Method |     Mean |     Error |    StdDev |         Op/s | Allocated |\r\n----------------------- |---------:|----------:|----------:|-------------:|----------:|\r\n     GetViaTypeOf_First | 12.56 ns | 0.1568 ns | 0.2347 ns | 79,608,881.2 |       0 B |\r\n    GetViaGeneric_First | 22.93 ns | 0.1275 ns | 0.1908 ns | 43,613,651.3 |       0 B |\r\n      GetViaTypeOf_Last | 75.97 ns | 0.1121 ns | 0.1678 ns | 13,163,676.0 |       0 B |\r\n     GetViaGeneric_Last | 85.30 ns | 0.2586 ns | 0.3870 ns | 11,723,594.4 |       0 B |\r\n    GetViaTypeOf_Custom | 77.44 ns | 0.2239 ns | 0.3351 ns | 12,912,708.4 |       0 B |\r\n   GetViaGeneric_Custom | 86.67 ns | 0.3066 ns | 0.4590 ns | 11,538,511.2 |       0 B |\r\n  GetViaTypeOf_NotFound | 77.56 ns | 0.2899 ns | 0.4339 ns | 12,893,115.2 |       0 B |\r\n GetViaGeneric_NotFound | 86.23 ns | 0.2085 ns | 0.3121 ns | 11,597,065.2 |       0 B |\r\n```\r\npost\r\n```\r\n                 Method |     Mean |     Error |    StdDev |         Op/s | Allocated |\r\n----------------------- |---------:|----------:|----------:|-------------:|----------:|\r\n     GetViaTypeOf_First | 11.85 ns | 0.0565 ns | 0.0846 ns | 84,418,379.7 |       0 B |\r\n    GetViaGeneric_First | 21.11 ns | 0.4077 ns | 0.6102 ns | 47,376,257.7 |       0 B |\r\n      GetViaTypeOf_Last | 74.42 ns | 0.3818 ns | 0.5714 ns | 13,437,263.4 |       0 B |\r\n     GetViaGeneric_Last | 40.41 ns | 4.6554 ns | 6.9680 ns | 24,748,132.8 |       0 B |\r\n    GetViaTypeOf_Custom | 76.88 ns | 0.3606 ns | 0.5397 ns | 13,006,456.8 |       0 B |\r\n   GetViaGeneric_Custom | 41.89 ns | 0.1967 ns | 0.2943 ns | 23,872,788.5 |       0 B |\r\n  GetViaTypeOf_NotFound | 77.13 ns | 0.1864 ns | 0.2790 ns | 12,965,485.2 |       0 B |\r\n GetViaGeneric_NotFound | 41.31 ns | 0.1276 ns | 0.1910 ns | 24,204,614.8 |       0 B |\r\n```\r\n\r\n#2012 rebased\r\n\r\nResolves https://github.com/aspnet/KestrelHttpServer/issues/2303"},{"Id":"7284876899","Type":"IssuesEvent","CreatedAt":"2018-02-23T00:44:39","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2303","RelatedDescription":"Closed issue \"IFeatureCollection.Get<TFeature> should be implemented via generic rather than typeof\" (#2303) at aspnet/KestrelHttpServer","RelatedBody":"Its currently implemented as a `typeof` wrapper over `(TFeature)Get(typeof(TFeature))` which deteriorates more rapidly for the `if``else if` lookup chain that implementing with generics does.  \r\n\r\n```\r\n                          Method |     Mean |         Op/s |\r\n-------------------------------- |---------:|-------------:|\r\n              GetViaTypeOf_First | 12.96 ns | 77,136,481.9 | IHttpRequestFeature \r\n    GetViaGenericViaTypeOf_First | 22.38 ns | 44,679,211.4 | IHttpRequestFeature \r\n             GetViaGeneric_First | 19.96 ns | 50,103,862.6 | IHttpRequestFeature\r\n    \r\n               GetViaTypeOf_Last | 69.91 ns | 14,304,944.1 | IHttpSendFileFeature\r\n     GetViaGenericViaTypeOf_Last | 80.70 ns | 12,392,225.5 | IHttpSendFileFeature \r\n              GetViaGeneric_Last | 33.59 ns | 29,771,919.4 | IHttpSendFileFeature\r\n     \r\n             GetViaTypeOf_Custom | 76.84 ns | 13,014,603.2 |\r\n   GetViaGenericViaTypeOf_Custom | 84.15 ns | 11,882,891.0 |\r\n            GetViaGeneric_Custom | 44.21 ns | 22,617,022.7 |\r\n   \r\n           GetViaTypeOf_NotFound | 76.29 ns | 13,108,494.2 |\r\n GetViaGenericViaTypeOf_NotFound | 84.44 ns | 11,843,124.1 |\r\n          GetViaGeneric_NotFound | 44.53 ns | 22,454,601.1 |\r\n```"},{"Id":"7283236562","Type":"PullRequestEvent","CreatedAt":"2018-02-22T18:27:48","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2343","RelatedDescription":"Merged pull request \"Drop Pipelines.Testing dependency that we don't use\" (#2343) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7283134101","Type":"PullRequestEvent","CreatedAt":"2018-02-22T18:07:06","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2343","RelatedDescription":null,"RelatedBody":""},{"Id":"7283133988","Type":"PullRequestEvent","CreatedAt":"2018-02-22T18:07:04","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2343","RelatedDescription":"Closed pull request \"Drop Pipelines.Testing dependency that we don't use\" (#2343) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7283050043","Type":"PullRequestEvent","CreatedAt":"2018-02-22T17:50:40","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2343","RelatedDescription":"Opened pull request \"Drop Pipelines.Testing dependency that we don't use\" (#2343) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7284980836","Type":"PullRequestEvent","CreatedAt":"2018-02-23T01:19:21","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2105","RelatedDescription":"Opened pull request \"Added a test to verify incremental TagHelper discovery\" (#2105) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/issues/2104\r\n\r\nStarted writing this test to cover our test gap but ended up finding the above issue. Skipping it for now. "},{"Id":"7284959396","Type":"IssuesEvent","CreatedAt":"2018-02-23T01:12:19","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2104","RelatedDescription":"Opened issue \"TagHelpers.output.cache is not updated correctly\" (#2104) at aspnet/Razor","RelatedBody":"Repro:\r\n- Create a simple app with a tag helper and RazorCompileOnBuild enabled\r\n- Build and make sure `TagHelpers.output.cache` contains the serialized tag helper\r\n- Delete the tag helper from the app\r\n- Build again\r\n\r\nExpected:\r\n`TagHelper.output.cache` is empty\r\n\r\nActual:\r\n`TagHelper.output.cache` still contains the deleted tag helper but the timestamp is updated\r\n\r\nI am adding a test that covers this as we didn't have any."},{"Id":"7284607120","Type":"PullRequestEvent","CreatedAt":"2018-02-22T23:21:02","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2103","RelatedDescription":"Opened pull request \"[Design] Perf: Cache assembly references in build server DiscoverCommand\" (#2103) at aspnet/Razor","RelatedBody":"This is an effort to reduce the perf impact of `MetadataReference.CreateFromFile()`. This is mostly inspired from Roslyn.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/1579269/36569731-c71dd862-17e3-11e8-8766-74e6caa571ff.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/1579269/36569755-df63fc62-17e3-11e8-9f06-e93fbda5005f.png)\r\n\r\n\r\n"},{"Id":"7284391263","Type":"PullRequestEvent","CreatedAt":"2018-02-22T22:27:08","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2102","RelatedDescription":"Opened pull request \"Change final code documents to not contain non-existent imports.\" (#2102) at aspnet/Razor","RelatedBody":"- Existent imports are imports that have content that contribute to the processing of a Razor document. Prior to this we had a legacy expectation that code documents had empty markers in them for all of their import locations. This proved troublesome when cross-referencing files that had file paths and were supposed to be existent but weren't in metadata. Now that we have a project engine with a de-coupled import feature we can rely on the import feature for finding all locations of important files and then strip out any non-existent items.\r\n\r\nThis solves an issue where when we're trying to determine if a precompiled view is dirty we know if a `_ViewImports.cshtml` was deleted (and not just a marker to begin with)."},{"Id":"7283634523","Type":"IssuesEvent","CreatedAt":"2018-02-22T19:47:36","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2101","RelatedDescription":"Opened issue \"Add implements directive\" (#2101) at aspnet/Razor","RelatedBody":"We should add an `@implements` directive to our set of 'in the box' directives that can be reused. Blazor needs this. \r\n\r\nFor now we're implementing this in Blazor, but it's just generic .NET stuff, so there's no reason why it can't live here."},{"Id":"7283119101","Type":"IssuesEvent","CreatedAt":"2018-02-22T18:04:10","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2099","RelatedDescription":"Opened issue \"Make assemblyextension public\" (#2099) at aspnet/Razor","RelatedBody":"When you start using RazorProjectEngine its really useful to be able to use the same code path for initialization by defining a configuration that re-uses you extension initializer. Just making this class public would make that really easy. "},{"Id":"7282993658","Type":"IssuesEvent","CreatedAt":"2018-02-22T17:39:32","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2098","RelatedDescription":"Opened issue \"Flow BaseNamespace into Razor\" (#2098) at aspnet/Razor","RelatedBody":"Blazor needs this, and we've worked around not having it for a long time in MVC.\r\n\r\nThere doesn't seem like a good reason **not** to do this 😆 "},{"Id":"7279062509","Type":"PullRequestEvent","CreatedAt":"2018-02-22T02:07:34","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2097","RelatedDescription":"Opened pull request \"Report faults on Razor project system exceptions\" (#2097) at aspnet/Razor","RelatedBody":"Using the async-tasks service will automatically handle and report\r\nexceptions from the project system"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7271114444","Type":"IssuesEvent","CreatedAt":"2018-02-20T18:33:27","Actor":"abpiskunov","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/347","RelatedDescription":"Closed issue \"File nesting in Solution Explorer is inconsistent and incorrect\" (#347) at aspnet/Tooling","RelatedBody":"The Solution Explorer for ASP.NET 5 MVC projects has several major problems - one of them is file nesting. The below issues affect Visual Studio 2015 Update 1 with ASP.NET 5 Release Candidate 1.\n#### tl;dr\n- Please fix nesting rules for `.less`, `.scss` and `.sass`, so those files are nested under `.html`.\n- Please fix incorrect nesting that sometimes appear after renaming/moving/copying files and folders.\n- Please provide an option to disable all file nesting, and eventually, options to configure nesting rules.\n- Please fix other critical Solution Explorer issues - this is just one of them, and there are many more.\n#### File nesting is inconsistent when nesting files under `.html`.\n\nThe `.less` and `.scss` files should be nested under `.html`. Those files compile to `.css` just like `.ts` compile to `.js` and they are just as much part of the view component. \n![less-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942660/6452782c-a838-11e5-9a44-d7ab6a2e5fc9.png)\n![scss-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942664/66bbd3a6-a838-11e5-8e3c-f1c369d5e1de.png)\nIn fact, if we only have a `.css` file in there, then it _is_ nested as expected, so clearly `.less` and `.scss` should also be nested:\n![css-is-nested-as-expected](https://cloud.githubusercontent.com/assets/6388663/11942670/6be4bdd4-a838-11e5-99b1-1dcc43238459.png)\n\nWhile the above is clearly a bug, and a very annoying one at that, the rules for other file types are less obvious, but should maybe also be considered... maybe `.json` should also be nested under `.html`?\nIt probably contains either settings, string resources, or data for that view component, so it seems resonable to me, although I consider this far less important than getting the style sheet nesting fixed.\n![json-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11939884/4a1bb224-a825-11e5-9ff6-631b4e8fed39.png)\n\nThose nesting rules have been inconsistent ever since they were introduced in ASP.NET 5, and **it really needs to be fixed**. Sure, everything compiles just fine, but I'm getting really pissed off looking at this mess in my Solution Explorer every day. Inconsistencies like this makes the whole concept of nesting seem like an annoyance more than a help, as it raises the obvious question \"if only some files are nested, then why nest anything at all - that's just an extra click to get to the .ts file\". Which brings me to...\n#### File nesting can be annoying\n\nWhile the fundamental idea of file nesting is not nessesarily bad, it can be _very_ annoying at times, which is why, as a _minimum_, **I want an option to disable all file nesting** - and ideally, options to configure the nesting rules.\n\nConsider this folder structure, where the folder already represents a container for the component:\n![file-nesting-is-annoying](https://cloud.githubusercontent.com/assets/6388663/11940913/ff28392a-a82b-11e5-86b4-571bc70d21bb.png)\nHere the file nesting provides no benefit at all, and actually just introduces a _really_ annoying extra click to get to the `.ts` file. A possible fix for this might be to only nest files if the folder name is different from the name of the `.html` file, but this might also be wrong - for example, a folder named `tabs` representing some fancy `tabs` component might actually contain multiple elements that work together, e.g. `tabs.html/js`, `tab-pane.html/js` and `tab-button.html/js`, and in this case we _do_ want nesting for all three of those. Therefore, I strongly believe an option to simply disable all nesting is the best option here - and it is very much needed, because despite this example, we do have projects in which the nesting provides absolutely no value and represents a major annoyance.\n\nOne could also argue that the `.html` file should actually be nested under the `.js` file.\nConsider an Angular 2 application, where the `.ts` file represents the actual Component, annotated with metadata specifying either the path to the `.html` file representing its view, or if the view is small, a string representing the markup of the view. Same for styles, where the metadata in the `.ts` file specifies either the path to the `.css` file, or a string representing the style rules. Here, both the view and the style sheet is clearly dependencies of the `.ts` file, so it would make sense to nest them below that...\n##### An alternative idea\n\nAlternatively, you could consider a completely different approach to nesting, where the part of the file name the files have in common, is used to show a \"virtual folder\" containing all the files - then file nesting could be used only for things like transpiler generated files. The image below is a concept I mocked up to illustrate this idea:\n![virtual-folder-concept](https://cloud.githubusercontent.com/assets/6388663/11942319/042b84ea-a836-11e5-80f1-b5941cfbdfa7.png)\nHere, all the files have the \"foo\" part of their name in common, and is therefore nested under a \"foo\" node in Solution Explorer. However, in the file system, the actual files are all located in the components folder, so in the code the path would be `app/components/foo.js` - nice an clean, works for any file type, and makes no assumptions about whether `.html` or `.js` is more important.\n\nGoing further with this idea, the IDE could also be smart, so when selecting this \"virtual folder\", it could maybe somehow open all the `foo.*` files in a split view (ignoring transpilation output of course), thus providing a quick way to see all the component code at once. Just a thought...\n### File nesting is broken\n\nNot only is file nesting inconsistent, and sometimes annoying, but it is also broken.\nHere are two cases of incorrect behavior I managed to reproduce - unfortunately, this does not seem to fail consistently, so it can be hard to reproduce - but it does happen often enough to be annoying.\n![file-nested-on-drag-copy](https://cloud.githubusercontent.com/assets/6388663/11943207/4749c9e8-a83c-11e5-9f15-304cb16e8419.png)\n![nesting-broken-when-folder-is-renamed](https://cloud.githubusercontent.com/assets/6388663/11943211/4c807074-a83c-11e5-8e71-4bed0bd4353c.png)\n\nPlease take those Solution Explorer issues seriously - I've provided feedback about multiple critical issues several several months ago, and thus far _nothing_ has improved. Solution Explorer still hangs or crashes the whole IDE when a large number of files is modified/moved/copied/renamed, it still has annoying, inconsistent and buggy file nesting, and it still constantly gets out of sync with the file system, crashing first the project system and eventually the whole IDE. I'm more that a little concerned about seeing a release candidate label on something this buggy and unpolished - if this is indeed what you intend to release, then we intend to find another IDE for our frontend development.\n"},{"Id":"7187586381","Type":"IssuesEvent","CreatedAt":"2018-02-02T06:15:37","Actor":"simonpbond","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/292","RelatedDescription":"Closed issue \"Publish ASP.NET 5 Web Application to remote IIS \" (#292) at aspnet/Tooling","RelatedBody":"In Visual Studio 2015, I can successfully preview / publish to a remote IIS server with a 4.6 Web application. However, publishing fails when using an ASP.NET 5 template / web applications, it will not even provide a preview.\n\nIs it possible to publish an ASP.NET 5 web application at the current time using Visual Studio 2015 / Publish to a remote IIS server?\n\nIf so, is there any instructions on doing this? (not for local IIS).\n"},{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Ra… https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":7,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of t… https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":32,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlando… https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"961596291968102400","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/dvU3elJX8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 and… https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"961390078932148224","CreatedAt":"2018-02-08T00:03:51+00:00","UserScreenname":"aspnet","Text":"Sure, after you've left a PR on the #ASPNET docs...\n\nhttps://t.co/Dau0ZgAUbe\n\n;) https://t.co/s8UGKAhK0e","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"961382608818130944","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/7ecMOR53sw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":0,"RawContent":null},{"Id":"960929306548387840","CreatedAt":"2018-02-06T17:32:54+00:00","UserScreenname":"aspnet","Text":"This week's standup starts in 30 minutes. Join us! https://t.co/YnMMK0GKu4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-02-23T05:30:10.4788741Z","RunDurationInMilliseconds":9182}