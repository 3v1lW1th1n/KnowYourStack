{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Updated: January 25, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"},{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7267463098","Type":"PullRequestEvent","CreatedAt":"2018-02-20T05:13:43","Actor":"danmosemsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16445","RelatedDescription":"Merged pull request \"Update CoreClr to preview2-26220-01 (master)\" (#16445) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7267390791","Type":"PullRequestEvent","CreatedAt":"2018-02-20T04:41:19","Actor":"JeremyKuhne","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16447","RelatedDescription":"Opened pull request \"Dial back aggressive checks in Path\" (#16447) at dotnet/coreclr","RelatedBody":"Aggressive checks are preventing crossplat and extended Windows solutions. This change:\r\n\r\n- Doesn't throw on empty paths fro GetDirectoryName, GetPathRoot\r\n- Doesn't consider colon when looking at path segments on Windows\r\n- Moves non-shared code out of PathInternal\r\n- Fix span GetDirectoryName to handle multiple separators\r\n\r\nI've marked this as no merge- I'll be linking in the necessary test fixes (not many)."},{"Id":"7267285696","Type":"IssuesEvent","CreatedAt":"2018-02-20T03:52:07","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16446","RelatedDescription":"Closed issue \"[Arm64] CompareExchange/Exchange `Object`/`IntPtr` needs to mark card tables et. al.\" (#16446) at dotnet/coreclr","RelatedBody":"The following interlocked methods are not updating GC card tables when writing objects/pointers\r\n```\r\npublic static extern Object CompareExchange(ref Object location1, Object value, Object comparand);\r\npublic static extern IntPtr CompareExchange(ref IntPtr location1, IntPtr value, IntPtr comparand);\r\npublic static extern Object Exchange(ref Object location1, Object value);\r\npublic static extern IntPtr Exchange(ref IntPtr location1, IntPtr value);\r\n```\r\n\r\nIt is not clear to me why this is not a problem for other platforms.\r\n\r\nTo get this to work, I think we need a helper like JIT_WriteBarrier which does not write, but only updates the GC card tables and associated structures.We also may need to make the write to marking GC tables non-interruptible.  I think I will need a bit of design advice.\r\n\r\n@jkotas @Maoni0 @dotnet/jit-contrib @dotnet/arm64-contrib "},{"Id":"7267096767","Type":"IssuesEvent","CreatedAt":"2018-02-20T02:27:36","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16446","RelatedDescription":"Opened issue \"[Arm64] CompareExchange/Exchange `Object`/`IntPtr` needs to mark card tables et. al.\" (#16446) at dotnet/coreclr","RelatedBody":"The following interlocked methods are not updating GC card tables when writing objects/pointers\r\n```\r\npublic static extern Object CompareExchange(ref Object location1, Object value, Object comparand);\r\npublic static extern IntPtr CompareExchange(ref IntPtr location1, IntPtr value, IntPtr comparand);\r\npublic static extern Object Exchange(ref Object location1, Object value);\r\npublic static extern IntPtr Exchange(ref IntPtr location1, IntPtr value);\r\n```\r\n\r\nIt is not clear to me why this is not a problem for other platforms.\r\n\r\nTo get this to work, I think we need a helper like JIT_WriteBarrier which does not write, but only updates the GC card tables and associated structures.We also may need to make the write to marking GC tables non-interruptible.  I think I will need a bit of design advice.\r\n\r\n@jkotas @Maoni0 @dotnet/jit-contrib @dotnet/arm64-contrib "},{"Id":"7267052427","Type":"PullRequestEvent","CreatedAt":"2018-02-20T02:08:21","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16444","RelatedDescription":"Merged pull request \"Handle TYP_SIMD8 correctly in genCodeForLclFld\" (#16444) at dotnet/coreclr","RelatedBody":"When loading a `TYP_SIMD8` local field movsd should be used, not movups. Unlike `ins_Move_Extend`, `ins_Load` does the right thing and it's consistent with indirs.\r\n\r\nNo diffs.\r\n\r\nFixes #16443"},{"Id":"7267052415","Type":"IssuesEvent","CreatedAt":"2018-02-20T02:08:21","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16443","RelatedDescription":"Closed issue \"`Vector2.Equals()` returning incorrect result, when nested + optimization disabled\" (#16443) at dotnet/coreclr","RelatedBody":"### Symptom\r\nOn my machine `Vector2.Equals(Vector2 other)` returns false negatives when the following conditions are met:\r\n- `Vector2` is nested into another struct on the stack\r\n- Optimization is disabled (eg: a Debug build)\r\n- Running on RyuJIT runtime, having `Vector.IsHardwareAccelerated == true`\r\n\r\nI do not experience this issue with `Vector3` or `Vector4`.\r\n\r\n### System configuration\r\n- CPU: Intel® Core™ i7-7700HQ\r\n- OS: Microsoft Windows 10 Home | 10.0.16299 Build 16299\r\n- Environment.Version: 4.0.30319.42000\r\n- `dotnet --version`: 2.1.2\r\n\r\n### Steps to reproduce\r\n[Here is](https://github.com/antonfirsov/NetCore2NumericsBugProbably/blob/master/VectorEqualityConsole/Program.cs) my sample application capable to reproduce the issue.\r\nThe results of several experiments on my machine:\r\n```\r\ndotnet run -c Debug -f netcoreapp2.0\r\nEnvironment.Version: 4.0.30319.42000 | Vector.IsHardwareAccelerated:True\r\nExpected: True | Actual: False\r\n\r\ndotnet run -c Release -f netcoreapp2.0\r\nEnvironment.Version: 4.0.30319.42000 | Vector.IsHardwareAccelerated:True\r\nExpected: True | Actual: True\r\n\r\ndotnet run -c Debug -f net461\r\nEnvironment.Version: 4.0.30319.42000 | Vector.IsHardwareAccelerated:True\r\nExpected: True | Actual: False\r\n\r\ndotnet run -c Release -f net461\r\nEnvironment.Version: 4.0.30319.42000 | Vector.IsHardwareAccelerated:True\r\nExpected: True | Actual: True\r\n```"},{"Id":"7266963909","Type":"PullRequestEvent","CreatedAt":"2018-02-20T01:30:34","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16445","RelatedDescription":"Opened pull request \"Update CoreClr to preview2-26220-01 (master)\" (#16445) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7266962737","Type":"IssuesEvent","CreatedAt":"2018-02-20T01:30:09","Actor":"luhenry","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8644","RelatedDescription":"Closed issue \"Native crash when building sample console fsharp project referencing FSharp.Data 2.4.5\" (#8644) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Create sample console F# project\r\n```\r\ndotnet new console -lang f#\r\n```\r\n\r\n2. Add reference to `FSharp.Data.dll` version `2.4.5` in newly created project\r\n```\r\n<ItemGroup>\r\n  <PackageReference Include=\"FSharp.Data\" Version=\"2.4.5\"/>\r\n</ItemGroup>\r\n```\r\n\r\n3. Build using dotnet command\r\n```\r\ndotnet build /v:diag\r\n```\r\n\r\n## Expected  behavior\r\n\r\nBuilds the project\r\n\r\n## Actual behavior\r\n\r\nNative crash.\r\n\r\nStacktrace: https://gist.github.com/luhenry/7c12563fd2f4b910b18c7f6112ede2ed\r\nBuild logs: https://gist.github.com/luhenry/31eb8f3e96beca0b2393cf4a9c5fa08c\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7266917318","Type":"IssuesEvent","CreatedAt":"2018-02-20T01:10:54","Actor":"luhenry","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8644","RelatedDescription":"Opened issue \"Native crash when building sample console fsharp project referencing FSharp.Data 2.4.5\" (#8644) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Create sample console F# project\r\n```\r\ndotnet new console -lang f#\r\n```\r\n\r\n2. Add reference to `FSharp.Data.dll` version `2.4.5` in newly created project\r\n```\r\n<ItemGroup>\r\n  <PackageReference Include=\"FSharp.Data\" Version=\"2.4.5\"/>\r\n</ItemGroup>\r\n```\r\n\r\n3. Build using dotnet command\r\n```\r\ndotnet build /v:diag\r\n```\r\n\r\n## Expected  behavior\r\n\r\nBuilds the project\r\n\r\n## Actual behavior\r\n\r\nNative crash.\r\n\r\nStacktrace: https://gist.github.com/luhenry/7c12563fd2f4b910b18c7f6112ede2ed\r\nBuild logs: https://gist.github.com/luhenry/31eb8f3e96beca0b2393cf4a9c5fa08c\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7262743558","Type":"PullRequestEvent","CreatedAt":"2018-02-19T08:00:48","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8643","RelatedDescription":"Opened pull request \"Merge release/2.1.3xx to master\" (#8643) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7262743473","Type":"PullRequestEvent","CreatedAt":"2018-02-19T08:00:46","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8642","RelatedDescription":"Opened pull request \"Merge release/2.1.2xx to release/2.1.3xx\" (#8642) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.2xx-to-release/2.1.3xx\ngit reset --hard upstream/release/2.1.3xx\ngit merge upstream/release/2.1.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.2xx-to-release/2.1.3xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7262743395","Type":"PullRequestEvent","CreatedAt":"2018-02-19T08:00:44","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8641","RelatedDescription":"Opened pull request \"Merge release/2.1.1xx to release/2.1.2xx\" (#8641) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.1xx into release/2.1.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.1xx-to-release/2.1.2xx\ngit reset --hard upstream/release/2.1.2xx\ngit merge upstream/release/2.1.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.1xx-to-release/2.1.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7260754900","Type":"IssuesEvent","CreatedAt":"2018-02-18T13:51:41","Actor":"pkapare","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8640","RelatedDescription":"Opened issue \"CLI source code build error : Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat\" (#8640) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Clone CLI repo\r\n2. Run Build.cmd to build code\r\n\r\n## Expected  behavior\r\nShould build source code without errors.\r\n\r\n\r\n## Actual behavior\r\nGetting following error.\r\nH:\\Github\\DotNetCore\\cli>build.cmd\r\nH:\\Github\\DotNetCore\\cli\\scripts\\obtain\\dotnet-install.ps1 -version \"2.2.0-preview1-007799\" -InstallDir H:\\Github\\DotNetCore\\cli\\.dotnet_stage0\\x64 -Architecture \"x64\"\r\ndotnet-install: .NET Core SDK version 2.2.0-preview1-007799 is already installed.\r\ndotnet-install: Adding to current process PATH: \"H:\\Github\\DotNetCore\\cli\\.dotnet_stage0\\x64\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\nMicrosoft (R) Build Engine version 15.6.12.27473 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Restore completed in 22.91 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\Microsoft.DotNet.Cli.Build.Framework\\Microsoft.DotNet.Cli.Build.Framework.csproj.\r\n    Restore completed in 26.81 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\shared-build-targets-utils\\shared-build-targets-utils.csproj.\r\n    Restore completed in 30.11 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\dotnet-cli-build\\dotnet-cli-build.csproj.\r\n  8215\r\n  787bee7ad3a143c64b677d3cf64c5fb180215c47\r\nMicrosoft (R) Build Engine version 15.6.12.27473 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 18-Feb-18 8:38:15 AM.\r\n     1>Project \"H:\\Github\\DotNetCore\\cli\\build.proj\" on node 1 (default targets).\r\n     1>PrintBuildInfo:\r\n         Host info - Rid: win10-x64, OSName: win\r\n         Build info - Rid: win10-x64, Architecture: x64, OSName: win\r\n         If you intended to use a different Rid, Architecture, or OSName run the following command to generate your build state:\r\n         dotnet msbuild build.proj /p:Architecture=Architecture /p:Rid=Rid /p:OSName=OSName /p:GeneratePropsFile=true /t:WriteDynamicPropsToStaticPropsFiles\r\n       MSBuildWorkaroundTarget:\r\n         Dont remove this target\r\n       RestoreDotnetCliBuildFramework:\r\n         H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64/dotnet.exe restore  /p:GeneratePropsFile=\r\n           Restore completed in 21.65 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\Microsoft.DotNet.Cli.Build.Framework\\Microsoft.DotNet.Cli.Build.Framework.csproj.\r\n           Restore completed in 23.66 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\shared-build-targets-utils\\shared-build-targets-utils.csproj.\r\n           Restore completed in 26.36 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\dotnet-cli-build\\dotnet-cli-build.csproj.\r\n       BuildDotnetCliBuildFramework:\r\n       Skipping target \"BuildDotnetCliBuildFramework\" because all output files are up-to-date with respect to the input files.\r\n       CheckPrereqs:\r\n         Using previous stage version:\r\n         H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64/dotnet.exe --version\r\n         2.2.0-preview1-007799\r\n       RestoreSrcPackages:\r\n         > [DotNetTool] restore    \"H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj\"\r\n         > H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64\\dotnet.exe restore    \"H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj\"\r\n           Restoring packages for H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj...\r\n           Restore completed in 32.43 ms for H:\\Github\\DotNetCore\\cli\\src\\tool_launcher\\tool_launcher.csproj.\r\n           Restore completed in 49.29 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.InternalAbstractions\\Microsoft.DotNet.InternalAbstractions.csproj.\r\n           Restore completed in 59.98 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Configurer\\Microsoft.DotNet.Configurer.csproj.\r\n           Restore completed in 58.11 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Cli.Utils\\Microsoft.DotNet.Cli.Utils.csproj.\r\n           Restore completed in 59.35 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Cli.Sln.Internal\\Microsoft.DotNet.Cli.Sln.Internal.csproj.\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat with version (>= 2.1.0-preview2-30106) [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 7 version(s) in cli-deps [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 5 version(s) in BlobFeed [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget.org [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in dotnet-corefxlab [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in websdkfeed [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget-build [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in roslyn [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in symreader-native [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in templating [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in vstest [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in container-tools [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in xunit [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n           Restore failed in 1.08 sec for H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj.\r\n     1>Done Building Project \"H:\\Github\\DotNetCore\\cli\\build.proj\" (default targets) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"H:\\Github\\DotNetCore\\cli\\build.proj\" (default target) (1) ->\r\n       (RestoreSrcPackages target) ->\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat with version (>= 2.1.0-preview2-30106) [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 7 version(s) in cli-deps [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 5 version(s) in BlobFeed [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget.org [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in dotnet-corefxlab [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in websdkfeed [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget-build [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in roslyn [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in symreader-native [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in templating [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in vstest [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in container-tools [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in xunit [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n\r\n    0 Warning(s)\r\n    13 Error(s)\r\n\r\nTime Elapsed 00:00:04.29\r\nFailed to build\r\nAt H:\\Github\\DotNetCore\\cli\\run-build.ps1:105 char:31\r\n+     if($LASTEXITCODE -ne 0) { throw \"Failed to build\" }\r\n+                               ~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (Failed to build:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : Failed to build\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.100-preview-007363)\r\n\r\nProduct Information:\r\n Version:            2.1.100-preview-007363\r\n Commit SHA-1 hash:  0468da6ada\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.100-preview-007363\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7261455638","Type":"IssuesEvent","CreatedAt":"2018-02-18T20:55:57","Actor":"JamesNK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/654","RelatedDescription":"Closed issue \"netstandard2.0 errors - The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\" (#654) at dotnet/standard","RelatedBody":"I have a class library that is completely successful with net45 or netstandard1.3. But adding netstandard2.0 to the TargetFrameworks generates thousands of errors:\r\n\r\n```\r\n1>JSchemaValidatingReader.cs(151,13,151,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(85,16,85,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(57,16,57,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(121,16,121,23): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(131,16,131,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(250,25,250,33): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(263,25,263,39): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(103,35,103,44): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nBuild the repo here to see the problem is action - https://github.com/JamesNK/Newtonsoft.Json.Schema/tree/netstandard2-broken"},{"Id":"7259811109","Type":"IssuesEvent","CreatedAt":"2018-02-18T00:17:00","Actor":"JamesNK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/654","RelatedDescription":"Opened issue \"netstandard2.0 errors - The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\" (#654) at dotnet/standard","RelatedBody":"I have a class library that is completely successful with net45 or netstandard1.3. But adding netstandard2.0 to the TargetFrameworks generates thousands of errors:\r\n\r\n```\r\n1>JSchemaValidatingReader.cs(151,13,151,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(85,16,85,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(57,16,57,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(121,16,121,23): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(131,16,131,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(250,25,250,33): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(263,25,263,39): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(103,35,103,44): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nBuild the repo here to see the problem is action - https://github.com/JamesNK/Newtonsoft.Json.Schema/tree/netstandard2-broken"},{"Id":"7252234877","Type":"PullRequestEvent","CreatedAt":"2018-02-15T22:11:54","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/653","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-02 (master)\" (#653) at dotnet/standard","RelatedBody":""},{"Id":"7251733856","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:24:37","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7249664432","Type":"IssuesEvent","CreatedAt":"2018-02-15T13:57:29","Actor":"MANYAM-HARI","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/652","RelatedDescription":"Opened issue \".net core 2.0 dependencies issue\" (#652) at dotnet/standard","RelatedBody":"![image](https://user-images.githubusercontent.com/14251849/36260023-17bf766c-1286-11e8-80af-09336a210ab3.png)\r\n![capture](https://user-images.githubusercontent.com/14251849/36260045-280e2b9e-1286-11e8-9ef7-ec22e87a1a73.PNG)\r\n\r\n"},{"Id":"7247555987","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:51:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7246800202","Type":"PullRequestEvent","CreatedAt":"2018-02-14T23:04:16","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/648","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02513-01 (master)\" (#648) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7267490079","Type":"IssuesEvent","CreatedAt":"2018-02-20T05:25:28","Actor":"bojanrajkovic","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27271","RelatedDescription":"Opened issue \".NET Core on Linux doesn't send server_name extension with SslStream's AuthenticateAsClient\" (#27271) at dotnet/corefx","RelatedBody":"`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  17.10\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.4/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\nSample project:\r\n\r\n[sni-test.zip](https://github.com/dotnet/corefx/files/1738983/sni-test.zip)\r\n\r\nThe same code works correctly on Windows. I found a few issues about _server-side_ SNI/ALPN, but none when SslStream is used as a client."},{"Id":"7267435519","Type":"PullRequestEvent","CreatedAt":"2018-02-20T05:01:23","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27239","RelatedDescription":"Merged pull request \"Handle errors getting state in Unix\" (#27239) at dotnet/corefx","RelatedBody":"Throwing errors while examining extended state while enumerating isn't consistent with Windows behavior. Windows never throws past getting directory entry data as all state is already available.\r\n\r\nEnsure entry attribute state is consistent with initial construction."},{"Id":"7267424932","Type":"PullRequestEvent","CreatedAt":"2018-02-20T04:56:46","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27270","RelatedDescription":"Opened pull request \"Test updates for https://github.com/dotnet/coreclr/pull/16447\" (#27270) at dotnet/corefx","RelatedBody":"Updates and disables tests, tracked by #27269.  For Path change in CoreCLR: https://github.com/dotnet/coreclr/pull/16447"},{"Id":"7267413374","Type":"IssuesEvent","CreatedAt":"2018-02-20T04:51:44","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27269","RelatedDescription":"Opened issue \"Need to update tests for https://github.com/dotnet/coreclr/pull/16447\" (#27269) at dotnet/corefx","RelatedBody":"I will link to the test change that disables the tests that are impacted."},{"Id":"7267392788","Type":"PullRequestEvent","CreatedAt":"2018-02-20T04:42:16","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27261","RelatedDescription":"Merged pull request \"Add tests against corelib shared IO internals\" (#27261) at dotnet/corefx","RelatedBody":"These were removed when we cleaned up unused code in CoreFX common. Next steps are to CoreFX PathInternal usages to CoreLib and remove existing CoreLib."},{"Id":"7267352914","Type":"IssuesEvent","CreatedAt":"2018-02-20T04:23:50","Actor":"benaadams","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27268","RelatedDescription":"Opened issue \"Add IPipeReader and IPipeWriter and have IDuplexPipe inherit from them\" (#27268) at dotnet/corefx","RelatedBody":"Allows whether a Pipe-like is Readable, Writable or Both via the type system\r\n\r\nCurrent API\r\n```csharp\r\npublic interface IDuplexPipe\r\n{\r\n    PipeReader Input { get; }\r\n    PipeWriter Output { get; }\r\n}\r\n```\r\nProposed API\r\n```csharp\r\npublic interface IPipeReader \r\n{\r\n    PipeReader Input { get; }\r\n}\r\n\r\npublic interface IPipeWriter \r\n{\r\n    PipeWriter Output { get; }\r\n}\r\n\r\npublic interface IDuplexPipe : IPipeReader, IPipeWriter \r\n{ }\r\n```\r\n\r\nUse case a Stream that is write only, but implemented on top of a Pipe\r\n```csharp\r\npublic class HttpResponseStream : Stream, IPipeWriter \r\n{\r\n    private readonly Pipe _pipe;\r\n    PipeWriter IPipeWriter.Output => _pipe.Writer;\r\n\r\n    public override async Task FlushAsync(CancellationToken cancellationToken)\r\n        => await _pipe.Writer.FlushAsync(cancellationToken);\r\n\r\n    public override Task WriteAsync(ReadOnlyMemory<byte> source, CancellationToken cancellationToken = default)\r\n        => _pipe.Writer.WriteAsync(source, cancellationToken);\r\n        \r\n    public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\r\n        => WriteAsync(new Memory<byte>(buffer, offset, count), cancellationToken);\r\n        \r\n    public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\r\n        => throw NotSupportedException();\r\n        \r\n    public override async ValueTask<int> ReadAsync(Memory<byte> destination, CancellationToken cancellationToken = default)\r\n        => throw NotSupportedException();\r\n\r\n    public bool CanWrite => true;\r\n    public bool CanRead => false;\r\n    public bool CanSeek => false;\r\n    \r\n    // Other stream overloads\r\n}\r\n```\r\nThis means you can have TextWriters that work with Streams; however, if the Stream has a pipe it can encoding on the go in WriteAsync with no internal buffers (using the Pipe's memory directly) rather than waiting for FlushAsync and either allocating buffers or pulling them from the ArrayPool; and then having an additional copy to pass onto the Stream e.g.\r\n```csharp\r\npublic class HttpResponseStreamWriter : TextWriter\r\n{\r\n    internal const int DefaultBufferSize = 16 * 1024;\r\n\r\n    private readonly PipeWriter _pipe;\r\n    private readonly StreamWriter _streamWriter;\r\n    private readonly Encoder _encoder;\r\n\r\n    public PipeStreamWriter(Stream stream, Encoding encoding)\r\n        : this(stream, encoding, DefaultBufferSize) {}\r\n\r\n    public PipeStreamWriter(Stream stream, Encoding encoding, int bufferSize)\r\n    {\r\n        Encoding = encoding;\r\n        if (stream is IPipeWriter pipe)\r\n        {\r\n            _pipe = pipe.Output;\r\n        }\r\n        else\r\n        {\r\n            _streamWriter = new StreamWriter(stream, encoding, bufferSize);\r\n        }\r\n    }\r\n\r\n    public override Encoding Encoding { get; }\r\n\r\n    public unsafe override void Write(char value)\r\n    {\r\n        if (_pipe != null)\r\n        {\r\n            Span<byte> bytes = _pipe.GetSpan(Encoding.GetMaxByteCount(1));\r\n            var encoded = Encoding.GetBytes(new ReadOnlySpan<byte>(&value, sizeof(char)), bytes);\r\n            _pipe.Advance(encoded);\r\n        }\r\n        else\r\n        {\r\n            _streamWriter.Write(value);\r\n        }\r\n    }\r\n\r\n    public override Task WriteAsync(ReadOnlyMemory<char> source, cancellationToken = default) => \r\n        (_pipe != null) ? \r\n            _pipe.WriteAsyncImpl(source, cancellationToken) :\r\n            _streamWriter.WriteAsync(source);\r\n\r\n    private Task WriteAsyncImpl(ReadOnlyMemory<char> source, CancellationToken token)\r\n    {\r\n        ReadOnlySpan<char> input = source.Span;\r\n        int minBytes = Encoding.GetMaxCharCount(1);\r\n        while (input.Length > 0)\r\n        {\r\n            Span<byte> bytes = _pipe.GetSpan(minBytes);\r\n            int totalEncoded = 0;\r\n            while (bytes.Length > 0)\r\n            {\r\n                int toEncode = Math.Min(Encoding.GetMaxCharCount(bytes.Length), input.Length);\r\n                var encoded = Encoding.GetBytes(input.Slice(0, toEncode), bytes);\r\n                input = input.Slice(toEncode);\r\n                bytes = bytes.Slice(encoded);\r\n                totalEncoded += encoded;\r\n                if (bytes.Length < minBytes)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n            _pipe.Advance(totalEncoded);\r\n        }\r\n        \r\n        return _pipe.WriteAsync();\r\n    }\r\n\r\n    public override Task WriteAsync(char[] values, int index, int count)\r\n        => WriteAsync(new ReadOnlyMemory<char>(values, index, count));\r\n\r\n    public override Task WriteAsync(string value)\r\n        => WriteAsync(value.AsReadOnlyMemory());\r\n\r\n    public override Task FlushAsync()\r\n    {\r\n        if (_pipe != null)\r\n        {\r\n            await _pipe.Output.FlushAsync();\r\n        }\r\n        else\r\n        {\r\n            await _streamWriter.FlushAsync();\r\n        }\r\n    }\r\n\r\n    // Other TextWriter overloads\r\n}\r\n```\r\n\r\n/cc @davidfowl @stephentoub "},{"Id":"7267236037","Type":"IssuesEvent","CreatedAt":"2018-02-20T03:29:00","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27267","RelatedDescription":"Opened issue \"Introduce Regex.Replace Span API & optimize Regex-Redux benchmar\" (#27267) at dotnet/corefx","RelatedBody":"\r\n**Optimize Regex-Redux benchmark** => Input file is 50MB large. The benchmark outputs the length of the transformed input.\r\n_1M = 1024 * 1024. because sizeof(char) = 2 => 1M (million) = 2MB._\r\n\r\n1. Rent char[] buffer from ArrayPool (size of the input file => 1024 * 1024 * 50 => char[50M]) and put it into a Span.\r\n2. Read input file via int Console.In.ReadBlock(Span<char> buffer) into the buffer. Use block so that it throws if the buffer is too small. \r\n   Store the amount of read bytes in a variable.\r\n   ArrayPool = char[100M] (50M from 1. and 50M from ReadBlock). Rented size = 50M, Free size = 50M\r\n3. Call int Regex.Replace(ReadOnlySpan<char> input, Span<char> buffer, string pattern, string replacement).\r\n   Slice the input span to the length of the read bytes in 2. \r\n   Rent char[] buffer from ArrayPool (same size as input buffer => 1024 * 1024 * 50) for the output buffer.\r\n   ArrayPool = 100MB (50 MB from 1. and 50 MB from 3.). Rented size = 100MB, Free size = 0MB\r\n4. Regex.Replace implementation operates on the input and writes into the output buffer probably by using some helper like ValueStringBuilder.\r\n   Returns the number of bytes written into the output buffer.\r\n5. Repeated Regex.Replace calls:\r\n   Reuse the input buffer from 3. as the output buffer. Do not clear the Span to optimize performance.\r\n   Reuse the output buffer from 3. as the input buffer. Slice it down again to the returned amount of written bytes.\r\n6. Output the last returned int of Regex.Replace\r\n7. Return both rented char[] buffers to the ArrayPool.\r\n\r\nConsiderations:\r\nThe Regex.Replace implementation uses Match internally to check the pattern on the input string. Can we also change the Match code to operate on Spans or do we need to allocate a string in that step?\r\nThe buffer probably doesn't need to be larger than the input as the replacement strings are smaller than the patterns. Needs to be validated.\r\nExtra buffer in Console.In.ReadBlock (2.) could potentially be avoided (offline discussion with stephen) but that wouldn't reduce the overall allocation size in ArrayPool.\r\n\r\nWhat needs to be done:\r\n- Regex.Replace overload added and impl changed\r\n- Regex Redux benchmark adjusted/optimized\r\n- Maybe code for Regex.Match changed to accept Span, return Memory in Match return type?\r\n\r\nLinks:\r\nRegex-Redux benchmark: http://benchmarksgame.alioth.debian.org/u64q/program.php?test=regexredux&lang=csharpcore&id=9\r\nConsole.In(TextReader).Read: https://source.dot.net/#System.Private.CoreLib/shared/System/IO/TextReader.cs,104\r\nRegex.Replace code: https://source.dot.net/#System.Text.RegularExpressions/System/Text/RegularExpressions/RegexReplacement.cs,268\r\n\r\ncc @stephentoub @danmosemsft @vancem @jkotas @jfree"},{"Id":"7267107779","Type":"PullRequestEvent","CreatedAt":"2018-02-20T02:32:11","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27266","RelatedDescription":"Opened pull request \"SocketsHttpHandler: split auth and redirect handling back into two separate handlers\" (#27266) at dotnet/corefx","RelatedBody":"This will help with supporting NTLM auth, which will need to disable auth on redirects as well, but the auth will be handled at a different level (per connection vs per request).\r\n\r\n@stephentoub @davidsh \r\n\r\n@dotnet-bot test Outerloop Windows x64 Debug Build please\r\n@dotnet-bot test Outerloop Linux x64 Release Build please\r\n@dotnet-bot test Outerloop OSX x64 Debug Build please"},{"Id":"7267087123","Type":"PullRequestEvent","CreatedAt":"2018-02-20T02:23:17","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27265","RelatedDescription":"Opened pull request \"SocketsHttpHandler: Don't reuse connection with extraneous received data\" (#27265) at dotnet/corefx","RelatedBody":"Fixes #26754"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7266754725","Type":"IssuesEvent","CreatedAt":"2018-02-20T00:03:33","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24938","RelatedDescription":"Opened issue \"Strange IOperation tree for single-statement lambda.\" (#24938) at dotnet/roslyn","RelatedBody":"I've got the following lambda:\r\n\r\n```c#\r\nAction a = () => {\r\n            Console.WriteLine();\r\n        };\r\n```\r\n\r\nThe IOperation tree here is not quite what i expected. Specifically, the IAnonymousFunctionOperation has a body with *two* operations in it.  One operation is the ExpxressionStatement corresponding to Console.WriteLine();.  The second is an Implicit ReturnStatement.  \r\n\r\nis that expected?  Seems very strange to me that there's any sort of return statement placed here for this lambda.  \r\n\r\nThanks!"},{"Id":"7266703092","Type":"PullRequestEvent","CreatedAt":"2018-02-19T23:43:49","Actor":"KirillOsenkov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24937","RelatedDescription":"Opened pull request \"When a text buffer does not represent a document from a workspace Get…\" (#24937) at dotnet/roslyn","RelatedBody":"…OpenDocumentInCurrentContextWithChanges() will return null. Allow for that without a NullReferenceException.\r\n\r\nFixes #24625.\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nIn cases where the editor is hosting text with C# content type, but it's not added to any workspace, there is a null reference exception thrown because document is null. It may or may not be fatal depending on the circumstances (i.e. how the editor is hosted).\r\n\r\n### Bugs this fixes\r\n\r\nhttps://github.com/dotnet/roslyn/issues/24625\r\n\r\n### Workarounds, if any\r\n\r\nDon't host C# files without adding them to a workspace\r\n\r\n### Risk\r\n\r\nVery low risk, just a null check.\r\n\r\n### Performance impact\r\n\r\nA null check - no discernible perf impact.\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nNeed the new \"Nullable Reference Types\" to catch nullrefs early.\r\n\r\n### How was the bug found?\r\n\r\nHosting Roslyn outside of Visual Studio (VSMac, etc).\r\n\r\n### Test documentation updated?\r\n\r\n\r\n</details>\r\n"},{"Id":"7266655308","Type":"IssuesEvent","CreatedAt":"2018-02-19T23:25:40","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24936","RelatedDescription":"Opened issue \"It looks like SemanticModel.GetMemberGroup always return an empty set for a ConstructorInitializerSyntax\" (#24936) at dotnet/roslyn","RelatedBody":"Expected:\r\nPerhaps should return a group of constructors?"},{"Id":"7266648712","Type":"PullRequestEvent","CreatedAt":"2018-02-19T23:23:21","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24920","RelatedDescription":"Closed pull request \"[WIP]Test1\" (#24920) at dotnet/roslyn","RelatedBody":""},{"Id":"7266602336","Type":"PullRequestEvent","CreatedAt":"2018-02-19T23:06:52","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21219","RelatedDescription":"Closed pull request \"Attempt to make GEnerateType tests less flakey.\" (#21219) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7266623639","Type":"IssuesEvent","CreatedAt":"2018-02-19T23:14:20","Actor":"brunomlopes","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5415","RelatedDescription":"Opened issue \"Running SampleWebApi on IIS seems to fail?\" (#5415) at dotnet/corert","RelatedBody":"I've looked at using corert to compile and package a very simple asp.net core app to run on IIS, but while it runs standalone (by executing it directly on a command line).\r\n\r\nSo I've tried to compile the SampleWebApi that's in the samples directory and run in under IIS.\r\nIt failed with `Application startup exception: System.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.`\r\n\r\nThere might be some declarations missing on rd.xml?\r\n\r\nHere are the steps I've followed:\r\n\r\nRan  `dotnet publish -c Release -r win-x64`\r\n\r\nCreated IIS site and app pool, pointing at `corert\\samples\\WebApi\\bin\\Release\\netcoreapp2.0\\win-x64\\publish\\`\r\n\r\nAdded permissions on the folder to the app pool, changed web.config to remove `arguments` and set `stdoutLogEnabled` to true to see errors.\r\n\r\nNavigating with a browser shows\r\n```\r\nAn error occurred while starting the application.\r\n.NET Core 1.0.26219.01 X64 v4.0.0.0    |   Microsoft.AspNetCore.Hosting version 2.0.1-rtm-125    |    Microsoft Windows 10.0.16299    |   Need help?\r\n```\r\n\r\n\r\n\r\nOn the log file I've found it fails with\r\n```\r\nApplication startup exception: System.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nSince it runs standalone, I thought I might need to add to the rd.xml:\r\n```\r\n    <Assembly Name=\"Microsoft.AspNetCore.Server.IISIntegration\" Dynamic=\"Required All\"/>\r\n```\r\n\r\nRepublish and now it fails with:\r\n```\r\nApplication startup exception: System.InvalidOperationException: A suitable constructor for type 'Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider' could not be located. Ensure the type is concrete and services are registered for all parameters of a public constructor.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x478\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4205a4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.InvalidOperationException: A suitable constructor for type 'Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider' could not be located. Ensure the type is concrete and services are registered for all parameters of a public constructor.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x478\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4205a4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nAdding to rd.xml the declaration for that particular type:\r\n```\r\n        <Assembly Name=\"Microsoft.AspNetCore.Authentication.Core\">\r\n          <Type Name=\"Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider\" Dynamic=\"Required All\" />\r\n        </Assembly>\r\n```\r\n\r\nNow it fails with:\r\n```\r\nApplication startup exception: System.ArgumentException: 'Microsoft.AspNetCore.Authentication.AuthenticationOptions', on 'Microsoft.Extensions.Options.OptionsManager`1[TOptions]' violates the constraint of type 'TOptions'.\r\nParameter name: GenericArguments[0]\r\n   at SampleWebApi!<BaseAddress>+0x71404\r\n   at SampleWebApi!<BaseAddress>+0x71e2c\r\n   at SampleWebApi!<BaseAddress>+0x880ba\r\n   at SampleWebApi!<BaseAddress>+0x122841\r\n   at SampleWebApi!<BaseAddress>+0xff3cf\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(ServiceDescriptor, Type, ISet`1) + 0x64\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(Type, ISet`1) + 0x6d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0xc6\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type, Type, ISet`1, ParameterInfo[], Boolean) + 0x5a\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x123\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4219f4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.ArgumentException: 'Microsoft.AspNetCore.Authentication.AuthenticationOptions', on 'Microsoft.Extensions.Options.OptionsManager`1[TOptions]' violates the constraint of type 'TOptions'.\r\nParameter name: GenericArguments[0]\r\n   at SampleWebApi!<BaseAddress>+0x71404\r\n   at SampleWebApi!<BaseAddress>+0x71e2c\r\n   at SampleWebApi!<BaseAddress>+0x880ba\r\n   at SampleWebApi!<BaseAddress>+0x122841\r\n   at SampleWebApi!<BaseAddress>+0xff3cf\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(ServiceDescriptor, Type, ISet`1) + 0x64\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(Type, ISet`1) + 0x6d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0xc6\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type, Type, ISet`1, ParameterInfo[], Boolean) + 0x5a\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x123\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4219f4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nAdded\r\n```\r\n            <Type Name=\"Microsoft.Extensions.Options.OptionsManager`1[[Microsoft.AspNetCore.Authentication.AuthenticationOptions,Microsoft.AspNetCore.Authentication.Abstractions]]\" Dynamic=\"Required All\" />\r\n            <Type Name=\"Microsoft.Extensions.Options.OptionsFactory`1[[Microsoft.AspNetCore.Authentication.AuthenticationOptions,Microsoft.AspNetCore.Authentication.Abstractions]]\" Dynamic=\"Required All\" />\r\n```\r\nUnder `<Assembly Name=\"Microsoft.Extensions.Options\">`\r\n\r\nAnd now I'm back at \r\n```\r\nApplication startup exception: System.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nIs there an easy way to find out which type I'm missing?"},{"Id":"7266084610","Type":"PullRequestEvent","CreatedAt":"2018-02-19T20:33:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5414","RelatedDescription":"Merged pull request \"Typos\" (#5414) at dotnet/corert","RelatedBody":""},{"Id":"7265935560","Type":"PullRequestEvent","CreatedAt":"2018-02-19T19:52:37","Actor":"github-john-doe","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5414","RelatedDescription":"Opened pull request \"Typos\" (#5414) at dotnet/corert","RelatedBody":""},{"Id":"7265390554","Type":"PullRequestEvent","CreatedAt":"2018-02-19T17:31:05","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5411","RelatedDescription":"Merged pull request \"Fix build-and-run-test.cmd for VS 2017\" (#5411) at dotnet/corert","RelatedBody":"We stopped supporting VS 2015 a while ago, but running CoreCLR tests didn't actually work without it because we forgot to update a place."},{"Id":"7265116683","Type":"IssuesEvent","CreatedAt":"2018-02-19T16:34:06","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5413","RelatedDescription":"Opened issue \"Delete old CoreCLR tests\" (#5413) at dotnet/corert","RelatedBody":"After giving #5412 a couple of weeks of baking time, we should go to https://ci.dot.net/job/dotnet_coreclr/job/master/job/debug_windows_nt_prtest/4/ and click the \"Don't keep the build forever\" button to release the resources."},{"Id":"7265056015","Type":"PullRequestEvent","CreatedAt":"2018-02-19T16:22:28","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5412","RelatedDescription":"Opened pull request \"Update CoreCLR tests\" (#5412) at dotnet/corert","RelatedBody":"Picks up the latest version of Pri0 tests (as of yesterday).\r\n\r\nThere was a massive cleanup of Pri0 tests on the CoreCLR side so we now run only about 2000 tests. Hopefully, they're more representative now. Most of what we picked as \"Top200\" was no longer part of the Pri0 suite, so I made a new one.\r\n\r\nWe might want to consider switching to Pri1 for the rolling builds."},{"Id":"7265054927","Type":"PullRequestEvent","CreatedAt":"2018-02-19T16:22:16","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5411","RelatedDescription":"Opened pull request \"Fix buiild-and-run-test.cmd for VS 2017\" (#5411) at dotnet/corert","RelatedBody":"We stopped supporting VS 2015 a while ago, but running CoreCLR tests didn't actually work without it because we forgot to update a place."},{"Id":"7265014253","Type":"IssuesEvent","CreatedAt":"2018-02-19T16:14:31","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5409","RelatedDescription":"Opened issue \"Reuse variable offsets in WebAssembly codegen\" (#5409) at dotnet/corert","RelatedBody":"Now that more code is compiling, the output is getting bigger and much of it is recalculating the offsets of locals, arguments, and spills. This is especially bad in debug code where the C# compiler assigns almost every operation to a local. We should look into calculating all of those in the prolog and reusing them through the rest of the function. "},{"Id":"7264541192","Type":"IssuesEvent","CreatedAt":"2018-02-19T14:47:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5408","RelatedDescription":"Opened issue \"GVM dependency analysis in multimodule builds\" (#5408) at dotnet/corert","RelatedBody":"`JIT\\Performance\\CodeQuality\\BenchmarksGame\\fasta\\fasta-1` test is failing in multi-module build with `GVM method pointer lookup failure`."},{"Id":"7264503682","Type":"PullRequestEvent","CreatedAt":"2018-02-19T14:40:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5407","RelatedDescription":"Merged pull request \"Add openSUSE instructions\" (#5407) at dotnet/corert","RelatedBody":"Seems like this got unblocked and I was able to get a clean build and test run with this.\r\n\r\nFixes #2856."},{"Id":"7264503668","Type":"IssuesEvent","CreatedAt":"2018-02-19T14:40:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/2856","RelatedDescription":"Closed issue \"CoreRT on SUSE\" (#2856) at dotnet/corert","RelatedBody":"Hello,\r\nDid anybody try to to build CoreRT on SUSE ?"},{"Id":"7263176619","Type":"PullRequestEvent","CreatedAt":"2018-02-19T09:53:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5407","RelatedDescription":"Opened pull request \"Add openSUSE instructions\" (#5407) at dotnet/corert","RelatedBody":"Seems like this got unblocked and I was able to get a clean build and test run with this.\r\n\r\nFixes #2856."},{"Id":"7262676000","Type":"IssuesEvent","CreatedAt":"2018-02-19T07:37:19","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4531","RelatedDescription":"Closed issue \"Implement ldflda opcode\" (#4531) at dotnet/corert","RelatedBody":"Implement the ldflda opcode, which pushes the address of a field. Look at [ImportStoreField](https://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L1038) for an idea of how an idea of how fields work. The method to fill in is:\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L1034"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7262743780","Type":"PullRequestEvent","CreatedAt":"2018-02-19T08:00:53","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1974","RelatedDescription":"Opened pull request \"Merge release/2.1.1xx to release/2.1.2xx\" (#1974) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.1xx into release/2.1.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.1xx-to-release/2.1.2xx\ngit reset --hard upstream/release/2.1.2xx\ngit merge upstream/release/2.1.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.1xx-to-release/2.1.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7262743620","Type":"PullRequestEvent","CreatedAt":"2018-02-19T08:00:49","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1973","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#1973) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7258260122","Type":"PullRequestEvent","CreatedAt":"2018-02-17T04:37:01","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1947","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.6.0-rtm-4918 into sdk\" (#1947) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4918 into sdk release/2.1.1xx branch"},{"Id":"7257764180","Type":"PullRequestEvent","CreatedAt":"2018-02-16T23:40:39","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1972","RelatedDescription":"Merged pull request \"Updating machine affinity to 15.5\" (#1972) at dotnet/sdk","RelatedBody":""},{"Id":"7257611987","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:50:43","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1971","RelatedDescription":"Opened pull request \"Displaying a message whenever a build happens using a preview version of the CLI\" (#1971) at dotnet/sdk","RelatedBody":"Displaying a message whenever a build happens using a preview version of the CLI. Also replaced NETSdkError with NETSdkMessage. This message will be driven by a property set by the CLI."},{"Id":"7257504038","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:20:12","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1970","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.7.0-preview1-4927 into sdk\" (#1970) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.7.0-preview1-4927 into sdk release/2.1.2xx branch"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"965646227764232192","CreatedAt":"2018-02-19T17:56:16+00:00","UserScreenname":"dotnet","Text":"Interactive learning with Try .NET with @LadyNaggaga https://t.co/8btikidagq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":19,"RawContent":null},{"Id":"964556484267868162","CreatedAt":"2018-02-16T17:46:01+00:00","UserScreenname":"dotnet","Text":"How can #VisualStudio help you get started building #dotNET apps in #Azure? Join @PaulYuki99 &amp; @andrewBrianHall at… https://t.co/Sws9Apkm6t","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":18,"FavoriteCount":14,"RawContent":null},{"Id":"963791622948388870","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/icP5AqPRuB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":45,"RawContent":null},{"Id":"963413986954895360","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"dotnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/l9RlPrj5Ep","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"963128572595519489","CreatedAt":"2018-02-12T19:12:00+00:00","UserScreenname":"dotnet","Text":"You can run your application anywhere with .NET Core – join @coolsch as he talks about .NET in 2018 at… https://t.co/0sSc3B7yOQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"963083274636554240","CreatedAt":"2018-02-12T16:12:00+00:00","UserScreenname":"dotnet","Text":"Update your existing .NET application to take advantage of new features in Windows Forms and WPF with @csharpfritz… https://t.co/yjqbIthkKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"961657885137698816","CreatedAt":"2018-02-08T17:48:01+00:00","UserScreenname":"dotnet","Text":"Tomorrow is NOW! @DEVintersection Take a deep dive with the Microsoft’s AI team into machine learning, predictive a… https://t.co/5AcI4VRNyG","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":22,"FavoriteCount":16,"RawContent":null},{"Id":"961596291942961154","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"dotnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/kWer0gYtOp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":10,"RawContent":null},{"Id":"961382608914518016","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/dMJ5QcKEcp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2018-02-20T05:30:19.3557244Z","RunDurationInMilliseconds":7802}