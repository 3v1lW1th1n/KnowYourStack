{"Data":{"GitHub":{"Issues":[{"Id":"461821356","IsPullRequest":false,"CreatedAt":"2019-06-28T02:39:16","Actor":"magicdict","Number":"3931","RawContent":null,"Title":"An unhandled exception of type 'System.InvalidOperationException' occurred in Microsoft.ML.Data.dll: 'Incompatible features column type: 'Vector<Single, 12>' vs 'Vector<Single, 13>''","State":"closed","Body":"Training And Save isOK\r\n```csharp\r\npublic static void BinaryClassify(List<TrainRecord> training_dataset,\r\n                                      string labelColumnName = nameof(TrainRecord.rebuy_same_item))\r\n    {\r\n        var mlContext = new MLContext(seed: 2019);\r\n        var trainingDataView = mlContext.Data.LoadFromEnumerable<TrainRecord>(training_dataset);\r\n        //特征项目\r\n        var CreateFeature = mlContext.Transforms.Concatenate(\"Features\", nameof(TrainRecord.featur_rebuy_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_store_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_cate_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_price_mean),\r\n                                                                               nameof(TrainRecord.featur_price_sdv),\r\n                                                                               nameof(TrainRecord.featur_price_var),\r\n\r\n                                                                               nameof(TrainRecord.featur_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_cate_cnt),\r\n                                                                               nameof(TrainRecord.featur_store_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_cate_share),\r\n                                                                               nameof(TrainRecord.featur_cate_share_country),\r\n\r\n                                                                               \"feature_country_id\"\r\n                                                                               );\r\n        var dataProcessPipeline = mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"feature_country_id\", inputColumnName: nameof(TrainRecord.buyer_country_id)).Append(CreateFeature);\r\n\r\n        var DataTransformer = dataProcessPipeline.Fit(trainingDataView);\r\n        trainingDataView = DataTransformer.Transform(trainingDataView);\r\n\r\n        DataOperationsCatalog.TrainTestData dataSplit = mlContext.Data.TrainTestSplit(trainingDataView, testFraction: 0.2);\r\n        IDataView trainData = dataSplit.TrainSet;\r\n        IDataView testData = dataSplit.TestSet;\r\n        var LightGBMEstimator = mlContext.BinaryClassification.Trainers.LightGbm(numberOfIterations: 2000,\r\n                                                                                 learningRate: 0.1,\r\n                                                                                 labelColumnName: labelColumnName);\r\n        Console.WriteLine();\r\n        Console.WriteLine(\"开始训练 - \" + labelColumnName + \"（LightGBM二元分类） learningRate:\" + 0.1 + \" numberOfIterations:\" + 2000);\r\n        var LightGBMTransformer = LightGBMEstimator.Fit(trainData);\r\n        testData = LightGBMTransformer.Transform(testData);\r\n        var metrics = mlContext.BinaryClassification.Evaluate(testData, labelColumnName: labelColumnName);\r\n        ConsoleHelper.PrintBinaryClassificationMetrics(\"Database Example\", metrics);\r\n        mlContext.Model.Save(LightGBMTransformer, trainData.Schema, ModelPath + labelColumnName + \".zip\");\r\n        Console.WriteLine(\"模型保存路径:\" + ModelPath + labelColumnName + \".zip\");\r\n        Console.WriteLine(\"结束训练:Accuracy \" + metrics.Accuracy);\r\n        Console.WriteLine();\r\n    }\r\n```\r\n\r\nBut ,when I load the model, exception happened：\r\n\r\n```csharp\r\npublic static void Predict(List<TrainRecord> test_dataset, string labelColumnName = nameof(TrainRecord.rebuy_same_item))\r\n    {\r\n        var mlContext = new MLContext(seed: 2019);\r\n        DataViewSchema Schema;\r\n        var LightGBMTransformer = mlContext.Model.Load(ModelPath + labelColumnName + \".zip\", out Schema);\r\n        var trainingDataView = mlContext.Data.LoadFromEnumerable<TrainRecord>(test_dataset);\r\n\r\n        //特征项目\r\n        var CreateFeature = mlContext.Transforms.Concatenate(\"Features\", nameof(TrainRecord.featur_rebuy_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_store_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_cate_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_price_mean),\r\n                                                                               nameof(TrainRecord.featur_price_sdv),\r\n                                                                               nameof(TrainRecord.featur_price_var),\r\n\r\n                                                                               nameof(TrainRecord.featur_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_cate_cnt),\r\n                                                                               nameof(TrainRecord.featur_store_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_cate_share),\r\n                                                                               nameof(TrainRecord.featur_cate_share_country),\r\n\r\n                                                                               \"feature_country_id\"\r\n                                                                               );\r\n\r\n        //OneHotEncoding 字段如果直接转的话，在做整体CreateEnumerable的时候会发生错误！！\r\n        var dataProcessPipeline = mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"feature_country_id\", inputColumnName: nameof(TrainRecord.buyer_country_id)).Append(CreateFeature);\r\n        var DataTransformer = dataProcessPipeline.Fit(trainingDataView);\r\n        trainingDataView = DataTransformer.Transform(trainingDataView);\r\n\r\n        var predictions = LightGBMTransformer.Transform(trainingDataView);\r\n        IEnumerable<BuyerPrediction> predictedResults = mlContext.Data.CreateEnumerable<BuyerPrediction>(predictions, reuseRowObject: false);\r\n        foreach (var item in predictedResults)\r\n        {\r\n            Console.WriteLine(item.buyer_admin_id + \",\" + item.Prediction + \",\" + item.Probability);\r\n        }\r\n    }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3931","RelatedDescription":"Closed issue \"An unhandled exception of type 'System.InvalidOperationException' occurred in Microsoft.ML.Data.dll: 'Incompatible features column type: 'Vector<Single, 12>' vs 'Vector<Single, 13>''\" (#3931)"},{"Id":"461800555","IsPullRequest":true,"CreatedAt":"2019-06-28T00:12:43","Actor":"sayanshaw24","Number":"3930","RawContent":null,"Title":"Reformatted Ranking samples to width 85","State":"open","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\n\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3930","RelatedDescription":"Open PR \"Reformatted Ranking samples to width 85\" (#3930)"},{"Id":"461783729","IsPullRequest":true,"CreatedAt":"2019-06-27T22:58:04","Actor":"harishsk","Number":"3929","RawContent":null,"Title":"Updated the redistributed version of Tensorflow to 1.14","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3929","RelatedDescription":"Open PR \"Updated the redistributed version of Tensorflow to 1.14\" (#3929)"},{"Id":"461693221","IsPullRequest":true,"CreatedAt":"2019-06-27T18:47:43","Actor":"michaelgsharp","Number":"3928","RawContent":null,"Title":"OneVersusAllModelParameters Strongly Typed","State":"open","Body":"Fixes #2467\r\n\r\nWe used to remove all Type information when we constructed our `OneVersusAllModelParameters`. This prevented the users from access the inner model without run-time casting.\r\n\r\nThis PR makes the `OneVersusAllModelParameters` strongly typed, as well as the `OneVersusAllTrainer` and the `LightGbmMultiClassTrainer` as they use the `OneVersusAllModelParameters`. This change is a _**breaking**_ change to the current public api. The `LightGbmMultiClassTrainer` model is typed to be `FeatureWeightsCalibratedModelParameters<LightGbmBinaryModelParameters, PlattCalibrator>` as that is what it is hard coded to return on line 190. The `OneVersusAllTrainer` determines the type automatically if you `OneVersusAll` method in the `StandardTrainersCatalog`.\r\n\r\nAs part of this change, the `OneVersusAllTrainer` will no longer auto calibrate the model and you must pass in the model already calibrated if you want it to be calibrated. \r\n\r\nDISCUSSION POINT - Currently the `useProbabilities` flag is still allowed. You must set it to false with a non-calibrated trainer or an error will be thrown. If your trainer is calibrated, you can pass either `true` or `false` and it will either use raw values or calibrated ones accordingly. Do we still want to allow this? Or would it be better to remove the `useProbabilities` flag and have non-calibrated trainers always return  raw results and have calibrated trainers always return calibrated results? This would simplify the call and prevent errors where you forget to set `useProbabilities` to false with a non-calibrated trainer, but would also prevent you from getting raw results from a calibrated trainer.\r\n\r\nSince the `OneVersusAllTrainer` no longer auto calibrates the trainer, the testing files we use for comparison were also updated to reflect that.\r\n\r\nSome calibrators where changed from `internal` scope to `public` scope as we now return them as a type for the user to use.\r\n\r\nThe test for this is just adding a line in the existing `LightGbmMulticlassEstimatorCorrectSigmoid` test showing that casting is not needed to access the internal model.","Url":"https://github.com/dotnet/machinelearning/pull/3928","RelatedDescription":"Open PR \"OneVersusAllModelParameters Strongly Typed\" (#3928)"},{"Id":"461648715","IsPullRequest":false,"CreatedAt":"2019-06-27T17:12:11","Actor":"natke","Number":"3927","RawContent":null,"Title":"Distinguish between Calibrated and NonCalibrated methods","State":"open","Body":"When would I use one versus the other?\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: b147624e-e01f-679a-900c-37f48f9d9e15\n* Version Independent ID: 55d26134-c3a9-3a4f-5833-2f9b1dc8e0b1\n* Content: [BinaryClassificationCatalog.CrossValidateNonCalibrated(IDataView, IEstimator&lt;ITransformer&gt;, Int32, String, String, Nullable&lt;Int32&gt;) Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.binaryclassificationcatalog.crossvalidatenoncalibrated?view=ml-dotnet#feedback)\n* Content Source: [dotnet/xml/Microsoft.ML/BinaryClassificationCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/BinaryClassificationCatalog.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3927","RelatedDescription":"Open issue \"Distinguish between Calibrated and NonCalibrated methods\" (#3927)"},{"Id":"461647190","IsPullRequest":false,"CreatedAt":"2019-06-27T17:08:50","Actor":"eerhardt","Number":"3926","RawContent":null,"Title":"Move official build yaml from phases to jobs","State":"open","Body":"We need to make the same change as #3908 to the official build yaml file:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/master/build/vsts-ci.yml\r\n\r\n\"phases\" in AzDO yaml files are the old schema. We should be using \"jobs\", which is the \"new\" schema.\r\n\r\nSee https://github.com/dotnet/arcade/blob/master/Documentation/AzureDevOps/PhaseToJobSchemaChange.md for more info.","Url":"https://github.com/dotnet/machinelearning/issues/3926","RelatedDescription":"Open issue \"Move official build yaml from phases to jobs\" (#3926)"},{"Id":"461639932","IsPullRequest":true,"CreatedAt":"2019-06-27T16:52:59","Actor":"RadicalRayan","Number":"3925","RawContent":null,"Title":"LightGBM Unbalanced Data Argument [Issue #3688 Fix]","State":"open","Body":"Fix for issue #3688. LightGBM Multiclass Trainer can now accept unbalanced data parameter as was previously possible in the Binary Trainer. An additional argument was added to the LightGBMBinaryEstimator test.","Url":"https://github.com/dotnet/machinelearning/pull/3925","RelatedDescription":"Open PR \"LightGBM Unbalanced Data Argument [Issue #3688 Fix]\" (#3925)"},{"Id":"461631920","IsPullRequest":true,"CreatedAt":"2019-06-27T16:35:02","Actor":"sierralee51","Number":"3923","RawContent":null,"Title":"Reformatting ModelOperations and DataOperations samples to width 85","State":"open","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478 ","Url":"https://github.com/dotnet/machinelearning/pull/3923","RelatedDescription":"Open PR \"Reformatting ModelOperations and DataOperations samples to width 85\" (#3923)"},{"Id":"461631919","IsPullRequest":true,"CreatedAt":"2019-06-27T16:35:02","Actor":"sayanshaw24","Number":"3922","RawContent":null,"Title":"Reformatting TensorFlow and AnomalyDetection samples to width 85","State":"open","Body":"Guidelines followed:\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\n\r\nFix for Issue #3478 ","Url":"https://github.com/dotnet/machinelearning/pull/3922","RelatedDescription":"Open PR \"Reformatting TensorFlow and AnomalyDetection samples to width 85\" (#3922)"},{"Id":"461220862","IsPullRequest":true,"CreatedAt":"2019-06-27T16:25:53","Actor":"sayanshaw24","Number":"3915","RawContent":null,"Title":"Test PR","State":"closed","Body":"Testing","Url":"https://github.com/dotnet/machinelearning/pull/3915","RelatedDescription":"Closed or merged PR \"Test PR\" (#3915)"},{"Id":"461522572","IsPullRequest":false,"CreatedAt":"2019-06-27T14:50:15","Actor":"CyberFranck","Number":"3921","RawContent":null,"Title":"Exception has been thrown by the target of an invocation on loading saved model","State":"closed","Body":"When loading a saved model it throw the exception `Exception has been thrown by the target of an invocation` on the `Load` method. This method is simply wrapped into a separated library so it's easy to move around. Depending on the project i use it, it either works all the time with no exception, or never works. Here my current testing code :\r\n\r\n   ```\r\npublic void TestLoadSolver(Stream solverStream)\r\n{\r\n    // create context\r\n    var context = new MLContext();\r\n\r\n    // temp schema\r\n    DataViewSchema sch;\r\n\r\n    try\r\n    {\r\n        // load context,schema and transformation\r\n        var transformer = context.Model.Load(solverStream, out sch);\r\n\r\n        // store schema\r\n        var schema = sch;\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n\r\n    }\r\n}\r\n```\r\n\r\nThe stream is simply a read from the zip file on the disk.\r\nThe error happen on the line `var transformer = context.Model.Load(solverStream, out sch);`\r\nAll projects are on .Net 4.8, 64 bits debug, using NuGet for packages which are the same as the DLL that has this code uses. The DLL are all the same in the bin folders and i verified for the bug with Lightgbm that doesn't copy and the DLL and EXE are there is all projects.\r\n\r\nWhat could be the cause of failure but only in some project.","Url":"https://github.com/dotnet/machinelearning/issues/3921","RelatedDescription":"Closed issue \"Exception has been thrown by the target of an invocation on loading saved model\" (#3921)"},{"Id":"461521839","IsPullRequest":false,"CreatedAt":"2019-06-27T13:13:09","Actor":"ImGere","Number":"3920","RawContent":null,"Title":"Stuck on evaluate","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: ML.NET 1.1.0 \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nCreated ML model with Model Builder, given 1000 seconds, it was able to evaluate 2 models and returned the best one.\r\nAfterwards I tried to rerun the modelbuilder class to recreate the model.\r\nThe csv from where I take the data is around 8 MB, with 70k rows\r\n- **What happened?**\r\nIt has been stuck on Evaluate for so long, ~48 mins~. EDIT: now 82 mins.\r\n- **What did you expect?**\r\nHave some feedback on the evaluation process or create the new model.\r\n\r\nMy suggestion is to have some logs on the screen while it is evaluating.\r\n### Source code / logs\r\n![Proof](https://user-images.githubusercontent.com/20186579/60268902-c4ec4380-98ed-11e9-9ab5-910ee5583629.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3920","RelatedDescription":"Open issue \"Stuck on evaluate\" (#3920)"},{"Id":"461400663","IsPullRequest":false,"CreatedAt":"2019-06-27T08:50:18","Actor":"JomanjiPT","Number":"3919","RawContent":null,"Title":"DLLNotFoundException (32/64 bits problem with the DLL probably)","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: windows 10 (64 bits) and windows server 2012 R2 (64 bits)\r\n- **.NET Version (eg., dotnet --info)**: .Net Framework 4.7.2\r\n\r\n### Issue\r\n\r\n- **What did you do?** I copied the project from my computer (windows 10) to a server (windows server 2012 R2) and I started to have problems with \"DLLNotFoundException\".\r\n\r\n- **What happened?** When I copy the project from my computer ( ...\\Desktop\\ICN) to the server, the path of the project became \"\\\\nameOfServer\\...\\ICN\" (the Network Path) and when I debug, on my computer (windows 10), that same project I get \"DLLNotFoundException\".\r\n\r\n- **What did you expect?** I expected to run on the two computers equaly.\r\n\r\n### Source code / logs\r\n\r\nAs a side note, my solution has 3 projects: \"DataCollection\", \"RS_WebApp\" (where is the method that uses ML.NET) and \"NetworkGraph\".\r\n\r\nImage of the problem:\r\nhttps://imgur.com/a/SMBmPPW (first image)\r\n\r\nMy projects it's on \"Any CPU\" when I debug and with the project, ASP.NET Web Application (.NET Framework), \"RS_WebApp\" on 64 bits that ML.NET requires and the other 2 projects on \"Any CPU\".\r\n\r\nhttps://imgur.com/a/SMBmPPW (second image)\r\n\r\nI am using the \"mlContext.Recommendation().Trainers.MatrixFactorization(options)\" and when I build the application it generates the \"MatrixFactorizationNative.dll\" on \"\\ICN\\RS_WebApp\\bin\".\r\n\r\nThe only way that I put to work fine, when debug, was putting this dll on the \"C:\\Windows\\SysWOW64\" (in my computer) (ML.NET requires 64 bits) but the problem is that it doesn't work when it's the server calling that method because it doesn't have that file in its folder \"C:\\Windows\\SysWOW64\" (or similar to that in windows server) and I can't put that file in the server.\r\n\r\nI already tried to put the dll on the project with \"Copy to Output Directory: Copy if newer\" and it didn't work.\r\n\r\nhttps://imgur.com/a/SMBmPPW (third image)\r\n\r\nI also put manually the dll on \"\\ICN\\RS_WebApp\\bin\\x64\" and it didn't work.\r\n\r\nI also tried to \"Add Reference\" on the project (that have the web service with the web method that calls ML.NET \"RS_WebApp\") the dll but this error happen.\r\n\r\nhttps://imgur.com/a/SMBmPPW (fourth image)\r\n\r\n**I don't know what folder I can put the dll on, to correctly load that dll.**\r\n\r\nMy thoughts on this are the following:\r\n- something related with debugging a solution with 1 project 64 bits and 2 projects 32 bits, and it \"misses\" where was the dll for the 64 bits project.\r\n- ML.NET (web API) can have some problem with files in a computer and running on other.\r\n\r\nIf you need more information, feel free to ask, and a huge thanks if someone can address this problem.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3919","RelatedDescription":"Open issue \"DLLNotFoundException (32/64 bits problem with the DLL probably)\" (#3919)"},{"Id":"461358533","IsPullRequest":true,"CreatedAt":"2019-06-27T07:16:03","Actor":"justinormont","Number":"3918","RawContent":null,"Title":"[AutoML] Sweep Trimming of Whitespace in AutoML","State":"open","Body":"Fixes https://github.com/dotnet/machinelearning/issues/3917:\r\n> We should iterate over the options for TrimWhitespace in the TextLoader.\r\n> \r\n> As diagnosed by @daholste, the MSLR-WEB10K dataset ([train](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KTrain720kRows.tsv), [validate](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KValidate240kRows.tsv), [test](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KTest240kRows.tsv), [zip](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/MSLR-WEB10K.zip), [README](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/README.md), [LICENSE](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/LICENSE.md)) has an extra tab at the end of each data row, though not the header row. \r\n> \r\n> This causes the AutoML TextLoader to fail w/ the following error: \r\n> ```\r\n> An Error occured during inferring columns\r\n> Unable to split the file provided into multiple, consistent columns.\r\n> Please see the log file for more info.\r\n> Exiting ...\r\n> ```\r\n> \r\n> Work:\r\n> * Have AutoML sweep over the [TrimWhitespace](https://github.com/dotnet/machinelearning/blob/429f8cc7764769fcf8c7f3668cc0a27619ec9531/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoader.cs#L1449) option\r\n> * Fix above error message -- spelling of \"occured\"","Url":"https://github.com/dotnet/machinelearning/pull/3918","RelatedDescription":"Open PR \"[AutoML] Sweep Trimming of Whitespace in AutoML\" (#3918)"},{"Id":"461341573","IsPullRequest":false,"CreatedAt":"2019-06-27T06:31:44","Actor":"justinormont","Number":"3917","RawContent":null,"Title":"AutoML TextLoader should Sweep TrimWhiteSpace","State":"open","Body":"We should iterate over the options for TrimWhitespace in the TextLoader.\r\n\r\nAs diagnosed by @daholste, the MSLR-WEB10K dataset ([train](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KTrain720kRows.tsv), [validate](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KValidate240kRows.tsv), [test](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KTest240kRows.tsv), [zip](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/MSLR-WEB10K.zip), [README](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/README.md), [LICENSE](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/LICENSE.md)) has an extra tab at the end of each data row, though not the header row. \r\n\r\nThis causes the AutoML TextLoader to fail w/ the following error: \r\n```\r\nAn Error occured during inferring columns\r\nUnable to split the file provided into multiple, consistent columns.\r\nPlease see the log file for more info.\r\nExiting ...\r\n```\r\n\r\nWork:\r\n* Have AutoML sweep over the [TrimWhitespace](https://github.com/dotnet/machinelearning/blob/429f8cc7764769fcf8c7f3668cc0a27619ec9531/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoader.cs#L1449) option\r\n* Fix above error message -- spelling of \"occured\"","Url":"https://github.com/dotnet/machinelearning/issues/3917","RelatedDescription":"Open issue \"AutoML TextLoader should Sweep TrimWhiteSpace\" (#3917)"},{"Id":"461124868","IsPullRequest":true,"CreatedAt":"2019-06-27T04:38:46","Actor":"wschin","Number":"3911","RawContent":null,"Title":"Another Try to Fix Build for Adding ORT Update","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3911","RelatedDescription":"Closed or merged PR \"Another Try to Fix Build for Adding ORT Update\" (#3911)"},{"Id":"460760058","IsPullRequest":true,"CreatedAt":"2019-06-27T03:58:53","Actor":"safern","Number":"3908","RawContent":null,"Title":"Move from phases to jobs and use bring your own cloud pool","State":"closed","Body":"This is needed to unblock: https://github.com/dotnet/machinelearning/pull/3881\r\n\r\nBasically the hosted azure devops machines have limited hard drive (25gb) and since tests are executed on the build machine it is running out of space. BYOC pools have 512 gb so that will unblock this scenario.\r\n\r\nHowever I do think, machinelearning repo should move to run tests on helix in the long term.\r\n\r\n**Note:** *this is easier to review if omitting whitespaces from the diff*\r\n\r\ncc: @codemzs @wschin \r\n","Url":"https://github.com/dotnet/machinelearning/pull/3908","RelatedDescription":"Closed or merged PR \"Move from phases to jobs and use bring your own cloud pool\" (#3908)"},{"Id":"460673068","IsPullRequest":false,"CreatedAt":"2019-06-27T03:58:25","Actor":"isaacwalkercox","Number":"3907","RawContent":null,"Title":"PredictionEngine.Predict returns null","State":"closed","Body":"Is there any reason that my PredictionEngine would be returning a null result when trying to predict a value in a multi-class classification smiliar to the GitHub Labeler? That sample works perfectly, by the way, because I tested it. I cannot release the code at this time, I understand this will not be helpful to you and I am sorry.","Url":"https://github.com/dotnet/machinelearning/issues/3907","RelatedDescription":"Closed issue \"PredictionEngine.Predict returns null\" (#3907)"},{"Id":"459764260","IsPullRequest":false,"CreatedAt":"2019-06-27T03:57:09","Actor":"antonfr","Number":"3904","RawContent":null,"Title":"Error while creating PredictionEngine for SSD model in ONNX format","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: macOS 10.13.6\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.2.4 \r\n\r\n### Issue\r\n\r\n- I trying to use SSD model in ONNX format for object detection from [ONNX model zoo](https://github.com/onnx/models/tree/master/ssd) ML.NET\r\n- I got the following error: `Can't bind the IDataView column 'labels' of type 'Vector<Int64, 1, 1>' to field or property 'PredictedLabels' of type 'System.Int32[,]'.` while creation of prediction engine\r\n- I was able to run successfully tiny YOLO model ONNX model zoo, here I expect the same result\r\n\r\n### Source code / logs\r\n\r\nHere is the definition of outputs of model:\r\n```C#\r\nnamespace SSD_onnx.DataStructures\r\n{\r\n    public class ImagePredictions\r\n    {\r\n        [ColumnName(SSDDetector.SSDSettings.SSDBoxesOutput)]\r\n        public float[,,] PredictedBoxes;\r\n\r\n        [ColumnName(SSDDetector.SSDSettings.SSDLabelsOutput)]\r\n        public int[,] PredictedLabels;\r\n\r\n        [ColumnName(SSDDetector.SSDSettings.SSDScoresOutput)]\r\n        public float[,] PredictedScores;\r\n    }\r\n}\r\n```\r\n\r\nHere is the function that creates prediction engine:\r\n\r\n```C#\r\nnamespace SSD_onnx\r\n{\r\n    public class SSDDetector\r\n    {\r\n        private readonly string modelLocation;\r\n        private readonly string labelsLocation;\r\n        private readonly string imagesLocation;\r\n        private readonly string tagsLocation;\r\n\r\n        private IList<SSDBox> SSDBoxes = new List<SSDBox>();\r\n        private readonly SSDPredictions ssdPredictions = new SSDPredictions();\r\n        private readonly MLContext mLContext;\r\n\r\n        public SSDDetector(string modelLocation,\r\n                           string labelsLocation,\r\n                           string imagesLocation,\r\n                           string tagsLocation)\r\n        {\r\n            this.modelLocation = modelLocation;\r\n            this.labelsLocation = labelsLocation;\r\n            this.imagesLocation = imagesLocation;\r\n            this.tagsLocation = tagsLocation;\r\n\r\n            mLContext = new MLContext();\r\n        }\r\n\r\n        public struct ImageSettings\r\n        {\r\n            public const int ImageWidth = 1200;\r\n            public const int ImageHeight = 1200;\r\n        }\r\n\r\n        public struct SSDSettings\r\n        {\r\n            public const string SSDInput = \"image\";\r\n            public const string SSDBoxesOutput = \"bboxes\";\r\n            public const string SSDLabelsOutput = \"labels\";\r\n            public const string SSDScoresOutput = \"scores\";\r\n        }\r\n\r\n        public PredictionEngine<ImageData, ImagePredictions> LoadModel(string modelLocation,\r\n                                                                       string imagesLocation,\r\n                                                                       string tagsLocation)\r\n        {\r\n            IDataView data = mLContext.Data.LoadFromTextFile<ImageData>(path: tagsLocation,\r\n                                                                        hasHeader: false);\r\n            var pipeline = mLContext.Transforms.LoadImages(outputColumnName: \"image\",\r\n                                                           imageFolder: imagesLocation,\r\n                                                           inputColumnName: nameof(ImageData.ImagePath))\r\n                   .Append(mLContext.Transforms.ResizeImages(outputColumnName: \"image\",\r\n                                                             imageWidth: ImageSettings.ImageWidth,\r\n                                                             imageHeight: ImageSettings.ImageHeight,\r\n                                                             inputColumnName: \"image\"))\r\n                   .Append(mLContext.Transforms.ExtractPixels(outputColumnName: \"image\"))\r\n                   .Append(mLContext.Transforms.ApplyOnnxModel(modelFile: modelLocation,\r\n                                                               outputColumnNames: new[] { SSDSettings.SSDBoxesOutput,\r\n                                                                                          SSDSettings.SSDLabelsOutput,\r\n                                                                                          SSDSettings.SSDScoresOutput },\r\n                                                               inputColumnNames: new[] { SSDSettings.SSDInput }));\r\n\r\n            var model = pipeline.Fit(data);\r\n\r\n            var predictionEngine = mLContext.Model.CreatePredictionEngine<ImageData, ImagePredictions>(model);\r\n            return predictionEngine;\r\n        }\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3904","RelatedDescription":"Closed issue \"Error while creating PredictionEngine for SSD model in ONNX format\" (#3904)"},{"Id":"461228155","IsPullRequest":true,"CreatedAt":"2019-06-26T23:46:07","Actor":"artidoro","Number":"3916","RawContent":null,"Title":"WIP: Add FixZero for LogMeanVariance normalizer","State":"open","Body":"Fixes #2798.\r\n\r\nThis PR introduces the `FixZero` argument to the `LogMeanVariance` normalizer, a relative tests and a sample.\r\n\r\nIt's still in WIP because I would like to make a breaking change instead of creating an overload with required parameter `FixZero`. As soon as the change is accepted and I set up the API Compat tool to accept the breaking change, I should be able to remove the overloads to the `MLContext` extensions.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3916","RelatedDescription":"Open PR \"WIP: Add FixZero for LogMeanVariance normalizer\" (#3916)"},{"Id":"461208214","IsPullRequest":true,"CreatedAt":"2019-06-26T22:24:41","Actor":"sierralee51","Number":"3914","RawContent":null,"Title":"Test PR","State":"closed","Body":"Test\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3914","RelatedDescription":"Closed or merged PR \"Test PR\" (#3914)"},{"Id":"461138308","IsPullRequest":true,"CreatedAt":"2019-06-26T19:17:37","Actor":"flash2048","Number":"3912","RawContent":null,"Title":"Fix assignment of a variable to itself","State":"open","Body":"The **invMap** variable is assigned to itself. Removed it.","Url":"https://github.com/dotnet/machinelearning/pull/3912","RelatedDescription":"Open PR \"Fix assignment of a variable to itself\" (#3912)"},{"Id":"461079414","IsPullRequest":true,"CreatedAt":"2019-06-26T16:51:53","Actor":"codemzs","Number":"3910","RawContent":null,"Title":"[WIP] Updated estimator based forecasting API ","State":"open","Body":"PLEASE DON'T REVIEW. I need to add documentation, tests, samples and refactor some more code and then will remove WIP tag.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3910","RelatedDescription":"Open PR \"[WIP] Updated estimator based forecasting API \" (#3910)"},{"Id":"460978084","IsPullRequest":false,"CreatedAt":"2019-06-26T13:40:44","Actor":"ImGere","Number":"3909","RawContent":null,"Title":"Add feature request, Multilabel classification and predict_proba","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 2.1.602\r\n- **ML.NET Version**: 1.1.0\r\n\r\nHi everyone,\r\nI'm looking for help. I developed some ML models in Python and I'm now trying to import them in ML.NET because my final app is in .NET Core. \r\n\r\nI started reading some tutorials and follow step-by-step tutorials from Microsoft. But I can't find out if there is a simple way to implement some features, like:\r\n- **multilabel classification**: I need to predict a label which can have different values that can be right. \r\n- **predict probabilities of classes**: in multiclass I can't find a way to implement the `predict_proba()` of sklearn, where I get in return the probabilities of every class. So that I can show the first two or three most probable classes.\r\n\r\nIf anyone has some tutorials on how to do this things, or knows if they are planned in the next updates of the library.\r\n\r\nOtherwise is there a way to easily implements my python models in a .NET core app?\r\n\r\nThanks,\r\nAlessandro\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3909","RelatedDescription":"Open issue \"Add feature request, Multilabel classification and predict_proba\" (#3909)"},{"Id":"460667731","IsPullRequest":false,"CreatedAt":"2019-06-25T22:09:27","Actor":"greazer","Number":"3906","RawContent":null,"Title":"AutoML: Misspelling in user-visible error...","State":"open","Body":"Not a huge deal, but an external customer did see this.  \r\n\r\nIn \\machinelearning\\src\\Microsoft.ML.Data\\Evaluators\\AucAggregator.cs...\r\n\r\nContracts.CheckParam(PosSample.Any(), nameof(PosSample), \"AUC is not definied when there is no positive class in the data\");\r\nContracts.CheckParam(NegSample.Any(), nameof(NegSample), \"AUC is not definied when there is no negative class in the data\");\r\n\r\n\"defined\" is misspelled. ","Url":"https://github.com/dotnet/machinelearning/issues/3906","RelatedDescription":"Open issue \"AutoML: Misspelling in user-visible error...\" (#3906)"},{"Id":"459480261","IsPullRequest":false,"CreatedAt":"2019-06-25T19:45:38","Actor":"isaacwalkercox","Number":"3901","RawContent":null,"Title":"Why does using statement need to be included?","State":"closed","Body":"I was struggling to use the instance of MLContext to create a trainer by writing context.MulticlassClassification.Trainers because the methods were not appearing at the end of Trainers. As soon as I put \"using Microsoft.ML\" at the top of my code after loads of fiddling about, it worked. Can someone please explain why?","Url":"https://github.com/dotnet/machinelearning/issues/3901","RelatedDescription":"Closed issue \"Why does using statement need to be included?\" (#3901)"},{"Id":"460288853","IsPullRequest":false,"CreatedAt":"2019-06-25T08:40:17","Actor":"antonfr","Number":"3905","RawContent":null,"Title":"ImageEstimators.ExtractPixels using an array for offsetImage and scaleImage","State":"open","Body":"Hello,\r\nfor this moment, when we use ExtractPixels, we could provide only a single number for offsetImage and scaleImage, which will be applied for all RGB channels. But sometimes, as for [this model](https://github.com/onnx/models/tree/master/ssd), we should use different normalization across the channels. Perhaps, this functionality could be added in the future?\r\nThe same proposition for ImageEstimator.ResizeImages, perhaps, different interpolations for ResizingKind could be added as in PIL python library?","Url":"https://github.com/dotnet/machinelearning/issues/3905","RelatedDescription":"Open issue \"ImageEstimators.ExtractPixels using an array for offsetImage and scaleImage\" (#3905)"},{"Id":"459560647","IsPullRequest":false,"CreatedAt":"2019-06-23T10:30:59","Actor":"mphollas","Number":"3903","RawContent":null,"Title":"Unable to load shared library 'MklImports' or one of its dependencies.","State":"open","Body":"### System information\r\n\r\n- Mac 0S Mojave 10.14.3:\r\n- dotnet --version\r\n   2.2.300\r\n- Project references\r\n - Microsoft.ML\r\n - Microsoft.ML.Mkl.Redis\r\n - Microsoft.ML.TimeSeries\r\n\r\n### Issue\r\n- Possible that this is of the same origin as #3694 but in case it is a separate case I have posted this issue.\r\n\r\n- **What did you do?**\r\nFollowed new forecasting tutorial for ML.Net 1.1\r\nhttps://github.com/dotnet/machinelearning/blob/master/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TimeSeries/Forecasting.cs\r\n- **What happened?**\r\nDll not found exception\r\n- **What did you expect?**\r\nProgram to run successfully\r\n\r\n### Source code / logs\r\n\r\nUnable to load shared library 'MklImports' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libMklImports, 1): image not found\r\n\r\n at Microsoft.ML.Transforms.TimeSeries.EigenUtils.Dsytrd(Layout matrixLayout, Uplo uplo, Int32 n, Double[] a, Int32 lda, Double[] d, Double[] e, Double[] tau)\\n   at Microsoft.ML.Transforms.TimeSeries.EigenUtils.MklSymmetricEigenDecomposition(Single[] input, Int32 size, Single[]& eigenValues, Single[]& eigenVectors)\\n   at Microsoft.ML.Transforms.TimeSeries.TrajectoryMatrix.ComputeSvd(Single[]& singularValues, Single[]& leftSingularvectors)\\n   at Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModeler.AdaptiveSingularSpectrumSequenceModelerInternal.TrainCore(Single[] dataArray, Int32 originalSeriesLength)\\n   at Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModeler.AdaptiveSingularSpectrumSequenceModelerInternal.Train(RoleMappedData data)\\n \r\n","Url":"https://github.com/dotnet/machinelearning/issues/3903","RelatedDescription":"Open issue \"Unable to load shared library 'MklImports' or one of its dependencies.\" (#3903)"},{"Id":"459521313","IsPullRequest":false,"CreatedAt":"2019-06-22T23:58:30","Actor":"justinormont","Number":"3902","RawContent":null,"Title":"Ensure Sanitized Column Names are Unique in AutoML","State":"open","Body":"When creating sanitized column names, we have to ensure the column names are distinct.\r\n\r\n### Error\r\nWe generate non-compilable C# code when there are naming collisions.\r\n\r\nExample build error:\r\n`/private/tmp/out/CivicHonesty/CivicHonesty.Model/DataModels/ModelInput.cs(23,23): Error CS0102: The type 'ModelInput' already contains a definition for 'Country' (CS0102) (CivicHonesty.Model)`\r\n\r\n### Repro\r\nIn the [Civic Honesty dataset](https://dataverse.harvard.edu/api/access/datafile/3451248?format=original&gbrecs=true) (CSV), we cause a naming collision in the generated C# code:\r\n```C#\r\nnamespace CivicHonesty.Model.DataModels\r\n{\r\n    public class ModelInput\r\n    {\r\n        [ColumnName(\"id\"), LoadColumn(0)]\r\n        public float Id { get; set; }\r\n\r\n        [ColumnName(\"country\"), LoadColumn(1)]\r\n        public float Country { get; set; }\r\n\r\n        [ColumnName(\"Country\"), LoadColumn(2)]\r\n        public string Country { get; set; }\r\n\r\n        [ColumnName(\"city\"), LoadColumn(3)]\r\n        public float City { get; set; }\r\n```\r\n\r\nYou'll note the two variables both called `Country`.\r\n\r\nThis comes from the dataset using \"country\" and \"Country\":\r\n> ![image](https://user-images.githubusercontent.com/4080826/59969829-60f00680-950c-11e9-8eeb-141981ae43c3.png)\r\n\r\nDataset: https://dataverse.harvard.edu/api/access/datafile/3451248?format=original&gbrecs=true\r\n\r\nCLI command:\r\n`mlnet auto-train --dataset \"behavioral data (csv file).csv\"  --label-column-name response --mltask multiclass-classification --ignore-columns responsetime,id --max-exploration-time 60 --output-path /tmp/out/ --name CivicHonesty`\r\n\r\n### Cause\r\nCurrently, we have no detection for duplicate column names. \r\n\r\nThe above \"country\" vs. \"Country\" is a rather direct example. This will occur less directly and more often due to our name sanitization where we map, for example, \"$ spent\" and \"% spent\" both to \"__spent\":\r\nhttps://github.com/dotnet/machinelearning/blob/227da9d7db2ce80b073cc64bfd067b04e6189de1/src/mlnet/Utilities/Utils.cs#L67-L83\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/227da9d7db2ce80b073cc64bfd067b04e6189de1/src/mlnet/Utilities/Utils.cs#L47-L50\r\n\r\n\r\n\r\n### Work\r\nTodo:\r\n* Check that sanitized column names are unique\r\n* Check that when converted to C# variable names, the sanitized column names will be unique and valid C# variables","Url":"https://github.com/dotnet/machinelearning/issues/3902","RelatedDescription":"Open issue \"Ensure Sanitized Column Names are Unique in AutoML\" (#3902)"},{"Id":"461145893","IsPullRequest":false,"CreatedAt":"2019-06-05T09:08:06","Actor":"vardeg2017","Number":"3913","RawContent":null,"Title":"Training step failed: AutoML should return more meaningful errors which can be understood easily by users","State":"open","Body":"Model Builder 16.0.1905.641\r\nOS Windows 10 Pro 17134.765\r\nVS Studion 2019 16.1.1\r\nI made very simple sample - XOR data set. Trying with csv format with \",\" seporated and tsv - no matter.\r\nHere is my tsv data set:\r\n**x\ty\tz\r\n1\t0\t1\r\n0\t1\t1\r\n1\t1\t0\r\n0\t0\t0**\r\nWhen i choose binary-classification on a trin step i got this:\r\n`Inferring Columns ...\r\nCreating Data loader ...\r\nLoading data ...\r\nExploring multiple ML algorithms and settings to find you the best model for ML task: binary-classification\r\nFor further learning check: https://aka.ms/mlnet-cli\r\n[Source=AutoML, Kind=Trace] Channel started\r\n|     Trainer                              Accuracy      AUC    AUPRC  F1-score  Duration #Iteration             |\r\nParameter name: PosSample\r\n[Source=AutoML, Kind=Trace] Evaluating pipeline xf=ColumnConcatenating{ col=Features:x,y} xf=Normalizing{ col=Features:Features} tr=AveragedPerceptronBinary{}  cache=+\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ColumnConcatenating{ col=Features:x,y} xf=Normalizing{ col=Features:Features} tr=AveragedPerceptronBinary{}  cache=+ . Exception: System.ArgumentOutOfRangeException: AUC is not definied when there is no positive class in the data\r\n   at Microsoft.ML.Data.EvaluatorBase`1.AucAggregatorBase`1.ComputeWeightedAuc(Double& unweighted)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.<>c__DisplayClass32_0.<GetAggregatorConsolidationFuncs>b__0(UInt32 stratColKey, ReadOnlyMemory`1 stratColVal, Aggregator agg)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Aggregator.Finish()\r\n   at Microsoft.ML.Data.EvaluatorBase`1.ProcessData(IDataView data, RoleMappedSchema schema, Func`2 activeColsIndices, TAgg aggregator, AggregatorDictionaryBase[] dictionaries)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\n   at Microsoft.ML.AutoML.BinaryMetricsAgent.EvaluateMetrics(IDataView data, String labelColumn)\r\n[Source=AutoML, Kind=Trace] 1\t­ҐязЁб«®\t00:00:00.6932896\txf=ColumnConcatenating{ col=Features:x,y} xf=Normalizing{ col=Features:Features} tr=AveragedPerceptronBinary{}  cache=+\r\n|1    AveragedPerceptronBinary             ­ҐязЁб«® ­ҐязЁб«® ­ҐязЁб«®  ­ҐязЁб«®       0,7          0             |\r\nSystem.ArgumentOutOfRangeException: AUC is not definied when there is no positive class in the data\r\nParameter name: PosSample\r\n   at Microsoft.ML.Data.EvaluatorBase`1.AucAggregatorBase`1.ComputeWeightedAuc(Double& unweighted)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Aggregator.Finish()\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.<>c__DisplayClass32_0.<GetAggregatorConsolidationFuncs>b__0(UInt32 stratColKey, ReadOnlyMemory`1 stratColVal, Aggregator agg)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.ProcessData(IDataView data, RoleMappedSchema schema, Func`2 activeColsIndices, TAgg aggregator, AggregatorDictionaryBase[] dictionaries)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.AutoML.BinaryMetricsAgent.EvaluateMetrics(IDataView data, String labelColumn)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\n[Source=AutoML, Kind=Trace] Evaluating pipeline xf=ColumnConcatenating{ col=Features:x,y} xf=Normalizing{ col=Features:Features} tr=SdcaLogisticRegressionBinary{}  cache=+\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ColumnConcatenating{ col=Features:x,y} xf=Normalizing{ col=Features:Features} tr=SdcaLogisticRegressionBinary{}  cache=+ . Exception: System.ArgumentOutOfRangeException: AUC is not definied when there is no positive class in the data\r\nParameter name: PosSample\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.<>c__DisplayClass32_0.<GetAggregatorConsolidationFuncs>b__0(UInt32 stratColKey, ReadOnlyMemory`1 stratColVal, Aggregator agg)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.ProcessData(IDataView data, RoleMappedSchema schema, Func`2 activeColsIndices, TAgg aggregator, AggregatorDictionaryBase[] dictionaries)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.AutoML.BinaryMetricsAgent.EvaluateMetrics(IDataView data, String labelColumn)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.AucAggregatorBase`1.ComputeWeightedAuc(Double& unweighted)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Aggregator.Finish()\r\n[Source=AutoML, Kind=Trace] 2\t­ҐязЁб«®\t00:00:06.9448234\txf=ColumnConcatenating{ col=Features:x,y} xf=Normalizing{ col=Features:Features} tr=SdcaLogisticRegressionBinary{}  cache=+\r\n|2    SdcaLogisticRegressionBinary         ­ҐязЁб«® ­ҐязЁб«® ­ҐязЁб«®  ­ҐязЁб«®       7,0          0             |\r\nSystem.ArgumentOutOfRangeException: AUC is not definied when there is no positive class in the data\r\nParameter name: PosSample\r\n   at Microsoft.ML.Data.EvaluatorBase`1.AucAggregatorBase`1.ComputeWeightedAuc(Double& unweighted)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Aggregator.Finish()\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.<>c__DisplayClass32_0.<GetAggregatorConsolidationFuncs>b__0(UInt32 stratColKey, ReadOnlyMemory`1 stratColVal, Aggregator agg)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.ProcessData(IDataView data, RoleMappedSchema schema, Func`2 activeColsIndices, TAgg aggregator, AggregatorDictionaryBase[] dictionaries)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.AutoML.BinaryMetricsAgent.EvaluateMetrics(IDataView data, String labelColumn)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\n[Source=AutoML, Kind=Trace] Evaluating pipeline xf=ColumnConcatenating{ col=Features:x,y} tr=LightGbmBinary{}  cache=-\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ColumnConcatenating{ col=Features:x,y} tr=LightGbmBinary{}  cache=- . Exception: System.ArgumentNullException: Value cannot be null.\r\nParameter name: items\r\n   at System.Collections.Immutable.Requires.FailArgumentNullException(String parameterName)\r\n   at System.Collections.Immutable.ImmutableArray.Create[T](T[] items, Int32 start, Int32 length)\r\n   at Microsoft.ML.Trainers.FastTree.RegressionTreeBase..ctor(InternalRegressionTree tree)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.<>c.<CreateTreeEnsembleFromInternalDataStructure>b__5_0(InternalRegressionTree tree)\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsemble`1..ctor(IEnumerable`1 trees, IEnumerable`1 treeWeights, Double bias)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.CreateTreeEnsembleFromInternalDataStructure()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.CreatePredictor()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\n[Source=AutoML, Kind=Trace] 3\t­ҐязЁб«®\t00:00:00.1836263\txf=ColumnConcatenating{ col=Features:x,y} tr=LightGbmBinary{}  cache=-\r\n|3    LightGbmBinary                       ­ҐязЁб«® ­ҐязЁб«® ­ҐязЁб«®  ­ҐязЁб«®       0,2          0             |\r\nSystem.ArgumentNullException: Value cannot be null.\r\n   at System.Collections.Immutable.Requires.FailArgumentNullException(String parameterName)\r\nParameter name: items\r\n   at System.Collections.Immutable.ImmutableArray.Create[T](T[] items, Int32 start, Int32 length)\r\n   at Microsoft.ML.Trainers.FastTree.RegressionTreeBase..ctor(InternalRegressionTree tree)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.<>c.<CreateTreeEnsembleFromInternalDataStructure>b__5_0(InternalRegressionTree tree)\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsemble`1..ctor(IEnumerable`1 trees, IEnumerable`1 treeWeights, Double bias)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.CreateTreeEnsembleFromInternalDataStructure()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.CreatePredictor()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\nException occured while exploring pipelines:\r\nTraining failed with the exception: System.ArgumentNullException: Value cannot be null.\r\nParameter name: items\r\n   at System.Collections.Immutable.Requires.FailArgumentNullException(String parameterName)\r\n   at System.Collections.Immutable.ImmutableArray.Create[T](T[] items, Int32 start, Int32 length)\r\n   at Microsoft.ML.Trainers.FastTree.RegressionTreeBase..ctor(InternalRegressionTree tree)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.<>c.<CreateTreeEnsembleFromInternalDataStructure>b__5_0(InternalRegressionTree tree)\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsemble`1..ctor(IEnumerable`1 trees, IEnumerable`1 treeWeights, Double bias)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.CreateTreeEnsembleFromInternalDataStructure()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.CreatePredictor()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\nSystem.InvalidOperationException: Training failed with the exception: System.ArgumentNullException: Value cannot be null.\r\nParameter name: items\r\n   at System.Collections.Immutable.Requires.FailArgumentNullException(String parameterName)\r\n   at System.Collections.Immutable.ImmutableArray.Create[T](T[] items, Int32 start, Int32 length)\r\n   at Microsoft.ML.Trainers.FastTree.RegressionTreeBase..ctor(InternalRegressionTree tree)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.<>c.<CreateTreeEnsembleFromInternalDataStructure>b__5_0(InternalRegressionTree tree)\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsemble`1..ctor(IEnumerable`1 trees, IEnumerable`1 treeWeights, Double bias)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.CreateTreeEnsembleFromInternalDataStructure()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmBinaryTrainer.CreatePredictor()\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, AutoMLLogger logger)\r\n   at Microsoft.ML.CLI.CodeGenerator.CodeGenerationHelper.GenerateCode()\r\n   at Microsoft.ML.CLI.Program.<>c__DisplayClass1_0.<Main>b__0(NewCommandSettings options)\r\nPlease see the log file for more info.\r\nExiting ...`","Url":"https://github.com/dotnet/machinelearning/issues/3913","RelatedDescription":"Open issue \"Training step failed: AutoML should return more meaningful errors which can be understood easily by users\" (#3913)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-28T05:30:39.5997172Z","RunDurationInMilliseconds":771}