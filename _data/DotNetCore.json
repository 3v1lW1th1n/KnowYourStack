{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January Preview of Quality Rollup","PublishedOn":"2020-01-23T22:48:37+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the January 2020 Preview of Quality Rollup Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1","PublishedOn":"2020-01-14T20:21:23+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2020 Update. These updates also contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are...","Href":"https://devblogs.microsoft.com/dotnet/net-core-january-2020/","RawContent":null},{"Title":".NET Framework January Security and Quality Rollup","PublishedOn":"2020-01-14T19:13:47+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the January 2020 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nCVE-2020-0605, CVE-2020-0606, CVE-2020-0646 – .NET Framework Remote Code Execution\nA remote...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/","RawContent":null},{"Title":"Collecting and analyzing memory dumps","PublishedOn":"2020-01-13T21:14:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Building upon the diagnostics improvements introduced in .NET Core 3.1, we&#8217;ve introduced a new tool for collecting heap dumps from a running .NET Core process.\nIn a previous blog post we...","Href":"https://devblogs.microsoft.com/dotnet/collecting-and-analyzing-memory-dumps/","RawContent":null},{"Title":"An Introduction to DataFrame","PublishedOn":"2019-12-16T16:00:04+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Last month, we announced .NET support for Jupyter notebooks, and showed how to use them to work with .NET for Apache Spark and ML.NET. Today, we&#8217;re announcing the preview of a DataFrame type for...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-dataframe/","RawContent":null},{"Title":"ConfigureAwait FAQ","PublishedOn":"2019-12-12T04:31:21+00:00","CommentsCount":46,"FacebookCount":0,"Summary":".NET added async/await to the languages and libraries over seven years ago. In that time, it&#8217;s caught on like wildfire, not only across the .NET ecosystem, but also being replicated in a myriad...","Href":"https://devblogs.microsoft.com/dotnet/configureawait-faq/","RawContent":null},{"Title":"An Introduction to System.Threading.Channels","PublishedOn":"2019-12-12T03:52:18+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"&#8220;Producer/consumer&#8221; problems are everywhere, in all facets of our lives. A line cook at a fast food restaurant, slicing tomatoes that are handed off to another cook to assemble a burger,...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-system-threading-channels/","RawContent":null},{"Title":".NET Framework December 2019 Security and Quality Rollup","PublishedOn":"2019-12-10T21:39:52+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the December 2019 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the latest security...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/","RawContent":null},{"Title":"We made Windows Server Core container images >40% smaller","PublishedOn":"2019-12-09T21:50:23+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Over the past year, we&#8217;ve been working with the Windows Server team to make Windows Server Core container images a lot smaller. They are now 40% smaller! The Windows Server team has already...","Href":"https://devblogs.microsoft.com/dotnet/we-made-windows-server-core-container-images-40-smaller/","RawContent":null},{"Title":"GC Perf Infrastructure – Part 1","PublishedOn":"2019-12-09T09:33:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We open sourced our new GC Perf Infrastructure! It’s now part of the dotnet performance repo. I’ve been meaning to write about it ‘cause some curious minds had been asking when they could use it after...","Href":"https://devblogs.microsoft.com/dotnet/gc-perf-infrastructure-part-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"11465516205","Type":"IssuesEvent","CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11452253839","Type":"IssuesEvent","CreatedAt":"2020-02-06T13:21:11","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Reopened issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11358893853","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:36:29","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11358890799","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:35:17","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Opened issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11357395218","Type":"IssuesEvent","CreatedAt":"2020-01-25T04:38:47","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357323121","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:54:25","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Opened issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357320828","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:52:51","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11334200867","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:30","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Merged pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"11334196288","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:01","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Merged pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"11334180047","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:07:14","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Merged pull request \"Update Teams Link\" (#156) at dotnet/foundation","RelatedBody":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`"},{"Id":"11334176612","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:52","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Merged pull request \"Link Reactive Extensions to new github repo\" (#157) at dotnet/foundation","RelatedBody":""},{"Id":"11334171592","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:20","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Merged pull request \"Add Akka.NET to DNF\" (#158) at dotnet/foundation","RelatedBody":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11491466131","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:02:45","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Opened issue \"February 2020 .NET Updates\" (#151) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11275368710","Type":"IssuesEvent","CreatedAt":"2020-01-14T20:37:01","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Opened issue \"January 2020 .NET Updates\" (#150) at dotnet/announcements","RelatedBody":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1-download.md) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2-download.md) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15-download.md) )\r\n\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11274184940","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:14","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149) at dotnet/announcements","RelatedBody":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11274183716","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:05","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11596762442","Type":"PullRequestEvent","CreatedAt":"2020-02-24T19:34:33","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Opened pull request \"Port fix for dotnet/runtime#32059 to release/3.1\" (#28024) at dotnet/coreclr","RelatedBody":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#."},{"Id":"11580259472","Type":"PullRequestEvent","CreatedAt":"2020-02-21T19:44:59","Actor":"hoyosjs","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Opened pull request \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023) at dotnet/coreclr","RelatedBody":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea "},{"Id":"11558442237","Type":"PullRequestEvent","CreatedAt":"2020-02-19T17:22:50","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to servicing-28516-03, servicing-28516-10, respectively (release/2.1)\" (#28022) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11597507486","Type":"PullRequestEvent","CreatedAt":"2020-02-24T21:01:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13264","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13264) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/24/2020 5:44 AM\r\n- **Commit**: f1ae79d83d0c08d08472e9f7ba030a119c4d9458\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20123.1\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11590444461","Type":"PullRequestEvent","CreatedAt":"2020-02-24T06:45:26","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13264","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13264) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/24/2020 5:44 AM\r\n- **Commit**: f1ae79d83d0c08d08472e9f7ba030a119c4d9458\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20123.1\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11588296194","Type":"PullRequestEvent","CreatedAt":"2020-02-23T19:34:24","Actor":"msftbot[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13263","RelatedDescription":"Merged pull request \"Update to 3.1.2 runtime\" (#13263) at dotnet/cli","RelatedBody":""},{"Id":"11581578441","Type":"PullRequestEvent","CreatedAt":"2020-02-21T23:04:39","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13262","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13262) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200221.9\r\n- **Date Produced**: 2/21/2020 9:50 PM\r\n- **Commit**: e167e37a2a6a7b9b381c462c7ccfd5e653c045e2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20121.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"11581535857","Type":"PullRequestEvent","CreatedAt":"2020-02-21T22:56:42","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13263","RelatedDescription":"Opened pull request \"Update to 3.1.2 runtime\" (#13263) at dotnet/cli","RelatedBody":""},{"Id":"11581392689","Type":"PullRequestEvent","CreatedAt":"2020-02-21T22:30:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13262","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13262) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200221.9\r\n- **Date Produced**: 2/21/2020 9:50 PM\r\n- **Commit**: e167e37a2a6a7b9b381c462c7ccfd5e653c045e2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20121.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"11580403896","Type":"PullRequestEvent","CreatedAt":"2020-02-21T20:03:58","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13261","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13261) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200221.2\r\n- **Date Produced**: 2/21/2020 6:41 PM\r\n- **Commit**: d6413d67e43fcf01a86c0fa470d688dbaeaa4bac\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20121.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"11593291125","Type":"PullRequestEvent","CreatedAt":"2020-02-24T13:20:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1719","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1719) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/23/2020 2:05 PM\r\n- **Commit**: 85d76351b1f0245c9f331f72219d12e8e2d48e72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20123.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11593124512","Type":"PullRequestEvent","CreatedAt":"2020-02-24T13:00:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1719","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1719) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/23/2020 2:05 PM\r\n- **Commit**: 85d76351b1f0245c9f331f72219d12e8e2d48e72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20123.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11585912131","Type":"IssuesEvent","CreatedAt":"2020-02-23T03:53:47","Actor":"cfbao","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1718","RelatedDescription":"Opened issue \"Where are the authoritative *descriptions* of .NET Standard APIs?\" (#1718) at dotnet/standard","RelatedBody":"This question may be academic in nature, but it's bugging me nonetheless.\r\n\r\nAccording to comments in netstandardX.X_ref.md files in [docs/versions](https://github.com/dotnet/standard/tree/master/docs/versions) and #1053, the authoritative definition of .NET Standard is in [src/netstandard/ref](https://github.com/dotnet/standard/tree/master/src/netstandard/ref). However, this is only a list of APIs, without any description of what each of them should do.\r\nIf this is the totality of .NET Standard spec, couldn't someone (theoretically, I know) build their own .NET implementation, with the same set of APIs but with wildly different behaviours, and still claim conformance?\r\n\r\nI tried running \"build.cm\" in the repo, and noticed in the \"artifacts\" folder there's a \"netstandard.xml\" file. It seems to contain all APIs including their descriptions.\r\nShould this be published somewhere and considered the authoritative definition of .NET Standard instead?\r\nWhat's the source of the descriptions included in this .xml file? I can't find it anywhere in this repo. Is the build process pulling external sources? (I noticed it downloaded dotnet SDK)\r\nShould this external source be included in this repo for completeness?"},{"Id":"11583743877","Type":"PullRequestEvent","CreatedAt":"2020-02-22T13:10:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1717","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1717) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200221.6\r\n- **Date Produced**: 2/22/2020 12:56 AM\r\n- **Commit**: f83aa9749a531bf771a98e5bdace55b31a9bb2b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20121.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11583718162","Type":"PullRequestEvent","CreatedAt":"2020-02-22T13:00:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1717","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1717) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200221.6\r\n- **Date Produced**: 2/22/2020 12:56 AM\r\n- **Commit**: f83aa9749a531bf771a98e5bdace55b31a9bb2b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20121.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11581341669","Type":"IssuesEvent","CreatedAt":"2020-02-21T22:21:41","Actor":"gregmac","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1716","RelatedDescription":"Opened issue \"IReadOnlyList<T> should implement IndexOf(T item);\" (#1716) at dotnet/standard","RelatedBody":"Currently `int IndexOf(T item);` is implemented in `IList<T>`, but not `IReadOnlyList<T>`. There's several cases where this would be useful to have, and there doesn't seem to be any clear reason it's not implemented in `IReadOnlyList<T>`. \r\n\r\nMany (if not all?) of the built-in usages of `IReadOnlyList<T>` also implement `IList<T>`, so at least within the .NET codebase it seems this would have very little impact.\r\n"},{"Id":"11576893348","Type":"PullRequestEvent","CreatedAt":"2020-02-21T13:00:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1715","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1715) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200220.2\r\n- **Date Produced**: 2/20/2020 10:40 PM\r\n- **Commit**: df24cd9b34682b5509df5a08ef8a8952e5a4f623\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20120.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11597189523","Type":"PullRequestEvent","CreatedAt":"2020-02-24T20:21:19","Actor":"omajid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42872","RelatedDescription":"Opened pull request \"Add Fedora 33 runtime ids\" (#42872) at dotnet/corefx","RelatedBody":"Fedora 32 is gearing up for release[1], and in-development version of Fedora has been offiically labelled as being Fedora 33:\r\n\r\n    $ podman run -it fedora:33 cat /etc/os-release\r\n    NAME=Fedora\r\n    VERSION=\"33 (Container Image)\"\r\n    ID=fedora\r\n    VERSION_ID=33\r\n    VERSION_CODENAME=\"\"\r\n    PLATFORM_ID=\"platform:f33\"\r\n    PRETTY_NAME=\"Fedora 33 (Container Image)\"\r\n    ANSI_COLOR=\"0;34\"\r\n    LOGO=fedora-logo-icon\r\n    CPE_NAME=\"cpe:/o:fedoraproject:fedora:33\"\r\n    HOME_URL=\"https://fedoraproject.org/\"\r\n    DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/\"\r\n    SUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\n    BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n    REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\n    REDHAT_BUGZILLA_PRODUCT_VERSION=rawhide\r\n    REDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=rawhide\r\n    PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\n    VARIANT=\"Container Image\"\r\n    VARIANT_ID=container\r\n\r\n[1] https://fedorapeople.org/groups/schedule/f-32/f-32-key-tasks.html"},{"Id":"11596569086","Type":"PullRequestEvent","CreatedAt":"2020-02-24T19:12:41","Actor":"omajid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42871","RelatedDescription":"Opened pull request \"Add Fedora 33 runtime ids\" (#42871) at dotnet/corefx","RelatedBody":"Fedora 32 is gearing up for release[1], and in-development version of Fedora has been officially labelled as being Fedora 33:\r\n\r\n    $ podman run -it fedora:33 cat /etc/os-release\r\n    NAME=Fedora\r\n    VERSION=\"33 (Container Image)\"\r\n    ID=fedora\r\n    VERSION_ID=33\r\n    VERSION_CODENAME=\"\"\r\n    PLATFORM_ID=\"platform:f33\"\r\n    PRETTY_NAME=\"Fedora 33 (Container Image)\"\r\n    ANSI_COLOR=\"0;34\"\r\n    LOGO=fedora-logo-icon\r\n    CPE_NAME=\"cpe:/o:fedoraproject:fedora:33\"\r\n    HOME_URL=\"https://fedoraproject.org/\"\r\n    DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/\"\r\n    SUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\n    BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n    REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\n    REDHAT_BUGZILLA_PRODUCT_VERSION=rawhide\r\n    REDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=rawhide\r\n    PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\n    VARIANT=\"Container Image\"\r\n    VARIANT_ID=container\r\n\r\n[1] https://fedorapeople.org/groups/schedule/f-32/f-32-key-tasks.html\r\n\r\nThis is a backport of https://github.com/dotnet/runtime/pull/32752"},{"Id":"11581407688","Type":"PullRequestEvent","CreatedAt":"2020-02-21T22:33:06","Actor":"buyaa-n","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42870","RelatedDescription":"Opened pull request \"Remove local header compressed/uncompressed length validations\" (#42870) at dotnet/corefx","RelatedBody":"Port from https://github.com/dotnet/runtime/pull/32149. Fixes https://github.com/dotnet/runtime/issues/1094\r\n\r\n### Description\r\nWe had and issue https://github.com/dotnet/runtime/issues/27741 reported that .NET core ZipArchive API extracting a tampered zip file without any error, where Uncompressed size was tampered to have much smaller size than real/extracted size. When trying to decompress the tampered zip with different tools some were throwing error, some just restricting decompressed output by given uncompressed size. As it could cause security issue we added strict validation of Compressed and Uncompressed size to throw if it unmatched, also limited the decompressed output by uncompressed size.  \r\n\r\n### Customer Impact\r\nThrowing error for unmatched compressed/uncompressed sizes in local header vs central directory record was a breaking change. Turns out zip format specification, especially file local header format is not that clear in some area and not strictly followed by different zip producing tools. Several customers complaining that they cannot read a zip anymore which they were able to read before 3.0. As validation was not mandatory when we restricting the output stream by uncompressed size we are removing the validation we added in 3.0\r\n\r\n### Regression\r\nNo. \r\nAs we are removing a restriction, nothing added so no regression should happen\r\n \r\n### Testing\r\nRemoved related tests, no new test needed\r\n\r\n### Risk\r\nCustomer might read corrupted zip file with updated compressed/uncompressed size from real size, but as we have appropriate restriction for reading compressed stream and output decompressed stream that wouldn't be a big issue.\r\n\r\ncc @ericstj"},{"Id":"11573486372","Type":"PullRequestEvent","CreatedAt":"2020-02-21T03:47:09","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42868","RelatedDescription":"Merged pull request \"Fixing regression caused by servicing of System.Data.SqlClient package\" (#42868) at dotnet/corefx","RelatedBody":"cc: @ericstj @danmosemsft @Pilchie @Anipik @wtgodbe \r\n\r\nFor our 3.0 release (and 3.1) we made a major change on how we generate our compile and runtime .NET Framework shims (PR https://github.com/dotnet/corefx/pull/37550). We did this  in order to stop using assembly re-writing and instead to use source generation. Back when we did that, we didn't catch one diff which was that our desktop runtime shims would now reference the netcoreapp vertical contracts and their assembly versions, instead of just using 0.0.0.0 as we used to do with assembly re-writing. This caused an issue that if today we service one of our OOB packages and increase the assembly version, and this assembly happens to be referenced by one of our .NET Framework shims, then now the shims will have a hard dependency on that version of the OOB package and won't work with previous versions of the package. The first instance we've seen is now in 3.1.2 when we serviced System.Data.SqlClient (new assembly version is 4.6.1.1) and it is referenced by our System.Data shim. This means that if you need to load the System.Data shim, are running in 3.1.2 runtime, and reference a System.Data.SqlClient package which is older than 4.8.1 you will hit an exception like:\r\n\r\n```\r\nSystem.IO.FileLoadException: Could not load file or assembly 'System.Data.SqlClient, Version=4.6.1.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The located assembly's manifest definition does not match the assembly reference. (0x80131040)\r\n```\r\n\r\nThis will happen because the System.Data is trying to load System.Data.SqlClient new version, but the consuming app was referencing an older version of the package (for example: 4.8.0 which only contains 4.6.1.0 assembly)\r\n\r\nThis fix will address this regression only, by making System.Data shim to reference 4.6.1.0 version again so that package 4.8.0 will work again, however, older versions of the package will still not work (as was the case already since we initially shipped 3.0 and 3.1). There is a much larger list of assemblies that might hit this issue if they get serviced in the future, so after this regression is fixed, we will work in master branch in order to provide a future-proof fix that will work for all cases."},{"Id":"11573341038","Type":"PullRequestEvent","CreatedAt":"2020-02-21T03:13:32","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42869","RelatedDescription":"Opened pull request \"Do not null ref or throw index out of range exception when deserializing to char.\" (#42869) at dotnet/corefx","RelatedBody":"Get the changes from 5.0/master found in https://github.com/dotnet/runtime/pull/528 \r\n\r\n## Description\r\n\r\nAdd a null/empty string check when deserializing JSON strings into a `char` property so that we don't null ref or throw an index of out of range exception. Intentionally left out the `string.length > 1` check as that could potentially break someone.\r\n\r\n## Customer Impact\r\n\r\nMost people are very unlikely to have a catch handler for NullReferenceException, IndexOutOfRangeException, or InvalidOperationException (and in the first two, it certainly doesn't make sense for them to). So in server scenarios customers still get an HTTP 500.\r\nNow, the the `JsonConverter<char>` throws an `InvalidOperationException` which the wraps the into an outer `JsonException` so that customers can have handlers to catch that. For them, we’d turn a crash into success.\r\n\r\nDeserializing into a char is now more reliable when the input JSON payload is provided by the user which may contain unexpected values.\r\n```C#\r\npublic class MyPoco\r\n{\r\n    public char Character { get; set; }\r\n}\r\n\r\npublic static void TestDeserializeToChar()\r\n{\r\n    // Before (3.1): NullReferenceException\r\n    // After (5.0): JsonException\r\n    JsonSerializer.Deserialize<MyPoco>(\"{\\\"Character\\\": null}\");\r\n\r\n    // Before (3.1): IndexOutOfRangeException\r\n    // After (5.0): JsonException\r\n    JsonSerializer.Deserialize<MyPoco>(\"{\\\"Character\\\": \\\"\\\"}\");\r\n\r\n    // Before (3.1): Set Character to the first character - 'a'\r\n    // After (5.0): JsonException\r\n    JsonSerializer.Deserialize<MyPoco>(\"{\\\"Character\\\": \\\"abc\\\"}\");\r\n}\r\n```\r\n\r\nThere is a workaround for the user today, where they could create and register their own `JsonConverter<char>` which does the right checks. However, doing so, in all the entry points of the JsonSerializer (including within ASP.NET web app) would become cumbersome.\r\n\r\n## Regression\r\n\r\nNo. The bug existed in the deserialization behavior since the initial release of S.T.Json as part of 3.0.\r\n\r\n### Testing\r\n\r\nAdded appropriate unit tests and the behavior in master meets user expectations such as https://github.com/dotnet/runtime/issues/32429\r\nThis only affects deserialization/reading.\r\n\r\n## Risk\r\n\r\n**Low** given it is a very targeted fix with no regression. We are going from an unrecoverable/less user friendly exception to a more user-friendly exception that the caller can reason about.\r\n\r\ncc @ericstj "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"11600155707","Type":"IssuesEvent","CreatedAt":"2020-02-25T04:48:58","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41218","RelatedDescription":"Closed issue \"Cancelling Ctrl+. operation causes a gold bar\" (#41218) at dotnet/roslyn","RelatedBody":"**Version Used:** Version 16.5.0 Preview 3.0 [29723.142.master], Roslyn 3.5.0-beta3-20063-01+1f921815c4544e703bf721cb8e6c86d5cf6bda63\r\n\r\n1. Do Ctrl+. on something that causes our threaded wait dialog to appear.\r\n2. Click cancel.\r\n\r\n**Expected:** it cancels nicely.\r\n\r\n**Actual:** you get a gold bar with this stack below. This likely means that we're throwing an OperationCancelledException with a cancellation token that isn't the one that was originally handed to us.\r\n\r\n```\r\nSystem.OperationCanceledException: The operation was canceled.\r\n at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n at Microsoft.VisualStudio.Threading.ThreadingTools.<WithCancellationSlow>d__8.MoveNext() --- End of stack trace from previous location where exception was thrown ---\r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at Microsoft.VisualStudio.LanguageServices.Implementation.VisualStudioWorkspaceStatusServiceFactory.Service.<WaitUntilFullyLoadedAsync>d__7.MoveNext() --- End of stack trace from previous location where exception was thrown ---\r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\n at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActions(ISuggestedActionCategorySet requestedActionCategories, SnapshotSpan range, IUIThreadOperationContext operationContext, CancellationToken cancellationToken)\r\n at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActions(ISuggestedActionCategorySet requestedActionCategories, SnapshotSpan range, IUIThreadOperationContext operationContext)\r\n at Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.<>c__DisplayClass40_4.<TryGetSuggestedActionSets>b__1()\r\n at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint[T](Object errorSource, Func`1 call, T valueOnThrow)\r\n  --- End of stack trace from previous location where exception was thrown ---at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```"},{"Id":"11600078323","Type":"PullRequestEvent","CreatedAt":"2020-02-25T04:31:25","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41922","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#41922) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11599992161","Type":"IssuesEvent","CreatedAt":"2020-02-25T04:11:53","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41458","RelatedDescription":"Closed issue \"TryGetSuggestedActionSets does not handle cancellation correctly\" (#41458) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.5.0 Preview 3.0 [29804.240.master]\r\n\r\nThe following exception is reported in activity log (info bar is displayed).\r\n```\r\nSystem.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at System.Threading.ManualResetEventSlim.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.SpinThenBlockingWait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.InternalWait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground[T](Task`1 task, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetCodeFixes(ITextBufferSupportsFeatureService supportsFeatureService, ISuggestedActionCategorySet requestedActionCategories, Workspace workspace, Document document, SnapshotSpan range, Func`2 addOperationScope, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActions(ISuggestedActionCategorySet requestedActionCategories, SnapshotSpan range, IUIThreadOperationContext operationContext, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActions(ISuggestedActionCategorySet requestedActionCategories, SnapshotSpan range, IUIThreadOperationContext operationContext)\r\n   at Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.&lt;&gt;c__DisplayClass40_4.&lt;TryGetSuggestedActionSets&gt;b__1()\r\n   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint[T](Object errorSource, Func`1 call, T valueOnThrow)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```"},{"Id":"11599991067","Type":"PullRequestEvent","CreatedAt":"2020-02-25T04:11:37","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41921","RelatedDescription":"Merged pull request \"Merge release/dev16.5 to release/dev16.5-vs-deps\" (#41921) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.5 into release/dev16.5-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-to-release/dev16.5-vs-deps\ngit reset --hard upstream/release/dev16.5-vs-deps\ngit merge upstream/release/dev16.5\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-to-release/dev16.5-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11599990773","Type":"IssuesEvent","CreatedAt":"2020-02-25T04:11:33","Actor":"AArnott","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41925","RelatedDescription":"Opened issue \"C# xml \"see cref\" incorrectly resolves to internal type (or fails to resolve)\" (#41925) at dotnet/roslyn","RelatedBody":"**Version Used**: 16.6.0 Preview 1.0 (29823.26.master)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a solution with three projects. \r\n1. Two libraries define the same type, but one is internal while the other is public.\r\n2. The third project references both of the other libraries, and references the (public) type both within a method body and in its xml doc comment.\r\n\r\nSee minimal repro: [RoslynInternalRepro.zip](https://github.com/dotnet/roslyn/files/4248029/RoslynInternalRepro.zip)\r\n\r\n**Expected Behavior**:\r\n\r\nNo compile errors or warnings.\r\nGo to Definition on either reference to the type defined in both referenced projects should always jump to the *public* type, since that's the one we have visibility to.\r\n\r\n**Actual Behavior**:\r\n\r\nIn the minimal repro, Go To Definition on the xml doc comment's cref jumps to the *internal* type.\r\n\r\nIn the original repro solution (in the VS repo), it wouldn't even compile. It complained about the cref, even though the method body itself had no problem referencing the right one:\r\n\r\n> error CS0419: Ambiguous reference in cref attribute: 'VsTaskLibraryHelper'. Assuming 'VsTaskLibraryHelper', but could have also matched other overloads including 'VsTaskLibraryHelper'."},{"Id":"11599764354","Type":"PullRequestEvent","CreatedAt":"2020-02-25T03:22:30","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41920","RelatedDescription":"Merged pull request \"Merge release/dev16.5-vs-deps to master-vs-deps\" (#41920) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.5-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.5-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11599750073","Type":"IssuesEvent","CreatedAt":"2020-02-25T03:19:32","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41924","RelatedDescription":"Opened issue \"Searching for \"unimported\" in options doesn't show the associated setting\" (#41924) at dotnet/roslyn","RelatedBody":"![image](https://user-images.githubusercontent.com/1103906/75212051-d584ee80-57d9-11ea-9b9b-ed8977770ee1.png)\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11597041621","Type":"IssuesEvent","CreatedAt":"2020-02-24T20:03:55","Actor":"wooowchik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8007","RelatedDescription":"Closed issue \"Set IlcPath environment on .csproj\" (#8007) at dotnet/corert","RelatedBody":"I don't understand how on dotnet i need to set up the IlcPath environment,if my **Windows_NT.x64.Debug** folder is in D:\\corert-master\\bin\\Windows_NT.x64.Debug.\r\nAlso don't get what do you mean by : \r\n\"pass an extra /p:IlcPath=<repo_root>\\bin\\Windows_NT.x64.Debug argument to all dotnet commands below.\"\r\nThank for your help."},{"Id":"11594283096","Type":"IssuesEvent","CreatedAt":"2020-02-24T15:05:04","Actor":"wooowchik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8007","RelatedDescription":"Opened issue \"Set IlcPath environment on .csproj\" (#8007) at dotnet/corert","RelatedBody":"I don't understand how on dotnet i need to set up the IlcPath environment,if my **Windows_NT.x64.Debug** folder is in D:\\corert-master\\bin\\Windows_NT.x64.Debug.\r\nI also don't get what do you mean by : \r\n\"pass an extra /p:IlcPath=<repo_root>\\bin\\Windows_NT.x64.Debug argument to all dotnet commands below.\"\r\nThank for your help."},{"Id":"11588268305","Type":"PullRequestEvent","CreatedAt":"2020-02-23T19:24:55","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8006","RelatedDescription":"Opened pull request \"Update instructions how to build for Wasm\" (#8006) at dotnet/corert","RelatedBody":""},{"Id":"11587690792","Type":"PullRequestEvent","CreatedAt":"2020-02-23T16:09:22","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8001","RelatedDescription":"Merged pull request \"Update compiler from dotnet/runtime\" (#8001) at dotnet/corert","RelatedBody":"This also changes the mechanism by which we pick up RyuJIT - we now get it from Microsoft.NETCore.App.Runtime because Microsoft.NETCore.Jit was discontinued."},{"Id":"11587688422","Type":"IssuesEvent","CreatedAt":"2020-02-23T16:08:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8005","RelatedDescription":"Opened issue \"Non-deterministic failure in EnumerateEnvironmentVariables test\" (#8005) at dotnet/corert","RelatedBody":"Seen in #8001\r\n\r\n```\r\n2020-02-23T08:23:25.3097153Z    System.Tests.GetEnvironmentVariable.EnumerateEnvironmentVariables(target: Machine) [FAIL]\r\n2020-02-23T08:23:25.3131821Z       Assert.Equal() Failure\r\n2020-02-23T08:23:25.3136047Z       Expected: rlkpxmt5.l41\r\n2020-02-23T08:23:25.3147233Z       Actual:   (null)\r\n2020-02-23T08:23:25.3158030Z       Stack Trace:\r\n2020-02-23T08:23:25.3173213Z             at System.Tests.GetEnvironmentVariable.EnumerateEnvironmentVariables(EnvironmentVariableTarget) + 0x213\r\n2020-02-23T08:23:25.3176342Z             at xunit.console.netcore!<BaseAddress>+0x881097\r\n2020-02-23T08:23:25.3177870Z             at System.InvokeUtils.CalliIntrinsics.Call(IntPtr, Object, IntPtr, InvokeUtils.ArgSetupState&, Boolean) + 0x47\r\n2020-02-23T08:23:25.3179432Z             at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x2fd\r\n2020-02-23T08:23:38.5566093Z Finished:    System.Runtime.Extensions.Tests\r\n```"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11600309508","Type":"PullRequestEvent","CreatedAt":"2020-02-25T05:21:35","Actor":"xontab","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/10702","RelatedDescription":"Closed pull request \"Added dotnet new list of installed templates for ZSH script\" (#10702) at dotnet/sdk","RelatedBody":"* Added functionality to display installed templates when dotnet new command is used for ZSH completion script."},{"Id":"11599882585","Type":"PullRequestEvent","CreatedAt":"2020-02-25T03:47:25","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/10711","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview1] Update dependecies from latest for preview1\" (#10711) at dotnet/sdk","RelatedBody":""},{"Id":"11598488801","Type":"PullRequestEvent","CreatedAt":"2020-02-24T23:15:14","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10711","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview1] Update dependecies from latest for preview1\" (#10711) at dotnet/sdk","RelatedBody":""},{"Id":"11598476503","Type":"PullRequestEvent","CreatedAt":"2020-02-24T23:13:15","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/10710","RelatedDescription":"Closed pull request \"[release/5.0.1xx-preview1] Update dependencies from aspnet/websdk\" (#10710) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:35c654d4-fe48-4f3e-ee74-08d7b0df6fcb)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 35c654d4-fe48-4f3e-ee74-08d7b0df6fcb\r\n- **Build**: 20200224.2\r\n- **Date Produced**: 2/24/2020 10:13 PM\r\n- **Commit**: 566c7b7db0f445f49599e9c42351347ef65a08f8\r\n- **Branch**: refs/heads/release/5.0.1xx-preview1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web** -> 5.0.100-preview.1.20124.2\r\n\r\n[marker]: <> (End:35c654d4-fe48-4f3e-ee74-08d7b0df6fcb)\r\n\r\n"},{"Id":"11598342846","Type":"IssuesEvent","CreatedAt":"2020-02-24T22:52:27","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3639","RelatedDescription":"Closed issue \"Enable embedded resource DependentUpon convention on .NET Framework\" (#3639) at dotnet/sdk","RelatedBody":"Shouldn't this also be enabled for .NETFramework? Without it, embedded resource names are changing between classic and SDK-style projects. (Originally reported in https://github.com/aspnet/EntityFramework6/issues/1258)\r\n\r\nhttps://github.com/dotnet/sdk/blob/25d8a32f0c357b8e6ccaa39fba27d5c61364e26a/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L109-L112\r\n\r\ncc @divega @Pilchie @ajcvickers @BenVillalobos"},{"Id":"11598338640","Type":"PullRequestEvent","CreatedAt":"2020-02-24T22:51:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10710","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview1] Update dependencies from aspnet/websdk\" (#10710) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:35c654d4-fe48-4f3e-ee74-08d7b0df6fcb)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 35c654d4-fe48-4f3e-ee74-08d7b0df6fcb\r\n- **Build**: 20200224.2\r\n- **Date Produced**: 2/24/2020 10:13 PM\r\n- **Commit**: 566c7b7db0f445f49599e9c42351347ef65a08f8\r\n- **Branch**: refs/heads/release/5.0.1xx-preview1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web** -> 5.0.100-preview.1.20124.2\r\n\r\n[marker]: <> (End:35c654d4-fe48-4f3e-ee74-08d7b0df6fcb)\r\n\r\n"},{"Id":"11598279517","Type":"PullRequestEvent","CreatedAt":"2020-02-24T22:42:56","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/10709","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview1] Update dependencies from dotnet/aspnetcore\" (#10709) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:925d3edc-9be3-4cd6-c9a5-08d7b0e007f5)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 925d3edc-9be3-4cd6-c9a5-08d7b0e007f5\r\n- **Build**: 20200224.5\r\n- **Date Produced**: 2/24/2020 8:29 PM\r\n- **Commit**: 98a853b20131fd59b37076dd3699d8c7f62b24cb\r\n- **Branch**: refs/heads/release/5.0-preview1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.1.20124.5\r\n\r\n[marker]: <> (End:925d3edc-9be3-4cd6-c9a5-08d7b0e007f5)\r\n\r\n"},{"Id":"11597842098","Type":"PullRequestEvent","CreatedAt":"2020-02-24T21:43:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10709","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview1] Update dependencies from dotnet/aspnetcore\" (#10709) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:925d3edc-9be3-4cd6-c9a5-08d7b0e007f5)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 925d3edc-9be3-4cd6-c9a5-08d7b0e007f5\r\n- **Build**: 20200224.5\r\n- **Date Produced**: 2/24/2020 8:29 PM\r\n- **Commit**: 98a853b20131fd59b37076dd3699d8c7f62b24cb\r\n- **Branch**: refs/heads/release/5.0-preview1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.1.20124.5\r\n\r\n[marker]: <> (End:925d3edc-9be3-4cd6-c9a5-08d7b0e007f5)\r\n\r\n"},{"Id":"11597004576","Type":"PullRequestEvent","CreatedAt":"2020-02-24T19:59:52","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/10678","RelatedDescription":"Merged pull request \"Mop-up merge for changes from dotnet/cli and dotnet/toolset\" (#10678) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"552027434","IsPullRequest":false,"CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Number":"159","RawContent":null,"Title":"Add Akka.NET to the DNF project listing","State":"closed","Body":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings.","Url":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159)"},{"Id":"555112784","IsPullRequest":false,"CreatedAt":"2020-01-25T17:36:28","Actor":"oskardudycz","Number":"161","RawContent":null,"Title":"Marten","State":"closed","Body":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation.","Url":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161)"},{"Id":"555038667","IsPullRequest":false,"CreatedAt":"2020-01-25T04:38:47","Actor":"nagytech","Number":"160","RawContent":null,"Title":"Website down","State":"closed","Body":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~","Url":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:29","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#152)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:00","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#153)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2020-01-22T14:07:13","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"closed","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Closed or merged PR \"Update Teams Link\" (#156)"},{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:51","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Closed or merged PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"552026315","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:19","Actor":"nagytech","Number":"158","RawContent":null,"Title":"Add Akka.NET to DNF","State":"closed","Body":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n","Url":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Closed or merged PR \"Add Akka.NET to DNF\" (#158)"},{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"570086508","IsPullRequest":true,"CreatedAt":"2020-02-24T19:34:32","Actor":"AndyAyersMS","Number":"28024","RawContent":null,"Title":"Port fix for dotnet/runtime#32059 to release/3.1","State":"open","Body":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#.","Url":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Open PR \"Port fix for dotnet/runtime#32059 to release/3.1\" (#28024)"},{"Id":"569148773","IsPullRequest":true,"CreatedAt":"2020-02-21T19:44:58","Actor":"hoyosjs","Number":"28023","RawContent":null,"Title":"[3.1 port] Fix debugger crash during unload of assemblies in ALC","State":"open","Body":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea ","Url":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Open PR \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023)"},{"Id":"567714729","IsPullRequest":true,"CreatedAt":"2020-02-19T17:22:49","Actor":"dotnet-maestro-bot","Number":"28022","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28516-03, servicing-28516-10, respectively (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Open PR \"Update CoreClr, CoreFx to servicing-28516-03, servicing-28516-10, respectively (release/2.1)\" (#28022)"},{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-02-18T21:46:38","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"closed","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\n### Customer impact\r\n\r\n- This is a top feedback item for VS on 3.x: [feedback ticket](https://developercommunity.visualstudio.com/content/problem/855101/to-prevent-an-unsafe-abort-popup-appears-often-in.html)\r\n\r\n### Regression?\r\n\r\nYes, regression from 2.x, starting in 3.0\r\n\r\n### Testing\r\n\r\n- It's a timing issue and was reproduced by inducing specific timings in various phases of tiering\r\n- Verified that the timeout does not occur after the fix in the vast majority of cases. Instead, the FuncEval is failed when the lock is held and VS falls back to alternate means for evaluating the expression. See more in risks below.\r\n- Checked debugger-broken stacks at various phases of tiering to verify that the poll for debugger suspension is working as expected\r\n- Standard tests\r\n\r\n### Risks\r\n\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Closed or merged PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"564203743","IsPullRequest":true,"CreatedAt":"2020-02-18T21:32:58","Actor":"GrabYourPitchforks","Number":"28014","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014)"},{"Id":"566357453","IsPullRequest":true,"CreatedAt":"2020-02-18T21:31:54","Actor":"eiriktsarpalis","Number":"28019","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0 [here](https://github.com/dotnet/corefx/pull/34747/files#diff-e388668f95442712879e252fb0d48001R193) - original issue [here](https://github.com/dotnet/runtime/issues/28365)). Reported by 2 customers. \r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28019","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#28019)"},{"Id":"567089433","IsPullRequest":true,"CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Number":"28021","RawContent":null,"Title":"Please ignore this PR, I made a mistake to create this here.","State":"closed","Body":"Please ignore this PR, I made a mistake to create this here.","Url":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed or merged PR \"Please ignore this PR, I made a mistake to create this here.\" (#28021)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-18T18:27:24","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"closed","Body":"## Issue\r\n\r\nrelease/3.1 does not build on newer Linux distros, due to glibc deprecation warnings being treated as errors. The fix for release/3.1 is to disable this warning. (We have proper fix for .NET 5.)\r\n\r\n## Customer Impact\r\n\r\nCustomers building .NET Runtime from sources have to apply private patches to keep the build working.\r\n\r\n## Regression?\r\n\r\nRegression from older Linux distros.\r\n\r\n---\r\n\r\nOn newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-18T18:06:39","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"closed","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed or merged PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"565025740","IsPullRequest":true,"CreatedAt":"2020-02-14T01:45:09","Actor":"dotnet-maestro[bot]","Number":"28018","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018)"},{"Id":"555024664","IsPullRequest":true,"CreatedAt":"2020-02-13T22:26:52","Actor":"briansull","Number":"28003","RawContent":null,"Title":"Port the 5.0 fix for issue #1104","State":"closed","Body":"This is the fix for the 3.1 branch for the runtime issue #1104 \r\nThis a a bug which Sergey Andreenko @sandreenko found where the JIT can\r\noptimize away a range check, allowing an out of bounds read or write.\r\nThe original cause was from PR #23109, where a cut-and-paste typo inverted the \r\ninitialization code for `bool alreadyPresent` in `RangeCheck::IsMonotonicallyIncreasing`\r\n\r\n**Customer Impact**\r\nInvalid code gen that allows an out of bounds read or write.\r\n\r\n**Regression?**\r\nA regression introduced during 3.0 development.\r\n\r\n**Testing**\r\nThe fix has been verified in the runtime repo.\r\n\r\n**Risk**\r\nLow: The fix is straightforward and only impacts 1 line of code.\r\n\r\n**Code Reviewer**\r\n@sandreenko and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/28003","RelatedDescription":"Closed or merged PR \"Port the 5.0 fix for issue #1104\" (#28003)"},{"Id":"564882854","IsPullRequest":true,"CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Number":"28016","RawContent":null,"Title":"update branding for 3.1.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Closed or merged PR \"update branding for 3.1.3\" (#28016)"},{"Id":"564883079","IsPullRequest":true,"CreatedAt":"2020-02-13T20:26:57","Actor":"Anipik","Number":"28017","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#28017)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-13T19:59:55","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"closed","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed or merged PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"564266501","IsPullRequest":true,"CreatedAt":"2020-02-12T20:57:40","Actor":"GrabYourPitchforks","Number":"28015","RawContent":null,"Title":"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Open PR \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"},{"Id":"555745808","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:56","Actor":"danmosemsft","Number":"28004","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28004","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#28004)"},{"Id":"551004118","IsPullRequest":true,"CreatedAt":"2020-01-17T02:10:57","Actor":"dotnet-maestro-bot","Number":"28002","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @hoyosjs\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28002","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#28002)"},{"Id":"550505294","IsPullRequest":true,"CreatedAt":"2020-01-16T19:16:48","Actor":"hoyosjs","Number":"28000","RawContent":null,"Title":"Fix issues in release 3.0","State":"closed","Body":"Changes discussed to obtain green CI and fix RHEL6 outerloop builds:\r\n\r\n- Restore the Helix SDK using Tools.props to work around msbuild issues\r\n- Disable formatting jobs\r\n- Disable windows ARM jobs until dotnet/runtime#1097 is solved\r\n- Fix TRACE statement for RHEL6 in debug/checked pal out-of-proc unwind.\r\n\r\ncc @jeffschwMSFT @mmitche @jashook @trylek ","Url":"https://github.com/dotnet/coreclr/pull/28000","RelatedDescription":"Closed or merged PR \"Fix issues in release 3.0\" (#28000)"},{"Id":"550514396","IsPullRequest":true,"CreatedAt":"2020-01-16T01:27:41","Actor":"mmitche","Number":"28001","RawContent":null,"Title":"[release/2.1] Restore official build for 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28001","RelatedDescription":"Closed or merged PR \"[release/2.1] Restore official build for 2.1\" (#28001)"},{"Id":"549855987","IsPullRequest":true,"CreatedAt":"2020-01-15T21:04:10","Actor":"GrabYourPitchforks","Number":"27996","RawContent":null,"Title":"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/752 to release/3.1\r\nFixes https://github.com/dotnet/runtime/issues/594\r\n\r\n## Description\r\n\r\nIn .NET Core 3.0 / 3.1 we changed how the _completed_ out parameter is set on the `EncoderNLS.Convert` and `DecoderNLS.Convert` routines. We had changed the logic to match precisely what MSDN's documentation stated and to fix a possible data corruption bug; however, this broke a number of customers' applications by sending them into infinite loops.\r\n\r\nThis PR reverts that change.\r\n\r\n## Customer Impact\r\n\r\nIf customers were relying on the previous behavior of the _completed_ out parameter, their applications could end up in an infinite loop. What makes matters worse is that the sample code on the MSDN page for `Encoder.Convert` and `Decoder.Convert` is also susceptible to this pattern, so we suspect a large number of customers may have based their own application code on the sample.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Framework 4.x and .NET Core 2.x. One half of this change was introduced in .NET Core 3.0 (see https://github.com/dotnet/coreclr/commit/43a5159d39bd52195c5095da4006183f791c696b); the other half was introduced in .NET Core 3.1 (see https://github.com/dotnet/coreclr/commit/c07ec4cd2f88c23edc87500893576d83c20f2e6d).\r\n\r\n## Testing\r\n\r\nThe reversion is already committed in the 5.0 branches (see https://github.com/dotnet/runtime/commit/d49b541ab156d992aeb4bbe410f7a816bb0ac039), so we have been getting test coverage on those nightlies. No notable regressions have been reported.\r\n\r\n## Risk\r\n\r\nSomewhere between minimal and moderate. It's possible that some applications may have taken a dependency on the new behavior. See for instance https://github.com/dotnet/aspnetcore/pull/17747, where ASP.NET appears to have unintentionally taken a dependency on the new behavior and had to proactively make a change so that they behave correctly both before and after this PR goes through.\r\n\r\n/cc @tarekgh @anurse @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27996","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes\" (#27996)"},{"Id":"550396592","IsPullRequest":true,"CreatedAt":"2020-01-15T20:04:13","Actor":"dotnet-maestro-bot","Number":"27999","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27999","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27999)"},{"Id":"550393850","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:13","Actor":"mmitche","Number":"27998","RawContent":null,"Title":"[release/3.1] Update branding to 3.1.2","State":"closed","Body":"eng/Versions.props doesn't seem to be the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27998","RelatedDescription":"Closed or merged PR \"[release/3.1] Update branding to 3.1.2\" (#27998)"},{"Id":"550393454","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:06","Actor":"mmitche","Number":"27997","RawContent":null,"Title":"[release/3.0] Update branding to 3.0.3","State":"closed","Body":"eng/Versions.props doesn't seem to the the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27997","RelatedDescription":"Closed or merged PR \"[release/3.0] Update branding to 3.0.3\" (#27997)"},{"Id":"549775170","IsPullRequest":true,"CreatedAt":"2020-01-14T22:47:49","Actor":"Anipik","Number":"27994","RawContent":null,"Title":"update branding for coreclr 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27994","RelatedDescription":"Closed or merged PR \"update branding for coreclr 2.1.16\" (#27994)"},{"Id":"549842263","IsPullRequest":true,"CreatedAt":"2020-01-14T22:05:50","Actor":"dotnet-maestro-bot","Number":"27995","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27995","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27995)"},{"Id":"549732492","IsPullRequest":true,"CreatedAt":"2020-01-14T21:54:02","Actor":"Anipik","Number":"27993","RawContent":null,"Title":"update branding to 3.0.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27993","RelatedDescription":"Closed or merged PR \"update branding to 3.0.3\" (#27993)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"569664852","IsPullRequest":true,"CreatedAt":"2020-02-24T21:01:39","Actor":"dotnet-maestro[bot]","Number":"13264","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/24/2020 5:44 AM\r\n- **Commit**: f1ae79d83d0c08d08472e9f7ba030a119c4d9458\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20123.1\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13264","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13264)"},{"Id":"569225616","IsPullRequest":true,"CreatedAt":"2020-02-23T19:34:24","Actor":"wli3","Number":"13263","RawContent":null,"Title":"Update to 3.1.2 runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13263","RelatedDescription":"Closed or merged PR \"Update to 3.1.2 runtime\" (#13263)"},{"Id":"569217166","IsPullRequest":true,"CreatedAt":"2020-02-21T23:04:39","Actor":"dotnet-maestro[bot]","Number":"13262","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200221.9\r\n- **Date Produced**: 2/21/2020 9:50 PM\r\n- **Commit**: e167e37a2a6a7b9b381c462c7ccfd5e653c045e2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20121.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13262","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13262)"},{"Id":"569144281","IsPullRequest":true,"CreatedAt":"2020-02-21T20:03:57","Actor":"dotnet-maestro[bot]","Number":"13261","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200221.2\r\n- **Date Produced**: 2/21/2020 6:41 PM\r\n- **Commit**: d6413d67e43fcf01a86c0fa470d688dbaeaa4bac\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20121.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13261","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13261)"},{"Id":"569121230","IsPullRequest":true,"CreatedAt":"2020-02-21T19:15:41","Actor":"dotnet-maestro[bot]","Number":"13260","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200221.1\r\n- **Date Produced**: 2/21/2020 5:26 PM\r\n- **Commit**: ca6647a926b70fb1b08313493c4b0f6fe6d61e91\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20121.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13260","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13260)"},{"Id":"568788516","IsPullRequest":true,"CreatedAt":"2020-02-21T08:05:48","Actor":"dotnet-maestro[bot]","Number":"13259","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200220.1\r\n- **Date Produced**: 2/21/2020 6:54 AM\r\n- **Commit**: 2d163b87b605fd23ceebfb04484e5ec5f2bffc32\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20120.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13259","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13259)"},{"Id":"568702914","IsPullRequest":true,"CreatedAt":"2020-02-21T03:42:00","Actor":"dotnet-maestro[bot]","Number":"13258","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200220.11\r\n- **Date Produced**: 2/21/2020 2:06 AM\r\n- **Commit**: 53e60c238b7a5da166a58acd3129b5e6a89ef16b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20120.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13258","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13258)"},{"Id":"568662414","IsPullRequest":true,"CreatedAt":"2020-02-21T00:55:40","Actor":"dotnet-maestro[bot]","Number":"13257","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200220.8\r\n- **Date Produced**: 2/20/2020 11:32 PM\r\n- **Commit**: 99cf3bc19037e010964b8733afef04d3c150d012\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20120.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13257","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13257)"},{"Id":"568577297","IsPullRequest":true,"CreatedAt":"2020-02-20T22:11:26","Actor":"dotnet-maestro[bot]","Number":"13256","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200220.5\r\n- **Date Produced**: 2/20/2020 8:39 PM\r\n- **Commit**: e7e9a2c4f19898bcc6e085c39de80ed44e76f231\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20120.5\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13256","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13256)"},{"Id":"567710654","IsPullRequest":true,"CreatedAt":"2020-02-20T22:05:17","Actor":"dotnet-maestro-bot","Number":"13251","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13251","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13251)"},{"Id":"567710375","IsPullRequest":true,"CreatedAt":"2020-02-20T21:22:09","Actor":"dotnet-maestro-bot","Number":"13250","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13250","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13250)"},{"Id":"567710700","IsPullRequest":true,"CreatedAt":"2020-02-20T20:52:08","Actor":"dotnet-maestro-bot","Number":"13252","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13252","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13252)"},{"Id":"568090526","IsPullRequest":true,"CreatedAt":"2020-02-20T07:25:42","Actor":"dotnet-maestro[bot]","Number":"13255","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200219.12\r\n- **Date Produced**: 2/20/2020 5:58 AM\r\n- **Commit**: 2ace9af51abffd3949d33adf316299c1d5ab272c\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20119.12\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13255","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13255)"},{"Id":"568030940","IsPullRequest":true,"CreatedAt":"2020-02-20T04:14:53","Actor":"dotnet-maestro[bot]","Number":"13254","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200219.6\r\n- **Date Produced**: 2/20/2020 2:10 AM\r\n- **Commit**: 10c1d86e06f2a3a77abe52fdc0f04954127ea5fc\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20119.6\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13254","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13254)"},{"Id":"567947590","IsPullRequest":true,"CreatedAt":"2020-02-20T00:59:19","Actor":"dotnet-maestro[bot]","Number":"13253","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200219.2\r\n- **Date Produced**: 2/19/2020 10:55 PM\r\n- **Commit**: 34f6927fe83b2d6cb2003d6577853482ceee25ec\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20119.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13253","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13253)"},{"Id":"567423562","IsPullRequest":true,"CreatedAt":"2020-02-19T09:40:46","Actor":"dotnet-maestro[bot]","Number":"13249","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.5\r\n- **Date Produced**: 2/19/2020 8:34 AM\r\n- **Commit**: 6eadd02645d29519b449dd4946a5858991bca06d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.5\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13249","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13249)"},{"Id":"567382145","IsPullRequest":true,"CreatedAt":"2020-02-19T08:30:40","Actor":"dotnet-maestro[bot]","Number":"13248","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200218.4\r\n- **Date Produced**: 2/19/2020 6:53 AM\r\n- **Commit**: 4a253d37e0fa2c13c617bedb01cf96d3e0ebea55\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20118.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13248","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13248)"},{"Id":"567305783","IsPullRequest":true,"CreatedAt":"2020-02-19T07:06:58","Actor":"dotnet-maestro[bot]","Number":"13246","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.4\r\n- **Date Produced**: 2/19/2020 3:27 AM\r\n- **Commit**: aa9f9ef5a0dbd98646d43d892b2729a51692b552\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13246","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13246)"},{"Id":"567333145","IsPullRequest":true,"CreatedAt":"2020-02-19T06:20:38","Actor":"dotnet-maestro[bot]","Number":"13247","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200218.9\r\n- **Date Produced**: 2/19/2020 5:01 AM\r\n- **Commit**: 7ee3aeb9e0a6bf2e226bf2c9499ae6ffe6830051\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20118.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13247","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13247)"},{"Id":"567238694","IsPullRequest":true,"CreatedAt":"2020-02-19T03:31:48","Actor":"dotnet-maestro[bot]","Number":"13242","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200218.7\r\n- **Date Produced**: 2/19/2020 1:59 AM\r\n- **Commit**: c6257f42bad49a73766791299733f1b25ee152a7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20118.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13242","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13242)"},{"Id":"567280719","IsPullRequest":true,"CreatedAt":"2020-02-19T03:20:44","Actor":"dotnet-maestro[bot]","Number":"13245","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:53 AM\r\n- **Commit**: 92f4b73e3f7e624b7a54db50fdb91cebb39151db\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20118.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13245","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13245)"},{"Id":"567278024","IsPullRequest":true,"CreatedAt":"2020-02-19T03:15:47","Actor":"dotnet-maestro[bot]","Number":"13244","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:50 AM\r\n- **Commit**: 6e3d4144add5b26f3f81db73878320705226001a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13244","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13244)"},{"Id":"567245975","IsPullRequest":true,"CreatedAt":"2020-02-19T01:15:47","Actor":"dotnet-maestro[bot]","Number":"13243","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 11:47 PM\r\n- **Commit**: 13dcac62f582aa35f27f41880d5a90291eed955f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13243","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13243)"},{"Id":"567209182","IsPullRequest":true,"CreatedAt":"2020-02-18T23:22:17","Actor":"dotnet-maestro[bot]","Number":"13241","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 9:50 PM\r\n- **Commit**: 1a277d06b515ada913c1e9a25d98f770da503535\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13241","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13241)"},{"Id":"567027176","IsPullRequest":true,"CreatedAt":"2020-02-18T19:01:39","Actor":"mmitche","Number":"13240","RawContent":null,"Title":"[release/2.1.8xx] Update branding to 2.1.805","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13240","RelatedDescription":"Closed or merged PR \"[release/2.1.8xx] Update branding to 2.1.805\" (#13240)"},{"Id":"567026963","IsPullRequest":true,"CreatedAt":"2020-02-18T19:01:26","Actor":"mmitche","Number":"13239","RawContent":null,"Title":"[release/2.1.6xx] Update branding to 2.1.610","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13239","RelatedDescription":"Closed or merged PR \"[release/2.1.6xx] Update branding to 2.1.610\" (#13239)"},{"Id":"567026810","IsPullRequest":true,"CreatedAt":"2020-02-18T18:34:34","Actor":"mmitche","Number":"13238","RawContent":null,"Title":"[release/2.1.5xx] Update branding to 2.1.513","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13238","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Update branding to 2.1.513\" (#13238)"},{"Id":"565634486","IsPullRequest":true,"CreatedAt":"2020-02-18T18:31:43","Actor":"dotnet-maestro[bot]","Number":"13236","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/15/2020 12:23 AM\r\n- **Commit**: 8ac9495536a53010b68b4deabe27844afcdd8c20\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13236","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13236)"},{"Id":"566770272","IsPullRequest":true,"CreatedAt":"2020-02-18T09:48:59","Actor":"enricosada","Number":"13237","RawContent":null,"Title":"[WIP hold for 3.1.3xx] Read default language for `dotnet new` from env var","State":"open","Body":"Read `DOTNET_NEW_PREFERRED_LANG` as default language for `dotnet new`.\r\nIf not set, the default continue to be `C#`\r\n\r\nCurrently to create F# projects, we need to specify `-lang f#` foreach `dotnet new` invocation.\r\nIt's really annoying, and atm `dotnet new` doesnt yet support set the preference property.\r\n\r\nThis option can be removed later, when `dotnet new` support set the default language (as normal config)\r\n\r\nWith this pr\r\n\r\n```batch\r\nset DOTNET_NEW_PREFERRED_LANG=F#\r\ndotnet new console\r\ndotnet new lib\r\n```\r\n\r\n/cc @cartermp\r\n\r\nref https://github.com/dotnet/sdk/issues/4224\r\n","Url":"https://github.com/dotnet/cli/pull/13237","RelatedDescription":"Open PR \"[WIP hold for 3.1.3xx] Read default language for `dotnet new` from env var\" (#13237)"},{"Id":"565630547","IsPullRequest":true,"CreatedAt":"2020-02-15T01:16:39","Actor":"dotnet-maestro[bot]","Number":"13235","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.12\r\n- **Date Produced**: 2/15/2020 12:10 AM\r\n- **Commit**: 7fc314f73b075650f79d5225af8165e0a9369c22\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.12\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13235","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13235)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"569840992","IsPullRequest":true,"CreatedAt":"2020-02-24T13:20:46","Actor":"dotnet-maestro[bot]","Number":"1719","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/23/2020 2:05 PM\r\n- **Commit**: 85d76351b1f0245c9f331f72219d12e8e2d48e72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20123.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1719","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1719)"},{"Id":"569432651","IsPullRequest":false,"CreatedAt":"2020-02-23T03:53:46","Actor":"cfbao","Number":"1718","RawContent":null,"Title":"Where are the authoritative *descriptions* of .NET Standard APIs?","State":"open","Body":"This question may be academic in nature, but it's bugging me nonetheless.\r\n\r\nAccording to comments in netstandardX.X_ref.md files in [docs/versions](https://github.com/dotnet/standard/tree/master/docs/versions) and #1053, the authoritative definition of .NET Standard is in [src/netstandard/ref](https://github.com/dotnet/standard/tree/master/src/netstandard/ref). However, this is only a list of APIs, without any description of what each of them should do.\r\nIf this is the totality of .NET Standard spec, couldn't someone (theoretically, I know) build their own .NET implementation, with the same set of APIs but with wildly different behaviours, and still claim conformance?\r\n\r\nI tried running \"build.cm\" in the repo, and noticed in the \"artifacts\" folder there's a \"netstandard.xml\" file. It seems to contain all APIs including their descriptions.\r\nShould this be published somewhere and considered the authoritative definition of .NET Standard instead?\r\nWhat's the source of the descriptions included in this .xml file? I can't find it anywhere in this repo. Is the build process pulling external sources? (I noticed it downloaded dotnet SDK)\r\nShould this external source be included in this repo for completeness?","Url":"https://github.com/dotnet/standard/issues/1718","RelatedDescription":"Open issue \"Where are the authoritative *descriptions* of .NET Standard APIs?\" (#1718)"},{"Id":"569331779","IsPullRequest":true,"CreatedAt":"2020-02-22T13:10:37","Actor":"dotnet-maestro[bot]","Number":"1717","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200221.6\r\n- **Date Produced**: 2/22/2020 12:56 AM\r\n- **Commit**: f83aa9749a531bf771a98e5bdace55b31a9bb2b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20121.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1717","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1717)"},{"Id":"569214047","IsPullRequest":false,"CreatedAt":"2020-02-21T22:21:40","Actor":"gregmac","Number":"1716","RawContent":null,"Title":"IReadOnlyList<T> should implement IndexOf(T item);","State":"open","Body":"Currently `int IndexOf(T item);` is implemented in `IList<T>`, but not `IReadOnlyList<T>`. There's several cases where this would be useful to have, and there doesn't seem to be any clear reason it's not implemented in `IReadOnlyList<T>`. \r\n\r\nMany (if not all?) of the built-in usages of `IReadOnlyList<T>` also implement `IList<T>`, so at least within the .NET codebase it seems this would have very little impact.\r\n","Url":"https://github.com/dotnet/standard/issues/1716","RelatedDescription":"Open issue \"IReadOnlyList<T> should implement IndexOf(T item);\" (#1716)"},{"Id":"568941392","IsPullRequest":true,"CreatedAt":"2020-02-21T13:20:41","Actor":"dotnet-maestro[bot]","Number":"1715","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200220.2\r\n- **Date Produced**: 2/20/2020 10:40 PM\r\n- **Commit**: df24cd9b34682b5509df5a08ef8a8952e5a4f623\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20120.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1715","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1715)"},{"Id":"568283447","IsPullRequest":true,"CreatedAt":"2020-02-20T13:20:44","Actor":"dotnet-maestro[bot]","Number":"1714","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200219.14\r\n- **Date Produced**: 2/20/2020 4:52 AM\r\n- **Commit**: 4660949bde1083e8b1efba3096dd145d590a0b17\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20119.14\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1714","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1714)"},{"Id":"567553643","IsPullRequest":true,"CreatedAt":"2020-02-19T13:20:48","Actor":"dotnet-maestro[bot]","Number":"1713","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 2:20 PM\r\n- **Commit**: b40d0c89c230189b4c6aeb32c0a43218b4bc3359\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20118.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1713","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1713)"},{"Id":"567261603","IsPullRequest":false,"CreatedAt":"2020-02-19T04:17:02","Actor":"ohsorry","Number":"1712","RawContent":null,"Title":"Can we add an overload with a ReadOnlyMemory<byte> parameter to System.Net.Socket.SendToAsync()?","State":"closed","Body":"```\r\npublic static Task<int> SendAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags);\r\npublic static Task<int> SendAsync(this Socket socket, IList<ArraySegment<byte>> buffers, SocketFlags socketFlags);\r\npublic static ValueTask<int> SendAsync(this Socket socket, ReadOnlyMemory<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken = default);\r\npublic static Task<int> SendToAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags, EndPoint remoteEP);\r\n\r\n```\r\nSee ? I guess we need one. :)","Url":"https://github.com/dotnet/standard/issues/1712","RelatedDescription":"Closed issue \"Can we add an overload with a ReadOnlyMemory<byte> parameter to System.Net.Socket.SendToAsync()?\" (#1712)"},{"Id":"566877203","IsPullRequest":true,"CreatedAt":"2020-02-18T13:30:45","Actor":"dotnet-maestro[bot]","Number":"1711","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200217.3\r\n- **Date Produced**: 2/17/2020 7:54 PM\r\n- **Commit**: bd2a2b09716ddb54cb1e40f087beaaeeef859118\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20117.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1711","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1711)"},{"Id":"566283741","IsPullRequest":true,"CreatedAt":"2020-02-17T13:10:42","Actor":"dotnet-maestro[bot]","Number":"1710","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200216.1\r\n- **Date Produced**: 2/16/2020 2:07 PM\r\n- **Commit**: 2086e534f12e6116889ee480646ef54c1f781887\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20116.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1710","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1710)"},{"Id":"565901517","IsPullRequest":true,"CreatedAt":"2020-02-16T13:20:42","Actor":"dotnet-maestro[bot]","Number":"1709","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200215.1\r\n- **Date Produced**: 2/15/2020 2:11 PM\r\n- **Commit**: e133be6cf759f6badf7bc4052118ad8197eb03bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20115.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1709","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1709)"},{"Id":"565745116","IsPullRequest":true,"CreatedAt":"2020-02-15T13:10:39","Actor":"dotnet-maestro[bot]","Number":"1708","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1708","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1708)"},{"Id":"565313064","IsPullRequest":true,"CreatedAt":"2020-02-14T13:20:43","Actor":"dotnet-maestro[bot]","Number":"1707","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200213.6\r\n- **Date Produced**: 2/13/2020 9:22 PM\r\n- **Commit**: ba6bfb25914e3434264352dd24ba00b406d23393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20113.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1707","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1707)"},{"Id":"564667114","IsPullRequest":true,"CreatedAt":"2020-02-13T13:10:42","Actor":"dotnet-maestro[bot]","Number":"1706","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200212.7\r\n- **Date Produced**: 2/12/2020 8:32 PM\r\n- **Commit**: 951ea7430678b2682ff861fe1149b8a2f55887ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20112.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1706","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1706)"},{"Id":"563984671","IsPullRequest":true,"CreatedAt":"2020-02-12T13:10:45","Actor":"dotnet-maestro[bot]","Number":"1705","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200211.11\r\n- **Date Produced**: 2/12/2020 12:37 AM\r\n- **Commit**: 998b715ed1fbb966437345a1996af64e22c83368\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20111.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1705","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1705)"},{"Id":"563594688","IsPullRequest":false,"CreatedAt":"2020-02-11T23:21:07","Actor":"merarischroeder","Number":"1704","RawContent":null,"Title":"Why is System.Threading.Task.TaskToApm internal?","State":"open","Body":"I saw it being used here today https://github.com/dotnet/runtime/blob/master/src/libraries/System.Net.Quic/src/System/Net/Quic/QuicStream.cs\r\n\r\nI'm building a few stream types and I would like to define a stream wrapper too. I would have thought, with the advent of async Tasks this kind of tooling would have been made available to all programmers.","Url":"https://github.com/dotnet/standard/issues/1704","RelatedDescription":"Open issue \"Why is System.Threading.Task.TaskToApm internal?\" (#1704)"},{"Id":"563191239","IsPullRequest":true,"CreatedAt":"2020-02-11T13:20:58","Actor":"dotnet-maestro[bot]","Number":"1703","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1703","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1703)"},{"Id":"562545610","IsPullRequest":true,"CreatedAt":"2020-02-10T13:06:14","Actor":"dotnet-maestro[bot]","Number":"1702","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1702","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1702)"},{"Id":"562173293","IsPullRequest":true,"CreatedAt":"2020-02-09T13:21:01","Actor":"dotnet-maestro[bot]","Number":"1701","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200208.2\r\n- **Date Produced**: 2/9/2020 1:00 AM\r\n- **Commit**: 490732cf6dcb77631fee038da1af0df1518c2fb0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20108.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1701","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1701)"},{"Id":"562099295","IsPullRequest":false,"CreatedAt":"2020-02-09T00:28:01","Actor":"dmitriyse","Number":"1700","RawContent":null,"Title":"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+","State":"open","Body":"The first framework that provides NetStandard 2.1 is NetCoreApp 3.0.\r\nSo NetStandard 2.1 have no limitations in adding API from .NetCoreApp 3.0\r\n\r\nDespite some useful ```TheadPool``` methods are missing in the .Net Standard 2.1.\r\nFor example:\r\n```\r\n public static bool UnsafeQueueUserWorkItem<TState>(Action<TState> callBack, TState state, bool preferLocal)\r\n```\r\nthese methods are mandatory for the efficient implementation of the ```IValueTaskSource```\r\n\r\nReal life case:\r\nThe ```ManualResetValueTaskSourceCore<TResult>``` included into NetStandard 2.1, but if you try to copy-paste its sources and modernize for your needs  \r\nyou will unable to do it being NetStandard 2.1 library, you need to upgrade to NetCoreApp 3.0.\r\nIf upgrade to NetCoreApp 3.0 is unacceptable then you need to have inefficient implementation - very disappointing problem where you don't expect it.","Url":"https://github.com/dotnet/standard/issues/1700","RelatedDescription":"Open issue \"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+\" (#1700)"},{"Id":"562016101","IsPullRequest":true,"CreatedAt":"2020-02-08T13:20:56","Actor":"dotnet-maestro[bot]","Number":"1699","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200207.14\r\n- **Date Produced**: 2/8/2020 1:30 AM\r\n- **Commit**: c84720afc91b635e2fbeb5dbd7e2742f18773e0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20107.14\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1699","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1699)"},{"Id":"561623720","IsPullRequest":true,"CreatedAt":"2020-02-07T13:20:59","Actor":"dotnet-maestro[bot]","Number":"1698","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200206.12\r\n- **Date Produced**: 2/7/2020 4:05 AM\r\n- **Commit**: 50f7059d3a7a83ae1919516755b9ca92c67805e8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20106.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1698","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1698)"},{"Id":"560997721","IsPullRequest":true,"CreatedAt":"2020-02-06T13:05:54","Actor":"dotnet-maestro[bot]","Number":"1697","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 8:49 PM\r\n- **Commit**: b65df96ccb820fd5f7ea226aeba310485f395130\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20105.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1697","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1697)"},{"Id":"560356993","IsPullRequest":true,"CreatedAt":"2020-02-05T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1696","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/5/2020 12:17 AM\r\n- **Commit**: 0b404cb7575c8addc5e10f3fac57e79c596db28e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20104.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1696","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1696)"},{"Id":"559704588","IsPullRequest":true,"CreatedAt":"2020-02-04T13:11:00","Actor":"dotnet-maestro[bot]","Number":"1695","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200203.5\r\n- **Date Produced**: 2/4/2020 3:04 AM\r\n- **Commit**: 27c8467294a4e64ac6642b4c12ca63495ff126c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20103.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1695","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1695)"},{"Id":"558693346","IsPullRequest":true,"CreatedAt":"2020-02-02T13:20:54","Actor":"dotnet-maestro[bot]","Number":"1694","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200201.2\r\n- **Date Produced**: 2/1/2020 11:43 PM\r\n- **Commit**: 779323758d3e8aa7e4ee3dc2619d57e696078089\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20101.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1694)"},{"Id":"558537562","IsPullRequest":true,"CreatedAt":"2020-02-01T13:20:53","Actor":"dotnet-maestro[bot]","Number":"1693","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200131.7\r\n- **Date Produced**: 1/31/2020 10:34 PM\r\n- **Commit**: bdc8c2f698e8c15195872af1e316b4b8f0eae7e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20081.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1693)"},{"Id":"558118871","IsPullRequest":true,"CreatedAt":"2020-01-31T13:11:41","Actor":"dotnet-maestro[bot]","Number":"1692","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200130.4\r\n- **Date Produced**: 1/31/2020 1:21 AM\r\n- **Commit**: 00402f1fdc2b59dbc4f0b1c143850cb72e69fc90\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20080.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1692","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1692)"},{"Id":"557898042","IsPullRequest":false,"CreatedAt":"2020-01-31T04:01:42","Actor":"jfcardinal","Number":"1691","RawContent":null,"Title":"string.Concat(ReadOnlySpan, ...)?","State":"open","Body":"In January of 2019 @stephentoub proposed adding string.Concat() overloads that accept ReadOnlySpan<char> in corefx. Those were implemented that same month.\r\n\r\nAs far as I can tell, those overloads are not part of .NET Standard 2.1. I have not found a prior discussion of adding them to a future version of .NET Standard, but perhaps I have not searched well enough.\r\n\r\nAre they being considered?","Url":"https://github.com/dotnet/standard/issues/1691","RelatedDescription":"Open issue \"string.Concat(ReadOnlySpan, ...)?\" (#1691)"},{"Id":"557478626","IsPullRequest":true,"CreatedAt":"2020-01-30T13:20:57","Actor":"dotnet-maestro[bot]","Number":"1690","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200129.8\r\n- **Date Produced**: 1/30/2020 4:30 AM\r\n- **Commit**: 8466781af43871ee0d4a1655acc008a305a62c0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20079.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1690","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1690)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"570123604","IsPullRequest":true,"CreatedAt":"2020-02-24T20:21:18","Actor":"omajid","Number":"42872","RawContent":null,"Title":"[release/2.1] Add Fedora 33 runtime ids","State":"open","Body":"Fedora 32 is gearing up for release[1], and in-development version of Fedora has been offiically labelled as being Fedora 33:\r\n\r\n    $ podman run -it fedora:33 cat /etc/os-release\r\n    NAME=Fedora\r\n    VERSION=\"33 (Container Image)\"\r\n    ID=fedora\r\n    VERSION_ID=33\r\n    VERSION_CODENAME=\"\"\r\n    PLATFORM_ID=\"platform:f33\"\r\n    PRETTY_NAME=\"Fedora 33 (Container Image)\"\r\n    ANSI_COLOR=\"0;34\"\r\n    LOGO=fedora-logo-icon\r\n    CPE_NAME=\"cpe:/o:fedoraproject:fedora:33\"\r\n    HOME_URL=\"https://fedoraproject.org/\"\r\n    DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/\"\r\n    SUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\n    BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n    REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\n    REDHAT_BUGZILLA_PRODUCT_VERSION=rawhide\r\n    REDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=rawhide\r\n    PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\n    VARIANT=\"Container Image\"\r\n    VARIANT_ID=container\r\n\r\n[1] https://fedorapeople.org/groups/schedule/f-32/f-32-key-tasks.html\r\n\r\nThis is a backport of https://github.com/dotnet/runtime/pull/32752","Url":"https://github.com/dotnet/corefx/pull/42872","RelatedDescription":"Open PR \"[release/2.1] Add Fedora 33 runtime ids\" (#42872)"},{"Id":"570071235","IsPullRequest":true,"CreatedAt":"2020-02-24T19:12:40","Actor":"omajid","Number":"42871","RawContent":null,"Title":"[release/3.1] Add Fedora 33 runtime ids","State":"open","Body":"Fedora 32 is gearing up for release[1], and in-development version of Fedora has been officially labelled as being Fedora 33:\r\n\r\n    $ podman run -it fedora:33 cat /etc/os-release\r\n    NAME=Fedora\r\n    VERSION=\"33 (Container Image)\"\r\n    ID=fedora\r\n    VERSION_ID=33\r\n    VERSION_CODENAME=\"\"\r\n    PLATFORM_ID=\"platform:f33\"\r\n    PRETTY_NAME=\"Fedora 33 (Container Image)\"\r\n    ANSI_COLOR=\"0;34\"\r\n    LOGO=fedora-logo-icon\r\n    CPE_NAME=\"cpe:/o:fedoraproject:fedora:33\"\r\n    HOME_URL=\"https://fedoraproject.org/\"\r\n    DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/\"\r\n    SUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\n    BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n    REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\n    REDHAT_BUGZILLA_PRODUCT_VERSION=rawhide\r\n    REDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=rawhide\r\n    PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\n    VARIANT=\"Container Image\"\r\n    VARIANT_ID=container\r\n\r\n[1] https://fedorapeople.org/groups/schedule/f-32/f-32-key-tasks.html\r\n\r\nThis is a backport of https://github.com/dotnet/runtime/pull/32752","Url":"https://github.com/dotnet/corefx/pull/42871","RelatedDescription":"Open PR \"[release/3.1] Add Fedora 33 runtime ids\" (#42871)"},{"Id":"569218016","IsPullRequest":true,"CreatedAt":"2020-02-21T22:33:05","Actor":"buyaa-n","Number":"42870","RawContent":null,"Title":"[release/3.1] Remove local header compressed/uncompressed length validations","State":"open","Body":"Port from https://github.com/dotnet/runtime/pull/32149. Fixes https://github.com/dotnet/runtime/issues/1094\r\n\r\n### Description\r\nWe had and issue https://github.com/dotnet/runtime/issues/27741 reported that .NET core ZipArchive API extracting a tampered zip file without any error, where Uncompressed size was tampered to have much smaller size than real/extracted size. When trying to decompress the tampered zip with different tools some were throwing error, some just restricting decompressed output by given uncompressed size. As it could cause security issue we added strict validation of Compressed and Uncompressed size to throw if it unmatched, also limited the decompressed output by uncompressed size.  \r\n\r\n### Customer Impact\r\nThrowing error for unmatched compressed/uncompressed sizes in local header vs central directory record was a breaking change. Turns out zip format specification, especially file local header format is not that clear in some area and not strictly followed by different zip producing tools. Several customers complaining that they cannot read a zip anymore which they were able to read before 3.0. As validation was not mandatory when we restricting the output stream by uncompressed size we are removing the validation we added in 3.0\r\n\r\n### Regression\r\nNo. \r\nAs we are removing a restriction, nothing added so no regression should happen\r\n \r\n### Testing\r\nRemoved related tests, added new test for original bug\r\n\r\n### Risk\r\nCustomer might read corrupted zip file with updated compressed/uncompressed size from real size, but as we have appropriate restriction for reading compressed stream and output decompressed stream that wouldn't be a big issue.\r\n\r\ncc @ericstj","Url":"https://github.com/dotnet/corefx/pull/42870","RelatedDescription":"Open PR \"[release/3.1] Remove local header compressed/uncompressed length validations\" (#42870)"},{"Id":"568665945","IsPullRequest":true,"CreatedAt":"2020-02-21T03:47:09","Actor":"joperezr","Number":"42868","RawContent":null,"Title":"Fixing regression caused by servicing of System.Data.SqlClient package","State":"closed","Body":"cc: @ericstj @danmosemsft @Pilchie @Anipik @wtgodbe \r\n\r\nFor our 3.0 release (and 3.1) we made a major change on how we generate our compile and runtime .NET Framework shims (PR https://github.com/dotnet/corefx/pull/37550). We did this  in order to stop using assembly re-writing and instead to use source generation. Back when we did that, we didn't catch one diff which was that our desktop runtime shims would now reference the netcoreapp vertical contracts and their assembly versions, instead of just using 0.0.0.0 as we used to do with assembly re-writing. This caused an issue that if today we service one of our OOB packages and increase the assembly version, and this assembly happens to be referenced by one of our .NET Framework shims, then now the shims will have a hard dependency on that version of the OOB package and won't work with previous versions of the package. The first instance we've seen is now in 3.1.2 when we serviced System.Data.SqlClient (new assembly version is 4.6.1.1) and it is referenced by our System.Data shim. This means that if you need to load the System.Data shim, are running in 3.1.2 runtime, and reference a System.Data.SqlClient package which is older than 4.8.1 you will hit an exception like:\r\n\r\n```\r\nSystem.IO.FileLoadException: Could not load file or assembly 'System.Data.SqlClient, Version=4.6.1.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The located assembly's manifest definition does not match the assembly reference. (0x80131040)\r\n```\r\n\r\nThis will happen because the System.Data is trying to load System.Data.SqlClient new version, but the consuming app was referencing an older version of the package (for example: 4.8.0 which only contains 4.6.1.0 assembly)\r\n\r\nThis fix will address this regression only, by making System.Data shim to reference 4.6.1.0 version again so that package 4.8.0 will work again, however, older versions of the package will still not work (as was the case already since we initially shipped 3.0 and 3.1). There is a much larger list of assemblies that might hit this issue if they get serviced in the future, so after this regression is fixed, we will work in master branch in order to provide a future-proof fix that will work for all cases.","Url":"https://github.com/dotnet/corefx/pull/42868","RelatedDescription":"Closed or merged PR \"Fixing regression caused by servicing of System.Data.SqlClient package\" (#42868)"},{"Id":"568709225","IsPullRequest":true,"CreatedAt":"2020-02-21T03:13:31","Actor":"ahsonkhan","Number":"42869","RawContent":null,"Title":"[release/3.1] Do not null ref or throw index out of range exception when deserializing to char.","State":"open","Body":"Get the changes from 5.0/master found in https://github.com/dotnet/runtime/pull/528 \r\n\r\n## Description\r\n\r\nAdd a null/empty string check when deserializing JSON strings into a `char` property so that we don't null ref or throw an index of out of range exception. Intentionally left out the `string.length > 1` check as that could potentially break someone.\r\n\r\n## Customer Impact\r\n\r\nMost people are very unlikely to have a catch handler for NullReferenceException, IndexOutOfRangeException, or InvalidOperationException (and in the first two, it certainly doesn't make sense for them to). So in server scenarios customers still get an HTTP 500.\r\nNow, the the `JsonConverter<char>` throws an `InvalidOperationException` which the wraps the into an outer `JsonException` so that customers can have handlers to catch that. For them, we’d turn a crash into success.\r\n\r\nDeserializing into a char is now more reliable when the input JSON payload is unknown/provided by the user which may contain unexpected values.\r\n```C#\r\npublic class MyPoco\r\n{\r\n    public char Character { get; set; }\r\n}\r\n\r\npublic static void TestDeserializeToChar()\r\n{\r\n    // Before (3.1): NullReferenceException\r\n    // After (5.0): JsonException\r\n    JsonSerializer.Deserialize<MyPoco>(\"{\\\"Character\\\": null}\");\r\n\r\n    // Before (3.1): IndexOutOfRangeException\r\n    // After (5.0): JsonException\r\n    JsonSerializer.Deserialize<MyPoco>(\"{\\\"Character\\\": \\\"\\\"}\");\r\n}\r\n```\r\n\r\nThere is a workaround for the user today, where they could create and register their own `JsonConverter<char>` which does the right checks. However, doing so, in all the entry points of the JsonSerializer (including within ASP.NET web app) would become cumbersome.\r\n\r\n## Regression\r\n\r\nNo. The bug existed in the deserialization behavior since the initial release of S.T.Json as part of 3.0.\r\n\r\n### Testing\r\n\r\nAdded appropriate unit tests and the behavior in master meets user expectations such as https://github.com/dotnet/runtime/issues/32429\r\nThis only affects deserialization/reading.\r\n\r\n## Risk\r\n\r\n**Low** given it is a very targeted fix with no regression. We are going from an unrecoverable/less user friendly exception to a more user-friendly exception that the caller can reason about. There is no breaking change here.\r\n\r\ncc @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42869","RelatedDescription":"Open PR \"[release/3.1] Do not null ref or throw index out of range exception when deserializing to char.\" (#42869)"},{"Id":"568550315","IsPullRequest":true,"CreatedAt":"2020-02-20T20:27:32","Actor":"ahsonkhan","Number":"42867","RawContent":null,"Title":"[release/3.1] Make sure original Utf8JsonReader options are honored when re-creating the reader.","State":"open","Body":"Ports https://github.com/dotnet/runtime/pull/31791 from 5.0/master\r\nFixes https://github.com/dotnet/runtime/issues/882\r\n\r\n## Description\r\n\r\nGenerate the `JsonReaderOptions` from the the user-defined, passed-in `JsonSerializerOptions`, and use that to create the `Utf8JsonReader`, rather than the default options. The fix is a couple of lines, with the rest of the PR adding tests and test enhancement.\r\n\r\n## Customer Impact\r\n\r\nThis bug was initially reported in user-defined `JsonConverter<T>` where the user couldn't deserialize a deeply nested object graph (beyond the default max depth of 64). The issue, however, is not just specific to converters (nor just to `MaxDepth`) and will be hit whenever the caller passes in a `Utf8JsonReader` to the `JsonSerializer.Deserialize` method with non-default `JsonReaderOptions` set (which currently includes `MaxDepth`, `JsonCommentHandling`, and `AllowTrailingCommas`).\r\n\r\nFor example, this code snippet incorrectly fails with an exception:\r\n```C#\r\nvar localReader = new Utf8JsonReader(Encoding.UTF8.GetBytes(\"[null,]\"), \r\n                                       new JsonReaderOptions { AllowTrailingCommas = true });\r\n\r\nstring[] returnedValue = JsonSerializer.Deserialize<string[]>(ref localReader);\r\n\r\n// System.Text.Json.JsonException : The JSON array contains a trailing comma at the end \r\n// which is not supported in this mode. Change the reader options. Path: $[1] | \r\n// LineNumber: 0 | BytePositionInLine: 6.\r\n```\r\n\r\nIt is clear that we should be honoring the user-defined options. Otherwise, there is no way for callers to deserialize payloads containing trailing commas or comments when using the `Utf8JsonReader` with the `JsonSerializer`. We should make sure to meet user expectations here (otherwise, even debugging the issue would become difficult for them).\r\n\r\nThere is no reasonable workaround for the user. In fact, the `JsonConverter<T>` extension point is the primary workaround to change default serialization behavior, which increases the need for this fix since that isn't working as expected.\r\n\r\n## Regression\r\n\r\nNo. The bug existed in the deserialization behavior since the initial release of S.T.Json as part of 3.0.\r\n\r\n### Testing\r\n\r\nAdded several permutations within the test including customer reported scenario. The fix for the bug is only a couple of lines and only affects the read/deserialize, but I wanted to make sure we add tests to exercise the various options for both read and write. We already have decent negative test cases (where the default options throw for invalid JSON), but were missing positive test cases (where custom options worked to make the reader more flexible).\r\n\r\nThe writer tests are only there for completeness and fill a gap from when the `JsonSerializer` APIs that accept a writer were originally added (see https://github.com/dotnet/corefx/pull/38700#issuecomment-503763061). Those tests pass in master and 3.1 already with no source changes.\r\n\r\n## Risk\r\n\r\n**Low** given it is a very targeted fix with no regression. This fix only affects the deserialization behavior. One scenario where a customer could be impacted is if they accidentally relied on the default reader options to catch/throw for JSON that might contain comments/trailing commas, even when they were setting the options to be flexible. The fix for that would be to make sure the options match what you expect.\r\n\r\ncc @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42867","RelatedDescription":"Open PR \"[release/3.1] Make sure original Utf8JsonReader options are honored when re-creating the reader.\" (#42867)"},{"Id":"567108141","IsPullRequest":true,"CreatedAt":"2020-02-19T18:37:11","Actor":"GrabYourPitchforks","Number":"42862","RawContent":null,"Title":"[release/3.1] Corresponding unit tests for dotnet/coreclr#28014","State":"closed","Body":"These are the unit tests for https://github.com/dotnet/coreclr/pull/28014, which is a customer-reported infinite loop in `string.Replace`.\r\n\r\nThe unit tests will fail (by entering an infinite loop) until that PR is checked in to coreclr and the corresponding build flows to corefx.","Url":"https://github.com/dotnet/corefx/pull/42862","RelatedDescription":"Closed or merged PR \"[release/3.1] Corresponding unit tests for dotnet/coreclr#28014\" (#42862)"},{"Id":"567714171","IsPullRequest":true,"CreatedAt":"2020-02-19T18:10:34","Actor":"dotnet-maestro-bot","Number":"42866","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28516-03, servicing-28516-10, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42866","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28516-03, servicing-28516-10, stable, respectively (release/2.1)\" (#42866)"},{"Id":"553888832","IsPullRequest":true,"CreatedAt":"2020-02-19T16:44:33","Actor":"halter73","Number":"42837","RawContent":null,"Title":"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync","State":"closed","Body":"3.1 backport of dotnet/runtime#1437.\r\n\r\nFixes dotnet/runtime#1436\r\n\r\n#### Description\r\n\r\nWhen the default PipeReader.CopyToAsync(destination) implementation is called with a Stream that throws from WriteAsync(), it will call PipeReader.AdvanceTo(consumed) with the default SequencePosition instead of ReadResult.Buffer.Start as expected. With a custom PipeReader, this can result in the PipeReader being left in an unusable state.\r\n\r\n#### Customer Impact\r\n\r\nIf a customer calls CopyToAsync with a stream that can throw, the original Stream.WriteAsync() exception is hidden by an exception from PipeReader.AdvanceTo(). Here's an example that calls ASP.NET Core 3.1's HttpContext.Request.Body.CopyToAsync() method which uses the default PipeReader.CopyToAsync() implementation under the covers:\r\n\r\n```C#\r\nvar throwingStream = new ThrowingStream();\r\n\r\ntry\r\n{\r\n    await context.Request.Body.CopyToAsync(throwingStream);\r\n}\r\ncatch (Exception ex)\r\n{\r\n    Console.WriteLine(\"CopyToAsync Ex: {0}\", ex);\r\n}\r\n```\r\n\r\n```\r\nCopyToAsync Ex: System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values. (Parameter 'position')\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException_PositionOutOfRange()\r\n   at System.Buffers.ReadOnlySequence`1.BoundsCheck(UInt32 sliceStartIndex, Object sliceStartObject, UInt32 sliceEndIndex, Object sliceEndObject)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.AdvanceTo(SequencePosition consumed, SequencePosition examined) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\Http1ContentLengthMessageBody.cs:line 217\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.AdvanceTo(SequencePosition consumed) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\Http1ContentLengthMessageBody.cs:line 202   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestPipeReader.AdvanceTo(SequencePosition consumed) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\HttpRequestPipeReader.cs:line 31\r\n   at System.IO.Pipelines.PipeReader.CopyToAsyncCore[TStream](TStream destination, Func`4 writeAsync, CancellationToken cancellationToken)\r\n   at SampleApp.Startup.<>c__DisplayClass0_0.<<Configure>b__1>d.MoveNext() in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\samples\\SampleApp\\Startup.cs:line 49\r\n```\r\n\r\n#### Regression?\r\n\r\nTechnically, no. But in 3.0, Kestrel started using a PipeReader to back its request body Streams which makes this issue more prominent.\r\n\r\n#### Packaging reviewed?\r\n\r\nNot yet, but I've followed the guide at https://github.com/dotnet/runtime/blob/0515878d1eb4fb544ae0219c436c299746fdb2b4/docs/project/library-servicing.md.\r\n\r\n#### Risk\r\n\r\nExtremely minimal. This PR is initializing the `consumed` SequencePosition to the safe value of `ReadResult.Buffer.Start` (indicating nothing was consumed) instead of `default` (effectively null). The default PipeReader.AdvanceTo implementation treats these the same.","Url":"https://github.com/dotnet/corefx/pull/42837","RelatedDescription":"Closed or merged PR \"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync\" (#42837)"},{"Id":"562931431","IsPullRequest":true,"CreatedAt":"2020-02-19T01:37:11","Actor":"tgani-msft","Number":"42851","RawContent":null,"Title":"Backport attribute to support inline namespaces in C++/CLI ","State":"closed","Body":"Port commit cef57de93bab815726f860f79195227c65e4fce5 from dotnet/runtime (5.0) to dotnet/corefx (3.1).\r\n\r\ncommit cef57de93bab815726f860f79195227c65e4fce5\r\nAuthor: Tanveer Gani <45886079+tgani-msft@users.noreply.github.com>\r\nDate:   Thu Jan 30 10:28:26 2020 -0800\r\n\r\n    Add attribute to support inline namespaces in C++/CLI. (#781)\r\n\r\n    * Add attribute to support inline namespaces in C++/CLI.\r\n\r\n    A new assembly-scope custom attribute\r\n\r\n    [CppInlineNamespace(string dottedName)]\r\n\r\n    has been added to implement inline namespaces in C++/CLI. For every\r\n    inline namespace encountered in a translation unit, the C++ compiler\r\n    will emit this attribute with the fully scoped name, in CLR dotted\r\n    form, as the argument for the attribute.\r\n\r\n    * Add [CppInlineNamespace] to refs.","Url":"https://github.com/dotnet/corefx/pull/42851","RelatedDescription":"Closed or merged PR \"Backport attribute to support inline namespaces in C++/CLI \" (#42851)"},{"Id":"567225799","IsPullRequest":true,"CreatedAt":"2020-02-19T00:30:47","Actor":"dotnet-maestro[bot]","Number":"42865","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/18/2020 10:28 PM\r\n- **Commit**: c5d3d752260383fbed72ba2b4d86d82fea673c76\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42865","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42865)"},{"Id":"567187301","IsPullRequest":true,"CreatedAt":"2020-02-18T23:38:05","Actor":"dotnet-maestro[bot]","Number":"42864","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 9:03 PM\r\n- **Commit**: 25bb13bc33c5911c6319722203dbb83eaebe7b08\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42864","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42864)"},{"Id":"565607813","IsPullRequest":true,"CreatedAt":"2020-02-18T22:07:27","Actor":"joperezr","Number":"42859","RawContent":null,"Title":"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe","State":"closed","Body":"Porting #42849 relevant parts to release/3.1. Original PR was against 2.1. This has already been approved by tactics.","Url":"https://github.com/dotnet/corefx/pull/42859","RelatedDescription":"Closed or merged PR \"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe\" (#42859)"},{"Id":"567138077","IsPullRequest":true,"CreatedAt":"2020-02-18T21:16:53","Actor":"dotnet-maestro[bot]","Number":"42863","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 6:51 PM\r\n- **Commit**: a74f1dbf5a3aed3c4f5ba723641598aac07c31d9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42863","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42863)"},{"Id":"566269144","IsPullRequest":true,"CreatedAt":"2020-02-18T18:34:24","Actor":"eiriktsarpalis","Number":"42860","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0. Reported by 2 customers.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/corefx/pull/42860","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#42860)"},{"Id":"566438873","IsPullRequest":true,"CreatedAt":"2020-02-17T19:23:10","Actor":"omajid","Number":"42861","RawContent":null,"Title":"[release/3.1] Fix cast in CacheMemoryMonitor (#41776)","State":"closed","Body":"Avoid overflow.\r\n\r\ncc @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/42861","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix cast in CacheMemoryMonitor (#41776)\" (#42861)"},{"Id":"565515111","IsPullRequest":true,"CreatedAt":"2020-02-14T21:54:25","Actor":"Anipik","Number":"42858","RawContent":null,"Title":"Disable machine related or flaky tests","State":"closed","Body":"System.DrawingTest are failing on mac because the machines are being updated.\r\n BasicTest_AccessInstanceProperties_NoExceptions_Bsd failure is known and we are working on fixing it. ","Url":"https://github.com/dotnet/corefx/pull/42858","RelatedDescription":"Closed or merged PR \"Disable machine related or flaky tests\" (#42858)"},{"Id":"565466356","IsPullRequest":true,"CreatedAt":"2020-02-14T19:11:16","Actor":"dotnet-maestro[bot]","Number":"42857","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200213.3\r\n- **Date Produced**: 2/14/2020 2:42 AM\r\n- **Commit**: 6689dd74ef07963fb7bcc8072e80d7e6fd2cd1de\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20113.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42857","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42857)"},{"Id":"565027627","IsPullRequest":true,"CreatedAt":"2020-02-14T19:11:06","Actor":"dotnet-maestro[bot]","Number":"42856","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.20113.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.20113.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42856","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42856)"},{"Id":"562902669","IsPullRequest":true,"CreatedAt":"2020-02-14T18:31:29","Actor":"joperezr","Number":"42849","RawContent":null,"Title":"[Release/2.1] Adding .NET Framework asset on OOB packages","State":"closed","Body":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nPTAL: @ericstj @ahsonkhan \r\n\r\nFYI: @Dmitry-Matveev after this fix is in and shipped, then App Insights will be able to depend on the new version of System.Memory which will stop requiring facades to get binplaced and binding redirects to be required.\r\n\r\nThe changes included in this PR will fix all packages that are supported in .Net Framework, currently provide a .NET Standard asset for one .NET Framework version, and we no longer build on other branches (master or release/3.1). The thing left to do before this goes in, is to analyze the packages that had a reference to one of these and no longer build on other branches, so that we produce a new version of them referencing the new packages.","Url":"https://github.com/dotnet/corefx/pull/42849","RelatedDescription":"Closed or merged PR \"[Release/2.1] Adding .NET Framework asset on OOB packages\" (#42849)"},{"Id":"563434956","IsPullRequest":true,"CreatedAt":"2020-02-13T23:50:41","Actor":"omajid","Number":"42853","RawContent":null,"Title":"WIP: Dummy commit to see ci status","State":"closed","Body":"just want to see the status of ci out of the box","Url":"https://github.com/dotnet/corefx/pull/42853","RelatedDescription":"Closed or merged PR \"WIP: Dummy commit to see ci status\" (#42853)"},{"Id":"556561547","IsPullRequest":true,"CreatedAt":"2020-02-13T22:33:38","Actor":"JeremyKuhne","Number":"42845","RawContent":null,"Title":"Fix ReadOnlySequence GetFirstSpan","State":"closed","Body":"Ports https://github.com/dotnet/runtime/pull/276 manually, to address https://github.com/dotnet/runtime/issues/2205.\r\n\r\n**Description**\r\n\r\nWhen getting the first span `GetFirstSpan` from a sequence that is made up of a single segment view of a sequence with multiple sequences the `next` `SequencePosition` is incorrect and will lead to failures trying to enumerate in `SequenceReader` (or anything else that tries to use the `GetFirstSpan` and the returned `SequencePosition`).\r\n\r\n**Customer Impact**\r\n\r\nCustomers will see intermittent failures when sequences happen to align in this way. This issue has gotten multiple reports.\r\n\r\n**Regression?**\r\n\r\nNo.\r\n\r\n**Packaging reviewed?**\r\n\r\nBug fix, no API surface change.\r\n\r\n**Risk**\r\n\r\nLow. This fix has been in master for a few months and there are significant tests and upstream users.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42845","RelatedDescription":"Closed or merged PR \"Fix ReadOnlySequence GetFirstSpan\" (#42845)"},{"Id":"554298803","IsPullRequest":true,"CreatedAt":"2020-02-13T22:31:37","Actor":"bartonjs","Number":"42838","RawContent":null,"Title":"Update test OS matrix for release/2.1","State":"closed","Body":"```\r\n- redundant RHEL.7\r\n- EOL Ubuntu.1404\r\n- EOL OpenSUSE.42\r\n- EOL Fedora.27\r\n- EOL Fedora.28\r\n+ Fedora.30\r\n-/+ Update Alpine 3.9 and 3.10 to latest docker images\r\n- EOL OSX.1012\r\n+ OSX.1014\r\n+ OSX.1015\r\n- Unsupported Windows.Nano\r\n```","Url":"https://github.com/dotnet/corefx/pull/42838","RelatedDescription":"Closed or merged PR \"Update test OS matrix for release/2.1\" (#42838)"},{"Id":"564866887","IsPullRequest":true,"CreatedAt":"2020-02-13T22:22:26","Actor":"Anipik","Number":"42854","RawContent":null,"Title":"branding update for 3.1.3","State":"closed","Body":"@mmitche we don't need to turn off the stable package here as we didn't do it last time ?","Url":"https://github.com/dotnet/corefx/pull/42854","RelatedDescription":"Closed or merged PR \"branding update for 3.1.3\" (#42854)"},{"Id":"564870185","IsPullRequest":true,"CreatedAt":"2020-02-13T20:53:38","Actor":"Anipik","Number":"42855","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42855","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#42855)"},{"Id":"563334512","IsPullRequest":true,"CreatedAt":"2020-02-13T19:57:44","Actor":"omajid","Number":"42852","RawContent":null,"Title":"[release/3.1] Add cgroup2 support","State":"closed","Body":"This is a cherry-pick of:\r\n\r\n- #39633\r\n- #39686","Url":"https://github.com/dotnet/corefx/pull/42852","RelatedDescription":"Closed or merged PR \"[release/3.1] Add cgroup2 support\" (#42852)"},{"Id":"562912148","IsPullRequest":true,"CreatedAt":"2020-02-11T17:58:08","Actor":"Anipik","Number":"42850","RawContent":null,"Title":"validating build","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42850","RelatedDescription":"Closed or merged PR \"validating build\" (#42850)"},{"Id":"558211552","IsPullRequest":true,"CreatedAt":"2020-01-31T15:50:37","Actor":"bartonjs","Number":"42848","RawContent":null,"Title":"Update test OS matrix for release/3.1","State":"open","Body":"* Run servicing PRs as fullMatrix: true\r\n* Refresh all docker images to their latest tag\r\n* Added Alpine.311 (amd64)\r\n* Added Fedora.30\r\n* Removed Ubuntu.1904\r\n* Added Ubuntu.1910\r\n* Added OSX.1015","Url":"https://github.com/dotnet/corefx/pull/42848","RelatedDescription":"Open PR \"Update test OS matrix for release/3.1\" (#42848)"},{"Id":"558160930","IsPullRequest":true,"CreatedAt":"2020-01-31T15:04:27","Actor":"stephentoub","Number":"42847","RawContent":null,"Title":"Fix readme.md link in contributing.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42847","RelatedDescription":"Closed or merged PR \"Fix readme.md link in contributing.md\" (#42847)"},{"Id":"555744746","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:18","Actor":"danmosemsft","Number":"42843","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42843","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#42843)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"570266503","IsPullRequest":true,"CreatedAt":"2020-02-25T04:31:24","Actor":"dotnet-bot","Number":"41922","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41922","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41922)"},{"Id":"570266451","IsPullRequest":true,"CreatedAt":"2020-02-25T04:11:37","Actor":"dotnet-bot","Number":"41921","RawContent":null,"Title":"Merge release/dev16.5 to release/dev16.5-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5 into release/dev16.5-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-to-release/dev16.5-vs-deps\ngit reset --hard upstream/release/dev16.5-vs-deps\ngit merge upstream/release/dev16.5\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-to-release/dev16.5-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41921","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5 to release/dev16.5-vs-deps\" (#41921)"},{"Id":"570298832","IsPullRequest":false,"CreatedAt":"2020-02-25T04:11:33","Actor":"AArnott","Number":"41925","RawContent":null,"Title":"C# xml \"see cref\" incorrectly resolves to internal type (or fails to resolve)","State":"open","Body":"**Version Used**: 16.6.0 Preview 1.0 (29823.26.master)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a solution with three projects. \r\n1. Two libraries define the same type, but one is internal while the other is public.\r\n2. The third project references both of the other libraries, and references the (public) type both within a method body and in its xml doc comment.\r\n\r\nSee minimal repro: [RoslynInternalRepro.zip](https://github.com/dotnet/roslyn/files/4248029/RoslynInternalRepro.zip)\r\n\r\n**Expected Behavior**:\r\n\r\nNo compile errors or warnings.\r\nGo to Definition on either reference to the type defined in both referenced projects should always jump to the *public* type, since that's the one we have visibility to.\r\n\r\n**Actual Behavior**:\r\n\r\nIn the minimal repro, Go To Definition on the xml doc comment's cref jumps to the *internal* type.\r\n\r\nIn the original repro solution (in the VS repo), it wouldn't even compile. It complained about the cref, even though the method body itself had no problem referencing the right one:\r\n\r\n> error CS0419: Ambiguous reference in cref attribute: 'VsTaskLibraryHelper'. Assuming 'VsTaskLibraryHelper', but could have also matched other overloads including 'VsTaskLibraryHelper'.\r\n\r\n![badGTD gif](https://user-images.githubusercontent.com/3548/75214362-7e840880-574a-11ea-853f-78ef4aafd7fe.gif)\r\n","Url":"https://github.com/dotnet/roslyn/issues/41925","RelatedDescription":"Open issue \"C# xml \"see cref\" incorrectly resolves to internal type (or fails to resolve)\" (#41925)"},{"Id":"570266330","IsPullRequest":true,"CreatedAt":"2020-02-25T03:22:30","Actor":"dotnet-bot","Number":"41920","RawContent":null,"Title":"Merge release/dev16.5-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.5-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41920","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5-vs-deps to master-vs-deps\" (#41920)"},{"Id":"570283553","IsPullRequest":false,"CreatedAt":"2020-02-25T03:19:32","Actor":"davkean","Number":"41924","RawContent":null,"Title":"Searching for \"unimported\" in options doesn't show the associated setting","State":"open","Body":"![image](https://user-images.githubusercontent.com/1103906/75212051-d584ee80-57d9-11ea-9b9b-ed8977770ee1.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/41924","RelatedDescription":"Open issue \"Searching for \"unimported\" in options doesn't show the associated setting\" (#41924)"},{"Id":"570276068","IsPullRequest":true,"CreatedAt":"2020-02-25T02:55:00","Actor":"allisonchou","Number":"41923","RawContent":null,"Title":"Fix for change signature can misplace comments and whitespace","State":"open","Body":"Fixes #33801.\r\n\r\nPreviously, Change Signature did not correctly place comments and whitespace when reordering and removing parameters. With the fix, comments and trivia should now be correctly preserved in common cases.\r\n\r\n``` C#\r\n    public void M(int a /* a */, // a2\r\n                        /* b */ int b /* b2 */, /* b3 */\r\n                        int c /* c */)\r\n```\r\nReordered to (c, a, b):\r\n``` C#\r\n    public void M(int c /* c */,\r\n                        int a /* a */, /* a2 */\r\n                        /* b */ int b /* b2 */ /* b3 */)\r\n```\r\nBehavior for VB is slightly different since there are no multi-line comments.\r\n``` VB\r\n    Sub M(a As Integer, b As Integer, ' b\r\n          c As Integer) ' c\r\n```\r\nReordered to (c, a, b):\r\n``` VB\r\n    Sub M(c As Integer, ' c\r\n          a As Integer,\r\n          b As Integer) ' b\r\n```\r\n\r\nThis PR will likely have merge conflicts with #38748.","Url":"https://github.com/dotnet/roslyn/pull/41923","RelatedDescription":"Open PR \"Fix for change signature can misplace comments and whitespace\" (#41923)"},{"Id":"570266209","IsPullRequest":true,"CreatedAt":"2020-02-25T02:21:53","Actor":"dotnet-bot","Number":"41919","RawContent":null,"Title":"Merge release/dev16.5 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.5\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41919","RelatedDescription":"Open PR \"Merge release/dev16.5 to master\" (#41919)"},{"Id":"570255393","IsPullRequest":true,"CreatedAt":"2020-02-25T01:45:40","Actor":"RikkiGibson","Number":"41918","RawContent":null,"Title":"Fix well-known Equals method nullable analysis bug","State":"open","Body":"Closes #40577\r\n\r\nI wrongly assumed that a method that implements e.g. IEquatable<T>.Equals would be contained in a class that implements IEquatable<T>.","Url":"https://github.com/dotnet/roslyn/pull/41918","RelatedDescription":"Open PR \"Fix well-known Equals method nullable analysis bug\" (#41918)"},{"Id":"570248615","IsPullRequest":false,"CreatedAt":"2020-02-25T01:22:43","Actor":"JoeRobich","Number":"41917","RawContent":null,"Title":"Unskip TestOpenSolution_NetCoreMultiTFMWithProjectReferenceToFSharp","State":"open","Body":"The .NET Core SDK that shipped with VS 16.5 Preview 2.0 has issues with FSharp projects. See https://stackoverflow.com/questions/59875784/fsharpcoreshippedpackageversion-is-not-a-valid-version-string\r\n\r\nOnce the CI machines are upgraded with a more recent preview version we can unskip the test skipped in https://github.com/dotnet/roslyn/pull/41909.","Url":"https://github.com/dotnet/roslyn/issues/41917","RelatedDescription":"Open issue \"Unskip TestOpenSolution_NetCoreMultiTFMWithProjectReferenceToFSharp\" (#41917)"},{"Id":"570209800","IsPullRequest":true,"CreatedAt":"2020-02-25T01:07:26","Actor":"dotnet-bot","Number":"41915","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41915","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41915)"},{"Id":"570229743","IsPullRequest":true,"CreatedAt":"2020-02-25T01:01:03","Actor":"genlu","Number":"41916","RawContent":null,"Title":"Fix inconsistent sorting in CompletionService and ItemManager.","State":"closed","Body":"Also properly mark expanded item when in attribute name context.\r\n\r\nThis is retargeting #41712 to dev16.5 branch. I have reverted changes related to editor package upgrades and squashed everything into a single commit, no other changes otherwise.\r\n\r\nFYI @JoeRobich @jasonmalinowski ","Url":"https://github.com/dotnet/roslyn/pull/41916","RelatedDescription":"Closed or merged PR \"Fix inconsistent sorting in CompletionService and ItemManager.\" (#41916)"},{"Id":"570209497","IsPullRequest":true,"CreatedAt":"2020-02-25T00:49:50","Actor":"dotnet-bot","Number":"41913","RawContent":null,"Title":"Merge release/dev16.5 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.5\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41913","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5 to master\" (#41913)"},{"Id":"570209725","IsPullRequest":true,"CreatedAt":"2020-02-25T00:45:41","Actor":"dotnet-bot","Number":"41914","RawContent":null,"Title":"Merge release/dev16.5 to release/dev16.5-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5 into release/dev16.5-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-to-release/dev16.5-vs-deps\ngit reset --hard upstream/release/dev16.5-vs-deps\ngit merge upstream/release/dev16.5\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-to-release/dev16.5-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41914","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5 to release/dev16.5-vs-deps\" (#41914)"},{"Id":"570195008","IsPullRequest":true,"CreatedAt":"2020-02-24T22:47:18","Actor":"gafter","Number":"41912","RawContent":null,"Title":"Implement relational patterns for decimal.","State":"open","Body":"* Implement relational patterns for decimal.\r\n* Implements and tests null purity checking for the type pattern `object` (e.g. in `is not object`).\r\n* Significantly improves the debug dumper for the decision dag builder.\r\n* Fixed a bug in EnumeratedValueSet and enhanced the fuzz tests to catch it.\r\n* Move to common random-set generation code.\r\n* Rename the typeclass interfaces xTC to IxTC.\r\n* Improve the `ToString` for `char`.\r\n* Add double complement tests.\r\n* Changes recommended in previous PR code review.\r\n\r\n@RikkiGibson @agocke Can you review this please?  It addresses one of the outstanding pattern-matching issues from https://github.com/dotnet/roslyn/issues/41502\r\n","Url":"https://github.com/dotnet/roslyn/pull/41912","RelatedDescription":"Open PR \"Implement relational patterns for decimal.\" (#41912)"},{"Id":"570149606","IsPullRequest":false,"CreatedAt":"2020-02-24T21:12:55","Actor":"Erarndt","Number":"41911","RawContent":null,"Title":"The \"Introduce constant\" refactoring can conflict with type names","State":"open","Body":"**Version Used**: \r\nVS 16.4.5\r\n.NET Core 3.1\r\n\r\n**Steps to Reproduce**:\r\n\r\nConsider this code snippet\r\n\r\n![image](https://user-images.githubusercontent.com/60519722/75191256-d1d46780-5706-11ea-948c-25630cf5c360.png)\r\n\r\n\r\nIf I introduce a constant for `\"C:\\SomePath\"`, `Path` is chosen as the name for the constant. This conflicts with `Path` in the static call to `GetFullPath()`. I'm then in an inline rename where the name of the type is included.\r\n\r\n![image](https://user-images.githubusercontent.com/60519722/75191192-ba957a00-5706-11ea-800a-c95b8509c037.png)\r\n\r\n\r\n**Expected Behavior**:\r\nIntroducing a constant will not cause name conflicts.\r\n\r\n**Actual Behavior**:\r\nIntroducing a constant conflicts with a type name.","Url":"https://github.com/dotnet/roslyn/issues/41911","RelatedDescription":"Open issue \"The \"Introduce constant\" refactoring can conflict with type names\" (#41911)"},{"Id":"570141607","IsPullRequest":false,"CreatedAt":"2020-02-24T20:55:53","Actor":"mavasani","Number":"41910","RawContent":null,"Title":"Light bulb actions for bulk configuring analyzer severities","State":"open","Body":"### Existing compiler support\r\nWe recently added .editorconfig support in compiler layer to allow bulk configuring analyzer diagnostics (#38886). It supports two modes of bulk configuration:\r\n\r\n1. Category based: Configure default severity/disable by default all analyzer diagnostics of a specific diagnostic `category`. Note each diagnostic has a diagnostic category, which is also shown in the `Category` column in error list.\r\n2. All analyzer diagnostics: Configure default severity/disable by default all analyzer diagnostics.\r\n\r\nRule ID based editorconfig/ruleset configuration takes precedence over category based configuration, which in turn takes precedence over all analyzer diagnostics configuration.\r\n\r\n### Proposal\r\nThis issue proposes enhancing the `Suppress or Configure issues` light bulb actions menu to include new bulk configuration actions towards the bottom of these sub-menu:\r\n\r\n1. Two new nested sub-menu items at the bottom of “Suppress or Configure issues” actions.\r\n![TopLevel](https://user-images.githubusercontent.com/10605811/75190181-99cc2500-5704-11ea-9894-f31e38eb1c53.png)\r\n\r\n2. Actions will be de-duped, so if there are multiple diagnostics with same category on the line, say ‘Style’, still only one menu for ‘Style’ analyzers will appear.\r\n\r\n3. Expanding the first category-based configuration menu item will add/update the following entry with a comment:\r\n![CategoryBased](https://user-images.githubusercontent.com/10605811/75190211-ab153180-5704-11ea-942b-6f2cea6f709d.png)\r\n\r\n4. Expanding the last ‘all’ analyzers configuration menu will add/update the following entry with a comment:\r\n![AllAnalzyers](https://user-images.githubusercontent.com/10605811/75190236-b700f380-5704-11ea-87d2-e4fefaec38af.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/41910","RelatedDescription":"Open issue \"Light bulb actions for bulk configuring analyzer severities\" (#41910)"},{"Id":"570073569","IsPullRequest":true,"CreatedAt":"2020-02-24T19:16:05","Actor":"JoeRobich","Number":"41909","RawContent":null,"Title":"Switch integration tests back to the preview queue","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41909","RelatedDescription":"Open PR \"Switch integration tests back to the preview queue\" (#41909)"},{"Id":"570049817","IsPullRequest":false,"CreatedAt":"2020-02-24T18:40:30","Actor":"TessenR","Number":"41908","RawContent":null,"Title":"ref ternary expressions should not report nullability mismatch from unreachable branches","State":"open","Body":"**Version Used**: \r\n```\r\ncommit 7aa825c699587a792395b75831109fff2deab183 (HEAD -> master, origin/master, origin/HEAD)\r\nMerge: c288341698 e16f4ede7b\r\nAuthor: Manish Vasani <mavasani@microsoft.com>\r\nDate:   Mon Feb 24 05:20:55 2020 -0800\r\n\r\n    Merge pull request #41635 from mavasani/UnusedParameter\r\n\r\n    Remove an unused parameter\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code\r\n```cs\r\n#nullable enable\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nclass C<T>\r\n{\r\n  [DoesNotReturn] public ref string? Fail() => throw null!;\r\n  \r\n  public void M1(string s)\r\n  {\r\n    string y = \"\".Length > 0 ? Fail() : s;\r\n    ref string x = ref \"\".Length > 0 ? ref Fail() : ref s;\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warnings. There's only one valid branch in both conditional expressions\r\n\r\n**Actual Behavior**:\r\n`warning CS8619: Nullability of reference types in value of type 'string?' doesn't match target type 'string'.` is reported for the ref conditional expression only.\r\n\r\n**Notes**\r\nSince it's impossible for the conditional expression to return `string?` as the method is annotated as `[DoesNotReturn]` it should neither produce warnings for converting `string?` to the conditional expression's common type nor take its top level nullability into account when inferring nullability of the conditional expression. Note that this is how Roslyn behaves with regular (non-ref) conditional expression as it recognizes that `\"\".Length > 0 ? Fail() : s` returns non-nullable string and does not warn about converting it to non-nullable variable (such warnings appear if you remove the `[DoesNotReturn]` annotation\r\n","Url":"https://github.com/dotnet/roslyn/issues/41908","RelatedDescription":"Open issue \"ref ternary expressions should not report nullability mismatch from unreachable branches\" (#41908)"},{"Id":"569985193","IsPullRequest":false,"CreatedAt":"2020-02-24T16:51:39","Actor":"Evangelink","Number":"41907","RawContent":null,"Title":"Is it possible to have IArgumentOperation.Parameter null?","State":"open","Body":"Hi,\r\n\r\nThe `IArgumentOperation` operation has a `Parameter` property, are we ensured that the result is never null? If not could you please give some info toward when this could be null?\r\n\r\nI'd like to increase the coverage of one analyzer, so I either need to remove the null check or add a unit-test.\r\n\r\nSee https://github.com/dotnet/roslyn-analyzers/issues/3115\r\n\r\nThank you","Url":"https://github.com/dotnet/roslyn/issues/41907","RelatedDescription":"Open issue \"Is it possible to have IArgumentOperation.Parameter null?\" (#41907)"},{"Id":"569913868","IsPullRequest":true,"CreatedAt":"2020-02-24T16:15:24","Actor":"dotnet-bot","Number":"41906","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41906","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41906)"},{"Id":"569748473","IsPullRequest":false,"CreatedAt":"2020-02-24T15:07:51","Actor":"Theoistic","Number":"41904","RawContent":null,"Title":"CSharpCompilationOptions - nostdlib & noconfig","State":"closed","Body":"I cant invoke \"csc /target:library -out:{buildOutput}{project.Name}.dll /noconfig /nostdlib /r:$WASM_SDK/wasm-bcl/wasm/mscorlib.dll\"\r\n\r\nusing roslyn's CSharpCompilationOptions, it seems that /nostdlib is unavailable within the CompilationOptions.\r\n\r\nin the attempt to precompile the library before mono-wasm packaging, since mono, includes its own facades of objects and types, i should be able to compile using roslyn with the provided mono libraries.\r\n\r\nis it the aim to provide CompilationOptions with mapped properties to the csc options?\r\n","Url":"https://github.com/dotnet/roslyn/issues/41904","RelatedDescription":"Closed issue \"CSharpCompilationOptions - nostdlib & noconfig\" (#41904)"},{"Id":"569863401","IsPullRequest":false,"CreatedAt":"2020-02-24T13:39:50","Actor":"zlatanov","Number":"41905","RawContent":null,"Title":"IDE0060 incorrectly reported when a scoped variable is introduced.","State":"open","Body":"**Version Used**: 16.4.5\r\n\r\nThe following program triggers the bug. The code `attempt += 1;` is reported as unneeded which is incorrect.\r\n\r\n``` c#\r\nusing System;\r\n\r\nclass X\r\n{\r\n    public X() { }\r\n    public X( int value ) => Value = value;\r\n    public int Value { get; set; }\r\n}\r\n\r\nclass Program\r\n{\r\n    static object Execute( X x ) => throw new NotImplementedException();\r\n\r\n\r\n    static object Run()\r\n    {\r\n        var attempt = 1;\r\n\r\n        while ( true )\r\n        {\r\n            try\r\n            {\r\n                var result = Execute( new X\r\n                {\r\n                    Value = 1\r\n                } );\r\n\r\n                return result;\r\n            }\r\n            catch when ( attempt <= 5 ) { }\r\n\r\n            attempt += 1;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nA few minor changes to the program eliminate the issue:\r\n1. Do not use property initializers for `new X()` - `Execute( new X( 1 ) )`\r\n2. Do not introduce the local `result` and instead just `return Execute...`","Url":"https://github.com/dotnet/roslyn/issues/41905","RelatedDescription":"Open issue \"IDE0060 incorrectly reported when a scoped variable is introduced.\" (#41905)"},{"Id":"569612085","IsPullRequest":true,"CreatedAt":"2020-02-24T04:31:27","Actor":"dotnet-bot","Number":"41902","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41902","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41902)"},{"Id":"569612445","IsPullRequest":false,"CreatedAt":"2020-02-24T03:03:43","Actor":"jnm2","Number":"41903","RawContent":null,"Title":"SourceText.Write(TextWriter, TextSpan, CancellationToken) is unusable with a span start other than 0","State":"open","Body":"**Version Used**: 3.4.0 nupkg\r\n\r\nFor each character excluded from the start of the text by the start of the passed span, a character is incorrectly additionally excluded from the end of the text.\r\n\r\n```cs\r\nusing Microsoft.CodeAnalysis.Text;\r\nusing System;\r\n\r\npublic static class Program\r\n{\r\n    public static void Main()\r\n    {\r\n        var sourceText = SourceText.From(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\r\n\r\n        // Should print B to Z, but prints BCDEFGHIJKLMNOPQRSTUVWXY\r\n        sourceText.Write(Console.Out, TextSpan.FromBounds(1, sourceText.Length));\r\n        Console.WriteLine();\r\n\r\n        // Should print K to Z, but prints KLMNOP\r\n        sourceText.Write(Console.Out, TextSpan.FromBounds(10, sourceText.Length));\r\n        Console.WriteLine();\r\n\r\n        // Is an invalid span and SourceText.Write throws (as it should)\r\n        sourceText.Write(Console.Out, TextSpan.FromBounds(1, sourceText.Length + 1));\r\n\r\n        // Is an invalid span and SourceText.Write throws (as it should)\r\n        sourceText.Write(Console.Out, TextSpan.FromBounds(10, sourceText.Length + 1));\r\n    }\r\n}\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net48</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis\" Version=\"3.4.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/dotnet/roslyn/issues/41903","RelatedDescription":"Open issue \"SourceText.Write(TextWriter, TextSpan, CancellationToken) is unusable with a span start other than 0\" (#41903)"},{"Id":"569566037","IsPullRequest":true,"CreatedAt":"2020-02-23T21:58:43","Actor":"tmat","Number":"41901","RawContent":null,"Title":"WIP: Clean up project, document and solution infos","State":"open","Body":"Adds missing tests and argument validation. Moves argument validation closer to exposed public surface.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/37880","Url":"https://github.com/dotnet/roslyn/pull/41901","RelatedDescription":"Open PR \"WIP: Clean up project, document and solution infos\" (#41901)"},{"Id":"569553753","IsPullRequest":false,"CreatedAt":"2020-02-23T20:32:34","Actor":"gafter","Number":"41900","RawContent":null,"Title":"Flaky test CodeGenOperators.EmitSequenceOfBinaryExpressions_06","State":"open","Body":"The following failure occurs from time to time:\r\n\r\n``` none\r\nFailed tests \r\n0.9740011s \r\n✘ Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenOperators.EmitSequenceOfBinaryExpressions_06\r\nSystem.Threading.Tasks.TaskSchedulerException : An exception was thrown by a TaskScheduler.\\r\\n---- System.OutOfMemoryException : Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at System.Threading.Tasks.Task.ScheduleAndStart(Boolean needsProtection)\r\n   at System.Threading.Tasks.Task.InternalStartNew(Task creatingTask, Delegate action, Object state, CancellationToken cancellationToken, TaskScheduler scheduler, TaskCreationOptions options, InternalTaskOptions internalOptions, StackCrawlMark& stackMark)\r\n   at System.Threading.Tasks.TaskFactory.StartNew(Action`1 action, Object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskScheduler scheduler)\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 786\r\n   at Roslyn.Utilities.ObjectWriter.WriteValue(IObjectWritable value) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 277\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Internal.Generated.cs:line 2937\r\n   at Microsoft.CodeAnalysis.GreenNode.Roslyn.Utilities.IObjectWritable.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Syntax\\GreenNode.cs:line 457\r\n   at Roslyn.Utilities.ObjectWriter.WriteObjectWorker(IObjectWritable writable) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 822\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 804\r\n   at Roslyn.Utilities.ObjectWriter.WriteValue(IObjectWritable value) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 277\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Internal.Generated.cs:line 2937\r\n   at Microsoft.CodeAnalysis.GreenNode.Roslyn.Utilities.IObjectWritable.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Syntax\\GreenNode.cs:line 457\r\n   at Roslyn.Utilities.ObjectWriter.WriteObjectWorker(IObjectWritable writable) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 822\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 804\r\n   at Roslyn.Utilities.ObjectWriter.WriteValue(IObjectWritable value) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 277\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Internal.Generated.cs:line 2937\r\n   at Microsoft.CodeAnalysis.GreenNode.Roslyn.Utilities.IObjectWritable.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Syntax\\GreenNode.cs:line 457\r\n   at Roslyn.Utilities.ObjectWriter.WriteObjectWorker(IObjectWritable writable) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 822\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 804\r\n   at Roslyn.Utilities.ObjectWriter.WriteValue(IObjectWritable value) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 277\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Internal.Generated.cs:line 2937\r\n   at Microsoft.CodeAnalysis.GreenNode.Roslyn.Utilities.IObjectWritable.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Syntax\\GreenNode.cs:line 457\r\n   at Roslyn.Utilities.ObjectWriter.WriteObjectWorker(IObjectWritable writable) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 822\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 804\r\n   at Roslyn.Utilities.ObjectWriter.WriteValue(IObjectWritable value) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 277\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Internal.Generated.cs:line 2937\r\n   at Microsoft.CodeAnalysis.GreenNode.Roslyn.Utilities.IObjectWritable.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Syntax\\GreenNode.cs:line 457\r\n   at Roslyn.Utilities.ObjectWriter.WriteObjectWorker(IObjectWritable writable) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 822\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 804\r\n   at Roslyn.Utilities.ObjectWriter.WriteValue(IObjectWritable value) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 277\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Internal.Generated.cs:line 2937\r\n   at Microsoft.CodeAnalysis.GreenNode.Roslyn.Utilities.IObjectWritable.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Syntax\\GreenNode.cs:line 457\r\n   at Roslyn.Utilities.ObjectWriter.WriteObjectWorker(IObjectWritable writable) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 822\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 804\r\n   at Roslyn.Utilities.ObjectWriter.WriteValue(IObjectWritable value) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 277\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Internal.Generated.cs:line 2937\r\n   at Microsoft.CodeAnalysis.GreenNode.Roslyn.Utilities.IObjectWritable.WriteTo(ObjectWriter writer) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Syntax\\GreenNode.cs:line 457\r\n   at Roslyn.Utilities.ObjectWriter.WriteObjectWorker(IObjectWritable writable) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 822\r\n   at Roslyn.Utilities.ObjectWriter.WriteObject(Object instance, IObjectWritable instanceAsWritableOpt) in R:\\roslyn\\src\\Compilers\\Core\\Portable\\Serialization\\ObjectWriter.cs:line 804\r\n(and lots more)\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/41900","RelatedDescription":"Open issue \"Flaky test CodeGenOperators.EmitSequenceOfBinaryExpressions_06\" (#41900)"},{"Id":"569448084","IsPullRequest":true,"CreatedAt":"2020-02-23T06:51:24","Actor":"YairHalberstadt","Number":"41899","RawContent":null,"Title":"Fix definite assignment analysis of local function out parameters","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/41631\r\n\r\ncc @RikkiGibson \r\n\r\nI did not address https://github.com/dotnet/roslyn/pull/41597#issuecomment-585488435 since I don't believe the issue is reproducible until https://github.com/dotnet/roslyn/issues/41898 is fixed.","Url":"https://github.com/dotnet/roslyn/pull/41899","RelatedDescription":"Open PR \"Fix definite assignment analysis of local function out parameters\" (#41899)"},{"Id":"569447681","IsPullRequest":false,"CreatedAt":"2020-02-23T06:46:41","Actor":"YairHalberstadt","Number":"41898","RawContent":null,"Title":"Local Function doesn't update null state","State":"open","Body":"**Version Used**:  master as of 16th feb 2020\r\n\r\n**Steps to Reproduce**:\r\n\r\nExample 1.\r\n\r\n```csharp\r\nusing System;\r\npublic class C {\r\n    #nullable enable\r\n    public void M() {\r\n        string? x = \"\";\r\n        LocalF();\r\n        Console.WriteLine(x.ToString());\r\n        void LocalF() => x = null;\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**: Warning on `x.ToString()`\r\n\r\n**Actual Behavior**: no warning\r\n\r\nExample 2.\r\n\r\n```csharp\r\nusing System;\r\npublic class C {\r\n    #nullable enable\r\n    public void M() {\r\n        string? x = null;\r\n        LocalF();\r\n        Console.WriteLine(x.ToString());\r\n        void LocalF() => x = \"\";\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**: No warning\r\n\r\n**Actual Behavior**: Warning on `x.ToString()`\r\n","Url":"https://github.com/dotnet/roslyn/issues/41898","RelatedDescription":"Open issue \"Local Function doesn't update null state\" (#41898)"},{"Id":"569406523","IsPullRequest":true,"CreatedAt":"2020-02-22T23:10:32","Actor":"agocke","Number":"41897","RawContent":null,"Title":"Use ImmutableArray.CastUp instead of As","State":"open","Body":"CastUp has a static type requirement so it can avoid a type check.","Url":"https://github.com/dotnet/roslyn/pull/41897","RelatedDescription":"Open PR \"Use ImmutableArray.CastUp instead of As\" (#41897)"},{"Id":"569384384","IsPullRequest":true,"CreatedAt":"2020-02-22T19:50:34","Actor":"gafter","Number":"41896","RawContent":null,"Title":"Draft PR for integrating features/patterns3 into master","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41896","RelatedDescription":"Open PR \"Draft PR for integrating features/patterns3 into master\" (#41896)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"569915911","IsPullRequest":false,"CreatedAt":"2020-02-24T20:03:55","Actor":"wooowchik","Number":"8007","RawContent":null,"Title":"Set IlcPath environment on .csproj","State":"closed","Body":"I don't understand how on dotnet i need to set up the IlcPath environment,if my **Windows_NT.x64.Debug** folder is in D:\\corert-master\\bin\\Windows_NT.x64.Debug.\r\nAlso don't get what do you mean by : \r\n\"pass an extra /p:IlcPath=<repo_root>\\bin\\Windows_NT.x64.Debug argument to all dotnet commands below.\"\r\nThank for your help.","Url":"https://github.com/dotnet/corert/issues/8007","RelatedDescription":"Closed issue \"Set IlcPath environment on .csproj\" (#8007)"},{"Id":"569544350","IsPullRequest":true,"CreatedAt":"2020-02-23T19:24:54","Actor":"kant2002","Number":"8006","RawContent":null,"Title":"Update instructions how to build for Wasm","State":"open","Body":"","Url":"https://github.com/dotnet/corert/pull/8006","RelatedDescription":"Open PR \"Update instructions how to build for Wasm\" (#8006)"},{"Id":"569343169","IsPullRequest":true,"CreatedAt":"2020-02-23T16:09:21","Actor":"MichalStrehovsky","Number":"8001","RawContent":null,"Title":"Update compiler from dotnet/runtime","State":"closed","Body":"This also changes the mechanism by which we pick up RyuJIT - we now get it from Microsoft.NETCore.App.Runtime because Microsoft.NETCore.Jit was discontinued.","Url":"https://github.com/dotnet/corert/pull/8001","RelatedDescription":"Closed or merged PR \"Update compiler from dotnet/runtime\" (#8001)"},{"Id":"569517571","IsPullRequest":false,"CreatedAt":"2020-02-23T16:08:34","Actor":"MichalStrehovsky","Number":"8005","RawContent":null,"Title":"Non-deterministic failure in EnumerateEnvironmentVariables test","State":"open","Body":"Seen in #8001\r\n\r\n```\r\n2020-02-23T08:23:25.3097153Z    System.Tests.GetEnvironmentVariable.EnumerateEnvironmentVariables(target: Machine) [FAIL]\r\n2020-02-23T08:23:25.3131821Z       Assert.Equal() Failure\r\n2020-02-23T08:23:25.3136047Z       Expected: rlkpxmt5.l41\r\n2020-02-23T08:23:25.3147233Z       Actual:   (null)\r\n2020-02-23T08:23:25.3158030Z       Stack Trace:\r\n2020-02-23T08:23:25.3173213Z             at System.Tests.GetEnvironmentVariable.EnumerateEnvironmentVariables(EnvironmentVariableTarget) + 0x213\r\n2020-02-23T08:23:25.3176342Z             at xunit.console.netcore!<BaseAddress>+0x881097\r\n2020-02-23T08:23:25.3177870Z             at System.InvokeUtils.CalliIntrinsics.Call(IntPtr, Object, IntPtr, InvokeUtils.ArgSetupState&, Boolean) + 0x47\r\n2020-02-23T08:23:25.3179432Z             at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x2fd\r\n2020-02-23T08:23:38.5566093Z Finished:    System.Runtime.Extensions.Tests\r\n```","Url":"https://github.com/dotnet/corert/issues/8005","RelatedDescription":"Open issue \"Non-deterministic failure in EnumerateEnvironmentVariables test\" (#8005)"},{"Id":"569512194","IsPullRequest":true,"CreatedAt":"2020-02-23T15:31:03","Actor":"MichalStrehovsky","Number":"8004","RawContent":null,"Title":"Use TypeFlags enum instead of CorElementType in EEType","State":"open","Body":"Fixes #478.\r\n\r\nIt doesn't fully reap the benefits yet (we can e.g. delete the IsInterface and IsValueType bits). I'm going to work on those later. This is already too big and too scary.","Url":"https://github.com/dotnet/corert/pull/8004","RelatedDescription":"Open PR \"Use TypeFlags enum instead of CorElementType in EEType\" (#8004)"},{"Id":"569434211","IsPullRequest":true,"CreatedAt":"2020-02-23T12:44:16","Actor":"jkotas","Number":"8002","RawContent":null,"Title":"Use standard System.Runtime.InteropServices in System.Private.StackTraceGenerator","State":"closed","Body":"StackTraceGenerator has reflection disabled that prevents lazy interop resolution from working.\r\n\r\nFixes #7955","Url":"https://github.com/dotnet/corert/pull/8002","RelatedDescription":"Closed or merged PR \"Use standard System.Runtime.InteropServices in System.Private.StackTraceGenerator\" (#8002)"},{"Id":"569463233","IsPullRequest":false,"CreatedAt":"2020-02-23T08:53:04","Actor":"jkotas","Number":"8003","RawContent":null,"Title":"Lazy interop resolution does not work with reflection disabled ","State":"open","Body":"We are missing module metadata. More context: https://github.com/dotnet/corert/pull/8002#pullrequestreview-363072184","Url":"https://github.com/dotnet/corert/issues/8003","RelatedDescription":"Open issue \"Lazy interop resolution does not work with reflection disabled \" (#8003)"},{"Id":"569339754","IsPullRequest":true,"CreatedAt":"2020-02-22T23:59:48","Actor":"MichalStrehovsky","Number":"8000","RawContent":null,"Title":"Make `Activator.CreateInstance<T>` 50% faster","State":"closed","Body":"|                              | Ratio |\r\n|------------------------------|------:|\r\n| new                          |   1.0 |\r\n| Activator.CreateInstance old |  2.36 |\r\n| Activator.CreateInstance new |  1.26 |\r\n\r\nThe existing implementation was a bit awkward because of how the intrinsic was implemented in .NET Native (the intrinsic in .NET Native did allocate+call default constructor - in CoreRT we have a separate intrinsic for \"get default constructor\").\r\n\r\n.NET Native required an awkward dance around \"uh-oh, this type doesn't have a default constructor, what should I call now\". None of that is needed in CoreRT, but we had it there so that we don't diverge too much. It was 3x faster than CoreCLR anyway. We no longer have to worry about diverging and it seems like CoreCLR might be getting a perf boost here for .NET 5, so let's not stay behind.\r\n\r\nIn this commit:\r\n* Removing the `s_createInstanceMissingDefaultConstructor` flag - we can do this check quickly by comparing the retrieved default constructor with `DefaultConstructorOf<ClassWithMissingConstructor>`.\r\n* Removing upfront checks for arrays/strings/interfaces. We no longer have to worry about accidentally allocating them. We detect them as not having a default ctor.\r\n* For an additional perf boost, exposing `AllocatorOf<T>`. This is a new intrinsic that expands to the existing `AllocatorOf` dictionary entry that represents the optimized allocator method for T. This entry is normally only used in universal shared code, but it's valid to use it outside of that.\r\n* Extra compiler support for dictionary entries that are double indirections. `AllocatorOf` is doubly-indirect for USG reasons. We should probably keep that for universal shared code anyway.\r\n\r\nThere's still room left for improvement - RyuJIT currently doesn't have support for the `RawCalli` intrinsic and generates a normal calli for them. Normal calli needs to check for fat function pointers. These pointers are never fat pointers.","Url":"https://github.com/dotnet/corert/pull/8000","RelatedDescription":"Closed or merged PR \"Make `Activator.CreateInstance<T>` 50% faster\" (#8000)"},{"Id":"569248181","IsPullRequest":false,"CreatedAt":"2020-02-22T02:44:21","Actor":"christianscheuer","Number":"7999","RawContent":null,"Title":"Relatively new futimens dependency in pal_io breaks macOS 10.12 compatibility","State":"closed","Body":"I understand the official .NET builds only support 10.13+ now - but we have tons of customers who are still on 10.12 so we need to keep supporting it in our product releases.\r\n\r\nWhen recently upgrading to a newer build of corert, we noticed that a specific change here is causing issues for us since it relies on a 10.13+ feature (futimens):\r\nhttps://github.com/dotnet/corefx/pull/37583/files#diff-711617c0d34d2b9153911b15c7671db9R1328\r\nWe have to build on Mojave due to Apple notarization requirements - not sure if this has any significance.\r\n\r\nI suspect for this we need to build our own coreclr and somehow manually undefine HAVE_FUTIMENS and then feed it into CoreRT. Is there a recommended approach for building such \"compatibility builds\" and linking them in?\r\nAny guidance to get started would be very helpful (we haven't used source builds of CoreRT for over a year since the platform has been very stable and just working for us out of the box).\r\n","Url":"https://github.com/dotnet/corert/issues/7999","RelatedDescription":"Closed issue \"Relatively new futimens dependency in pal_io breaks macOS 10.12 compatibility\" (#7999)"},{"Id":"569142065","IsPullRequest":true,"CreatedAt":"2020-02-21T19:30:38","Actor":"yowl","Number":"7998","RawContent":null,"Title":"WIP: Wasm: Reenable the CI for Wasm","State":"open","Body":"Seems like the only way to test this is to create a PR and keep editing it until it works....\r\n\r\nFirst commit just to see if I'm on the right track and can add a Wasm platform to the matrix and see what it runs.   Have commented out other platforms, I will redo the push squashing commits when it works.\r\n\r\nWhat's required is to install emscripten 1.39.4 (or later) activate it, set up the env, then run `build wasm {configuration}`   ... I think.","Url":"https://github.com/dotnet/corert/pull/7998","RelatedDescription":"Open PR \"WIP: Wasm: Reenable the CI for Wasm\" (#7998)"},{"Id":"569015743","IsPullRequest":true,"CreatedAt":"2020-02-21T18:55:08","Actor":"kant2002","Number":"7997","RawContent":null,"Title":"Speculative changes to high-level plan","State":"closed","Body":"This is to gather feedback from core team,\r\nand maybe improve documentation slightly","Url":"https://github.com/dotnet/corert/pull/7997","RelatedDescription":"Closed or merged PR \"Speculative changes to high-level plan\" (#7997)"},{"Id":"568997293","IsPullRequest":true,"CreatedAt":"2020-02-21T14:44:22","Actor":"kant2002","Number":"7996","RawContent":null,"Title":"Update references from CoreCLR repo to Runtime","State":"open","Body":"Update links to new unified [dotnet/runtime](https://github.com/dotnet/runtime) repo","Url":"https://github.com/dotnet/corert/pull/7996","RelatedDescription":"Open PR \"Update references from CoreCLR repo to Runtime\" (#7996)"},{"Id":"564893362","IsPullRequest":true,"CreatedAt":"2020-02-19T09:24:55","Actor":"yowl","Number":"7983","RawContent":null,"Title":"Wasm: upgrade to LLVM/LLVMSharp 9 and the llvm wasm backend.","State":"closed","Body":"This PR moves us from the old static function LLVMSharp style to the OO style, and upgrades to the Emscripten upstream backend which is the way forward and allows us to move to LLVM 9 and it's Wasm backend.  This will allow CoreRT to compile larger Wasm projects which at the moment hit https://github.com/emscripten-core/emscripten/issues/8393\r\n\r\nSorry about the huge number of commits, I thought maybe I could squash at the point of the PR but don't see an option for that.  The contentions points are really the Native/Runtime function signature changes and https://github.com/dotnet/corert/compare/master...yowl:llvm8-gvm?expand=1#diff-1bed6054b85520e1ab53fa3a5c8f6a21.\r\n\r\nFor some background on why I've done that:\r\n\r\nhttps://gist.github.com/yowl/c143f0520fa0544d41a24bce627086fe\r\nand\r\nhttps://bugs.llvm.org/show_bug.cgi?id=44381\r\n\r\nWIP while I see what happens to the CI.","Url":"https://github.com/dotnet/corert/pull/7983","RelatedDescription":"Closed or merged PR \"Wasm: upgrade to LLVM/LLVMSharp 9 and the llvm wasm backend.\" (#7983)"},{"Id":"567083648","IsPullRequest":false,"CreatedAt":"2020-02-18T18:39:00","Actor":"kant2002","Number":"7995","RawContent":null,"Title":"[Windows Forms] Controls support","State":"open","Body":"Here the summary of controls working in Windows Forms in my limited testing\r\n\r\n# Common Controls\r\n\r\n- [x] Button\r\n- [x] CheckBox\r\n- [ ] CheckedListBox Crash on click when empty or on startup if any items\r\n- [ ] ComboBox Crash on dropdown open\r\n- [ ] DateTimePicker Crash on select date\r\n- [x] Label\r\n- [ ] LinkLabel Crash on hover\r\n- [ ] ListBox Crash on select item\r\n- [x] ListView \r\n- [x] MaskedTextBox\r\n- [ ] MonthCalendar Crash on startup\r\n- [ ] NotifyIcon Crash on startup when icon set\r\n- [x] NumericUpDown\r\n- [ ] PictureBox Crash on startup\r\n- [x] ProgressBar\r\n- [x] RadioButton\r\n- [ ] RichTextBox Crash on startup\r\n- [x] TextBox\r\n- [x] ToolTip\r\n- [x] TreeView\r\n- [ ] WebBrowser Crash on startup\r\n\r\n# Containers\r\n- [x] FlowLayoutPanel\r\n- [x] GroupBox\r\n- [x] Panel\r\n- [ ] SplitContainer Crash on hover\r\n- [x] TabControl\r\n- [x] TableLayoutPanel\r\n\r\n# Menu & Toolstrip\r\n- [ ] ContextMenuStrip Crash on show\r\n- [ ] MenuStrip Crash on startup\r\n- [ ] StatusStrip Crash on startup when use ToolstripDropDown and ToolStripSplitButton\r\n- [ ] ToolStrip \r\n- [x] ToolStripContainer\r\n\r\nI can understand that some issues i due to lack of COM support, but some \"crash on selection\" looks more like CoreRT issue. Anyway, this issue to give visibility for list of supported out-of-box controls.","Url":"https://github.com/dotnet/corert/issues/7995","RelatedDescription":"Open issue \"[Windows Forms] Controls support\" (#7995)"},{"Id":"567027688","IsPullRequest":false,"CreatedAt":"2020-02-18T16:55:33","Actor":"kant2002","Number":"7994","RawContent":null,"Title":"[Windows Forms] Form.Close crash application","State":"open","Body":"If I show Form using `Form.Show` or `Form.ShowDialog` then after close form, application crashed.","Url":"https://github.com/dotnet/corert/issues/7994","RelatedDescription":"Open issue \"[Windows Forms] Form.Close crash application\" (#7994)"},{"Id":"566839053","IsPullRequest":false,"CreatedAt":"2020-02-18T11:47:56","Actor":"kant2002","Number":"7993","RawContent":null,"Title":"Manifest does not preserved","State":"open","Body":"Seems to be manifest file which enable modern look and feel for Windows Forms project, does not preserved after publishing.\r\n\r\n**Expected**\r\n![image](https://user-images.githubusercontent.com/4257079/74728072-59842700-526c-11ea-85d0-497e358a361b.png)\r\n\r\n**Actual**\r\n![image](https://user-images.githubusercontent.com/4257079/74728101-6274f880-526c-11ea-823e-584cd37f5152.png)\r\n\r\nrelated to #5662\r\n","Url":"https://github.com/dotnet/corert/issues/7993","RelatedDescription":"Open issue \"Manifest does not preserved\" (#7993)"},{"Id":"566355743","IsPullRequest":false,"CreatedAt":"2020-02-18T08:21:56","Actor":"kant2002","Number":"7991","RawContent":null,"Title":"Question: CoreRT branch","State":"closed","Body":"@MichalStrehovsky mention that CoreRT can live on dotnet/runtime brach here\r\nhttps://github.com/dotnet/corert/issues/7784#issuecomment-529241819\r\n\r\nIs this still an option?","Url":"https://github.com/dotnet/corert/issues/7991","RelatedDescription":"Closed issue \"Question: CoreRT branch\" (#7991)"},{"Id":"566589299","IsPullRequest":true,"CreatedAt":"2020-02-18T01:21:42","Actor":"yowl","Number":"7992","RawContent":null,"Title":"WIP: Wasm: Add conservative garbage collection","State":"open","Body":"Enables conservative garbage collection in the Wasm backend.  WIP as would like to solicit suggestions for tests.  Naively, I could loop and create some large arrays beyond the memory limit, which should cause a GC and succeed, but anything better/more sophisticated I should add to the tests?  So far the only test is to create and collect an object, testing through a `WeakReference`.\r\n\r\nWIP also as depends on #7983 at which point 99% of the diffs should disappear.\r\n\r\nCloses #5305 ","Url":"https://github.com/dotnet/corert/pull/7992","RelatedDescription":"Open PR \"WIP: Wasm: Add conservative garbage collection\" (#7992)"},{"Id":"566287286","IsPullRequest":false,"CreatedAt":"2020-02-17T13:41:16","Actor":"kant2002","Number":"7990","RawContent":null,"Title":"Failed to publish with-runtime project","State":"closed","Body":"I try publish `with-runtime` project on the ZeroSharp repo and it fails with following exception.\r\n\r\n```\r\n  Generating native code\r\n  \r\n  Unhandled Exception: System.TypeLoadException: System.Exception\r\n     at Internal.TypeSystem.Ecma.EcmaType.GetFinalizer()\r\n     at ILCompiler.CompilerTypeSystemContext.EnsureLoadableTypeUncached(TypeDesc type)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.CompilerTypeSystemContext.EnsureLoadableTypeUncached(TypeDesc type)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode..ctor(NodeFactory factory, TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateConstructedTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at Internal.IL.ILImporter.ImportCall(ILOpcode opcode, Int32 token)\r\n     at Internal.IL.ILImporter.ImportBasicBlock(BasicBlock basicBlock)\r\n     at Internal.IL.ILImporter.ImportBasicBlocks()\r\n     at Internal.IL.ILImporter.Import()\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nwith `efi-runtime` project it fails with following exception\r\n```\r\n  Unhandled Exception: System.TypeLoadException: RawCalliHelper\r\n     at Internal.TypeSystem.Ecma.EcmaType.GetFinalizer()\r\n     at ILCompiler.CompilerTypeSystemContext.EnsureLoadableTypeUncached(TypeDesc type)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode..ctor(NodeFactory factory, TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateNecessaryTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nit seems to be that this is indication that `classlib` module is lacking of important types. Then error message should be more clear about that. But I have to dig deeper into it.","Url":"https://github.com/dotnet/corert/issues/7990","RelatedDescription":"Closed issue \"Failed to publish with-runtime project\" (#7990)"},{"Id":"565972032","IsPullRequest":true,"CreatedAt":"2020-02-17T08:20:35","Actor":"jkotas","Number":"7989","RawContent":null,"Title":"Cleanup GetRawSzArrayData","State":"closed","Body":"Fixes #7984","Url":"https://github.com/dotnet/corert/pull/7989","RelatedDescription":"Closed or merged PR \"Cleanup GetRawSzArrayData\" (#7989)"},{"Id":"565791877","IsPullRequest":false,"CreatedAt":"2020-02-17T08:20:35","Actor":"MichalStrehovsky","Number":"7984","RawContent":null,"Title":"Clean up CoreLib after MemoryMarshal.GetArrayDataReference","State":"closed","Body":"We ingested dotnet/runtime#1036. The internal uses of `Array.GetRawSzArrayData()` should be cleaned up to use the new API.","Url":"https://github.com/dotnet/corert/issues/7984","RelatedDescription":"Closed issue \"Clean up CoreLib after MemoryMarshal.GetArrayDataReference\" (#7984)"},{"Id":"565893812","IsPullRequest":true,"CreatedAt":"2020-02-17T01:27:29","Actor":"jkotas","Number":"7988","RawContent":null,"Title":"Apply ifdef rename from dotnet/runtime (C# files)","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7988","RelatedDescription":"Closed or merged PR \"Apply ifdef rename from dotnet/runtime (C# files)\" (#7988)"},{"Id":"565793302","IsPullRequest":true,"CreatedAt":"2020-02-16T10:53:59","Actor":"MichalStrehovsky","Number":"7986","RawContent":null,"Title":"Update CoreLib from dotnet/runtime","State":"closed","Body":"CoreLib sources as of commit 571f972a5b1c7821870b1111bcc64726740957df in dotnet/runtime.\r\n\r\nI've reverted changes to the common ArrayBuilder.cs because our ArrayBuilder is different from the runtime one.\r\n\r\nI've also reverted change to the common SR.cs and excluded the shared CoreLib's SR.cs from build. We need to unify those two in the runtime repo first.\r\n\r\nGoing forward, we'll need to find a way to garbage collect the Common folder because deletes in the runtime repo won't easily propagate to our repo.","Url":"https://github.com/dotnet/corert/pull/7986","RelatedDescription":"Closed or merged PR \"Update CoreLib from dotnet/runtime\" (#7986)"},{"Id":"565800826","IsPullRequest":true,"CreatedAt":"2020-02-15T22:28:55","Actor":"MichalStrehovsky","Number":"7987","RawContent":null,"Title":"Limit pregenerated variant interface implementations","State":"closed","Body":"By default, we pregenerate all implementations of variant interface\r\nmethods on a type - this is because we don't have a good way of tracking\r\nhow variant interfaces are used (it gets quite complex for interfaces\r\nwith multiple variant parameters).\r\n\r\nWe previously at least limited this for interfaces where the variant\r\nargument happens to be a valuetype. We can further limit this for\r\ninterfaces where the parameter is contravariant and the argument is\r\na sealed type.\r\n\r\nThis doesn't help size as much as I would have hoped (no difference\r\nfor hello world, and 500 bytes for no-reflection hello world) but\r\nmaybe it will help more somewhere.","Url":"https://github.com/dotnet/corert/pull/7987","RelatedDescription":"Closed or merged PR \"Limit pregenerated variant interface implementations\" (#7987)"},{"Id":"565792255","IsPullRequest":false,"CreatedAt":"2020-02-15T18:44:56","Actor":"MichalStrehovsky","Number":"7985","RawContent":null,"Title":"Implement RhpGcPoll","State":"open","Body":"Currently implemented as a NOP.\r\n\r\nCorresponds to CORINFO_HELP_POLL_GC in CoreCLR. We might be able to steal some code from it.\r\n\r\nThere's also an ARM implementation of this available in src\\Native\\Runtime\\arm\\GcProbe.asm. That one was implemented for ProjectN, but the samantics should be the same.\r\n\r\nBecame necessary after we ingested dotnet/runtime#1772.","Url":"https://github.com/dotnet/corert/issues/7985","RelatedDescription":"Open issue \"Implement RhpGcPoll\" (#7985)"},{"Id":"563774158","IsPullRequest":true,"CreatedAt":"2020-02-14T15:01:49","Actor":"kant2002","Number":"7981","RawContent":null,"Title":"Document IlcSystemModule property and others","State":"closed","Body":"mentioned in #7554","Url":"https://github.com/dotnet/corert/pull/7981","RelatedDescription":"Closed or merged PR \"Document IlcSystemModule property and others\" (#7981)"},{"Id":"563770129","IsPullRequest":true,"CreatedAt":"2020-02-13T09:09:10","Actor":"kant2002","Number":"7980","RawContent":null,"Title":"Provide a way how to project work with local build","State":"closed","Body":"in additional to published packages.\r\n\r\nThis change mostly to show a way how customer can use CoreRT and made modifications when needed.\r\nLikely current users of CoreRT would be persons who can and would like to get hand dirty into CoreRT due to it's status.\r\n\r\nOther alternative is to have property `UseLocalCoreRT` which will be used to trigger local CoreRT usage.","Url":"https://github.com/dotnet/corert/pull/7980","RelatedDescription":"Closed or merged PR \"Provide a way how to project work with local build\" (#7980)"},{"Id":"564529018","IsPullRequest":true,"CreatedAt":"2020-02-13T08:53:13","Actor":"secana","Number":"7982","RawContent":null,"Title":"Add prerequisites for Fedora 31","State":"closed","Body":"Add prerequisites for Fedora 31 to compile .NET projects with CoreRT to the samples/prerequisites documentation.","Url":"https://github.com/dotnet/corert/pull/7982","RelatedDescription":"Closed or merged PR \"Add prerequisites for Fedora 31\" (#7982)"},{"Id":"562876791","IsPullRequest":false,"CreatedAt":"2020-02-10T22:51:38","Actor":"mjsabby","Number":"7979","RawContent":null,"Title":"Stackoverflow doing WaitOneNoCheck","State":"open","Body":"`DeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\n`","Url":"https://github.com/dotnet/corert/issues/7979","RelatedDescription":"Open issue \"Stackoverflow doing WaitOneNoCheck\" (#7979)"},{"Id":"562433102","IsPullRequest":true,"CreatedAt":"2020-02-10T17:41:03","Actor":"kant2002","Number":"7978","RawContent":null,"Title":"Add IlcSystemModule property","State":"closed","Body":"to control which module hold basetypes.\r\n\r\nInspired by required usage\r\nfrom https://github.com/MichalStrehovsky/SeeSharpSnake/pull/13","Url":"https://github.com/dotnet/corert/pull/7978","RelatedDescription":"Closed or merged PR \"Add IlcSystemModule property\" (#7978)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"569314604","IsPullRequest":true,"CreatedAt":"2020-02-25T05:21:34","Actor":"xontab","Number":"10702","RawContent":null,"Title":"Added dotnet new list of installed templates for ZSH script","State":"closed","Body":"* Added functionality to display installed templates when dotnet new command is used for ZSH completion script.","Url":"https://github.com/dotnet/sdk/pull/10702","RelatedDescription":"Closed or merged PR \"Added dotnet new list of installed templates for ZSH script\" (#10702)"},{"Id":"570205767","IsPullRequest":true,"CreatedAt":"2020-02-25T03:47:25","Actor":"mmitche","Number":"10711","RawContent":null,"Title":"[release/5.0.1xx-preview1] Update dependecies from latest for preview1","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/10711","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview1] Update dependecies from latest for preview1\" (#10711)"},{"Id":"570196832","IsPullRequest":true,"CreatedAt":"2020-02-24T23:13:15","Actor":"dotnet-maestro[bot]","Number":"10710","RawContent":null,"Title":"[release/5.0.1xx-preview1] Update dependencies from aspnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:35c654d4-fe48-4f3e-ee74-08d7b0df6fcb)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 35c654d4-fe48-4f3e-ee74-08d7b0df6fcb\r\n- **Build**: 20200224.2\r\n- **Date Produced**: 2/24/2020 10:13 PM\r\n- **Commit**: 566c7b7db0f445f49599e9c42351347ef65a08f8\r\n- **Branch**: refs/heads/release/5.0.1xx-preview1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web** -> 5.0.100-preview.1.20124.2\r\n\r\n[marker]: <> (End:35c654d4-fe48-4f3e-ee74-08d7b0df6fcb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10710","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview1] Update dependencies from aspnet/websdk\" (#10710)"},{"Id":"570165736","IsPullRequest":true,"CreatedAt":"2020-02-24T22:42:55","Actor":"dotnet-maestro[bot]","Number":"10709","RawContent":null,"Title":"[release/5.0.1xx-preview1] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:925d3edc-9be3-4cd6-c9a5-08d7b0e007f5)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 925d3edc-9be3-4cd6-c9a5-08d7b0e007f5\r\n- **Build**: 20200224.5\r\n- **Date Produced**: 2/24/2020 8:29 PM\r\n- **Commit**: 98a853b20131fd59b37076dd3699d8c7f62b24cb\r\n- **Branch**: refs/heads/release/5.0-preview1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.1.20124.5\r\n\r\n[marker]: <> (End:925d3edc-9be3-4cd6-c9a5-08d7b0e007f5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10709","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview1] Update dependencies from dotnet/aspnetcore\" (#10709)"},{"Id":"569841201","IsPullRequest":true,"CreatedAt":"2020-02-24T15:27:04","Actor":"dotnet-maestro[bot]","Number":"10707","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/23/2020 2:05 PM\r\n- **Commit**: 85d76351b1f0245c9f331f72219d12e8e2d48e72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20123.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10707","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10707)"},{"Id":"569884518","IsPullRequest":false,"CreatedAt":"2020-02-24T14:15:56","Actor":"avifatal","Number":"10708","RawContent":null,"Title":"The \"CreateAppHost\" task failed unexpectedly. (Version 16.4.5)","State":"open","Body":"Hi,\r\n\r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.4.5\r\nRandomly getting the bellow error. I have added my root folder to the antivirus exclusion list.\r\n\r\n```\r\nError\tMSB4018\tThe \"CreateAppHost\" task failed unexpectedly.\r\nMicrosoft.NET.HostModel.HResultException: 8007006E\r\n   at Microsoft.NET.HostModel.ResourceUpdater.Update()\r\n   at Microsoft.NET.HostModel.AppHost.HostWriter.<>c__DisplayClass2_0.<CreateAppHost>g__UpdateResources|1()\r\n   at Microsoft.NET.HostModel.RetryUtil.RetryOnWin32Error(Action func)\r\n   at Microsoft.NET.HostModel.AppHost.HostWriter.CreateAppHost(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String assemblyToCopyResorcesFrom)\r\n   at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tEyezServices.Client\tC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets\t393\t\r\n```\r\n\r\nThanks","Url":"https://github.com/dotnet/sdk/issues/10708","RelatedDescription":"Open issue \"The \"CreateAppHost\" task failed unexpectedly. (Version 16.4.5)\" (#10708)"},{"Id":"569711306","IsPullRequest":false,"CreatedAt":"2020-02-24T08:46:28","Actor":"roji","Number":"10706","RawContent":null,"Title":"Consider outputting test standard output without explicit verbosity option","State":"open","Body":"Currently, Console.WriteLine calls in tests don't appear in `dotnet test` output unless normal verbosity is set (i.e. `dotnet test -v n`). This is extremely undiscoverable, especially since a reasonable assumption is for the default verbosity to be normal ([the docs, mentioning only v2.1](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test?tabs=netcore21#options) and `dotnet test -h` say nothing about the default value for verbosity). It seems reasonable for Console.WriteLine to be shown by default without any switches.\r\n\r\nSee https://github.com/nunit/nunit3-vs-adapter/issues/343#issuecomment-589968287 for an NUnit issue on this and a test repo at https://github.com/roji/TestConsoleTests.","Url":"https://github.com/dotnet/sdk/issues/10706","RelatedDescription":"Open issue \"Consider outputting test standard output without explicit verbosity option\" (#10706)"},{"Id":"569641793","IsPullRequest":true,"CreatedAt":"2020-02-24T05:18:14","Actor":"dotnet-maestro-bot","Number":"10705","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.2xx' => 'master'","State":"open","Body":"I detected changes in the release/3.1.2xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.2xx by the following committers:\n\n* wli3\n* dotnet-maestro[bot]\n* dsplaisted\n* tmeschter\n* nguerrera\n* v-zbsail\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.2xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.2xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.2xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.2xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/10705","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.2xx' => 'master'\" (#10705)"},{"Id":"569229796","IsPullRequest":true,"CreatedAt":"2020-02-24T05:15:29","Actor":"wli3","Number":"10699","RawContent":null,"Title":"update to 3.1.2 runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/10699","RelatedDescription":"Closed or merged PR \"update to 3.1.2 runtime\" (#10699)"},{"Id":"569349099","IsPullRequest":false,"CreatedAt":"2020-02-23T19:04:46","Actor":"wasabii","Number":"10704","RawContent":null,"Title":"Unable to build WPF WindowsDesktop SDK project targeting NET472","State":"closed","Body":"The following began after updating to 3.1.101.\r\n\r\nReceiving the following error trying to compile a NET472 target using the WindowsDesktop SDK. It would appear the path being built to Program Files is incorrect. The `%29`'s in there are URL escaping, not appropriate to appear on file paths.\r\n\r\n`\r\nThe \"Microsoft.Build.Tasks.Windows.MarkupCompilePass1\" task could not be loaded from the assembly C:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\net472\\PresentationBuildTasks.dll. Could not load file or assembly 'file:///C:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\net472\\PresentationBuildTasks.dll' or one of its dependencies. The system cannot find the file specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\tSystemware.ContentCloud.Windows.Launch\tC:\\Program Files (x86)\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets\t225\t\r\n`\r\n\r\nI tracked this down to the path being used in `Microsoft.WinFx.props` file delivered in SDK 3.1.101. However, I'm not sure what the issue is here. It just seems to use System.IO.Path.GetFullPath on `MSBuildThisFileDirectory`. I don't know why %29s would originate from that.\r\n\r\nAnyways, I set `_PresentationBuildTasksAssembly` to the proper hard coded fully qualified path in my project file, and now it builds fine.","Url":"https://github.com/dotnet/sdk/issues/10704","RelatedDescription":"Closed issue \"Unable to build WPF WindowsDesktop SDK project targeting NET472\" (#10704)"},{"Id":"569331821","IsPullRequest":true,"CreatedAt":"2020-02-22T15:11:43","Actor":"dotnet-maestro[bot]","Number":"10703","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200221.6\r\n- **Date Produced**: 2/22/2020 12:56 AM\r\n- **Commit**: f83aa9749a531bf771a98e5bdace55b31a9bb2b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20121.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10703","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10703)"},{"Id":"569312848","IsPullRequest":false,"CreatedAt":"2020-02-22T10:06:55","Actor":"brcaswell","Number":"10701","RawContent":null,"Title":"T4 Run Tool errors with Compiler Transform Errors after installing VS2019 and SDK3.1","State":"open","Body":"The project(s) uses multi-target `<TargetFrameworks>netstandard2.0;netcoreapp2.2;net461</TargetFrameworks>`\r\n\r\nThe T4 transformation compiled without error with VS2017 and SDK2.1 (could have been SDK2.2 actually) with MSBuild in visual studio. (I don't recall doing `dotnet msbuild` in this repo)\r\n\r\n``` txt\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0116\tA namespace cannot directly contain members such as fields or methods\tEmpyrionNetAPIModBase (net461), EmpyrionNetAPIModBase (netcoreapp2.2), EmpyrionNetAPIModBase (netstandard2.0)\tE:\\gitrepos\\EmpyrionNetAPIAccess\\EmpyrionNetAPIModBase\\Autowire.ModBase.APIRequestsDefinition.cs\t1\tActive\r\nError\t\tCompiling transformation: The type 'List<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\tEmpyrionNetAPIBroker\tE:\\gitrepos\\EmpyrionNetAPIAccess\\EmpyrionNetAPIBroker\\Autowire.Broker.APIRequestsDefinition.tt\t28\t\r\nError\t\tCompiling transformation: The type 'Dictionary<,>' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\tEmpyrionNetAPIBroker\tE:\\gitrepos\\EmpyrionNetAPIAccess\\EmpyrionNetAPIBroker\\Autowire.Broker.APIRequestsDefinition.tt\t29\t\r\nError\t\tCompiling transformation: The type 'Type' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\tEmpyrionNetAPIBroker\tE:\\gitrepos\\EmpyrionNetAPIAccess\\EmpyrionNetAPIBroker\\Autowire.Broker.APIRequestsDefinition.tt\t181\t\r\n```\r\n\r\nProject is at [GitHub - EmpyrionNetAPIAccess](https://github.com/GitHub-TC/EmpyrionNetAPIAccess) \r\n\r\n---\r\n\r\nApart from creating this issue workitem on this observation, I would also like some feedback on using `global.json` option to specify an earlier sdk, and whether VS2017 \\ VS2019 will honor that.  I've read some information on the matter, but would like feedback\\clarification on the steps and considerations.","Url":"https://github.com/dotnet/sdk/issues/10701","RelatedDescription":"Open issue \"T4 Run Tool errors with Compiler Transform Errors after installing VS2019 and SDK3.1\" (#10701)"},{"Id":"568941568","IsPullRequest":true,"CreatedAt":"2020-02-21T23:40:21","Actor":"dotnet-maestro[bot]","Number":"10696","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200220.2\r\n- **Date Produced**: 2/20/2020 10:40 PM\r\n- **Commit**: df24cd9b34682b5509df5a08ef8a8952e5a4f623\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20120.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10696","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10696)"},{"Id":"569231384","IsPullRequest":false,"CreatedAt":"2020-02-21T23:15:48","Actor":"Forgind","Number":"10700","RawContent":null,"Title":"dotnet new with multiple consecutive dots in name","State":"open","Body":"![image](https://user-images.githubusercontent.com/12969783/75079073-541d1b80-54bc-11ea-8d1b-809a482cd8a0.png)\r\n![image](https://user-images.githubusercontent.com/12969783/75079225-dc032580-54bc-11ea-86f8-db68bde0660e.png)\r\n\r\nWe should copy what Visual Studio does.","Url":"https://github.com/dotnet/sdk/issues/10700","RelatedDescription":"Open issue \"dotnet new with multiple consecutive dots in name\" (#10700)"},{"Id":"569157162","IsPullRequest":false,"CreatedAt":"2020-02-21T20:23:18","Actor":"sebastienros","Number":"10698","RawContent":null,"Title":"Latest version not updated on blob storage","State":"closed","Body":"https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/latest.version\r\n\r\nDoesn't contain the latest version","Url":"https://github.com/dotnet/sdk/issues/10698","RelatedDescription":"Closed issue \"Latest version not updated on blob storage\" (#10698)"},{"Id":"569125064","IsPullRequest":false,"CreatedAt":"2020-02-21T19:10:27","Actor":"omajid","Number":"10697","RawContent":null,"Title":"Surprising template version of 3.1.3","State":"closed","Body":"Over in https://github.com/dotnet/sdk/issues/10435, @livarcocc explained:\r\n\r\n> The runtime version is used because [the template version] depicts which runtime it targets and it revs based on the runtime.\r\n\r\n> [At 3.0 GA, the template version will be] 3.0.0, matching the runtime that it targets.\r\n\r\nBut I just realized that the .NET Core SDK 3.1.102 release has a template version of `3.1.3`, which doesn't match the runtime version of `3.1.2`:\r\n\r\n```\r\n$ tar tf ~/downloads/dotnet-sdk-3.1.102-linux-x64.tar.gz | grep templates | head -2\r\n./templates/\r\n./templates/3.1.3/\r\n```\r\nIs this intentional?","Url":"https://github.com/dotnet/sdk/issues/10697","RelatedDescription":"Closed issue \"Surprising template version of 3.1.3\" (#10697)"},{"Id":"568788409","IsPullRequest":true,"CreatedAt":"2020-02-21T18:19:48","Actor":"dotnet-maestro[bot]","Number":"10694","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200220.1\r\n- **Date Produced**: 2/21/2020 6:54 AM\r\n- **Commit**: 2d163b87b605fd23ceebfb04484e5ec5f2bffc32\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10694","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#10694)"},{"Id":"568918336","IsPullRequest":true,"CreatedAt":"2020-02-21T12:09:17","Actor":"v-zbsail","Number":"10695","RawContent":null,"Title":"WIP LOC CHECKIN | dotnet/sdk master | 20200221","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/10695","RelatedDescription":"Open PR \"WIP LOC CHECKIN | dotnet/sdk master | 20200221\" (#10695)"},{"Id":"568783673","IsPullRequest":false,"CreatedAt":"2020-02-21T07:22:22","Actor":"Lonli-Lokli","Number":"10693","RawContent":null,"Title":"<Library>.runtimeconfig.json is not copied from nuget lib to output ","State":"open","Body":"Background: I would like to use dotnet tool as library but I need runtimeconfig.json for this to run dotnet.\r\n\r\nSo I have several issues: \r\n1) Referenced assembly dotnet-swagger.dll is not copied to output on dotnet build without `<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>`\r\n2) Even with <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies> only dotnet-swagger.dll is copied, dotnet-swagger.runtimeconfig.json is not copied as assets from nuget to output folder.\r\n3) It is not possible to filter out unnessesary libs from copying with previous solution\r\n<Target Name=\"FilterCopyLocalItems\" AfterTargets=\"ResolveLockFileCopyLocalProjectDeps\">\r\n  <ItemGroup>\r\n    <ReferenceCopyLocalPaths Remove=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(Filename)' == 'dotnet-swagger'\" />\r\n  </ItemGroup>\r\n</Target>\r\n[RuntimeConfigNugetIssue.zip](https://github.com/dotnet/sdk/files/4234748/RuntimeConfigNugetIssue.zip)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/10693","RelatedDescription":"Open issue \"<Library>.runtimeconfig.json is not copied from nuget lib to output \" (#10693)"},{"Id":"568667649","IsPullRequest":true,"CreatedAt":"2020-02-21T03:59:36","Actor":"dotnet-maestro[bot]","Number":"10691","RawContent":null,"Title":"[release/5.0.1xx-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b41a6d27-620f-4274-27aa-08d7b0dffbaa)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: b41a6d27-620f-4274-27aa-08d7b0dffbaa\r\n- **Build**: 20200220.5\r\n- **Date Produced**: 2/21/2020 12:43 AM\r\n- **Commit**: 3c523a6a7a3ebc25fe524359127b1d8846e23ea3\r\n- **Branch**: refs/heads/release/5.0-preview1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.1.20120.5\r\n\r\n[marker]: <> (End:b41a6d27-620f-4274-27aa-08d7b0dffbaa)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10691","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview1] Update dependencies from dotnet/runtime\" (#10691)"},{"Id":"568694421","IsPullRequest":false,"CreatedAt":"2020-02-21T02:18:02","Actor":"casperOne","Number":"10692","RawContent":null,"Title":"Expose command to generate unified project file","State":"open","Body":"Because of [`directory.build.props`](https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build), as well as the ability to [multi-level merge](https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build), looking at a project file does not give the full picture.\r\n\r\nAs an example, I have the following repo, which is being built on AppVeyor:\r\n\r\nhttps://github.com/OneFrameLink/Ofl.YouTube/tree/51db99296e9c71f9b48f47726c8c1776083a12c7\r\n\r\nSpecifically, following `directory.build.props`:\r\n\r\nhttps://github.com/OneFrameLink/Ofl.YouTube/blob/51db99296e9c71f9b48f47726c8c1776083a12c7/src/directory.build.props#L8\r\n\r\nWhile this is somewhat of a contrived example, I place the `TargetFramework` element in a `directory.build.props` file so that if I need to update the target framework, I do it in one place.\r\n\r\nUnfortunately, Appveyor doesn't currently see that when it looks at the project file as per the following issues:\r\n\r\nhttps://help.appveyor.com/discussions/problems/19869-not-picking-up-xunit-tests\r\nhttps://github.com/appveyor/ci/issues/2816\r\n\r\nAs a result, Appveyor doesn't detect the tests, nor does it push the output to NuGet even though it builds the solution just fine.\r\n\r\nWhat would be great is if there was `dotnet` command which when given a project file (and a file path to write to) will output the project file, with whatever `directory.build.props` file(s) that are taken into consideration when performing the build.\r\n\r\nThe existing `dotnet` commands have to already do this (and maintain some sort of unified store), so it should be a matter of just outputting that.\r\n\r\nThis would be very beneficial to build servers in particular.","Url":"https://github.com/dotnet/sdk/issues/10692","RelatedDescription":"Open issue \"Expose command to generate unified project file\" (#10692)"},{"Id":"568667492","IsPullRequest":false,"CreatedAt":"2020-02-21T00:54:43","Actor":"nguerrera","Number":"10690","RawContent":null,"Title":"Re-enable C++ tests when compiler that works with .NET 5 is available","State":"closed","Body":"Currently, C++ requires that targeting packs are installed and in 5.0 tests, we do not have 3.1 TP.\r\n\r\nSo I retargeted tests to 5.0, but the C++ toolchain has an issue with 5.0:\r\n\r\n```\r\nMSVCMRTD_netcore.LIB(mstartup.obj) : error LNK2022: metadata operation failed (80131195) : Custom attributes are not consistent: (0x0c000107). [C:\\Src\\sdk\\artifacts\\tmp\\Debug\\Given_Wpf_fra---0CC44EF4\\Project1.vcxproj] \r\n```\r\n\r\nI'll link to the internal bug here when I get it. The VS used for the tests would need to be upgraded to re-enable this test.\r\n","Url":"https://github.com/dotnet/sdk/issues/10690","RelatedDescription":"Closed issue \"Re-enable C++ tests when compiler that works with .NET 5 is available\" (#10690)"},{"Id":"568570035","IsPullRequest":true,"CreatedAt":"2020-02-20T21:00:55","Actor":"dotnet-maestro[bot]","Number":"10689","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200220.8\r\n- **Date Produced**: 2/21/2020 1:09 AM\r\n- **Commit**: cfac865f9d44a443843d7dfc660a497f7d5bdf5a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.2.20120.8\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10689","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#10689)"},{"Id":"568436719","IsPullRequest":false,"CreatedAt":"2020-02-20T16:55:14","Actor":"BrennanConroy","Number":"10688","RawContent":null,"Title":"Consider writing to console in one phase instead of two","State":"open","Body":"The issue is that writes are separated into two write calls one for the message and one for the newline.\r\nThis causes a race where other console writes can write to the end of the message before the newline resulting in output like:\r\n```\r\n2/19/2020 6:48:59 PM: post: 'Telemetry is: Disabled'\r\n2/19/2020 6:48:59 PM: recv: 'Telemetry is: Disabled'. Does not match condition '[msg == 'Started']'.\r\n2/19/2020 6:49:01 PM: post: 'Running /Users/runner/runners/2.164.8/work/1/s/artifacts/bin/dotnet-watch.Tests/Release/netcoreapp5.0/tmp/hlvmclue.i1h/GlobbingApp/bin/Debug/netcoreapp5.0/GlobbingApp '\r\n2/19/2020 6:49:01 PM: recv: 'Running /Users/runner/runners/2.164.8/work/1/s/artifacts/bin/dotnet-watch.Tests/Release/netcoreapp5.0/tmp/hlvmclue.i1h/GlobbingApp/bin/Debug/netcoreapp5.0/GlobbingApp '. Does not match condition '[msg == 'Started']'.\r\n2/19/2020 6:49:02 PM: post: 'Process ID: 14194Started' <---- bad line\r\n```\r\n\r\nThis is probably a very low priority enhancement, but just letting you know because it was causing races in some of our tests that need to check the console output. We should be able to workaround by turning off `DOTNET_CLI_CONTEXT_VERBOSE`.\r\n\r\nThe offending code is at:\r\nhttps://github.com/dotnet/sdk/blob/dc3dc1499ed2ce922c6c5fa2ad4a6c8166436049/src/Cli/Microsoft.DotNet.Cli.Utils/AnsiConsole.cs#L61-L62","Url":"https://github.com/dotnet/sdk/issues/10688","RelatedDescription":"Open issue \"Consider writing to console in one phase instead of two\" (#10688)"},{"Id":"568283686","IsPullRequest":true,"CreatedAt":"2020-02-20T15:42:08","Actor":"dotnet-maestro[bot]","Number":"10687","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200219.14\r\n- **Date Produced**: 2/20/2020 4:52 AM\r\n- **Commit**: 4660949bde1083e8b1efba3096dd145d590a0b17\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20119.14\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10687","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10687)"},{"Id":"568076487","IsPullRequest":false,"CreatedAt":"2020-02-20T06:16:57","Actor":"yuki233","Number":"10685","RawContent":null,"Title":"With SDK 5.0 installed,the default TargetFramework is 3.1 when creating Console and Test applications","State":"open","Body":"Steps to reproduced:\r\n1. Install 5.0.0-preview.1.20118.4 on Master from https://github.com/dotnet/core-sdk\r\n2. using CLI, create console or Unit Test project\r\n\r\nActual result:\r\n1. The default target framework is 3.1 rather than 5.0\r\n![image](https://user-images.githubusercontent.com/1578239/74906314-9591c600-53eb-11ea-8a5d-7175648b72d1.png)\r\n\r\nNote:\r\n1. Retarget framework to 5.0, project could be run successfully. \r\n","Url":"https://github.com/dotnet/sdk/issues/10685","RelatedDescription":"Open issue \"With SDK 5.0 installed,the default TargetFramework is 3.1 when creating Console and Test applications\" (#10685)"},{"Id":"568034759","IsPullRequest":false,"CreatedAt":"2020-02-20T04:00:08","Actor":"NextTurn","Number":"10684","RawContent":null,"Title":"'dotnet new sln' should create version 16 .sln files","State":"open","Body":"## Expected behavior\r\n\r\nIt's now [documented](https://docs.microsoft.com/dotnet/core/tutorials/with-visual-studio?tabs=csharp) that Visual Studio 2019 version 16.4 or a later version is required to develop .NET Core applications.\r\n\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 16\r\nVisualStudioVersion = 16.4.29519.181\r\nMinimumVisualStudioVersion = 16.4.29519.181\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\n```","Url":"https://github.com/dotnet/sdk/issues/10684","RelatedDescription":"Open issue \"'dotnet new sln' should create version 16 .sln files\" (#10684)"},{"Id":"568016700","IsPullRequest":false,"CreatedAt":"2020-02-20T02:54:15","Actor":"wli3","Number":"10683","RawContent":null,"Title":"dotnet sln add .sqlproj - Invalid Project","State":"open","Body":"_From @whibdev on Friday, December 27, 2019 8:33:45 PM_\r\n\r\n## dotnet sln add .sqlproj - Invalid Project\r\n\r\nWhen using cli to add a SQL Server Database Project (.sqlproj) to a solution, error occurs:\r\nInvalid project `[PathToProject].sqlproj`. The imported project \"C:\\Program Files\\dotnet\\sdk\\3.1.100\\Microsoft\\VisualStudio\\v11.0\\SSDT\\Microsoft.Data.Tools.Schema.SqlTasks.targets\" was not found. Confirm that the expression in the Import declaration \"C:\\Program Files\\dotnet\\sdk\\3.1.100\\Microsoft\\VisualStudio\\v11.0\\SSDT\\Microsoft.Data.Tools.Schema.SqlTasks.targets\" is correct, and that the file exists on disk.\r\n\r\n### Version introduced\r\nUsing v3.1.100\r\n\r\n### Old behavior\r\nUnknown\r\n\r\n### New behavior\r\n1. Create solution:\r\ndotnet new sln mysln\r\n2. Open Solution in Visual Studio IDE\r\n3. Add new Sql Server Database Project using IDE to solution\r\n4. Remove SQL Server Database Project from Solution\r\n5. Use dotnet cli command to add sqlproj back to solution\r\n\r\n### Recommended action\r\n- Possible workarounds\r\nAdd sqlproj using Visual Studio IDE\r\n\r\n### Category\r\n- ASP.NET Core\r\n- dotnet cli\r\n\r\n### Affected APIs\r\n[dotnet sln cli](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-sln)\r\n\r\n <!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n\r\n\r\n_Copied from original issue: dotnet/docs#16420_","Url":"https://github.com/dotnet/sdk/issues/10683","RelatedDescription":"Open issue \"dotnet sln add .sqlproj - Invalid Project\" (#10683)"},{"Id":"567947459","IsPullRequest":true,"CreatedAt":"2020-02-20T01:40:04","Actor":"dotnet-maestro[bot]","Number":"10681","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200219.2\r\n- **Date Produced**: 2/19/2020 10:55 PM\r\n- **Commit**: 34f6927fe83b2d6cb2003d6577853482ceee25ec\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10681","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#10681)"},{"Id":"567953401","IsPullRequest":false,"CreatedAt":"2020-02-20T00:18:12","Actor":"jhudsoncedaron","Number":"10682","RawContent":null,"Title":"Equivalent to .vcxproj (makefile project) in .NET Core?","State":"open","Body":"I've got this nice little thing I'm trying to convert to use the core toolchain. It currently reads something like this:\r\n\r\n      <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n        <NMakeBuildCommandLine>$(ProjectDir)\\package.cmd $(ProjectDir) $(OutDir)    </NMakeBuildCommandLine>\r\n        <NMakePreprocessorDefinitions>WIN32;_DEBUG;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>\r\n        <NMakeReBuildCommandLine>$(ProjectDir)\\package.cmd $(ProjectDir) $(OutDir)</NMakeReBuildCommandLine>\r\n      </PropertyGroup>\r\n\r\nI want something like this:\r\n\r\n      <Target Name=\"BuildScript\" AfterTargets=\"Build\">\r\n        <Exec Command=\"$(OutDir)./prepare1 $(ProjectDir)\" />\r\n        <Exec Command=\"$(OutDir)./prepare2 $(ProjectDir) $(OutDir)\" />\r\n        <Exec Command=\"$(OutDir)./package $(ProjectDir) $(OutDir)\" />\r\n      </Target>\r\n\r\nbut that's pretty much the only thing in the target. It has some files in it for IDE convienence, but nothing the toolchain knows how to build. The result of running `dotnet build` on this project should do nothing but run the exec commands after variable expansion and build dependent projects.\r\n\r\nThis has nothing to do with C++ at all. It's just a vcxproj in the old toolchain because there wasn't another way to say it in Visual Studio 2010's editors. The commands it runs are mostly build outputs of previous build steps. Just doing it with a bunch of dotnet run commands results in a build tangle. Dependent assembly resolution and build really needs to happen only once. I'm just going to add this thing to the master .sln file and tell the build server to build that.\r\n\r\nIt feels like it's gotta be something that already exists somehow but I can't figure out how.","Url":"https://github.com/dotnet/sdk/issues/10682","RelatedDescription":"Open issue \"Equivalent to .vcxproj (makefile project) in .NET Core?\" (#10682)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1232055856767946752","CreatedAt":"2020-02-24T21:33:01+00:00","UserScreenname":"dotnet","Text":"In @SHanselman's latest post, he gives us some terrific info and guidance about  NET interactive and the newly anno… https://t.co/2Q3dzEmwsK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":121,"FavoriteCount":35,"RawContent":null},{"Id":"1232009799698505728","CreatedAt":"2020-02-24T18:30:00+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 3.0 development using Visual Studio for Mac w/ @sayedihashimi &amp; @ChristosMatskas… https://t.co/vzfMtiDh8d","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null},{"Id":"1231977592934354944","CreatedAt":"2020-02-24T16:22:01+00:00","UserScreenname":"dotnet","Text":"ICYMI, see what's new in the Experimental Mobile #Blazor Bindings February update: https://t.co/uBKgBd08oS https://t.co/gKEg7D1mU2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":34,"FavoriteCount":16,"RawContent":null},{"Id":"1230971716287029248","CreatedAt":"2020-02-21T21:45:02+00:00","UserScreenname":"dotnet","Text":"Focus on #Xamarin is coming on March 23rd. Tune in live and ask your questions on Twitter using the hashtag… https://t.co/9tkf0lhmGy","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":41,"FavoriteCount":21,"RawContent":null},{"Id":"1230887957663535106","CreatedAt":"2020-02-21T16:12:12+00:00","UserScreenname":"dotnet","Text":".NET for Apache Spark makes the world of big data analytics, accessible to #dotNET devs. Explore what, why, and how… https://t.co/o1q3vz3CQO","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1230608067882082328","CreatedAt":"2020-02-20T21:40:01+00:00","UserScreenname":"dotnet","Text":"Simplify your common tasks during your development workflow.\n\nThis cool blog post will show you how to create globa… https://t.co/CiOJDOFDx6","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":29,"FavoriteCount":5,"RawContent":null},{"Id":"1230551485982760960","CreatedAt":"2020-02-20T17:55:11+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":8,"RawContent":null},{"Id":"1230527540923654151","CreatedAt":"2020-02-20T16:20:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @Ealsur talks #CosmosDB SDK for #dotNET with some interesting features like the estim… https://t.co/JrMeY7mQBs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":38,"FavoriteCount":16,"RawContent":null},{"Id":"1230247695471824897","CreatedAt":"2020-02-19T21:48:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @Ealsur tackles the lesser known features of the #CosmosDB SDK for #dotNET as he disc… https://t.co/BA2nXmWUNH","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"1230162884409294848","CreatedAt":"2020-02-19T16:11:01+00:00","UserScreenname":"dotnet","Text":"In his latest post, @SHanselman gathered together tons of great resource links to hundreds of practical @ASPNET Cor… https://t.co/lQpuscm8DD","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":156,"FavoriteCount":63,"RawContent":null},{"Id":"1229876743412031490","CreatedAt":"2020-02-18T21:14:00+00:00","UserScreenname":"dotnet","Text":"If you've got 3 minutes, We'd 💛 to hear about your experiences using the @Azure SDK for #dotNET! Take the ❔ survey… https://t.co/ze3H9r2gIS","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1229800245539803144","CreatedAt":"2020-02-18T16:10:01+00:00","UserScreenname":"dotnet","Text":"We've got new features in Experimental Mobile #Blazor Bindings...\n👍 BoxView, CheckBox, ImageButton, ProgressBar, &amp;… https://t.co/oMhro5c6Rj","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":90,"FavoriteCount":44,"RawContent":null},{"Id":"1229516630541176834","CreatedAt":"2020-02-17T21:23:02+00:00","UserScreenname":"dotnet","Text":"Join us March 23rd for a day of live stream sessions on building native mobile apps w/ Xamarin technology!… https://t.co/hUoIpOmvHK","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":91,"FavoriteCount":56,"RawContent":null},{"Id":"1229437857187717120","CreatedAt":"2020-02-17T16:10:01+00:00","UserScreenname":"dotnet","Text":"📣 .NET Interactive is now available in #dotNET Notebooks Preview 2 📣\nhttps://t.co/WJ52IiZwst\nNow with:\n✔️ New Name… https://t.co/vs5leMzKEP","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":99,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2020-02-25T05:30:37.0483602Z","RunDurationInMilliseconds":15017}