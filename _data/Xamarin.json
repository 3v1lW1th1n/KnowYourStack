{"Data":{"Blog":{"FeedItems":[{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8800270657","Type":"IssuesEvent","CreatedAt":"2018-12-24T22:38:53","Actor":"mathieubourgeois","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2160","RelatedDescription":"Closed issue \"Using AndroidAarLibrary will fail on aar containing impl_internal* jar\" (#2160) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In a Xamarin.Android project (not a bindings project) add an AndroidAarLibrary reference to any library containing an impl_internal* internal jar (I had the issue with support-v4-24.1.1.aar from the Android Support library)\r\n2. Try to build the project\r\n\r\n### Expected Behavior\r\n\r\nApplication compiles as usual, aar resources/java code/manifest info are used in the final application.\r\n\r\n### Actual Behavior\r\n\r\nCompilation fails with the following error :\r\n\r\n```\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018: Échec inattendu de la tâche \"ResolveLibraryProjectImports\". [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018: System.IO.FileNotFoundException: Le fichier '<...>\\internal_impl-24.1.1.jar' est introuvable. [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018: Nom de fichier : '<...>\\internal_impl-24.1.1.jar' [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tools.Files.HashFile(String filename, HashAlgorithm hashAlg) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tools.Files.HashString(String s) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tasks.ResolveLibraryProjectImports.<>c.<Extract>b__60_9(String entryFullName) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tools.Files.ExtractAll(ZipArchive zip, String destination, Action`2 progressCallback, Func`2 modifyCallback, Func`2 deleteCallback, Boolean forceUpdate) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract(DirectoryAssemblyResolver res, ICollection`1 jars, ICollection`1 resolvedResourceDirectories, ICollection`1 resolvedAssetDirectories, ICollection`1 resolvedEnvironments) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute() [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [<...>]\r\n```\r\n\r\n### Extra informations\r\n\r\n- The same project using `LibraryProjectZip` in a fake bindings project works fine (but we don't need the bindings, so an extra dll/so that can be avoided is a good thing)\r\n- I took a look at the code that seems to be causing the issue, it comes from the initial implementation of `AndroidAarLibrary` in `ResolveLibraryProjectImport.cs` :\r\n\r\n```\r\n\t\t\t\tusing (var zip = MonoAndroidHelper.ReadZipFile (aarFile.ItemSpec)) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tupdated |= Files.ExtractAll (zip, importsDir, modifyCallback: (entryFullName) => {\r\n\t\t\t\t\t\t\tvar entryFileName = Path.GetFileName (entryFullName);\r\n\t\t\t\t\t\t\tvar entryPath = Path.GetDirectoryName (entryFullName);\r\n\t\t\t\t\t\t\tif (entryFileName.StartsWith (\"internal_impl\", StringComparison.InvariantCulture)) {\r\n\t\t\t\t\t\t\t\tvar hash = Files.HashString (entryFileName);\r\n\t\t\t\t\t\t\t\treturn Path.Combine (entryPath, $\"internal_impl-{hash}.jar\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn entryFullName;\r\n\t\t\t\t\t\t}, deleteCallback: (fileToDelete) => {\r\n\t\t\t\t\t\t\treturn !jars.Contains (fileToDelete);\r\n\t\t\t\t\t\t}, forceUpdate: false);\r\n\r\n\t\t\t\t\t\tif (Directory.Exists (importsDir) && (updated || !stamp.Exists)) {\r\n\t\t\t\t\t\t\tLog.LogDebugMessage (\"Touch {0}\", stamp.FullName);\r\n\t\t\t\t\t\t\tstamp.Create ().Close ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (PathTooLongException ex) {\r\n\t\t\t\t\t\tLog.LogErrorFromException (new PathTooLongException ($\"Error extracting resources from \\\"{aarFile.ItemSpec}\\\"\", ex));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n``` \r\n\r\nFrom what I can see, it extracts the aar file and needs to check the hashes of the internal jar to see if something actually changed (my initial guess at least). However, the commit (6a8ea2bbdbad65f1f46ba60a343506c92d1e0a1e) doesn't mention anything about this so I'm not entirely sure if that's supposed to be the case.\r\n\r\nSo, when it finds internal_impl* in the aar, it tries to hash `\"internal_impl*\"` file without any path. However, this means it checks at the base of the project (or the cwd I would guess) for that file, but there's no reason for it to be there, I don't think it would be extracted there anyway) Therefore, we have the crash.\r\n\r\nI guess the fix is probably to check two things\r\na) consider the proper path to the unzipped file\r\nb) consider an empty hash if the unzipped file doesn't exist yet\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.8.1\r\nVisualStudio.15.Release/15.8.1+28010.2003\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00370-20007-36350-AA982\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05074.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.8.18201.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.8.18201.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.8.18201.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.8.18201.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.8.18201.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27924.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.27825.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Unity   3.8.0.3\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support."},{"Id":"8800203920","Type":"PullRequestEvent","CreatedAt":"2018-12-24T21:36:56","Actor":"mathieubourgeois","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2570","RelatedDescription":"Opened pull request \"Fix crash with big apks on assembly registration (fixes 1673)\" (#2570) at xamarin/xamarin-android","RelatedBody":"Xamarin.Android, on launch, needs to do a pass through the files in the apk to register \r\n- assemblies (.dll/.exe)\r\n- dll configuration files (.config)\r\n- symbols (.mdb/.pdb)\r\n- bindings typemaps (.jm/.mj)\r\n\r\nTo do this pass, the process was to mmap the apk in the process' adress space, then grab the memory offsets for each file and register them on each system as needed. However, mmap-ing the whole apk has the consequence of taking potentially a lot of adress space. \r\n\r\nConsidering it is legal to have a big apk (even though you can't submit an apk of more than 100 Mb to the Play Store, you can still submit it somewhere else, or embed your data in the apk during the development process for simplicity's sake), having an apk of about ~800 Mb in size automatically crashes on launch in armeabi-v7a because it can't find a contiguous 800 Mb block of adress space. The following log is usually found when that issue hits:\r\n\r\n`I/monodroid-assembly(14915): start: 0xffffffff end: 0x3da16747 len: 1033987912 apk: /data/app/<package_name>-1/base.apk`\r\n\r\nHowever, we don't need to mmap the whole apk, only the files that we are actually registering. Therefore, refactor the registration code to not mmap the whole apk. Instead, open the apk regularly, then when we actually need one of the entries, mmap the area of the file in the apk from a page-aligned offset and use those mmap sections for registration instead.\r\n\r\nFixes https://github.com/xamarin/xamarin-android/issues/1673"},{"Id":"8798619940","Type":"IssuesEvent","CreatedAt":"2018-12-24T08:55:41","Actor":"lander1337","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2569","RelatedDescription":"Opened issue \"HttpClient bug on Android emulator\" (#2569) at xamarin/xamarin-android","RelatedBody":"### Description\r\nWhen I try to get SOAP message from service using HttpClient, xml that I read with HttpResponseMessage.Content.ReadAsStringAsync() sometimes(random) is broken, tags miss latters or '>' simbol. Was checking traffic with fiddler, service return valid xml, so the problem some where on HttpClient.    \r\n \r\n### Steps to Reproduce\r\n0. Use Android emulator\r\n1. Create/use service that return xml.\r\n2. Create app that using System.Net.Http.HttpClient for get info from service.\r\n3. Make request to service, read string from response, and sometimes for some reason this \"xml-string\" would be broken.\r\n\r\n### Expected Behavior\r\nFor example, service return:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://free-web-services.com/soap\">\r\n<SOAP-ENV:Body>\r\n        <ns1:addResponse>\r\n            <sum>8</sum>\r\n            <time>0.0002</time>\r\n        </ns1:addResponse>\r\n    </SOAP-ENV:Body>\r\n</SOAP-ENV:Envelope>\r\n```\r\nSo i expect same xml, when read it from response.\r\n\r\n### Actual Behavior\r\nService return same xml as expected(check with fiddler), but when read it from response i get(sometimes):\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://free-web-services.com/soap\">\r\n    <SOAP-ENV:Body>\r\n        <ns1:addResponse>\r\n            <sum>8</sum>\r\n            <time>0.0002</time>\r\n        </ns1:addResponse>\r\n    </SOAP-ENV:Body>\r\n</SOAP-ENV:Envelope\r\n```\r\nThere is no '>' in the end.\r\n\r\n### Basic Information\r\nThis bug happends in ~30% of request, sometimes it get valid xml. In my example, missing letter is same every time - '>'. Xml's that i get from my service is large(length ~ 200k), it could be missed latter(should be <ComputerID></ComputerID>, i get <ComputerID></ComputeID>). Sorry for bad English. \r\n\r\n- Version with issue: 3.4.0.1008975\r\n- IDE: VS Community 2017 15.9.1\r\n- Platform Target Frameworks: \r\n  - Android(Emulator): \r\n    -Work as expected - Android 4.4\r\n    -Bug reporoduce - Android 6.0, Android 7.1, Android 8.1 \r\n- Affected Devices: Face this bug only on emulator(on my devicec works properly) "},{"Id":"8795862985","Type":"IssuesEvent","CreatedAt":"2018-12-22T21:13:14","Actor":"mfeingol","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2568","RelatedDescription":"Opened issue \"Visual Studio 2017: \"Autos\" debug window doesn't work\" (#2568) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Debug an Android app\r\n2. Set a break point\r\n3. Observe the Locals window works fine, but the Autos window doesn't.\r\n\r\n![image](https://user-images.githubusercontent.com/218865/50378615-3b308600-05eb-11e9-9725-a7b3475d2b79.png)\r\n\r\n### Expected Behavior\r\n\r\nAutos should work the same as other debug environments in VS.\r\n\r\n### Actual Behavior\r\n\r\nAutos is always empty\r\n\r\n### Version Information\r\n\r\nVisual Studio 2017 15.9.4"},{"Id":"8795858574","Type":"IssuesEvent","CreatedAt":"2018-12-22T21:09:32","Actor":"mfeingol","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2567","RelatedDescription":"Opened issue \"Visual Studio 2017: Exception Unhandled popup -> Exception Settings checkbox isn't wired up\" (#2567) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Debug an Android app\r\n2. Throw an exception in the Android app\r\n3. Observe the friendly exception popup's Exception Settings checkbox does nothing\r\n\r\n![image](https://user-images.githubusercontent.com/218865/50378592-87c79180-05ea-11e9-9cb5-5ededd82cd2e.png)\r\n\r\n### Expected Behavior\r\n\r\nIf an exception type is enabled in the real Exception Settings dialog, it should also be enabled in the Exception Unhandled popup's Exception Settings.\r\n\r\n### Actual Behavior\r\n\r\nThe Exception Unhandled popup's Exception Settings checkbox for \"Break when this exception type is thrown\" is unchecked. Checking and unchecking the box does nothing.\r\n\r\n### Version Information\r\n\r\nVisual Studio 2017 15.9.4"},{"Id":"8794219146","Type":"IssuesEvent","CreatedAt":"2018-12-22T00:04:03","Actor":"EmilAlipiev","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2566","RelatedDescription":"Opened issue \"Xamarin Support Libraries 28 update freezes Visual Studio 2017\" (#2566) at xamarin/xamarin-android","RelatedBody":"when i try to update latest xamarin android support libraries version 28, my project is freezing and visual studio 2017 is not responding. Issue is probably related to OneSignal library having version restriction as you can see in the screenshot but why doest it freezes? it makes project not useable again after killing the task\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/50367999-b1e66880-0584-11e9-8c6d-561ad0402921.png)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. create new xamarin.forms project with andorid support libraries 27.0\r\n2. install OneSignal 3.2.2\r\n3. update support libraries 28\r\n4. Visual Studio 2017 freezes, you need to kill the process\r\n5. Now try to reopen project, project wont load.\r\n \r\n\r\n### Expected Behavior\r\nupdate works\r\n### Actual Behavior\r\nfreezes visual studio\r\n### Version Information\r\nxamarin.forms 3,3\r\n  "},{"Id":"8793327499","Type":"PullRequestEvent","CreatedAt":"2018-12-21T19:29:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2564","RelatedDescription":"Merged pull request \"[build-tools] Fix the RunUI task to wait\" (#2564) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/xamarin/xamarin-android/issues/2552\r\n\r\nUse override in the right place. Probably a typo, which made the\r\nlogcat output unusable, because the `AfterCommand` was never called\r\nand we gathered the logcat directly after launching the\r\nactivity. Instead of waiting before collecting the logcat.\r\n\r\nMy wild guess is that older compiler versions worked differenly and so\r\nit worked for some time."},{"Id":"8793327486","Type":"IssuesEvent","CreatedAt":"2018-12-21T19:29:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2552","RelatedDescription":"Closed issue \"Nearly empty logcat output from XF test\" (#2552) at xamarin/xamarin-android","RelatedBody":"For (yet) unknown reason, the logcat output of XF test is really short. For example:\r\n```\r\n--------- beginning of system\r\n12-19 17:59:10.600  1173  2615 I ActivityManager: START u0 {flg=0x10000000 cmp=Xamarin.Forms_Performance_Integration/xamarin.forms.performance.integration.MainActivity} from uid 2000\r\n--------- beginning of main\r\n12-19 17:59:10.632   799   799 D android.hardware.power@1.2-service.wahoo-libperfmgr: LAUNCH ON\r\n12-19 17:59:10.656 18985 18985 I AppLifecycleTracker: onActivityPaused: \r\n```\r\n\r\nThe test itself seems to run OK as we collect the performance data:\r\n```\r\nlast-Release,JNI.init-Release,init-Release,OnCreateBegin-Release,OnCreateEnd-Release,OnStartBegin-Release,OnStartEnd-Release,OnResumeBegin-Release,OnResumeEnd-Release,last-Release-Bundle,JNI.init-Release-Bundle,init-Release-Bundle,OnCreateBegin-Release-Bundle,OnCreateEnd-Release-Bundle,OnStartBegin-Release-Bundle,OnStartEnd-Release-Bundle,OnResumeBegin-Release-Bundle,OnResumeEnd-Release-Bundle\r\n1069,240,240,312,698,700,700,701,701,921,185,185,234,572,576,576,576,577\r\n```\r\n\r\nIt is good news that I am able to reproduce it locally."},{"Id":"8792986108","Type":"PullRequestEvent","CreatedAt":"2018-12-21T18:06:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2563","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix ManagedResourceParser API breakage\" (#2563) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2546\r\nChanges: https://github.com/xamarin/xamarin-android-api-compatibility/compare/ec562e9...3fe4561\r\n\r\nBumps to xamarin/xamarin-android-api-compatibility/master@3fe4561\r\n\r\nThis partially reverts 0f91aea.\r\n\r\nIn #2546, we experienced a bit of API breakage when disabling\r\n`$(AndroidUseAapt2)`. We want to fix the breakage in master, but keep\r\n`$(AndroidUseAapt2)` turned on by default.\r\n\r\nWe need to put the `ManagedResourceParser` back the way it was before\r\n0f91aea, except for `Resource.Attribute`.\r\n\r\nSince `aapt`(1) always emits this class, we should replicate that."},{"Id":"8792909489","Type":"PullRequestEvent","CreatedAt":"2018-12-21T17:48:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2559","RelatedDescription":"Merged pull request \"[build] create-vsix.csproj should have Release configuration\" (#2559) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, we are getting a build error during a\r\n`Release` build:\r\n\r\n    xamarin-android/src/libzip/libzip.targets(16,5): error MSB4062: The \"Xamarin.Android.BuildTools.PrepTasks.GitCommitTime\" task could not be loaded from the assembly xamarin-android/build-tools/scripts/../../bin/BuildDebug/xa-prep-tasks.dll. Invalid Image Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\n\r\nThe path here is wrong, we should not be looking in `BuildDebug`\r\nduring a `Release` build.\r\n\r\nI opened Xamarin.Android.sln in Visual Studio (on Windows), and in the\r\n`Configuration Manager` `create-vsix.csproj` was listed as building\r\n`Debug` for `Release` builds! The dropdown would not even let me\r\nselect `Release`, it seemed the IDE did not think there was a\r\n`Release` configuration in the project at all!\r\n\r\n![image](https://user-images.githubusercontent.com/840039/50293476-49d73b80-0439-11e9-8a21-2f4661b6345f.png)\r\n\r\nThis would imply that the following `<ProjectReference/>` in\r\n`create-vsix.csproj` would be built in `Debug`:\r\n\r\n    <ProjectReference Include=\"..\\xa-prep-tasks\\xa-prep-tasks.csproj\">\r\n      <Project>{7CE69551-BD73-4726-ACAA-AAF89C84BAF8}</Project>\r\n      <Name>xa-prep-tasks</Name>\r\n      <ReferenceOutputAssembly>False</ReferenceOutputAssembly>\r\n      <Private>False</Private>\r\n    </ProjectReference>\r\n\r\nTo fix this I added these lines to `create-vsix.csproj`:\r\n\r\n    <PropertyGroup Condition=\" '$(Configuration)' == 'Debug' \" />\r\n    <PropertyGroup Condition=\" '$(Configuration)' == 'Release' \" />\r\n\r\nThen the IDE allowed me to select `Release`! Of course, the IDE made\r\nlots of other random changes we won't understand, since the `*.sln`\r\nfile format is not human readable.\r\n\r\nThis is not the same project we are getting an error from, but this\r\n*does* seem like a problem."},{"Id":"8792826765","Type":"PullRequestEvent","CreatedAt":"2018-12-21T17:28:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2554","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] skip _SetLatestTargetFrameworkVersionForPackageReference\" (#2554) at xamarin/xamarin-android","RelatedBody":"During a NuGet restore:\r\n\r\n    msbuild foo.android.csproj /t:Restore\r\n\r\nThe `_SetLatestTargetFrameworkVersionForPackageReference` MSBuild\r\ntarget triggers `_SetLatestTargetFrameworkVersion` and some tasks to\r\nrun:\r\n\r\n- `<ResolveSdks/>`\r\n- `<ValidateJavaVersion/>`\r\n- `<ResolveAndroidTooling/>`\r\n\r\nWe don't really need these to run at all during `Restore`, unless\r\n`$(AndroidUseLatestPlatformSdk)` is `True`. In that case we need to\r\ncalculate what the final `$(TargetFrameworkVersion)` will be.\r\n\r\nOptionally running this target saved ~600ms during a NuGet restore of\r\na single Xamarin.Android project:\r\n\r\n    602 ms  _SetLatestTargetFrameworkVersion           1 calls"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8806236659","Type":"PullRequestEvent","CreatedAt":"2018-12-27T02:16:37","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4651","RelatedDescription":"Merged pull request \"Implement Android single selection in CollectionView\" (#4651) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nImplement single item selection for the CollectionView on Android.\r\n\r\n### Issues Resolved ### \r\n\r\nNone\r\n\r\n### API Changes ###\r\nAdded:\r\n\r\n- SelectionMode SelectableItemsView.SelectionMode\r\n- object SelectableItemsView.SelectedItem\r\n- ICommand SelectableItemsView.SelectionChangedCommand\r\n- object SelectableItemsView.SelectionChangedCommandParameter\r\n- event EventHandler<SelectionChangedEventArgs> SelectionChanged\r\n- enum SelectionMode \r\n- class SelectionChangedEventArgs\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nIn Control Gallery, navigate to CollectionView Gallery -> Selection Galleries\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8805465588","Type":"PullRequestEvent","CreatedAt":"2018-12-26T19:49:54","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4865","RelatedDescription":"Opened pull request \"[iOS] CollectionView item replacement on iOS\" (#4865) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nReplace items on iOS\r\n\r\n### Issues Resolved ### \r\n\r\n- implements item replacement from #3172\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Before/After Screenshots ### \r\n\r\n\r\n\r\n### Testing Procedure ###\r\n\r\nAutomated tests will be available once #4697 is merged.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8805294453","Type":"PullRequestEvent","CreatedAt":"2018-12-26T18:43:14","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4863","RelatedDescription":"Opened pull request \"[iOS] Implement item move on iOS CollectionView\" (#4863) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- implements item movement in observable collection for #3172\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Testing Procedure ###\r\n\r\nAutomated tests will be available once #4697 is merged.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8804607338","Type":"IssuesEvent","CreatedAt":"2018-12-26T14:41:36","Actor":"Happypig375","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4862","RelatedDescription":"Opened issue \"AbsoluteLayout proportional positioning\" (#4862) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nProportional ain't proportional!\r\n\r\n### Steps to Reproduce\r\n\r\n1. MainPage.xaml\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:XFBindingTest\"\r\n             x:Class=\"XFBindingTest.MainPage\">\r\n\r\n    <AbsoluteLayout BackgroundColor=\"LightYellow\">\r\n        <BoxView AbsoluteLayout.LayoutBounds=\"0, 0, 1, 1\" AbsoluteLayout.LayoutFlags=\"All\" BackgroundColor=\"LightSalmon\"/>\r\n        <BoxView AbsoluteLayout.LayoutBounds=\"0, 0, 0.25, 0.25\" AbsoluteLayout.LayoutFlags=\"All\" BackgroundColor=\"Teal\"/>\r\n        <BoxView AbsoluteLayout.LayoutBounds=\"0.75, 0.75, 0.25, 0.25\" AbsoluteLayout.LayoutFlags=\"All\" BackgroundColor=\"Lime\"/>\r\n    </AbsoluteLayout>\r\n\r\n</ContentPage>\r\n```\r\n2. Build and run\r\n\r\n### Expected Behavior\r\nTop left quarter is teal colored, bottom right quarter is lime colored, the rest two quarters are light salmon colored\r\n\r\n### Actual Behavior\r\nTop left quarter and bottom right quarter positioned very awkwardly\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1008975\r\n- Last known good version: N/A\r\n- IDE: Visual Studio 15.9.4\r\n- Platform Target Frameworks:\r\n  - UWP:  16299\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/19922066/50448974-378c5e80-095f-11e9-9700-0deba74054e8.png)\r\n\r\n### Reproduction Link\r\nComment if needed\r\n"},{"Id":"8804604948","Type":"PullRequestEvent","CreatedAt":"2018-12-26T14:40:45","Actor":"paymicro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4861","RelatedDescription":"Opened pull request \"[Android] fixes issue content set after an await is not visible\" (#4861) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded calling `RequestLayout` on parent Layout when adding child in current Layout.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #1760\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nbefore\r\n![screenshot_2](https://user-images.githubusercontent.com/27482193/50448738-ee72e500-0933-11e9-97ab-153ef5f41b0e.png)\r\n\r\nafter\r\n![screenshot_1](https://user-images.githubusercontent.com/27482193/50448737-ee72e500-0933-11e9-96a7-b6bfc346ceed.png)\r\n\r\n### Testing Procedure ###\r\n\r\n- run UItest 1760\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8804483238","Type":"IssuesEvent","CreatedAt":"2018-12-26T13:59:41","Actor":"Happypig375","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4860","RelatedDescription":"Opened issue \"Specifying markup extension parameter causes binding to fail\" (#4860) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nBuild fails when specifying markup extension parameter for binding\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use the default Xamarin.Forms project template\r\n2. Paste MainPage.xaml.cs\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Xamarin.Forms;\r\nusing Xamarin.Forms.Xaml;\r\n\r\nnamespace XFBindingTest\r\n{\r\n    public class AExtension : IMarkupExtension<string>\r\n    {\r\n        public string B { get; set; }\r\n\r\n        public string ProvideValue(IServiceProvider serviceProvider) => B;\r\n\r\n        object IMarkupExtension.ProvideValue(IServiceProvider serviceProvider) => B;\r\n    }\r\n\r\n    public partial class MainPage : ContentPage\r\n    {\r\n        public MainPage()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n        public string Z { get; } = \"Hi!\";\r\n    }\r\n}\r\n\r\n```\r\n3. Paste MainPage.xaml\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:XFBindingTest\"\r\n             x:Class=\"XFBindingTest.MainPage\">\r\n\r\n    <StackLayout>\r\n        <!-- Place new controls here -->\r\n        <Label Text=\"{local:A {Binding Z}}\"\r\n           HorizontalOptions=\"Center\"\r\n           VerticalOptions=\"CenterAndExpand\" />\r\n    </StackLayout>\r\n\r\n</ContentPage>\r\n```\r\n4. Build and run\r\n\r\n### Expected Behavior\r\n\"Hi!\" would appear at center of page\r\n\r\n### Actual Behavior\r\nNothing appears\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1008975\r\n- Last known good version: Idk\r\n- IDE: Visual Studio 15.9.4\r\n- Platform Target Frameworks:\r\n  - UWP:  16299\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/19922066/50447902-4e2fb700-0959-11e9-9382-bf3488e4aa80.png)\r\n\r\n```diff\r\n-        <Label Text=\"{local:A {Binding Z}}\"\r\n+        <Label Text=\"{Binding Z}\"\r\n```\r\n![image](https://user-images.githubusercontent.com/19922066/50447955-79b2a180-0959-11e9-81a0-6b30405ec011.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nComment if needed\r\n"},{"Id":"8802987298","Type":"IssuesEvent","CreatedAt":"2018-12-26T05:06:08","Actor":"Sangeetha-Raju","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4859","RelatedDescription":"Opened issue \"Accessibility issues in Xamarin Forms (UWP & iOS platform)\" (#4859) at xamarin/Xamarin.Forms","RelatedBody":"Hi Team,\r\n\r\n### Description\r\nIf I swipe an item either in UWP and iOS platform, touch accessibility doesn't pass to the next time. \r\n\r\n### Steps to Reproduce\r\n1. Run the attached sample.\r\n2. Enable the accessibility in the device.\r\n3. Swipe from right to left on the device.\r\nIssue: Next item is not focused\r\n\r\n### Expected Behavior\r\nIf I swipe from right to left on the device, the touch should pass to the next item and it should focus. Similarly, if I swipe an item from left to right on the device, the touch should pass to the previous item.\r\n\r\n### Actual Behavior\r\nSwipe from right to left on the device, the touch doesn't pass to the next item. So, corresponding item's voice message is not appeared.  \r\n\r\n### Note\r\nIn Xamarin Forms UWP platform, it is working as expected in v-2.4.0.280 and not working in above versions.\r\nIn Xamarin Forms iOS platform, it does not work either in v-2.4.0.280 and above. (We have tested from Xamarin Forms version 2.4.0.280 to till latest.)\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms v-2.5.1.527436\r\n- Last known good version: Xamarin Forms v-2.4.0.280\r\n- IDE: Visual Studio 2017 version 15.7.4\r\n- Platform Target Frameworks: \r\n  - Xamarin.iOS SDK 11.0 \r\n  - UWP:  10240\r\n- Nuget Packages: Xamarin Forms v-2.5.1.527436\r\n- Affected Devices: Windows Simulator.\r\n\r\n### Reproduction Link\r\n\r\n\r\n[Bug.zip](https://github.com/xamarin/Xamarin.Forms/files/2709491/Bug.zip)\r\n"},{"Id":"8802897045","Type":"IssuesEvent","CreatedAt":"2018-12-26T04:12:40","Actor":"GanesanRengasamy","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4858","RelatedDescription":"Opened issue \"NU1605: Detected package downgrade: Xamarin.Forms from 3.3.0.912540 to 2.5.0.280555. Reference the package directly from the project to select a different version. App3.Android -> App3 -> Xamarin.Forms (>= 3.3.0.912540)\" (#4858) at xamarin/Xamarin.Forms","RelatedBody":"Hi All,\r\n\r\nI have tried to downgrade the Xamarin.Forms NuGet package in the Xamarin NetStandard project. But I have faced the below issue.\r\n\r\nNU1605: Detected package downgrade: Xamarin.Forms from 3.3.0.912540 to 2.5.0.280555. Reference the package directly from the project to select a different version.\r\nApp3.Android -> App3 -> Xamarin.Forms (>= 3.3.0.912540)\r\n\r\nNU1605: Detected package downgrade: Xamarin.Forms from 2.5.1.527436 to 2.5.0.280555. Reference the package directly from the project to select a different version.\r\n\r\nCould you please suggest me to resolve this problem?"},{"Id":"8802163515","Type":"IssuesEvent","CreatedAt":"2018-12-25T18:16:28","Actor":"sadqiang","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4857","RelatedDescription":"Closed issue \"[Question] What is the equivalent of RecyclerView in Xamarin.Forms?\" (#4857) at xamarin/Xamarin.Forms","RelatedBody":"I am a newbie in Xamarin.Forms. I am searching for an equivalent of RecyclerView (Android widget) in Xamarin.Forms. If there is no such equivalent, is there any other trick to get the same performance?"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8800823213","Type":"IssuesEvent","CreatedAt":"2018-12-25T05:45:41","Actor":"albilaga","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5330","RelatedDescription":"Opened issue \"[XM] Can't run app if application bundle is signed and installer package is signed\" (#5330) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Archive app\r\n2. Sign and distribute using App Store/Mac Installer Package\r\n3. Run the pkg file\r\n\r\n### Expected Behavior\r\nApps in /Applications running\r\n### Actual Behavior\r\nApps in /Applications always force close after run it\r\n\r\nNotes:\r\nApps without signed run well\r\n### Environment\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.7.2 (build 21)\r\nInstallation UUID: 604c8381-2bd0-4f31-8ed6-4fbf83a66fd0\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.0\r\n\t2.1.2\r\nSDK: /usr/local/share/dotnet/sdk/2.2.100/Sdks\r\nSDK Versions:\r\n\t2.2.100\r\n\t2.1.302\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.4.2 (Visual Studio Community)\r\nAndroid SDK: /Users/albilaga/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 28.0.3\r\n\r\nJava SDK: /Users/albilaga/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: 06ceaea1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.12 (Visual Studio Community)\r\nHash: 65ec520f\r\nBranch: \r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.12 (Visual Studio Community)\r\nHash: 65ec520f\r\nBranch: d15-9\r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707020021\r\nGit revision: f1fea53df9eb0bb5890a9563c0d7ea7b03922144\r\nBuild date: 2018-12-14 18:37:35+00\r\nBuild branch: release-7.7\r\nXamarin extensions: 9c5cea335e6a9ce4ccfde31c4aa06c25a3576085\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.2\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Mon Nov 12 20:24:46 PST 2018\r\n    root:xnu-4903.231.4~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nAndroid Signature Tool 2.1.2\r\nMFractor 3.6.9\r\nMutatio 1.0.2\r\n\r\n```\r\n\r\n"},{"Id":"8793391057","Type":"IssuesEvent","CreatedAt":"2018-12-21T19:44:47","Actor":"jgold6","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5329","RelatedDescription":"Opened issue \"NFCReaderUsageDescription\" (#5329) at xamarin/xamarin-macios","RelatedBody":"### Description\r\n\r\nOn the Source tab of the Info.plist editor, there is no drop down item to select the NFCReaderUsageDescription key as there is for other privacy keys, like NSCameraUsageDescription which has a \"Privacy - Camera Usage Description\" item in the list when you are adding a new entry. \r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open an Info.plist file in Visual Studio Xamarin.iOS project\r\n2. Select the Source tab\r\n3. Click the green + button next to the bottom \"Add new entry\"\r\n4. Scroll through the list looking for \"Privacy - ... \" options\r\n\r\n### Expected Behavior\r\nThere will be a \"Privacy - NFC Reader Usage Description\" entry\r\n\r\n### Actual Behavior\r\nThere is no \"Privacy - NFC Reader Usage Description\" entry\r\n\r\n### Workaround\r\nType in NFCReaderUsageDescription in the property field manually.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.7.2 (build 21)\r\nInstallation UUID: f86726f2-bd5d-4610-867e-44e82f306ca2\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\n\t1.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.1\r\n\t1.0.0-preview2-003121\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.12 (Visual Studio Enterprise)\r\nHash: 65ec520f\r\nBranch: \r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.12 (Visual Studio Enterprise)\r\nHash: 65ec520f\r\nBranch: d15-9\r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.4.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/jongoldberger/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.3   (API level 18)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 28.0.3\r\n\r\nJava SDK: /Users/jongoldberger/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: 06ceaea1\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707020021\r\nGit revision: f1fea53df9eb0bb5890a9563c0d7ea7b03922144\r\nBuild date: 2018-12-14 18:37:35+00\r\nBuild branch: release-7.7\r\nXamarin extensions: 9c5cea335e6a9ce4ccfde31c4aa06c25a3576085\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.2\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Mon Nov 12 20:24:46 PST 2018\r\n    root:xnu-4903.231.4~2/RELEASE_X86_64 x86_64\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\nN/A\r\n\r\n### Example Project (If Possible)\r\n\r\nN/A"},{"Id":"8792826891","Type":"PullRequestEvent","CreatedAt":"2018-12-21T17:28:20","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5328","RelatedDescription":"Opened pull request \"[d15-9][mmp] Add support for mono 5.18 by pulling in libmono-system-native.a\" (#5328) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/5324\r\n- Patch tweaked over multiple commits in master so applied directly instead of cherry-pick"},{"Id":"8792764070","Type":"PullRequestEvent","CreatedAt":"2018-12-21T17:14:00","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5327","RelatedDescription":"Opened pull request \"Bump mono\" (#5327) at xamarin/xamarin-macios","RelatedBody":"Bump mono and add a new test that willl ensure that CVE 2018-8292 was\r\nfixed."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":268,"FavoriteCount":117,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":155,"FavoriteCount":68,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":112,"RawContent":null}]}},"RunOn":"2018-12-27T05:31:13.8871898Z","RunDurationInMilliseconds":4346}