{"Data":{"Blog":{"FeedItems":[{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null},{"Title":"Podcast: Xamarin.Forms 2.5.0, Live Player, and What’s New in Visual Studio for Mac","PublishedOn":"2017-12-01T21:48:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover the latest news for mobile developers from Microsoft Connect(); 2017, including Xamarin.Forms 2.5.0 and awesome updates to the Live...","Href":"https://blog.xamarin.com/podcast-xamarin-forms-2-5-0-live-player-whats-new-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in December","PublishedOn":"2017-12-01T18:16:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET developer community is vastly expanding, so there&#8217;s more opportunity than ever to network with local user groups and learn about new and exciting releases, tooling, and updates to...","Href":"https://blog.xamarin.com/xamarin-developer-events-december/","RawContent":null},{"Title":"Supercharge Your Xamarin.Mac Application Startup Time","PublishedOn":"2017-11-30T20:31:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Startup performance matters, as it&#8217;s the first feature users come across when using your application. In this post, we&#8217;ll walk through some recent samples that improve Xamarin.Mac startup...","Href":"https://blog.xamarin.com/supercharge-xamarin-mac-application-startup-time/","RawContent":null},{"Title":"Upcoming Webinars | Get the Most Out of Android 8 Oreo and iOS 11","PublishedOn":"2017-11-29T20:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us on December 13 and December 14 for our newest webinar series, where we’ll show you how to make your Xamarin apps even better by adding the latest and greatest Android and iOS updates. Visual...","Href":"https://blog.xamarin.com/upcoming-webinars-get-the-most-out-of-android-8-oreo-and-ios-11-for-xamarin-developers/","RawContent":null},{"Title":"Schedule Meetings with Xamarin.Forms and the Microsoft Graph API","PublishedOn":"2017-11-28T18:07:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Meetings can be productive, provided they&#8217;re planned and scheduled properly. There are numerous tools available to schedule meetings, with Calendar for Outlook being one of the best tools in...","Href":"https://blog.xamarin.com/lets-schedule-meeting/","RawContent":null},{"Title":"Replacing Services With Jobs in Android Oreo 8.0","PublishedOn":"2017-11-27T21:04:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Before Android 8.0, Android apps would start a service that ran almost indefinitely, even when the app was in the background. This service can be handy for the app, and easy for the developer to...","Href":"https://blog.xamarin.com/replacing-services-jobs-android-oreo-8-0/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6959828984","Type":"IssuesEvent","CreatedAt":"2017-12-07T23:43:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1089","RelatedDescription":"Opened issue \"Fix inter-API-level checks\" (#1089) at xamarin/xamarin-android","RelatedBody":""},{"Id":"6959760475","Type":"PullRequestEvent","CreatedAt":"2017-12-07T23:22:21","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1088","RelatedDescription":"Opened pull request \"[enumification] fix RemoteConference.ConnectionProperties (issue #1087)\" (#1088) at xamarin/xamarin-android","RelatedBody":"See the github comments on the issue details.\r\n\r\nTo solve the issue, we introduce a \"fake\" mapping fixup in enumification-helpers.\r\n\r\nUse \"force-api-level\" mapping information to override the correct API Level\r\ninformation to generate modified map(.ext).csv.\r\n\r\nmethodmap.csv is also fixed to (1) remove old mapping for 24 and (2) change\r\nthe mapping for 25 down to 24 too."},{"Id":"6959587631","Type":"IssuesEvent","CreatedAt":"2017-12-07T22:34:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1087","RelatedDescription":"Opened issue \"`Android.Telecom.RemoteConference` has wrong type\" (#1087) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1078#issuecomment-350086821\r\n\r\nAPI-24 introduced [`android.telecom.RemoteConference.getConnectionProperties()`](https://developer.android.com/reference/android/telecom/RemoteConference.html#getConnectionProperties()).\r\n\r\nIn `$(TargetFrameworkVersion)` v7.0 (API-24), we bound this as as type `CallProperty`:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/2c2d47c4a28eeb398500a8c0a9a0a803324de014/src/Mono.Android/methodmap.csv#L2100\r\n\r\n    24, android.telecom, RemoteConference, getConnectionProperties, return, Android.Telecom.CallProperty\r\n\r\n\r\nIn `$(TargetFrameworkVersion)` v7.1 (API-25), we bound this as `ConnectionProperties`:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/2c2d47c4a28eeb398500a8c0a9a0a803324de014/src/Mono.Android/methodmap.csv#L2144\r\n\r\n    25, android.telecom, RemoteConnection, getConnectionProperties, return, Android.Telecom.ConnectionProperties\r\n\r\nQuestion: Why do we have *three* separate enumifications for this method? (There's a 2nd API-25 one two lines below the link above.)\r\n\r\nRegardless, this mismatch introduces an inter-api-level inconsistency around the type of `RemoteConference.ConnectionProperties`. The result is that any assemblies which build against v7.0 and *run* in v7.1+ will throw a `MissingMethodException`.\r\n\r\nWe should fix things so that all API levels -- API-24+ -- bind `RemoteConference.ConnectionProperties` as `ConnectionProperties`"},{"Id":"6959393764","Type":"PullRequestEvent","CreatedAt":"2017-12-07T21:48:11","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1086","RelatedDescription":"Opened pull request \"[tests] fixed several tests on Windows\" (#1086) at xamarin/xamarin-android","RelatedBody":"Changes:\r\n- `CheckResourceDesigner*` for F# can't pass on Windows due to the\r\nMSBuild project API sorting. F# relies on files in the `fsproj` in a\r\ncertain order, which cannot be achieved if the MSBuild API always does\r\nits own sorting. I feel it is best to skip these tests on Windows for\r\nnow.\r\n- `BuildExternalJavaLibrary` should just use `$(MSBuildExtensionsPath)`\r\nsince `$(MonoDroidInstallDirectory)` is not set on Windows. It also\r\nneeded to apply a timestamp to the new reference, or the project file\r\nwasn't saving on Windows. The last fix is using `Path.Combine`.\r\n- `BuildAppCheckDebugSymbols` needs to set `DebugType` to `portable` on\r\nWindows in order to produce pdb files\r\n- `BuildAppWithManagedResourceParserAndLibraries` was consistently\r\ntaking ~9 seconds on the VSTS build agent. I was also hitting the 260\r\nmax path limit on my machine, so I shortened the directory name.\r\n- `CheckBuildIdIsUnique` needed to take into account that `mdb` files\r\nare generated on Windows\r\n- `CheckLibraryImportsUpgrade` needed a change to force the project file\r\nto re-save on Windows. I think this is happening because the timestamps\r\nhave down to the millisecond on Windows, so Windows more thoroughly\r\nenforces the save-skipping logic. I also needed to change one assertion\r\non Windows, since `IncrementalClean` is deleting a directory on `Build`.\r\nThis is fine.\r\n- `KnownPackages` had the wrong `<Reference />` name for\r\n`Xamarin.Android.FSharp.ResourceProvider.Runtime`\r\n- Added a `ToString` implementation for `BuildItem` since it greatly\r\nimproved the debugging experience. You can mouseover an item and see the\r\nvalue of `Include()`."},{"Id":"6958534791","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:36:36","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1085","RelatedDescription":"Opened pull request \"[enumification] filter final ints without explicit constant value.\" (#1085) at xamarin/xamarin-android","RelatedBody":"There were final fields that actually didn't give value in the API XML."},{"Id":"6958469161","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:21:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1068","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix for proguard enclosing char on windows\" (#1068) at xamarin/xamarin-android","RelatedBody":"I noticed on Windows, the `Desugar(True, True, True)` test was failing\r\nwith:\r\n\r\n```\r\njava.io.IOException: Can't read\r\n[E:\\A\\_work\\1\\s\\bin\\TestDebug\\temp\\Desugar(True,True,True)\\obj\\Release\\android\\bin\\classes\\classes.zip(!META-INF\\MANIFEST.MF)]\r\n(No such file or directory)\r\n```\r\n\r\nHowever, running locally proved the file does exist.\r\n\r\nSomehow #1049 introduced a case where proguard is failing due to the\r\ncombination the new `(!META-INF/MANIFEST.MF)` filter and the parameters\r\npassed to proguard in this test.\r\n\r\nLooking into it, we had an odd form of how the paths were being passed\r\non Windows using a combination of single and double-quotes:\r\n\r\n```\r\n-injars \"'path1(!META-INF/MANIFEST.MF)';'path2(!META-INF/MANIFEST.MF)'\"\r\n```\r\nThe way these paths were passed was not working on Windows after adding\r\nthis new filter--but only for this `Desugar` test... Most cases were\r\nworking, such as our tests around multi-dex and proguard.\r\n\r\nIt worked correctly on Windows when specified as:\r\n```\r\n-injars \"path1(!META-INF/MANIFEST.MF)\";\"path2(!META-INF/MANIFEST.MF)\"\r\n```\r\n\r\nSo keep things consistent, I refactored the code to use \" on Windows and\r\n' on other platforms. This also resolved the issues in the `Desugar` test on\r\nWindows, for which I also added an additional assertion."},{"Id":"6958451593","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:18:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1069","RelatedDescription":"Merged pull request \"Reduce Android.* dependency from Java.Interop repo.\" (#1069) at xamarin/xamarin-android","RelatedBody":"Those Attributes are specific to Android, but they have been part of\r\nJava.Interop codebase because things were not that well separate.\r\n\r\nAdd a simple interface to avoid concrete dependencies to Android.*\r\nattributes and make things simpler."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6958834826","Type":"PullRequestEvent","CreatedAt":"2017-12-07T19:42:11","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1350","RelatedDescription":"Opened pull request \"[DO NOT MERGE] Testing 2.5.0\" (#1350) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTesting build process for monitoring performance.\r\n\r\n### Bugs Fixed ###\r\n\r\nN/A\r\n\r\n### API Changes ###\r\n\r\n`Performance` class has been extracted \r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6958444900","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:16:31","Actor":"jsuarezruiz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1349","RelatedDescription":"Opened pull request \"[GTK] Added Maps project\" (#1349) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded **Xamarin.Forms.Maps.GTK** project.  It makes use of GMaps.NET internally for the maps managment.\r\n\r\n### Behavioral Changes ###\r\n\r\nCan use Google maps from Linux, macOS and Windows using the GTK backend.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6958274572","Type":"IssuesEvent","CreatedAt":"2017-12-07T17:39:09","Actor":"Ychergui","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1348","RelatedDescription":"Opened issue \"Android status bar isn't set ont start of the application\" (#1348) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\n\r\nI have set the color of my status bar into a color.xml file and a style in the style.xml but the application make some seconds to update the status bar color.\r\n\r\nI have made a sample with 2 activity separated to see the effect.\r\n\r\nThanks\r\n\r\n### Steps to Reproduce\r\n\r\n1. Launch the app\r\n2. The status bar will be blanck and the mainActivity will be launch\r\n3. Press back when the MainActivity has been loaded to return on splashScreen Activity\r\n4. The status bar as changed to blue\r\n\r\n### Expected Behavior\r\n\r\nThe status bar is blue on the start of the app and not after some seconds\r\n\r\n### Actual Behavior\r\n\r\nThe status bar change is color after some time\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.4.0.280\r\n- IDE: VS2017\r\n- Platform Target Frameworks: \r\n  - Android: Android 6 and 7\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/Ychergui/AndroidStatusBar\r\n"},{"Id":"6957245165","Type":"IssuesEvent","CreatedAt":"2017-12-07T14:31:57","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1347","RelatedDescription":"Opened issue \"[Android] Frame outline color not rendering\" (#1347) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nMigrated from https://bugzilla.xamarin.com/show_bug.cgi?id=27460\r\n\r\nThe original issue was that the color wouldn't appear unless padding was set. In my sample I don't see the color on Android at all. iOS renders as I'd expect.\r\n\r\n<img width=\"919\" alt=\"screenshot 2017-12-07 08 14 26\" src=\"https://user-images.githubusercontent.com/41873/33720042-56c5f330-db28-11e7-9aaa-a88f33453560.png\">\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Frame with an outline color.\r\n2. Run and observe on Android the outline doesn't show the color.\r\n\r\n### Expected Behavior\r\nThe outline should be the color I've chosen, regardless of padding.\r\n\r\n### Actual Behavior\r\niOS renders as expected. Android outline isn't the chosen color, red.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.121934\r\n- IDE: VS Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.1\r\n  - Android: 7.1 running on 8.0 using FormsAppCompatActivity\r\n- Android Support Library Version: 25.4.0.2\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/1539431/Archive.zip)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6958805896","Type":"PullRequestEvent","CreatedAt":"2017-12-07T19:35:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3088","RelatedDescription":"Opened pull request \"[xamarin-analysis] Add rule #6 and updated md file\" (#3088) at xamarin/xamarin-macios","RelatedBody":"- Add XIA0006: HttpClientAvoidManaged.\n- Add documentation on how the rules work and how to activate them.\n  Also mention that they need to be ran on each active configuration.\n- Bump maccore to include XIA 0006."},{"Id":"6957033437","Type":"PullRequestEvent","CreatedAt":"2017-12-07T13:51:08","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3086","RelatedDescription":"Merged pull request \"Xcode 9.2 merge\" (#3086) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6953176352","Type":"PullRequestEvent","CreatedAt":"2017-12-06T20:03:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3080","RelatedDescription":"Merged pull request \"Add initial github issue template\" (#3080) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6953127858","Type":"IssuesEvent","CreatedAt":"2017-12-06T19:53:04","Actor":"pooran","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3087","RelatedDescription":"Opened issue \"Call Directory Extension\" (#3087) at xamarin/xamarin-macios","RelatedBody":"We followed steps provided https://developer.xamarin.com/guides/ios/platform_features/callkit/#Implementing-a-Call-Directory-Extension to create a call directory extension. We have shared a file group, that has less than 1000 phone numbers written from parent iOS app, which the app will read and load it to its directory.\r\n\r\nIt deploys along with iOS project. But when we try enabling the extension from Settings > Phone > Call Blocking and Identification, we get error 'An error occurred while attempting to enable app.\r\n\r\nIn device log, we found this error.\r\n\r\nError (188) / suggestd: Received a connection without suggestions entitlement, rejecting; pid: 801, name: com.apple.Preferences, entitlementKey: com.apple.private.suggestions.contacts, protocol: SGDSuggestManagerContactsProtocol\r\n\r\nAny idea where to put this entitlement? What we have been doing wrong."},{"Id":"6953087269","Type":"PullRequestEvent","CreatedAt":"2017-12-06T19:44:27","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3086","RelatedDescription":"Opened pull request \"Xcode 9.2 merge\" (#3086) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6951475856","Type":"PullRequestEvent","CreatedAt":"2017-12-06T14:36:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3083","RelatedDescription":"Merged pull request \"[Make.config] Add TODO for PACKAGE_VERSION_REV\" (#3083) at xamarin/xamarin-macios","RelatedBody":"In my bump to Xcode 9.2 final: https://github.com/xamarin/xamarin-macios/pull/3081 I updated the `IOS_PACKAGE_VERSION`'s minor # (for the release) but forgot to update `PACKAGE_VERSION_REV` (genuinely didn't know about it).\r\n\r\nIn retrospect, I should have read the bloc of text a couple lines above that says: \"A release branch requires updating\". Therefore in a desperate attempt to avoid that future me missing this I added a `/!\\ README /!\\`. I also updated the comment above `PACKAGE_VERSION_REV` to better highlight the importance of resetting to 0 and a TODO to, again, help future me see this (:"},{"Id":"6947798869","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:35:30","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3084","RelatedDescription":"Merged pull request \"[msbuild] Don't run Xamarin.Analysis on library projects\" (#3084) at xamarin/xamarin-macios","RelatedBody":"Avoid bug #59697: iOS Library projects fail CompileEntitlements when Analysis is enabled\n(https://bugzilla.xamarin.com/show_bug.cgi?id=59697)\n\nNote: bug #59697 happens because XIA0002_TestCloudAgentReleaseRule depends on `_CompileToNative` which\ndepends on `CompileEntitlements` which then requires the `AppBundleDir` parameter that isn't provided\nfor library project.\n\nIf we ever decide to enable Xamarin.Analysis on library projects we'll have to run a subset of the rules that\ndoesn't include rules like XIA0002 using the same condition this fix is using."},{"Id":"6947632432","Type":"PullRequestEvent","CreatedAt":"2017-12-05T20:59:23","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3085","RelatedDescription":"Opened pull request \"[msbuild] Add support for optionally explaining why inapplicable certificates are not applicable\" (#3085) at xamarin/xamarin-macios","RelatedBody":"Help fix #58251: When looking for valid signing certificates, print out each invalid certificate and state why it's not valid\n(https://bugzilla.xamarin.com/show_bug.cgi?id=58251)"},{"Id":"6946708809","Type":"PullRequestEvent","CreatedAt":"2017-12-05T17:44:01","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3084","RelatedDescription":"Opened pull request \"[msbuild] Don't run Xamarin.Analysis on library projects\" (#3084) at xamarin/xamarin-macios","RelatedBody":"Avoid bug #59697: iOS Library projects fail CompileEntitlements when Analysis is enabled\n(https://bugzilla.xamarin.com/show_bug.cgi?id=59697)\n\nNote: bug #59697 happens because XIA0002_TestCloudAgentReleaseRule depends on `_CompileToNative` which\ndepends on `CompileEntitlements` which then requires the `AppBundleDir` parameter that isn't provided\nfor library project.\n\nIf we ever decide to enable Xamarin.Analysis on library projects we'll have to run a subset of the rules that\ndoesn't include rules like XIA0002 using the same condition this fix is using."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"938851228209033219","CreatedAt":"2017-12-07T19:22:30+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/Ei8f1vdY4X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":19,"RawContent":null},{"Id":"938814862695849984","CreatedAt":"2017-12-07T16:58:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample enterprise app with the Microsoft Authentication Library and #MicrosoftGraph APIs: https://t.co/d9Rlu92TWT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":13,"RawContent":null},{"Id":"938480168515055617","CreatedAt":"2017-12-06T18:48:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing the #Azure Mobile Badge from @XamarinU! Get started today: https://t.co/iirsQ3UrwL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":25,"RawContent":null},{"Id":"938450714149445637","CreatedAt":"2017-12-06T16:51:00+00:00","UserScreenname":"xamarinhq","Text":"Don't forget to register for next week's webinars on updating your #Xamarin apps to get the most out of Android 8 O… https://t.co/1dK9RFJUEq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":21,"RawContent":null},{"Id":"938141429167198208","CreatedAt":"2017-12-05T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"See how ￼Fidelity Mobile is uniting Brazilian citizens and their elected officials using real-time chat apps built… https://t.co/z6zRiQICHR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":12,"RawContent":null},{"Id":"938089332048564224","CreatedAt":"2017-12-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":10,"RawContent":null},{"Id":"937774983811616774","CreatedAt":"2017-12-04T20:05:53+00:00","UserScreenname":"xamarinhq","Text":"See what’s new in #VisualStudio 2017 version 15.5: https://t.co/wdtvE6HR1g https://t.co/ASOjIPtCt6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":171,"FavoriteCount":137,"RawContent":null},{"Id":"937729008883699712","CreatedAt":"2017-12-04T17:03:12+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/XFAEcWNh5K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":12,"FavoriteCount":10,"RawContent":null},{"Id":"937507246317203457","CreatedAt":"2017-12-04T02:22:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to embed any #XamarinForms ContentPage into your #Xamarin iOS and Android projects: https://t.co/U3QvCAOeFf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":27,"RawContent":null},{"Id":"937084968140001281","CreatedAt":"2017-12-02T22:24:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/1LrzR56fPj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":171,"FavoriteCount":79,"RawContent":null},{"Id":"936715745370796033","CreatedAt":"2017-12-01T21:56:51+00:00","UserScreenname":"xamarinhq","Text":"Catch up with the @XamarinPodcast and learn about #XamarinForms 2.5.0, plus exciting updates to Live Player,… https://t.co/zBch3rb7K7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":19,"RawContent":null},{"Id":"936662898692313089","CreatedAt":"2017-12-01T18:26:52+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you (or online!) this December: https://t.co/O6L4GHyg4a https://t.co/wNIUbnJtoI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":5,"RawContent":null},{"Id":"936641572006957058","CreatedAt":"2017-12-01T17:02:07+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/DpaVdK5ZMf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"936334395631431685","CreatedAt":"2017-11-30T20:41:30+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your #Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/o6RntWMo4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"936280915675959296","CreatedAt":"2017-11-30T17:09:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to set up and configure an #Azure Notification Hub for your #Xamarin.iOS app: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":24,"RawContent":null},{"Id":"935969076786204672","CreatedAt":"2017-11-29T20:29:52+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinars on updating your #Xamarin apps to get the most out of iOS 11 and Android 8 O… https://t.co/RLOHI0RlUX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"935917018624217089","CreatedAt":"2017-11-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to provision a new iOS device and app in five minutes using #VS4Mac and the open source project fastlane: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":24,"RawContent":null},{"Id":"935600034816634880","CreatedAt":"2017-11-28T20:03:25+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":23,"RawContent":null},{"Id":"935552365058560001","CreatedAt":"2017-11-28T16:54:00+00:00","UserScreenname":"xamarinhq","Text":"5 ways to boost a #XamarinForms app's start up time: https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":37,"RawContent":null},{"Id":"935255661050585088","CreatedAt":"2017-11-27T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/TA7SMA9DLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2017-12-08T05:30:41.6909882Z","RunDurationInMilliseconds":4389}