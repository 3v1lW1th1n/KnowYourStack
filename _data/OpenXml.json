{"Data":{"Sdk":{"Events":[{"Id":"6938968926","Type":"IssuesEvent","CreatedAt":"2017-12-04T11:59:26","Actor":"dodyg","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/310","RelatedDescription":"Opened issue \"Inquiry: code generation method\" (#310) at OfficeDev/Open-XML-SDK","RelatedBody":"What kind of tool are you guys using to generate the classes (https://github.com/OfficeDev/Open-XML-SDK/tree/vNext/DocumentFormat.OpenXml/src/GeneratedCode)? \r\n\r\nI am trying to implement an Open NDC protocol C# client (http://www.iata.org/whatwedo/airline-distribution/ndc/Pages/schema-download2.aspx) "},{"Id":"6937791276","Type":"IssuesEvent","CreatedAt":"2017-12-04T07:15:20","Actor":"elkinmilen","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/309","RelatedDescription":"Opened issue \"Each XML part of the generated documents has a BOM prefix\" (#309) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nCannot generate document without BOM sequence prefix on every part of the document.\r\nSome viewers throw an error and do not open the document because of this. When first opened and saved with MS Excel the BOM sequences for each part gets removed.\r\n\r\n**Information**\r\n\r\n- .NET Target: any\r\n- DocumentFormat.OpenXml Version: (ie 2.7.2)\r\n\r\n**Repro**\r\n\r\nGenerate basic Excel document. Change the extension of the generated document to ZIP. Open the ZIP archive. Open an XML file inside into a HEX editor of choice. \r\n\r\n**Observed**\r\n\r\nThe file contents start with EF BB BF (or BOM) and you cannot avoid that.\r\n\r\n**Expected**\r\n\r\nNo BOM sequence or a setting in the API to omit it.\r\n\r\n![bom](https://user-images.githubusercontent.com/6715076/33540348-618a1ef6-d8d3-11e7-87d6-4ca2ef3a4a43.png)\r\n"},{"Id":"6925794718","Type":"PullRequestEvent","CreatedAt":"2017-11-30T16:58:11","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/308","RelatedDescription":"Opened pull request \"WIP Add code coverage\" (#308) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6925435682","Type":"PullRequestEvent","CreatedAt":"2017-11-30T15:56:05","Actor":"onovotny","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/307","RelatedDescription":"Opened pull request \"Use SignService v2\" (#307) at OfficeDev/Open-XML-SDK","RelatedBody":"This PR is to move to the new sign service. Please contact me on how to share the secrets with you."},{"Id":"6922014994","Type":"PullRequestEvent","CreatedAt":"2017-11-30T00:44:04","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/306","RelatedDescription":"Merged pull request \"Update office2016 branch for DataContractSerialiazer\" (#306) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6921591352","Type":"PullRequestEvent","CreatedAt":"2017-11-29T22:38:10","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/306","RelatedDescription":"Opened pull request \"Update office2016 branch for DataContractSerialiazer\" (#306) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6919729293","Type":"PullRequestEvent","CreatedAt":"2017-11-29T16:15:51","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/301","RelatedDescription":"Merged pull request \"Use a consolidated serializer for schema constraint data on all platforms\" (#301) at OfficeDev/Open-XML-SDK","RelatedBody":"Currently, there are two ways that schema constraint data is stored:\r\n\r\n- On .NET Framework, there is a BinaryFormatter serialized set of data\r\n- On .NET Standard, there are a few large files that contain C# code derived from the BinaryFormatter data\r\n\r\nThe problem with this is that BinaryFormatter is not a good serialization technique for cross-runtime/platform usage and having two systems is really complicated. The second system was put in place due to not having access to the original BinaryFormatter generator. This is available now, and so this change consolidates the two systems into one using the DataContractSerializer.\r\n\r\nFurther changes may remove the binary aspect of the files so that diffs can be better generated and easily viewed."},{"Id":"6918327450","Type":"IssuesEvent","CreatedAt":"2017-11-29T11:45:46","Actor":"Itaros","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/305","RelatedDescription":"Opened issue \"Documentation is inconsistant\" (#305) at OfficeDev/Open-XML-SDK","RelatedBody":"https://github.com/OfficeDev/Open-XML-SDK/blob/ae8b0003830232b70a6518afe6acbe0ea02fe978/DocumentFormat.OpenXml/src/Framework/OpenXmlCompositeElement.cs#L166-L186\r\n\r\nWhy it says 'sets' if it doesn't?"},{"Id":"6915363789","Type":"IssuesEvent","CreatedAt":"2017-11-28T21:28:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/128","RelatedDescription":"Closed issue \"Confusing exception when file cannot be found\" (#128) at OfficeDev/Open-XML-SDK","RelatedBody":"I have a large document that opens fine and edits without issue under Microsoft Word 2016. It contains 67 pages, and some images and tables. When trying to open this document using the OpenXml libraries, I receive the following exception. Any suggestions?\r\n\r\nAn exception of type 'DocumentFormat.OpenXml.Packaging.OpenXmlPackageException' occurred in DocumentFormat.OpenXml.dll but was not handled in user code\r\n\r\nAdditional information: The specified package is invalid. The main part is missing."},{"Id":"6915180823","Type":"PullRequestEvent","CreatedAt":"2017-11-28T20:48:48","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/304","RelatedDescription":"Opened pull request \"Add CellValue overload to accept DateTime or DateTimeOffset\" (#304) at OfficeDev/Open-XML-SDK","RelatedBody":"A common need is to add a date object to a cell, but it requires a specific format that is not easy to track down. The text needs to be in ISO 861 format, so this adds a couple of overloads to do that so it's more discoverable.\r\n\r\nFixes #142 "},{"Id":"6914389010","Type":"PullRequestEvent","CreatedAt":"2017-11-28T18:05:39","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/303","RelatedDescription":"Merged pull request \"Enable SA1119 to remove unnecessary parentheses\" (#303) at OfficeDev/Open-XML-SDK","RelatedBody":"Part of #197 "}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"6885227045","Type":"PullRequestEvent","CreatedAt":"2017-11-21T15:31:13","Actor":"EricWhiteDev","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/183","RelatedDescription":"Merged pull request \"Merge styles with same name in DocumentBuilder\" (#183) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Solves #181.\r\n\r\nCurrently implemented with a compile-time feature flag, but this could easily be changed to an optional parameter passed to DocumentBuilder at run-time.\r\n\r\nIt is likely possible to clean up the section that maps style IDs in references and numberings so that it doesn't have to go through as many elements."},{"Id":"6879031290","Type":"IssuesEvent","CreatedAt":"2017-11-20T14:08:53","Actor":"saritakhachane","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/193","RelatedDescription":"Opened issue \"imported word document not supporting for Listitems\" (#193) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"We have use OpenXML power tool 4.5.3.2 in our MVC project for importing word document.  after importing we are allowing user to edit it. But as list-items in Document are  imported with special CSS classes and not as UL LI ,so after hitting enter key  at the end of any bullet list item, next bullet list item wont created automatically. \r\nPlease guide us on, how we can import word document with list-items, so that next list-item will automatically created after hitting enter key in Edit mode.\r\n\r\n"},{"Id":"6873352404","Type":"IssuesEvent","CreatedAt":"2017-11-18T09:28:57","Actor":"bestplay","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/192","RelatedDescription":"Opened issue \"MarkupSimplifier.SimplifyMarkup w:hint issue\" (#192) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"OpenXML power tools 4.5.3.2 from Nuget.\r\n\r\nWhen I edit my docx in a RUN with <w:hint=\"east asia\">.\r\n\r\nIt will add new RUNs with or without <w:hint>.\r\n\r\nThen the SimplifyMarkup method can not merge this new RUNs.\r\n\r\nAny help?\r\n\r\nMy tricky work round is Add the same <w:int> to each adjacent runs.\r\n\r\nBut i don't know if some bad things will happen.\r\n\r\nI have read the document about hint:\r\n\r\n> hint (Font Content Type) | Specifies the  font type which shall be used to format any ambiguous characters in the current  run.   There are  certain characters which are not explicitly stored in the document, and can be  mapped into multiple categories of the four mentioned above. This attribute  shall be used to arbitrate that conflict, and determine how ambiguities in this  run shall be handled. [Note: This is  primarily used to handle the formatting on the paragraph mark glyph, and other  characters that are not stored as text in the WordprocessingML document. end note]   If this  attribute is omitted, then this ambiguity can be resolved by any means  available.   [Example: Consider the run representing the  paragraph mark glyph, which is not stored as a physical character. Since this  could therefore be formatted with any of the fonts specified for the run, this  ambiguity is resolved using the following WordprocessingML:   <w:pPr><w:rPr><w:rFonts w:hint=\"eastAsia\"  /></w:rPr></w:pPr>   The hint attribute specifies that the run must use the eastAsia font  (theme or not, whichever is in use for East Asian text) as defined for this  range. end example]   The possible  values for this attribute are defined by the ST_Hint  simple type (17.18.41).\r\n "},{"Id":"6854049048","Type":"IssuesEvent","CreatedAt":"2017-11-14T17:34:45","Actor":"MalcolmJohnston","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/191","RelatedDescription":"Opened issue \"Document Assembler: Ability to merge in whole Word Documents or other Document Assembler templates\" (#191) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hello, \r\n\r\nI wanted to check whether the above functionality would be useful to the project.  I have not contributed to  an Open Source project before so though I would ask first before spending the time created a Pull Request etc.\r\n\r\nMy implementation is as follows;\r\n\r\n* Added two new elements Document and DocumentTemplate\r\n* These two elements share common attributes Path and Data\r\n* The Path attribute can be either a file path or XPath that retrieves a file path from the input XML\r\n* The Data attribute is intended to hold a base64 encoded string containing the Word document contents\r\n* The DocumentTemplate element also has a Select attribute so that XML data can be passed to the template\r\n\r\nWith the above in place what I do is take a two pass approach.\r\n\r\nFirstly I process the Document and DocumentTemplate elements converting all to a Document element which contains a Data attribute with the base64 encoded content of the Document or assembled DocumentTemplate.\r\n\r\nThen I have introduced a second step and as such a dependency on DocumentBuilder in DocumentAssembler.  I am not sure if this will be frowned upon or not :)\r\n\r\nThis second step is largely based on this post from Eric White;\r\n\r\nhttps://blogs.msdn.microsoft.com/ericwhite/2009/04/21/using-documentbuilder-with-content-controls-for-document-assembly/\r\n\r\nThere are some limitations in my implementation, namely that all sections need to have the same page layout.  I will also (at some point) improve it slightly so that the the Document and DocumentTemplate elements will allow the addition of Page Breaks via an attribute.  This will make the template composition in word a lot neater.\r\n\r\nAnyway, is anyone interested in this?  Or is my solution horrible!\r\n\r\nI do think that this adds a LOT of power to DocumentAssembler and has the potential to make creating complex templates files more manageable by hiding away parts of templates into sub-templates.\r\n\r\nIf there is interest from the maintainers then I will put up a Pull Request.\r\n\r\nCheers. \r\n\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-12-06T05:30:31.715059Z","RunDurationInMilliseconds":1672}