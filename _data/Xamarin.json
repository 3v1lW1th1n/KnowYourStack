{"Data":{"Blog":{"FeedItems":[{"Title":"Augmented Reality in Xamarin.Android with ARCore","PublishedOn":"2017-10-30T19:50:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Now that you&#8217;ve had a chance to augment reality in your Xamarin iOS apps with ARKit, it&#8217;s time to explore Google&#8217;s take on AR in your Xamarin Android apps. The new ARCore SDK provides APIs for Augmented Reality features, such as motion tracking, plane detection, and light estimation. These are the building blocks you will [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/augmented-reality-xamarin-android-arcore/\">Augmented Reality in Xamarin.Android with ARCore</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/augmented-reality-xamarin-android-arcore/","RawContent":null},{"Title":"Go Large with iOS 11","PublishedOn":"2017-10-26T19:36:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the more obvious user interface changes in iOS 11 is the larger titles that are used across the system apps, from the App Store and Apple Music to Notes and Mail. The Health and Contact apps are shown below: The title animates off the screen and shrinks to a normal-sized navigation bar when [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/go-large-ios-11/\">Go Large with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/go-large-ios-11/","RawContent":null},{"Title":"Introducing the Android SDK Manager","PublishedOn":"2017-10-25T19:55:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>To make the process of managing Android SDKs as smooth as possible, we’ve revamped the Android SDK Manager in Visual Studio for Mac to create a seamless, integrated experience. Not only does this new SDK Manager offer a one-stop shop for all things Android SDK, we&#8217;re also introducing support for automatic SDK dependency resolution. So, let’s [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/introducing-android-sdk-manager/\">Introducing the Android SDK Manager</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/introducing-android-sdk-manager/","RawContent":null},{"Title":"3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release","PublishedOn":"2017-10-24T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Over the past year we’ve been working on a couple of &#8220;big things&#8221; that enable you to create more performant applications on more platforms. With our latest stable release, version 2.4.0, we introduced performance optimized renderers on Android, nicknamed Fast Renderers. While faster platform renderers are a clear win, you really start to see the big [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/\">3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/","RawContent":null},{"Title":"Five-Star Apps with Mobile Center Test","PublishedOn":"2017-10-20T12:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Five-star mobile apps are all about consistent and predictable output. It&#8217;s not a good experience for users when an app suddenly crashes or doesn’t format correctly on their mobile screens. Developers can easily avoid these scenarios by testing for various scenarios on different devices, and Visual Studio Mobile Center makes it easy to test your mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/\">Five-Star Apps with Mobile Center Test</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/","RawContent":null},{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Tuesday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6797938947","Type":"PullRequestEvent","CreatedAt":"2017-11-02T02:02:09","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1000","RelatedDescription":"Opened pull request \"[build] fix for Xamarin.Android.Build.Tasks build\" (#1000) at xamarin/xamarin-android","RelatedBody":"One issue here is that `obj/Debug/Profile.g.cs` is getting regenerated\r\non every build, forcing `Xamarin.Android.Build.Tasks.csproj` to rebuild\r\n*every* time. It looks like the `IncrementalClean` target was the culprit,\r\nin that it deleted this file after the build completed.\r\n\r\nA simple fix here is to move the file up one directory to\r\n`$(BaseIntermediateOutputPath)`, but not sure if this is the *right*\r\nway to be fixing this."},{"Id":"6797927263","Type":"PullRequestEvent","CreatedAt":"2017-11-02T01:57:33","Actor":"akoeplinger","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/999","RelatedDescription":"Opened pull request \"Bump to mono/2017-10/5a5ab38 and remove linker exclusions in corlib tests\" (#999) at xamarin/xamarin-android","RelatedBody":"I added tests for the *Attributes which were linked away in https://github.com/mono/mono/commit/5a5ab38c9e39c64b23b2071c195400b743a38455 so we should be able to remove the linker exclusions now."},{"Id":"6796482868","Type":"PullRequestEvent","CreatedAt":"2017-11-01T19:10:30","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/998","RelatedDescription":"Opened pull request \"Rework AsyncTask stuff a bit [WIP\" (#998) at xamarin/xamarin-android","RelatedBody":""},{"Id":"6796195921","Type":"PullRequestEvent","CreatedAt":"2017-11-01T18:10:35","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/997","RelatedDescription":"Opened pull request \"[build] change path used for xabuild in Makefile\" (#997) at xamarin/xamarin-android","RelatedBody":"Use `bin/$(CONFIGURATION)/bin/xabuild` instead of `tools/xabuild`\r\n\r\nThis will help figure out what is going on in #949"},{"Id":"6796094858","Type":"PullRequestEvent","CreatedAt":"2017-11-01T17:50:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/996","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Handle lint.bat not returning version info.\" (#996) at xamarin/xamarin-android","RelatedBody":"Turns out lint.bat does not always return a version number. It\r\nreturns stuff like\r\n\r\n\tlint: version unknown\r\n\tlint: unknown version\r\n\r\nnot very helpful. So we need to handle that case and return a\r\nempty verison."},{"Id":"6795199850","Type":"PullRequestEvent","CreatedAt":"2017-11-01T14:58:32","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/996","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Handle lint.bat not returning version info.\" (#996) at xamarin/xamarin-android","RelatedBody":"Turns out lint.bat does not always return a version number. It\r\nreturns stuff like\r\n\r\n\tlint: version unknown\r\n\tlint: unknown version\r\n\r\nnot very helpful. So we need to handle that case and return a\r\nempty verison."},{"Id":"6795126768","Type":"PullRequestEvent","CreatedAt":"2017-11-01T14:45:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/955","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Speed up ResolveLibraryProjectImports\" (#955) at xamarin/xamarin-android","RelatedBody":"Rather than trying to ALWAYS unset the ReadOnly flag, lets only\r\ndo it if the directory is read only. Also use EnumerateFiles\r\nrather than GetFiles to get the .jar files. EnumerateFiles is\r\nmore efficient."},{"Id":"6795120702","Type":"PullRequestEvent","CreatedAt":"2017-11-01T14:43:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/976","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Null Reference Exceoption when getting android.jar\" (#976) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=60324\r\n\r\nIf a android.jar file does NOT exist for a target platform we should\r\nraise a normal error. But we currently throw a null reference\r\nexception.\r\n\r\n`TryGetPlatformDirectoryFromApiLevel` can return null, this is by\r\ndesign. So we need to handle that in the places where its used.\r\nAnd return a reasonable error message if we do get a null back."},{"Id":"6794982081","Type":"PullRequestEvent","CreatedAt":"2017-11-01T14:17:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/944","RelatedDescription":"Merged pull request \"[linker] Use mono's linker submodule\" (#944) at xamarin/xamarin-android","RelatedBody":"Instead of having own submodule. This way we unify with xamarin-macios\r\nas it also uses mono's linker submodule."},{"Id":"6794966726","Type":"PullRequestEvent","CreatedAt":"2017-11-01T14:14:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/993","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Lets retry a build if we get a native crash\" (#993) at xamarin/xamarin-android","RelatedBody":"We get a few probems when building with mono/xbuild. We get\r\nthe occasional crash :(\r\n\r\n\tat <unknown> <0xffffffff>\r\n\tat (wrapper managed-to-native) object.__icall_wrapper_mono_gc_alloc_obj (intptr,intptr) [0x00000] in <4fdc5ed61a074cafb49fa42deb20d521>:0\r\n\tat (wrapper alloc) object.AllocSmall (intptr,intptr) <0x000fa>\r\n\r\nSo what we might want to do is to retry the build if we get this.\r\nIt usually doesn't happen twice in a row."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6797601564","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:49:36","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1248","RelatedDescription":"Opened pull request \"[Controls] Add info  hen using FastRenderers\" (#1248) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nJust some info on the gallery when using Fast Renderers flag\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6796533488","Type":"PullRequestEvent","CreatedAt":"2017-11-01T19:21:05","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1246","RelatedDescription":"Merged pull request \"[macOS] Handle case where no storyboard is provided for menus\" (#1246) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMake sure we check if a MainMenu is provided via the storyboard\r\n\r\n### Bugs Fixed ###\r\n\r\n- \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nUser should now provided a Main.storyboard. the default template already has one so should be no issue \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6796050400","Type":"PullRequestEvent","CreatedAt":"2017-11-01T17:41:37","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/889","RelatedDescription":"Closed pull request \"[Evolution] Toolbar a11y\" (#889) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nBuilding on #713, this would add VoiceOver/TalkBack/Narrator capability to ToolBarItems. Included in this change would be limited support for setting accessibility properties on the MasterDetailPage toggle button and the NavigationBar back button.\r\n\r\n## Proposed changes:\r\n### `ToolbarItem`s\r\n- [All] `ToolbarItem`s with `Text` will already read the `Text` if no `Accessibility.Name` or `.Hint` are supplied. No change.\r\n- [iOS/UWP] `Accessibility.Name` will _replace_ the `Text` that is read aloud on iOS and UWP. This is consistent with the platforms.\r\n- [Android] `Accessibility.Name` and/or `Accessibility.Hint` will _completely replace_ the `Text` that is both **visible** and read aloud on Android. This is a limitation of API<26 and may be resolved later to be consistent with iOS and UWP.\r\n\r\n### `MasterDetailPage` Toggle Button\r\n- [iOS/UWP] Set `Accessibility.Name` and `Accessibility.Hint` on a `MasterDetailPage` to set the text that is read aloud on the toggle button. Setting these properties will have no effect on Android.\r\n- [Android] Add string resources to the Android project to set the text that is read aloud on the `MasterDetailPage` toggle button. \r\n```\r\n <string name=\"mdp_open_a11y_name\">Show Master Page</string>\r\n <string name=\"mdp_close_a11y_name\">Hide Master Page</string>\r\n```\r\n\r\n### `NavigationPage` Back Button\r\n- [Android] Set `Accessibility.Name` and `Accessibility.Hint` on a `Page` to set the text that is read aloud on the Back arrow in the Action Bar. This will have no effect on OS back buttons.\r\n- [UWP] Not applicable. \r\n- [iOS] Not supported; will read the title of the page as usual.\r\n\r\nSee https://forums.xamarin.com/discussion/94289/basic-accessibility-support-toolbaritems.\r\n\r\n### Bugs Fixed ###\r\n\r\n- [Bug 52656 - ToolbarItem needs accessibility support](https://bugzilla.xamarin.com/show_bug.cgi?id=52656)\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6795581049","Type":"PullRequestEvent","CreatedAt":"2017-11-01T16:08:49","Actor":"martijn00","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1247","RelatedDescription":"Opened pull request \"Make it possible to customise the window on iOS\" (#1247) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis changes the way the window is used in iOS in a backwards compatible way.\r\n\r\n### Bugs Fixed ###\r\n\r\nIt was not possible to swap out the current root for a native Xamarin ViewController, and then navigate back to a Forms one.\r\n\r\nAlso when changing the MainPage on a custom window it would crash because it would not implement PlatformRenderer. The new check prevents this.\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - Window { get; set; }\r\n\r\n### Behavioral Changes ###\r\n\r\nThis will not change any behaviour but just enable to work easier with Native views, especially in MvvmCross.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6795398658","Type":"PullRequestEvent","CreatedAt":"2017-11-01T15:35:17","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1246","RelatedDescription":"Opened pull request \"[macOS] Handle case where no storyboard is provided for menus\" (#1246) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMake sure we check if a MainMenu is provided via the storyboard\r\n\r\n### Bugs Fixed ###\r\n\r\n- \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nUser should now provided a Main.storyboard. the default template already has one so should be no issue \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6797107861","Type":"PullRequestEvent","CreatedAt":"2017-11-01T21:26:31","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2950","RelatedDescription":"Merged pull request \"[Metal] MTLBuffer.CreateTexture shouldn't be abstract on macOS\" (#2950) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6796828272","Type":"PullRequestEvent","CreatedAt":"2017-11-01T20:24:39","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2951","RelatedDescription":"Opened pull request \" [Metal] MTLBuffer.CreateTexture shouldn't be abstract on macOS\" (#2951) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6796643826","Type":"PullRequestEvent","CreatedAt":"2017-11-01T19:44:16","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2950","RelatedDescription":"Opened pull request \"[Metal] MTLBuffer.CreateTexture shouldn't be abstract on macOS\" (#2950) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6796341569","Type":"PullRequestEvent","CreatedAt":"2017-11-01T18:40:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2949","RelatedDescription":"Opened pull request \"Adds generator-tests to Xamarin.iOS.sln's Tests solution folder for easier access\" (#2949) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6796204976","Type":"PullRequestEvent","CreatedAt":"2017-11-01T18:12:30","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2948","RelatedDescription":"Opened pull request \"[Generator] BindAs attribute for smart enum to multidimensional array generates code that doesn't compile, Fixes Bug 57795\" (#2948) at xamarin/xamarin-macios","RelatedBody":"https://bugzilla.xamarin.com/show_bug.cgi?id=57795\r\n\r\nWe now error out with \"BI1048 Unsupported type Foo[,] decorated with [BindAs]\"\r\n\r\nBuild diff: https://gist.github.com/dalexsoto/5d26240320b9e805d4cc10b9281010d4"},{"Id":"6796061311","Type":"PullRequestEvent","CreatedAt":"2017-11-01T17:43:47","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2947","RelatedDescription":"Opened pull request \"[macOS] NSCollectionView.ValidateDrop should use 'ref', not 'out'.  Fixes #60416\" (#2947) at xamarin/xamarin-macios","RelatedBody":"The two pointer parameters pass in the proposed index and operation to the method, then the developer has the option to change those values if desired inside the method.  The current binding using 'out' parameters is never called when it is supposed to be in an application.  \r\n\r\nBecause it is an existing binding, we cannot simply change the parameters to 'refs' and instead have to bind a new method using 'ref' and use code-behind to keep versions of the old binding around.\r\n\r\nThe new method also has to have a new name, because you can not have 2 methods with matching signatures where the only difference is 'ref' versus 'out."},{"Id":"6796010632","Type":"PullRequestEvent","CreatedAt":"2017-11-01T17:33:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2943","RelatedDescription":"Merged pull request \"Merge `xcode9.1` into `d15-5`\" (#2943) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6795311022","Type":"PullRequestEvent","CreatedAt":"2017-11-01T15:19:18","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2945","RelatedDescription":"Merged pull request \"Use DllImports we already have instead of defining new ones.\" (#2945) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6795309707","Type":"PullRequestEvent","CreatedAt":"2017-11-01T15:19:03","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2944","RelatedDescription":"Merged pull request \"Revert \"[msbuild] Fixed Condition for CalculateCodesignAppBundleInputs (#2843)\"\" (#2944) at xamarin/xamarin-macios","RelatedBody":"This reverts commit cb216083f1cf1c9e19d94107951eed8bc7fafbf7, because it breaks several monotouch-tests:\n\n    [FAIL] KeyChainTest.Add_Certificate :   Add_Certificate\n    [FAIL] KeyChainTest.AddQueryRemove_Identity :   Expected: True\n    [FAIL] KeyChainTest.CheckId :   same guid\n    [FAIL] KeyChainTest.SecItemAdd_Identity :   Expected: True\n    [FAIL] RecordTest.Accessible_17579 :   Add\n    [FAIL] RecordTest.AuthenticationType_17579 :   Add\n    [FAIL] RecordTest.DeskCase_83099_InmutableDictionary :   Password could not be saved to keychain\n    [FAIL] RecordTest.IdentityRecordTest :   Identity added\n    [FAIL] RecordTest.Protocol_17579 :   Add"},{"Id":"6794961577","Type":"PullRequestEvent","CreatedAt":"2017-11-01T14:13:09","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2946","RelatedDescription":"Opened pull request \"[xharness] Properly handle failure by mlaunch to wait for app exit.\" (#2946) at xamarin/xamarin-macios","RelatedBody":"Detect MT1111 from mlaunch (which means mlaunch won't wait for the app to\nexit), and instead use test run completion to determine test completion.\n\nThe main drawback is that if the test app crashes, it won't be detected (the\ntest run will time out, and reported as such), but it's still an improvement\nover the current behavior (the tests may complete successfully, and still be\nreported as timed out).\n\nThis also requires bumping maccore to get an updated mlaunch (one that reports\nMT1111)."},{"Id":"6794009889","Type":"PullRequestEvent","CreatedAt":"2017-11-01T10:14:49","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2945","RelatedDescription":"Opened pull request \"Use DllImports we already have instead of defining new ones.\" (#2945) at xamarin/xamarin-macios","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"925755062617608192","CreatedAt":"2017-11-01T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/ZZaItGQ29a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"925391160755085318","CreatedAt":"2017-10-31T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Next week we're hosting a webinar on building better games with #Unity3D &amp; Microsoft #Azure—sign up now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"925090534133321728","CreatedAt":"2017-10-30T20:02:25+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/2x7nUJzpF3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":35,"RawContent":null},{"Id":"925031289010388992","CreatedAt":"2017-10-30T16:07:00+00:00","UserScreenname":"xamarinhq","Text":"Add push notifications to your iOS apps with #Azure Notification Hubs: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":13,"RawContent":null},{"Id":"924811843180392449","CreatedAt":"2017-10-30T01:35:00+00:00","UserScreenname":"xamarinhq","Text":"Easy iOS app provisioning with fastlane and #VS4Mac: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":19,"RawContent":null},{"Id":"924464051752787968","CreatedAt":"2017-10-29T02:33:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @davidortinau shares his top 5 ways to boost your #XamarinForms start up time (+ a couple bonus tips!): https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":98,"FavoriteCount":42,"RawContent":null},{"Id":"923943119493713920","CreatedAt":"2017-10-27T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add local notifications to a native #Xamarin.Mac app using our Pomodoro sample project: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":12,"RawContent":null},{"Id":"923637228332552193","CreatedAt":"2017-10-26T19:47:30+00:00","UserScreenname":"xamarinhq","Text":"Add large titles to your iOS 11 apps in this post from @conceptdev: https://t.co/RDyk6GDVUU https://t.co/ZOsrbAC1sc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"923566386881974272","CreatedAt":"2017-10-26T15:06:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's Charles Petzold shows you how to get started with #SkiaSharp for #XamarinForms: https://t.co/mlySNk9fev","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":17,"RawContent":null},{"Id":"923279245887135745","CreatedAt":"2017-10-25T20:05:00+00:00","UserScreenname":"xamarinhq","Text":"Introducing the Android SDK Manager: https://t.co/U1OxP9CeeJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"923217836167847937","CreatedAt":"2017-10-25T16:00:59+00:00","UserScreenname":"xamarinhq","Text":"Have you saved the date yet? Visit https://t.co/swPXPdFtSt and add a calendar reminder to join us live online Novem… https://t.co/uLp7HDcxD4","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"923216833938935809","CreatedAt":"2017-10-25T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":19,"RawContent":null},{"Id":"923005188637646853","CreatedAt":"2017-10-25T01:56:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our 11/7 webinar on building better games with #Unity3D and Microsoft #Azure! Register now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"922915335824478210","CreatedAt":"2017-10-24T19:58:57+00:00","UserScreenname":"xamarinhq","Text":"Check out 3 BIG new features to explore in the #XamarinForms 2.5.0 Pre-Release: https://t.co/Du28Gz40ru","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":75,"RawContent":null},{"Id":"922491050886868992","CreatedAt":"2017-10-23T15:53:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":29,"RawContent":null},{"Id":"922284943169990659","CreatedAt":"2017-10-23T02:14:00+00:00","UserScreenname":"xamarinhq","Text":"Add #pushnotifications to your Android apps with #Xamarin, #Firebase Cloud Messaging, and #Azure Notification Hubs: https://t.co/9uyWpi2qlp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":39,"RawContent":null},{"Id":"921881787009249280","CreatedAt":"2017-10-21T23:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":31,"RawContent":null},{"Id":"921466915117260801","CreatedAt":"2017-10-20T20:03:27+00:00","UserScreenname":"xamarinhq","Text":"Get five-star app quality every time with testing from #VSMobileCenter: https://t.co/sUR6Ctm1xk https://t.co/gGQOYtNmkC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2017-11-02T05:30:41.8672308Z","RunDurationInMilliseconds":3761}