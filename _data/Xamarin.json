{"Data":{"Blog":{"FeedItems":[{"Title":"Just Push Play: Using Google Play on an Android Emulator","PublishedOn":"2018-02-01T20:22:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The needs of an Android developer using the Android emulator continuously expand. The latest emulator development from Google provides a system image for the Google Play Store, which includes a fully...","Href":"https://blog.xamarin.com/just-push-play-using-google-play-android-emulator/","RawContent":null},{"Title":"Xamarin Developer Events in February","PublishedOn":"2018-01-31T19:26:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you haven&#8217;t started working on your new year&#8217;s resolutions yet, we have the perfect solution: get out there and start building on your mobile app development education by networking...","Href":"https://blog.xamarin.com/xamarin-developer-events-february/","RawContent":null},{"Title":"Webinar Recording | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-30T19:53:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this pre-recorded webinar, Mark Smith, Director of Xamarin University, shows you how to automate your app development pipeline with Visual Studio App Center, walking through how to connect your app...","Href":"https://blog.xamarin.com/webinar-recording-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Android Emulator Quick Boot","PublishedOn":"2018-01-29T19:41:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Emulator version 27.0.2 now includes a feature called Quick Boot, which launches the emulator in just a few seconds. For Quick Boot to work, your AVD must perform a cold boot on its first time...","Href":"https://blog.xamarin.com/android-emulator-quick-boot/","RawContent":null},{"Title":"First Look: Xamarin Android Device Manager Preview","PublishedOn":"2018-01-25T19:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the release of SDK Tools 26, Google replaced the standalone UI for the SDK and Device Manager with a command line interface. In an effort to make Android component management accessible and easy...","Href":"https://blog.xamarin.com/first-look-xamarin-android-device-manager-preview/","RawContent":null},{"Title":"Better Resource Organization in Xamarin.Forms","PublishedOn":"2018-01-23T19:28:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Resource Dictionary is a foundational building block to all Xamarin.Forms mobile development. It&#8217;s the primary vehicle for declaring XAML resources you’ll use throughout your mobile application,...","Href":"https://blog.xamarin.com/better-resource-organization-xamarin-forms/","RawContent":null},{"Title":"The What, Why, and How of Mobile DevOps with Visual Studio App Center","PublishedOn":"2018-01-22T18:52:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With constant operating system releases, ever-shifting user expectations, and new form factors launching every year, making sure your apps are high-quality, take advantage of the latest technology,...","Href":"https://blog.xamarin.com/mobile-devops-visual-studio-app-center/","RawContent":null},{"Title":"Running Xamarin.iOS Unit Tests in Visual Studio Team Services","PublishedOn":"2018-01-19T18:32:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In previous posts, we&#8217;ve discussed how to set up continuous integration for your Xamarin.iOS applications inside Visual Studio Team Services(VSTS) using the new Hosted macOS Agent. Building the...","Href":"https://blog.xamarin.com/running-xamarin-ios-unit-tests-visual-studio-team-services/","RawContent":null},{"Title":"The Xamarin Show: Getting Started with iOS Development in C#","PublishedOn":"2018-01-18T18:54:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re looking to get started with iOS development, there&#8217;s no better place to look than our amazing Xamarin.iOS documentation guides. They cover each and every topic that you can...","Href":"https://blog.xamarin.com/the-xamarin-show-getting-started-with-ios-development-in-c-sharp/","RawContent":null},{"Title":"The C# Developer’s Guide to Shipping Better Apps with Visual Studio App Center","PublishedOn":"2018-01-16T19:41:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At our annual Microsoft Connect event in November, we announced the General Availability of Visual Studio App Center, combining our best developer services, incuding Xamarin Test Cloud and HockeyApp,...","Href":"https://blog.xamarin.com/c-developers-guide-shipping-better-apps-visual-studio-app-center/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7186275371","Type":"PullRequestEvent","CreatedAt":"2018-02-01T22:32:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1265","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix Conditon on _RegisterAndroidFilesWithFileWrites\" (#1265) at xamarin/xamarin-android","RelatedBody":"Commit 20123b5 broke the build system on windows. The\r\ncondition on `_RegisterAndroidFilesWithFileWrites` was\r\nincorrect. `_IsRunningXBuild` can be empty when running\r\nunder MSbuild. As a result the condition will always\r\nresult in the target being skipped.\r\n\r\nThis commit fixes the condition to that it will run\r\ncorrectly under msbuild and is skipped on xbuild."},{"Id":"7185574893","Type":"IssuesEvent","CreatedAt":"2018-02-01T20:00:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1267","RelatedDescription":"Opened issue \"Remove cruft from .vsix installer\" (#1267) at xamarin/xamarin-android","RelatedBody":"The `.vsix` installer is full of cruft, containing files which are not necessary:\r\n\r\n* `v8.0/libZipSharp.dll.config`\r\n* `v8.0/libzip.3.0.dylib`\r\n* `v8.0/Mono.Android.Export.dll`\r\n* `v8.0/OpenTK*`\r\n* `v8.0/Mono.Android.GoogleMaps.xml`\r\n* ...\r\n\r\nMany of these files aren't needed (`.dylib` files on Windows?!). Many are obsolete and shouldn't exist at all (`Mono.Android.GoogleMaps.xml`?!). Many are \"duplicative\": `OpenTK*` is present in v2.3; there is no need for it to be in later API levels.\r\n\r\nReview and cleanup the `.vsix` contents."},{"Id":"7184749345","Type":"IssuesEvent","CreatedAt":"2018-02-01T17:13:14","Actor":"justintoth","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1257","RelatedDescription":"Closed issue \"New Xamarin Android update (8.1.5.0) won't build in release mode, no such file or directory (classes.zip) error\" (#1257) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Upgrade to latest Xamarin Android update, 8.1.5.0.\r\n2. Switch to a release build.\r\n3. Enable proguard.\r\n4. Try to build the solution.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nThe solution builds in release mode.\r\n\r\n### Actual Behavior\r\n\r\nThe solution doesn't build in release mode, it gives the following error:\r\n\r\n> java.io.IOException: Can't read [/Users/justintoth/Documents/rpr-mobile/android-application/obj/Release-Prod/android/bin/classes.zip] (No such file or directory)\r\n\r\nBuild log [here](https://gist.github.com/justintoth/1072e75924307758e7c7529ca962e642).\r\n\r\n### Version Information\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 7)\r\nInstallation UUID: 62cf1ad2-0db0-41e1-ac78-aeb509d79f60\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.5.0 (Visual Studio Community)\r\nAndroid SDK: /android/sdk\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.4 (Visual Studio Community)\r\nHash: db807ec9\r\nBranch: xcode9.2\r\nBuild date: 2018-01-10 16:45:48-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.216 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030007\r\nGit revision: 125911fb4accc4309b2cee5c81c970c7cff9b0e0\r\nBuild date: 2018-01-22 17:46:46-05\r\nXamarin addins: 463e21a6d9d4f6b57f923df376fff093a1dd9404\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n### Log File\r\n\r\nhttps://gist.github.com/justintoth/1072e75924307758e7c7529ca962e642"},{"Id":"7184587610","Type":"PullRequestEvent","CreatedAt":"2018-02-01T16:44:56","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1265","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix Conditon on _RegisterAndroidFilesWithFileWrites\" (#1265) at xamarin/xamarin-android","RelatedBody":"Commit 20123b5 broke the build system on windows. The\r\ncondition on `_RegisterAndroidFilesWithFileWrites` was\r\nincorrect. `_IsRunningXBuild` can be empty when running\r\nunder MSbuild. As a result the condition will always\r\nresult in the target being skipped.\r\n\r\nThis commit fixes the condition to that it will run\r\ncorrectly under msbuild and is skipped on xbuild."},{"Id":"7184398770","Type":"IssuesEvent","CreatedAt":"2018-02-01T16:13:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1264","RelatedDescription":"Opened issue \"Need an F# app for integration testing, deployment\" (#1264) at xamarin/xamarin-android","RelatedBody":"Should also track F# app sizes/etc. in the Jenkins Plots."},{"Id":"7183827105","Type":"PullRequestEvent","CreatedAt":"2018-02-01T14:39:25","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1263","RelatedDescription":"Opened pull request \"Bump to mono:2017-12\" (#1263) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7182544831","Type":"IssuesEvent","CreatedAt":"2018-02-01T10:09:17","Actor":"fullmetaltac","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1262","RelatedDescription":"Opened issue \"Intellisense doesn't see Resource object while build is successful. \" (#1262) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Rebuild project.\r\n2. Right click on project -> Unload project. \r\n3.  Right click on project -> Reload project.\r\n4. Navigate to class that contain Resource.Plurals or Resource.String etc.\r\n\r\n![image](https://user-images.githubusercontent.com/5435980/35672745-23b7c40e-0748-11e8-9a70-c508c90b13e4.png)\r\n\r\n### Expected Behavior\r\nResource object should be available via Intellisense.\r\n\r\n### Actual Behavior\r\nResource object is not availabe via Intellisense.\r\n\r\n### Version Information\r\n15.6.0 Preview 3.0\r\n[VS_info.txt](https://github.com/xamarin/xamarin-android/files/1685028/VS_info.txt)\r\n\r\n### Comment\r\nDuring sample porting all resources where available except Plurals. After that I decided to Rebuild -> Unload -> Reload project.\r\nI think it's related to Design Time builds. Strange that Another resources like String and Id where available. They all lying on the same level.\r\n![image](https://user-images.githubusercontent.com/5435980/35672917-a49b313c-0748-11e8-92a9-5d99ef0027ef.png)"},{"Id":"7182183121","Type":"IssuesEvent","CreatedAt":"2018-02-01T08:55:47","Actor":"Maxima078","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1261","RelatedDescription":"Opened issue \"Microsoft.CSharp conflict\" (#1261) at xamarin/xamarin-android","RelatedBody":"Hi,\r\n\r\nI'm facing Microsoft.CSharp conflict due to Newtonsoft.Json.10.0.3. I found this https://bugzilla.xamarin.com/show_bug.cgi?id=59600\r\nHere is the build log:\r\n\r\n2> There was a conflict between \"Microsoft.CSharp, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". 2> \"Microsoft.CSharp, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was chosen because it was primary and \"Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" was not. 2> References which depend on \"Microsoft.CSharp, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" [C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v1.0\\Microsoft.CSharp.dll]. 2> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v1.0\\Microsoft.CSharp.dll 2> Project file item includes which caused reference \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v1.0\\Microsoft.CSharp.dll\". 2> Microsoft.CSharp 2> References which depend on \"Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" []. 2> C:\\Users\\mml\\Development\\test_app\\packages\\Newtonsoft.Json.10.0.3\\lib\\netstandard1.3\\Newtonsoft.Json.dll 2> Project file item includes which caused reference \"C:\\Users\\mml\\Development\\test_app\\packages\\Newtonsoft.Json.10.0.3\\lib\\netstandard1.3\\Newtonsoft.Json.dll\". 2> C:\\Users\\mml\\Development\\test_app\\tes_app\\bin\\Debug\\netstandard1.6\\test_app.dll 2> Newtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\r\n\r\nIs there a way to fix this?\r\n\r\n(related Newtonsoft.Json issue)"},{"Id":"7181981761","Type":"PullRequestEvent","CreatedAt":"2018-02-01T08:05:24","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1260","RelatedDescription":"Merged pull request \"[enumification] add description on CSV head.\" (#1260) at xamarin/xamarin-android","RelatedBody":""}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7186666971","Type":"PullRequestEvent","CreatedAt":"2018-02-02T00:24:40","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1780","RelatedDescription":"Opened pull request \"[Android] TimePicker Format should work\" (#1780) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSee comments.\r\n\r\n### Bugs Fixed ###\r\n\r\n- #1461 \r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7186333603","Type":"IssuesEvent","CreatedAt":"2018-02-01T22:47:07","Actor":"czuvich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1779","RelatedDescription":"Opened issue \"[iOS] Map Memory Leak in ListView Header\" (#1779) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen using a Map custom renderer inside of a ListView header, the Map is not being released and is leaking memory.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Navigate to a Page with a Map in a ListView header. \r\n2.  Navigate back to the original page.\r\n3.  The map Dispose() is never invoked nor is OnElementChanged. The map never gets released.\r\n4. Repeat.\r\n\r\n### Expected Behavior\r\n\r\nDispose() should be invoked and the native map released.\r\n\r\n### Actual Behavior\r\n\r\nThe app eventually crashes with VectorKit being referenced in the stack trace.  I've attached a sample log that references thread 85 which is running the Map thread.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\nMaps & Forms 2.5.0.122203\r\niOS 11.2\r\n\r\n- Last known good version:\r\nNot sure\r\n\r\n- IDE:\r\nVisual Studio Mac\r\n\r\n### Crash Logs\r\n\r\n[crash dump 1.txt](https://github.com/xamarin/Xamarin.Forms/files/1687492/crash.dump.1.txt)\r\n\r\n### Reproduction Link\r\n\r\nI've put in two tests.  Notice how the behavior varies between a page with a ListViewHeader map, and a page that does not have it.  The results differ and the leak is present on the ListView.\r\n\r\n[TestiOSMapLeakListViewHeader.zip](https://github.com/xamarin/Xamarin.Forms/files/1687498/TestiOSMapLeakListViewHeader.zip)\r\n\r\n"},{"Id":"7186103070","Type":"IssuesEvent","CreatedAt":"2018-02-01T21:53:52","Actor":"praeclarum","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1777","RelatedDescription":"Opened issue \"Cannot build .NET Core app that reference Xamarin.Forms\" (#1777) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen you reference Xamarin.Forms from a .NET Core app, the build fails with:\r\n\r\n```bash\r\n/Users/fak/.nuget/packages/xamarin.forms/2.5.0.122203/build/netstandard1.0/Xamarin.Forms.targets(55,3): error MSB4062: The \"Xamarin.Forms.Build.Tasks.GetTasksAbi\" task could not be loaded from the assembly /Users/fak/.nuget/packages/xamarin.forms/2.5.0.122203/build/netstandard1.0/Xamarin.Forms.Build.Tasks.dll. Could not load file or assembly 'Microsoft.Build.Utilities.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified. [/Users/fak/Dropbox/Projects/Ooui.Try2/PlatformSamples/AspNetCoreMvc/AspNetCoreMvc.csproj]\r\n/Users/fak/.nuget/packages/xamarin.forms/2.5.0.122203/build/netstandard1.0/Xamarin.Forms.targets(55,3): error MSB4062:  Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [/Users/fak/Dropbox/Projects/Ooui.Try2/PlatformSamples/AspNetCoreMvc/AspNetCoreMvc.csproj]\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n1. Make a .NET Core app\r\n2. Reference XF 2.5\r\n3. Build\r\n\r\n### Expected Behavior\r\n\r\nBuild succeeds\r\n\r\n### Actual Behavior\r\n\r\nThe above error is returned.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- IDE: VSCode + VS for Mac\r\n"},{"Id":"7185804547","Type":"IssuesEvent","CreatedAt":"2018-02-01T20:50:02","Actor":"jvansickle-cei","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1776","RelatedDescription":"Opened issue \"Button Released not being triggered\" (#1776) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\n\r\nXamarin.Forms for macOS is not triggering Released when a button is clicked.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a custom Button\r\n2. Add as a named element in a xaml layout\r\n3. Add an event to the Released EventHandler\r\n4. Check for calling of event\r\n\r\n### Expected Behavior\r\n\r\nEvent is triggered\r\n\r\n### Actual Behavior\r\n\r\nEvent is never triggered\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio for Mac Enterprise 7.3.3 (build 12)\r\n- Platform Target Frameworks: MacOS\r\n  - macOS:  10.13 (17C76)\r\n- Android Support Library Version: N/A\r\n- Nuget Packages:\r\n- Affected Devices: MacBookPro11,5 \r\n\r\n### Screenshots\r\n\r\nNone\r\n\r\n### Reproduction Link\r\n\r\nNone\r\n"},{"Id":"7185726893","Type":"IssuesEvent","CreatedAt":"2018-02-01T20:33:29","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1775","RelatedDescription":"Opened issue \"[Enhancement] SuggestionView\" (#1775) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale \r\n\r\nForms currently lacks a control which allows selection of items from a bound, templated list with the option of entering text to filter down that list. (IOW, the equivalent of a classic WPF ComboBox or the UWP AutoSuggestBox.\r\n\r\n## Implementation\r\n\r\nBindable Properties:\r\n- Title\r\n- PlaceHolder\r\n- ItemTemplate\r\n- ItemsSource\r\n- SelectedItem\r\n\r\nEvents:\r\n- SelectedItemChanged\r\n- TextChanged\r\n\r\nThe control should normally appear as a text entry field; focusing it should display the templated items for selection in a scrollable view. As text is entered into the field, the TextChanged event will fire; developers can handle this event to apply filtering of the ItemsSource. \r\n\r\nSelecting an item should fire SelectedItemChanged, set the SelectedItem property, and hide the templated items. The text displayed in the text entry field when an item is selected will be the string returned by the SelectedItem's ToString() method.\r\n\r\nThe Title property should function like the title in the Picker control; PlaceHolder should function the same as it does on Entry.\r\n\r\nThis control is not intended to handle very large ItemsSources or support virtualization. Such scenarios should consider using a SearchBar in combination with a ListView. \r\n\r\nOn UWP, this should be accomplishable using the [AutoSuggestBox ](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.autosuggestbox). \r\n\r\nOn Android, this will likely be implemented with a SearchView.\r\n\r\nOn iOS, this will likely be implemented with a UISearchBar and UISearchController.\r\n\r\n## Difficulty: Moderate to Very\r\n\r\nOn UWP, this should be a cakewalk; this control already exists. Making this work on Android and iOS will take more work and may require combining multiple native controls. "},{"Id":"7185522781","Type":"IssuesEvent","CreatedAt":"2018-02-01T19:49:53","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1737","RelatedDescription":"Closed issue \"can't reference gtk platform\" (#1737) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\ncan't reference gtk platform\r\nI think revert #1629 could fix the issue.\r\n### Steps to Reproduce\r\n\r\n1. install the nuget via PackageReference  (not packages.config)\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nXamarin.Forms.Platform.GTK is be referenced\r\n\r\n### Actual Behavior\r\nXamarin.Forms.Platform.GTK isn't be referenced\r\n\r\n### Basic Information\r\n\r\n- Version with issue:2.6.0.132747-nightly\r\n- Last known good version:2.6.0.99477-nightly\r\n- IDE:VS 2017 15.5.5\r\n- Platform Target Frameworks: v4.7.1\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n![devenv_2018-01-30_09-21-32](https://user-images.githubusercontent.com/13848771/35543257-10c3fc28-059f-11e8-8813-3b108d2b6e95.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[Reproduction Link](https://github.com/yinyue200/gtkforms)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7186288763","Type":"PullRequestEvent","CreatedAt":"2018-02-01T22:36:07","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3380","RelatedDescription":"Merged pull request \"Bump mono to pick up fix for gh#3241\" (#3380) at xamarin/xamarin-macios","RelatedBody":"    Commit list for mono/mono:\r\n    \r\n    * mono/mono@38502063cac Revert \"[mini] Align stack when resuming to catch handler\" (#6744)\r\n    \r\n    Diff: https://github.com/mono/mono/compare/3c3e692887af323549aca938dd6d3dca7a9a6cc8...38502063cac0b9c258af2c59dce9cd2d0a12b4d1\r\n"},{"Id":"7186124196","Type":"IssuesEvent","CreatedAt":"2018-02-01T21:58:13","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3377","RelatedDescription":"Closed issue \"[XI] UI freezes while invoking `ARKit.ARSCNView.Session`\" (#3377) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download a ([project](https://github.com/mykyta-bondarenko-gl/private-samples/tree/audio-in-arkit/ios11/ARKitAudio))\r\n2. Open:\r\n - `ARKitAudio/ViewController.cs` file and look at the line 184;\r\n - `ARKitAudio/Extensions/ARSCNViewExtensions.cs` file and look at the lines 71-72;\r\n3. Uncomment any of these lines (any of these ways show working with `Session` property).\r\n4. Run the project\r\n\r\n### Expected Behavior\r\nUI should be smooth.\r\n\r\n### Actual Behavior\r\nYou can observe UI freezes.\r\n\r\n### Environment\r\n\r\n- Visual Studio for Mac 7.4 Preview (build 884)  \r\nhttps://gist.github.com/mykyta-bondarenko-gl/b57c438f57032bd55ad6ef31415b08ce\r\n\r\n### Frequency of Reproduction\r\n\r\nHappens every time\r\n\r\n### Example Project\r\n\r\n[Link to the project](https://github.com/mykyta-bondarenko-gl/private-samples/tree/audio-in-arkit/ios11/ARKitAudio)"},{"Id":"7185445994","Type":"PullRequestEvent","CreatedAt":"2018-02-01T19:34:05","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3380","RelatedDescription":"Opened pull request \"Bump mono to pick up fix for gh#3241\" (#3380) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7185099118","Type":"IssuesEvent","CreatedAt":"2018-02-01T18:23:23","Actor":"MichaelShapiro","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3379","RelatedDescription":"Opened issue \"Storyboard with more than 26 ViewControllers - Disappearing constraint lines\" (#3379) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\nIn Xamarin iOS project if storyboard has more than 26 View Controllers the constraint lines become invisible (disappear) on each ViewController.\r\n\r\n1. Create iOS project with storyboard\r\n2. Open storyboard, remove all view controllers (if any exist)\r\n3. Place a new ViewController\r\n4. Place a Button and a Label on the ViewController\r\n5. Switch to Constraints mode and create some constraints. Click on Label or Button and observe the fact that existing blue constraint lines are VISIBLE\r\n\r\n6. Add 25 more ViewController. Now you have 26 total.\r\n7. Return to the first ViewController, Click on Label or Button and observe the fact that existing blue constraint lines are STILL VISIBLE.\r\n\r\n8. Add one more ViewController. Now you have 27 total.\r\n9. Return to the first ViewController, Click on Label or Button and observe the fact that:\r\n\r\n### Expected Behavior\r\nexisting blue constraint lines are STILL VISIBLE\r\n\r\n### Actual Behavior\r\nconstraint lines are NO LONGER VISIBLE. \r\n\r\n### Environment\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.5.5\r\nVisualStudio.15.Release/15.5.5+27130.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.02046\r\n\r\nInstalled Version: Professional\r\n\r\nVisual Basic 2017   00369-60000-00001-AA935\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA935\r\nMicrosoft Visual C# 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA935\r\nMicrosoft Visual F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31127.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27130.2020\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.8.0.760 (fc93f3f5b)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.5.0 (HEAD/75f8c6838)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.4 (db807ec)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Build Logs\r\n\r\nNONE\r\n\r\n### Example Project (If Possible)\r\n\r\n[App1.zip](https://github.com/xamarin/xamarin-macios/files/1686692/App1.zip)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7185022692","Type":"PullRequestEvent","CreatedAt":"2018-02-01T18:07:24","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3375","RelatedDescription":"Merged pull request \"[tests] Fix compiler warning.\" (#3375) at xamarin/xamarin-macios","RelatedBody":"This file is included in several projects, some projects use property, some\ndon't (and report the warning). There's no harm in not setting this property\n(it's expected), ignore the warning."},{"Id":"7184674464","Type":"PullRequestEvent","CreatedAt":"2018-02-01T16:59:41","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3376","RelatedDescription":"Merged pull request \"[tests] Enable LLVM for all Release|Device configurations.\" (#3376) at xamarin/xamarin-macios","RelatedBody":"This won't affect device tests on the bots (because those already set LLVM\nmanually when testing Release), but it becomes less confusing when trying to\nreproduce any problems locally, since now the project configuration on disk\nmatches the tested configuration."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"959164072196526085","CreatedAt":"2018-02-01T20:38:29+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/kmW8uIDW80","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"959109618067738624","CreatedAt":"2018-02-01T17:02:06+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/xYx6fUVhML","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"958788443647152136","CreatedAt":"2018-01-31T19:45:53+00:00","UserScreenname":"xamarinhq","Text":"Help ensure a productive 2018 with #Xamarin developer events near you this February: https://t.co/9aPslPGW2O https://t.co/zRGM0lEoZe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":7,"RawContent":null},{"Id":"958747709963415552","CreatedAt":"2018-01-31T17:04:01+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/xLDqS3Z9sI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":17,"RawContent":null},{"Id":"958386328797884416","CreatedAt":"2018-01-30T17:08:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/JOLj1szAol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":14,"RawContent":null},{"Id":"958065243565051904","CreatedAt":"2018-01-29T19:52:08+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/75XbYDGg8m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":217,"FavoriteCount":116,"RawContent":null},{"Id":"958020024941334528","CreatedAt":"2018-01-29T16:52:27+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d https://t.co/QvuhUZfhAd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":27,"RawContent":null},{"Id":"957782606992543745","CreatedAt":"2018-01-29T01:09:02+00:00","UserScreenname":"xamarinhq","Text":"Making iOS 11 even easier with #XamarinForms: https://t.co/nIDGNXGuF1 https://t.co/6qXhuCMSDp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":17,"RawContent":null},{"Id":"957415179091873792","CreatedAt":"2018-01-28T00:49:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to publish to #Azure from #VS4Mac: https://t.co/wnNmElsQrM https://t.co/DdxYLvB9ap","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":15,"RawContent":null},{"Id":"956935518746546177","CreatedAt":"2018-01-26T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Add large titles to your iOS 11 apps in this post from @conceptdev: https://t.co/RDyk6GDVUU https://t.co/WlylY4fcZS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":5,"RawContent":null},{"Id":"956616920408772610","CreatedAt":"2018-01-25T19:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get your first look at the #Xamarin Android Device Manager Preview: https://t.co/4cTyPaFfMb https://t.co/uKkOHzbp3U","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":35,"RawContent":null},{"Id":"956570118569496576","CreatedAt":"2018-01-25T16:51:03+00:00","UserScreenname":"xamarinhq","Text":"Our @XamarinU webinar on automating the lifecycle of your iOS, Android, Windows, and macOS apps with #VSAppCenter i… https://t.co/XuCIwVEtIh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":12,"RawContent":null},{"Id":"956210745984856064","CreatedAt":"2018-01-24T17:03:02+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our @XamarinU webinar tomorrow (1/25) on automating the lifecycle of your iOS, Android, Windows, and mac… https://t.co/eKFBikD0kM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":12,"RawContent":null},{"Id":"955887729816035328","CreatedAt":"2018-01-23T19:39:28+00:00","UserScreenname":"xamarinhq","Text":"Learn how to merge multiple resource dictionaries in the most recent stable release of #XamarinForms for even great… https://t.co/lYtHCJ9q5V","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":80,"FavoriteCount":33,"RawContent":null},{"Id":"955846589817479170","CreatedAt":"2018-01-23T16:56:00+00:00","UserScreenname":"xamarinhq","Text":"Native Android Facebook Authentication with Azure App Service https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":11,"RawContent":null},{"Id":"955516166373560322","CreatedAt":"2018-01-22T19:03:01+00:00","UserScreenname":"xamarinhq","Text":"Check out the what, why, and how of Mobile #DevOps with #VSAppCenter in this special guest series from @gshackles:… https://t.co/fClbh5B47i","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":27,"RawContent":null},{"Id":"955191774359838721","CreatedAt":"2018-01-21T21:34:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with ActivityTask, a helper for async/await on Android: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"954895828895916032","CreatedAt":"2018-01-21T01:58:01+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @lobrien  shows you how to add augmented reality to your #Xamarin apps with #ARKit in #iOS11:… https://t.co/pxoHpfwz5J","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":24,"RawContent":null},{"Id":"954424071562956802","CreatedAt":"2018-01-19T18:43:25+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/ipWfWuyPoB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":25,"RawContent":null}]}},"RunOn":"2018-02-02T05:30:38.347797Z","RunDurationInMilliseconds":4458}