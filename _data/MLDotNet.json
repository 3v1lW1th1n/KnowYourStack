{"Data":{"GitHub":{"Issues":[{"Id":"408583803","IsPullRequest":true,"CreatedAt":"2019-02-10T21:45:29","Actor":"jwood803","Number":"2493","RawContent":null,"Title":"Add Light GBM sample","State":"open","Body":"Add Light GBM sample as part of #1209.","Url":"https://github.com/dotnet/machinelearning/pull/2493","RelatedDescription":"Open PR \"Add Light GBM sample\" (#2493)"},{"Id":"408581650","IsPullRequest":false,"CreatedAt":"2019-02-10T21:25:15","Actor":"sob3kx","Number":"2492","RawContent":null,"Title":"Is custom preprocessing available?","State":"open","Body":"Hi,\r\n\r\nI am working on productivization of Keras's VGG16 model in C#. The VGG16's weights are adapted from Caffe and demands turning image into BGR and substracting mean of channels over dataset from the channels of pixel. If my explaination is not understandable, you can see the code [here](https://github.com/keras-team/keras-applications/blob/master/keras_applications/imagenet_utils.py) in the first else branch of _preprocess_numpy_input. \r\n\r\nIs there an option to do such thing in ML.NET? If not, is there an option to skip the graph definition of preprocessing steps and defining own preprocessing? If not, are there any plans for such feature?\r\n\r\nThanks","Url":"https://github.com/dotnet/machinelearning/issues/2492","RelatedDescription":"Open issue \"Is custom preprocessing available?\" (#2492)"},{"Id":"408562362","IsPullRequest":true,"CreatedAt":"2019-02-10T18:16:31","Actor":"sfilipi","Number":"2491","RawContent":null,"Title":"Towards 2326: Microsoft.ML.Ensemble and Microsoft.ML.TimeSeries namespace rationalization","State":"open","Body":"Organizing the Microsoft.ML.Ensemble and Microsoft.ML.TimeSeries as described in #2326 ","Url":"https://github.com/dotnet/machinelearning/pull/2491","RelatedDescription":"Open PR \"Towards 2326: Microsoft.ML.Ensemble and Microsoft.ML.TimeSeries namespace rationalization\" (#2491)"},{"Id":"408550929","IsPullRequest":false,"CreatedAt":"2019-02-10T16:17:25","Actor":"RobinSmits","Number":"2490","RawContent":null,"Title":"How to use Options.TreeBooster.Arguments","State":"open","Body":"I currently have an ML.Net project based on version 0.10.0. As a starter into ML.Net  I'am trying to remake one of my python ML projects into ML.Net.\r\n\r\nI'am running on Windows 10 with .NET Core 3.0.100-preview-010184.\r\n\r\nI have a pipeline setup (and working) in the following way:\r\n\r\n`var pipeline = mlContext.Transforms.Concatenate(\"Features\", \"Feat1\", \"Feat2\", \"Feat3\")\r\n                                                .Append(mlContext.BinaryClassification.Trainers.LightGbm(numLeaves: 200,\r\n                                                                                                        numBoostRound: 1000,\r\n                                                                                                        minDataPerLeaf: 200,\r\n                                                                                                        learningRate: 0.05,\r\n                                                                                                        labelColumn: \"Label\"));`\r\n\r\nI would like to further specify the LightGBM parameters as are available in Options.TreeBooster.Arguments (specifically FeatureFraction and MaxDepth) but I can't figure out how it should be added or appended to the pipeline. Also I have not been able to find any samples or documentation.\r\n\r\nIs it possible to give me some information or clarification about this?","Url":"https://github.com/dotnet/machinelearning/issues/2490","RelatedDescription":"Open issue \"How to use Options.TreeBooster.Arguments\" (#2490)"},{"Id":"408527140","IsPullRequest":false,"CreatedAt":"2019-02-10T11:48:46","Actor":"jwood803","Number":"2489","RawContent":null,"Title":"Exception on ReadFromEnumerable with NULL values data","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n- **.NET Version (eg., dotnet --info)**: \r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009812\r\n\r\n### Issue\r\n- **What did you do?**\r\nLoaded the [wine data](https://www.kaggle.com/rajyellow46/wine-quality) into a database and read data to use in `ReadFromEnumerable`\r\n\r\n- **What happened?**\r\nGot the below exception when loading the data into `ReadFromEnumerable`. I believe this is because there are null values within the data.\r\n\t```\r\n\tSystem.ArgumentOutOfRangeException: 'Could not determine an IDataView type for member \r\n\tParameter name: rawType'\r\n\t```\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\nHave this ML.NET code:\r\n```\r\nvar dbData = ReadFromDatabase();\r\n\r\nvar context = new MLContext();\r\n\r\nvar mlData = context.Data.ReadFromEnumerable(dbData);\r\n```\r\n\r\nAnd a preview of `dbData` where I think it's failing at:\r\n```\r\n[\r\n  {\r\n    \"Type\": \"white\",\r\n    \"FixedAcidity\": null,\r\n    \"VolatileAcidity\": 1.0,\r\n    \"CitricAcid\": 0.0,\r\n    \"ResidualSugar\": 1.0,\r\n    \"Chlorides\": 0.0,\r\n    \"FreeSulfurDioxide\": 29.0,\r\n    \"TotalSulfureDioxide\": 75.0,\r\n    \"Density\": 1.0,\r\n    \"Ph\": 3.0,\r\n    \"Sulphates\": 0.0,\r\n    \"Alcohol\": 13.0,\r\n    \"Quality\": 8.0\r\n  }\r\n]\r\n```\r\n\r\nAlso, is this the correct way to handle missing data when reading from a database instead of from a CSV file? Or should I be handling it another way?","Url":"https://github.com/dotnet/machinelearning/issues/2489","RelatedDescription":"Open issue \"Exception on ReadFromEnumerable with NULL values data\" (#2489)"},{"Id":"408519971","IsPullRequest":false,"CreatedAt":"2019-02-10T10:08:19","Actor":"Ikaer","Number":"2488","RawContent":null,"Title":"ProductRecommander sample - System.AccessViolationException","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10\r\n- **.NET Version (eg., dotnet --info)**: .Net Core 2.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** I tried the sample Product recommander with my own sample of product IDs. I first try it with the provided data (Amazon0302) and it works fine. Then I try a different file (which is attached).\r\n- **What happened?** An exception is throw at ITransformer model = est.Fit(traindata); System.AccessViolationException: 'Attempted to read or write protected memory. This is often an indication that other memory is corrupt.'\r\n- **What did you expect?** To not have this kind of exception at least (this is scary) and to be able to use a different sample than the one provided.\r\nI have the same error if, for example, I truncate the file Amazon0302 to only keep the first 10 lines.\r\n\r\n\r\n### Source code / logs\r\n[test_sample.txt](https://github.com/dotnet/machinelearning/files/2848725/test_sample.txt)\r\nI just downloaded the ProductRecommander sample and replace the variable TrainingDataLocation with my own file. I reproduced the problem on two machines (one with Win10, another one with Windows Server 2016, both with .net core 2.1)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2488","RelatedDescription":"Open issue \"ProductRecommander sample - System.AccessViolationException\" (#2488)"},{"Id":"407972232","IsPullRequest":true,"CreatedAt":"2019-02-10T03:57:06","Actor":"zeahmed","Number":"2475","RawContent":null,"Title":"TensorFlow: Fixed shape issue where unknown shape will be induced from data.","State":"closed","Body":"This PR fixes #2458.\r\n\r\nThe problem addressed in this PR are\r\n1. Input is used to determine the shape. If there is one unknown dimension, it is computed from the input data. If there are several unknown dimension, the value computed from the input is equally distributed among unknown dimension.\r\n2. There is no batch dimension assumption on input now.\r\n3. Output shape are computed as previously done. However, if there are more than one unknown dimensions in the shape, a variable length vector is returned then.\r\n4. Created test to check for different type of shapes can be pass in and out of TF.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2475","RelatedDescription":"Closed or merged PR \"TensorFlow: Fixed shape issue where unknown shape will be induced from data.\" (#2475)"},{"Id":"408485549","IsPullRequest":false,"CreatedAt":"2019-02-10T00:19:01","Actor":"rogancarr","Number":"2487","RawContent":null,"Title":"Cross-Validation API for v1.0","State":"open","Body":"Hi All,\r\n\r\nAs we approach v1.0, I thought it might be nice to look at the API for cross-validation. Currently, our cross-validation API takes the inputs:\r\n\r\n```cs\r\nIDataView data; // training data\r\nIEstimator<ITransformer> estimator; // Model to fit\r\nint numFolds; //Number of folds to make\r\nstring labelColumn; // The label\r\nstring stratificationColumn; // The column to stratify on\r\nseed; // The seed\r\n```\r\n\r\nand returns an array of\r\n```cs\r\nRegressionMetrics metrics;\r\nITransformer model;\r\nIDataView scoredTestData;\r\n```\r\nwith one entry for each fold.\r\n\r\nI have a few questions:\r\n\r\n1) Are we happy with the outputs?\r\nI'm not overly concerned with these, but it will be hard to make this list smaller as we go.\r\n2) Do we need to specify `labelColumn`?\r\nIsn't there a way to get the label from the model? Making this explicit means that we are allowing the learner and the CV metrics to utilize different labels.\r\n3) Are we using the right terminology for `stratification`?\r\nStratification usually means that ratios of classes are maintained across splits (see [stratified sampling](https://en.wikipedia.org/wiki/Stratified_sampling) on wikipedia). Here, `stratification` means that items with the same value are clumped into the same split. The former makes sense if you want to maintain class ratios, especially with highly imbalanced classes, while the latter is useful for things like ranking (e.g. `groupIds`) or where leakage due to something like ordering may be a concern.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2487","RelatedDescription":"Open issue \"Cross-Validation API for v1.0\" (#2487)"},{"Id":"408418151","IsPullRequest":false,"CreatedAt":"2019-02-09T10:16:39","Actor":"DevLob-zz","Number":"2486","RawContent":null,"Title":"StochasticDualCoordinateAscent not work For Multiclass after migrate to 0.10.0","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: W10\r\n- **.NET Version (eg., dotnet --info)**:  4.6.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** Migrated my code from 0.9.0 to 0.10.0\r\n- **What happened?** StochasticDualCoordinateAscent Algorithm was working fine  for multi class and binary trainer  before move to 0.10 after updating its working only for binary and freeze on \r\ntrainingPipeline.Fit(trainingDataView); for Multiclass take a while \r\n- **What did you expect?**\r\nit should work fine \r\n### Source code / logs\r\n`var mlContext = new MLContext(seed: 1);\r\n\r\n#region \"STEP 1: Common data loading configuration\"\r\n\r\n    IDataView trainingDataView = GetNormalDataSet(mlContext, allFeatures, mLFeatures);\r\n\r\n    if (trainingDataView.GetRowCount() == 0)\r\n    {\r\n\r\n        return;\r\n    }\r\n\r\n    textFeatures = GetTextFeatures(normalFeatures);\r\n\r\n    numericFeatures = GetNumericFeatures(normalFeatures).ToArray();\r\n\r\n#endregion\r\n\r\n#region \"STEP 2: Common data process configuration with pipeline data transformations\"\r\n\r\n// STEP 2: Common data process configuration with pipeline data transformations\r\n\r\nvar textFeaturesProcessPipeline = mlContext.Transforms.Text.FeaturizeText(DefaultColumnNames.Features, textFeatures);\r\n\r\nvar numericFeaturesProcessPipeline = mlContext.Transforms.Concatenate(DefaultColumnNames.Features, numericFeatures);\r\n\r\nvar dataProcessPipeline = numericFeaturesProcessPipeline.Append(textFeaturesProcessPipeline).AppendCacheCheckpoint(mlContext);\r\n\r\n#endregion\r\n\r\n#region  \"STEP 3: Set the training algorithm, then create and configure the modelBuilder\"  \r\n\r\nITransformer trainedModel = null;\r\n\r\n//\"StochasticDualCoordinateAscent\"\r\n\r\nvar trainingPipeline = mlContext.Transforms.Conversion.MapValueToKey(DefaultColumnNames.Label)\r\n   .Append(dataProcessPipeline)\r\n   .Append(mlContext.MulticlassClassification.Trainers.StochasticDualCoordinateAscent(labelColumn: DefaultColumnNames.Label, featureColumn: DefaultColumnNames.Features))\r\n   .Append(mlContext.Transforms.Conversion.MapKeyToValue(DefaultColumnNames.PredictedLabel));\r\n\r\n#region STEP 4: Train the model fitting to the DataSet\r\n\r\n    //Take a while and no responce when call fit method\r\n\r\n    trainedModel = trainingPipeline.Fit(trainingDataView);\r\n\r\n#endregion`\r\n\r\n you can see some screen for values and when change from \r\n\"StochasticDualCoordinateAscent\" to \"Naive Bayes\" Working fine\r\n\r\nwhat wrong on my code \r\n![image](https://user-images.githubusercontent.com/5037612/52519439-04c6cd00-2c64-11e9-9e11-64808c1d22cd.png)\r\n![image](https://user-images.githubusercontent.com/5037612/52519443-0b554480-2c64-11e9-9116-8d17f4ff02e1.png)\r\n![image](https://user-images.githubusercontent.com/5037612/52519455-2e7ff400-2c64-11e9-8e8c-bd0684ad988f.png)\r\n\r\nalso those my Data Structure Classes \r\n`[Serializable]\r\n    public class NormalTagsModelFeatures\r\n    {\r\n        //[Column(ordinal: \"0\", name: \"Label\")] public string Label;\r\n        [LoadColumn(0)]\r\n        public string Label;\r\n        [LoadColumn(1)]\r\n        public float fontSize;\r\n        [LoadColumn(2)]\r\n        public float isBold;\r\n        [LoadColumn(3)]\r\n        public float isItalic;\r\n        [LoadColumn(4)]\r\n        public float isUnderLine;\r\n        [LoadColumn(5)]\r\n        public float containsDot;\r\n        [LoadColumn(6)]\r\n        public float containsQuestionMark;\r\n        [LoadColumn(7)]\r\n        public string fontColor;\r\n        [LoadColumn(8)]\r\n        public float isAllCaps;\r\n        [LoadColumn(9)]\r\n        public string tagText;\r\n        [LoadColumn(10)]\r\n        public string firstWord;\r\n        [LoadColumn(11)]\r\n        public string FontName;\r\n        [LoadColumn(12)]\r\n        public float verticalText;\r\n        [LoadColumn(13)]\r\n        public float trdLeft;\r\n        [LoadColumn(14)]\r\n        public float trdRight;\r\n        [LoadColumn(15)]\r\n        public float trdTop;\r\n        [LoadColumn(16)]\r\n        public float trdBottom;\r\n        [LoadColumn(17)]\r\n        public float pageNo;\r\n\r\n    }\r\n\r\n    public class NormalTagsPrediction\r\n    {\r\n        [ColumnName(\"PredictedLabel\")]\r\n        public string PredictedLabel;\r\n\r\n        [ColumnName(\"Score\")]\r\n        public float[] Score { get; set; }\r\n\r\n    }`\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2486","RelatedDescription":"Open issue \"StochasticDualCoordinateAscent not work For Multiclass after migrate to 0.10.0\" (#2486)"},{"Id":"408414358","IsPullRequest":false,"CreatedAt":"2019-02-09T09:18:02","Actor":"sdg002","Number":"2485","RawContent":null,"Title":"CookBook sample - Could not find input column 'CategoricalOneHot'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  4.6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI am trying to follow the sample code from the GitHub article\r\nhttps://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md#how-do-i-train-my-model-on-categorical-data\r\nand get an understanding of how to get one-hot encoding to work\r\n- **What happened?**\r\nRun time error message - Could not find input column 'CategoricalOneHot'\r\nParameter name: inputSchema'\r\n\r\n- **What did you expect?**\r\nI expected the code to run without errors and then I should be able to examine how the data has been transformed\r\n\r\n### Source code / logs\r\n            // Build several alternative featurization pipelines.\r\n            var pipeline =\r\n                // Convert each categorical feature into one-hot encoding independently.\r\n                mlContext.Transforms.Categorical.OneHotEncoding(\"CategoricalFeatures\", \"CategoricalOneHot\")\r\n                // Convert all categorical features into indices, and build a 'word bag' of these.\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"CategoricalFeatures\", \"CategoricalBag\", Microsoft.ML.Transforms.Categorical.OneHotEncodingTransformer.OutputKind.Bag))\r\n                // One-hot encode the workclass column, then drop all the categories that have fewer than 10 instances in the train set.\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"Workclass\", \"WorkclassOneHot\"))\r\n                .Append(mlContext.Transforms.FeatureSelection.SelectFeaturesBasedOnCount(\"WorkclassOneHot\", \"WorkclassOneHotTrimmed\", count: 10));\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n![image](https://user-images.githubusercontent.com/20245330/52518944-8c541200-2c4b-11e9-8b9c-0f0f12fb3b20.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2485","RelatedDescription":"Open issue \"CookBook sample - Could not find input column 'CategoricalOneHot'\" (#2485)"},{"Id":"407937064","IsPullRequest":true,"CreatedAt":"2019-02-09T06:44:27","Actor":"rogancarr","Number":"2470","RawContent":null,"Title":"Add a project for functional tests without visibility into internals of ML.NET","State":"closed","Body":"This PR adds a new project, `Microsoft.ML.Functional.Tests` for adding end-to-end scenario tests for ML.NET. This project does not have visibility into the main library, and is not strongly named, so may not be added.\r\n\r\nTwo tests were also moved from `Microsoft.ML.Tests` into this project:\r\n- `CrossValidation`: Migrated with additional tests\r\n- `ReconfigurablePrediction`: Migrated but marked as `Skip` because Issue #2465 prevents us from completing the scenario.\r\n\r\nFixes #2306 ","Url":"https://github.com/dotnet/machinelearning/pull/2470","RelatedDescription":"Closed or merged PR \"Add a project for functional tests without visibility into internals of ML.NET\" (#2470)"},{"Id":"408170085","IsPullRequest":true,"CreatedAt":"2019-02-09T00:06:56","Actor":"mareklinka","Number":"2481","RawContent":null,"Title":"Remove dead code in src/Microsoft.ML.FastTree/Application","State":"closed","Body":"As proposed in #2468, this PR removes the unused code under `src/Microsoft.ML.FastTree/Application`. No other changes were made.","Url":"https://github.com/dotnet/machinelearning/pull/2481","RelatedDescription":"Closed or merged PR \"Remove dead code in src/Microsoft.ML.FastTree/Application\" (#2481)"},{"Id":"408363212","IsPullRequest":false,"CreatedAt":"2019-02-08T23:28:52","Actor":"nsulikowski","Number":"2484","RawContent":null,"Title":"How about a Preview for Metadata?","State":"open","Body":"something like this?\r\n`DataDebuggerPreview Preview(this Metadata metadata, int maxRows = 100)`","Url":"https://github.com/dotnet/machinelearning/issues/2484","RelatedDescription":"Open issue \"How about a Preview for Metadata?\" (#2484)"},{"Id":"408350055","IsPullRequest":true,"CreatedAt":"2019-02-08T22:33:26","Actor":"shmoradims","Number":"2483","RawContent":null,"Title":"Documentation for BinaryClassification.AveragedPerceptron","State":"open","Body":"Docs & sample for BinaryClassification.AveragedPerceptron. Related to #1209.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2483","RelatedDescription":"Open PR \"Documentation for BinaryClassification.AveragedPerceptron\" (#2483)"},{"Id":"407987467","IsPullRequest":false,"CreatedAt":"2019-02-08T19:35:05","Actor":"daholste","Number":"2477","RawContent":null,"Title":"Sample Breaks When Change Learner from FastTree to AveragedPerceptron","State":"closed","Body":"@srsaggam and I were looking at the sentiment analysis sample:\r\n\r\nhttps://github.com/dotnet/machinelearning-samples/blob/a79ced6c6bb788c2189d81e5993863e15cf8be0c/samples/csharp/getting-started/BinaryClassification_SentimentAnalysis/SentimentAnalysis/SentimentAnalysisConsoleApp/Program.cs#L59\r\n\r\nWhen you change the learner from 'FastTree' to 'AveragedPerceptron', the sample throws the exception:\r\n```\r\nSystem.ArgumentOutOfRangeException: 'Probability column 'Probability' not found'\r\n```\r\nThis is probably because AveragedPerceptron is not calibrated, but FastTree is. Any thoughts on how to handle this scenario? We've successfully made use of PlattCalibratorEstimator, but I don't think this is supported b/c (1) it's not exposed / hanging off of MLContext, and (2) it takes an IPredictor","Url":"https://github.com/dotnet/machinelearning/issues/2477","RelatedDescription":"Closed issue \"Sample Breaks When Change Learner from FastTree to AveragedPerceptron\" (#2477)"},{"Id":"408272304","IsPullRequest":false,"CreatedAt":"2019-02-08T18:32:19","Actor":"wschin","Number":"2482","RawContent":null,"Title":"TreeEnsembleFeaturizer is not a Transformer yet","State":"open","Body":"[TreeEnsembleFeaturizer](\r\nhttps://github.com/dotnet/machinelearning/blob/6b1a0d337f74274509cfd439974dca2305a6bfbb/src/Microsoft.ML.FastTree/TreeEnsembleFeaturizer.cs#L44) is a very useful tool in many applications. Do we have a plan to make it publicly available?\r\n\r\ncc @shauheen, @Ivanidzo4ka, @TomFinley, @yaeldekel.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2482","RelatedDescription":"Open issue \"TreeEnsembleFeaturizer is not a Transformer yet\" (#2482)"},{"Id":"408165013","IsPullRequest":false,"CreatedAt":"2019-02-08T14:02:06","Actor":"mareklinka","Number":"2480","RawContent":null,"Title":"Microsoft.ML.InternalCodeAnalyzer should use Microsoft.CodeAnalysis.Testing for harness setup","State":"open","Body":"As discussed in [in this PR](https://github.com/dotnet/machinelearning/pull/2434#discussion_r254508809), the tests for the internal code analyzer should make use of the facilities provided in `Microsoft.CodeAnalysis.Testing`.\r\n\r\nThat would make the test project more best-practice compliant and easier to maintain.","Url":"https://github.com/dotnet/machinelearning/issues/2480","RelatedDescription":"Open issue \"Microsoft.ML.InternalCodeAnalyzer should use Microsoft.CodeAnalysis.Testing for harness setup\" (#2480)"},{"Id":"408161063","IsPullRequest":false,"CreatedAt":"2019-02-08T13:51:44","Actor":"sdg002","Number":"2479","RawContent":null,"Title":"How to normalize 2 columns simultaneously?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  .NET 4.6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI have loaded sample data from a text file and I am trying to normalize and print the normalized data\r\n- **What happened?**\r\nThe max normalized value was 1.0 which is expected. The min normalized value should have been 0 or -1 but it was another positive number < 1 and > 0\r\n- **What did you expect?**\r\n\r\n- The minimum of the normalized values should be between 0 and 1, or -1 and +1.  **Solved using fixZero=false**\r\n- I am confused whether I have taken the right programmatic approach\r\n\r\n### Source code / logs\r\n        [TestMethod]\r\n        public void Normalize_MultipleColumn()\r\n        {\r\n            string pathFull = System.IO.Path.Combine(Util.GetProjectDir2(), _datafile);\r\n            var mlContext = new Microsoft.ML.MLContext();\r\n            Microsoft.Data.DataView.IDataView dataView = LoadDummy2(mlContext, pathFull);\r\n            Trace.WriteLine(\"Before normalization\");\r\n            EnumerOverData(mlContext, dataView);\r\n            var schema = dataView.Schema;\r\n\r\n            var pipeline_Ht_And_Wt = mlContext.Transforms.Normalize(\r\n                new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.MinMaxColumn(\"Height\"),\r\n                new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.MinMaxColumn(\"Weight\")\r\n                );\r\n\r\n            var normalizedData = pipeline_Ht_And_Wt.Fit(dataView).Transform(dataView);\r\n            Trace.WriteLine(\"After normalization\");\r\n            EnumerOverData(mlContext, normalizedData);\r\n        }\r\n        private IDataView LoadDummy2(MLContext mlContext, string pathFull)\r\n        {\r\n            var argsLoader = new Microsoft.ML.Data.TextLoader.Arguments();\r\n            argsLoader.HasHeader = true;\r\n            argsLoader.Separators = new char[] { '|' };\r\n            argsLoader.Column = new Microsoft.ML.Data.TextLoader.Column[]\r\n            {\r\n                new Microsoft.ML.Data.TextLoader.Column(\"Id\", Microsoft.ML.Data.DataKind.I4,0),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"Height\", Microsoft.ML.Data.DataKind.R8,1),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"Weight\", Microsoft.ML.Data.DataKind.R8,2),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"IsOverWeight\", Microsoft.ML.Data.DataKind.Bool,3)\r\n            };\r\n\r\n            var loader = mlContext.Data.CreateTextLoader(argsLoader);\r\n            Microsoft.Data.DataView.IDataView dataView = loader.Read(pathFull);\r\n            return dataView;\r\n        }\r\n        private void EnumerOverData(MLContext mlContext, IDataView dataView)\r\n        {\r\n            var someRows = mlContext.CreateEnumerable<entity.Dummy2>(dataView, false);\r\n            foreach (var oRow in someRows)\r\n            {\r\n                System.Diagnostics.Trace.WriteLine($\"id={oRow.Id}    wt={oRow.Weight}   ht={oRow.Height}  isOverWt={oRow.IsOverWeight}\");\r\n            }\r\n        }\r\n      \r\n### Before normalization\r\n    id|wt|ht|overwt\r\n    01|30.0|4.0|False\r\n    02|35.0|4.5|False\r\n    03|40.0|5.0|False\r\n    10|33.0|4.0|True\r\n    11|38.0|4.5|True\r\n    12|43.0|5.0|True\r\n\r\n### After normalization (fixZero=true)\r\n    id=1    wt=0.8   ht=0.697674418604651  \r\n    id=2    wt=0.9   ht=0.813953488372093  \r\n    id=3    wt=1   ht=0.930232558139535  \r\n    id=10    wt=0.8   ht=0.767441860465116  \r\n    id=11    wt=0.9   ht=0.883720930232558  \r\n    id=12    wt=1   ht=1  \r\n\r\n### After normalization (fixZero=false)\r\n    id=1    wt=0   ht=0  \r\n    id=2    wt=0.5   ht=0.384615384615385  \r\n    id=3    wt=1   ht=0.769230769230769  \r\n    id=10    wt=0   ht=0.230769230769231 \r\n    id=11    wt=0.5   ht=0.615384615384615  \r\n    id=12    wt=1   ht=1 \r\n\r\n\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2479","RelatedDescription":"Open issue \"How to normalize 2 columns simultaneously?\" (#2479)"},{"Id":"408095652","IsPullRequest":false,"CreatedAt":"2019-02-08T10:41:54","Actor":"nsulikowski","Number":"2478","RawContent":null,"Title":"Pipeline visualization please","State":"open","Body":"Can you add a way to generate a DOT graph of a pipeline, like [https://docs.microsoft.com/en-us/NimbusML/tutorials/c_a-visualize-a-pipeline](NimbusML) ?\r\n\r\nI tried to build it myself, but all the transformer's properties are being internalized.\r\nThanks\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2478","RelatedDescription":"Open issue \"Pipeline visualization please\" (#2478)"},{"Id":"407909145","IsPullRequest":false,"CreatedAt":"2019-02-08T08:58:46","Actor":"sdg002","Number":"2466","RawContent":null,"Title":"Displaying the records that have been loaded using TextLoader","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  .NET 4.5\r\n\r\n### Issue\r\nI was trying to get a better understanding of loading records from a flat file. All I wanted to do was to access the records that have been loaded sequentially and display  them.\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\nThe code in the **while block** below is my attempt. **This worked well**. However, I am wondering if this is the right way to iterate over a cursor?  Is there anything simpler to get the individual column values? Feels a bit onerous.\r\n\r\n### Source code / logs\r\n        [TestMethod]\r\n        public void TestMethod1()\r\n        {\r\n            string datafile = @\"Data\\Dummy2.csv\";\r\n            string pathFull = System.IO.Path.Combine(Util.GetProjectDir2(), datafile);\r\n            var argsLoader = new Microsoft.ML.Data.TextLoader.Arguments();\r\n            try\r\n            {\r\n                argsLoader.HasHeader = true;\r\n                argsLoader.Separators = new char[] { '|' };\r\n                argsLoader.Column = new Microsoft.ML.Data.TextLoader.Column[]\r\n                {\r\n                    new Microsoft.ML.Data.TextLoader.Column(\"id\", Microsoft.ML.Data.DataKind.I4,0),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"ht\", Microsoft.ML.Data.DataKind.R4,1),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"wt\", Microsoft.ML.Data.DataKind.R4,2),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"overwt\", Microsoft.ML.Data.DataKind.Bool,3)\r\n                };\r\n                var mlContext = new Microsoft.ML.MLContext();\r\n                var loader = mlContext.Data.CreateTextLoader(argsLoader);\r\n                Microsoft.Data.DataView.IDataView dataView = loader.Read(pathFull);\r\n                var schema = dataView.Schema;\r\n                Microsoft.Data.DataView.RowCursor cur = dataView.GetRowCursor(schema);\r\n                while (cur.MoveNext())\r\n                {\r\n                    System.Diagnostics.Trace.WriteLine($\"got a row, position={cur.Position}\");\r\n                    ///\r\n                    /// Column 0\r\n                    ///\r\n                    Microsoft.Data.DataView.ValueGetter<int> getter = cur.GetGetter<int>(0);\r\n                    int id = 0;\r\n                    getter.Invoke(ref id);\r\n                    ///\r\n                    /// Column 1\r\n                    ///\r\n                    Microsoft.Data.DataView.ValueGetter<float> getterWt = cur.GetGetter<float>(1);\r\n                    float wt = 0;\r\n                    getterWt.Invoke(ref wt);\r\n                    ///\r\n                    /// Column 3\r\n                    ///\r\n                    Microsoft.Data.DataView.ValueGetter<bool> getterIsOverWt = cur.GetGetter<bool>(3);\r\n                    bool isOverWt = false;\r\n                    getterIsOverWt.Invoke(ref isOverWt);\r\n\r\n                    System.Diagnostics.Trace.WriteLine($\"id={id}    wt={wt}    isOverWt={isOverWt}\");\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                System.Diagnostics.Trace.WriteLine(ex.ToString());\r\n            }\r\n        }\r\n/*\r\nid|wt|ht|overwt\r\n01|30.0|4.0|False\r\n02|35.0|4.5|False\r\n03|40.0|5.0|False\r\n10|33.0|4.0|True\r\n11|38.0|4.5|True\r\n12|43.0|5.0|True\r\n\r\n*/\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2466","RelatedDescription":"Closed issue \"Displaying the records that have been loaded using TextLoader\" (#2466)"},{"Id":"407987298","IsPullRequest":true,"CreatedAt":"2019-02-08T02:56:10","Actor":"zeahmed","Number":"2476","RawContent":null,"Title":"Lockdown of Microsoft.ML.LightGBM public surface.","State":"open","Body":"This PR fixes #2271.\r\n\r\nThe changes included in this PR are as follows.\r\n1. Changed unnecessary `public` items to `internal`.\r\n2. Created samples in the samples project.\r\n3. Referenced the samples as an example in public API exposed through MLContext.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2476","RelatedDescription":"Open PR \"Lockdown of Microsoft.ML.LightGBM public surface.\" (#2476)"},{"Id":"407967700","IsPullRequest":false,"CreatedAt":"2019-02-08T01:12:43","Actor":"danmosemsft","Number":"2474","RawContent":null,"Title":"Get tests passing on Mono and add Mono to CI","State":"open","Body":"@Anipik and others have been scouting Mono. \r\n\r\nAs soon as our tests pass on Mono, we should add it to CI to protect it.\r\n\r\nNote - the Mono build will need (at least) the fix for https://github.com/mono/mono/issues/12690\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2474","RelatedDescription":"Open issue \"Get tests passing on Mono and add Mono to CI\" (#2474)"},{"Id":"407967569","IsPullRequest":false,"CreatedAt":"2019-02-08T01:11:59","Actor":"Ivanidzo4ka","Number":"2473","RawContent":null,"Title":"GetColumn method is extension for IDataView but not mlContext.","State":"open","Body":"https://github.com/dotnet/machinelearning/issues/1708 moved CreateEnumerable from extension on top of DataView to become extension on mlContext object.\r\n\r\nWe still have GetColumn extension https://github.com/dotnet/machinelearning/blob/7fc7e50ce6f8fed24fc0b9528839a0ac8d0ed320/src/Microsoft.ML.Data/Utilities/ColumnCursor.cs#L25\r\nwhich works on top of DataView. Shall we move it to mlContext?\r\n\r\n`var enumerable = mlContext.CreateEnumerable<SamplesUtils.DatasetUtils.SampleTemperatureData>(filteredData, reuseRowObject: true);`\r\n`var originalColumnBack = transformedData_default.GetColumn<VBuffer<ReadOnlyMemory<char>>>(mlContext, defaultColumnName);`\r\n\r\nThey look silly together.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2473","RelatedDescription":"Open issue \"GetColumn method is extension for IDataView but not mlContext.\" (#2473)"},{"Id":"407950240","IsPullRequest":false,"CreatedAt":"2019-02-07T23:54:49","Actor":"srsaggam","Number":"2472","RawContent":null,"Title":"Any reason for inconsistency in params for TextLoader?","State":"open","Body":"1) This Method :\r\nhttps://github.com/dotnet/machinelearning/blob/834e4715afa070f5e5c3628693682943b3f0bd6d/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderSaverCatalog.cs#L55\r\n\r\n2) and this one : \r\nhttps://github.com/dotnet/machinelearning/blob/834e4715afa070f5e5c3628693682943b3f0bd6d/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderSaverCatalog.cs#L22\r\n\r\nLooks like the first one has params like : \r\n```\r\nchar separatorChar = '\\t', bool allowQuotedStrings = true, bool supportSparse = true, bool trimWhitespace = false\r\n```\r\n\r\nWhere as the second one doesn't have those. In order to use those params there is another method overload : \r\n```\r\nCreateTextLoader(this DataOperationsCatalog catalog, TextLoader.Arguments args, IMultiStreamSource dataSample = null);\r\n```\r\n\r\nThis takes Arguments class and particularly one param is interesting in this Arguments:\r\n```\r\nchar [] Separators\r\n```\r\n Any reason this is char[] and not char like in other overloads? and why inconsistency in params for the methods 1) and 2).\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2472","RelatedDescription":"Open issue \"Any reason for inconsistency in params for TextLoader?\" (#2472)"},{"Id":"407947315","IsPullRequest":false,"CreatedAt":"2019-02-07T23:42:15","Actor":"abgoswam","Number":"2471","RawContent":null,"Title":"Missing support for Anomaly Detection metrics.","State":"open","Body":"ML.NET supports several evaluation metrics but is missing support for Anomaly Detection metrics.\r\n\r\nExample of supported metrics:\r\n- [BinaryClassificationMetrics](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/Evaluators/Metrics/BinaryClassificationMetrics.cs)\r\n- [RegressionMetrics](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/Evaluators/Metrics/RegressionMetrics.cs)\r\n\r\nIs anomaly detection a scenario we want to support for V 1.0 ?  If yes, we should probably add support for anomaly detection metrics\r\n\r\n@Ivanidzo4ka @sfilipi @shauheen @glebuk @artidoro \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2471","RelatedDescription":"Open issue \"Missing support for Anomaly Detection metrics.\" (#2471)"},{"Id":"407935001","IsPullRequest":false,"CreatedAt":"2019-02-07T22:56:56","Actor":"wschin","Number":"2469","RawContent":null,"Title":"Model produced by SdcaBinaryTrainer is not and can not be strongly-typed","State":"open","Body":"The [`CreatePredictor`](https://github.com/dotnet/machinelearning/blob/6ec3280fe62b34ab07e183cd5d9e5d2767dd0dcc/src/Microsoft.ML.StandardLearners/Standard/SdcaBinary.cs#L1550) function,\r\n```csharp\r\n        using TScalarPredictor = IPredictorWithFeatureWeights<float>;\r\n        ...\r\n        protected override TScalarPredictor CreatePredictor(VBuffer<float>[] weights, float[] bias)\r\n        {\r\n            ...\r\n            var predictor = new LinearBinaryModelParameters(Host, in maybeSparseWeights, bias[0]);\r\n            if (Info.NeedCalibration)\r\n                return predictor;\r\n            return new ParameterMixingCalibratedPredictor(Host, predictor, new PlattCalibrator(Host, -1, 0));\r\n        }\r\n```\r\n in `SdcaBinaryTrainer` can produce two different types depending on the specified loss function. To generate model in a type-safe manner, we need two trainers for the two possible model types. cc @TomFinley for visibility.","Url":"https://github.com/dotnet/machinelearning/issues/2469","RelatedDescription":"Open issue \"Model produced by SdcaBinaryTrainer is not and can not be strongly-typed\" (#2469)"},{"Id":"407929070","IsPullRequest":false,"CreatedAt":"2019-02-07T22:37:11","Actor":"sfilipi","Number":"2468","RawContent":null,"Title":"Remove the dead code inside the FastTree assembly","State":"open","Body":"The code inside src/Microsoft.ML.FastTree/Application is not in use. \r\n\r\nDelete the Folder. ","Url":"https://github.com/dotnet/machinelearning/issues/2468","RelatedDescription":"Open issue \"Remove the dead code inside the FastTree assembly\" (#2468)"},{"Id":"407926515","IsPullRequest":false,"CreatedAt":"2019-02-07T22:29:17","Actor":"wschin","Number":"2467","RawContent":null,"Title":"OvaModelParameters is not strongly-typed","State":"open","Body":" In the constructor of 'OvaModelParameters`,\r\n```csharp\r\n        using TScalarPredictor = IPredictorProducing<float>;\r\n        ...\r\n        internal static OvaModelParameters Create(IHost host,  OutputFormula outputFormula, TScalarPredictor[] predictors)\r\n        {\r\n        ...\r\n        }\r\n```\r\nwe remove the type information of predictors by forcing them to be `IPredictorProducing<float>`. To make all multi-class classifiers' outputting strongly-typed models. We need to make `OvaModelParameters` strongly-typed.","Url":"https://github.com/dotnet/machinelearning/issues/2467","RelatedDescription":"Open issue \"OvaModelParameters is not strongly-typed\" (#2467)"},{"Id":"407873363","IsPullRequest":false,"CreatedAt":"2019-02-07T20:00:47","Actor":"rogancarr","Number":"2465","RawContent":null,"Title":"Cannot set the threshold on a binary predictor","State":"open","Body":"It is no longer possible to set a custom `Threshold` and `ThresholdColumn` on a binary classifier.\r\n\r\nPreviously, we had been using `BinaryPredictionTransformer`. Recently, `BinaryPredictionTransformer` was marked as `internal` and is no longer available for usage outside of the library.\r\n\r\nRelated to question #403","Url":"https://github.com/dotnet/machinelearning/issues/2465","RelatedDescription":"Open issue \"Cannot set the threshold on a binary predictor\" (#2465)"},{"Id":"407856732","IsPullRequest":false,"CreatedAt":"2019-02-07T19:50:04","Actor":"rogancarr","Number":"2464","RawContent":null,"Title":"BinaryPredictionTransformer has a public constructor","State":"closed","Body":"`BinaryPredictionTransformer` has a `public` constructor of the form:\r\n```cs\r\nBinaryPredictionTransformer(IHostEnvironment env, ModelLoadContext ctx)\r\n```\r\n\r\nSince the usable constructor\r\n```cs\r\nBinaryPredictionTransformer(IHostEnvironment env, TModel model, Schema inputSchema, string featureColumn, float threshold = 0f, string thresholdColumn = DefaultColumnNames.Score)\r\n```\r\nis marked `internal`, it seems like the one taking a `ModelLoadContext` should be too.","Url":"https://github.com/dotnet/machinelearning/issues/2464","RelatedDescription":"Closed issue \"BinaryPredictionTransformer has a public constructor\" (#2464)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-11T05:30:49.3413922Z","RunDurationInMilliseconds":1041}