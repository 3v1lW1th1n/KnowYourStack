{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access Build 3707","PublishedOn":"2018-12-15T02:11:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have another early access build to share today! This release includes several accessibility, performance, reliability and stability fixes across the major framework libraries. We will continue to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/14/announcing-net-framework-4-8-early-access-build-3707/","RawContent":null},{"Title":"Visual Studio 2019 Preview .NET Productivity","PublishedOn":"2018-12-14T00:13:41+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"As you hopefully heard, the first preview of Visual Studio 2019 is now available. In this post I’ll cover some of the productivity improvements for .NET developers we’re most excited about. For a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/13/visual-studio-2019-net-productivity/","RawContent":null},{"Title":".NET Framework December 2018 Security and Quality Rollup","PublishedOn":"2018-12-11T18:23:48+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the December 2018 Security and Quality Rollup. Security CVE-2018-8540 – Windows Remote Code Execution Vulnerability This security update resolves a vulnerability in Microsoft...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/11/net-framework-december-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Open Sourcing XAML Behaviors for WPF","PublishedOn":"2018-12-10T19:27:32+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are excited to announce that we are open sourcing XAML Behaviors for WPF. In the past, we open sourced XAML Behaviors for UWP which has been a great success and the Behaviors NuGet package...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/10/open-sourcing-xaml-behaviors-for-wpf/","RawContent":null},{"Title":"Take C# 8.0 for a spin","PublishedOn":"2018-12-05T23:51:33+00:00","CommentsCount":79,"FacebookCount":0,"Summary":"Take C# 8.0 for a spin Yesterday we announced the first preview of both Visual Studio 2019 (Making every developer more productive with Visual Studio 2019) and .NET Core 3.0 (Announcing .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/take-c-8-0-for-a-spin/","RawContent":null},{"Title":".NET Framework December 5, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2018-12-05T22:00:42+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the December 5, 2018 Preview of .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/net-framework-december-4-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 1 and Open Sourcing Windows Desktop Frameworks","PublishedOn":"2018-12-04T16:41:34+00:00","CommentsCount":80,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 1. It is the first public release of .NET Core 3. We have some exciting new features to share and would love your feedback. You can develop .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/","RawContent":null},{"Title":"Announcing .NET Core 2.2","PublishedOn":"2018-12-04T16:36:50+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"We’re excited to announce the release of .NET Core 2.2. It includes diagnostic improvements to the runtime, support for ARM32 for Windows and Azure Active Directory for SQL Client. The biggest...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-2-2/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2","PublishedOn":"2018-12-04T16:30:21+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today we&#8217;re making the final version of EF Core 2.2 available, alongside ASP.NET Core 2.2 and .NET Core 2.2. This is the latest release of our open-source and cross-platform object-database...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-entity-framework-core-2-2/","RawContent":null},{"Title":"Announcing ML.NET 0.8 – Machine Learning for .NET","PublishedOn":"2018-12-04T16:00:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform framework (Windows, Linux, macOS) which makes machine learning accessible for .NET developers. ML.NET allows you to create and use machine learning models...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-ml-net-0-8-machine-learning-for-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8760892630","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:57:54","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Opened issue \"No logo provided for Prism\" (#126) at dotnet/foundation","RelatedBody":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157"},{"Id":"8760886115","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Opened issue \"Missing logo for MVVM Light Toolkit\" (#125) at dotnet/foundation","RelatedBody":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139"},{"Id":"8760884091","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Opened issue \"Missing logo for Umbraco\" (#124) at dotnet/foundation","RelatedBody":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151"},{"Id":"8760881728","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Opened issue \"Missing logo for Steeltoe\" (#123) at dotnet/foundation","RelatedBody":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130"},{"Id":"8760867764","Type":"PullRequestEvent","CreatedAt":"2018-12-16T11:40:46","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Opened pull request \"targets the existing document\" (#122) at dotnet/foundation","RelatedBody":""},{"Id":"8650911785","Type":"PullRequestEvent","CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Opened pull request \"Add Newtonsoft.Json\" (#121) at dotnet/foundation","RelatedBody":"// @jongalloway "},{"Id":"8645831625","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:50","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Merged pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645829054","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:23","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Merged pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8645355358","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:59:20","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Opened pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645349176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:57:50","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Opened pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8752496804","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:22:59","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8752467326","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:12:36","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Opened issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"},{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8769681763","Type":"PullRequestEvent","CreatedAt":"2018-12-18T05:28:34","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21505","RelatedDescription":"Merged pull request \"Generate ARM CFIs in prolog\" (#21505) at dotnet/coreclr","RelatedBody":"Since ARM CFI codes are generated in epilog, they are absent for methods/funclets without an epilog, so these methods can't be unwound in CoreRT ( https://github.com/dotnet/corert/issues/6626 ). It's better to generate CFIs in prolog.\r\nCC @jkotas @alpencolt "},{"Id":"8769557937","Type":"PullRequestEvent","CreatedAt":"2018-12-18T04:44:25","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21565","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#21565) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @StanislavUshakov"},{"Id":"8769129116","Type":"PullRequestEvent","CreatedAt":"2018-12-18T02:23:21","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20953","RelatedDescription":"Merged pull request \"Do not use CorHost2::m_fStarted to gate execution\" (#20953) at dotnet/coreclr","RelatedBody":"This change is related to #20913. It does not create a singleton as #20913 suggested.  Instead it does not require all instances to call Start() & Stop().\r\n\r\nThe singleton approach had some issues which caused me to hesitate.\r\n\r\n* How do multiple threads use a single object in a thread safe manner? (can be made to work, but requires some thought)\r\n* Is it OK to allow any user to shut down the EE?  Current code limited this ability to the object which started the EE\r\n\r\nIf we prefer a singleton approach, I can certainly implement it.  We could get similar protections to what we already have by using thread specific state.\r\n\r\n"},{"Id":"8768951751","Type":"PullRequestEvent","CreatedAt":"2018-12-18T01:28:18","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21574","RelatedDescription":"Merged pull request \"Add dotnet info to PMI asm diffs output\" (#21574) at dotnet/coreclr","RelatedBody":"This might help diagnose issues."},{"Id":"8768941683","Type":"PullRequestEvent","CreatedAt":"2018-12-18T01:25:16","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21572","RelatedDescription":"Merged pull request \"Disable System.Runtime.Tests for Linux arm64 corefx tests\" (#21572) at dotnet/coreclr","RelatedBody":"Failure with System.Tests.ExceptionTests.ThrowStatementDoesNotResetExceptionStackLineOtherMethod\r\nin JitStress=2.\r\n\r\nTracking: #21223"},{"Id":"8768932795","Type":"PullRequestEvent","CreatedAt":"2018-12-18T01:22:37","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21532","RelatedDescription":"Merged pull request \"Fix Python 3 issues\" (#21532) at dotnet/coreclr","RelatedBody":"Fixes #21433"},{"Id":"8768932785","Type":"IssuesEvent","CreatedAt":"2018-12-18T01:22:36","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21433","RelatedDescription":"Closed issue \"[arm64/windows] SyntaxError in arm64_cross_checked_windows_nt_corefx_baseline_bld\" (#21433) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_corefx_baseline_bld/22/\r\n**Failed log:**\r\n```\r\nD:\\j\\workspace\\arm64_cross_c---efb15e6d>python -u D:\\j\\workspace\\arm64_cross_c---efb15e6d\\tests\\scripts\\run-corefx-tests.py -arch arm64 -ci_arch arm64 -build_type Checked -fx_root D:\\j\\workspace\\arm64_cross_c---efb15e6d\\_\\fx -fx_branch master -env_script D:\\j\\workspace\\arm64_cross_c---efb15e6d\\SetStressModes.bat -no_run_tests \r\n  File \"D:\\j\\workspace\\arm64_cross_c---efb15e6d\\tests\\scripts\\run-corefx-tests.py\", line 53\r\n    os.chmod(name, 0651)\r\n                      ^\r\nSyntaxError: invalid token\r\n```"},{"Id":"8768828496","Type":"PullRequestEvent","CreatedAt":"2018-12-18T00:50:55","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21569","RelatedDescription":"Merged pull request \"Add tests for marshalling a System.Drawing.Color.\" (#21569) at dotnet/coreclr","RelatedBody":"Add tests for marshalling a `System.Drawing.Color` object to an `OLE_COLOR` value in COM marshalling scenarios."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8769669656","Type":"IssuesEvent","CreatedAt":"2018-12-18T05:24:25","Actor":"flcdrg","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10487","RelatedDescription":"Opened issue \"dotnet-install.ps1 always modifies PATH\" (#10487) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nRun dotnet-install.ps1 more than once\r\n\r\n## Expected  behavior\r\n\r\nOnly one instance of \"C:\\Users\\David\\AppData\\Local\\Microsoft\\dotnet\" exists in PATH\r\n\r\n## Actual behavior\r\n\r\nPATH contains multiple references to the same directory\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8768973001","Type":"IssuesEvent","CreatedAt":"2018-12-18T01:34:42","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10486","RelatedDescription":"Opened issue \"Block --interactive and --verbose:quiet\" (#10486) at dotnet/cli","RelatedBody":"only warning and error will show. So the output of `--interactive` will not be printed. Need to consider where to implement this, MSBuild or CLI"},{"Id":"8768663783","Type":"PullRequestEvent","CreatedAt":"2018-12-18T00:01:08","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10485","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#10485) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8768215353","Type":"IssuesEvent","CreatedAt":"2018-12-17T22:14:08","Actor":"allanrodriguez","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10484","RelatedDescription":"Opened issue \"NETSDK1007 error when building solution with ProjectReference tags in specific order\" (#10484) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Build the [attached solution](https://github.com/dotnet/cli/files/2688002/NetSdk1007.zip). It should build successfully.\r\n2. In the NetSdk1007/NetSdk1007.csproj file, switch the position of the two ProjectReference tags such that they look like this:\r\n```\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\Dependency.Mocks\\Dependency.Mocks.csproj\" />\r\n  <ProjectReference Include=\"..\\LibraryUnderTest\\LibraryUnderTest.csproj\" />\r\n</ItemGroup>\r\n```\r\n3. Rebuild the solution using `dotnet build --no-incremental`.\r\n\r\n## Expected  behavior\r\nThe solution should build successfully for the .NET Core 2.1 and .NET Framework 4.7.1 platforms as in step 1.\r\n\r\n## Actual behavior\r\nBuilding the solution fails with the error `NETSDK1007: Cannot find project info for 'C:\\Projects\\NetSdk1007\\Dependency\\Dependency.csproj'. This can indicate a missing project reference.` The .NET Core build fails but the .NET Framework build succeeds.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:`\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```"},{"Id":"8766480552","Type":"PullRequestEvent","CreatedAt":"2018-12-17T16:55:37","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10483","RelatedDescription":"Merged pull request \"Update dependency files\" (#10483) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18616.3\r\n\r\n"},{"Id":"8766479123","Type":"PullRequestEvent","CreatedAt":"2018-12-17T16:55:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10482","RelatedDescription":"Merged pull request \"Update dependency files\" (#10482) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8767790142","Type":"PullRequestEvent","CreatedAt":"2018-12-17T20:52:31","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1027","RelatedDescription":"Opened pull request \"Build Standard entirely against Arcade, without Buildtools [WIP]\" (#1027) at dotnet/standard","RelatedBody":"This cuts out buildtools entirely from the Standard repo, so that we fully rely on the Arcade SDK to build against instead. This is still a WIP, as I still need to replace the functionality of `ValidateApiCompatForSrc` from Buildtools: https://github.com/dotnet/buildtools/blob/6844ee12987d5bc1a031dbaf2fe7cbc7fdfaa35d/src/Microsoft.DotNet.Build.Tasks/PackageFiles/ApiCompat.targets#L26. However, it currently builds successfully (at least on Windows), so I figured I'd put up a PR for feedback.\r\n\r\n@ericstj @safern @danmosemsft @ViktorHofer  PTAL"},{"Id":"8767250717","Type":"PullRequestEvent","CreatedAt":"2018-12-17T19:11:23","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1014","RelatedDescription":"Merged pull request \"Add IAsyncDisposable\" (#1014) at dotnet/standard","RelatedBody":"This adds API support for the new C# 8 feature to call dispose asynchronously:\r\n\r\n```C#\r\nawait using(var stream = File.OpenWrite(path))\r\n{\r\n    await data.WriteAsync(stream);\r\n}\r\n```\r\n\r\nFor more details, see:\r\n\r\nhttps://github.com/dotnet/csharplang/blob/master/proposals/async-streams.md"},{"Id":"8765725455","Type":"PullRequestEvent","CreatedAt":"2018-12-17T15:07:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1026","RelatedDescription":"Merged pull request \"Update dependency files\" (#1026) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18616.5\r\n\r\n"},{"Id":"8764930669","Type":"PullRequestEvent","CreatedAt":"2018-12-17T13:01:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1026","RelatedDescription":"Opened pull request \"Update dependency files\" (#1026) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18616.5\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8769371499","Type":"PullRequestEvent","CreatedAt":"2018-12-18T03:39:25","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34137","RelatedDescription":"Merged pull request \"Disable TimeZoneInfo_DisplayNameStartsWithOffset on Win 7\" (#34137) at dotnet/corefx","RelatedBody":"Fixes #34106 \r\n\r\nI do not see this test doing anything which could be improved. Win7 likely contains some invalid data in the registry since we don't do much in TZI code except for reading from registry"},{"Id":"8769371488","Type":"IssuesEvent","CreatedAt":"2018-12-18T03:39:25","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/34106","RelatedDescription":"Closed issue \"[CI Failure] TimeZoneInfo_DisplayNameStartsWithOffset\" (#34106) at dotnet/corefx","RelatedBody":"TimeZoneInfo_DisplayNameStartsWithOffset\r\n\r\nWindows.7.Amd64.Open-x64-Debug\r\n\r\n```\r\nUnhandled Exception of Type Xunit.Sdk.TrueException\r\nMessage :\r\n01:00 != 00:00:00, dn:(UTC+01:00) Casablanca, sn:(UTC+01:00) Casablanca\r\nExpected: True\r\nActual:   False\r\nStack Trace :\r\n   at System.Tests.TimeZoneInfoTests.TimeZoneInfo_DisplayNameStartsWithOffset() in D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime\\tests\\System\\TimeZoneInfoTests.cs:line 2227\r\n```\r\nhttps://mc.dot.net/#/user/benaadams/pr~2Fjenkins~2Fdotnet~2Fcorefx~2Fmaster~2F/test~2Ffunctional~2Fcli~2F/75205984fff23de8f87095739ebac2e3b791e01e/workItem/System.Runtime.Tests/analysis/xunit/System.Tests.TimeZoneInfoTests~2FTimeZoneInfo_DisplayNameStartsWithOffset"},{"Id":"8769160813","Type":"PullRequestEvent","CreatedAt":"2018-12-18T02:33:17","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34138","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview-27218-01, preview-27217-02, respectively (master)\" (#34138) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"8768929437","Type":"PullRequestEvent","CreatedAt":"2018-12-18T01:21:33","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/34107","RelatedDescription":"Closed pull request \"Add span-based TextEncoder APIs and remove use of unsafe code in implementations by using Span.\" (#34107) at dotnet/corefx","RelatedBody":"- Added span-based APIs to `TextEncoder` (this has not gone through API review yet which is why I have marked as no merge since it may not be the right approach).\r\n  - **Motivation:** If I am to use the default `JavaScriptEncoder` encode API to escape strings within the `Utf8JsonWriter`, I will need the `ReadOnlySpan<char>` equivalents as well (probably along with `ReadOnlySpan<byte>` for UTF-8 in the future **IF** we plan to add them here rather than try a different approach all together). What are the initial thoughts on adding public APIs to TextEncoder? Are we allowed to or is the type effectively frozen? That is the primary reason for this PR/change.\r\n  - If we are fine with adding such overloads, should we obsolete the unsafe ones (for netstandard1.1+)?\r\n- Replace use of unsafe and pointers with spans (for internal/private at least).\r\n- Fixed formatting and coding style since I was touching the code anyway.\r\n- I couldn't find a ref file here to update. Do we need one?\r\n\r\nThis change only works for netstandard (and won't work on netstandard1.0), so we will likely need to ifdef the code/API surface for that configuration if we were to accept this change.\r\n\r\n**Please let me know if its fine going down this path so I can file an API proposal issue.**"},{"Id":"8768863055","Type":"PullRequestEvent","CreatedAt":"2018-12-18T01:01:21","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34137","RelatedDescription":"Opened pull request \"Disable TimeZoneInfo_DisplayNameStartsWithOffset on Win 7\" (#34137) at dotnet/corefx","RelatedBody":"Fixes #34106 \r\n\r\nI do not see this test doing anything which could be improved. Win7 likely contains some invalid data in the registry since we don't do much in TZI code except for reading from registry"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8769291288","Type":"PullRequestEvent","CreatedAt":"2018-12-18T03:13:32","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31806","RelatedDescription":"Merged pull request \"Add support for restore and safeonly for #nullable directive.\" (#31806) at dotnet/roslyn","RelatedBody":"Related to #31130."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8769682822","Type":"PullRequestEvent","CreatedAt":"2018-12-18T05:28:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6678","RelatedDescription":"Merged pull request \"Generate ARM CFIs in the correct order\" (#6678) at dotnet/corert","RelatedBody":"This is a CoreRT counterpart to https://github.com/dotnet/coreclr/pull/21505 . Since CFI codes are now generated in prolog, they are already in reverse order, so we don't need to reverse them in CoreRT.\r\nFixes #6626 \r\nCC @jkotas @alpencolt "},{"Id":"8769682819","Type":"IssuesEvent","CreatedAt":"2018-12-18T05:28:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6626","RelatedDescription":"Closed issue \"[Tizen/armel] Empty unwind info for funclets\" (#6626) at dotnet/corert","RelatedBody":"Unwind section for funclets looks empty. This is an example of unwind info for a function and its funclet: \r\n```\r\n0x519d0c <S_P_CoreLib_System_Lazy_1<System___Canon>__ViaFactory>: @0xa1af4\r\n  Compact model index: 1\r\n  0x0b      vsp = vsp + 48\r\n  0xa0      pop {r4}\r\n  0x80 0x40 pop {r10}\r\n  0x80 0x80 pop {r11}\r\n  0x88 0x00 pop {r15}\r\n  0xb0      finish\r\n  0xb0      finish\r\n\r\n0x519d9a <S_P_CoreLib_System_Lazy_1<System___Canon>__ViaFactory+0x8e>: @0xa1b04\r\n  Compact model index: 1\r\n  0xb0      finish\r\n  0xb0      finish\r\n```\r\nBecause of this, we can't iterate through a funclet during a stack walk - libunwind can't see a way to restore `PC` register from stack, so it sets it to the value in `LR`, which is incorrect\r\nhttps://github.com/dotnet/corert/blob/7196145825cdd13627b1fa6e86b18af0a79aa130/src/Native/libunwind/src/Unwind-EHABI.cpp#L411-L415\r\n and soon after `StackFrameIterator` fails with an assertion here:\r\nhttps://github.com/dotnet/corert/blob/7196145825cdd13627b1fa6e86b18af0a79aa130/src/Native/Runtime/StackFrameIterator.cpp#L1487\r\nDebug session is attached.\r\n[debug.log](https://github.com/dotnet/corert/files/2633187/debug.log)\r\nCC @alpencolt @iarischenko "},{"Id":"8769561335","Type":"PullRequestEvent","CreatedAt":"2018-12-18T04:45:34","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6690","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#6690) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @StanislavUshakov"},{"Id":"8768763046","Type":"PullRequestEvent","CreatedAt":"2018-12-18T00:30:21","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6691","RelatedDescription":"Merged pull request \"Fix for static enum field placement\" (#6691) at dotnet/corert","RelatedBody":"I found out that my static field placement changes were incorrect\r\nfor enums. This change fixes the deficiency and, in doing so,\r\nit fixes one of the remaining CoreCLR Top200 bug buckets.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8768392196","Type":"PullRequestEvent","CreatedAt":"2018-12-17T22:51:42","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6691","RelatedDescription":"Opened pull request \"Fix for static enum field placement\" (#6691) at dotnet/corert","RelatedBody":"I found out that my static field placement changes were incorrect\r\nfor enums. This change fixes the deficiency and, in doing so,\r\nit fixes one of the remaining CoreCLR Top200 bug buckets.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8766621087","Type":"PullRequestEvent","CreatedAt":"2018-12-17T17:17:50","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6690","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#6690) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"8762981580","Type":"PullRequestEvent","CreatedAt":"2018-12-17T06:23:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6611","RelatedDescription":"Merged pull request \"[Interpreter] Locals and operators\" (#6611) at dotnet/corert","RelatedBody":"The PR extends the interpreter to support locals and some operator opcodes:\r\n\r\n### Locals\r\n\r\n* stloc.*\r\n* ldloc.*\r\n\r\n### Unary operators\r\n\r\n* not\r\n* neg\r\n* pop\r\n* dup\r\n\r\n### Comparison operators\r\n\r\n* ceq\r\n* cgt.*\r\n* clt.*\r\n\r\n### Conversion operators\r\n\r\n* conv.*\r\n* conv.ovf.*\r\n\r\n### Bitwise Shift operators\r\n\r\n* shl\r\n* shr*\r\n\r\nThe CoreCLR interpreter (https://github.com/dotnet/coreclr/blob/master/src/vm/interpreter.cpp) was used as a development reference. However, I'm still not very confident about my implementation of the conversion and bitwise shift operators especially around things relating to type casting and general code structure.\r\n\r\ncc @jkotas @MichalStrehovsky @morganbr \r\n"},{"Id":"8762148745","Type":"PullRequestEvent","CreatedAt":"2018-12-17T00:37:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6686","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#6686) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @mattwarren"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8769344130","Type":"PullRequestEvent","CreatedAt":"2018-12-18T03:30:26","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2757","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#2757) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8768664729","Type":"PullRequestEvent","CreatedAt":"2018-12-18T00:01:22","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2757","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#2757) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8768112879","Type":"PullRequestEvent","CreatedAt":"2018-12-17T21:54:40","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2756","RelatedDescription":"Merged pull request \"No apphost in PackAsTool\" (#2756) at dotnet/sdk","RelatedBody":"fix #https://github.com/dotnet/sdk/issues/2749"},{"Id":"8767820994","Type":"PullRequestEvent","CreatedAt":"2018-12-17T20:58:38","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2756","RelatedDescription":"Opened pull request \"No apphost in PackAsTool\" (#2756) at dotnet/sdk","RelatedBody":"fix #https://github.com/dotnet/sdk/issues/2749"},{"Id":"8766315011","Type":"IssuesEvent","CreatedAt":"2018-12-17T16:31:07","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2754","RelatedDescription":"Closed issue \"For .Net Core 3.0, create a winforms app, dotnet run without the windows box poping up.\" (#2754) at dotnet/sdk","RelatedBody":"### Description:\r\nCreate a winforms app. Build and run. \r\ndotnet new winforms -o MyWinFormsApp \r\ncd MyWinFormsApp \r\ndotnet build \r\ndotnet run\r\n\r\n**Expected**: It should appear a windows box like this\r\n![image](https://user-images.githubusercontent.com/33921754/50080741-c4c90800-0227-11e9-8163-39413bd95ebe.png)\r\n\r\n**Actual**: It doesn’t pop up a windows box.\r\n![image](https://user-images.githubusercontent.com/33921754/50080827-f17d1f80-0227-11e9-9d5e-a6298d7667fb.png)\r\n### Test Environment:\r\nD16.0/28414.68(16.0 preview 2.0) + CLI\\SDK: 3.0.100-preview-009839 \r\ndotnet --info:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009839\r\n Commit:    ee9fe44627\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009839\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27216-02\r\n  Commit:  79edbd4d15\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009648 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009839 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27216-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27214-12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"open","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Open issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2018-12-16T11:40:46","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Open PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"open","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Open PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"294070713","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:02","Actor":"karann-msft","Number":"98","RawContent":null,"Title":"Updates to reflect the latest information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/98","RelatedDescription":"Closed or merged PR \"Updates to reflect the latest information\" (#98)"},{"Id":"316146229","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:34","Actor":"Cheesebaron","Number":"100","RawContent":null,"Title":"Create mvvmcross.md","State":"closed","Body":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415","Url":"https://github.com/dotnet/foundation/pull/100","RelatedDescription":"Closed or merged PR \"Create mvvmcross.md\" (#100)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"},{"Id":"293777118","IsPullRequest":true,"CreatedAt":"2018-03-29T07:03:03","Actor":"mairaw","Number":"97","RawContent":null,"Title":"update CLA PDF link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/97","RelatedDescription":"Closed or merged PR \"update CLA PDF link\" (#97)"},{"Id":"307656482","IsPullRequest":false,"CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Number":"99","RawContent":null,"Title":"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux ","State":"open","Body":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n","Url":"https://github.com/dotnet/foundation/issues/99","RelatedDescription":"Open issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"391811334","IsPullRequest":true,"CreatedAt":"2018-12-18T04:44:25","Actor":"Dotnet-GitSync-Bot","Number":"21565","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @StanislavUshakov","Url":"https://github.com/dotnet/coreclr/pull/21565","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#21565)"},{"Id":"391942653","IsPullRequest":true,"CreatedAt":"2018-12-18T01:28:17","Actor":"BruceForstall","Number":"21574","RawContent":null,"Title":"Add dotnet info to PMI asm diffs output","State":"closed","Body":"This might help diagnose issues.","Url":"https://github.com/dotnet/coreclr/pull/21574","RelatedDescription":"Closed or merged PR \"Add dotnet info to PMI asm diffs output\" (#21574)"},{"Id":"391931548","IsPullRequest":true,"CreatedAt":"2018-12-18T01:25:16","Actor":"BruceForstall","Number":"21572","RawContent":null,"Title":"Disable System.Runtime.Tests for Linux arm64 corefx tests","State":"closed","Body":"Failure with System.Tests.ExceptionTests.ThrowStatementDoesNotResetExceptionStackLineOtherMethod\r\nin JitStress=2.\r\n\r\nTracking: #21223","Url":"https://github.com/dotnet/coreclr/pull/21572","RelatedDescription":"Closed or merged PR \"Disable System.Runtime.Tests for Linux arm64 corefx tests\" (#21572)"},{"Id":"391890905","IsPullRequest":true,"CreatedAt":"2018-12-18T00:50:55","Actor":"jkoritzinsky","Number":"21569","RawContent":null,"Title":"Add tests for marshalling a System.Drawing.Color.","State":"closed","Body":"Add tests for marshalling a `System.Drawing.Color` object to an `OLE_COLOR` value in COM marshalling scenarios.","Url":"https://github.com/dotnet/coreclr/pull/21569","RelatedDescription":"Closed or merged PR \"Add tests for marshalling a System.Drawing.Color.\" (#21569)"},{"Id":"391937860","IsPullRequest":true,"CreatedAt":"2018-12-17T23:49:08","Actor":"trylek","Number":"21573","RawContent":null,"Title":"Add support for parsing field signatures","State":"open","Body":"This change adds basic field signature parsing support to R2RDump\r\nand it improves parsing of two fixup types (FIELD_ADDRESS and\r\nCCTOR_TRIGGER).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/21573","RelatedDescription":"Open PR \"Add support for parsing field signatures\" (#21573)"},{"Id":"391922198","IsPullRequest":true,"CreatedAt":"2018-12-17T22:47:10","Actor":"BruceForstall","Number":"21571","RawContent":null,"Title":"Disable GitHub_19361 for Linux arm32","State":"open","Body":"It currently times out and fails on Debug.\r\n\r\nTracking: #20232","Url":"https://github.com/dotnet/coreclr/pull/21571","RelatedDescription":"Open PR \"Disable GitHub_19361 for Linux arm32\" (#21571)"},{"Id":"391909474","IsPullRequest":true,"CreatedAt":"2018-12-17T22:06:10","Actor":"jkoritzinsky","Number":"21570","RawContent":null,"Title":"[WIP, PR for Personal Review] Template implementation of GCProtect","State":"open","Body":"Out of curiosity, I decided to see if I could convert the GCPROTECT_* family of macros into templated functions. I was able to do so with C++17 language features.\r\n\r\nAdditionally, with an `-O2` optimization level, the generated assembly is identical if not better than the assembly for the currently generated code.\r\n\r\nI've converted over a few of the usages of `GCPROTECT_*` so far as examples in this PR.\r\n\r\n@davidwrighton we talked about this a few weeks back. Though you might want to take a look.","Url":"https://github.com/dotnet/coreclr/pull/21570","RelatedDescription":"Open PR \"[WIP, PR for Personal Review] Template implementation of GCProtect\" (#21570)"},{"Id":"391854438","IsPullRequest":true,"CreatedAt":"2018-12-17T19:20:42","Actor":"echesakovMSFT","Number":"21568","RawContent":null,"Title":"Use Alpine container with Node.js in Azure DevOps","State":"open","Body":"Use an alpine container with node built from source (microsoft/dotnet-buildtools-prereqs:alpine-3.6-WithNode-f4d3fe3-2018121300501)\r\n\r\nTesting in https://dnceng.visualstudio.com/public/_build/results?buildId=59687\r\n/cc: @safern ","Url":"https://github.com/dotnet/coreclr/pull/21568","RelatedDescription":"Open PR \"Use Alpine container with Node.js in Azure DevOps\" (#21568)"},{"Id":"391317453","IsPullRequest":true,"CreatedAt":"2018-12-17T19:11:25","Actor":"echesakovMSFT","Number":"21554","RawContent":null,"Title":"Switch to using resources in BenchmarksGames tests","State":"closed","Body":"There are several tests in BenchmarksGames test suite that use input files with test data and hardcode their paths in harness-helpers.cs files. These tests are going to fail on Azure DevOps since we have a different layout for Core_Root and folders containing test assemblies. \r\n\r\nInstead of introducing one more layout scheme for the tests (which is gonna easily break if something changes in the way Helix places the correlation payload and work payload folders) I embedded the input files as the assembly resources. This already works in Azure DevOps (https://dnceng.visualstudio.com/public/_build/results?buildId=58868) and should work in our current test infrastructure.\r\n\r\nShould get us one step closer to green innerloop tests in Azure DevOps.","Url":"https://github.com/dotnet/coreclr/pull/21554","RelatedDescription":"Closed or merged PR \"Switch to using resources in BenchmarksGames tests\" (#21554)"},{"Id":"391837341","IsPullRequest":true,"CreatedAt":"2018-12-17T18:30:25","Actor":"CarolEidt","Number":"21567","RawContent":null,"Title":"Test for #20657 SIMD byref bug","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21567","RelatedDescription":"Open PR \"Test for #20657 SIMD byref bug\" (#21567)"},{"Id":"391811388","IsPullRequest":true,"CreatedAt":"2018-12-17T17:17:47","Actor":"sywhang","Number":"21566","RawContent":null,"Title":"Add .NET Core version to EventLog","State":"open","Body":"Address https://github.com/dotnet/coreclr/issues/21563\r\n\r\nExample output:\r\n![eventlogfix](https://user-images.githubusercontent.com/30421794/50103493-94a84780-01dc-11e9-9a57-ee2e3a8b69d2.jpg)\r\n","Url":"https://github.com/dotnet/coreclr/pull/21566","RelatedDescription":"Open PR \"Add .NET Core version to EventLog\" (#21566)"},{"Id":"391480155","IsPullRequest":true,"CreatedAt":"2018-12-17T16:55:53","Actor":"jkotas","Number":"21562","RawContent":null,"Title":"Delete dead code","State":"closed","Body":"- Delete clix support from PAL. \"clix\" was launcher in the Rotor days - like \"dotnet\" today.\r\n- Delete URL parsing from PALRT","Url":"https://github.com/dotnet/coreclr/pull/21562","RelatedDescription":"Closed or merged PR \"Delete dead code\" (#21562)"},{"Id":"391465255","IsPullRequest":true,"CreatedAt":"2018-12-17T14:46:04","Actor":"dotnet-maestro[bot]","Number":"21560","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18615.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21560","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#21560)"},{"Id":"391719065","IsPullRequest":true,"CreatedAt":"2018-12-17T13:45:41","Actor":"MichalStrehovsky","Number":"21564","RawContent":null,"Title":"Add draft default interface methods specification","State":"open","Body":"Resolves #15989.\r\n\r\n@dotnet-bot skip ci please","Url":"https://github.com/dotnet/coreclr/pull/21564","RelatedDescription":"Open PR \"Add draft default interface methods specification\" (#21564)"},{"Id":"391466671","IsPullRequest":true,"CreatedAt":"2018-12-17T13:07:08","Actor":"MichalStrehovsky","Number":"21561","RawContent":null,"Title":"Add specialized allocation helpers","State":"closed","Body":"This is to support dotnet/corert#6688. They don't exist in CoreCLR (yet).","Url":"https://github.com/dotnet/coreclr/pull/21561","RelatedDescription":"Closed or merged PR \"Add specialized allocation helpers\" (#21561)"},{"Id":"391583166","IsPullRequest":false,"CreatedAt":"2018-12-17T07:08:55","Actor":"davidfowl","Number":"21563","RawContent":null,"Title":"Add .NET Core version to the EventLog output","State":"open","Body":"We did work to log unhandled exceptions on windows to the EventLog in 2.1. This is great but it would be even better if it had more relevant version information (like the .NET Core version). We also made a change to the host so that it flows that information via an app domain variable (FX_PRODUCT_VERSION see https://github.com/dotnet/core-setup/issues/4453#issuecomment-412944499) to the runtime. We should use this variable in the EventLog output.\r\n\r\nToday's example output:\r\n\r\n```C#\r\nusing System;\r\n\r\nnamespace ConsoleApp11\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            throw new InvalidOperationException(\"This is a failure\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50071561-0eade180-0187-11e9-855f-c33d267b8e42.png)\r\n\r\n\r\nWe should just add `.NET Core version: AppDomain.CurrentDomain.GetData(\"FX_PRODUCT_VERSION\")`.\r\n\r\ncc @jeffschwMSFT @jkotas @noahfalk ","Url":"https://github.com/dotnet/coreclr/issues/21563","RelatedDescription":"Open issue \"Add .NET Core version to the EventLog output\" (#21563)"},{"Id":"391460587","IsPullRequest":false,"CreatedAt":"2018-12-16T12:02:25","Actor":"Wraith2","Number":"21559","RawContent":null,"Title":"JetBrains dotMemory and dotTrace fail on 3.0 preview","State":"open","Body":"I've reported this as an issue through JetBrains support because it looks like an internal assumption in their software which is no longer true in 3.0. I realised it might be a good idea to post here in case it isn't.\r\n\r\nWhen attempting to do a cpu or memory profile against CoreRun with one of the tools in the title the run will fail attempting to use the profiling api with the error in the screenshot below:\r\n![capture](https://user-images.githubusercontent.com/13322696/50053278-23a85780-012a-11e9-91b9-166907d59fb8.PNG)\r\n\r\nI interpret this to be a request for a specific type in the runtime and that the failure is unexpected and unhandled. My assumption is that the type is no longer named as expected or no longer present because of changed to internal structures (probably to do with unloadable assemblies).","Url":"https://github.com/dotnet/coreclr/issues/21559","RelatedDescription":"Open issue \"JetBrains dotMemory and dotTrace fail on 3.0 preview\" (#21559)"},{"Id":"391382809","IsPullRequest":true,"CreatedAt":"2018-12-15T14:23:36","Actor":"dotnet-maestro-bot","Number":"21558","RawContent":null,"Title":"Update CoreClr, CoreSetup to preview-27218-01, preview-27217-02, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21558","RelatedDescription":"Open PR \"Update CoreClr, CoreSetup to preview-27218-01, preview-27217-02, respectively (master)\" (#21558)"},{"Id":"391127306","IsPullRequest":true,"CreatedAt":"2018-12-15T12:43:08","Actor":"dotnet-maestro-bot","Number":"21547","RawContent":null,"Title":"Update CoreClr, CoreSetup to preview-27215-01, preview-27214-02, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21547","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreSetup to preview-27215-01, preview-27214-02, respectively (master)\" (#21547)"},{"Id":"391337352","IsPullRequest":true,"CreatedAt":"2018-12-15T09:23:41","Actor":"CarolEidt","Number":"21556","RawContent":null,"Title":"Fix more HWIntrinsic ifdefs","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21556","RelatedDescription":"Closed or merged PR \"Fix more HWIntrinsic ifdefs\" (#21556)"},{"Id":"391339138","IsPullRequest":true,"CreatedAt":"2018-12-15T08:57:08","Actor":"benaadams","Number":"21557","RawContent":null,"Title":"Fix warning causing error in warning as error (Windows)","State":"closed","Body":"Causing local build errors as `IsExceptionOfType` returns `BOOL` not `bool`\r\n```\r\n[C:\\GitHub\\coreclr\\bin\\obj\\Windows_NT.x64.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc:\\github\\coreclr\\src\\vm\\excep.cpp(4489):\r\nwarning C4800: 'BOOL': forcing value to bool 'true' or 'false'\r\n(performance warning)\r\n[C:\\GitHub\\coreclr\\bin\\obj\\Windows_NT.x64.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\n\r\nc:\\github\\coreclr\\src\\vm\\excep.cpp(4489):\r\nerror C2220: warning treated as error - no 'object' file generated\r\n```","Url":"https://github.com/dotnet/coreclr/pull/21557","RelatedDescription":"Closed or merged PR \"Fix warning causing error in warning as error (Windows)\" (#21557)"},{"Id":"391222786","IsPullRequest":true,"CreatedAt":"2018-12-15T05:53:18","Actor":"tannergooding","Number":"21549","RawContent":null,"Title":"Fixing an assert in `gtGetStructHandleForSIMD` to validate the size of the simdType is less than or equal to the largest support TYP_SIMD","State":"closed","Body":"This resolves https://github.com/dotnet/coreclr/issues/21542\r\n\r\nCC. @CarolEidt, @fiigii ","Url":"https://github.com/dotnet/coreclr/pull/21549","RelatedDescription":"Closed or merged PR \"Fixing an assert in `gtGetStructHandleForSIMD` to validate the size of the simdType is less than or equal to the largest support TYP_SIMD\" (#21549)"},{"Id":"390963737","IsPullRequest":true,"CreatedAt":"2018-12-15T02:45:56","Actor":"morganbr","Number":"21545","RawContent":null,"Title":"Add Azure DevOps signing support","State":"closed","Body":"Add signing support for Azure DevOps pipelines. This uses the arcade signing step, but with custom logic to find files to sign while we're not using arcade for the rest of the build.","Url":"https://github.com/dotnet/coreclr/pull/21545","RelatedDescription":"Closed or merged PR \"Add Azure DevOps signing support\" (#21545)"},{"Id":"391334918","IsPullRequest":true,"CreatedAt":"2018-12-15T02:18:38","Actor":"swaroop-sridhar","Number":"21555","RawContent":null,"Title":"Add Per-assembly Load Native Library callbacks","State":"open","Body":"This Change implements the Native Library resolution\r\nCall-backs proposed in https://github.com/dotnet/corefx/issues/32015\r\n\r\npublic static bool RegisterDllImportResolver(\r\n    Assembly assembly,\r\n    Func<string, Assembly, DllImportSearchPath, IntPtr> callback\r\n);\r\n\r\nThis API is not yet approved, and the API contracts in CoreFX\r\nwill not be added until the API approval is complete.\r\nIn the meantime, we want to have the code reviewed, tested, and\r\navaiable in CoreCLR.","Url":"https://github.com/dotnet/coreclr/pull/21555","RelatedDescription":"Open PR \"Add Per-assembly Load Native Library callbacks\" (#21555)"},{"Id":"391285040","IsPullRequest":true,"CreatedAt":"2018-12-14T21:26:13","Actor":"pentp","Number":"21553","RawContent":null,"Title":"[WIP] Eliminate array/Span index sign-extension","State":"open","Body":"Array bounds check guarantees that the index is non-negative, so there is no need for sign extension.\r\n\r\nI tried to get the correct casting, but for the array/string case, I'm only getting half of the gains (`movsxd` replaced with `mov`) and while the `Span` case looks more promising (`movsxd` is eliminated entirely), it's also a bit too eager and does this for non-normalized registers (parameters/function return values), so it's not entirely correct.\r\n\r\n@dotnet/jit-contrib What would be the correct solution here?\r\n\r\nCode size reduction is up to 15% in some methods and `int.Parse` for example is about 2-4% faster.\r\n\r\nTypical diffs look like this:\r\n```diff\r\n        cmp      r10d, 103\r\n        jae      G_M36150_IG23\r\n-       movsxd   rax, r10d\r\n-       mov      r11, 0xD1FFAB1E\r\n-       cmp      byte  ptr [rax+r11], 255\r\n+       mov      rax, 0xD1FFAB1E\r\n+       cmp      byte  ptr [r10+rax], 255\r\n\r\n        cmp      eax, dword ptr [rsi+8]\r\n        jae      SHORT G_M26958_IG04\r\n-       movsxd   rax, eax\r\n+       mov      eax, eax\r\n        mov      eax, dword ptr [rsi+4*rax+16]\r\n```","Url":"https://github.com/dotnet/coreclr/pull/21553","RelatedDescription":"Open PR \"[WIP] Eliminate array/Span index sign-extension\" (#21553)"},{"Id":"391238310","IsPullRequest":true,"CreatedAt":"2018-12-14T20:16:40","Actor":"adiaaida","Number":"21551","RawContent":null,"Title":"[WIP] change ubuntu label to Ubuntu.1604.Amd64.Perf","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21551","RelatedDescription":"Closed or merged PR \"[WIP] change ubuntu label to Ubuntu.1604.Amd64.Perf\" (#21551)"},{"Id":"391244611","IsPullRequest":false,"CreatedAt":"2018-12-14T19:54:58","Actor":"gregg-miskelly","Number":"21552","RawContent":null,"Title":"AppDomain name failure breaks debugging on macOS","State":"open","Body":"1. Create a new .NET Core 3.0 preview 1 program on macOS\r\n2. Attempt to launch the program under a debugging using the VS Code C# extension\r\n\r\nResult:\r\nDebugging fails because when the app domain create call back is fired, ICorDebugAppDomain.GetName fails with E_FAIL, which all managed debuggers in the VS family do not handle.","Url":"https://github.com/dotnet/coreclr/issues/21552","RelatedDescription":"Open issue \"AppDomain name failure breaks debugging on macOS\" (#21552)"},{"Id":"391223348","IsPullRequest":false,"CreatedAt":"2018-12-14T18:44:44","Actor":"tannergooding","Number":"21550","RawContent":null,"Title":"Fixup `impPopList` to eliminate the need to normalize SIMD and HWIntrinsic type handles","State":"open","Body":"Currently `impPopList` is validating that the struct handle for a given `TYP_SIMD` matches the struct type we have from the stack's type information: https://github.com/dotnet/coreclr/blob/master/src/jit/importer.cpp#L857\r\n\r\nHowever, in `gtGetStructHandleIfPresent` we do not currently differentiate between SIMD types and HWIntrinsic types for the `GT_IND` and `GT_LCL_FLD` cases:\r\n* https://github.com/dotnet/coreclr/blob/master/src/jit/gentree.cpp#L16446\r\n* https://github.com/dotnet/coreclr/blob/master/src/jit/gentree.cpp#L16460\r\n\r\nThis means that we have to force normalization for these cases on 9/10 `Vector<T>` types and all of the HWIntrinsic types. It also means that we needed to update `gtGetStructHandleForSIMD` (https://github.com/dotnet/coreclr/pull/21549) to handle the case where we are trying to get a `HWIntrinsic` struct handle for a `TYP_SIMD` that is larger than the size of `Vector<T>` .\r\n\r\nIt may be beneficial to update this logic so that we are able to get the correct handle and avoid normalization when the types already line up.","Url":"https://github.com/dotnet/coreclr/issues/21550","RelatedDescription":"Open issue \"Fixup `impPopList` to eliminate the need to normalize SIMD and HWIntrinsic type handles\" (#21550)"},{"Id":"391213016","IsPullRequest":false,"CreatedAt":"2018-12-14T18:11:08","Actor":"dotnet-mc-bot","Number":"21548","RawContent":null,"Title":"Build failure: NuGet package creation issue","State":"open","Body":"Opened on behalf of @robertborr\n\nWarnings: 2\nStatus Message: failed\n\nBuild : 3.0 - 20181214.01 (Product Build)\nFailing configurations:\n- Windows\n  - PortableBuild-Debug-arm\n[Mission Control Build Info](https://mc.dot.net/#/product/netcore/30/source/official~2Fcoreclr~2Fmaster~2F/type/build~2Fproduct~2F/build/20181214.01/workItem/Orchestration/analysis/external/Link)\n\n2018-12-14T00:13:03.2185519Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget lib package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.Runtime.CoreCLR.nuspec. System.IO.DirectoryNotFoundException: Could not find a part of the path 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\IL'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2185864Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2186311Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.FileSystemEnumerableIterator`1.CommonInit() [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2186700Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2186983Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.Directory.GetFiles(String path, String searchPattern, SearchOption searchOption) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2187360Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Common.PathResolver.PerformWildcardSearch(String basePath, String searchPath, Boolean includeEmptyDirectories, String& normalizedBasePath) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2187688Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.ResolveSearchPattern(String basePath, String searchPath, String targetPath, Boolean includeEmptyDirectories) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2188339Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2188618Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2188883Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2189210Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.Runtime.CoreCLR.nuspec. System.IO.DirectoryNotFoundException: Could not find a part of the path 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\IL'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2189697Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2189924Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.FileSystemEnumerableIterator`1.CommonInit() [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2190171Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2190778Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.Directory.GetFiles(String path, String searchPattern, SearchOption searchOption) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2191890Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Common.PathResolver.PerformWildcardSearch(String basePath, String searchPath, Boolean includeEmptyDirectories, String& normalizedBasePath) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2192314Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.ResolveSearchPattern(String basePath, String searchPath, String targetPath, Boolean includeEmptyDirectories) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2192927Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2193205Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2193459Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2193756Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.Runtime.CoreCLR.nuspec. System.IO.DirectoryNotFoundException: Could not find a part of the path 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\IL'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2194044Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2194260Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.FileSystemEnumerableIterator`1.CommonInit() [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2194520Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2194791Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at System.IO.Directory.GetFiles(String path, String searchPattern, SearchOption searchOption) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2195058Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Common.PathResolver.PerformWildcardSearch(String basePath, String searchPath, Boolean includeEmptyDirectories, String& normalizedBasePath) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2195335Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.ResolveSearchPattern(String basePath, String searchPath, String targetPath, Boolean includeEmptyDirectories) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2195764Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2196066Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2196291Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2196665Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget lib package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\Microsoft.TargetingPack.Private.CoreCLR.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\System.Private.CoreLib.dll'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2196980Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2197275Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2197540Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2197867Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\Microsoft.TargetingPack.Private.CoreCLR.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\System.Private.CoreLib.dll'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2198164Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2198406Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2198661Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2198961Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\Microsoft.TargetingPack.Private.CoreCLR.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\System.Private.CoreLib.dll'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2199393Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2199628Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2199879Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.TargetingPack.Private.CoreCLR\\Microsoft.TargetingPack.Private.CoreCLR.pkgproj]\n2018-12-14T00:13:03.2200181Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget lib package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.Jit.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\clrjit.dll'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2200455Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2200664Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2200894Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2201183Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.Jit.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\clrjit.dll'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2201449Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2201651Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2201883Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2202167Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.Jit.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\clrjit.dll'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2202492Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2202755Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2202979Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.Jit\\Microsoft.NETCore.Jit.pkgproj]\n2018-12-14T00:13:03.2203272Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget lib package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.TestHost.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\CoreRun.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2203555Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2203755Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2203991Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2204297Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.TestHost.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\CoreRun.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2204659Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2204915Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2205245Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2205562Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.TestHost.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\CoreRun.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2205928Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2206190Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2206422Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.TestHost\\Microsoft.NETCore.TestHost.pkgproj]\n2018-12-14T00:13:03.2206709Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget lib package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.ILAsm.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\ilasm.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2206990Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2207249Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2207477Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2207772Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.ILAsm.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\ilasm.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2208031Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2208243Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2208484Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2208776Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.ILAsm.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\ilasm.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2209042Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2209325Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2209600Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILAsm\\Microsoft.NETCore.ILAsm.pkgproj]\n2018-12-14T00:13:03.2209871Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget lib package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.ILDAsm.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\ildasm.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2210145Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2210366Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2210596Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2210891Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.ILDAsm.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\ildasm.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2211202Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2211418Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2211655Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2212079Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error : Error when creating nuget packed package from E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\.nuget\\pkg\\specs\\runtime.win-arm.Microsoft.NETCore.ILDAsm.nuspec. System.IO.FileNotFoundException: File not found: 'E:\\A\\_work\\202\\s\\bin\\Product\\Windows_NT.arm.Debug\\ildasm.exe'. [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2212378Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2212687Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]\n2018-12-14T00:13:03.2212975Z E:\\A\\_work\\202\\s\\Tools\\Packaging.targets(1249,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) [E:\\A\\_work\\202\\s\\src\\.nuget\\Microsoft.NETCore.ILDAsm\\Microsoft.NETCore.ILDAsm.pkgproj]","Url":"https://github.com/dotnet/coreclr/issues/21548","RelatedDescription":"Open issue \"Build failure: NuGet package creation issue\" (#21548)"},{"Id":"390977700","IsPullRequest":false,"CreatedAt":"2018-12-14T06:03:30","Actor":"AriNuer","Number":"21546","RawContent":null,"Title":"Test failure: JIT_SIMD._CircleInConvex_ro_CircleInConvex_ro_._CircleInConvex_ro_CircleInConvex_ro_cmd","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86_arm_altjit/job/jitstress/job/x86_arm_altjit_checked_windows_nt_jitstress1/373/\r\n**Failed test:**\r\nJIT_SIMD._CircleInConvex_ro_CircleInConvex_ro_._CircleInConvex_ro_CircleInConvex_ro_cmd\r\n\r\n**Log:**\r\n```\r\nJIT_SIMD._CircleInConvex_ro_CircleInConvex_ro_._CircleInConvex_ro_CircleInConvex_ro_cmd [FAIL]\r\n        \r\n  \r\n  Return code:      1\r\n  Raw output file:      D:\\j\\workspace\\x86_arm_altji---c75e0863\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\JIT.SIMD\\CircleInConvex_ro\\CircleInConvex_ro.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x86_arm_altji---c75e0863\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" CircleInConvex_ro.exe \r\n        Expected: 100\r\n        Actual: 0\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=D:\\j\\workspace\\x86_arm_altji---c75e0863\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n  > D:\\j\\workspace\\x86_arm_altji---c75e0863\\bin\\tests\\Windows_NT.x86.Checked\\JIT\\SIMD\\CircleInConvex_ro\\CircleInConvex_ro.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x86_arm_altji---c75e0863\\bin\\tests\\Windows_NT.x86.Checked\\TestWrappers\\JIT.SIMD\\JIT.SIMD.XUnitWrapper.cs(949,0): at JIT_SIMD._CircleInConvex_ro_CircleInConvex_ro_._CircleInConvex_ro_CircleInConvex_ro_cmd()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21546","RelatedDescription":"Open issue \"Test failure: JIT_SIMD._CircleInConvex_ro_CircleInConvex_ro_._CircleInConvex_ro_CircleInConvex_ro_cmd\" (#21546)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"392001609","IsPullRequest":false,"CreatedAt":"2018-12-18T05:24:25","Actor":"flcdrg","Number":"10487","RawContent":null,"Title":"dotnet-install.ps1 always modifies PATH","State":"open","Body":"## Steps to reproduce\r\n\r\nRun dotnet-install.ps1 more than once\r\n\r\n## Expected  behavior\r\n\r\nOnly one instance of \"C:\\Users\\David\\AppData\\Local\\Microsoft\\dotnet\" exists in PATH\r\n\r\n## Actual behavior\r\n\r\nPATH contains multiple references to the same directory\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10487","RelatedDescription":"Open issue \"dotnet-install.ps1 always modifies PATH\" (#10487)"},{"Id":"391959966","IsPullRequest":false,"CreatedAt":"2018-12-18T01:34:42","Actor":"wli3","Number":"10486","RawContent":null,"Title":"Block --interactive and --verbose:quiet","State":"open","Body":"only warning and error will show. So the output of `--interactive` will not be printed. Need to consider where to implement this, MSBuild or CLI","Url":"https://github.com/dotnet/cli/issues/10486","RelatedDescription":"Open issue \"Block --interactive and --verbose:quiet\" (#10486)"},{"Id":"391940539","IsPullRequest":true,"CreatedAt":"2018-12-18T00:01:08","Actor":"dotnet-bot","Number":"10485","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10485","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10485)"},{"Id":"391911957","IsPullRequest":false,"CreatedAt":"2018-12-17T22:14:07","Actor":"allanrodriguez","Number":"10484","RawContent":null,"Title":"NETSDK1007 error when building solution with ProjectReference tags in specific order","State":"open","Body":"## Steps to reproduce\r\n1. Build the [attached solution](https://github.com/dotnet/cli/files/2688002/NetSdk1007.zip). It should build successfully.\r\n2. In the NetSdk1007/NetSdk1007.csproj file, switch the position of the two ProjectReference tags such that they look like this:\r\n```\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\Dependency.Mocks\\Dependency.Mocks.csproj\" />\r\n  <ProjectReference Include=\"..\\LibraryUnderTest\\LibraryUnderTest.csproj\" />\r\n</ItemGroup>\r\n```\r\n3. Rebuild the solution using `dotnet build --no-incremental`.\r\n\r\n## Expected  behavior\r\nThe solution should build successfully for the .NET Core 2.1 and .NET Framework 4.7.1 platforms as in step 1.\r\n\r\n## Actual behavior\r\nBuilding the solution fails with the error `NETSDK1007: Cannot find project info for 'C:\\Projects\\NetSdk1007\\Dependency\\Dependency.csproj'. This can indicate a missing project reference.` The .NET Core build fails but the .NET Framework build succeeds.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:`\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/10484","RelatedDescription":"Open issue \"NETSDK1007 error when building solution with ProjectReference tags in specific order\" (#10484)"},{"Id":"391702774","IsPullRequest":true,"CreatedAt":"2018-12-17T16:55:36","Actor":"dotnet-maestro[bot]","Number":"10483","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18616.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10483","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10483)"},{"Id":"391702745","IsPullRequest":true,"CreatedAt":"2018-12-17T16:55:24","Actor":"dotnet-maestro[bot]","Number":"10482","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10482","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10482)"},{"Id":"391562210","IsPullRequest":false,"CreatedAt":"2018-12-17T16:40:14","Actor":"John0King","Number":"10480","RawContent":null,"Title":"`dotnet build /p:myproperty=value`  not always set property and no `dotnet run /p:property=value`","State":"closed","Body":"## Steps to reproduce\r\n1. create a console project \r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <DefineConstants Condition=\" '$(XXX)' == '1'\">X1</DefineConstants>\r\n    <DefineConstants Condition=\" '$(XXX)' == '2'\">X2</DefineConstants>\r\n    <DefineConstants Condition=\" '$(XXX)' == '3'\">X3</DefineConstants>\r\n  </PropertyGroup>\r\n  <Target Name=\"LogMyX\" BeforeTargets=\"Build\">\r\n    <Message Importance=\"high\" Text=\"'MyLogX $(XXX)'\" />\r\n  </Target>\r\n  <Target Name=\"LogMyXX\" AfterTargets=\"Build\">\r\n    <Message Importance=\"high\" Text=\"'MyLogX $(XXX)'\" />\r\n  </Target>\r\n</Project>\r\n```\r\n2. create a .cs file \r\n```C#\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n#if X1 \r\n            Console.WriteLine(\"Hello X1!\");\r\n#elif X2\r\n            Console.WriteLine(\"Hello X2!\");\r\n#elif X3\r\n            Console.WriteLine(\"Hello X3!\");\r\n#endif\r\n        }\r\n    }\r\n```\r\n## Expected  behavior\r\n`dotnet build /p:xxx=1`  =>compile log:\"MyLogX 1\"=>(run)  => \"Hello X1\"\r\n`dotnet build /p:xxx=2`  =>compile log:\"MyLogX 2\"=>(run)  => \"Hello X2\"\r\n`dotnet build /p:xxx=3`  =>compile log:\"MyLogX 3\"=>(run)  => \"Hello X3\"\r\n\r\n## Actual behavior\r\n`dotnet build /p:xxx=1`  =>compile log:\"MyLogX 1\"=>(run)  => \"Hello X1\"\r\n`dotnet build /p:xxx=2`  =>compile log:\"MyLogX 2\"=>(run)  => \"Hello X1\"\r\n`dotnet build /p:xxx=3`  =>compile log:\"MyLogX 3\"=>(run)  => \"Hello X1\"\r\n\r\n**I must use `dotnet clean` before `dotnet build`  or save the csproj file again**\r\n\r\nand I can not use `dotnet run /p:xxx=1`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10480","RelatedDescription":"Closed issue \"`dotnet build /p:myproperty=value`  not always set property and no `dotnet run /p:property=value`\" (#10480)"},{"Id":"391694348","IsPullRequest":false,"CreatedAt":"2018-12-17T16:36:11","Actor":"mmisztal1980","Number":"10481","RawContent":null,"Title":"dotnet restore hangs on a TFS build agent","State":"closed","Body":"## Steps to reproduce\r\nHere's our build log obtained with **dotnet restore -v diag**\r\nhttps://gist.github.com/mmisztal1980/6ce8e016da620efbf0aa4693d4bc85b9\r\n\r\n## Expected  behavior\r\nWe expect our build agent to complete this step (TFS dotnet task  v2.*, targeting **/*.csproj (linked by default))\r\n\r\n## Actual behavior\r\nThe build appears to hang after iterating over the last project in the **/*.csproj.\r\nThe last target appears to be **_GenerateRestoreProjectPathWalk** \r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\noctopus@build14:~/agent/_work/1/s/src$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n\r\nWe'd apreciate some information how to diagnose this situation as we do not see any errors. This behavior has been observed in the master and feature branches of our repo.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10481","RelatedDescription":"Closed issue \"dotnet restore hangs on a TFS build agent\" (#10481)"},{"Id":"391412591","IsPullRequest":false,"CreatedAt":"2018-12-17T01:39:35","Actor":"AArnott","Number":"10477","RawContent":null,"Title":"dotnet.exe claims `--roll-forward-on-no-candidate-fx` switch exists, but denies that if you use it","State":"closed","Body":"The dotnet CLI tool documents that a `--roll-forward-on-no-candidate-fx` switch exists:\r\n\r\n```\r\ndotnet -h\r\n.NET Core SDK (3.0.100-preview-009812)\r\nUsage: dotnet [runtime-options] [path-to-application] [arguments]\r\n\r\nExecute a .NET Core application.\r\n\r\nruntime-options:\r\n  --additionalprobingpath <path>     Path containing probing policy and assemblies to probe for.\r\n  --additional-deps <path>           Path to additional deps.json file.\r\n  --fx-version <version>             Version of the installed Shared Framework to use to run the application.\r\n  --roll-forward-on-no-candidate-fx  Roll forward on no candidate shared framework is enabled.\r\n\r\npath-to-application:\r\n  The path to an application .dll file to execute.\r\n```\r\n\r\nBut when I use it, it denies that it's a valid switch, and follows up with usage docs that once again repeat that it *does* exist.\r\n\r\n## Expected  behavior\r\n\r\nI expect it to run like it does without the switch:\r\n\r\n```\r\ndotnet D:\\git\\Nerdbank.GitVersioning\\src\\nerdbank-gitversioning.npm\\out\\nbgv.cli\\tools\\netcoreapp2.1\\any\\nbgv.dll get-version\r\nVersion:                      2.3.41.20022\r\nAssemblyVersion:              2.3.41.20022\r\nAssemblyInformationalVersion: 2.3.41+364e6d9de7\r\nNuGet package Version:        2.3.41-g364e6d9de7\r\nNPM package Version:          2.3.41-364e6d9de7\r\n```\r\n\r\n## Actual behavior\r\n\r\nIt fails, claiming the switch isn't recognized:\r\n\r\n```\r\ndotnet --roll-forward-on-no-candidate-fx D:\\git\\Nerdbank.GitVersioning\\src\\nerdbank-gitversioning.npm\\out\\nbgv.cli\\tools\\netcoreapp2.1\\any\\nbgv.dll get-version\r\nUnknown option: --roll-forward-on-no-candidate-fx\r\n.NET Core SDK (3.0.100-preview-009812)\r\nUsage: dotnet [runtime-options] [path-to-application] [arguments]\r\n\r\nExecute a .NET Core application.\r\n\r\nruntime-options:\r\n  --additionalprobingpath <path>     Path containing probing policy and assemblies to probe for.\r\n  --additional-deps <path>           Path to additional deps.json file.\r\n  --fx-version <version>             Version of the installed Shared Framework to use to run the application.\r\n  --roll-forward-on-no-candidate-fx  Roll forward on no candidate shared framework is enabled.\r\n\r\npath-to-application:\r\n  The path to an application .dll file to execute.\r\n\r\nUsage: dotnet [sdk-options] [command] [command-options] [arguments]\r\n\r\nExecute a .NET Core SDK command.\r\n\r\nsdk-options:\r\n  -d|--diagnostics  Enable diagnostic output.\r\n  -h|--help         Show command line help.\r\n  --info            Display .NET Core information.\r\n  --list-runtimes   Display the installed runtimes.\r\n  --list-sdks       Display the installed SDKs.\r\n  --version         Display .NET Core SDK version in use.\r\n\r\nSDK commands:\r\n  add               Add a package or reference to a .NET project.\r\n  build             Build a .NET project.\r\n  build-server      Interact with servers started by a build.\r\n  clean             Clean build outputs of a .NET project.\r\n  help              Show command line help.\r\n  list              List project references of a .NET project.\r\n  migrate           Migrate a project.json project to an MSBuild project.\r\n  msbuild           Run Microsoft Build Engine (MSBuild) commands.\r\n  new               Create a new .NET project or file.\r\n  nuget             Provides additional NuGet commands.\r\n  pack              Create a NuGet package.\r\n  publish           Publish a .NET project for deployment.\r\n  remove            Remove a package or reference from a .NET project.\r\n  restore           Restore dependencies specified in a .NET project.\r\n  run               Build and run a .NET project output.\r\n  sln               Modify Visual Studio solution files.\r\n  store             Store the specified assemblies in the runtime package store.\r\n  test              Run unit tests using the test runner specified in a .NET project.\r\n  tool              Install or manage tools that extend the .NET experience.\r\n  vstest            Run Microsoft Test Engine (VSTest) commands.\r\n\r\nAdditional commands from bundled tools:\r\n  dev-certs         Create and manage development certificates.\r\n  ef                Entity Framework Core command-line tools.\r\n  sql-cache         SQL Server cache command-line tools.\r\n  user-secrets      Manage development user secrets.\r\n  watch             Start a file watcher that runs a command when files change.\r\n\r\nRun 'dotnet [command] --help' for more information on a command.\r\n```\r\n\r\n## Environment data\r\n\r\n```\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400-preview-009063 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400-preview-009088 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400-preview-009171 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009266 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009297 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009324 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009398 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009404 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009431 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009648 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35364 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35364 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5-servicing-26911-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27001-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10477","RelatedDescription":"Closed issue \"dotnet.exe claims `--roll-forward-on-no-candidate-fx` switch exists, but denies that if you use it\" (#10477)"},{"Id":"391102977","IsPullRequest":true,"CreatedAt":"2018-12-17T01:37:21","Actor":"dotnet-maestro[bot]","Number":"10472","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18613.20\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18614.3\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10472","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10472)"},{"Id":"391443346","IsPullRequest":false,"CreatedAt":"2018-12-16T21:15:15","Actor":"rbonestell","Number":"10478","RawContent":null,"Title":"dotnet pack includes extraneous files making nupkg large ","State":"closed","Body":"## Steps to reproduce\r\n1. Create a .NET Core 2.1 class library containing at least 1 class.\r\n2. Add values to the following properties of your .csproj\r\n- PackageId\r\n- Description\r\n3. Run `dotnet pack` on that new project.\r\n\r\n## Expected  behavior\r\nResulting .nupkg contains only the .dll output of the class library project in the lib/netcoreapp2.1/ folder contained within, and the entire nupkg size should be in the single-digit KBs.\r\n\r\n_When the .csproj file **doesn't** have the `<PackageId>` or `<Description>` nodes within the `<PropertyGroup>` then the resulting .nupkg file is ~3**KB**._\r\n\r\n## Actual behavior\r\nResulting .nupkg contains large list of Microsoft System, netstandard, etc. DLL files causing the package to balloon over 2MB in size.\r\n\r\n_When the .csproj file **does** have the `<PackageId>` or `<Description>` nodes within the `<PropertyGroup>` then the resulting .nupkg file is ~2.5**MB**._\r\n\r\nScreenshot of resulting nupkg lib folder contents: https://i.imgur.com/vcsXbvo.png\r\n\r\n**Note:** This occurs on every machine I've attempted this on (Windows and MacOS) as well as AppVeyor CI.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    51868761f2\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.100/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10478","RelatedDescription":"Closed issue \"dotnet pack includes extraneous files making nupkg large \" (#10478)"},{"Id":"391471697","IsPullRequest":false,"CreatedAt":"2018-12-16T14:18:37","Actor":"fubar-coder","Number":"10479","RawContent":null,"Title":"dotnet --info shows runtimes and sdks twice","State":"open","Body":"## Steps to reproduce\r\n\r\ndotnet --info\r\n\r\n## Expected  behavior\r\n\r\nShow every SDK and runtime once.\r\n\r\n## Actual behavior\r\n\r\nShows every SDK and runtime twice.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```text\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   c:\\program files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [c:\\program files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [c:\\program files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [c:\\program files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [c:\\program files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [c:\\program files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [c:\\program files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/10479","RelatedDescription":"Open issue \"dotnet --info shows runtimes and sdks twice\" (#10479)"},{"Id":"391374688","IsPullRequest":false,"CreatedAt":"2018-12-15T15:38:13","Actor":"Jjagg","Number":"10476","RawContent":null,"Title":"Two projects with different framework targets in same directory cause build conflict","State":"closed","Body":"## Steps to reproduce\r\n\r\n```\r\n$ dotnet new classlib -o standard\r\n$ cd standard\r\n$ cp standard.csproj other.csproj\r\n# edit framework.csproj to target another runtime e.g. netstandard1.6\r\n$ dotnet build other.csproj\r\n$ dotnet build standard.csproj\r\n```\r\n\r\n## Expected  behavior\r\nBoth builds pass.\r\n\r\n## Actual behavior\r\nThe second build fails with the following error:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.2.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(208,5): \r\n    error NETSDK1005: Assets file '<path>\\standard\\obj\\project.assets.json' doesn't have a target for '.NETStandard,Version=v2.0'. \r\n    Ensure that restore has run and that you have included 'netstandard2.0' in the TargetFrameworks for your project. [<path>\\standard\\standard.csproj]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nEDIT: Woops, this should probably have been posted to msbuild, right?","Url":"https://github.com/dotnet/cli/issues/10476","RelatedDescription":"Closed issue \"Two projects with different framework targets in same directory cause build conflict\" (#10476)"},{"Id":"391298695","IsPullRequest":false,"CreatedAt":"2018-12-14T22:19:57","Actor":"dsplaisted","Number":"10475","RawContent":null,"Title":"Acquire and use AppHost for framework dependent apps targeting .NET Core 3 and up","State":"open","Body":"Currently, the AppHost is in the package dependency graph of Microsoft.NETCore.App, and the `ResolvePackageAssets` task finds it in the assets file so that it can be copied to the output directory and renamed for framework-dependent apps.\r\n\r\nWith .NET Core 3.0, we will be using [targeting packs](https://github.com/dotnet/cli/issues/10006) instead of package references, so we will need another way to acquire and locate the apphost.\r\n\r\nLikely, we will implement this by generating \"download only package references\" for a package which contains the app host.  This will depend on the RID, so we will need to use the RID graph (see #10104) to resolve the best apphost RID to use.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10475","RelatedDescription":"Open issue \"Acquire and use AppHost for framework dependent apps targeting .NET Core 3 and up\" (#10475)"},{"Id":"391290462","IsPullRequest":false,"CreatedAt":"2018-12-14T21:47:14","Actor":"vitek-karas","Number":"10474","RawContent":null,"Title":"Project with multiple RuntimeIdentifiers is missing exe in Self Contained deployment","State":"open","Body":"_From @Suchiman on December 13, 2018 17:20_\n\nWith a csproj looking like\r\n```csproj\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <RuntimeIdentifiers>win10-x64;win7-x86</RuntimeIdentifiers>\r\n    <LangVersion>latest</LangVersion>\r\n    <AspNetCoreModuleName>AspNetCoreModule</AspNetCoreModuleName>\r\n    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>\r\n  </PropertyGroup>\r\n```\r\nand a publish definition looking like\r\n```XML\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <WebPublishMethod>Package</WebPublishMethod>\r\n    <LastUsedBuildConfiguration>Release</LastUsedBuildConfiguration>\r\n    <LastUsedPlatform>Any CPU</LastUsedPlatform>\r\n    <SiteUrlToLaunchAfterPublish />\r\n    <LaunchSiteAfterPublish>True</LaunchSiteAfterPublish>\r\n    <ExcludeApp_Data>False</ExcludeApp_Data>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <ProjectGuid>33bc8379-5f2a-45eb-ae65-aa8cd2c62a72</ProjectGuid>\r\n    <DesktopBuildPackageLocation>$(BUILD_ARTIFACTSTAGINGDIRECTORY)\\Project.zip</DesktopBuildPackageLocation>\r\n    <PackageAsSingleFile>true</PackageAsSingleFile>\r\n    <DeployIisAppPath />\r\n    <PublishDatabaseSettings>\r\n      <Objects xmlns=\"\" />\r\n    </PublishDatabaseSettings>\r\n    <SelfContained>true</SelfContained>\r\n    <UseAppHost>true</UseAppHost>\r\n    <_IsPortable>false</_IsPortable>\r\n    <RuntimeIdentifier>win7-x86</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nPerforming a publish will generate an self contained looking output except that the `Project.exe` is missing and there's only a `Project.dll`\r\n\r\nChanging \r\n```csproj\r\n    <RuntimeIdentifiers>win10-x64;win7-x86</RuntimeIdentifiers>\r\n```\r\nto\r\n```csproj\r\n    <RuntimeIdentifier>win7-x86</RuntimeIdentifier>\r\n```\r\nfixes this but has https://github.com/dotnet/core-setup/issues/4865 as a side effect\n\n_Copied from original issue: dotnet/core#2147_","Url":"https://github.com/dotnet/cli/issues/10474","RelatedDescription":"Open issue \"Project with multiple RuntimeIdentifiers is missing exe in Self Contained deployment\" (#10474)"},{"Id":"391045743","IsPullRequest":false,"CreatedAt":"2018-12-14T17:35:04","Actor":"yevchenko-oleksandr","Number":"10471","RawContent":null,"Title":"deleted","State":"closed","Body":"\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10471","RelatedDescription":"Closed issue \"deleted\" (#10471)"},{"Id":"391198702","IsPullRequest":true,"CreatedAt":"2018-12-14T17:24:36","Actor":"livarcocc","Number":"10473","RawContent":null,"Title":"Updating MSBuild to 16.0.0-preview.284","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/10473","RelatedDescription":"Open PR \"Updating MSBuild to 16.0.0-preview.284\" (#10473)"},{"Id":"390981849","IsPullRequest":true,"CreatedAt":"2018-12-14T06:23:08","Actor":"livarcocc","Number":"10470","RawContent":null,"Title":"Update MSBuild to 16.0.0-preview.284","State":"open","Body":"This should contain the binding redirect fix that we need to unblock the SDk builds.\r\n\r\nThis msbuild version will also need to be inserted into the dotnet/toolset repo.\r\n","Url":"https://github.com/dotnet/cli/pull/10470","RelatedDescription":"Open PR \"Update MSBuild to 16.0.0-preview.284\" (#10470)"},{"Id":"389996026","IsPullRequest":true,"CreatedAt":"2018-12-14T06:16:23","Actor":"jainaashish","Number":"10463","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli","Url":"https://github.com/dotnet/cli/pull/10463","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10463)"},{"Id":"389754456","IsPullRequest":true,"CreatedAt":"2018-12-14T06:15:30","Actor":"dotnet-maestro[bot]","Number":"10460","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18612.12\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10460","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10460)"},{"Id":"390923155","IsPullRequest":false,"CreatedAt":"2018-12-14T00:58:22","Actor":"wli3","Number":"10469","RawContent":null,"Title":"Extra new line when tool restore is successful","State":"open","Body":"```\r\nλ dotnet tool restore\r\nTool 't-rex' (version '1.0.109') was restored. Available commands: t-rex\r\nTool 'dotnetsay' (version '2.1.4') was restored. Available commands: dotnetsay\r\n\r\n\r\nRestore was successful.\r\n```","Url":"https://github.com/dotnet/cli/issues/10469","RelatedDescription":"Open issue \"Extra new line when tool restore is successful\" (#10469)"},{"Id":"389061467","IsPullRequest":false,"CreatedAt":"2018-12-13T20:47:16","Actor":"ConnorChristie","Number":"10458","RawContent":null,"Title":"Adding dotnet tool from custom source doesn't work on Ubuntu","State":"closed","Body":"## Steps to reproduce\r\nTry installing the following tool from myget pre-release source:\r\n```\r\ndotnet tool install -g Nethereum.Generator.Console --version 1.0.2-CI-20181129-133640 --add-source https://www.myget.org/F/nethereum/api/v3/index.json\r\n```\r\n\r\n## Expected  behavior\r\n```\r\nYou can invoke the tool using the following command: Nethereum.Generator.Console\r\nTool 'nethereum.generator.console' (version '1.0.2-ci-20181129-133640') was successfully installed.\r\n```\r\n\r\n## Actual behavior\r\n```\r\nThe settings file in the tool's NuGet package is invalid: Failed to retrieve tool configuration: Could not find a part of the path '/home/vsts/.dotnet/tools/.store/nethereum.generator.console/1.0.2-ci-20181129-133640/nethereum.generator.console/1.0.2-CI-20181129-133640/tools/netcoreapp2.1/any/DotnetToolSettings.xml'.\r\nTool 'nethereum.generator.console' failed to install. Please contact the tool author for assistance.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n2018-12-09T20:35:08.3469399Z .NET Core SDK (reflecting any global.json):\r\n2018-12-09T20:35:08.3470064Z  Version:   2.1.500\r\n2018-12-09T20:35:08.3476095Z  Commit:    b68b931422\r\n2018-12-09T20:35:08.3476541Z \r\n2018-12-09T20:35:08.3476837Z Runtime Environment:\r\n2018-12-09T20:35:08.3477067Z  OS Name:     ubuntu\r\n2018-12-09T20:35:08.3477314Z  OS Version:  16.04\r\n2018-12-09T20:35:08.3477560Z  OS Platform: Linux\r\n2018-12-09T20:35:08.6814327Z  RID:         ubuntu.16.04-x64\r\n2018-12-09T20:35:08.7161135Z  Base Path:   /usr/share/dotnet/sdk/2.1.500/\r\n2018-12-09T20:35:08.7208165Z \r\n2018-12-09T20:35:08.7208445Z Host (useful for support):\r\n2018-12-09T20:35:08.7208576Z   Version: 2.1.6\r\n2018-12-09T20:35:08.7208682Z   Commit:  3f4f8eebd8\r\n2018-12-09T20:35:08.7208828Z \r\n2018-12-09T20:35:08.7208939Z .NET Core SDKs installed:\r\n2018-12-09T20:35:08.7209048Z   1.0.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209249Z   1.1.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209363Z   1.1.5 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209467Z   1.1.7 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209605Z   1.1.8 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209717Z   1.1.9 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209819Z   1.1.10 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209979Z   1.1.11 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210092Z   2.0.0 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210194Z   2.0.3 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210295Z   2.1.2 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210573Z   2.1.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210733Z   2.1.100 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210769Z   2.1.101 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210859Z   2.1.102 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210934Z   2.1.103 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210966Z   2.1.104 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211014Z   2.1.105 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211045Z   2.1.200 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211123Z   2.1.201 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211156Z   2.1.202 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211185Z   2.1.300 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211214Z   2.1.301 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211296Z   2.1.302 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211326Z   2.1.400 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211355Z   2.1.401 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211603Z   2.1.402 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211640Z   2.1.403 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211676Z   2.1.500 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211700Z \r\n2018-12-09T20:35:08.7211738Z .NET Core runtimes installed:\r\n2018-12-09T20:35:08.7211824Z   Microsoft.AspNetCore.All 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7211867Z   Microsoft.AspNetCore.All 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212087Z   Microsoft.AspNetCore.All 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212174Z   Microsoft.AspNetCore.All 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212215Z   Microsoft.AspNetCore.All 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212365Z   Microsoft.AspNetCore.All 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212451Z   Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212491Z   Microsoft.AspNetCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212529Z   Microsoft.AspNetCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212609Z   Microsoft.AspNetCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212650Z   Microsoft.AspNetCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212697Z   Microsoft.AspNetCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212736Z   Microsoft.AspNetCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212819Z   Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212864Z   Microsoft.NETCore.App 1.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7212904Z   Microsoft.NETCore.App 1.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7212990Z   Microsoft.NETCore.App 1.0.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213029Z   Microsoft.NETCore.App 1.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213067Z   Microsoft.NETCore.App 1.0.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213147Z   Microsoft.NETCore.App 1.0.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213196Z   Microsoft.NETCore.App 1.0.12 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213234Z   Microsoft.NETCore.App 1.0.13 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213311Z   Microsoft.NETCore.App 1.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213351Z   Microsoft.NETCore.App 1.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213397Z   Microsoft.NETCore.App 1.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213507Z   Microsoft.NETCore.App 1.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213547Z   Microsoft.NETCore.App 1.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213585Z   Microsoft.NETCore.App 1.1.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213624Z   Microsoft.NETCore.App 1.1.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213706Z   Microsoft.NETCore.App 1.1.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213753Z   Microsoft.NETCore.App 2.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213791Z   Microsoft.NETCore.App 2.0.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213873Z   Microsoft.NETCore.App 2.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213920Z   Microsoft.NETCore.App 2.0.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213957Z   Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214043Z   Microsoft.NETCore.App 2.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214083Z   Microsoft.NETCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214122Z   Microsoft.NETCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214203Z   Microsoft.NETCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214365Z   Microsoft.NETCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214404Z   Microsoft.NETCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214443Z   Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214527Z   Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\nThis is an Azure hosted Ubuntu-16.04 environment.\r\n\r\nI am only having this problem on Ubuntu 16.04, otherwise it works on macOS Mojave and Windows 10 as expected.","Url":"https://github.com/dotnet/cli/issues/10458","RelatedDescription":"Closed issue \"Adding dotnet tool from custom source doesn't work on Ubuntu\" (#10458)"},{"Id":"390254603","IsPullRequest":false,"CreatedAt":"2018-12-13T15:05:55","Actor":"nguerrera","Number":"10466","RawContent":null,"Title":"Issues compiling after installing SDK 2.2","State":"closed","Body":"_From @SkinnySackboy on December 11, 2018 15:45_\n\nHi,\r\n\r\nHaving already been using .NET Core 2.0 and 2.1 in production already, earlier this week we decided to start upgrading to .NET Core 2.2. On our machines (i.e. in Visual Studio), so far so good - we installed the SDK without having modified any projects and everything still works as it always used to.\r\n\r\nOn our TeamCity agents, we decided to do the same as we have in the past, i.e. to install the .NET Core 2.2 SDK. This is where the interesting problems start. Suddenly, our existing solutions which contain a .NET Core 2.1 project (event unit tests) started failing with the following error:\r\n\r\n**error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)**\r\n\r\nThis does not happen from Visual Studio - it only seems to happen when using the dotnet CLI. It gets even more interesting as if we first compile from Visual Studio and subsequently run dotnet build from the command line, it all works. If however you delete the bin/obj folders, dotnet build from the command line fails with the previous error.\r\n\r\nHas anyone else come across this issue, as I was not expecting the mere presence of the 2.2 SDK to suddenly cause all previous builds still targeting .NET Core 2.1 to start failing?\r\n\r\nThanks in advance\n\n_Copied from original issue: dotnet/core#2130_","Url":"https://github.com/dotnet/cli/issues/10466","RelatedDescription":"Closed issue \"Issues compiling after installing SDK 2.2\" (#10466)"},{"Id":"390362977","IsPullRequest":false,"CreatedAt":"2018-12-12T22:51:13","Actor":"ap0llo","Number":"10467","RawContent":null,"Title":"dotnet pack: Cannot change PackageId based on TFM","State":"closed","Body":"## Scenario\r\n\r\nI'm tyring to package up a console application / tool targeting both `netcoreapp2.1` and `net461`. For .NET Core I want to provide the tool as global tool, for .NET framework, the tool should be packaged as a \"tools\" package (a plain `.exe` inside the `tools` directory). I'd like to create two packages, one for each target platform.\r\n\r\n## Steps to reproduce\r\n\r\n1. Create a new console application: `dotnet new console`\r\n2. Add `net461` as additional target framework\r\n3. Set `PackageId` using a conditional `PropertyGroup`\r\n4. Run `dotnet build` and `dotnet pack`\r\n\r\nProject file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net461;netcoreapp2.1</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net461' \">\r\n    <IsTool>true</IsTool>    \r\n    <PackageId>Package_MultiTargeted_NetFramework</PackageId>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'netcoreapp2.1' \">\r\n    <PackAsTool>true</PackAsTool>\r\n    <PackageId>Package_MultiTargeted_NetCore</PackageId>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n(Full repo, including a Framework-only and core-only tool can be found [here](https://github.com/ap0llo/repro-dotnet-pack-targetframework-dependent-packageid))\r\n\r\n\r\n## Expected  behavior\r\n`dotnet pack` creates two NuGet packages:\r\n\r\n- one package named `Package_MultiTargeted_NetFramework` containing only the .NET Framework exe inside the `tools` folder\r\n- a second package named `Package_MultiTargeted_NetCore` containing the .NET Core global tool (inside the `tools\\netcoreapp2.1\\any` folder)\r\n\r\n## Actual behavior\r\n\r\nA single package named `MultiTargetedTool` is created, containing \r\n\r\n- the .NET Core global tool\r\n- A `net461` build of the project inside the `lib` folder\r\n- A `netcoreapp2.1` build of the proejct inside the `lib` folder\r\n\r\n![image](https://user-images.githubusercontent.com/2821818/49891736-8c9c8080-fe47-11e8-847e-e775f3d6231e.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10467","RelatedDescription":"Closed issue \"dotnet pack: Cannot change PackageId based on TFM\" (#10467)"},{"Id":"390396402","IsPullRequest":false,"CreatedAt":"2018-12-12T20:29:57","Actor":"dagood","Number":"10468","RawContent":null,"Title":"Add 'dotnet tool install' failure potential reason: 'tool requires a runtime that is not installed'","State":"open","Body":"From https://github.com/dotnet/source-build/issues/926#issuecomment-446345298:\r\n\r\n> [@tmds] 'requires a runtime that is not installed' should be added to 'This failure may have been caused by'.\r\n\r\nhttps://github.com/dotnet/cli/blob/22cbfcb49bd9a38292ac6f66a14158b426daefdb/src/dotnet/commands/dotnet-tool/install/LocalizableStrings.resx#L182-L189\r\n\r\nFailure context:\r\n\r\n```\r\n$ dotnet tool install -g dotnet-dev-certs\r\nerror NU1202: Package dotnet-dev-certs 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / any. Package dotnet-dev-certs 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2) / any\r\nThe tool package could not be restored.\r\nTool 'dotnet-dev-certs' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n```\r\n\r\n/cc @wli3 ","Url":"https://github.com/dotnet/cli/issues/10468","RelatedDescription":"Open issue \"Add 'dotnet tool install' failure potential reason: 'tool requires a runtime that is not installed'\" (#10468)"},{"Id":"390037621","IsPullRequest":false,"CreatedAt":"2018-12-12T18:13:44","Actor":"xavierjohn","Number":"10465","RawContent":null,"Title":"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work","State":"closed","Body":"Trying to publish a .net core exe without the runtime using the following command\r\n\r\n## Steps to reproduce\r\ndotnet publish --configuration Release --runtime win7-x64 --self-contained false --output c:\\outputfolder\r\n\r\n## Expected  behavior\r\nProduces a {application}.exe\r\n\r\n## Actual behavior\r\nProduces apphost.exe that does not work.\r\n\r\nI can run the program using\r\ndotnet.exe application.dll\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.17134\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\nVersion: 2.1.6\r\nCommit: 3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10465","RelatedDescription":"Closed issue \"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work\" (#10465)"},{"Id":"390022633","IsPullRequest":false,"CreatedAt":"2018-12-12T05:52:07","Actor":"donhuvy","Number":"10464","RawContent":null,"Title":"No webpage was found for the web address: https://localhost:5001/","State":"closed","Body":"## Steps to reproduce\r\nUse Windows 10 Pro, Visual studio 2019 Preview\r\n```\r\ndotnet new webapi\r\ndotnet restore\r\ndotnet run\r\n```\r\n\r\n## Expected  behavior\r\nhttps://localhost:5001/ Show webpage\r\n\r\n## Actual behavior\r\nhttps://localhost:5001/ Error\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nC:\\Users\\donhuvy>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.600-preview-009426\r\n Commit:    48b4f2105d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.600-preview-009426\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n<img width=\"960\" alt=\"dotnet1\" src=\"https://user-images.githubusercontent.com/1328316/49840337-8d9cc600-fde5-11e8-9969-957e01a3e58a.png\">\r\n<img width=\"800\" alt=\"dotnet2\" src=\"https://user-images.githubusercontent.com/1328316/49840338-8e355c80-fde5-11e8-8c46-d314285e44c2.png\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10464","RelatedDescription":"Closed issue \"No webpage was found for the web address: https://localhost:5001/\" (#10464)"},{"Id":"389836381","IsPullRequest":true,"CreatedAt":"2018-12-11T17:38:13","Actor":"nugetlurker","Number":"10462","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10462","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10462)"},{"Id":"389836363","IsPullRequest":true,"CreatedAt":"2018-12-11T16:05:45","Actor":"nugetlurker","Number":"10461","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"open","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10461","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10461)"},{"Id":"389447196","IsPullRequest":false,"CreatedAt":"2018-12-10T19:17:18","Actor":"seancpeters","Number":"10459","RawContent":null,"Title":"dotnet tool aspnet-codegenerator looks for executable at wrong path","State":"open","Body":"_From @tbureck on December 8, 2018 23:16_\n\nI'm currently following [this guide](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&tabs=netcore-cli#scaffold-identity-into-an-empty-project) in order to scaffold Identity in my existing ASP.NET Core project. When trying to run the scaffolder command with the help option, though, I'm getting this error message:\r\n\r\n```\r\n> dotnet aspnet-codegenerator --help\r\nThe application to execute does not exist: 'C:\\Users\\Tim\\.dotnet\\tools\\.store\\dotnet-aspnet-codegenerator\\2.2.0-rtm-35687\\dotnet-aspnet-codegener\r\nator\\2.2.0-rtm-35687\\tools\\netcoreapp2.1\\any\\dotnet-aspnet-codegenerator.dll'.\r\n```\r\n\r\nI've checked the .dotnet\\tools\\.store directory and the tool seems to be installed correctly. BUT, it is installed in a `2.2.0` directory instead of the `2.2.0-rtm-35687` directory, which dotnet tool is looking in.\r\n\r\nI've opened [a thread on Stackoverflow](https://stackoverflow.com/questions/53676499/dotnet-tool-aspnet-codegenerator-looks-for-executable-at-wrong-path) as well and someone else seems to have the same issue, which is why I'm creating this issue.\r\n\r\nWhy is it that `dotnet tool` is looking in the `2.2.0-rtm-35687` sub directory instead of the `2.2.0` where it is actually installed?\r\n\r\nEdit: my dotnet version is `2.2.100`\n\n_Copied from original issue: aspnet/Scaffolding#932_","Url":"https://github.com/dotnet/cli/issues/10459","RelatedDescription":"Open issue \"dotnet tool aspnet-codegenerator looks for executable at wrong path\" (#10459)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"391885087","IsPullRequest":true,"CreatedAt":"2018-12-17T20:52:31","Actor":"wtgodbe","Number":"1027","RawContent":null,"Title":"Build Standard entirely against Arcade, without Buildtools [WIP]","State":"open","Body":"This cuts out buildtools entirely from the Standard repo, so that we fully rely on the Arcade SDK to build against instead. This is still a WIP, as I still need to replace the functionality of `ValidateApiCompatForSrc` from Buildtools: https://github.com/dotnet/buildtools/blob/6844ee12987d5bc1a031dbaf2fe7cbc7fdfaa35d/src/Microsoft.DotNet.Build.Tasks/PackageFiles/ApiCompat.targets#L26. However, it currently builds successfully (at least on Windows), so I figured I'd put up a PR for feedback.\r\n\r\n@ericstj @safern @danmosemsft @ViktorHofer @chcosta PTAL\r\n\r\nCC @karelz ","Url":"https://github.com/dotnet/standard/pull/1027","RelatedDescription":"Open PR \"Build Standard entirely against Arcade, without Buildtools [WIP]\" (#1027)"},{"Id":"390383237","IsPullRequest":true,"CreatedAt":"2018-12-17T19:11:23","Actor":"terrajobst","Number":"1014","RawContent":null,"Title":"Add IAsyncDisposable","State":"closed","Body":"This adds API support for the new C# 8 feature to call dispose asynchronously:\r\n\r\n```C#\r\nawait using(var stream = File.OpenWrite(path))\r\n{\r\n    await data.WriteAsync(stream);\r\n}\r\n```\r\n\r\nFor more details, see:\r\n\r\nhttps://github.com/dotnet/csharplang/blob/master/proposals/async-streams.md","Url":"https://github.com/dotnet/standard/pull/1014","RelatedDescription":"Closed or merged PR \"Add IAsyncDisposable\" (#1014)"},{"Id":"391702003","IsPullRequest":true,"CreatedAt":"2018-12-17T15:07:31","Actor":"dotnet-maestro[bot]","Number":"1026","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1026","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1026)"},{"Id":"391465145","IsPullRequest":true,"CreatedAt":"2018-12-16T19:53:13","Actor":"dotnet-maestro[bot]","Number":"1025","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18615.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1025","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1025)"},{"Id":"391463924","IsPullRequest":false,"CreatedAt":"2018-12-16T12:45:44","Actor":"dmitriyse","Number":"1024","RawContent":null,"Title":"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset","State":"open","Body":"Please open new .NetStandard branch with deep refresh of .Net API surface.\r\nCurrently .NetStandard 2.0 and it's successor .NetStandard 2.1 contains everything that were added in .net since version 1.0. Some API is already outdated and another will become outdated soon.\r\n\r\n.Net Standard 2.1 have some positive movements. It's drops some components to out of standard into additional components.\r\n\r\nBut it's not enough. It's time to stay in .Net Standard only good and modern parts.\r\nFor example:\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(T[] array);\r\n     // ...\r\n}\r\n```\r\ncan be replaced with:\r\n\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(Span<T> output);\r\n     // ...\r\n}\r\n```\r\nAssemblies targeting .NetStandard 2.0, .NetStandard 2.1 and proposed .NetStandard 3.0.0 should be capable to work side-by-side inside the same AppDomain.\r\n\r\nTODO: Add diagram.\r\n","Url":"https://github.com/dotnet/standard/issues/1024","RelatedDescription":"Open issue \"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset\" (#1024)"},{"Id":"391376312","IsPullRequest":true,"CreatedAt":"2018-12-15T13:41:30","Actor":"dotnet-maestro[bot]","Number":"1023","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18614.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1023","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1023)"},{"Id":"391131649","IsPullRequest":false,"CreatedAt":"2018-12-14T14:26:01","Actor":"HelgeKeck","Number":"1022","RawContent":null,"Title":"Wrong NetworkInterfaceType on OS X Mojave with .Net Standard 2.0 for WiFi Adapter","State":"open","Body":"On OS X Mojave with .Net Standard 2.0\r\n\r\nfor the WiFi Adapter, System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType()\r\n\r\nreturns\r\nNetworkInterfaceType.Ethernet\r\ninstead of\r\nNetworkInterfaceType.Wireless80211","Url":"https://github.com/dotnet/standard/issues/1022","RelatedDescription":"Open issue \"Wrong NetworkInterfaceType on OS X Mojave with .Net Standard 2.0 for WiFi Adapter\" (#1022)"},{"Id":"391102384","IsPullRequest":true,"CreatedAt":"2018-12-14T13:21:43","Actor":"dotnet-maestro[bot]","Number":"1021","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18613.20\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1021","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1021)"},{"Id":"390839367","IsPullRequest":true,"CreatedAt":"2018-12-13T20:07:29","Actor":"terrajobst","Number":"1020","RawContent":null,"Title":"Reduce noise in reference assemblies","State":"open","Body":"This doesn't change any APIs. It's just reducing noise from in the textual diff of the reference assemblies.\r\n\r\n* Fix trailing whitespace (69cb85e)\r\n* Mark types as partial (c9725f7)\r\n* Replace handwritten base calls with generated ones (78649f6)\r\n","Url":"https://github.com/dotnet/standard/pull/1020","RelatedDescription":"Open PR \"Reduce noise in reference assemblies\" (#1020)"},{"Id":"390833738","IsPullRequest":true,"CreatedAt":"2018-12-13T19:52:44","Actor":"terrajobst","Number":"1019","RawContent":null,"Title":"Require support for default implementations of interfaces","State":"open","Body":"This marker will require all implementations of .NET Standard 2.1 to support default implementations of interfaces. Needless to say that this has runtime impact. The benefit of doing this in the standard is that it allows library authors to use this feature for their interfaces. The downside is that that this is potentially a lot of runtime work. I'm curious to how the board feels about absorbing that change for .NET Standard 2.1, especially @dotnet/nsboard-xamarin and @dotnet/nsboard-unity.","Url":"https://github.com/dotnet/standard/pull/1019","RelatedDescription":"Open PR \"Require support for default implementations of interfaces\" (#1019)"},{"Id":"390830254","IsPullRequest":true,"CreatedAt":"2018-12-13T19:42:55","Actor":"terrajobst","Number":"1018","RawContent":null,"Title":"WIP: Add support for Index and Range","State":"open","Body":"This adds the basic APIs for `Index` and `Range`. However, it misses most of the [companion APIs](https://github.com/dotnet/designs/blob/master/accepted/system-range/system-range.md#companion-apis) because they don't even exist in CoreFx yet. The work is tracked in https://github.com/dotnet/corefx/issues/34076. Once done, I'll update the PR to reflect the final API shape.\r\n\r\nFor now, this PR is just a tracking item to remind us to get it done for 2.1.","Url":"https://github.com/dotnet/standard/pull/1018","RelatedDescription":"Open PR \"WIP: Add support for Index and Range\" (#1018)"},{"Id":"390822437","IsPullRequest":true,"CreatedAt":"2018-12-13T19:20:57","Actor":"terrajobst","Number":"1017","RawContent":null,"Title":"WIP: Add IAsyncEnumerable<T>","State":"open","Body":"This API is depending on the CoreFX work: dotnet/corefx#33909. Once we closed on the design I'll update this PR.","Url":"https://github.com/dotnet/standard/pull/1017","RelatedDescription":"Open PR \"WIP: Add IAsyncEnumerable<T>\" (#1017)"},{"Id":"390444044","IsPullRequest":true,"CreatedAt":"2018-12-13T18:57:05","Actor":"wtgodbe","Number":"1015","RawContent":null,"Title":"Enable publishing to build-assets registry","State":"closed","Body":"Now that Standard is placing build output in `artifacts`, we can opt-in to publishing build assets to the BAR.\r\n\r\n@chcosta @mmitche PTAL","Url":"https://github.com/dotnet/standard/pull/1015","RelatedDescription":"Closed or merged PR \"Enable publishing to build-assets registry\" (#1015)"},{"Id":"390668875","IsPullRequest":true,"CreatedAt":"2018-12-13T13:31:43","Actor":"dotnet-maestro[bot]","Number":"1016","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18612.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1016","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1016)"},{"Id":"390354570","IsPullRequest":true,"CreatedAt":"2018-12-12T23:16:02","Actor":"terrajobst","Number":"1012","RawContent":null,"Title":"Add private fields for structs","State":"closed","Body":"No public API changes, but this fixes #678. \r\n\r\nIn a nutshell, the compiler needs to know whether a struct has any fields in order to apply definitive assignment rules. While stripping all private fields from types is generally OK, we can't do this for structs. Fortunately, for private fields the compiler doesn't really care what they are, but what their characteristics are. For example:\r\n\r\n1. Does the struct have any fields?\r\n\r\n2. Does the struct contain any reference types (to validate generic instantiations that have the unmanaged constraint)?\r\n\r\n3. Does the struct use the generic parameter in a field declaration (to validate cyclic layout problems)?\r\n\r\nThis adds dummy fields to structs to conform to these rules. These aren't computed separately but are instead taken from .NET Core.\r\n\r\nFor more details, see this issue in CoreFX:\r\n\r\nhttps://github.com/dotnet/corefx/issues/6185","Url":"https://github.com/dotnet/standard/pull/1012","RelatedDescription":"Closed or merged PR \"Add private fields for structs\" (#1012)"},{"Id":"390377097","IsPullRequest":true,"CreatedAt":"2018-12-12T19:35:16","Actor":"terrajobst","Number":"1013","RawContent":null,"Title":"Add missing readonly modifiers","State":"open","Body":"This fixes #842.","Url":"https://github.com/dotnet/standard/pull/1013","RelatedDescription":"Open PR \"Add missing readonly modifiers\" (#1013)"},{"Id":"390224712","IsPullRequest":false,"CreatedAt":"2018-12-12T19:00:27","Actor":"YairHalberstadt","Number":"1011","RawContent":null,"Title":"Add HashSet.TryGetValue to .Net Standard","State":"closed","Body":"This method is already implemented by .Net Core 2.0 and .Net Framework 4.7.2, so I imagine this would be relatively easy to include in .Net Standard 2.1.","Url":"https://github.com/dotnet/standard/issues/1011","RelatedDescription":"Closed issue \"Add HashSet.TryGetValue to .Net Standard\" (#1011)"},{"Id":"388028724","IsPullRequest":true,"CreatedAt":"2018-12-12T18:55:14","Actor":"terrajobst","Number":"999","RawContent":null,"Title":"Sync .NET Standard's RefEmit with .NET Framework","State":"closed","Body":"Fixes #987\r\n\r\nThe point of the sync is to get increase parity with .NET Framework and thus making it easier to port more existing code to .NET Standard 2.1 (or any platform implementing it).","Url":"https://github.com/dotnet/standard/pull/999","RelatedDescription":"Closed or merged PR \"Sync .NET Standard's RefEmit with .NET Framework\" (#999)"},{"Id":"390052989","IsPullRequest":true,"CreatedAt":"2018-12-12T16:50:02","Actor":"terrajobst","Number":"1009","RawContent":null,"Title":"Clean-up reference assembly","State":"closed","Body":"This aligns the physical representation of the reference assembly with how it look like in .NET Core. No changes to the API surface; it's just to remove noise in future diffs.","Url":"https://github.com/dotnet/standard/pull/1009","RelatedDescription":"Closed or merged PR \"Clean-up reference assembly\" (#1009)"},{"Id":"390215935","IsPullRequest":true,"CreatedAt":"2018-12-12T13:46:59","Actor":"dotnet-maestro[bot]","Number":"1010","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18611.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1010","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1010)"},{"Id":"389518834","IsPullRequest":true,"CreatedAt":"2018-12-12T03:42:31","Actor":"terrajobst","Number":"1007","RawContent":null,"Title":"Update FWLinks to use https instead of http","State":"closed","Body":"This change only affects the string for `[Obsolete]` message.\r\n\r\nJustification: It's generally bad to use `http` these day. Plus, it causes noise in the diffs.","Url":"https://github.com/dotnet/standard/pull/1007","RelatedDescription":"Closed or merged PR \"Update FWLinks to use https instead of http\" (#1007)"},{"Id":"389753658","IsPullRequest":true,"CreatedAt":"2018-12-11T13:11:39","Actor":"dotnet-maestro[bot]","Number":"1008","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18610.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1008","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1008)"},{"Id":"389020595","IsPullRequest":true,"CreatedAt":"2018-12-09T13:10:59","Actor":"dotnet-maestro[bot]","Number":"1006","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1006","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1006)"},{"Id":"388920215","IsPullRequest":true,"CreatedAt":"2018-12-08T13:10:58","Actor":"dotnet-maestro[bot]","Number":"1005","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18607.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1005","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1005)"},{"Id":"388645771","IsPullRequest":true,"CreatedAt":"2018-12-07T13:16:15","Actor":"dotnet-maestro[bot]","Number":"1004","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1004","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1004)"},{"Id":"388551526","IsPullRequest":false,"CreatedAt":"2018-12-07T08:26:51","Actor":"he-dev","Number":"1003","RawContent":null,"Title":"Documentation still not up-to-date","State":"open","Body":"I'd be great if you could keep the documentation up-to-date. Currently the only place where you can find anything about these two _super-secret_ elements:\r\n\r\n- `AppendTargetFrameworkToOutputPath`\r\n- `AppendRuntimeIdentifierToOutputPath `\r\n\r\nis this [comment](https://github.com/dotnet/standard/issues/512#issuecomment-332291043). Are there any more _hidden_ settings? \r\n\r\nDo you think you could improve this and maybe also add other _unofficial_ yet fully supported settings (if there are any)?","Url":"https://github.com/dotnet/standard/issues/1003","RelatedDescription":"Open issue \"Documentation still not up-to-date\" (#1003)"},{"Id":"388402668","IsPullRequest":true,"CreatedAt":"2018-12-06T22:17:23","Actor":"wtgodbe","Number":"1002","RawContent":null,"Title":"Move build output from `bin` to `artifacts`","State":"closed","Body":"This allows Arcade to take over in deciding where we output our build artifacts, so we no longer have everything going into the `bin` dir. I don't believe there's anywhere else that explicitly depends on Standard's `bin` dir, but please let me know if you think I'm missing anything.\r\n\r\n@ericstj @ViktorHofer @weshaggard PTAL\r\n\r\n@danmosemsft CC","Url":"https://github.com/dotnet/standard/pull/1002","RelatedDescription":"Closed or merged PR \"Move build output from `bin` to `artifacts`\" (#1002)"},{"Id":"388373169","IsPullRequest":true,"CreatedAt":"2018-12-06T20:04:55","Actor":"ericstj","Number":"1001","RawContent":null,"Title":"Remove Trimming package from dotnet/standard","State":"closed","Body":"Fixes: https://github.com/dotnet/standard/issues/788\r\n\r\nThose looking for an officially supported trimming tool should try:\r\nhttps://github.com/dotnet/core/blob/master/samples/linker-instructions.md\r\n\r\nThe assembly level linker has moved to:\r\nhttps://github.com/ericstj/Microsoft.Packaging.Tools.Trimming","Url":"https://github.com/dotnet/standard/pull/1001","RelatedDescription":"Closed or merged PR \"Remove Trimming package from dotnet/standard\" (#1001)"},{"Id":"388204009","IsPullRequest":true,"CreatedAt":"2018-12-06T13:11:37","Actor":"dotnet-maestro[bot]","Number":"1000","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1000","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1000)"},{"Id":"387902379","IsPullRequest":true,"CreatedAt":"2018-12-05T20:00:00","Actor":"wtgodbe","Number":"998","RawContent":null,"Title":"Change yml name to azure-pipelines.yml","State":"closed","Body":"In response to https://github.com/dotnet/arcade/issues/690#issuecomment-444562580\r\n\r\nChanges name of our pipeline file to the standard `azure-pipelines.yml`. I'll also update the build defs to reflect this change.\r\n\r\nCC @chcosta ","Url":"https://github.com/dotnet/standard/pull/998","RelatedDescription":"Closed or merged PR \"Change yml name to azure-pipelines.yml\" (#998)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"391953393","IsPullRequest":true,"CreatedAt":"2018-12-18T03:39:24","Actor":"krwq","Number":"34137","RawContent":null,"Title":"Disable TimeZoneInfo_DisplayNameStartsWithOffset on Win 7","State":"closed","Body":"Fixes #34106 \r\n\r\nI do not see this test doing anything which could be improved. Win7 likely contains some invalid data in the registry since we don't do much in TZI code except for reading from registry","Url":"https://github.com/dotnet/corefx/pull/34137","RelatedDescription":"Closed or merged PR \"Disable TimeZoneInfo_DisplayNameStartsWithOffset on Win 7\" (#34137)"},{"Id":"391971432","IsPullRequest":true,"CreatedAt":"2018-12-18T02:33:17","Actor":"dotnet-maestro-bot","Number":"34138","RawContent":null,"Title":"Update CoreClr, CoreSetup to preview-27218-01, preview-27217-02, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34138","RelatedDescription":"Open PR \"Update CoreClr, CoreSetup to preview-27218-01, preview-27217-02, respectively (master)\" (#34138)"},{"Id":"391930388","IsPullRequest":true,"CreatedAt":"2018-12-18T01:00:38","Actor":"safern","Number":"34133","RawContent":null,"Title":"Add publish symbols to new official builds","State":"closed","Body":"With this the only thing left to remove the old builds is add FreeBSD which is next, and we should be getting agents soon and also update the versions repo 😄 \r\n\r\ncc: @danmosemsft","Url":"https://github.com/dotnet/corefx/pull/34133","RelatedDescription":"Closed or merged PR \"Add publish symbols to new official builds\" (#34133)"},{"Id":"391951672","IsPullRequest":false,"CreatedAt":"2018-12-18T00:53:02","Actor":"danmosemsft","Number":"34136","RawContent":null,"Title":"FormatDescription() on an EventRecord does not work if properties are passed in explicitly","State":"open","Body":"\r\nFrom user feedback at \r\nhttps://developercommunity.visualstudio.com/content/problem/385483/eventrecordformatdescriptionienumberable.html\r\n\r\nI verified this same issue exists in the code being ported to .NET Core here https://github.com/dotnet/corefx/pull/33662\r\n\r\n===========start report\r\nTLDR: The EventRecord.FormatDescription(IEnumerable<object> values) in the System.Diagnostics.Eventing namespace is not properly inserting the provided values, and is instead returning as if empty strings were supplied.\r\n\r\nAll testing has been performed on Windows 10, build 17134.345, with .NET Framework 4.7.2.  The project I'm using for testing/reproduction has been tested targeting .NET 4.0, .NET 4.5, .NET 4.5.2, .NET 4.6.2, and .NET 4.7.1, and all display the issue.  \r\n\r\nWhen calling EventRecord.FormatDescription() with no parameters, the event returns properly formatted, with an example shown below: \r\n\r\n\"Application 'C:\\Program Files\\Microsoft Office\\root\\Office16\\ONENOTEM.EXE' (pid 14832) cannot be restarted - Application SID does not match Conductor SID..\"\r\n\r\nHowever, there is an overload available, EventRecord.FormatDescription(IEnumerable<object> values), the function returns a string that essentially appears as if all the supplied values were empty.  Here's an example of the same event above called with the overload using all of the same property values (meaning the output should be identical):\r\n\r\n\"Application '' (pid 0) cannot be restarted - .\"\r\n\r\nI've tried both passing the event properties collection in directly, as well as preparing the parameters as a List<object> that is then cast to an IEnumerable<object> prior to passing it in in hopes of removing any odd conversion issues.\r\n\r\nI've stepped through the reference source, and the .NET framework isn't really doing any heavy lifting here, it's basically just a passthrough layer to the underlying WinEvt API, ultimately calling the function described here - https://docs.microsoft.com/en-us/windows/desktop/api/winevt/nf-winevt-evtformatmessage\r\n\r\n This leads me to believe one of two things is the case:\r\n\r\nOption 1: The .NET Framework is misusing the WinEvt API, perhaps failing to supply a proper value for one of the inputs or flags, and thus getting an odd result.  I'm really hoping this is the answer, as I think it would be the easiest to resolve.\r\n\r\nOption 2: The underlying WinEvt API is not working as expected even with a proper call.  I have no idea how to even begin debugging (or even reporting) an error at this layer, but I'm assuming the MS folks have the tools and connections to follow up on this.  \r\n\r\nThis seems to potentially have been reported as far back as 2007 (https://qa.social.msdn.microsoft.com/Forums/vstudio/en-US/7e0f9fd5-c421-4e13-ac02-211e51189305/how-to-use-eventrecordformatdescriptionienumerableobject?forum=netfxbcl), and I'm also seeing a recent StackOverflow issue that seems to be the same (https://stackoverflow.com/questions/53328834/cannot-get-eventrecord-formatdescriptionienumerableobject-to-work)\r\n\r\nI've posted basic reproduction code to a GitHub repo, available here: https://github.com/OperatorOverload/WinEventErrorRepro\r\n\r\n```c#\r\n            EventLogQuery eventsQuery = new EventLogQuery(\"Application\",\r\n                PathType.LogName, queryString);\r\n            EventLogReader = new EventLogReader(\"*[System/Level=3]\");\r\n\r\n            for (EventRecord eventInstance = logReader.ReadEvent();\r\n                    eventInstance != null; eventInstance = logReader.ReadEvent())\r\n            {\r\n                List<object> varRepSet = new List<object>();\r\n                for (int i = 0; i < eventInstance.Properties.Count; i++)\r\n                {\r\n                    varRepSet.Add((object)(eventInstance.Properties[i].Value.ToString()));\r\n                }\r\n\r\n                    //WORKS\r\n                    string description1 = eventInstance.FormatDescription();\r\n\r\n                    //BROKEN: format description with the built-in properties array\r\n                    string description2 = eventInstance.FormatDescription(eventInstance.Properties);\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/34136","RelatedDescription":"Open issue \"FormatDescription() on an EventRecord does not work if properties are passed in explicitly\" (#34136)"},{"Id":"391949211","IsPullRequest":true,"CreatedAt":"2018-12-18T00:42:08","Actor":"VasiliyNovikov","Number":"34135","RawContent":null,"Title":"Fixed IPv6 address parsing on Linux from /proc/net/tcp6, /proc/net/udp6","State":"open","Body":"Here is the current logic:\r\nhttps://github.com/dotnet/corefx/blob/f7539b726c4bc2385b7f49e5751c1cff2f2c7368/src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/StringParsingHelpers.Connections.cs#L297\r\n```cs\r\n            for (int i = 0; i < 16; i++)\r\n            {\r\n                addressBytes[i] = (byte)(HexToByte(hexAddress[(i * 2)])\r\n                                    + HexToByte(hexAddress[(i * 2) + 1]));\r\n            }\r\n```\r\nIt has 2 issues:\r\n1. It misses left shift by 4 bits of high peace of byte:\r\n2. It parses the whole sequence as a single byte array but instead it should parse it as sequence of 32-bit hex integers. \r\n\r\nAnd it was not caught in the tests since this logic was indirectly verified by itself.\r\nTest uses it to validate parsing of connections from /proc/net/tcp6:\r\nhttps://github.com/dotnet/corefx/blob/bed8a614c02bc24488a3208b80a5553f0e43b3d7/src/System.Net.NetworkInformation/tests/FunctionalTests/ConnectionsParsingTests.cs#L34\r\nUsage\r\nAnd parsing logic itself uses it:\r\nhttps://github.com/dotnet/corefx/blob/bed8a614c02bc24488a3208b80a5553f0e43b3d7/src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/StringParsingHelpers.Connections.cs#L240\r\n","Url":"https://github.com/dotnet/corefx/pull/34135","RelatedDescription":"Open PR \"Fixed IPv6 address parsing on Linux from /proc/net/tcp6, /proc/net/udp6\" (#34135)"},{"Id":"391946618","IsPullRequest":true,"CreatedAt":"2018-12-18T00:28:52","Actor":"Wraith2","Number":"34134","RawContent":null,"Title":"SqlClient minor memory improvements","State":"open","Body":"Some work was done in https://github.com/dotnet/corefx/pull/34047 to limit allocation of closures and move to explicit state passing for continuations. This PR continues/finishes that work and cleans up some of the async code to be more readable.\r\n\r\nAsyncHelper had a few methods which took unused parameters, either internal or external connections, with names that indicated those connections were going to be closed. The parameters were never used. I judged these to be dead code and eliminated the parameters and all call sites using them.\r\n\r\nthe function ContinueTaskPend was removed as dead code with no callers.\r\n\r\nI recommend looking at the changes side by side, the inline diff makes them look confusing\r\n\r\n/cc @saurabh500 @AfsanehR @keeratsingh ","Url":"https://github.com/dotnet/corefx/pull/34134","RelatedDescription":"Open PR \"SqlClient minor memory improvements\" (#34134)"},{"Id":"391859122","IsPullRequest":true,"CreatedAt":"2018-12-17T23:44:43","Actor":"safern","Number":"34128","RawContent":null,"Title":"Disable isExternal in helix tests for new CI system for now","State":"closed","Body":"Right now the username is not retrievable in a simple manner rather than adding an extra step where we do a web request and parse the result.\r\n\r\ncc: @danmosemsft \r\n\r\n@dotnet-bot skip CI please","Url":"https://github.com/dotnet/corefx/pull/34128","RelatedDescription":"Closed or merged PR \"Disable isExternal in helix tests for new CI system for now\" (#34128)"},{"Id":"391917335","IsPullRequest":true,"CreatedAt":"2018-12-17T22:31:08","Actor":"wfurt","Number":"34132","RawContent":null,"Title":"update IPv6 parsing for tcp info","State":"open","Body":"fixes #33257 \r\n\r\nThis would be found long time ago if tests did not use same function we test for validation.\r\n\r\nThere were two issues with the implementation:\r\n- when we calculate byte value we need to shift first digit by 4 bits to get upper half of the byte instead of simply adding them together.\r\n- The hex value is written out as four network-byte integers instead of monolithic sequence we assume.   \r\n \r\nI updated existing tests as well as I added one more entry with global IPv6 unicast and I verified that we get same result as `netstat -W -6 -tn`\r\n","Url":"https://github.com/dotnet/corefx/pull/34132","RelatedDescription":"Open PR \"update IPv6 parsing for tcp info\" (#34132)"},{"Id":"391902574","IsPullRequest":true,"CreatedAt":"2018-12-17T21:45:23","Actor":"geoffkizer","Number":"34131","RawContent":null,"Title":"HTTP2: Respect SETTINGS_INITIAL_WINDOW_SIZE and rework SendAsync code structure","State":"open","Body":"Fixes #34059 \r\n\r\nUpdate: I pushed another commit that also implements SETTINGS_MAX_CONCURRENT_STREAMS.\r\n\r\nFixes #31296 \r\nFixes #31514 \r\nFixes #31812\r\nFixes #31813\r\n\r\n@dotnet/ncl ","Url":"https://github.com/dotnet/corefx/pull/34131","RelatedDescription":"Open PR \"HTTP2: Respect SETTINGS_INITIAL_WINDOW_SIZE and rework SendAsync code structure\" (#34131)"},{"Id":"391885789","IsPullRequest":false,"CreatedAt":"2018-12-17T20:54:35","Actor":"Anipik","Number":"34130","RawContent":null,"Title":"Regression in AsSpan for uint[] Datatype","State":"open","Body":"Netcoreapp 3.0\r\nSdk Version 3.0.100-preview-009841\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.3, OS=Windows 10.0.17134.471 (1803/April2018Update/Redstone4)\r\nIntel Xeon CPU E5-1650 v4 3.60GHz, 1 CPU, 12 logical and 6 physical cores\r\n.NET Core SDK=3.0.100-alpha1-009630\r\n  [Host]     : .NET Core 3.0.0-preview1-26928-03 (CoreCLR 4.6.26927.03, CoreFX 4.6.26927.03), 64bit RyuJIT\r\n  Job-TQETEJ : .NET Core 3.0.0-preview1-26928-03 (CoreCLR 4.6.26927.03, CoreFX 4.6.26927.03), 64bit RyuJIT\r\n\r\nBuildConfiguration=Release-Intrinsics  Toolchain=netcoreapp3.0  InvocationCount=1  \r\nMaxIterationCount=20  UnrollFactor=1  WarmupCount=1  \r\n\r\n```\r\n|                 Method |     Mean |     Error |    StdDev |    Median | Extra Metric |\r\n|----------------------- |---------:|----------:|----------:|----------:|-------------:|\r\n| AsSpanForUnitBenchmark | 1.445 us | 0.8379 us | 0.9649 us | 0.8400 us |            - |\r\n\r\nSdk version 2.1.401\r\nNetcoreapp2.1\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.3, OS=Windows 10.0.17134.471 (1803/April2018Update/Redstone4)\r\nIntel Xeon CPU E5-1650 v4 3.60GHz, 1 CPU, 12 logical and 6 physical cores\r\n.NET Core SDK=3.0.100-alpha1-009630\r\n  [Host]     : .NET Core 2.1.6 (CoreCLR 4.6.27019.06, CoreFX 4.6.27019.05), 64bit RyuJIT\r\n  Job-JARWGC : .NET Core 2.1.6 (CoreCLR 4.6.27019.06, CoreFX 4.6.27019.05), 64bit RyuJIT\r\n\r\nBuildConfiguration=Release  Toolchain=netcoreapp2.1  InvocationCount=1  \r\nMaxIterationCount=20  UnrollFactor=1  WarmupCount=1  \r\n\r\n```\r\n|                 Method |     Mean |    Error |   StdDev |   Median | Extra Metric |\r\n|----------------------- |---------:|---------:|---------:|---------:|-------------:|\r\n| AsSpanForUnitBenchmark | 48.75 ns | 29.60 ns | 29.07 ns | 65.00 ns |            - |\r\n\r\nThe code for this benchmark is\r\n``` C#\r\n\r\npublic uint[] input;\r\npublic int end;\r\n\r\n [IterationSetup(Target = nameof(AsSpanForUnitBenchmark))]\r\npublic void setup()\r\n {\r\n       int min = 0;\r\n        int max = 100000;\r\n       Random randNum = new Random();\r\n       end = randNum.Next(min, max);\r\n\r\n        input = new uint[max]\r\n       for (int i = 0; i < input.Length; i++)\r\n        {\r\n               input[i] = (uint)randNum.Next(min, max);\r\n        }\r\n}\r\n\r\n[Benchmark]\r\npublic void AsSpanForUnitBenchmark()\r\n{\r\n    input.AsSpan(0, end);\r\n}\r\n```\r\n\r\ncc @danmosemsft @adamsitnik @GrabYourPitchforks \r\n","Url":"https://github.com/dotnet/corefx/issues/34130","RelatedDescription":"Open issue \"Regression in AsSpan for uint[] Datatype\" (#34130)"},{"Id":"391878752","IsPullRequest":true,"CreatedAt":"2018-12-17T20:32:30","Actor":"Marusyk","Number":"34129","RawContent":null,"Title":" System.Security.Cryptography.Pkcs. Refactor DllImports","State":"open","Body":"Issue #33774\r\n\r\nShould I also move all SafeHandles from `System.Security.Cryptography.Pkcs\\src\\Microsoft\\Win32\\SafeHandles` to `Common\\src\\Microsoft\\Win32\\SafeHandles` ?\r\n\r\nBased on #33988\r\n\r\nPlease review","Url":"https://github.com/dotnet/corefx/pull/34129","RelatedDescription":"Open PR \" System.Security.Cryptography.Pkcs. Refactor DllImports\" (#34129)"},{"Id":"391840984","IsPullRequest":false,"CreatedAt":"2018-12-17T18:41:40","Actor":"Tanya-Solyanik","Number":"34127","RawContent":null,"Title":"There is some unprintable characters(&#39) in intellisense description text of System.Drawing.ColorConverter.ConvertFrom() method in the .NET Core app","State":"open","Body":"\r\nVS: Visual Studio 2019 Version 16.0 Preview 1 28329.73\r\nOS: RS6 X64\r\n.NET Version: .NET 4.8 03702.00\r\n.NET SDK: .NET Core 3.0 3.0.100-preview-009812\r\n \r\nSteps to reproduce:\r\nInstall .NET Core 3.0 SDK available from https://github.com/dotnet/core-sdk.\r\nCreate a new WinForms application by using .net core SDK command(e.g. dotnet new winforms –o “MyApp”).\r\nOpen the project, then add System.Drawing.ColorConverter.ConvertFrom() method to buttonExit_Click event.\r\nLook at the intellisense.\r\n Actual:\r\nThe ‘converter’s’ is changed as ‘converter&#39‘.\r\n\r\nVS: Visual Studio 2019 Version 16.0 Preview 1 28329.73\r\nOS: RS6 X64\r\n.NET Version: .NET 4.8 03702.00\r\n.NET SDK: .NET Core 3.0 3.0.100-preview-009812\r\n \r\nSteps to reproduce:\r\nInstall .NET Core 3.0 SDK available from https://github.com/dotnet/core-sdk.\r\nCreate a new WinForms application by using .net core SDK command(e.g. dotnet new winforms –o “MyApp”).\r\nOpen the project, then add System.Drawing.ColorConverter.ConvertFrom() method to buttonExit_Click event.\r\nLook at the intelligence.\r\n Actual:\r\nThe ‘converter’s’ is changed as ‘converter&#39‘.\r\n![image](https://user-images.githubusercontent.com/15823268/50107458-a511ef80-01e7-11e9-9ea6-3b57fe78b471.png)\r\n\r\n\r\nExpected:\r\nThe correct string should be ‘converter’s’.\r\n\r\n![image](https://user-images.githubusercontent.com/15823268/50107483-b5c26580-01e7-11e9-97ab-4706cc3d7410.png)\r\n\r\n\r\n\r\nsrc/System.Drawing.Common/src/System/Drawing/ColorConverter.cs#L121\r\n///      Converts the given object to the **converter's** native type.\r\n\r\nOn build SDK: 3.0.100-preview-009839 `ConvertFrom` method does not show in intellisense at all. \r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34127","RelatedDescription":"Open issue \"There is some unprintable characters(&#39) in intellisense description text of System.Drawing.ColorConverter.ConvertFrom() method in the .NET Core app\" (#34127)"},{"Id":"391829678","IsPullRequest":false,"CreatedAt":"2018-12-17T18:07:34","Actor":"agocke","Number":"34126","RawContent":null,"Title":"System.Collections.Immutable should provide Span APIs and System.Reflection.Metadata should consume them","State":"open","Body":"Specifically, I think ImmutableArray should have a `ReadonlySpan<T> AsSpan<T>()` method and System.Reflection.Metadata can provide overloads that take Span instead of just `byte*`.","Url":"https://github.com/dotnet/corefx/issues/34126","RelatedDescription":"Open issue \"System.Collections.Immutable should provide Span APIs and System.Reflection.Metadata should consume them\" (#34126)"},{"Id":"391534794","IsPullRequest":true,"CreatedAt":"2018-12-17T17:21:25","Actor":"dotnet-maestro-bot","Number":"34121","RawContent":null,"Title":"Update CoreClr, CoreSetup to preview-27217-02, preview-27217-01, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34121","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreSetup to preview-27217-02, preview-27217-01, respectively (master)\" (#34121)"},{"Id":"391802056","IsPullRequest":false,"CreatedAt":"2018-12-17T16:55:18","Actor":"dotnet-mc-bot","Number":"34125","RawContent":null,"Title":"Build failure: imported project not found","State":"closed","Body":"Opened on behalf of @robertborr\n\nWarnings: 3\nStatus Message: failed\n\nBuild : 3.0 - 20181217.02 (Product Build)\nFailing configurations:\n- Windows\n  - netfx-x86\n  - netfx-x64\n  - AllConfigurations-x64\n  - uapaot-x86\n  - uapaot-x64\n  - uapaot-arm64\n  - uapaot-arm\n  - uap-x86\n  - uap-x64\n  - uap-arm\n  - netcoreapp-x86\n  - netcoreapp-x64\n  - netcoreapp-arm64\n  - netcoreapp-arm\n- FreeBSD\n  - x64\n- OSX\n  - x64\n- Linux\n  - arm64\n  - arm\n  - x64\n- Linux-musl\n  - x64\n- RedHat6\n  - x64\n[Mission Control Build Info](https://mc.dot.net/#/product/netcore/30/source/official~2Fcorefx~2Fmaster~2F/type/build~2Fproduct~2F/build/20181217.02/workItem/Orchestration/analysis/external/Link)\n\nthis error, or like it, appears in all the legs:\ncorefx\\src\\publish.proj(6,3): Error MSB4019: The imported project \"E:\\A\\_work\\17\\s\\corefx\\.packages\\microsoft.dotnet.build.tasks.feed\\3.0.0-preview1-03430-01\\build\\Microsoft.DotNet.Build.Tasks.Feed.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\nProcess 'msbuild.exe' exited with code '1'.\n\nthe build machines have msbuild 15.7, its possible that someone took a dependency on a later version that breaks on 15.7","Url":"https://github.com/dotnet/corefx/issues/34125","RelatedDescription":"Closed issue \"Build failure: imported project not found\" (#34125)"},{"Id":"391728284","IsPullRequest":false,"CreatedAt":"2018-12-17T14:08:02","Actor":"MichalStrehovsky","Number":"34124","RawContent":null,"Title":"Exception to throw when interface dispatch is ambiguous","State":"open","Body":"**Proposal**\r\n\r\nThe [default implementation of interface methods feature](https://github.com/dotnet/coreclr/pull/21564) requires an exception to be thrown for the case of a diamond inheritance situation.\r\n\r\nThe exception signifies that there's no most specific implementation of an interface method provided by a class.\r\n\r\nThe situation can occur in a case like this:\r\n\r\n![capture](https://user-images.githubusercontent.com/13110571/50091916-f97b9600-020c-11e9-9228-598e6c9e7e59.png)\r\n\r\nIn the above situation, the dispatch to `IFoo.Frob()` in `Main` is ambiguous between `IBar.Frob` and `IBaz.Frob`.\r\n\r\nWe need an exception type that would be suitable for the runtime to throw in this situation. \r\n\r\n```csharp\r\nnamespace System.Runtime\r\n{\r\n    public class AmbiguousImplementationException : Exception\r\n    {\r\n        public AmbiguousImplementationException(string message) { }\r\n    }\r\n}\r\n```\r\n\r\n**Alternatives considered**\r\n\r\n`System.Reflection.AmbiguousMatchException`. The problem is that this is not a reflection operation and throwing an exception from a Reflection namespace might misleadingly hint that reflection is involved.","Url":"https://github.com/dotnet/corefx/issues/34124","RelatedDescription":"Open issue \"Exception to throw when interface dispatch is ambiguous\" (#34124)"},{"Id":"391727739","IsPullRequest":true,"CreatedAt":"2018-12-17T14:06:42","Actor":"ichensky","Number":"34123","RawContent":null,"Title":"Make optimization in GetHashCode function","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/34123","RelatedDescription":"Open PR \"Make optimization in GetHashCode function\" (#34123)"},{"Id":"391694410","IsPullRequest":false,"CreatedAt":"2018-12-17T12:40:15","Actor":"poizan42","Number":"34122","RawContent":null,"Title":"System.Drawing.Icon.ExtractAssociatedIcon arbitrarily forbids UNC paths","State":"open","Body":"ExtractAssociatedIcon does not allow UNC paths for the simple reason that it explicitly forbids them: https://github.com/dotnet/corefx/blob/24ecf9184fee4cd26446f8d669d8505ac6c5108a/src/System.Drawing.Common/src/System/Drawing/Icon.Windows.cs#L181-L184\r\n\r\nThis is a completely arbitrary restriction since the underlying native call [ExtractAssociatedIcon](https://docs.microsoft.com/en-us/windows/desktop/api/shellapi/nf-shellapi-extractassociatediconw) does not have any such restriction, and it causes software to fail when running from a network location for apparently no reason whatsoever.","Url":"https://github.com/dotnet/corefx/issues/34122","RelatedDescription":"Open issue \"System.Drawing.Icon.ExtractAssociatedIcon arbitrarily forbids UNC paths\" (#34122)"},{"Id":"391519654","IsPullRequest":false,"CreatedAt":"2018-12-17T00:15:24","Actor":"danmosemsft","Number":"34120","RawContent":null,"Title":"build failure on clean repo, \"Unable to load the service index for source \" connecting to dotnet-core-internal-tooling","State":"closed","Body":"This after `git clean -fdx` and checking out the latest master 24ecf9184fee4cd26446f8d669d8505ac6c5108a\r\n\r\n```\r\nC:\\git\\corefx>build\r\n  Restore completed in 42.63 ms for C:\\Users\\danmo\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.18613.4\\tools\\Tools.proj.\r\n  Package Id                             Version        Commands\r\n  ---------------------------------------------------------------------\r\n  coverlet.console                       1.3.0          coverlet\r\n  dotnet-reportgenerator-globaltool      4.0.5-rc2      reportgenerator\r\n    Restoring packages for C:\\git\\corefx\\external\\test-runtime\\optional.csproj...\r\nC:\\git\\corefx\\.dotnet\\sdk\\2.1.401\\NuGet.targets(114,5): error : Unable to load the service index for source https://devdiv.pkgs.visualstudio.com/_packaging/dotnet-core-internal-tooling/nuget/v3/index.json. [C:\\git\\corefx\\external\\test-runtime\\optional.csproj] [C:\\git\\corefx\\build.proj]\r\nC:\\git\\corefx\\.dotnet\\sdk\\2.1.401\\NuGet.targets(114,5): error : Response status code does not indicate success: 401 (Unauthorized). [C:\\git\\corefx\\external\\test-runtime\\optional.csproj] [C:\\git\\corefx\\build.proj]\r\nC:\\git\\corefx\\Tools\\OptionalTooling.targets(84,5): error MSB3073: The command \"C:\\git\\corefx\\.dotnet\\dotnet.exe restore C:\\git\\corefx\\\\external\\test-runtime\\optional.csproj --configfile C:\\git\\corefx\\artifacts\\obj\\build\\generatedNuGetConfig/optional.NuGet.Config /p:RestoreOutputPath=C:\\git\\corefx\\Tools/optional-tool-runtime\\\" exited with code 1. [C:\\git\\corefx\\build.proj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\nMy optional.NuGet.config generated is:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <config>\r\n    <add key=\"globalPackagesFolder\" value=\"C:\\Users\\danmo\\.nuget\\packages\\\" />\r\n  </config>\r\n  <packageSources>\r\n    <add key=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" value=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" />\r\n    <add key=\"https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json\" value=\"https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json\" />\r\n    <add key=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" />\r\n    <add key=\"https://api.nuget.org/v3/index.json\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"https://api.nuget.org/v3/index.json\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"https://www.myget.org/F/xunit/api/v3/index.json\" value=\"https://www.myget.org/F/xunit/api/v3/index.json\" />\r\n    <add key=\"https://dotnet.myget.org/F/sourcelink/api/v3/index.json\" value=\"https://dotnet.myget.org/F/sourcelink/api/v3/index.json\" />\r\n    <add key=\"https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json\" value=\"https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json\" />\r\n    <add key=\"FeedFromProperties\" value=\"https://devdiv.pkgs.visualstudio.com/_packaging/dotnet-core-internal-tooling/nuget/v3/index.json\" />\r\n  </packageSources>\r\n  <packageSourceCredentials>\r\n    <FeedFromProperties>\r\n      <add key=\"Username\" value=\"danmose@microsoft.com\" />\r\n      <add key=\"Password\" value=\"... long base 64 ...\" />\r\n    </FeedFromProperties>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n```\r\n\r\nPerhaps the value in \"Password\" is not valid?\r\n\r\nI am not sure what is special about my system, given it is masking out my nuget.config:\r\n```\r\nC:\\git\\corefx>\\t\\nuget source\r\nRegistered Sources:\r\n\r\n  1.  dotnet-core [Enabled]\r\n      https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\r\n\r\nC:\\git\\corefx>\r\n```\r\n\r\n@ericstj any pointers?","Url":"https://github.com/dotnet/corefx/issues/34120","RelatedDescription":"Closed issue \"build failure on clean repo, \"Unable to load the service index for source \" connecting to dotnet-core-internal-tooling\" (#34120)"},{"Id":"391514718","IsPullRequest":true,"CreatedAt":"2018-12-16T23:00:38","Actor":"VasiliyNovikov","Number":"34119","RawContent":null,"Title":"Linux NetworkInterface.GetIPStatistics - handle values > uint.MaxValue","State":"open","Body":"The story\r\nI was writing a lightweight library to parse /proc/net/dev statistics and verified it against `NetworkInterface.GetIPStatistics` and immediately found that `NetworkInterface.GetIPStatistics` cuts values above `uint.MaxValue` to `uint.MaxValue` since on my Linux VM I have a heavy traffic so receive/transit byte counters are far above 4GB","Url":"https://github.com/dotnet/corefx/pull/34119","RelatedDescription":"Open PR \"Linux NetworkInterface.GetIPStatistics - handle values > uint.MaxValue\" (#34119)"},{"Id":"391506001","IsPullRequest":false,"CreatedAt":"2018-12-16T21:17:55","Actor":"mklement0","Number":"34118","RawContent":null,"Title":"System.Xml.XmlDocument.Save() unexpectedly creates UTF-8 files *with BOM*","State":"open","Body":"`System.Xml.XmlDocument.Save()`, when given a file path to write to, unexpectedly creates UTF-8 encoded files _with BOM_ if the document's XML declaration has an `encoding=\"UTF-8\"` attribute.\r\n\r\n(By contrast, the absence of the `encoding` attribute or absence of an XML declaration altogether causes a BOM-_less_ UTF-8 file to be created, as expected.)\r\n\r\nRepro in PowerShell Core (on any supported platform; PowerShell's `[xml]` cast instantiates a `System.Xml.XmlDocument` from the specified XML string):\r\n\r\n```powershell\r\n([xml] '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><foo />').Save(\"$HOME/t.xml\")\r\nGet-Content -AsByteStream $HOME/t.xml | Select-Object -First 3\r\n```\r\n\r\nThe above yields:\r\n\r\n```none\r\n239\r\n187\r\n191\r\n```\r\n\r\nwhich are the byte values of the UTF-8 BOM (`0xef 0xbb 0xbf`)\r\n","Url":"https://github.com/dotnet/corefx/issues/34118","RelatedDescription":"Open issue \"System.Xml.XmlDocument.Save() unexpectedly creates UTF-8 files *with BOM*\" (#34118)"},{"Id":"391501877","IsPullRequest":true,"CreatedAt":"2018-12-16T20:27:28","Actor":"OliverKohlDSc","Number":"34117","RawContent":null,"Title":"Corrected typo","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/34117","RelatedDescription":"Closed or merged PR \"Corrected typo\" (#34117)"},{"Id":"391383443","IsPullRequest":true,"CreatedAt":"2018-12-16T20:23:41","Actor":"benaadams","Number":"34110","RawContent":null,"Title":"Only cast once when consumedObject == examinedObject","State":"closed","Body":"As casting is not inexpensive\r\n\r\nDrops this from the common path\r\n```diff\r\n-       4D85C9               test     r9, r9\r\n-       7417                 je       SHORT G_M61857_IG05\r\n-       48B94848BDD5F97F0000 mov      rcx, 0x7FF9D5BD4848\r\n-       493909               cmp      qword ptr [r9], rcx\r\n-       7408                 je       SHORT G_M61857_IG05\r\n-       E88BC5845F           call     CORINFO_HELP_CHKCASTCLASS_SPECIAL\r\n-       4C8BC8               mov      r9, rax\r\n```\r\n\r\n/cc @pakrym @davidfowl @ahsonkhan","Url":"https://github.com/dotnet/corefx/pull/34110","RelatedDescription":"Closed or merged PR \"Only cast once when consumedObject == examinedObject\" (#34110)"},{"Id":"391496322","IsPullRequest":true,"CreatedAt":"2018-12-16T19:15:34","Actor":"jlennox","Number":"34116","RawContent":null,"Title":"dotnet/corefx#34115 Fix `XmlUtf8RawTextWriter` out of bounds read.","State":"open","Body":"dotnet/corefx#34115","Url":"https://github.com/dotnet/corefx/pull/34116","RelatedDescription":"Open PR \"dotnet/corefx#34115 Fix `XmlUtf8RawTextWriter` out of bounds read.\" (#34116)"},{"Id":"391495466","IsPullRequest":false,"CreatedAt":"2018-12-16T19:04:24","Actor":"jlennox","Number":"34115","RawContent":null,"Title":"XmlUtf8RawTextWriter can read out of bounds","State":"open","Body":"https://github.com/dotnet/corefx/blob/a10890f4ffe0fadf090c922578ba0e606ebdd16c/src/System.Private.Xml/src/System/Xml/Core/XmlUtf8RawTextWriter.cs#L904\r\n\r\nThe line `if (pSrc[1] == '\\n')` appears 4 times and also appears in `XmlUtf8RawTextWriterAsync`. It performs a check on cursor+1 without checking if it's at the end of the input, causing trailing `\\r`'s to make an out of bounds read.\r\n\r\nPR incoming.\r\n\r\n```CSharp\r\nMemoryStream ms = new MemoryStream();\r\nXmlWriterSettings settings = new XmlWriterSettings\r\n{\r\n    Encoding = Encoding.UTF8,\r\n    NewLineHandling = NewLineHandling.Replace\r\n};\r\n\r\nusing (XmlWriter writer = XmlWriter.Create(ms, settings))\r\n{\r\n    writer.WriteStartDocument();\r\n    writer.WriteElementString(\"test\", \"\\r\");\r\n    writer.Flush();\r\n}\r\n```\r\n\r\nThis code reproduces this but because it does not have any side effect there's no easy to make test for this.\r\n\r\nI wrote non-portable code to setup an exception trap by making a memory page that is readonly/guard to place the \"\\n\" directly before in memory, but there's no clear way to get the code to use something from an unmanaged source from a test project.\r\n\r\n`XmlUtf8RawTextWriter.cs` in general could use a major cleanup. There's extremely heavy copy/pasting. Is this permissible?","Url":"https://github.com/dotnet/corefx/issues/34115","RelatedDescription":"Open issue \"XmlUtf8RawTextWriter can read out of bounds\" (#34115)"},{"Id":"391428526","IsPullRequest":true,"CreatedAt":"2018-12-16T18:59:55","Actor":"dotnet-maestro-bot","Number":"34114","RawContent":null,"Title":"Update CoreClr, CoreSetup to preview-27216-02, preview-27216-01, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34114","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreSetup to preview-27216-02, preview-27216-01, respectively (master)\" (#34114)"},{"Id":"391405788","IsPullRequest":true,"CreatedAt":"2018-12-16T01:30:01","Actor":"Wraith2","Number":"34112","RawContent":null,"Title":"SqlClient remove CheckConnStrSetup attribute","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/10800#event-2027677063\r\nAs title, removes a custom xunit attribute and modernizes the tests to use ConditionalFact throughout.\r\n\r\n/cc @saurabh500","Url":"https://github.com/dotnet/corefx/pull/34112","RelatedDescription":"Closed or merged PR \"SqlClient remove CheckConnStrSetup attribute\" (#34112)"},{"Id":"391390848","IsPullRequest":true,"CreatedAt":"2018-12-15T17:03:37","Actor":"stephentoub","Number":"34111","RawContent":null,"Title":"Disable FileSystemWatcher test on netfx","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/34111","RelatedDescription":"Closed or merged PR \"Disable FileSystemWatcher test on netfx\" (#34111)"},{"Id":"391369867","IsPullRequest":false,"CreatedAt":"2018-12-15T13:16:00","Actor":"TheMinefighter","Number":"34109","RawContent":null,"Title":"Adding a 'yield all' keyword","State":"closed","Body":"Currently we have a `yield return` and a `yield return`. While working with these I noticed that it is often needed to return all items of another `IEnumerable<T>` which results in code like\r\n```\r\nforeach (string s in someIEnumerableOfStrings) {\r\n   yield return s;\r\n}\r\n```\r\nI think a shortcut is needed for doing so:\r\n```\r\nyield all someIEnumerableOfStrings;\r\n```\r\nThis would make the code far more readable, and would greatly improve working with `yield`.\r\n","Url":"https://github.com/dotnet/corefx/issues/34109","RelatedDescription":"Closed issue \"Adding a 'yield all' keyword\" (#34109)"},{"Id":"391415568","IsPullRequest":false,"CreatedAt":"2018-12-14T07:45:49","Actor":"damiand2","Number":"34113","RawContent":null,"Title":"Transaction.Current migrates to new threads even without using async","State":"open","Body":"when using TransactionScope with  TransactionScopeAsyncFlowOption.Enabled current transaction gets copied to new threads that were manually created/queued and have nothign to do with async. With TransactionScopeAsyncFlowOption.Suppress code works as intended (transaction does not propagate to other threads)\r\n\r\nSample code to reproduce issue (.net core 2.1):\r\n\r\n```c#\r\n       class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"TransactionScopeAsyncFlowOption.Enabled\");\r\n            var scope = new TransactionScope(TransactionScopeOption.RequiresNew, TransactionScopeAsyncFlowOption.Enabled);\r\n\r\n            var t = Transaction.Current;\r\n            Console.WriteLine(\"Transaction in main thread present:\" + (t != null));\r\n            var thread = new Thread(Dowork);\r\n            thread.Start();\r\n            ThreadPool.QueueUserWorkItem(ThreadPoolThreadWork);\r\n\r\n\r\n            Console.ReadLine();\r\n        }\r\n\r\n        private static void ThreadPoolThreadWork(object state)\r\n        {\r\n            var t = Transaction.Current;\r\n            Console.WriteLine(\"Transaction in threadpool thread present:\" + (t != null));\r\n        }\r\n\r\n        private static void Dowork(object obj)\r\n        {\r\n\r\n            var t = Transaction.Current;\r\n            Console.WriteLine(\"Transaction in manually created thread present:\" + (t != null));\r\n        }\r\n    }\r\n```","Url":"https://github.com/dotnet/corefx/issues/34113","RelatedDescription":"Open issue \"Transaction.Current migrates to new threads even without using async\" (#34113)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"391940255","IsPullRequest":true,"CreatedAt":"2018-12-18T01:30:16","Actor":"dotnet-bot","Number":"31884","RawContent":null,"Title":"Merge dev15.9.x to dev16.0.x","State":"closed","Body":"\nThis is an automatically generated pull request from dev15.9.x into dev16.0.x.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev15.9.x-to-dev16.0.x\ngit reset --hard upstream/dev16.0.x\ngit merge upstream/dev15.9.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev15.9.x-to-dev16.0.x --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31884","RelatedDescription":"Closed or merged PR \"Merge dev15.9.x to dev16.0.x\" (#31884)"},{"Id":"391940303","IsPullRequest":true,"CreatedAt":"2018-12-18T01:30:10","Actor":"dotnet-bot","Number":"31885","RawContent":null,"Title":"Merge dev15.9.x to dev15.9.x-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev15.9.x into dev15.9.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev15.9.x-to-dev15.9.x-vs-deps\ngit reset --hard upstream/dev15.9.x-vs-deps\ngit merge upstream/dev15.9.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev15.9.x-to-dev15.9.x-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31885","RelatedDescription":"Closed or merged PR \"Merge dev15.9.x to dev15.9.x-vs-deps\" (#31885)"},{"Id":"391956174","IsPullRequest":false,"CreatedAt":"2018-12-18T01:15:46","Actor":"Pilchie","Number":"31893","RawContent":null,"Title":"Track conditionally assigned variables by condition","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-18616-01\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nclass C\r\n{\r\n    object? F()\r\n    {\r\n        bool b = true;\r\n        object? o = b ? new object() : null;\r\n\r\n        return b ? F(o) : null;\r\n    }\r\n\r\n    object F(object o) { return o; }\r\n\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warning \r\n\r\n**Actual Behavior**:\r\nUnitTest1.cs(8,22,8,23): warning CS8604: Possible null reference argument for parameter 'o' in 'object C.F(object o)'.","Url":"https://github.com/dotnet/roslyn/issues/31893","RelatedDescription":"Open issue \"Track conditionally assigned variables by condition\" (#31893)"},{"Id":"391953414","IsPullRequest":false,"CreatedAt":"2018-12-18T01:01:25","Actor":"AmadeusW","Number":"31892","RawContent":null,"Title":"AsyncCompletion: Roslyn incorrectly acts multiple times and throws","State":"open","Body":"**Version Used**: 28417.110.d16.0stg \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. In AspNet**Core** project, in .cshtml file, type `@include datet`\r\n2. Press Ctrl+J\r\n3. Press space or another commit character\r\n\r\n**Expected Behavior**:\r\nCompletion to `@include DateTime`\r\n\r\n**Actual Behavior**:\r\nRoslyn throws when attempting to add a property to the text view's property bag\r\n\r\n```\r\nSystem.ArgumentException: An entry with the same key already exists.\r\n   at System.Collections.Specialized.ListDictionary.Add(Object key, Object value)\r\n   at System.Collections.Specialized.HybridDictionary.Add(Object key, Object value)\r\n   at Microsoft.VisualStudio.Utilities.PropertyCollection.AddProperty(Object key, Object property)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.AsyncCompletion.CompletionSource.<GetCompletionContextAsync>d__16.MoveNext()\r\n```\r\n\r\nNote that completion probes Roslyn multiple times on various buffers.\r\nRoslyn should act only in one case, but signed up to participate in completion in two locations\r\n![image](https://user-images.githubusercontent.com/1673956/50124891-6138dd80-021b-11e9-8181-c6a6318cfcd6.png)\r\nThis is actually the same buffer, but the caret location was projected to two locations (706 and 830) in the following snapshot, which maps to gibberish.\r\n\r\nI think that there are two issues at hand:\r\n1) Roslyn should not double-add a property\r\n2) Editor to investigate weird mapping\r\n\r\n```\r\n// <auto-generated/>\\r\\n#pragma warning disable 1591\\r\\nnamespace AspNetCore\\r\\n{\\r\\n    #line hidden\\r\\n    using TModel = global::System.Object;\\r\\n    using System;\\r\\n    using System.Collections.Generic;\\r\\n    using System.Linq;\\r\\n    using System.Threading.Tasks;\\r\\n    using Microsoft.AspNetCore.Mvc;\\r\\n    using Microsoft.AspNetCore.Mvc.Rendering;\\r\\n    using Microsoft.AspNetCore.Mvc.ViewFeatures;\\r\\n    public class _Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IndexModel>\\r\\n    {\\r\\n        #pragma warning disable 219\\r\\n        private void __RazorDirectiveTokenHelpers__() {\\r\\n        ((System.Action)(() => {\\r\\n#line 1 \\\"C:\\\\Users\\\\amwieczo\\\\source\\\\repos\\\\AspNetCoreWebApp\\\\AspNetCoreWebApp\\\\Index.cshtml\\\"\\r\\ndatet __typeHelper = default(datet);\\r\\n\\r\\n#line default\\r\\n#line hidden\\r\\n        }\\r\\n        ))();\\r\\n        ((System.Action)(() => {\\r\\n }\\r\\n        ))();\\r\\n        ((System.Action)(() => {\\r\\n#line 2 \\\"C:\\\\Users\\\\amwieczo\\\\source\\\\repos\\\\AspNetCoreWebApp\\\\AspNetCoreWebApp\\\\Index.cshtml\\\"\\r\\nIndexModel __typeHelper = default(IndexModel);\\r\\n\\r\\n#line default\\r\\n#line hidden\\r\\n        }\\r\\n        ))();\\r\\n        }\\r\\n        #pragma warning restore 219\\r\\n        #pragma warning disable 0414\\r\\n        private static System.Object __o = null;\\r\\n        #pragma warning restore 0414\\r\\n        #pragma warning disable 1998\\r\\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\\r\\n        {\\r\\n#line 3 \\\"C:\\\\Users\\\\amwieczo\\\\source\\\\repos\\\\AspNetCoreWebApp\\\\AspNetCoreWebApp\\\\Index.cshtml\\\"\\r\\n  \\r\\n\\r\\n#line default\\r\\n#line hidden\\r\\n        }\\r\\n        #pragma warning restore 1998\\r\\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\\r\\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }\\r\\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\\r\\n        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }\\r\\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\\r\\n        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }\\r\\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\\r\\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }\\r\\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\\r\\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }\\r\\n    }\\r\\n}\\r\\n#pragma warning restore 1591\\r\\n\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31892","RelatedDescription":"Open issue \"AsyncCompletion: Roslyn incorrectly acts multiple times and throws\" (#31892)"},{"Id":"391950179","IsPullRequest":false,"CreatedAt":"2018-12-18T00:46:36","Actor":"Pilchie","Number":"31891","RawContent":null,"Title":"Foreach with cast over generic reports nullable?","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-18616-01\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\n\r\nclass C<T>\r\n{\r\n    public C(List<T> list)\r\n    {\r\n        foreach (INotifyPropertyChanged item in list)\r\n            item.PropertyChanged += OnItemPropertyChanged;\r\n    }\r\n\r\n    private void OnItemPropertyChanged(object sender, PropertyChangedEventArgs e)\r\n        => throw new NotImplementedException();\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warning\r\n\r\n**Actual Behavior**:\r\nUnitTest1.cs(10,13,10,17): warning CS8602: Possible dereference of a null reference.","Url":"https://github.com/dotnet/roslyn/issues/31891","RelatedDescription":"Open issue \"Foreach with cast over generic reports nullable?\" (#31891)"},{"Id":"391946889","IsPullRequest":true,"CreatedAt":"2018-12-18T00:30:08","Actor":"jasonmalinowski","Number":"31890","RawContent":null,"Title":"Decouple a bit of RenameTrackingTaggerProvider","State":"open","Body":"This addresses a timing issue, where we would call UpdateTrackingSessionIfRenamable even the session had already been dismissed; this function implicitly assumed the session making the call was still active. Another helper function OnTrackingSessionUpdated which raises the session update events already had checks for this, but UpdateTrackingSessionIfRenamable bypassed that. The core of this fix is to remove the offending code in UpdateTrackingSessionIfRenameable and just have the TrackingSession call OnTrackingSessionUpdated. That's already done in many other places and is much simpler.\r\n\r\nUpon further inspection of UpdateTrackingSessionIfRenamable it was also suspicious because it was having to grovel in the state of the active session to know if it should call CheckNewIdentifier. Moving that check into the function directly simplifies the code and decouples the types just a little bit.\r\n\r\nThis implicitly fixes #30661. The work of me understanding this code eventually led to us realizing that our move to JTF broke this and #31787 is probably necessary as a more general fix. I didn't want to lose this refactoring independent of that change, as to make this a bit cleaner the next time we need to make a change here.","Url":"https://github.com/dotnet/roslyn/pull/31890","RelatedDescription":"Open PR \"Decouple a bit of RenameTrackingTaggerProvider\" (#31890)"},{"Id":"391945502","IsPullRequest":false,"CreatedAt":"2018-12-18T00:23:32","Actor":"agocke","Number":"31889","RawContent":null,"Title":"Range indexer on array should probably not be ref-returning","State":"open","Body":"The following works:\r\n\r\n```C#\r\nusing System;\r\npublic class C {\r\n    public void M(int[] arr) {\r\n        ref int[] x = ref arr[0..2];\r\n    }\r\n}\r\n```\r\n\r\nBut I'm not sure it should.","Url":"https://github.com/dotnet/roslyn/issues/31889","RelatedDescription":"Open issue \"Range indexer on array should probably not be ref-returning\" (#31889)"},{"Id":"391943329","IsPullRequest":true,"CreatedAt":"2018-12-18T00:13:35","Actor":"agocke","Number":"31888","RawContent":null,"Title":"Add EditorConfig to branch publish list","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/31888","RelatedDescription":"Open PR \"Add EditorConfig to branch publish list\" (#31888)"},{"Id":"391940356","IsPullRequest":true,"CreatedAt":"2018-12-18T00:00:32","Actor":"dotnet-bot","Number":"31887","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"open","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31887","RelatedDescription":"Open PR \"Merge master to features/editorconfig-in-compiler\" (#31887)"},{"Id":"391940323","IsPullRequest":true,"CreatedAt":"2018-12-18T00:00:27","Actor":"dotnet-bot","Number":"31886","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31886","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#31886)"},{"Id":"391935299","IsPullRequest":false,"CreatedAt":"2018-12-17T23:38:30","Actor":"vsfeedback","Number":"31883","RawContent":null,"Title":"crash during code analysis -- RenameTracking","State":"open","Body":"<p>crash during automated test run.  crashed after around 8 hours.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/405103/crash-during-code-analysis-rename.html\nVSTS ticketId: 748636_\n_These are the original issue comments:_\n\nsean on 12/11/2018, 09:30 AM (6 days ago): <p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/temp/51819-devenvexe19864.zip\">devenvexe19864.zip</a></p>\n\nsean on 12/12/2018, 11:42 AM (5 days ago): <p>crashed last night also -- in Editor RenameTracking while a modal dialog is being displayed.</p><p>callstack attached as text file because the reporting system won't allow it to be pasted into this window due to it being greater than 10000 characters: <a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/temp/52071-callstack.txt\">callstack.txt</a></p><p>full heap dump is also attached: <a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/temp/52072-v16p-w10-20181212-1325dmp.zip\">v16p-w10-20181212-1325dmp.zip</a></p>\n\nsean on 12/17/2018, 01:16 PM (4 hours ago): <p>Another crash during RenameTracking</p><p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/temp/52765-v16p-w10-20181215-1257.zip\">v16p-w10-20181215-1257.zip</a></p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/31883","RelatedDescription":"Open issue \"crash during code analysis -- RenameTracking\" (#31883)"},{"Id":"391934244","IsPullRequest":false,"CreatedAt":"2018-12-17T23:33:50","Actor":"AlekseyTs","Number":"31882","RawContent":null,"Title":"Make sure AllInOneCSharpCode test resource is updated to cover all new scenarios for \"Nullable Reference Types\" feature","State":"open","Body":"- ```#nullable``` directive\r\n- ```?``` on reference types\r\n- etc.","Url":"https://github.com/dotnet/roslyn/issues/31882","RelatedDescription":"Open issue \"Make sure AllInOneCSharpCode test resource is updated to cover all new scenarios for \"Nullable Reference Types\" feature\" (#31882)"},{"Id":"391932507","IsPullRequest":false,"CreatedAt":"2018-12-17T23:26:41","Actor":"pdelvo","Number":"31881","RawContent":null,"Title":"Nullable analysis fails to understand complicated is (pattern) expression","State":"open","Body":"**Version Used**: Latest supported by SharpLap and VS 2019 Preview 1.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nusing System;\r\n#nullable enable\r\n\r\npublic class C\r\n{\r\n    public object? AProperty { get; set; }\r\n    public void M(C? input)\r\n    {\r\n    \tif (input?.AProperty is string str)\r\n        {\r\n            Console.WriteLine(str.ToString());\r\n            \r\n            // The compiler produces a \"warning CS8602: Possible dereference of a null reference.\" for all the following three lines:\r\n            Console.WriteLine(input?.AProperty.ToString());\r\n            Console.WriteLine(input.AProperty.ToString());\r\n            Console.WriteLine(input.ToString());\r\n        }\r\n    }\r\n}\r\n```\r\nhttps://sharplab.io/#v2:EYLgZgpghgLgrgJwgZwLQQCYEsYHsEDGuAdmFgOapbGpEC2ADlgDYQIA0MIAbm1mAE92GEAGoAPgAEADAAJJARgDcAWABQAYmJxmzKMFayIxfa3XrJAZnkAmWQGF1Ab3UBIK7NzAAVhAIwAflkAQQAFBFwGNhgBWSdZcggYJVlkJJSAX3VZHPlrSQAWWQBZAAp7IOoGOBgASmzclzVc2Vd+WVKqmoCAOjCIqIQY2SxkeQU5ZBgEeuaWxob51sUATlKphB6AFVwAZWnqclLa2tU5pfcFNa7AvvDI6IFtvYPiI5OzpZzL6+JqmDuA0ez32CEOx1Oi3mP06fxqINe70h53mWTUrjRGSAA==\r\n\r\nNote that changing the is pattern to a normal is expression does not make a difference.\r\n**Expected Behavior**:\r\nNo warning is produced.\r\n**Actual Behavior**:\r\nThe compiler emits three CS8602 warnings in the code.\r\n\r\nBecause of the if statement we know that input?.AProperty is not null. This implies that both input and input.AProperty are not null. So none on these statements should produce a warning.","Url":"https://github.com/dotnet/roslyn/issues/31881","RelatedDescription":"Open issue \"Nullable analysis fails to understand complicated is (pattern) expression\" (#31881)"},{"Id":"391932260","IsPullRequest":false,"CreatedAt":"2018-12-17T23:25:36","Actor":"vsfeedback","Number":"31880","RawContent":null,"Title":"Show not defined parameter in popup","State":"open","Body":"<p></p><p>When I press CTRL + SHIFT + space key, the intellisense window could show the parameters not passed to a method, with a different color (or bold)</p><p></p><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/51387-sugestao-vs.png\">sugestao-vs.png</a></p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/402102/show-not-defined-parameter-in-popup.html\nVSTS ticketId: 743743_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 12/9/2018, 08:26 PM (7 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about a week on our next steps.</p>","Url":"https://github.com/dotnet/roslyn/issues/31880","RelatedDescription":"Open issue \"Show not defined parameter in popup\" (#31880)"},{"Id":"391924719","IsPullRequest":false,"CreatedAt":"2018-12-17T22:55:53","Actor":"sharwell","Number":"31879","RawContent":null,"Title":"Move C# and VB snippets to dotnet/roslyn","State":"open","Body":"Currently the snippets are missing. They should be added to GitHub so they can be maintained.","Url":"https://github.com/dotnet/roslyn/issues/31879","RelatedDescription":"Open issue \"Move C# and VB snippets to dotnet/roslyn\" (#31879)"},{"Id":"391924000","IsPullRequest":true,"CreatedAt":"2018-12-17T22:53:25","Actor":"jaredpar","Number":"31878","RawContent":null,"Title":"Enable Mono testing","State":"open","Body":"These issues should be fixed now. Enabling the assemblise again.","Url":"https://github.com/dotnet/roslyn/pull/31878","RelatedDescription":"Open PR \"Enable Mono testing\" (#31878)"},{"Id":"391922893","IsPullRequest":false,"CreatedAt":"2018-12-17T22:49:25","Actor":"vsfeedback","Number":"31877","RawContent":null,"Title":"Dependency Property shortcut Change suggestion","State":"open","Body":"When coding in C# and using the \"propdp\" shortcut, I would suggest that the dependency register be changed from:\r\n\r\n```csharp\r\nDependencyProperty.Register(\"PropertyName\", typeof...\r\n```\r\n\r\nto:\r\n\r\n```csharp\r\nDependencyProperty.Register(nameof(PropertyName), typeof...\r\n```\r\n\r\nThis way if the the developer ever uses <kbd>Ctrl</kbd>+<kbd>R</kbd>, <kbd>R</kbd> to rename the Property it will also apply to the Dependency Property\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/406851/dependency-property-shortcut-change-suggestion.html\r\nVSTS ticketId: 750062_\r\n_These are the original issue comments:_\r\n\r\nJane Wu [MSFT] on 12/13/2018, 05:51 PM (3 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about a week on our next steps.</p>","Url":"https://github.com/dotnet/roslyn/issues/31877","RelatedDescription":"Open issue \"Dependency Property shortcut Change suggestion\" (#31877)"},{"Id":"391921720","IsPullRequest":false,"CreatedAt":"2018-12-17T22:45:38","Actor":"vsfeedback","Number":"31876","RawContent":null,"Title":"Colorize argument names","State":"open","Body":"<p>Currently argument names and arguments are white. It becomes crowded and hard to follow especially when there are multiple arguments. Argument names should have their own color for clarity.</p><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/51416-vs-argument-names.jpg\"> Image:51416-vs-argument-names.jpg</a></p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/402436/colorize-argument-names.html\nVSTS ticketId: 743884_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 12/9/2018, 08:27 PM (7 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about a week on our next steps.</p>","Url":"https://github.com/dotnet/roslyn/issues/31876","RelatedDescription":"Open issue \"Colorize argument names\" (#31876)"},{"Id":"391905885","IsPullRequest":false,"CreatedAt":"2018-12-17T21:55:21","Actor":"jcouv","Number":"31875","RawContent":null,"Title":"Nullable: dealing with generated code in a project","State":"open","Body":"Reported by @Pilchie \r\n\r\nPresently, there are two choices:\r\n- update the generator (which may be difficult)\r\n- leave the feature off at the project level, and only turn it on for non-generated source files","Url":"https://github.com/dotnet/roslyn/issues/31875","RelatedDescription":"Open issue \"Nullable: dealing with generated code in a project\" (#31875)"},{"Id":"391904902","IsPullRequest":false,"CreatedAt":"2018-12-17T21:52:20","Actor":"jcouv","Number":"31874","RawContent":null,"Title":"Nullable: support `var?`","State":"open","Body":"We need to discuss in LDM whether we want this feature, and if so, when. Also, there are open questions on its semantics.","Url":"https://github.com/dotnet/roslyn/issues/31874","RelatedDescription":"Open issue \"Nullable: support `var?`\" (#31874)"},{"Id":"391884923","IsPullRequest":false,"CreatedAt":"2018-12-17T20:52:03","Actor":"praeclarum","Number":"31873","RawContent":null,"Title":"Nullability: Arrays of null objects can be created even though non-null was specified","State":"open","Body":"From: https://twitter.com/R2D221/status/1074765608359608320\r\n\r\nThis code compiles:\r\n\r\n```csharp\r\nstring[] lines = new string[100];\r\n```\r\n\r\neven though `lines` was declared as non-nullable.\r\n\r\nThis also comes up with `var` since it assumes the type is `string[]`.\r\n\r\nIt would be nice if the compiler raised an error letting you know the `lines` is going to be full of nulls and should be redeclared as `string?[] lines`.\r\n\r\n**Version Used**: .NET Core 3.0.100-preview-009812\r\n\r\n**Expected Behavior**: Error\r\n\r\n**Actual Behavior**: No error, runtime crash with NRE\r\n","Url":"https://github.com/dotnet/roslyn/issues/31873","RelatedDescription":"Open issue \"Nullability: Arrays of null objects can be created even though non-null was specified\" (#31873)"},{"Id":"391874784","IsPullRequest":false,"CreatedAt":"2018-12-17T20:20:09","Actor":"Pilchie","Number":"31872","RawContent":null,"Title":"Enabling NullableReferenceTypes breaks \"Theory\" xunit tests","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-18616-01\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\nusing System.Threading.Tasks;\r\nusing Xunit;\r\n\r\nnamespace XUnitTestProject1\r\n{\r\n    public class UnitTest1\r\n    {\r\n        [Theory]\r\n#pragma warning disable xUnit1010 // The value is not convertible to the method parameter type\r\n        [InlineData(new object[] { new[] { \"Debug|x86\" } })]\r\n        [InlineData(new object[] { new[] { \"Debug|x86\", \"Release|x86\" } })]\r\n        [InlineData(new object[] { new[] { \"Debug|x86\", \"Release|x86\", \"Release|AnyCPU\" } })]\r\n#pragma warning restore xUnit1010 // The value is not convertible to the method parameter type\r\n        public Task WhenActiveConfigurationChanges_LoadsConfiguredProject(string[] configurationNames)\r\n        {\r\n            return Task.CompletedTask;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n\r\n    <IsPackable>false</IsPackable>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableReferenceTypes>true</NullableReferenceTypes>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.8.0\" />\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n**Expected Behavior**:\r\nNo xUnit1010, and tests pass\r\n\r\n**Actual Behavior**:\r\nxUnit1010 errors, and if suppressed, tests fail\r\n\r\n**Note**: \r\nRelated to #31740?","Url":"https://github.com/dotnet/roslyn/issues/31872","RelatedDescription":"Open issue \"Enabling NullableReferenceTypes breaks \"Theory\" xunit tests\" (#31872)"},{"Id":"391855266","IsPullRequest":false,"CreatedAt":"2018-12-17T19:23:19","Actor":"Pilchie","Number":"31871","RawContent":null,"Title":"Nullable value type warnings don't follow flow analysis for re-assignment?","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-18616-01\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nusing System;\r\n\r\nclass C\r\n{\r\n    bool IsEnabled(string variable, ref bool? result)\r\n    {\r\n        if (result == null)\r\n        {\r\n            var value = \"\";\r\n            result = string.Equals(value, \"1\", StringComparison.OrdinalIgnoreCase);\r\n        }\r\n\r\n        return result.Value;\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warning\r\n\r\n**Actual Behavior**:\r\nProgram.cs(13,16,13,28): warning CS8629: Nullable value type may be null.\r\n\r\n**Note**:\r\nMay be fixed in latest compiler.  I didn't see this in the dogfood VS, but I did with the package above.  Or the package above is newer than the VS?","Url":"https://github.com/dotnet/roslyn/issues/31871","RelatedDescription":"Open issue \"Nullable value type warnings don't follow flow analysis for re-assignment?\" (#31871)"},{"Id":"391851335","IsPullRequest":false,"CreatedAt":"2018-12-17T19:11:36","Actor":"Pilchie","Number":"31870","RawContent":null,"Title":"FSA reports warnings about nullability needing to be enabled","State":"open","Body":"**Version Used**: \r\nVersion 16.0.0 Preview 2.0 [28414.103.d16.0stg]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Enable C# 8 and `<NullableReferenceTypes>`\r\n2. Annotate a bunch of code for nullability\r\n3. Turn FSA on.\r\n4. Close all files\r\n\r\n**Expected Behavior**:\r\nNo warnings\r\n\r\n**Actual Behavior**:\r\nA bunch of warnings like:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nWarning\tCS8632\tThe annotation for nullable reference types should only be used in code within a '#nullable' context.\tMicrosoft.VisualStudio.ProjectSystem.Managed\tC:\\Code\\project-system\\src\\Microsoft.VisualStudio.ProjectSystem.Managed\\Composition\\OrderPrecedenceImportCollectionExtensions.cs\t59\tActive\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31870","RelatedDescription":"Open issue \"FSA reports warnings about nullability needing to be enabled\" (#31870)"},{"Id":"391844602","IsPullRequest":false,"CreatedAt":"2018-12-17T18:52:06","Actor":"sharwell","Number":"31869","RawContent":null,"Title":"Escape characters on paste","State":"open","Body":"It would be nice to automatically escape special characters when pasting content into a string. If the paste operation triggered an escaping operation, then the first Undo operation after paste would undo just the character escaping.\r\n\r\n| First position of copied region | Pasting outside a literal | Pasting inside a literal |\r\n| --- | --- | --- |\r\n| Inside a text literal | Unescape on paste | Correct escape sequences that change meaning |\r\n| Outside a text literal | As-is | Escape on paste |\r\n| Raw text (e.g. browser) | As-is | Escape on paste |","Url":"https://github.com/dotnet/roslyn/issues/31869","RelatedDescription":"Open issue \"Escape characters on paste\" (#31869)"},{"Id":"391827095","IsPullRequest":false,"CreatedAt":"2018-12-17T18:00:33","Actor":"sharwell","Number":"31868","RawContent":null,"Title":"Spaces are not ignored in declaration statements","State":"open","Body":"**Version Used**: 16.0 Preview 1\r\n\r\n🔗 https://developercommunity.visualstudio.com/content/problem/83437/ignore-spaces-in-declaration-statements.html\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Add a **.editorconfig** with the following setting:\r\n\r\n    ```ini\r\n    csharp_space_around_declaration_statements = ignore\r\n    ```\r\n\r\n2. Add a declaration statement with more than one space between the type and variable name\r\n3. Run a **Format Document** operation\r\n\r\n**Expected Behavior**:\r\n\r\nThe multiple spaces are preserved in the declaration statement.\r\n\r\n**Actual Behavior**:\r\n\r\nThe multiple spaces are collapsed to one space in the declaration statement.\r\n\r\n📝 Note that spaces are ignored around field declarations for the above setting, but this issue relates to declaration statements, i.e. local variable declarations within a member.","Url":"https://github.com/dotnet/roslyn/issues/31868","RelatedDescription":"Open issue \"Spaces are not ignored in declaration statements\" (#31868)"},{"Id":"391819459","IsPullRequest":false,"CreatedAt":"2018-12-17T17:39:28","Actor":"Pilchie","Number":"31867","RawContent":null,"Title":"CS8603 for explicit interface implementation","State":"open","Body":"**Version Used**: \r\nVS2019 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\n\r\npublic struct Enumerator<T> : IEnumerator<T>\r\n{\r\n    object IEnumerator.Current => Current;\r\n\r\n    public T Current => throw null;\r\n    public void Dispose() => throw null;\r\n    public bool MoveNext() => throw null;\r\n    public void Reset() => throw null;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warning\r\n\r\n**Actual Behavior**:\r\nProgram.cs(6,35,6,42): warning CS8603: Possible null reference return.","Url":"https://github.com/dotnet/roslyn/issues/31867","RelatedDescription":"Open issue \"CS8603 for explicit interface implementation\" (#31867)"},{"Id":"391816023","IsPullRequest":false,"CreatedAt":"2018-12-17T17:29:53","Actor":"Pilchie","Number":"31866","RawContent":null,"Title":"Casted generic triggers CS8600 and CS8604","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-18616-01\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\n\r\nclass C<T> : IEnumerable<T>\r\n{\r\n    public void F<U>() where U : T\r\n    {\r\n\r\n        var tmp = new Other<U>();\r\n        foreach (T i in this)\r\n        {\r\n            tmp.Add((U)i);\r\n        }\r\n    }\r\n\r\n    public IEnumerator<T> GetEnumerator()\r\n        => throw new System.NotImplementedException();\r\n\r\n    IEnumerator IEnumerable.GetEnumerator() \r\n        => GetEnumerator();\r\n}\r\n\r\nclass Other<T>\r\n{\r\n    public void Add(T t) { }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warning\r\n\r\n**Actual Behavior**:\r\n1>Program.cs(14,21,14,25): warning CS8600: Converting null literal or possible null value to non-nullable type.\r\n1>Program.cs(14,21,14,25): warning CS8604: Possible null reference argument for parameter 't' in 'void Other<U>.Add(U t)'.","Url":"https://github.com/dotnet/roslyn/issues/31866","RelatedDescription":"Open issue \"Casted generic triggers CS8600 and CS8604\" (#31866)"},{"Id":"391810210","IsPullRequest":false,"CreatedAt":"2018-12-17T17:14:46","Actor":"Pilchie","Number":"31865","RawContent":null,"Title":"CS8625 on call to Interlocked.Exchange with null","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-18616-01\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nusing System.Threading;\r\n\r\nclass C\r\n{\r\n    public C()\r\n    {\r\n        var cts = new CancellationTokenSource();\r\n        Interlocked.Exchange(ref cts, null);\r\n    }\r\n}\r\n``` \r\n\r\n**Expected Behavior**:\r\nNo warning\r\n\r\n**Actual Behavior**:\r\nProgram.cs(8,39,8,43): warning CS8625: Cannot convert null literal to non-nullable reference or unconstrained type parameter.\r\n\r\nAs Interlocked.Exchange isn't annotated, I can't tell why I'm, getting this warning.","Url":"https://github.com/dotnet/roslyn/issues/31865","RelatedDescription":"Open issue \"CS8625 on call to Interlocked.Exchange with null\" (#31865)"},{"Id":"391803300","IsPullRequest":false,"CreatedAt":"2018-12-17T16:57:21","Actor":"Pilchie","Number":"31864","RawContent":null,"Title":"Tuple names shouldn't affect nullability of value types","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-18616-01\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\nusing System;\r\n\r\nclass C\r\n{\r\n    public C()\r\n    {\r\n        DateTime? earliest = DateTime.MaxValue;\r\n        string? earliestPath = null;\r\n        bool hasOutput = false;\r\n\r\n        var x = hasOutput\r\n            ? (earliest, earliestPath)\r\n            : (null, null);\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warnings\r\n\r\n**Actual Behavior**:\r\nProgram.cs(11,17,13,27): warning CS8626: No best nullability for operands of conditional expression '(DateTime? earliest, string? earliestPath)' and '(DateTime?, string?)'.\r\n","Url":"https://github.com/dotnet/roslyn/issues/31864","RelatedDescription":"Open issue \"Tuple names shouldn't affect nullability of value types\" (#31864)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"390122572","IsPullRequest":true,"CreatedAt":"2018-12-18T05:28:55","Actor":"kvochko","Number":"6678","RawContent":null,"Title":"Generate ARM CFIs in the correct order","State":"closed","Body":"This is a CoreRT counterpart to https://github.com/dotnet/coreclr/pull/21505 . Since CFI codes are now generated in prolog, they are already in reverse order, so we don't need to reverse them in CoreRT.\r\nFixes #6626 \r\nCC @jkotas @alpencolt ","Url":"https://github.com/dotnet/corert/pull/6678","RelatedDescription":"Closed or merged PR \"Generate ARM CFIs in the correct order\" (#6678)"},{"Id":"391811403","IsPullRequest":true,"CreatedAt":"2018-12-18T04:45:33","Actor":"Dotnet-GitSync-Bot","Number":"6690","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @StanislavUshakov","Url":"https://github.com/dotnet/corert/pull/6690","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#6690)"},{"Id":"391923515","IsPullRequest":true,"CreatedAt":"2018-12-18T00:30:21","Actor":"trylek","Number":"6691","RawContent":null,"Title":"Fix for static enum field placement","State":"closed","Body":"I found out that my static field placement changes were incorrect\r\nfor enums. This change fixes the deficiency and, in doing so,\r\nit fixes one of the remaining CoreCLR Top200 bug buckets.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6691","RelatedDescription":"Closed or merged PR \"Fix for static enum field placement\" (#6691)"},{"Id":"390931623","IsPullRequest":true,"CreatedAt":"2018-12-17T00:37:04","Actor":"Dotnet-GitSync-Bot","Number":"6686","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @mattwarren","Url":"https://github.com/dotnet/corert/pull/6686","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#6686)"},{"Id":"391466998","IsPullRequest":true,"CreatedAt":"2018-12-17T00:36:49","Actor":"MichalStrehovsky","Number":"6689","RawContent":null,"Title":"Suppress integral constant overflow warnings","State":"closed","Body":"These always show up in CppCodegen because we have a type in CoreLib where the C# compiler generated a `GetHashCode` method with a static integer constant overflow.","Url":"https://github.com/dotnet/corert/pull/6689","RelatedDescription":"Closed or merged PR \"Suppress integral constant overflow warnings\" (#6689)"},{"Id":"391384225","IsPullRequest":true,"CreatedAt":"2018-12-15T14:44:15","Actor":"MichalStrehovsky","Number":"6688","RawContent":null,"Title":"[WIP] Do not use R2R helpers for casting and allocation","State":"open","Body":"This avoids generation of some of the helpers in favor of RyuJIT generating code that does what the helper would do. While this causes an about 1% regression in size of the generated executable, the benefit is better code density and fewer calls.","Url":"https://github.com/dotnet/corert/pull/6688","RelatedDescription":"Open PR \"[WIP] Do not use R2R helpers for casting and allocation\" (#6688)"},{"Id":"391298312","IsPullRequest":true,"CreatedAt":"2018-12-14T22:18:14","Actor":"MarcoRossignoli","Number":"6687","RawContent":null,"Title":"[ILVerify]Added more tests","State":"open","Body":"Added some new tests to new type check.\r\n\r\n/cc @jkotas ","Url":"https://github.com/dotnet/corert/pull/6687","RelatedDescription":"Open PR \"[ILVerify]Added more tests\" (#6687)"},{"Id":"390863483","IsPullRequest":false,"CreatedAt":"2018-12-13T21:17:03","Actor":"tannergooding","Number":"6685","RawContent":null,"Title":"Ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are properly handled with regards to struct packing/layout","State":"open","Body":"The `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are special and are directly mapped as the primitive ABI types (typically referred to as `__m64`, `__m128`, and `__m256`). ProjectN should ensure that these types are appropriately handled before they ship so that types are laid out appropriately in memory and so that it does not become a breaking change to fix them in the future.\r\n\r\nCoreCLR is already correctly handling these types in the VM layer: https://github.com/dotnet/coreclr/blob/master/src/vm/methodtablebuilder.cpp#L9521","Url":"https://github.com/dotnet/corert/issues/6685","RelatedDescription":"Open issue \"Ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are properly handled with regards to struct packing/layout\" (#6685)"},{"Id":"390747404","IsPullRequest":true,"CreatedAt":"2018-12-13T20:33:53","Actor":"trylek","Number":"6683","RawContent":null,"Title":"Clean up CPAOT statics management per Michal's advice","State":"closed","Body":"Based on PR discussion towards my previous change I have prepared\r\nanother PR to clean up static management. I have modified the\r\nimplementation of ComputeHasGCStaticBase in ReadyToRunCompilerContext\r\nand I reverted some of my changes to CorInfoImpl.\r\n\r\nI still don't see how to completely eliminate R2R-specific code\r\nin getFieldInfo as I believe we need the special flag\r\nCORINFO_FIELD_FLAGS.CORINFO_FLG_FIELD_STATIC_IN_HEAP so that JIT takes\r\ncare of the automatic unboxing and we need special treatment\r\nfor fields with types outside of the version bubble.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6683","RelatedDescription":"Closed or merged PR \"Clean up CPAOT statics management per Michal's advice\" (#6683)"},{"Id":"390771984","IsPullRequest":true,"CreatedAt":"2018-12-13T18:06:21","Actor":"Dotnet-GitSync-Bot","Number":"6684","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @fiigii","Url":"https://github.com/dotnet/corert/pull/6684","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6684)"},{"Id":"390693664","IsPullRequest":false,"CreatedAt":"2018-12-13T14:05:37","Actor":"kbaladurin","Number":"6682","RawContent":null,"Title":"[CppCodeGen] Inheritance is missing in some cases","State":"open","Body":"Following sample compiles incorrectly:\r\n```cs\r\nusing System;\r\n\r\nnamespace Hello\r\n{\r\n    internal class Program\r\n    {\r\n        class A<T, U>\r\n        {\r\n\r\n        }\r\n\r\n        class C<T>\r\n        {\r\n\r\n        }\r\n\r\n        class B<T> : A<string, C<T>>\r\n        {\r\n\r\n        }\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            var b = new B<string>();\r\n            Console.WriteLine(\"b = \" + b);\r\n        }\r\n    }\r\n}\r\n```\r\n`B<System.__Canon>` doesn't inherit `A`:\r\n```\r\nnamespace Hello { namespace Hello { class Program_B_1_A__System___Canon_V_ {\r\n                public:\r\n                        static MethodTable * __getMethodTable();\r\n                        static void _ctor(::Hello::Hello::Program_B_1_A__System___Canon_V_*);\r\n                        static void unbox__ctor(::Hello::Hello::Program_B_1_A__System___Canon_V_*);\r\n};\r\n};};\r\n```\r\n\r\nOne of the problems is that `B<System.__Canon>` is emitted before `A<System.__Canon, System.__Canon>`. So the check `_emittedTypes.Contains(nodeType.BaseType)` in `CppWriter.OutputTypeNode` returns false. Are there any guarantees that base type is emitted before type itself?\r\n\r\nThank you!","Url":"https://github.com/dotnet/corert/issues/6682","RelatedDescription":"Open issue \"[CppCodeGen] Inheritance is missing in some cases\" (#6682)"},{"Id":"390340707","IsPullRequest":true,"CreatedAt":"2018-12-12T17:55:04","Actor":"trylek","Number":"6681","RawContent":null,"Title":"Initial support for GC ref map emission in the CPAOT compiler","State":"open","Body":"I have basically forked away ArgIterator and TransitionBlock from\r\nthe calling convention converter and I adapted it to use by the\r\nCPAOT compiler. I have not yet added multi-architecture support,\r\nfor now it only works for the compiler build architecture. There are\r\nalso a few NotImplemented cases I'll fix once I hit them in testing.\r\n\r\nMy initial thinking is that, after finalizing this code and after\r\nwe start working on other architectures, I'll further refactor this\r\ncode based on JanK's suggestion by merging in preprocessed versions\r\nof the ArgIterator source file for the four architectures.\r\n\r\nI also plan to further experiment with runtime architecture\r\nvirtualization that I tried to prototype in a trimmed-down\r\nclone of TransitionBlock I coded up for the purpose of R2RDump\r\nGC ref map decoder and I'm quite pleased with the result which\r\nlooks quite elegant and compact to me.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6681","RelatedDescription":"Open PR \"Initial support for GC ref map emission in the CPAOT compiler\" (#6681)"},{"Id":"388854973","IsPullRequest":true,"CreatedAt":"2018-12-12T17:20:52","Actor":"trylek","Number":"6664","RawContent":null,"Title":"Additional fixes for field placement in CPAOT","State":"closed","Body":"After making improvements to R2RDump to let me smoothly diff CPAOT\r\nand Crossgen code I managed to identify tests crashing to obvious\r\ninconsistencies in access to class / struct fields. There were\r\nmultiple reasons for these inconsistencies and, while I cannot claim\r\nthis change fixes all of them, it fixes quite a few.\r\n\r\nWhile our longer-term plan is to start embedding field placement\r\ninformation in the R2R executables, I believe this change is useful\r\nto both provide immediate fixes for some of the previously failing\r\nCoreCLR tests and to seed the CPAOT field placement algorithm with\r\na closer match to what CoreCLR uses - even if we decide to deviate\r\nfrom that at some point, it's still probably a reasonable starting\r\npoint.\r\n\r\n1) My original implementation of the static field layout placement\r\nwas based on the method Module::BuildStaticsOffsets but that's\r\nincorrect - this method is only used to calculate the required space\r\nfor statics of each type in the module and use this information to\r\ncalculate offsets within a big array that subsequently gets allocated\r\nas part of the DomainLocalModule / ThreadLocalModule structures.\r\nFor the actual field placement, MethodTableBuilder uses the same\r\nalgorithm as the dynamic layout placement so I unified these two\r\nand I refactored the code to cater for the two-level field resolution.\r\n\r\n2) Reverse token lookup for fields was incomplete so I fixed that.\r\n\r\n3) For static struct fields, we must set a special flag in CPAOT,\r\nCORINFO_FIELD_FLAGS.CORINFO_FLG_FIELD_STATIC_IN_HEAP, this triggers\r\nthe proper double indirection code in JIT that caters for implicitly\r\nboxed struct statics in CoreCLR.\r\n\r\n4) For extra-bubble statics, we instead use a special helper\r\nREADYTORUN_HELPER_FieldAddress in accordance with the postprocessing\r\nin ZapInfo::getFieldInfo around lines 2940-2990.\r\n\r\n5) For instance fields, it turns out there's a slight difference in\r\nhow CoreRT vs. CoreCLR decides field layout for structs. In CoreRT,\r\nstructs use sequential layout by default. In CoreCLR, structs use\r\nsequential layout only when they are blittable, otherwise they use\r\nauto layout.\r\n\r\n6) As part of this change I have forked out the method\r\n\"MarshalHelpers.IsBlittableType\" into a separate static class\r\nIsBlittable because the MarshalHelpers carry around a ton of\r\ndependencies that wreak havoc when propagating to all places where\r\nthe blittable check is newly used as part of the field placement\r\nlogic. With this surgical separation I managed to make this change\r\nrequire very few changes to other projects.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6664","RelatedDescription":"Closed or merged PR \"Additional fixes for field placement in CPAOT\" (#6664)"},{"Id":"390260931","IsPullRequest":true,"CreatedAt":"2018-12-12T15:59:02","Actor":"Dotnet-GitSync-Bot","Number":"6680","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @pentp","Url":"https://github.com/dotnet/corert/pull/6680","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6680)"},{"Id":"389384132","IsPullRequest":true,"CreatedAt":"2018-12-12T15:15:55","Actor":"MarcoRossignoli","Number":"6669","RawContent":null,"Title":"[ILVerify]Check interface method implementation","State":"closed","Body":"closes https://github.com/dotnet/corert/issues/6203\r\nOutput message:\r\n```\r\n[MD]: Error: Class implements interface but not method, Class: '[InterfaceImplementation]MissingMethod_InvalidType_InterfaceMethodNotImplemented' Interface: '[InterfaceDefinition]Interface' Method: [InterfaceDefinition]Interface.M1()(class:02000004 interface:09000004 method:06000001).\r\n```\r\n\r\n/cc @jkotas @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/6669","RelatedDescription":"Closed or merged PR \"[ILVerify]Check interface method implementation\" (#6669)"},{"Id":"390184149","IsPullRequest":false,"CreatedAt":"2018-12-12T14:01:12","Actor":"jojify","Number":"6679","RawContent":null,"Title":"Failed to build Chromely (https://github.com/mattkol/Chromely)","State":"closed","Body":"Chromely is built using .Net standard 2.0.\r\nI used latest pre- release version (Install-Package Chromely.CefGlue.Winapi -Version 68.0.0-pre01).\r\nPlease find the attached screenshot.\r\n![sh1](https://user-images.githubusercontent.com/3658295/49859167-dc198700-fe1c-11e8-8782-9f575d75dabe.png)\r\n\r\nI followed steps from the link exactly. (https://github.com/mattkol/Chromely/wiki/Getting-Started-CefGlue-Winapi-(.NET-Core)). \r\nWhen I build the program using visual studio, it runs perfectly. \r\n\r\nBut again when I tried to build using CoreRT, I got the native executable in the native folder. It shows an error:-Value can't be null. parameter name :path1. Attached screen shot.\r\n![sc2](https://user-images.githubusercontent.com/3658295/49860871-a8d8f700-fe20-11e8-83d5-01f549154887.png)\r\n\r\n[chromely Sample.zip](https://github.com/mattkol/Chromely/files/2671351/chromely.Sample.zip)\r\n\r\nI am trying to build a native application using chromely. It will be great if you can take a look into this.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/6679","RelatedDescription":"Closed issue \"Failed to build Chromely (https://github.com/mattkol/Chromely)\" (#6679)"},{"Id":"390121697","IsPullRequest":true,"CreatedAt":"2018-12-12T12:10:26","Actor":"MichalStrehovsky","Number":"6677","RawContent":null,"Title":"Add comment to WinRT SystemSupportsLeapSeconds","State":"closed","Body":"Per https://github.com/dotnet/corert/pull/6672#issuecomment-446430564.","Url":"https://github.com/dotnet/corert/pull/6677","RelatedDescription":"Closed or merged PR \"Add comment to WinRT SystemSupportsLeapSeconds\" (#6677)"},{"Id":"389955581","IsPullRequest":true,"CreatedAt":"2018-12-12T04:40:26","Actor":"Dotnet-GitSync-Bot","Number":"6676","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6676","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6676)"},{"Id":"389835095","IsPullRequest":true,"CreatedAt":"2018-12-11T16:02:59","Actor":"MichalStrehovsky","Number":"6675","RawContent":null,"Title":"Make it possible to align at 32 byte boundaries","State":"open","Body":"This will be necessary to support computing layout for types that embed `Vector256`.\r\n\r\nFollow up on https://github.com/dotnet/corert/pull/6663#issuecomment-445574774.\r\n\r\nThis is foundational work needed to support the new HW intrinsics. We may or may not end up implementing function multiversioning for ready to run for .NET Core 3.0 CPAOT, but being able to compute the layout will let us at least pregenerate method bodies that pass through vector types without actually calling the intrinsics.\r\n\r\nSee individual commits. I'm flexible on whether we should include 47bacbd.","Url":"https://github.com/dotnet/corert/pull/6675","RelatedDescription":"Open PR \"Make it possible to align at 32 byte boundaries\" (#6675)"},{"Id":"389776056","IsPullRequest":true,"CreatedAt":"2018-12-11T13:55:45","Actor":"MichalStrehovsky","Number":"6674","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6674","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6674)"},{"Id":"389496528","IsPullRequest":true,"CreatedAt":"2018-12-11T12:18:32","Actor":"Dotnet-GitSync-Bot","Number":"6671","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6671","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6671)"},{"Id":"389609642","IsPullRequest":true,"CreatedAt":"2018-12-11T10:03:32","Actor":"jkotas","Number":"6673","RawContent":null,"Title":"Delete unnecessary struct initialization","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6673","RelatedDescription":"Closed or merged PR \"Delete unnecessary struct initialization\" (#6673)"},{"Id":"389401689","IsPullRequest":true,"CreatedAt":"2018-12-11T06:06:22","Actor":"MichalStrehovsky","Number":"6670","RawContent":null,"Title":"Rename IlogB -> ILogB","State":"closed","Body":"This was updated in dotnet/coreclr#20912. Fortunately, ApiCompat found it in dotnet/corefx#33956.","Url":"https://github.com/dotnet/corert/pull/6670","RelatedDescription":"Closed or merged PR \"Rename IlogB -> ILogB\" (#6670)"},{"Id":"389560609","IsPullRequest":true,"CreatedAt":"2018-12-11T06:01:27","Actor":"tarekgh","Number":"6672","RawContent":null,"Title":"Fix leap seconds mirrored code","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6672","RelatedDescription":"Closed or merged PR \"Fix leap seconds mirrored code\" (#6672)"},{"Id":"389240063","IsPullRequest":true,"CreatedAt":"2018-12-10T15:53:16","Actor":"Dotnet-GitSync-Bot","Number":"6668","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @stephentoub @tarekgh","Url":"https://github.com/dotnet/corert/pull/6668","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6668)"},{"Id":"388845374","IsPullRequest":true,"CreatedAt":"2018-12-10T10:38:08","Actor":"Dotnet-GitSync-Bot","Number":"6663","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6663","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6663)"},{"Id":"389194828","IsPullRequest":true,"CreatedAt":"2018-12-10T09:32:45","Actor":"MichalStrehovsky","Number":"6667","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"Probably needed to unblock #6663.","Url":"https://github.com/dotnet/corert/pull/6667","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#6667)"},{"Id":"389067443","IsPullRequest":true,"CreatedAt":"2018-12-10T03:28:03","Actor":"MichalStrehovsky","Number":"6666","RawContent":null,"Title":"Fix handling of intrinsic types in RyuJIT","State":"closed","Body":"This should unblock integrations from CoreCLR.","Url":"https://github.com/dotnet/corert/pull/6666","RelatedDescription":"Closed or merged PR \"Fix handling of intrinsic types in RyuJIT\" (#6666)"},{"Id":"389067160","IsPullRequest":false,"CreatedAt":"2018-12-09T21:40:30","Actor":"MichalStrehovsky","Number":"6665","RawContent":null,"Title":"Auto layout algorithm doesn't compute the right size","State":"open","Body":"Found when I was running the tests Tanner added in dotnet/coreclr#15961 (while half of the tests focuses on Vector64/128/256, the second half is a general purpose test and we're failing computing the right sizes).\r\n\r\nI have a fix that is halfway there in https://github.com/MichalStrehovsky/corert/commit/7f94460a4a0e2ea550dfdf26c4c5603bfc22faf3.\r\n\r\nWhat it lacks is handling of Align8 and unit tests.\r\n\r\nFor the record, here's the relevant part of the output of Tanner's test:\r\n\r\n```\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Char].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Double].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int16].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int32].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int64].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.IntPtr].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Single].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt16].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt32].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt64].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UIntPtr].\r\n     Expected: 16; Actual: 9\r\n```","Url":"https://github.com/dotnet/corert/issues/6665","RelatedDescription":"Open issue \"Auto layout algorithm doesn't compute the right size\" (#6665)"},{"Id":"388775575","IsPullRequest":true,"CreatedAt":"2018-12-07T20:23:02","Actor":"Dotnet-GitSync-Bot","Number":"6662","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6662","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6662)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"391940621","IsPullRequest":true,"CreatedAt":"2018-12-18T03:30:25","Actor":"dotnet-bot","Number":"2757","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2757","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2757)"},{"Id":"391887120","IsPullRequest":true,"CreatedAt":"2018-12-17T21:54:39","Actor":"wli3","Number":"2756","RawContent":null,"Title":"No apphost in PackAsTool","State":"closed","Body":"fix #https://github.com/dotnet/sdk/issues/2749","Url":"https://github.com/dotnet/sdk/pull/2756","RelatedDescription":"Closed or merged PR \"No apphost in PackAsTool\" (#2756)"},{"Id":"391643563","IsPullRequest":false,"CreatedAt":"2018-12-17T16:31:07","Actor":"YunWeiaa","Number":"2754","RawContent":null,"Title":"For .Net Core 3.0, create a winforms app, dotnet run without the windows box poping up.","State":"closed","Body":"### Description:\r\nCreate a winforms app. Build and run. \r\ndotnet new winforms -o MyWinFormsApp \r\ncd MyWinFormsApp \r\ndotnet build \r\ndotnet run\r\n\r\n**Expected**: It should appear a windows box like this\r\n![image](https://user-images.githubusercontent.com/33921754/50080741-c4c90800-0227-11e9-8163-39413bd95ebe.png)\r\n\r\n**Actual**: It doesn’t pop up a windows box.\r\n![image](https://user-images.githubusercontent.com/33921754/50080827-f17d1f80-0227-11e9-9d5e-a6298d7667fb.png)\r\n### Test Environment:\r\nD16.0/28414.68(16.0 preview 2.0) + CLI\\SDK: 3.0.100-preview-009839 \r\ndotnet --info:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009839\r\n Commit:    ee9fe44627\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009839\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27216-02\r\n  Commit:  79edbd4d15\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009648 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009839 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27216-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27214-12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2754","RelatedDescription":"Closed issue \"For .Net Core 3.0, create a winforms app, dotnet run without the windows box poping up.\" (#2754)"},{"Id":"391504131","IsPullRequest":true,"CreatedAt":"2018-12-17T16:23:27","Actor":"dagood","Number":"2753","RawContent":null,"Title":"Exclude unit test projects from source-build","State":"closed","Body":"Reopening https://github.com/dotnet/sdk/pull/2642. (I don't seem to have permissions to reopen the PR in-place.)\r\n\r\n> This is a patch for removing test dependencies from source-build: https://github.com/dotnet/source-build/pull/847.\r\n> \r\n> RepoToolset picks up on this `ExcludeFromSourceBuild` property I'm adding and disables restore and build.\r\n> \r\n> @nguerrera, PTAL.\r\n\r\nThis is the patch directly: https://github.com/dotnet/source-build/blob/ecc7b00f5b7cf2d21cb6f545669690f7ab4996fc/patches/sdk/0001-Exclude-unit-test-projects-from-source-build.patch. Getting patch fixes pulled into the repo is important to us to avoid maintenance costs.","Url":"https://github.com/dotnet/sdk/pull/2753","RelatedDescription":"Closed or merged PR \"Exclude unit test projects from source-build\" (#2753)"},{"Id":"391702193","IsPullRequest":true,"CreatedAt":"2018-12-17T16:23:00","Actor":"dotnet-maestro[bot]","Number":"2755","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2755","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2755)"},{"Id":"391465182","IsPullRequest":true,"CreatedAt":"2018-12-16T21:53:20","Actor":"dotnet-maestro[bot]","Number":"2750","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2750","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2750)"},{"Id":"391496812","IsPullRequest":true,"CreatedAt":"2018-12-16T20:07:57","Actor":"nguerrera","Number":"2752","RawContent":null,"Title":"Use latest signtool to avoid MAX_PATH issue in official builds","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2752","RelatedDescription":"Closed or merged PR \"Use latest signtool to avoid MAX_PATH issue in official builds\" (#2752)"},{"Id":"390333769","IsPullRequest":false,"CreatedAt":"2018-12-16T19:45:26","Actor":"abpiskunov","Number":"2747","RawContent":null,"Title":"Add publish capabilities for SDK based ClassLibraries and ConsoleApps","State":"closed","Body":"Per our discussion with @nguerrera and @davkean we need to switch to new capabilities schema for publish (see below). To accomplish that one of the workitems is to add\r\n\r\n- FolderPublish to SDK-based class libraries and console apps , along with WPF and WinForms (if it is not present yet)\r\n- AppServicePublish to SDK-based class libraries and console apps \r\n\r\nThis needs to happen in P2 and earlier rather than later since Publish would need to commit and test changes after all capabilities are added.\r\n\r\nCapabilities \r\n \r\n•         \"Publish\": all projects that support any kind of publish should contain this capability\r\no    All .NET project types\r\n•         \"FolderPublish\": if project supports publishing to folder\r\no    Class libraries  (classic and core). Note: we don't own Publish for classic class libraries and classic ConsoleApps, ClickOnce does. There should be separate work item tracking ClickOnce support for our publish framework. However we can add capability now and it would light up when ClickOnce adds apublish provider.\r\no    Console app (classic, core). \r\no    WebSites, WAP, Web core\r\no    WPF (core and classic)\r\no    WinForms (classic and core)\r\n•         \"AppServicePublish\": if project is publishable to any web related publish target: Web, AppService, etc \r\no    Console apps (classic and core)\r\no    WebSites, WAP, Web core\r\n \r\nPotential pending capabilities:\r\n•         \"ClickOnce\"\r\no    Classic console apps\r\no    WPF (classic)\r\no    WinForms (classic)\r\n•         \"MSIX\"\r\no    Console apps (classic and core)\r\no    WPF (classic and core)\r\no    WinForms (classic and core)\r\n \r\n \r\n \r\nProviders \r\n \r\n•         FolderProvider: AppliesTo(\"Publish&FolderPublish\")\r\n•         AppServiceProvider: AppliesTo(\"Publish&AppServicePublish\")\r\n•         IISProvider: AppliesTo(\"Publish&Web\")\r\n•         AzureVMProvider: AppliesTo(\"Publish&Web\")\r\n•         AppServiceLinuxProvider: AppliesTo(\"Publish&DotNetCoreWeb\")\r\n•         ContainerRegistryProvider:AppliesTo(Publish&AppServicePublish&(Web|DotnetCoreWeb))\r\n•         ClickOnceProvider:AppliesTo(Publish&ClickOnce)\r\n•         MSIXProvider:AppliesTo(Publish&MSIX)\r\n \r\n \r\nWorkitems:\r\n \r\n•\tAdd FolderPublish to WPF and WinForms (classic and core), Class Libraries and Console Apps (classic and core). Some of them already have it , just make sure all of them have. <- CSharp & SDK\r\n•\tAdd AppServicePublish to Console apps (classic and core) <- CSharp and SDK\r\n•\tAdd AppServicePublish to WebSites, WAP, and Core Web <- WAP and WebSdk\r\n \r\nClickOnce and MSIX I would leave to their owner to request/add when they are ready.\r\n","Url":"https://github.com/dotnet/sdk/issues/2747","RelatedDescription":"Closed issue \"Add publish capabilities for SDK based ClassLibraries and ConsoleApps\" (#2747)"},{"Id":"391486333","IsPullRequest":false,"CreatedAt":"2018-12-16T17:09:36","Actor":"joaorosado","Number":"2751","RawContent":null,"Title":"Properties defined in target files do not get applied with multiple TargetFrameworks","State":"open","Body":"I'm adding multitargeting to net461 and netstandard2.0 in some of my projects as a migration path.\r\nWhile doing this and trying I noticed that in one of the targets all the generate AssemblyInfo had the default values.\r\n\r\nCurrently I have a import on my projects that adds extra targets and sets the common properties consistently on all of them.\r\n`<Import Project=\"$(ProjectDir)..\\..\\Commons\\Common.targets\" />`\r\n\r\nthis target file is taking care of the properties import inside (but the problem also occurs if they are defined explicitly in the .targets) \r\n`<Import Project=\"Common.props\" />`\r\n\r\nThis worked fine with one target and in the generated assembly info file that Visual Studio is doing automatically (I can see both files in disk being changed correctly).\r\nBut then when actually doing the real build the AssemblyInfo on the **second** target gets all the default values.\r\n\r\nI've found 2 workarounds for this:\r\n- Import the \"Common.props\" directly on my project.\r\n- Add an empty \"Directory.Build.props\" file on the root of my repository. <- not sure why this fixes it\r\n\r\nWhile I'm OK with any of the workarounds, I'm really worried that other target files get incorrect properties and that the second target framework gets build incorrectly.\r\n\r\nHow is the correct way of doing this?\r\n\r\nTested with both VS 15.9.3 and 15.9.4 \r\n\r\nEdit: can't seem to get any of my workarounds to work now that upgraded to 15.9.4 :(","Url":"https://github.com/dotnet/sdk/issues/2751","RelatedDescription":"Open issue \"Properties defined in target files do not get applied with multiple TargetFrameworks\" (#2751)"},{"Id":"389753827","IsPullRequest":true,"CreatedAt":"2018-12-15T21:44:35","Actor":"dotnet-maestro[bot]","Number":"2742","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18612.12\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18614.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2742","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2742)"},{"Id":"389564061","IsPullRequest":true,"CreatedAt":"2018-12-15T20:53:14","Actor":"nguerrera","Number":"2740","RawContent":null,"Title":"Fix the build","State":"closed","Body":"Two severe issues:\r\n\r\n1. Official build is failing, and it's apparently at a line where we are attempting to use undefined $env:VSSDKInstall. It is unclear what this line was accomplishing so I've removed it. I suspect it may have been working around past arcade version issues. Does that ring a bell?\r\n\r\n2. In the port to arcade, the act of running tests against full msbuild was coupled to building with full msbuild whereas before it was a custom build argument. Now the latest arcade is always building with VS when available, which means our tests are not running on core on Windows on any leg. I've tied it to an env var instead of the build engine. This also removes the requirement to have VS installed to build. It is now used only when testing full msbuild as it was originally.\r\n\r\nFixes #2589\r\n\r\nChanges to eng\\common are mirrored in https://github.com/dotnet/arcade/pull/1594\r\n\r\nAlso fixed some annoyances encountered while debugging this:\r\n\r\n* build on command line will use stage0 sdk always, not ambient sdk on PATH\r\n\r\n* dogfood script now puts stage0 dotnet on PATH too\r\n\r\n* Locate stage0 bundled versions irrespective of SDK version used to build. This could cause tests to fail in VS if using an ambient SDK from Program Files. \r\n","Url":"https://github.com/dotnet/sdk/pull/2740","RelatedDescription":"Closed or merged PR \"Fix the build\" (#2740)"},{"Id":"390007564","IsPullRequest":true,"CreatedAt":"2018-12-14T00:15:33","Actor":"dotnet-bot","Number":"2746","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2746","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2746)"},{"Id":"390902820","IsPullRequest":false,"CreatedAt":"2018-12-13T23:21:33","Actor":"wli3","Number":"2749","RawContent":null,"Title":"Pack as tool should not generate exe in nupkg","State":"open","Body":"We generate an executable by default as a new 3.0.xxx feature. However, we should not generate such file during PackAsTool. It should not be harmful however it would be flagged or signed by infrastructure","Url":"https://github.com/dotnet/sdk/issues/2749","RelatedDescription":"Open issue \"Pack as tool should not generate exe in nupkg\" (#2749)"},{"Id":"390775310","IsPullRequest":false,"CreatedAt":"2018-12-13T17:53:16","Actor":"nphmuller","Number":"2748","RawContent":null,"Title":"Option to treat NETSDK warnings as errors","State":"closed","Body":"While updating to 2.2.100 I noticed a couple of warnings were added. Like `NETSDK1071`.\r\nIn my CI I build using the `TreatWarningsAsErrors` flag (`dotnet build /p:TreatWarningsAsErrors=\"true\"`)`.\r\n\r\nThe build still completed succesfully, while `NETSDK1071` was thrown.\r\n\r\nWhat is the recommended way to force a build to fail if any of these warnings are thrown from the SDK?\r\nThe most user friendly way would be to use the same flag as msbuild. But that doesn't seem to be supported atm.","Url":"https://github.com/dotnet/sdk/issues/2748","RelatedDescription":"Closed issue \"Option to treat NETSDK warnings as errors\" (#2748)"},{"Id":"389994622","IsPullRequest":true,"CreatedAt":"2018-12-11T23:11:35","Actor":"jainaashish","Number":"2745","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"open","Body":"Keeping it consistent with 2.2.2xx train","Url":"https://github.com/dotnet/sdk/pull/2745","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2745)"},{"Id":"388856924","IsPullRequest":true,"CreatedAt":"2018-12-11T20:00:15","Actor":"dotnet-bot","Number":"2734","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2734","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2734)"},{"Id":"389616201","IsPullRequest":true,"CreatedAt":"2018-12-11T18:52:09","Actor":"wli3","Number":"2741","RawContent":null,"Title":"Merge/2.1.6xx to 2.2.2xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2741","RelatedDescription":"Closed or merged PR \"Merge/2.1.6xx to 2.2.2xx\" (#2741)"},{"Id":"389836302","IsPullRequest":true,"CreatedAt":"2018-12-11T17:33:37","Actor":"nugetlurker","Number":"2743","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/2743","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2743)"},{"Id":"389836305","IsPullRequest":true,"CreatedAt":"2018-12-11T17:33:03","Actor":"nugetlurker","Number":"2744","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/2744","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2744)"},{"Id":"389095908","IsPullRequest":true,"CreatedAt":"2018-12-11T05:51:42","Actor":"dsplaisted","Number":"2738","RawContent":null,"Title":"Support ASP.NET Core PackageReference when targeting .NET Core 3.0 or higher","State":"closed","Body":"Fixes dotnet/cli#10124\r\n\r\nAlso fixes #2527","Url":"https://github.com/dotnet/sdk/pull/2738","RelatedDescription":"Closed or merged PR \"Support ASP.NET Core PackageReference when targeting .NET Core 3.0 or higher\" (#2738)"},{"Id":"389501017","IsPullRequest":true,"CreatedAt":"2018-12-11T01:22:12","Actor":"wli3","Number":"2739","RawContent":null,"Title":"Use PackageVersion for shim gen","State":"closed","Body":"fix #2698\r\nPackageVersion should be the source of truth for nuget layout.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3c9b61826814dc800a2a295f0985ce4f295483d6/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L28","Url":"https://github.com/dotnet/sdk/pull/2739","RelatedDescription":"Closed or merged PR \"Use PackageVersion for shim gen\" (#2739)"},{"Id":"388920248","IsPullRequest":true,"CreatedAt":"2018-12-09T18:55:11","Actor":"dotnet-maestro[bot]","Number":"2736","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2736","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2736)"},{"Id":"389031990","IsPullRequest":false,"CreatedAt":"2018-12-09T15:09:06","Actor":"nguerrera","Number":"2737","RawContent":null,"Title":"NetCore2.1->2.2 Upgrade Issue; TargetFramework dropped/not recognized","State":"open","Body":"_From @pinkfloydx33 on December 5, 2018 13:40_\n\nI'm trying to upgrade my web application from netCore 2.1 to 2.2. I have updated the TargetFramework to netcoreapp2.2 and I receive the following errors upon restore/build/clean:\r\n\r\n```\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.AspNetCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.AspNetCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.AspNetCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / win-x64. Package Microsoft.AspNetCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / win-x64. Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n```\r\n\r\nI have also done a manual clean (deleting obj/bin directories). \r\n\r\nI **can** build if I change from using `<TargetFramework>` to `<TargetFrameworks>`, however I'd rather not do this and attempt to locate the underlying issue. I have two test projects in the same solution that reference the main project. I was able to migrate _them_ to netcoreapp2.2 without switching to TargetFramework**s**, I would like to do the same thing for the main web app.\r\n\r\nWhen I use TargetFramework (singular), Visual Studio updates the dependencies graph and removes the SDK node:\r\n![image](https://user-images.githubusercontent.com/395615/49516771-63d52380-f868-11e8-9f5c-49ac2676585f.png)\r\n\r\nI've tried adding a global.json specifying the SDK version directly as 2.2.100 but that doesn't make any difference.\r\n\r\nHere is my .csproj file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<AssemblyName>MyProduct.Web</AssemblyName>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>netcoreapp2.2</TargetFramework>\r\n\t\t<PreserveCompilationContext>true</PreserveCompilationContext>\r\n\t\t<LangVersion>latest</LangVersion>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup>\r\n\t\t<GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n\t\t<PackageId>$(AssemblyName)</PackageId>\r\n\t\t<Authors>MyCompany</Authors>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup Condition=\"'$(Configuration)' == 'Debug'\">\r\n\t\t<RazorCompileOnBuild>false</RazorCompileOnBuild>\r\n\t\t<RazorCompileOnPublish>false</RazorCompileOnPublish>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup Condition=\"'$(Configuration)'=='Debug'\">\r\n\t  <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<None Update=\"wwwroot\\**\\*\">\r\n\t\t\t<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n\t\t</None>\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.Core\\MyProduct.Web.Core.csproj\" />\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.Api.Contracts\\MyProduct.Web.Api.Contracts.csproj\" />\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.ViewModels\\MyProduct.Web.ViewModels.csproj\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n\t\t<PackageReference Include=\"BeginCollectionItemCore\" Version=\"1.0.4\" />\r\n\t\t<PackageReference Include=\"Novell.Directory.Ldap.NETStandard\" Version=\"2.3.5\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Authentication.Cookies\" Version=\"2.2.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.2.0\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Razor.Design\" Version=\"2.2.0\" PrivateAssets=\"All\" />\r\n\t\t<PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.0\" PrivateAssets=\"All\" />\r\n\t\t<DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.4\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<Content Update=\"Views\\_ViewImports.cshtml\">\r\n\t\t\t<Pack>$(IncludeRazorContentInPack)</Pack>\r\n\t\t</Content>\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n```\n\n_Copied from original issue: dotnet/corefx#33834_","Url":"https://github.com/dotnet/sdk/issues/2737","RelatedDescription":"Open issue \"NetCore2.1->2.2 Upgrade Issue; TargetFramework dropped/not recognized\" (#2737)"},{"Id":"388893591","IsPullRequest":false,"CreatedAt":"2018-12-08T06:49:25","Actor":"yyjdelete","Number":"2735","RawContent":null,"Title":"`Invalid runtimeconfig.json` is produced when duplicate FrameworkReference exists in 3.0preview","State":"open","Body":"Move from aspnet/AspNetCore#4490\r\n\r\n### Step\r\ndotnet sdk 3.0.0-preview-27122-01 is needed.\r\n1. `dotnet new webapi`\r\n2. change the csproj to add an FrameworkReference   `<FrameworkReference Include=\"Microsoft.AspNetCore.App\" />`\r\n3. `dotnet run`\r\n\r\nIt can also be reproduce with `dotnet new console` by add more than one same FrameworkReference\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n***NOTE:***\r\nWhen the number of duplicated FrameworkReference is changed, the `xxx.runtimeconfig.json` only change after an `dotnet clean` and build, seems the cache and build have different rule in this special case? Not sure if it's another issue, or just an part of this.\r\n\r\n### Expected\r\nBuild error, or run successful.\r\n```json\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"framework\": {\r\n      \"name\": \"Microsoft.AspNetCore.App\",\r\n      \"version\": \"3.0.0-preview-18579-0056\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Actual\r\nBuild successful, but run failed with `Invalid runtimeconfig.json`. See the duplicate `Microsoft.AspNetCore.App` in `frameworks` here.\r\n```json\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.AspNetCore.App\",\r\n        \"version\": \"3.0.0-preview-18579-0056\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.AspNetCore.App\",\r\n        \"version\": \"3.0.0-preview-18579-0056\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Details\r\ndotnet --info\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n<details>\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18290\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009404 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100-preview3-009430 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35497 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35497 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27014-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>","Url":"https://github.com/dotnet/sdk/issues/2735","RelatedDescription":"Open issue \"`Invalid runtimeconfig.json` is produced when duplicate FrameworkReference exists in 3.0preview\" (#2735)"},{"Id":"388822770","IsPullRequest":false,"CreatedAt":"2018-12-08T00:32:25","Actor":"dagood","Number":"2733","RawContent":null,"Title":"Incorrect \"repository\" element in Microsoft.NET.Sdk's nuspec","State":"closed","Body":"In this nupkg from a recent build:\r\nhttps://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.net.sdk/3.0.100-preview.18603.1/microsoft.net.sdk.3.0.100-preview.18603.1.nupkg\r\n\r\nThe nuspec contains this line:\r\n\r\n```\r\n<repository type=\"git\" url=\"https://github.com//\" commit=\"7bb277dbfdfe52a71b9decc88897510cc8d6be42\" />\r\n```\r\n\r\n`https://github.com//` should be `https://github.com/dotnet/sdk`\r\n\r\nThis might be an Arcade issue, failure to detect the source? I'm not familiar enough with how packaging works now to quickly find where this is happening.\r\n\r\n(I was only looking for the commit, but figured I should file this issue for the wrong url anyway.)","Url":"https://github.com/dotnet/sdk/issues/2733","RelatedDescription":"Closed issue \"Incorrect \"repository\" element in Microsoft.NET.Sdk's nuspec\" (#2733)"},{"Id":"388771076","IsPullRequest":false,"CreatedAt":"2018-12-07T18:47:17","Actor":"jainaashish","Number":"2732","RawContent":null,"Title":"Consume NuGet /embed assets group for interop type assemblies from NuGet package","State":"open","Body":"This is the tracking issue to update dotnet build tasks to consume new `/embed` assets group from NuGet packages for interop type assemblies so that Project System passes it as `link` instead of `ref` to compiler.\r\n\r\nCorresponding NuGet issue# https://github.com/NuGet/Home/issues/2365\r\n\r\n@livarcocc @nguerrera @dsplaisted @rrelyea ","Url":"https://github.com/dotnet/sdk/issues/2732","RelatedDescription":"Open issue \"Consume NuGet /embed assets group for interop type assemblies from NuGet package\" (#2732)"},{"Id":"388645904","IsPullRequest":true,"CreatedAt":"2018-12-07T17:24:10","Actor":"dotnet-maestro[bot]","Number":"2730","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2730","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2730)"},{"Id":"388718371","IsPullRequest":false,"CreatedAt":"2018-12-07T16:17:33","Actor":"AArnott","Number":"2731","RawContent":null,"Title":"Building VB console app fails, unable to find \"%TEMP%\\.NETFramework,Version=v4.6.AssemblyAttributes.vb\" file","State":"closed","Body":"Building [a trivially simple VB console app](https://github.com/AArnott/SPSS.NET/blob/5ac57c55aa10611f0f4290fbd3187375ab95c468/src/SimpleDemo/SimpleDemo.vbproj#L1-L10) fails with:\r\n\r\n>vbc : error BC2001: file 'C:\\Users\\andarno\\AppData\\Local\\Temp\\.NETFramework' could not be found [D:\\git\\SPSS.NET\\src\\SimpleDemo\\SimpleDemo.vbproj]\r\nvbc : error BC2001: file 'D:\\git\\SPSS.NET\\src\\SimpleDemo\\Version=v4.6.AssemblyAttributes.vb' could not be found [D:\\git\\SPSS.NET\\src\\SimpleDemo\\SimpleDemo.vbproj]\r\n\r\nThe VB compiler can't find *two* files, neither of which exist. Looking at the msbuild.binlog file, I can see that *one* file is added with assembly attributes by the SDK, but that file has a comma in it, which isn't properly escaped (somewhere) evidently, since by the time it is fed into the vbc.exe tool, it interprets it as two separate files, as shown here:\r\n\r\n![image](https://user-images.githubusercontent.com/3548/49659001-1e476080-f9f8-11e8-9237-834827fd6794.png)\r\n\r\nThis repros on 15.8, 15.9, and 16.0 Preview 1.","Url":"https://github.com/dotnet/sdk/issues/2731","RelatedDescription":"Closed issue \"Building VB console app fails, unable to find \"%TEMP%\\.NETFramework,Version=v4.6.AssemblyAttributes.vb\" file\" (#2731)"},{"Id":"388449696","IsPullRequest":true,"CreatedAt":"2018-12-07T01:30:08","Actor":"dotnet-bot","Number":"2728","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2728","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2728)"},{"Id":"388461573","IsPullRequest":false,"CreatedAt":"2018-12-07T00:57:37","Actor":"NTaylorMullen","Number":"2729","RawContent":null,"Title":"Represent FrameworkReference of transitive projects and packages in the deps.json file.","State":"open","Body":"Today transitive project/package references aren't properly represented in a deps.json. For instance given this project (Bug4332 is a web app, Bug4332RCL is a Razor class library, both targeting netcoreapp3.0):\r\n![image](https://user-images.githubusercontent.com/2008729/49620733-0f6c9980-f977-11e8-8da3-e2d28605a2e1.png)\r\n\r\nToday you get the following `Bug4332.deps.json` entry for `Bug4332RCL`:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThe min-bar expectation would be for the deps.json to look something like:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"dependencies\": {\r\n          \"Microsoft.AspNetCore.App\": \"3.0.0-preview-18579-0056\"\r\n        },\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThis is blocking [a core scenario](https://github.com/aspnet/AspNetCore/issues/4332) in ASP.NET Core MVC 3.0 of having Razor views in a class library.\r\n\r\nLastly, I imagine this issue depends on the completion of the following (please correct me if i'm wrong):\r\n- **Referencing a shared framework does not flow across ProjectReference** https://github.com/dotnet/sdk/issues/2420 \r\n- **Represent FrameworkReferences in NuGet packages and assets files** https://github.com/NuGet/Home/issues/7342 \r\n\r\n\r\n@livarcocc @dsplaisted @natemcmaster @mkArtakMSFT @rynowak","Url":"https://github.com/dotnet/sdk/issues/2729","RelatedDescription":"Open issue \"Represent FrameworkReference of transitive projects and packages in the deps.json file.\" (#2729)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalMlaik","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"},{"Id":"319700544","IsPullRequest":false,"CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Number":"65","RawContent":null,"Title":".NET Framework Runtime and Builder Docker repos have merged ","State":"open","Body":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n","Url":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Open issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65)"},{"Id":"315285808","IsPullRequest":false,"CreatedAt":"2018-04-18T00:20:13","Actor":"richlander","Number":"64","RawContent":null,"Title":"April 2018 .NET Updates","State":"open","Body":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [Announcing the .NET Framework 4.7.2](https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/)\r\n* No new patch releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Open issue \"April 2018 .NET Updates\" (#64)"},{"Id":"305721744","IsPullRequest":false,"CreatedAt":"2018-03-15T21:13:36","Actor":"mairaw","Number":"63","RawContent":null,"Title":"Transport Layer Security (TLS) best practices with the .NET Framework article published","State":"open","Body":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices for .NET Framework applications at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675","Url":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Open issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1073371092515840000","CreatedAt":"2018-12-14T00:16:25+00:00","UserScreenname":"dotnet","Text":"C# and Visual Basic files get Regex language support in @VisualStudio 2019 Preview\nhttps://t.co/NL5QgAl9hq https://t.co/WWTK6BT5RG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":357,"FavoriteCount":129,"RawContent":null},{"Id":"1072638045227270144","CreatedAt":"2018-12-11T23:43:33+00:00","UserScreenname":"dotnet","Text":"Blogged: .NET Framework December 2018 Security and Quality Rollup https://t.co/5PllosL5i2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":8,"RawContent":null},{"Id":"1072146418868064256","CreatedAt":"2018-12-10T15:10:00+00:00","UserScreenname":"dotnet","Text":"Learn about writing tests for @AzureFunctions with Senior Program Manager Jeff Hollan (@jeffhollan) in this episode… https://t.co/18tWdVma7r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1070731847620050944","CreatedAt":"2018-12-06T17:29:00+00:00","UserScreenname":"dotnet","Text":"Learn about the latest F# Tooling Updates for Visual Studio 2017 from @_cartermp in this episode of the #OnDotNet s… https://t.co/wSjVH0qlRz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":28,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2018-12-18T05:30:55.6831943Z","RunDurationInMilliseconds":26304}