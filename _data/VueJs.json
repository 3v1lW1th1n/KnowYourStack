{"Data":{"Vue-Issues":{"Issues":[{"Id":"361097057","IsPullRequest":false,"CreatedAt":"2018-09-18T01:00:18","Actor":"Razenpok","Number":"8808","RawContent":null,"Title":"Disable observing for components hidden by v-show","State":"open","Body":"### What problem does this feature solve?\r\nI have an app with several non-trivial component blocks, each one being constantly updating a lot of its inner components (my app is very dynamic). At any moment of the time, only one such block must be visible. I don't think using `v-if` or `is` is a good idea in my case, as recreating such blocks is rather expensive. I decided to use `v-show` instead, but I've noticed that inner components are still being updated on every block (even hidden). Even worse, some of these updates are very computational heavy, so my app is basically wasting CPU clocks on updating hidden elements.\r\n\r\nSimplified example:\r\n\r\n```js\r\n<div id=\"test\" v-show=\"visible\"><p>Number {{ number }}<p></div>\r\n```\r\n\r\n```js\r\nvar vm = new Vue({\r\n    el: '#test',\r\n    data: {\r\n        number: 0,\r\n        visible: true\r\n    }\r\n});\r\n\r\nsetInterval(function() {\r\n    vm.number  ;\r\n}, 10);\r\n```\r\n\r\nHere `<p>` will still be updated even if `visible` is `false`.\r\n\r\n### What does the proposed API look like?\r\nEither make this behavior default or add some attribute to control it (something like `v-freeze`).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8808","RelatedDescription":"Open issue \"Disable observing for components hidden by v-show\" (#8808)"},{"Id":"361022472","IsPullRequest":true,"CreatedAt":"2018-09-17T20:05:44","Actor":"rhengles","Number":"8807","RawContent":null,"Title":"Lazy load for components, filters and directives (fix #8106)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThe convincing reason was explained at length over at #8106. I know this will not be merged, in fact I'm gonna close it myself. But I'm publishing this PR for reference for anyone else interested.\r\n\r\nThe initial need was for components, but when reviewing the code I thought the most elegant way to do this was by changing the `resolveAsset()` function to call a user function defined on the `$options` object:\r\n\r\n```\r\ngetComponent(id: string, identifierSpellings: Object): void | Component | AsyncComponent\r\ngetDirective(id: string, identifierSpellings: Object): void | Directive\r\ngetFilter(id: string, identifiesSpellings: Object): void | Filter\r\n```\r\n\r\nThe `identifierSpellings` object has normalized spellings in case the user needs it:\r\n\r\n- raw: the way it was called\r\n- hyphenated\r\n- camelized\r\n- PascalCase\r\n- and a toString() method, which returns the raw version\r\n\r\nThe nice thing about this is that it gives all the power to the user, and enables him to do many things which aren't possible with the current api, and the biggest use case is to **lazily load async components only when they are needed.**\r\n\r\nI know that to submit a decent PR, I'd still need to write tests and documentation... that is the next step.\r\n\r\nA running example can be seen here:\r\n\r\nhttps://unpkg.com/@arijs/vue-generator@0.1.4/outra/pagina/\r\n\r\nMy version is released at:\r\nhttps://unpkg.com/@arijs/vue@2.5.17-beta1.0/\r\nhttps://www.npmjs.com/package/@arijs/vue","Url":"https://github.com/vuejs/vue/pull/8807","RelatedDescription":"Closed or merged PR \"Lazy load for components, filters and directives (fix #8106)\" (#8807)"},{"Id":"360883370","IsPullRequest":false,"CreatedAt":"2018-09-17T17:40:14","Actor":"lichenhao","Number":"8806","RawContent":null,"Title":"vue router lost meta config","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsbin.com/sazujuxoba/edit?html,output](https://jsbin.com/sazujuxoba/edit?html,output)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ninstall vue@2.5.17\r\ninstall vue-router@3.0.1\r\ndefine a router with meta info\r\ndefine the beforeEach callback and the to.meta is an empty object.\r\n\r\n\r\n### What is expected?\r\nto.meta should be the current definition object \r\n\r\n### What is actually happening?\r\nit's an empty object here. \r\n\r\n---\r\nand the beforeRouteEnter hook not trigger.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8806","RelatedDescription":"Closed issue \"vue router lost meta config\" (#8806)"},{"Id":"360747025","IsPullRequest":false,"CreatedAt":"2018-09-17T11:25:45","Actor":"base3344","Number":"8804","RawContent":null,"Title":"el property","State":"closed","Body":"### What problem does this feature solve?\r\nvar app = new Vue({ el: '#app', ...\r\n\"el\" property it is impossible to understand intuitively what it means. I'm a novice developer on vue, in my opinion, it was much more readable to call the property as a \"element\", etc.\r\n\r\n\r\n### What does the proposed API look like?\r\nvar app = new Vue({\r\n  element: '#app',\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8804","RelatedDescription":"Closed issue \"el property\" (#8804)"},{"Id":"360776124","IsPullRequest":false,"CreatedAt":"2018-09-17T08:57:57","Actor":"johnnymijnhout","Number":"8805","RawContent":null,"Title":"Encoded single quote (&#39;) is not displayed correct in async loaded html input field","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sf9cg0db/](https://jsfiddle.net/sf9cg0db/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry to dynamically load an input field with a value that contains an encoded single quote (&amp;#39;) as plain HTML. Normally the input field will display the single quote in the input box. However, Vue shows the &amp;#39; in the input box. \r\n\r\n~~I tested this with multiple encoded chars, and everything works correctly, except for the single quote.~~ As stated by @HcySunYang, all entities except the 6 he listed have this issue.\r\n\r\n### What is expected?\r\nA single quote is shown in the input field when loaded async with Vue\r\n\r\n### What is actually happening?\r\n&amp;#39; is show in the input field when loaded async with Vue\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8805","RelatedDescription":"Open issue \"Encoded single quote (&#39;) is not displayed correct in async loaded html input field\" (#8805)"},{"Id":"360700203","IsPullRequest":false,"CreatedAt":"2018-09-17T04:46:47","Actor":"BradHan","Number":"8803","RawContent":null,"Title":"vue 2.5.17下渲染svg maker元素的refx和refy属性无效，造成图像错位","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/bradhan/pen/pOOOYq](https://codepen.io/bradhan/pen/pOOOYq)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nv1.0.28 is ok: https://codepen.io/bradhan/pen/Wgggqg\r\n\r\nv2.5.17 has bug: https://codepen.io/bradhan/pen/pOOOYq\r\n\r\n### What is expected?\r\n用组件方式渲染带marker元素的svg，由于refx和refy属性无效，造成图像错位\r\n\r\n### What is actually happening?\r\n用组件方式渲染带marker元素的svg，图像不错位\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8803","RelatedDescription":"Closed issue \"vue 2.5.17下渲染svg maker元素的refx和refy属性无效，造成图像错位\" (#8803)"},{"Id":"360696667","IsPullRequest":false,"CreatedAt":"2018-09-17T01:05:54","Actor":"hhch","Number":"8802","RawContent":null,"Title":"vue computed ","State":"closed","Body":"### What problem does this feature solve?\r\nconsole.log(this.shopHisChange[this.curMemberId]) should not be undefined\r\n\r\n### What does the proposed API look like?\r\ncomputed:{\r\n            showShopBasicForm(){\r\n                console.log('*****')\r\n                console.log(this.shopHisChange)\r\n                console.log(this.curMemberId)\r\n                console.log(this.shopHisChange[this.curMemberId])\r\n                console.log('****')\r\n                return !!this.shopHisChange[this.curMemberId]\r\n            }\r\n}\r\n![image](https://user-images.githubusercontent.com/21006441/45602826-65f0c880-ba57-11e8-9aec-357691c5542a.png)\r\n\r\nthe result is below:\r\n*****\r\n {__ob__: Observer}b2blily3818986484ab197: {buyerProtection: 1, chanyedai: {…}, chanyedaiList:Array(1), chanyedaiMap: {…}, cx: 1, …}__ob__: Observer {value: {…}, dep: Dep, vmCount: 0}__proto__: Object\r\nb2blily3818986484ab197\r\nundefined\r\n ****\r\n![image](https://user-images.githubusercontent.com/21006441/45602817-435eaf80-ba57-11e8-9554-5d1017351f07.png)\r\n\r\nwhy is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8802","RelatedDescription":"Closed issue \"vue computed \" (#8802)"},{"Id":"360615038","IsPullRequest":true,"CreatedAt":"2018-09-16T07:59:03","Actor":"Hoishin","Number":"8801","RawContent":null,"Title":"Fix #8798: $refs TypeScript type definition","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\nFixes #8798 \r\n\r\nWhen you refer to `$refs`, the type if always something truthy, while it is possible that the value is `undefined`.\r\nWithout this change, one can refer to a `ref` that is `undefined`, but TypeScript thinks it is `Element` or `Vue`.\r\n\r\nThis PR added `undefined` type to the type of `$refs`. This way it is more type-safe when using `$refs`.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\nThis change will break code written in TypeScript which does not null-check the value of `this.$refs.foo`.\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\n~~If adding a **new feature**, the PR's description includes:~~\r\n~~- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)~~\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8801","RelatedDescription":"Open PR \"Fix #8798: $refs TypeScript type definition\" (#8801)"},{"Id":"360585625","IsPullRequest":false,"CreatedAt":"2018-09-16T07:18:24","Actor":"ChrisRM","Number":"8800","RawContent":null,"Title":"v-text not available through $slots","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[http://not-able-to-reproduce.xo](http://not-able-to-reproduce.xo)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHi, according to the docs, `<span v-text=\"msg\"></span>` should be the same as `<span>{{msg}}</span>`, and by DOM result, it is. However, when trying to build a component like this:\r\n\r\n```ts\r\nget childMarkup(): VNode | null {\r\n\treturn this.$slots.default ? <span>{this.$slots.default}</span> : null;\r\n}\r\n```\r\nI'm running into a problem where `<span>{{msg}}</span>` works as it should, because it's added to the $slots collection, but using `<span v-text=\"msg\"></span>` creates a problem, as it's not added to the $slots collection. I'm not sure whether this is intended or not, but what's the best way of solving this? \r\n\r\nI'm guessing I could just check for the innerText/Html of the element, but I'm hoping there's a better way.\r\n\r\n### What is expected?\r\nThe same behaviour as described in the documentation.\r\n\r\n### What is actually happening?\r\nNot what I expected...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8800","RelatedDescription":"Closed issue \"v-text not available through $slots\" (#8800)"},{"Id":"360585115","IsPullRequest":false,"CreatedAt":"2018-09-15T23:28:55","Actor":"ChrisRM","Number":"8799","RawContent":null,"Title":"v-text not available through $slots","State":"closed","Body":"Hi, according to the docs, `<span v-text=\"msg\"></span>` should be the same as `<span>{{msg}}</span>`, and by DOM result, it is. However, when trying to build a component like this:\r\n\r\n```ts\r\nget childMarkup(): VNode | null {\r\n\treturn this.$slots.default ? <span>{this.$slots.default}</span> : null;\r\n}\r\n```\r\nI'm running into a problem where `<span>{{msg}}</span>` works as it should, because it's added to the $slots collection, but using `<span v-text=\"msg\"></span>` creates a problem, as it's not added to the $slots collection. I'm not sure whether this is intended or not, but what's the best way of solving this? \r\n\r\nI'm guessing I could just check for the innerText/Html of the element, but I'm hoping there's a better way.\r\n\r\nSorry for not using the Issue Helper here, I wasn't able to reproduce the entire environment using codesandbox/codepen. \r\n","Url":"https://github.com/vuejs/vue/issues/8799","RelatedDescription":"Closed issue \"v-text not available through $slots\" (#8799)"},{"Id":"360543681","IsPullRequest":false,"CreatedAt":"2018-09-15T14:13:18","Actor":"Hoishin","Number":"8798","RawContent":null,"Title":"$refs type definition should include `undefined`","State":"open","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n\r\nWhen you try to refer non-existing ref, it is `undefined`.\r\n\r\n```vue\r\n<template>\r\n  <div/>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {Vue, Component} from 'vue-property-decorator'\r\n\r\n@Component\r\nexport default class extends Vue {\r\n  mounted() {\r\n    console.log(this.$refs.foo)\r\n  }\r\n}\r\n```\r\n\r\nBut the type definition for `$refs` doesn't have undefined, and it is not type safe.","Url":"https://github.com/vuejs/vue/issues/8798","RelatedDescription":"Open issue \"$refs type definition should include `undefined`\" (#8798)"},{"Id":"360378615","IsPullRequest":false,"CreatedAt":"2018-09-14T18:31:17","Actor":"fjc0k","Number":"8797","RawContent":null,"Title":"Why $listeners include input listener, but $attrs doesn't include value prop?","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/fjc0k/pen/KxBvbY?editors=1111](https://codepen.io/fjc0k/pen/KxBvbY?editors=1111)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. open codepen url\r\n2. open console\r\n\r\n### What is expected?\r\n$attrs:  `{ value: '' }`\r\n\r\n$listeners: `{ input: () => {} }`\r\n\r\n### What is actually happening?\r\n$attrs:  `{}`\r\n\r\n$listeners: `{ input: () => {} }`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8797","RelatedDescription":"Closed issue \"Why $listeners include input listener, but $attrs doesn't include value prop?\" (#8797)"},{"Id":"360180643","IsPullRequest":false,"CreatedAt":"2018-09-14T08:35:49","Actor":"cnyb-kwange","Number":"8795","RawContent":null,"Title":"Uncaught SyntaxError: Unexpected identifier","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/pen/](https://codepen.io/pen/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhy using vue-cli 3 created project occur \"Uncaught SyntaxError: Unexpected identifier\"?\r\n\r\n\r\n1) create a vue project with vue-cli 3\r\n\r\n2) npm run serve\r\n\r\n3) open chrome devtools , can see webpack://src/main.js?2ee2 (router.js?6a39 , store.js?23a6) file first line \"import Vue from 'vue';\" throw out error -> Uncaught SyntaxError: Unexpected identifier.\r\n\r\n\r\nbut project is running well\r\n\r\npackage.json : \r\n\r\n\"dependencies\": {\r\n\r\n    \"vue\": \"^2.5.17\",\r\n\r\n    \"vue-router\": \"^3.0.1\",\r\n\r\n    \"vuex\": \"^3.0.1\"\r\n\r\n  },\r\n\r\n  \"devDependencies\": {\r\n\r\n    \"@vue/cli-plugin-babel\": \"^3.0.0\",\r\n\r\n    \"@vue/cli-plugin-eslint\": \"^3.0.0\",\r\n\r\n    \"@vue/cli-service\": \"^3.0.0\",\r\n\r\n    \"node-sass\": \"^4.9.0\",\r\n\r\n    \"sass-loader\": \"^7.0.1\",\r\n\r\n    \"vue-template-compiler\": \"^2.5.17\"\r\n\r\n  }\r\n\r\n\r\n\r\n### What is expected?\r\nfix this error\r\n\r\n### What is actually happening?\r\nUncaught SyntaxError: Unexpected identifier\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8795","RelatedDescription":"Closed issue \"Uncaught SyntaxError: Unexpected identifier\" (#8795)"},{"Id":"360173833","IsPullRequest":false,"CreatedAt":"2018-09-14T08:34:58","Actor":"mr-jingles","Number":"8794","RawContent":null,"Title":"Problem with passing data to vue component using .sync","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/eywraw8t/364640/](https://jsfiddle.net/eywraw8t/364640/)\r\n\r\n### Steps to reproduce\r\nPass json data as html attribute to a component using .sync\r\n\r\n### What is expected?\r\nData should be available as prop and can be used.\r\n\r\n### What is actually happening?\r\nJSON gets distorted and console throws error.\r\n\r\n---\r\nI am trying to pass data from a laravel blade view to the vue component. I am using sync to make the prop reactive. However this does not work. Passing the json as static data does work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8794","RelatedDescription":"Closed issue \"Problem with passing data to vue component using .sync\" (#8794)"},{"Id":"360149938","IsPullRequest":false,"CreatedAt":"2018-09-14T08:34:56","Actor":"shishiv30","Number":"8792","RawContent":null,"Title":"cannot pass a wrapped computed  to v-model","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/4pukLmnc/124/](http://jsfiddle.net/4pukLmnc/124/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI want reorder an array which is use to generate a form called \"formConfig\"\r\nbut since I use computed as the params of v-model  it's not work and the sub-components are not original input\r\nis there any solution?\r\n\r\nhttp://jsfiddle.net/4pukLmnc/124/\r\n\r\n### What is expected?\r\nthe  comupted  can be pass into v-model\r\n\r\n### What is actually happening?\r\nthe computed cannot be passed into v-model\r\n\r\n---\r\nIf it's by design. Is there any way to made the code work as my expected?\r\nTip: I have to use get set\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8792","RelatedDescription":"Closed issue \"cannot pass a wrapped computed  to v-model\" (#8792)"},{"Id":"360203337","IsPullRequest":false,"CreatedAt":"2018-09-14T08:19:56","Actor":"YQ-W","Number":"8796","RawContent":null,"Title":"Vuex  actions and mutations update state ?","State":"closed","Body":"Both the vuex action and the mutation can modify the state in the state;\r\n\r\nWhy is it different from api?\r\n\r\nAsynchronous operations can also be performed in mutation","Url":"https://github.com/vuejs/vue/issues/8796","RelatedDescription":"Closed issue \"Vuex  actions and mutations update state ?\" (#8796)"},{"Id":"360166048","IsPullRequest":false,"CreatedAt":"2018-09-14T05:53:55","Actor":"wingedSF","Number":"8793","RawContent":null,"Title":"IE Firefox  内存泄漏，$destroy 不能解决","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8793","RelatedDescription":"Closed issue \"IE Firefox  内存泄漏，$destroy 不能解决\" (#8793)"},{"Id":"359947202","IsPullRequest":true,"CreatedAt":"2018-09-13T15:26:30","Actor":"JJJYY","Number":"8791","RawContent":null,"Title":"refactor: empty function replace to noop","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nempty function replace to `noop`","Url":"https://github.com/vuejs/vue/pull/8791","RelatedDescription":"Open PR \"refactor: empty function replace to noop\" (#8791)"},{"Id":"359655073","IsPullRequest":false,"CreatedAt":"2018-09-12T21:13:39","Actor":"urbnjamesmi1","Number":"8790","RawContent":null,"Title":"Opt-out of serverCacheKey","State":"open","Body":"### What problem does this feature solve?\r\nBeing able to decide at runtime if a component should be cached on the server.\r\n\r\nFor example, if I have a re-usable ImageViewer component that I only want cached in certain use cases.\r\n\r\n```javascript\r\nimport { get } from 'lodash-es';\r\nexport default {\r\n    name: 'ImageViewer',\r\n    serverCacheKey: (props) => get(props, 'images.0.id'),\r\n    props: {\r\n        images: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    }\r\n};\r\n```\r\n\r\nIt would be preferred to be able to return undefined from the serverCacheKey function and know that the component won't be cached.  Currently, it would be cached by its name and would collide with any other uses of the component that also returned undefined.\r\n\r\n### What does the proposed API look like?\r\nThe same API for the existing serverCacheKey that takes the props object, but allow for returning undefined to indicate, to skip looking for the component in the server renderer cache (even if the component has a name).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8790","RelatedDescription":"Open issue \"Opt-out of serverCacheKey\" (#8790)"},{"Id":"359458338","IsPullRequest":false,"CreatedAt":"2018-09-12T15:56:26","Actor":"phpjishu","Number":"8788","RawContent":null,"Title":"I want to add two hooks.","State":"closed","Body":"### What problem does this feature solve?\r\nI want to add two hooks 'show' and 'hide',What happens when the current page is displayed (window. focus), when the window is not behind the current display window (window. blur) calls these two methods to the current component?\r\n\r\n### What does the proposed API look like?\r\n```\r\nexport default {\r\n    name: 'App',\r\n    show() {\r\n      console.log('show this window')\r\n    },\r\n    hide() {\r\n      console.log('hide this window')\r\n    },\r\n    beforeCreate() {\r\n      console.log('beforeCreate', this.$XY.test())\r\n    }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8788","RelatedDescription":"Closed issue \"I want to add two hooks.\" (#8788)"},{"Id":"359514049","IsPullRequest":false,"CreatedAt":"2018-09-12T14:42:27","Actor":"pabloepi","Number":"8789","RawContent":null,"Title":"Cannot read file without extension copied to root file.","State":"closed","Body":"Hi everyone, I'm developing a project using `node v6.11.4` and `vue 2.5.17`. The issue I'm having is the following: \r\n\r\nI'm trying to implement Universal Links for iOS devices, Apple requires to have a json file named `apple-app-site-association` without `.json` extension, places at root level.\r\n\r\nSo for `example https://example.com/apple-app-site-association`\r\n\r\nI used `copy-webpack-plugin` to copy the file to root level and is working fine. The issue comes when trying to access the file, if I head to `https://example.com/apple-app-site-association` nothing happens, but if I rename the file and add the `.json` extension, I can see it properly.\r\n\r\nAs a reference, if you head to `https://facebook.com/apple-app-site-association` you can see Facebook's file just fine.\r\n\r\nOpinions? Ideas?\r\nThanks!","Url":"https://github.com/vuejs/vue/issues/8789","RelatedDescription":"Closed issue \"Cannot read file without extension copied to root file.\" (#8789)"},{"Id":"359237002","IsPullRequest":false,"CreatedAt":"2018-09-11T23:57:52","Actor":"mhldtna","Number":"8787","RawContent":null,"Title":"v-if does not work on <template>","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/706545/](https://jsfiddle.net/50wL7mdz/706545/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nDefine an element with \"&lt;template v-if=\"false\"\\&gt;.  Or set the v-if to reference a data or computed property that returns false.  The template contents are rendered even though they should be skipped.\r\n\r\nWorkaround: put the v-if on a &lt;div&gt; within the &lt;template&gt;.\r\n\r\n### What is expected?\r\nPer https://vuejs.org/v2/guide/conditional.html, the template contents should not be rendered.\r\n\r\n### What is actually happening?\r\nThe template contents are rendered.\r\n\r\n---\r\nI found this problem with a top-level &lt;template&gt; in a Vue component (.vue file).  But the jsfiddle shows that it happens for any &lt;template&gt;.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8787","RelatedDescription":"Closed issue \"v-if does not work on <template>\" (#8787)"},{"Id":"359194783","IsPullRequest":false,"CreatedAt":"2018-09-11T20:59:12","Actor":"shi-yan","Number":"8786","RawContent":null,"Title":"v-bind:class doesn't support class name with hyphen","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/706254/](https://jsfiddle.net/50wL7mdz/706254/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncreate a v-bind:class, but the class' name contain a hyphen, for example  v-bind:class=\"{ blah-active: isActive }\"\r\n\r\nvue will fail to accept blah-active as a valid class name. but if I change it to blahactive, (remove the hyphen), it works.\r\n\r\n### What is expected?\r\nhyphen should be acceptable as part of the class name, or this needs to be documented.\r\n\r\nsince html supports hyphen in class name, vue should support it too.\r\n\r\n### What is actually happening?\r\nvue doesn't support class names with hyphen\r\n\r\n---\r\nno\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8786","RelatedDescription":"Closed issue \"v-bind:class doesn't support class name with hyphen\" (#8786)"},{"Id":"359139444","IsPullRequest":false,"CreatedAt":"2018-09-11T17:10:11","Actor":"nkovacs","Number":"8785","RawContent":null,"Title":"Race condition in transition-group","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nkovacs/Lskfredn/](https://jsfiddle.net/nkovacs/Lskfredn/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click the add button\r\n\r\n\r\n### What is expected?\r\nthe animation should work properly, and animation classes should be cleaned up\r\n\r\n### What is actually happening?\r\nthe enter animation doesn't work and the new item's element keeps the `list-enter-to` class forever\r\n\r\n---\r\nThe style tag binding triggers a second rerender of the transition-group component between the transition-group setting `_enterCb` on the entering new child and `nextFrame` triggering its callback. `prevChildren` is updated to include the new item, and `update` calls the pending `_enterCb` callback. Then after that, `nextFrame` triggers, but because `_enterCb`  can only be called once, it won't be called, so the `enter-to` class will remain on the element.\r\n\r\nThis only happens if the transition-group has a move transition.\r\n\r\nThe bug also occurs if the elements are changed between `update` and `nextFrame`: https://jsfiddle.net/nkovacs/cnjso1h5/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8785","RelatedDescription":"Open issue \"Race condition in transition-group\" (#8785)"},{"Id":"359138529","IsPullRequest":false,"CreatedAt":"2018-09-11T17:07:24","Actor":"alexdilley","Number":"8784","RawContent":null,"Title":"Oddity with JS transition hooks used in combination with CSS","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/6x4k5vrrkn](https://codesandbox.io/s/6x4k5vrrkn)\r\n\r\n### Steps to reproduce\r\nRemove the [unused] `done` parameter from the `leave` callback signature in `SideSheet.vue`.\r\n\r\n### What is expected?\r\nThe component to transition both on enter and leave.\r\n\r\n![want](https://user-images.githubusercontent.com/22343/45375530-28221900-b5ed-11e8-90ca-f7eff6d20bc8.gif)\r\n\r\n### What is actually happening?\r\nThe component enters immediately (without transitioning).\r\n\r\n![get](https://user-images.githubusercontent.com/22343/45375595-5bfd3e80-b5ed-11e8-8894-7c839df72cb3.gif)\r\n\r\n---\r\nThe `done` callback shouldn't be needed if the transition duration is implicit in CSS (as noted in the docs). However, by retaining the `done` parameter in the function signature it is unclear why it should \"work\" (since it's unused within the function definition itself).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8784","RelatedDescription":"Open issue \"Oddity with JS transition hooks used in combination with CSS\" (#8784)"},{"Id":"358999543","IsPullRequest":false,"CreatedAt":"2018-09-11T11:52:34","Actor":"vedmant","Number":"8783","RawContent":null,"Title":"For recursive components, make sure to provide the \"name\" option. But name is provided for all components.","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/gjx1wvhk/ ](https://jsfiddle.net/gjx1wvhk/ )\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust run the code\r\n\r\n### What is expected?\r\nNo error\r\n\r\n### What is actually happening?\r\nShows error in console\r\n\r\n---\r\nHi, I use *.vue components, and I have following error: \"Unknown custom element: <comments-list> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\" for my component. However I provided names for all components.\r\n\r\nHere is sample fiddle to reproduce this error: \r\nhttps://jsfiddle.net/gjx1wvhk/  (open developer console to see error)\r\n\r\nThere is small difference between fiddle and my code, I use *.vue components, import them relatively and add as components fields to my components:\r\n\r\n```\r\nimport CommentsList from './CommentsList.vue'\r\n\r\nexport default {\r\n  name: 'comments',\r\n\r\n  components: {\r\n    CommentsList,\r\n  },\r\n...\r\n}\r\n\r\nimport CommentsList from './CommentsList.vue'\r\n\r\nexport default {\r\n  name: 'comment',\r\n\r\n  components: {\r\n    CommentsList,\r\n  },\r\n...\r\n}\r\n\r\nimport Comment from './Comment.vue'\r\n\r\nexport default {\r\n  name: 'comments-list',\r\n\r\n  components: {\r\n    Comment,\r\n  },\r\n...\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8783","RelatedDescription":"Closed issue \"For recursive components, make sure to provide the \"name\" option. But name is provided for all components.\" (#8783)"},{"Id":"358932394","IsPullRequest":false,"CreatedAt":"2018-09-11T11:41:11","Actor":"mbraint","Number":"8781","RawContent":null,"Title":"Improve prop API","State":"closed","Body":"### What problem does this feature solve?\r\n- Allows to add possible values of prop;\r\n- Will generate a default validation functions;\r\n- Will be parts of component api;\r\n- Can be used for generate component docs\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nexport default {\r\n  props: {\r\n    color: {\r\n      type: String,\r\n      // For type String\r\n      possibleValues: [\"red\", \"green\", \"blue\"],\r\n      // Default validator when has possible values\r\n      // Does not require a definition, can be overridden\r\n      validator: (value, possibleValues) => possibleValues.includes(value)\r\n    },\r\n    delay: {\r\n      type: Number,\r\n      // For type Number\r\n      possibleValues: {min: 0, max: 1000},\r\n      // Default validator when has possible values\r\n      // Does not require a definition, can be overridden\r\n      validator: (value, possibleValues) =>\r\n        (possibleValues.min <= value && value <= possibleValues.max)\r\n    }\r\n  }\r\n  //...\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8781","RelatedDescription":"Closed issue \"Improve prop API\" (#8781)"},{"Id":"358998527","IsPullRequest":false,"CreatedAt":"2018-09-11T11:10:39","Actor":"vedmant","Number":"8782","RawContent":null,"Title":"For recursive components, make sure to provide the \"name\" option. But name is provided for all components.","State":"closed","Body":"Hi, I use *.vue components, and I have following error: \"Unknown custom element: <comments-list> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\" for my component. However I provided names for all components.\r\n\r\nHere is sample fiddle to reproduce this error: \r\nhttps://jsfiddle.net/gjx1wvhk/  (open developer console to see error)\r\n\r\nThere is small difference between fiddle and my code, I use *.vue components, import them relatively and add as components fields to my components:\r\n\r\n```\r\nimport CommentsList from './CommentsList.vue'\r\n\r\nexport default {\r\n  name: 'comments',\r\n\r\n  components: {\r\n    CommentsList,\r\n  },\r\n...\r\n}\r\n\r\nimport CommentsList from './CommentsList.vue'\r\n\r\nexport default {\r\n  name: 'comment',\r\n\r\n  components: {\r\n    CommentsList,\r\n  },\r\n...\r\n}\r\n\r\nimport Comment from './Comment.vue'\r\n\r\nexport default {\r\n  name: 'comments-list',\r\n\r\n  components: {\r\n    Comment,\r\n  },\r\n...\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vue/issues/8782","RelatedDescription":"Closed issue \"For recursive components, make sure to provide the \"name\" option. But name is provided for all components.\" (#8782)"},{"Id":"358825172","IsPullRequest":false,"CreatedAt":"2018-09-11T00:02:12","Actor":"richardtallent","Number":"8780","RawContent":null,"Title":"Support destructuring assignment of component properties from a special attribute","State":"closed","Body":"### What problem does this feature solve?\r\nLike function definitions, available component props can grow over time, leading to calls like:\r\n\r\n```JavaScript\r\n<my-comp\r\n    :size=\"3\"\r\n    :mode=\"active ? 'foo' : 'bar'\"\r\n    :show-icon=\"true\"\r\n    color=\"blue\"\r\n    label=\"Foo\"\r\n    icon-src=\"smile.svg\"\r\n/>\r\n```\r\n\r\nFor an individual component in a layout with literal or simple attribute values, this is fine -- it's clear in intent, the unused props have suitable defaults (or warn if required), etc. However, when such a component is used in a `v-for` loop, it can often turn into a bunch of yak-shaving, where the developer is basically destructuring the iterated item by hand into individual attribute bindings:\r\n\r\n```JavaScript\r\n<my-comp v-for=\"item in items\" :key=\"item.id\"\r\n    mode=\"item.mode\"\r\n    :size=\"item.size\"\r\n    :show-icon=\"item.showIcon\"\r\n    :color=\"blue\"\r\n    :label=\"item.label\"\r\n    :icon-src=\"item.iconSrc\"\r\n/>\r\n```\r\n\r\nThis is tiresome, error-prone (forgetting the colon for interpreted values, swapped values, bad Pascal-to-kebab conversions, etc.), and verbose. (I made two errors above, by the way... :))\r\n\r\nThe current alternative is for developers to use a parameter of type Object as a \"catch-all\" for properties so they can easily create and maintain their component instances.\r\n\r\nAs an alternative, I propose that a special \"magic\" attribute be designated (maybe \"props\"?). When this attribute is bound to an object, Vue will unpack the properties of the object and assign them to their respective (same-named) props.\r\n\r\n### What does the proposed API look like?\r\nWith this proposed special attribute, these two examples would be equivalent to the ones above:\r\n\r\n```JavaScript\r\n<my-comp :props=\"{\r\n    mode: active ? 'foo' : 'bar',\r\n    size: 3,\r\n    showIcon: true,\r\n    color: 'blue',\r\n    label: 'Foo',\r\n    iconSrc: 'smile.svg' }\"\r\n/>\r\n\r\n<my-comp v-for=\"item in items\" :key=\"item.id\" :props=\"item\" />\r\n```\r\n\r\nAs you can see, while using this form for literal attribute values on an individual component would be silly, it's a vast improvement where the desired attributes of the component already match an available object. Using the ES6 spread operator, it would even be easy to \"tweak\" the object to add a few more attributes. For example, these would be equivalent:\r\n\r\n```JavaScript\r\n<my-comp\r\n    v-for=\"item in items\"\r\n    :key=\"item.id\"\r\n    :props=\"item\"\r\n    :is-active=\"item.id === currentItem\" />\r\n\r\n<my-comp\r\n    v-for=\"item in items\"\r\n    :key=\"item.id\"\r\n    :props=\"{...item, isActive: item.id === currentItem}\" />\r\n```\r\n\r\nIf you *want* to use this form but your incoming state object doesn't match the component's interface, no problem, just use a computed value to map from the state to the component's properties. The beauty there is, if you have similar situations in other places in your application, you can make it a mix-in, encapsulating the logic. And if the component interface, the backing data, or the mapping between them needs to change, you only need to adjust one place in the code, not the markup on every page where you used the component.\r\n\r\nNotes:\r\n\r\n1. Where there is a collision of an explicitly-defined attribute and a key on the `props` value, I propose the attribute should override the object. Any keys of the `props` value not matching an attribute name would be ignored.\r\n\r\n2. This would require *no changes* to the components themselves... they would be unaware of the `props` attribute, they would only see their incoming properties.\r\n\r\n3. Since I don't use JSX, I don't know if this option would be useful, terrible, or neutral for those developers.\r\n\r\n4. There is precedent for \"magic\" (non-directive) attributes -- key, various slot-related attributes, etc. If there is serious concern about collisions of `props` with actual components in the wild using a prop called \"props,\" I can imagine two solutions: (1) bypass this functionality when a component has a prop named \"props\", or (2) choose another candidate less likely to create compatibility issues -- perhaps \"v-props\".\r\n\r\n6. I *suspect* this would *not* just be syntactic sugar in the template compiler, since the compiler wouldn't know which keys to expect.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8780","RelatedDescription":"Closed issue \"Support destructuring assignment of component properties from a special attribute\" (#8780)"},{"Id":"358506923","IsPullRequest":false,"CreatedAt":"2018-09-10T08:20:46","Actor":"sampsonli","Number":"8779","RawContent":null,"Title":"v-model 数据绑定错误","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[  https://new-issue.vuejs.org/](  https://new-issue.vuejs.org/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n在一个页面有多个 v-model 绑定在同一个对象上的不同属性的时候， 当修改某个表单的时候， 表单的另外一个值会置空\r\n比如\r\nobjA = {a: null, b: null}\r\nv-model=\"objA.a\"\r\nv-model=\"objA.b\"\r\n当设置完第一个值后， 再设置第二个值， 第一个值会置空\r\n\r\n### What is expected?\r\n改完一个值后不影响另外一个值\r\n\r\n### What is actually happening?\r\n改完第一个值后第二个值会置空\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8779","RelatedDescription":"Closed issue \"v-model 数据绑定错误\" (#8779)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"360776064","IsPullRequest":false,"CreatedAt":"2018-09-17T22:50:51","Actor":"lakca","Number":"2393","RawContent":null,"Title":"Expose (store) history state stack","State":"closed","Body":"### What problem does this feature solve?\r\nAs we know,  for security reasons, browsers do not expose visited pages history.\r\nBut if in a single page application , it will be very helpful to access the history stack. \r\nFor example, I can clarify if it should directly back to previous or redirect to specific page when logged in.\r\nalthough I can replace these with other approaches in different scenarios or maintain this by myself.\r\nAppreciate it!\r\n\r\n### What does the proposed API look like?\r\nrouter.history.stack or others are all okay.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2393","RelatedDescription":"Closed issue \"Expose (store) history state stack\" (#2393)"},{"Id":"360793297","IsPullRequest":false,"CreatedAt":"2018-09-17T09:50:14","Actor":"zhengxs2018","Number":"2394","RawContent":null,"Title":"3.0.1 构建失败，找不到错误，问题已关闭","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2394","RelatedDescription":"Closed issue \"3.0.1 构建失败，找不到错误，问题已关闭\" (#2394)"},{"Id":"360715120","IsPullRequest":false,"CreatedAt":"2018-09-17T06:29:19","Actor":"stevenadams","Number":"2392","RawContent":null,"Title":"The output component names in vue-router.common.js are not what is defined in the src/components files","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/dist/vue-router.common.js#L386](https://github.com/vuejs/vue-router/blob/dev/dist/vue-router.common.js#L386)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry using `<RouterLink />` instead of `<router-link />`\r\n\r\n### What is expected?\r\nI should be able to use `<RouterLink />`\r\n\r\n### What is actually happening?\r\n`<routerlink> //content </routerlink>` gets rendered\r\n\r\n---\r\nI cloned the repo and ran `npm run build` - got the expected outcome in vue-router.common.js\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2392","RelatedDescription":"Closed issue \"The output component names in vue-router.common.js are not what is defined in the src/components files\" (#2392)"},{"Id":"360663346","IsPullRequest":true,"CreatedAt":"2018-09-16T18:05:23","Actor":"mlboy","Number":"2391","RawContent":null,"Title":"add this <router-link :to=\"-1\" go>","State":"open","Body":"声明式 | 编程式\r\n-- | --\r\n\\<router-link :to=\"...\" go\\>  | router.go(-1)","Url":"https://github.com/vuejs/vue-router/pull/2391","RelatedDescription":"Open PR \"add this <router-link :to=\"-1\" go>\" (#2391)"},{"Id":"360648966","IsPullRequest":true,"CreatedAt":"2018-09-16T15:17:52","Actor":"posva","Number":"2390","RawContent":null,"Title":"fix(resolve): use current location if not provided","State":"open","Body":"Fixes #2385\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2390","RelatedDescription":"Open PR \"fix(resolve): use current location if not provided\" (#2390)"},{"Id":"360637284","IsPullRequest":false,"CreatedAt":"2018-09-16T13:00:01","Actor":"posva","Number":"2389","RawContent":null,"Title":"Nodes leak when using an input with type=password","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n  <title>Document</title>\r\n</head>\r\n\r\n\r\n<body>\r\n  <script src=\"https://unpkg.com/vue@2.5.17/dist/vue.min.js\"></script>\r\n  <script src=\"../dist/vue-router.min.js\"></script>\r\n\r\n  <div id=\"app\">\r\n    <router-link :to=\"'/'\">Home</router-link>\r\n    <router-link :to=\"'/Login'\">Login</router-link>\r\n    <router-view />\r\n  </div>\r\n\r\n  <script>\r\n    const Home = {\r\n      template: `\r\n      <div class=\"home\">\r\n      <input \r\n        type=\"password\"\r\n        placeholder=\"password\" \r\n        name=\"password\"><br>\r\n  </div>\r\n  `\r\n    }\r\n\r\n    const Login = {\r\n      template: `\r\n      <div class=\"login\">\r\n    <div>\r\n      <h2>Login</h2>\r\n      \r\n      <button>Login</button>\r\n    </div>\r\n  </div>\r\n  `,\r\n      methods: {\r\n        submitClicked(id, password) { }\r\n      }\r\n    }\r\n\r\n    Vue.use(VueRouter);\r\n    const router = new VueRouter({\r\n      mode: \"history\",\r\n      base: '/explorations/',\r\n      routes: [\r\n        {\r\n          path: \"/\",\r\n          name: \"home\",\r\n          component: Home\r\n        },\r\n        {\r\n          path: \"/login\",\r\n          name: \"login\",\r\n          component: Login\r\n        }\r\n      ]\r\n    });\r\n\r\n    new Vue({\r\n      router,\r\n    }).$mount(\"#app\");\r\n  </script>\r\n\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n(file to be created in `explorations` folder) in vue-router repro after running `npm run build`\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- record memory grap in performance tab in chrome\r\n- click links to change views multiple times\r\n- garbage collect\r\n- repeat\r\n- stop recording\r\n- check node count increase\r\n\r\n### What is expected?\r\nnode count should go back to the same value after second garbage collection\r\n\r\n### What is actually happening?\r\nit keeps increasing\r\n\r\n---\r\nRemoving the type=password makes it behave as expected\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2389","RelatedDescription":"Open issue \"Nodes leak when using an input with type=password\" (#2389)"},{"Id":"360636851","IsPullRequest":false,"CreatedAt":"2018-09-16T12:55:06","Actor":"posva","Number":"2388","RawContent":null,"Title":"fail","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2388","RelatedDescription":"Closed issue \"fail\" (#2388)"},{"Id":"360628338","IsPullRequest":false,"CreatedAt":"2018-09-16T11:02:43","Actor":"askart","Number":"2387","RawContent":null,"Title":"prefetch/preload modules","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2387","RelatedDescription":"Closed issue \"prefetch/preload modules\" (#2387)"},{"Id":"360165365","IsPullRequest":false,"CreatedAt":"2018-09-14T08:36:51","Actor":"clevergod","Number":"2386","RawContent":null,"Title":"IE9: Object doesn't support this property or method \"replaceState\"","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/1834](https://github.com/vuejs/vue-router/issues/1834)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIE9 throw the following error： Object doesn't support this property or method \"replaceState\"\r\nI set the options: fallback: false\r\nI saw a similar issue：https://github.com/vuejs/vue-router/issues/1834\r\nWhy not do the same treatment here?：\r\nhttps://github.com/vuejs/vue-router/blob/8dadf9744e5d8431bf3e9148e66b34f4849055b5/dist/vue-router.js#L2149-L2153\r\n\r\n\r\n### What is expected?\r\nIn addition to the judgment support supportPushState processing：https://github.com/vuejs/vue-router/blob/8dadf9744e5d8431bf3e9148e66b34f4849055b5/dist/vue-router.js#L2149-L2153\r\n\r\n### What is actually happening?\r\nIE9 throw the following error: Object doesn't support this property or method \"replaceState\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2386","RelatedDescription":"Closed issue \"IE9: Object doesn't support this property or method \"replaceState\"\" (#2386)"},{"Id":"360156944","IsPullRequest":false,"CreatedAt":"2018-09-14T04:59:27","Actor":"decademoon","Number":"2385","RawContent":null,"Title":"router.resolve does not use current route by default","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/df4Lnuw6/698/](http://jsfiddle.net/df4Lnuw6/698/)\r\n\r\n### Steps to reproduce\r\n- Click the link.\r\n- Click the button.\r\n\r\n### What is expected?\r\nNo warning to be shown.\r\n\r\n### What is actually happening?\r\nA warning is shown saying that the id param was not provided. The [docs](https://router.vuejs.org/api/#router-resolve) mention that the current route will be used if omitted.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2385","RelatedDescription":"Open issue \"router.resolve does not use current route by default\" (#2385)"},{"Id":"359396064","IsPullRequest":false,"CreatedAt":"2018-09-12T20:18:08","Actor":"OculusMode","Number":"2384","RawContent":null,"Title":"Memory leaks","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7wnmv7q9n1](https://codesandbox.io/s/7wnmv7q9n1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSimply navigate through tabs again and again\r\n\r\n### What is expected?\r\nMemory should be preseved\r\n\r\n### What is actually happening?\r\nMemory is increasing by time\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2384","RelatedDescription":"Closed issue \"Memory leaks\" (#2384)"},{"Id":"359390928","IsPullRequest":false,"CreatedAt":"2018-09-12T09:25:55","Actor":"OculusMode","Number":"2383","RawContent":null,"Title":"Memory leaks","State":"closed","Body":"Hey i've created an app and im having memory leaks while navigating via router.\r\nlink:\r\nhttps://codesandbox.io/s/7wnmv7q9n1\r\n\r\nGenerate issue: just navigate through upper tabs again and again and you will easliy find increase in memory.","Url":"https://github.com/vuejs/vue-router/issues/2383","RelatedDescription":"Closed issue \"Memory leaks\" (#2383)"},{"Id":"357319734","IsPullRequest":true,"CreatedAt":"2018-09-10T16:10:45","Actor":"sirlancelot","Number":"2377","RawContent":null,"Title":"Indicate that error handlers get an error argument","State":"closed","Body":"Update TS declaration to indicate that error handlers also pass the error as the callback's only argument.","Url":"https://github.com/vuejs/vue-router/pull/2377","RelatedDescription":"Closed or merged PR \"Indicate that error handlers get an error argument\" (#2377)"},{"Id":"358410613","IsPullRequest":true,"CreatedAt":"2018-09-10T13:42:10","Actor":"dkulyk","Number":"2382","RawContent":null,"Title":"Added resolving a component type.","State":"closed","Body":"Added support for resolving vm in the next((vm)=>{}) call.\r\n\r\n```\r\n@Component<Test>({\r\n  beforeRouteEnter(to, from, next) {\r\n    next((vm) => {\r\n      vm.testBool = true;  //TypeScript resolved this field. \r\n    });\r\n  },\r\n})\r\nexport default class Test extends Vue {\r\n  public testBool: boolean = false;\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/370042/45268762-6521ca80-b48a-11e8-988a-d4abcf4b4eef.png)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2382","RelatedDescription":"Closed or merged PR \"Added resolving a component type.\" (#2382)"},{"Id":"356878682","IsPullRequest":true,"CreatedAt":"2018-09-09T16:51:19","Actor":"kazupon","Number":"2376","RawContent":null,"Title":"docs(ja): update docs","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n/ping @ktsn @potato4d \r\n🙏 \r\n","Url":"https://github.com/vuejs/vue-router/pull/2376","RelatedDescription":"Closed or merged PR \"docs(ja): update docs\" (#2376)"},{"Id":"358253193","IsPullRequest":false,"CreatedAt":"2018-09-08T13:38:52","Actor":"michaelfelixmurphy","Number":"2381","RawContent":null,"Title":"Query parameter types change on reload","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vv2rrjm2p7](https://codesandbox.io/s/vv2rrjm2p7)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIt helps to open the inline browser in a new window so you can see the native URL bar.\r\n\r\nClick \"say hello\" or \"say goodbye\" to go to the respective page with no query param. Number should be blank and the type undefined.\r\n\r\nClick the button to switch pages but set the number to 10. The number is set and the type is number.\r\n\r\nYou can also confirm that the param is being set in the URL bar.\r\n\r\nNow reload the page (or copy the URL and load it in a fresh tab). The number will be set and display correctly, but the type will be string. You can confirm this in the Vue devtools.\r\n\r\n### What is expected?\r\nOn a fresh load or reload, the type of the \"number\" param should be the same as it was when it was set by Vue. The type should be number.\r\n\r\n### What is actually happening?\r\nOn reload, the type changes to string.\r\n\r\n---\r\nFrankly I don't care which type vue router gives to me. I would prefer the parsing happens automatically, so I get a number, but if I know I'll get a string, I can always call parseInt myself. The important thing is that there is no difference in types between loading from another page vs loading for the first time from a URL. With many more query params of different types it is a pain (and code bloat) to handle the case where any of them can come in as a string or as the expected type.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2381","RelatedDescription":"Closed issue \"Query parameter types change on reload\" (#2381)"},{"Id":"357993316","IsPullRequest":false,"CreatedAt":"2018-09-07T09:36:49","Actor":"anneincoding","Number":"2380","RawContent":null,"Title":"vue ssr document is not defined","State":"closed","Body":"Hi everyone, I am trying to do server side render by 'vue-server-renderer', I can do \r\n```ssh\r\nnpm run dev\r\n```\r\nto develop, but when I try \r\n```ssh\r\nnpm run build\r\nnpm run start\r\n```\r\nI always got errors like this\r\n```ssh\r\nReferenceError: document is not defined\r\n    at n.(anonymous function).n.(anonymous function).(anonymous function).u.push.n.(anonymous function).Promise.then.n.(anonymous function) (server-bundle.js:1:422)\r\n    at new Promise (<anonymous>)\r\n    at Function.module.exports.o.e (server-bundle.js:1:346)\r\n    at component (server-bundle.js:1:3272)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1776:17\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:66\r\n    at Array.map (<anonymous>)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:38\r\n    at Array.map (<anonymous>)\r\n    at flatMapComponents (<my address>/node_modules/vue-router/dist/vue-router.common.js:1802:26)\r\nerror during render : /\r\nReferenceError: document is not defined\r\n    at n.(anonymous function).n.(anonymous function).(anonymous function).u.push.n.(anonymous function).Promise.then.n.(anonymous function) (webpack/bootstrap:55:0)\r\n    at new Promise (<anonymous>)\r\n    at Function.module.exports.o.e (webpack/bootstrap:50:0)\r\n    at component (src/router/index.js:12:43)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1776:17\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:66\r\n    at Array.map (<anonymous>)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:38\r\n    at Array.map (<anonymous>)\r\n    at flatMapComponents (<my address>/node_modules/vue-router/dist/vue-router.common.js:1802:26)\r\n\r\n```\r\nmy server.js looks like this \r\n```javascript\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst express = require('express');\r\nconst favicon = require('serve-favicon');\r\nconst compression = require('compression');\r\n// const microcache = require('route-cache');\r\nconst serialize = require('serialize-javascript');\r\nconst LRU = require('lru-cache');\r\nconst { createBundleRenderer } = require('vue-server-renderer');\r\nconst resolve = file => path.resolve(__dirname, file);\r\n\r\nconst isProd = process.env.NODE_ENV === 'production';\r\n// const useMicroCache = process.env.MICRO_CACHE !== 'false';\r\n\r\n// const serverInfo = `express/${require('express/package.json').version}` +\r\n//     `vue-server-renderer/${require('vue-server-renderer/package.json').version}`;\r\n\r\nconst app = express();\r\n\r\nconst proxy = require('http-proxy-middleware');\r\n\r\napp.use('/index', proxy({'target': 'https://xiaochengxu.huxiu.com', 'changeOrigin': true}));\r\n\r\nfunction createRenderer (bundle, options) {\r\n  // https://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/README.md#why-use-bundlerenderer\r\n  return createBundleRenderer(bundle, Object.assign(options, {\r\n    // for component caching\r\n    'cache': LRU({\r\n      'max': 1000,\r\n      'maxAge': 1000 * 60 * 15\r\n    }),\r\n    // this is only needed when vue-server-renderer is npm-linked\r\n    'basedir': resolve('./dist'),\r\n    // recommended for performance\r\n    'runInNewContext': false\r\n  }));\r\n}\r\n\r\nlet renderer;\r\nlet readyPromise;\r\nconst templatePath = resolve('./src/index.template.html');\r\n\r\nif (isProd) {\r\n  // In production: create server renderer using template and built server bundle.\r\n  // The server bundle is generated by vue-ssr-webpack-plugin.\r\n  const template = fs.readFileSync(templatePath, 'utf-8');\r\n  // const template = fs.readFileSync('./dist/index.html', 'utf-8');\r\n  const serverBundle = require('./dist/vue-ssr-server-bundle.json');\r\n  // The client manifests are optional, but it allows the renderer\r\n  // to automatically infer preload/prefetch links and directly add <script>\r\n  // tags for any async chunks used during render, avoiding waterfall requests.\r\n  const clientManifest = require('./dist/vue-ssr-client-manifest.json');\r\n\r\n  renderer = createRenderer(serverBundle, {\r\n    template,\r\n    clientManifest\r\n  });\r\n} else {\r\n  // In development: setup the dev server with watch and hot-reload,\r\n  // and create a new renderer on bundle / index template update.\r\n  readyPromise = require('./build/dev-server')(\r\n    app,\r\n    templatePath,\r\n    (bundle, options) => {\r\n      renderer = createRenderer(bundle, options);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nconst serve = (path, cache) => express.static(resolve(path), {\r\n  'maxAge': cache && isProd ? 60 * 60 * 24 * 30 : 0\r\n});\r\n// 加载和设置static\r\n\r\napp.use(compression({ 'threshold': 0 }));\r\napp.use(favicon('./public/favicon.ico'));\r\napp.use('/dist', serve('./dist', true));\r\napp.use('/public', serve('./public', true));\r\n// app.use('/manifest.json', serve('./manifest.json', true));\r\napp.use('/service-worker.js', serve('./dist/service-worker.js'));\r\n// app.use(microcache.cacheSeconds(1, req => useMicroCache && req.originalUrl));\r\n\r\nfunction render(req, res) {\r\n  // res.setHeader('Context-Type', 'text/html');\r\n  // res.setHeader('Server', serverInfo);\r\n  const s = Date.now();\r\n  const context = {\r\n    'title': '虎嗅网', // default title\r\n    'url': req.url\r\n  };\r\n\r\n  const handleError = err => {\r\n    if (err.url) {\r\n      res.redirect(err.url);\r\n    } else if (err.code === 404) {\r\n      res.status(404).send('404 | Page Not Found');\r\n    } else {\r\n      // Render Error Page or Redirect\r\n      res.status(500).send('500 | Internal Server Error');\r\n      console.error(`error during render : ${req.url}`);\r\n      console.error(err.stack);\r\n    }\r\n  };\r\n  let html = '';\r\n  const renderStream = renderer.renderToStream(context);\r\n\r\n  renderStream.once('data', data => {\r\n    html += data.toString();\r\n  });\r\n  renderStream.on('data', chunk => {\r\n    res.write(chunk);\r\n  });\r\n  renderStream.on('end', () => {\r\n    if (context.initialState) {\r\n      res.write(\r\n        `<script>window.__INSTAL_STATE__=${\r\n          serialize(context.initialState, {'isJSON':true})\r\n        }</script>`\r\n      );\r\n    }\r\n    res.end(html.tail);\r\n    console.log(`whole request: ${Date.now() - s}ms`);\r\n  });\r\n  renderStream.on('error', handleError);\r\n}\r\n\r\napp.get('*', isProd ? render : (req, res) => {\r\n  readyPromise.then(() => render(req, res));\r\n});\r\n\r\nconst port = process.env.PORT || 9028;\r\n\r\napp.listen(port, () => {\r\n  console.log(`server started at  http://localhost:${port}`);\r\n});\r\n\r\n```\r\n","Url":"https://github.com/vuejs/vue-router/issues/2380","RelatedDescription":"Closed issue \"vue ssr document is not defined\" (#2380)"},{"Id":"357802997","IsPullRequest":true,"CreatedAt":"2018-09-06T20:31:04","Actor":"feute","Number":"2379","RawContent":null,"Title":"Add missing semicolon in CSS file from transitions example","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nsmall detail in css file","Url":"https://github.com/vuejs/vue-router/pull/2379","RelatedDescription":"Closed or merged PR \"Add missing semicolon in CSS file from transitions example\" (#2379)"},{"Id":"357617377","IsPullRequest":false,"CreatedAt":"2018-09-06T11:43:45","Actor":"VCodepp","Number":"2378","RawContent":null,"Title":"Iframe problem.","State":"closed","Body":"I'm creating an admin page and I'm using the TyinMCE text editor with the FileBrowser plugins KCfinder.\r\nHowever, when I click the browser button, the window opens as if it is entering the normal site.\r\nCan I make sure some links are not taken into consideration?","Url":"https://github.com/vuejs/vue-router/issues/2378","RelatedDescription":"Closed issue \"Iframe problem.\" (#2378)"},{"Id":"356746060","IsPullRequest":true,"CreatedAt":"2018-09-04T15:04:58","Actor":"aldarund","Number":"2375","RawContent":null,"Title":"fix initial url path for non ascii urls","State":"closed","Body":"Here is demo of issue https://codesandbox.io/s/m2xnyj5zx\r\n\r\nIf click links withing app - active class applies fine for both links\r\nIf load page on /hello - active class applies to hello link fine\r\nIf load page on /тест - active class applies not applied to /тест link and the component not loaded\r\n\r\nThe problem is because on initial load vue-router use window.location.pathname for path, which is uri encoded, so it wont match routes because they are not uri encoded.","Url":"https://github.com/vuejs/vue-router/pull/2375","RelatedDescription":"Closed or merged PR \"fix initial url path for non ascii urls\" (#2375)"},{"Id":"356660866","IsPullRequest":false,"CreatedAt":"2018-09-04T05:46:40","Actor":"lihaitao123321","Number":"2374","RawContent":null,"Title":"跳转当前页面怎么实现？类似小程序能跳转10次","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2374","RelatedDescription":"Closed issue \"跳转当前页面怎么实现？类似小程序能跳转10次\" (#2374)"},{"Id":"356381703","IsPullRequest":false,"CreatedAt":"2018-09-03T12:25:01","Actor":"Fachher","Number":"2373","RawContent":null,"Title":"Registering Vue router hooks prevents vue rendering","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool/tree/bug/vue-router](https://github.com/Fachher/vuejsschool/tree/bug/vue-router)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ngit clone example project\r\nyarn run serve\r\nopen http://localhost:8080 with your browser\r\nClick on any link => You will see that the content area isn't rendered.\r\n\r\n### What is expected?\r\nClicking on \"home\" or \"about\" should render the content \r\n\r\n### What is actually happening?\r\nContent area isn't rendered\r\n\r\n---\r\nWhen registering the hooks in file class-component-hooks.ts everything works as expected but when I add a hook to one of the component, rendering does not work\r\n\r\n\r\nclass-component-hooks.ts .   \r\nComponent.registerHooks([\r\n    'beforeRouteEnter',\r\n    'beforeRouteLeave',\r\n    'beforeRouteUpdate'\r\n]);\r\n\r\nHome.vue .  \r\nexport default class Home extends Vue {\r\n        beforeRouteEnter(to: Route, from: Route, next: Function) {\r\n            console.log('About has been entered');\r\n        }    \r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2373","RelatedDescription":"Closed issue \"Registering Vue router hooks prevents vue rendering\" (#2373)"},{"Id":"356362072","IsPullRequest":true,"CreatedAt":"2018-09-03T05:27:12","Actor":"xuqingkuang","Number":"2372","RawContent":null,"Title":"fix: go(-1) for AbstractHistory by initial stack","State":"open","Body":"In the original implementation, stack of AbstractHistory was initialized by empty array, it makes go(-1)[1] can't work correctly.\r\n\r\nIn most situation that can't go back, it doesn't matter, but in a special environment(such as running in JavascriptCore of Native App), go(-1) can't work will be a bug.\r\n\r\nThe problem is I haven't tested in SSR, the patch may break something, a better NodeJS determine method is required.\r\n\r\n[1] https://github.com/vuejs/vue-router/blob/dev/src/history/abstract.js#L31 ","Url":"https://github.com/vuejs/vue-router/pull/2372","RelatedDescription":"Open PR \"fix: go(-1) for AbstractHistory by initial stack\" (#2372)"},{"Id":"356349991","IsPullRequest":true,"CreatedAt":"2018-09-03T05:13:34","Actor":"xuqingkuang","Number":"2371","RawContent":null,"Title":"chore: init AbstractHistory for native app usage","State":"closed","Body":"Initial AbstractHistory with \"/\" path, so that vue-router could be running in special environments, such as in Native app mode.\r\n\r\nThe problem is in the go[1] method, original implementation makes go(-1) can't work correctly. \r\n\r\n[1] https://github.com/vuejs/vue-router/blob/dev/src/history/abstract.js#L31","Url":"https://github.com/vuejs/vue-router/pull/2371","RelatedDescription":"Closed or merged PR \"chore: init AbstractHistory for native app usage\" (#2371)"},{"Id":"356049242","IsPullRequest":true,"CreatedAt":"2018-08-31T18:05:36","Actor":"yangdan8","Number":"2370","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2370","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#2370)"},{"Id":"355888130","IsPullRequest":true,"CreatedAt":"2018-08-31T08:32:30","Actor":"brodul","Number":"2369","RawContent":null,"Title":"docs: fix version notice","State":"open","Body":"Minor documentation change.\r\nChange the version compatibility notice. ","Url":"https://github.com/vuejs/vue-router/pull/2369","RelatedDescription":"Open PR \"docs: fix version notice\" (#2369)"},{"Id":"355062947","IsPullRequest":false,"CreatedAt":"2018-08-29T09:10:32","Actor":"rover5056","Number":"2368","RawContent":null,"Title":"beforeRouteEnter does not working","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/ROVER_K/project/editor/ZrMzOx](https://codepen.io/ROVER_K/project/editor/ZrMzOx)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. install @vue/cli v3.0.1\r\n\r\n2.vue create pro  with  vue-router, ts,scss,babel\r\n\r\n\r\n3.just add  these simple code in default About.vue file\r\n\r\n```\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class About extends Vue {\r\n  // here I try to fire this function automatic when come in this component \r\n  beforeRouteEnter (to, from, next) {\r\n    console.log('tssssss223')\r\n    next();\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nI create a new project with vue-router by vue-cli v3 . And I 'm try beforeRouteEnter function and I found it does not fired. I just add simple codes on default project... So I am sure it's not other reason.. So is that any wrong with my code or my way to use it?\r\n\r\n### What is actually happening?\r\nThe beforeRouteEnter  does not fired,either beforeRouteEnter.\r\n\r\n \r\n\r\n---\r\nAm I use this function wrong?\r\nI just follow the  guide and I have no idea about\r\nMy first aim is pass the params between the components.But I found this problem,so I create a new default project with VUE-CLI 3, and reproduce this problem again .\r\n\r\nThanks for your reading,wating for your reply~~\r\nBest regards\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2368","RelatedDescription":"Closed issue \"beforeRouteEnter does not working\" (#2368)"},{"Id":"354896341","IsPullRequest":false,"CreatedAt":"2018-08-28T22:20:27","Actor":"benjamindavid","Number":"2367","RawContent":null,"Title":"Base URL containing query parameters breaks routing","State":"closed","Body":"### Version\r\n2.5.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/benjamindavid/pen/YOWgPr](https://codepen.io/benjamindavid/pen/YOWgPr)\r\n\r\n### Steps to reproduce\r\nGo to this URL (containing a test query parameter) https://s.codepen.io/benjamindavid/debug/YOWgPr/mVMbGpDQDqpr?p=test\r\n\r\n### What is expected?\r\nThe page should show \"foo\" as the Foo component is defined for the `/` path and the base URL contains the full path, including query parameters: `/benjamindavid/debug/YOWgPr/mVMbGpDQDqpr?p=test`\r\n\r\n### What is actually happening?\r\nThe `/` route is not matched, the query parameters contained in the base URL don't seem to be properly taken into account.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2367","RelatedDescription":"Closed issue \"Base URL containing query parameters breaks routing\" (#2367)"},{"Id":"354729720","IsPullRequest":false,"CreatedAt":"2018-08-28T13:28:11","Actor":"lordenas","Number":"2366","RawContent":null,"Title":"After build routing does not work in chrome, but works in firefox","State":"closed","Body":"### What problem does this feature solve?\r\nAfter \"npm run build\" try to run index.html\r\nEverything works in Firefox. But in google chrome when you click the link turns file:///C:/index ..\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nVue.use(VueRouter);\r\n\r\nimport Login from './pages/login';\r\nimport Index from './pages/index';\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tredirect: {name: 'Login'}\r\n\t},\r\n\t{\r\n\t\tname: 'Login',\r\n\t\tpath: '/login',\r\n\t\tcomponent: Login,\r\n\t\tprops: { name: 'Авторизация' }\r\n\t},\r\n\t{\r\n\t\tname: 'Index',\r\n\t\tpath: '/Index',\r\n\t\tcomponent: Index,\r\n\t\tprops: { name: 'Страницы' }\r\n\t}\r\n];\r\n\r\nexport const router = new VueRouter({\r\n\troutes,\r\n\tmode: 'history'\r\n});\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2366","RelatedDescription":"Closed issue \"After build routing does not work in chrome, but works in firefox\" (#2366)"},{"Id":"354193227","IsPullRequest":true,"CreatedAt":"2018-08-27T06:17:33","Actor":"xlfsummer","Number":"2365","RawContent":null,"Title":"Update type define of RouteConfig.props","State":"open","Body":"In route config, we can pass an object to 'props' property, which key is the name of router view, and type of value is one of boolean, object or function (RoutePropsFunction).\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2365","RelatedDescription":"Open PR \"Update type define of RouteConfig.props\" (#2365)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"359858860","IsPullRequest":true,"CreatedAt":"2018-09-13T11:42:03","Actor":"escapedcat","Number":"1402","RawContent":null,"Title":"chore(docs): link to vue docs watch for options","State":"open","Body":"> Accepts an optional options object that takes the same options as Vue's vm.$watch method.\r\n\r\nlinking to the actual `watch` of the vue doc might be helpful for others to check options faster. not sure if this is wanted though due to future maintenance efforts.","Url":"https://github.com/vuejs/vuex/pull/1402","RelatedDescription":"Open PR \"chore(docs): link to vue docs watch for options\" (#1402)"},{"Id":"359583716","IsPullRequest":true,"CreatedAt":"2018-09-12T17:40:01","Actor":"TimvdLippe","Number":"1401","RawContent":null,"Title":"Add esm-browser build to dist","State":"open","Body":"This PR is the complement of https://github.com/vuejs/vue/pull/7110 which is already being distributed on NPM for Vue. I have personally ran the build and imported in my project and I can confirm all references to `process` have been removed and that the code is not transpiled.\r\n\r\nFixes #1247","Url":"https://github.com/vuejs/vuex/pull/1401","RelatedDescription":"Open PR \"Add esm-browser build to dist\" (#1401)"},{"Id":"358486841","IsPullRequest":false,"CreatedAt":"2018-09-12T11:55:12","Actor":"the-s0urce","Number":"1398","RawContent":null,"Title":"Mutations or Actions deprecated?","State":"closed","Body":"### What problem does this feature solve?\r\nHello,\r\nas first sorry for abusing the issue system, but did not find any other contact option. On one of the last two vue.js conferences (not sure wich of both it was), you said, that Mutations and Actions will be merged to one call. I was looking for some written news about this now for quite a time. Now we are setting up a new big project and we would really love to get a confirmation about this.\r\nThank you\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1398","RelatedDescription":"Closed issue \"Mutations or Actions deprecated?\" (#1398)"},{"Id":"359277072","IsPullRequest":true,"CreatedAt":"2018-09-12T01:02:39","Actor":"kazupon","Number":"1400","RawContent":null,"Title":"update ja docs","State":"open","Body":"/ping @ktsn ","Url":"https://github.com/vuejs/vuex/pull/1400","RelatedDescription":"Open PR \"update ja docs\" (#1400)"},{"Id":"358495065","IsPullRequest":false,"CreatedAt":"2018-09-10T07:11:53","Actor":"ankitsinghaniyaz","Number":"1399","RawContent":null,"Title":"How to access Vue(vm) instance in Vuex store?","State":"open","Body":"### What problem does this feature solve?\r\nI have a `$notify` method on Vue prototype. I need to use that in my action. Is there a way to do that?\r\n\r\nI see that on Vuex we have `this.$_vm` but not sure if that is the right thing to do\r\n\r\n### What does the proposed API look like?\r\n`this.vue.$notify()`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1399","RelatedDescription":"Open issue \"How to access Vue(vm) instance in Vuex store?\" (#1399)"},{"Id":"358406566","IsPullRequest":false,"CreatedAt":"2018-09-09T19:55:57","Actor":"ClickerMonkey","Number":"1397","RawContent":null,"Title":"Improve Computed Support","State":"open","Body":"### What problem does this feature solve?\r\nBetter support for computed properties with a set function.\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```vue\r\nimport { mapComputed } from 'vuex'\r\nnew Vue({\r\n  computed: {\r\n    ...mapComputed({\r\n       'mutationName': 'stateVariable',\r\n       // example:\r\n       'setLoading': 'loading'\r\n    })\r\n  }\r\n})\r\n```\r\n\r\nThis would generate a computed property that would return `stateVariable` and when the value is changed it would call the mutation `mutationName` with the new value.\r\n\r\nThis greatly simplifies directives like `v-model`.\r\n\r\nImplementation:\r\n\r\n```TypeScript\r\ntype VuexComputedMap = { [mutation: string]: string };\r\n\r\nexport function mapComputed(map: VuexComputedMap) {\r\n  const mapped = Object.create(null);\r\n  for (const mutation in map) {\r\n    const variable = map[mutation]\r\n    mapped[variable] = {\r\n      get () {\r\n         return this.$store.state[ variable ]\r\n      },\r\n      set (value) {\r\n        this.$store.commit(mutation, value)\r\n      }\r\n    };\r\n  }\r\n  return mapped;\r\n}\r\n```\r\n\r\n### Problems\r\n\r\nThe implementation would need to be changed to account for modules & namespaces.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1397","RelatedDescription":"Open issue \"Improve Computed Support\" (#1397)"},{"Id":"355668368","IsPullRequest":false,"CreatedAt":"2018-09-09T18:09:20","Actor":"matsieftw","Number":"1389","RawContent":null,"Title":"Documentation Never Actually Walks You Through Set Up","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://thereisntoneandyoushouldnotrequirethis.com](https://thereisntoneandyoushouldnotrequirethis.com)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to your docs.\r\n2. Read them.\r\n3. Think about whether they would be helpful to someone trying to set up a Vue app.\r\n\r\n### What is expected?\r\nHelpful documentation walking you through set up of a Vue app using Vuex.\r\n\r\n### What is actually happening?\r\nA lot of info on concepts and no info on actually bringing in Vuex to your application.\r\n\r\n---\r\nVue's documentation in general never actually walks you through setting anything up. It provides a few code snippets and assumes you'll understand. The documentation has been the biggest source of my frustration while using Vue since it never actually explains anything.\r\n\r\nFor example, on the Vuex installation page, sandwiched between CDN/package manager installation and building from source, you've put that Vuex needs to be instantiated in a module set up. You've provided zero context for this. Is this in the store? Is this for every file you need to access the store in? More importantly, it shouldn't be on the installation page, let alone sandwiched in between different installation methods. Vue's documentation is riddled with these issues. Unfortunately, I still don't actually know enough about how Vue actually works to be able to contribute to the documentation in any way. If I didn't have to use Vue for the project I am on, I would be using React, Redux, & RxJs and have access to meaningful, better written documentation that bothers to walk you through the set up. If Vue actually wants to gain any real traction, you're going to need to actually show folks how to use and set up your tools.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1389","RelatedDescription":"Closed issue \"Documentation Never Actually Walks You Through Set Up\" (#1389)"},{"Id":"356482547","IsPullRequest":true,"CreatedAt":"2018-09-03T12:16:11","Actor":"xiaoshude","Number":"1396","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"open","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1396","RelatedDescription":"Open PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1396)"},{"Id":"356481173","IsPullRequest":true,"CreatedAt":"2018-09-03T12:13:04","Actor":"xiaoshude","Number":"1395","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"closed","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1395","RelatedDescription":"Closed or merged PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1395)"},{"Id":"355847188","IsPullRequest":false,"CreatedAt":"2018-09-03T07:21:12","Actor":"Fachher","Number":"1391","RawContent":null,"Title":"Registering Vuex hooks prevents vue rendering.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool.git](https://github.com/Fachher/vuejsschool.git)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nyarn run serve.\r\nopen browser and open http://localhost:8080\r\nYou will see that only the navigationbar is displayed but content is missing.\r\n\r\n### What is expected?\r\nSee the content of each route\r\n\r\n### What is actually happening?\r\ncontent is not rendered\r\n\r\n---\r\nRemoving hook methods from About.vue, Home.vue and ShipmentList.vue leads to working app. This means just adding the hooks does not lead to this behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1391","RelatedDescription":"Closed issue \"Registering Vuex hooks prevents vue rendering.\" (#1391)"},{"Id":"355913234","IsPullRequest":false,"CreatedAt":"2018-09-01T04:09:50","Actor":"imatmati","Number":"1393","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"### What problem does this feature solve?\r\nPrevent wrong placement of mapping helpers in component.\r\nI came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once .\r\n\r\n### What does the proposed API look like?\r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\n\r\nBut to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1393","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1393)"},{"Id":"356049299","IsPullRequest":true,"CreatedAt":"2018-09-01T03:52:33","Actor":"yangdan8","Number":"1394","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1394","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#1394)"},{"Id":"355885735","IsPullRequest":false,"CreatedAt":"2018-08-31T08:24:23","Actor":"imatmati","Number":"1392","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"Hi,\r\n\r\nI would to propose an enhancement. I came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once ... But to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone. Why not something like : \r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\nIt would insert correctly the helpers in the component.\r\nHave a nice day.\r\n\r\nIvan Matmati\r\n","Url":"https://github.com/vuejs/vuex/issues/1392","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1392)"},{"Id":"355824650","IsPullRequest":false,"CreatedAt":"2018-08-31T03:15:23","Actor":"myadomin","Number":"1390","RawContent":null,"Title":"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js](https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\n\r\n\r\n### What is expected?\r\ndelete the todoItem\r\n\r\n### What is actually happening?\r\ndelete the todoItem and anothre todoItem\r\n\r\n---\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\nit will execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nin page vuex\\examples\\todomvc\\store\\mutations.js, mutation:removeTodo.\r\nthe mutation:removeTodo will execute twice, so will delete two todoItem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1390","RelatedDescription":"Open issue \"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem\" (#1390)"},{"Id":"355551023","IsPullRequest":true,"CreatedAt":"2018-08-31T03:02:07","Actor":"myadomin","Number":"1388","RawContent":null,"Title":"fix bug: examples/todomvc","State":"closed","Body":"page vuex\\examples\\todomvc\\store\\mutations.js,  method:removeTodo.\r\nwhen edit some one todoItem, clear the todoItem, then press keyboard enter.\r\nbecause execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nso here will execute twice, so will delete two todoItem.\r\nso i suggest change here to .","Url":"https://github.com/vuejs/vuex/pull/1388","RelatedDescription":"Closed or merged PR \"fix bug: examples/todomvc\" (#1388)"},{"Id":"355404917","IsPullRequest":false,"CreatedAt":"2018-08-30T05:04:44","Actor":"lin-123","Number":"1384","RawContent":null,"Title":"mutate setHours by date.setHours() will not trigger view update ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/lin-123/pen/RYoaOK?editors=1111](https://codepen.io/lin-123/pen/RYoaOK?editors=1111)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n## code\r\n- store.js\r\n```javascript\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as mutations from './mutations'\r\nimport * as actions from './actions'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    date: new Date()\r\n  },\r\n  mutations,\r\n  actions,\r\n  strict: process.env.NODE_ENV !== 'production'\r\n})\r\n```\r\n\r\n- mutations.js\r\n```javascript\r\nexport const SET_HOUR = (state, hours) => {\r\n  state.date.setHours(hours)\r\n}\r\n```\r\n\r\n- components\r\n```html\r\n<template>\r\n<div class=\"map\">\r\n  <h2>{{dateFull}}</h2>\r\n  <button @click=\"updateHours\">update hours</button>\r\n</div>\r\n</template>\r\n<script>\r\nimport L from 'leaflet'\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  data: () => ({\r\n    hours: 0\r\n  }),\r\n  computed: {\r\n    ...mapState({\r\n      date: state => state.date\r\n    })\r\n  },\r\n  methods: {\r\n    updateHours() {\r\n      this.hours  = 1\r\n      this.$store.commit('SET_HOURS', this.hours)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\ndate should be change on view when i mutate date\r\n\r\n### What is actually happening?\r\nview have no change when i mutate date by state.date.setHours(hours).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1384","RelatedDescription":"Closed issue \"mutate setHours by date.setHours() will not trigger view update \" (#1384)"},{"Id":"355413687","IsPullRequest":true,"CreatedAt":"2018-08-30T05:01:01","Actor":"leecade","Number":"1387","RawContent":null,"Title":"fix: confused namespace for get module","State":"closed","Body":"see #1386","Url":"https://github.com/vuejs/vuex/pull/1387","RelatedDescription":"Closed or merged PR \"fix: confused namespace for get module\" (#1387)"},{"Id":"355412566","IsPullRequest":false,"CreatedAt":"2018-08-30T05:00:49","Actor":"leecade","Number":"1386","RawContent":null,"Title":"Confused namespace for get module","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. create files in store folder\r\n\r\n`store/foo/index.js`\r\n\r\n`store/foo/a.js`\r\n\r\n2. get module by namespace\r\n\r\n```js\r\ncomputed: {\r\n   ...mapState('foo/a', []), // correct\r\n   ...mapState('foo', []), // correct\r\n   //  ...mapState('foo/index', []), // not works here\r\n}\r\n```\r\n\r\n### What is expected?\r\nit make sense if `mapState('foo/index', [])` works as `mapState('foo', [])`\r\n\r\n### What is actually happening?\r\n`mapState('foo/index', [])` not work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1386","RelatedDescription":"Closed issue \"Confused namespace for get module\" (#1386)"},{"Id":"355411714","IsPullRequest":false,"CreatedAt":"2018-08-30T03:36:45","Actor":"leecade","Number":"1385","RawContent":null,"Title":"Confused namespace for module","State":"closed","Body":"## Version\r\n\r\n3.0.1\r\n\r\nReproduction link\r\n\r\n## Steps to reproduce\r\n\r\n1. create file in store folder\r\n\r\n`store/foo/index.js`\r\n\r\n`store/foo/a.js`\r\n\r\n2. get module by namespace\r\n\r\n```js\r\ncomputed: {\r\n   ...mapState('foo/a', []), // correct\r\n   ...mapState('foo', []), // correct\r\n   //  ...mapState('foo/index', []), // not works here\r\n}\r\n```\r\n\r\n## What is expected?\r\n\r\nit make sense if `mapState('foo/index', [])` works as `mapState('foo', [])`\r\n\r\n## What is actually happening?\r\n\r\n`mapState('foo/index', [])` not work","Url":"https://github.com/vuejs/vuex/issues/1385","RelatedDescription":"Closed issue \"Confused namespace for module\" (#1385)"},{"Id":"355221437","IsPullRequest":false,"CreatedAt":"2018-08-29T15:43:11","Actor":"james-wasson","Number":"1383","RawContent":null,"Title":"Vuex loop dependencies are slow","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/james_wasson/2ut7rbx5/](https://jsfiddle.net/james_wasson/2ut7rbx5/)  \r\nPlease refer to the console for more information while running this fiddle.  \r\nYou can control what is being logged by changing the flags at the top of the fiddle\r\n\r\n### Steps to reproduce\r\n* create a loop adding a component\r\n* add > 8 Vuex dependencies per component row\r\n* when changing the list removing rows is slow\r\n\r\n### What is expected?\r\nDepending on Vuex should be of similar speed to passing as props.  \r\nHere is an example of passing by props: https://jsfiddle.net/james_wasson/8g2fxr9n/\r\n\r\n### What is actually happening?\r\nDepending on the number of rows the removal time increase to more than 100 milliseconds, and at very high numbers of rows (> 400) removal can take up to 500 milliseconds\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1383","RelatedDescription":"Open issue \"Vuex loop dependencies are slow\" (#1383)"},{"Id":"354375091","IsPullRequest":false,"CreatedAt":"2018-08-29T01:05:01","Actor":"devinholloway","Number":"1381","RawContent":null,"Title":"store.watch not functioning in SSR mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/devinholloway/vuex-watch-ssr](https://github.com/devinholloway/vuex-watch-ssr)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone the github account. Follow instructions in README\r\n\r\n### What is expected?\r\nstore.watch to execute its callback when the state its watching chanes\r\n\r\n### What is actually happening?\r\ncallback is not called on state update only in SSR\r\n\r\n---\r\nThis is a project using Quasar for SSR. preFetch methods execute server side, much like the fetch methods in Nuxt. The purpose of this is to execute multiple server side functions where one depends on the results of the other.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1381","RelatedDescription":"Closed issue \"store.watch not functioning in SSR mode\" (#1381)"},{"Id":"354683228","IsPullRequest":false,"CreatedAt":"2018-08-28T11:13:18","Actor":"sergioIGZ","Number":"1382","RawContent":null,"Title":"this is undefined inside the getters","State":"open","Body":"### What problem does this feature solve?\r\nif (somehow) you can access to this inside getters then you could use plugins inside getters (as you can now in actions or mutations)\r\n\r\n### What does the proposed API look like?\r\nI'm not sure how would i solve this, maybe this is a bug.\r\nThe thing is that inside a getter you can use this.$myPlugin.whatever()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1382","RelatedDescription":"Open issue \"this is undefined inside the getters\" (#1382)"},{"Id":"351720920","IsPullRequest":true,"CreatedAt":"2018-08-25T09:00:18","Actor":"Alex-Sokolov","Number":"1376","RawContent":null,"Title":"docs: [RU] Translation fixes","State":"closed","Body":"Fix links anchors","Url":"https://github.com/vuejs/vuex/pull/1376","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation fixes\" (#1376)"},{"Id":"353990294","IsPullRequest":true,"CreatedAt":"2018-08-25T08:59:53","Actor":"kkkisme","Number":"1380","RawContent":null,"Title":"Update logger.d.ts","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1380","RelatedDescription":"Closed or merged PR \"Update logger.d.ts\" (#1380)"},{"Id":"353618860","IsPullRequest":false,"CreatedAt":"2018-08-24T02:21:10","Actor":"Xiaolin-Zhu","Number":"1379","RawContent":null,"Title":"There is a error when I use ...mapState","State":"closed","Body":"`...mapState({\r\n            inviteeCount: state => state.inviteeCount,\r\n        })`\r\n\r\nError is \r\nUncaught TypeError: Object(...) is not a function","Url":"https://github.com/vuejs/vuex/issues/1379","RelatedDescription":"Closed issue \"There is a error when I use ...mapState\" (#1379)"},{"Id":"353167919","IsPullRequest":false,"CreatedAt":"2018-08-23T01:17:09","Actor":"philBrown","Number":"1378","RawContent":null,"Title":"Direct mutation of state not throwing error in strict mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/r1z0a4gp/7/](https://jsfiddle.net/r1z0a4gp/7/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the JSFiddle example, type into the text box.\r\n\r\nThe input's `v-model` is bound to a computed property with getter and setter. The getter maps directly to `$store.state.foo` and the setter dispatches the \"setFoo\" action.\r\n\r\nThe action directly modifies `context.state.foo` instead of committing a mutation.\r\n\r\n\r\n\r\n### What is expected?\r\nStrict mode is enabled so I would expect to see an error about directly mutating state outside of a mutation\r\n\r\n### What is actually happening?\r\nNo errors are reported and state is modified\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1378","RelatedDescription":"Closed issue \"Direct mutation of state not throwing error in strict mode\" (#1378)"},{"Id":"352092756","IsPullRequest":false,"CreatedAt":"2018-08-20T11:21:30","Actor":"dracarys26","Number":"1377","RawContent":null,"Title":"vuex 支持es6的map 吗","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/issues/1377","RelatedDescription":"Closed issue \"vuex 支持es6的map 吗\" (#1377)"},{"Id":"350321174","IsPullRequest":true,"CreatedAt":"2018-08-14T08:39:00","Actor":"Jinjiang","Number":"1375","RawContent":null,"Title":"Applied #1361 to all languages","State":"closed","Body":"#1361 ","Url":"https://github.com/vuejs/vuex/pull/1375","RelatedDescription":"Closed or merged PR \"Applied #1361 to all languages\" (#1375)"},{"Id":"350267631","IsPullRequest":false,"CreatedAt":"2018-08-14T03:24:57","Actor":"eddygithub","Number":"1374","RawContent":null,"Title":"user state doesn't auto change until I manual reload the page","State":"closed","Body":"<template>\r\n    <b-navbar toggleable=\"md\" type=\"light\" variant=\"light\">\r\n        <b-navbar-nav>\r\n            <b-nav-item href=\"#\">Home</b-nav-item>\r\n        </b-navbar-nav>\r\n\r\n        <b-navbar-nav class=\"ml-auto\">\r\n            <b-nav-form>\r\n                <b-form-input class=\"mr-sm-2\" type=\"text\" placeholder=\"Search...\" v-model=\"searchText\"></b-form-input>\r\n                <b-button variant=\"outline-success\" type=\"submit\" @click=\"search\">Search</b-button>\r\n            </b-nav-form>\r\n            <b-button v-if=\"user\" variant=\"outline-danger\" @click=\"logout\">Logout</b-button>\r\n        </b-navbar-nav>\r\n    </b-navbar>\r\n</template>\r\n\r\n<script>\r\n    import firebase from 'firebase'\r\n\r\n    export default {\r\n        name: \"navbar\",\r\n        data() {\r\n            return {\r\n                searchText: '',\r\n                user: firebase.auth().currentUser || false\r\n            }\r\n        },\r\n        methods: {\r\n            search: function () {\r\n                console.log(\"search for \".concat(this.searchText))\r\n            },\r\n            logout: function () {\r\n                firebase.auth().signOut().then(() => {\r\n                    this.$router.replace('login')\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n</script>","Url":"https://github.com/vuejs/vuex/issues/1374","RelatedDescription":"Closed issue \"user state doesn't auto change until I manual reload the page\" (#1374)"},{"Id":"349842520","IsPullRequest":true,"CreatedAt":"2018-08-12T20:44:22","Actor":"evgenyt1","Number":"1373","RawContent":null,"Title":"Improve strong-typing of getters","State":"open","Body":"See small diff. At least in TS3 this improves makes `getters` strongly typed (still allowing generic getters calls).","Url":"https://github.com/vuejs/vuex/pull/1373","RelatedDescription":"Open PR \"Improve strong-typing of getters\" (#1373)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-18T05:30:49.5630935Z","RunDurationInMilliseconds":4007}