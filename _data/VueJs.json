{"Data":{"Vue-Issues":{"Issues":[{"Id":"472039138","IsPullRequest":false,"CreatedAt":"2019-07-24T01:42:58","Actor":"aoi-umi","Number":"10307","RawContent":null,"Title":"tsx下使用v-html报错","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/aoi-umi/demo/commit/b738088f5d934b9c8e53a1f4a3e4a761966af7b0#diff-95d77e7cf3ad25bef47127a93ba4738b](https://github.com/aoi-umi/demo/commit/b738088f5d934b9c8e53a1f4a3e4a761966af7b0#diff-95d77e7cf3ad25bef47127a93ba4738b)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ntsx下使用v-html\r\n```html\r\n<p v-html={params.row.content}></p>;\r\n```\r\n无法显示，报以下错误\r\nFailed to resolve directive: html\r\n\r\n### What is expected?\r\n正确显示html内容\r\n\r\n### What is actually happening?\r\nFailed to resolve directive: html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10307","RelatedDescription":"Open issue \"tsx下使用v-html报错\" (#10307)"},{"Id":"472036677","IsPullRequest":false,"CreatedAt":"2019-07-24T01:30:38","Actor":"g4jc","Number":"10306","RawContent":null,"Title":"Click handlers do not work on all UXP applications","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/pzumygcq/](https://jsfiddle.net/pzumygcq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Download and install any UXP application (Pale Moon, Basilisk, and others).\r\n* Click on show button (this is important, click handlers work if they are bound when currentFlushTimestamp is 0).\r\n* This will show a second button, this button will increment the count variable every time it is clicked, except for UXP applications.\r\n\r\n\r\n### What is expected?\r\ncount variable will increment\r\n\r\n### What is actually happening?\r\nClick handler is not firing.\r\n\r\n---\r\nSeveral sites in production are not working properly on [Pale Moon](https://www.palemoon.org/), and by extension, all other applications currently being built on the [Unified XUL Platform](http://thereisonlyxul.org/).\r\n\r\nI was able to trace this issue back to #9446. Since the string hack only identifies the FireFox Useragent it does not properly send UXP applications down the correct path.\r\n\r\nShort-term, `Goanna` could be used as an identifier which will work for Pale Moon and Basilisk. However, a better implementation would be to test if the `event.timeStamp` is returning the correct values, if yes proceed, if note continue down the FF52 path that was introduced as a bug fix in Issue #9446.\r\n\r\nSince multiple applications are using UXP, Goanna is not a consistent identifier aside from Pale Moon and Basilisk.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10306","RelatedDescription":"Open issue \"Click handlers do not work on all UXP applications\" (#10306)"},{"Id":"471909098","IsPullRequest":false,"CreatedAt":"2019-07-23T20:05:18","Actor":"btoo","Number":"10305","RawContent":null,"Title":"Facilitate debugging in template","State":"open","Body":"### What problem does this feature solve?\r\nDebugging from template code is frustratingly impractical because you lose access to the conventional tools available to you in plain javascript. The reference to the `console` is missing because it is not in the scope of the component instance. Yes, you can add it to the component instance or even the global Vue prototype, but to have to do this every time you need to debug, and then remove for the sake of keeping your code clean, is needlessly tedious. \r\n\r\nAdditionally, the `debugger` keyword (for example within an in-template IIFE) is barely of any use because the compiled variables do not match those of the component instance.\r\n\r\nThis has been an issue for me for a while now, but I was more forgiving of it because how incredible Vue otherwise is. However, I recently noticed that [Svelte.js offers a pretty nifty OOTB feature for debugging in templates](https://svelte.dev/docs#debug).\r\n\r\nFrom their docs:\r\n> The {@debug ...} tag offers an alternative to console.log(...). It logs the values of specific variables whenever they change, and pauses code execution if you have devtools open.\r\n> \r\n> It accepts a comma-separated list of variable names (not arbitrary expressions).\r\n> \r\n> The {@debug} tag without any arguments will insert a debugger statement that gets triggered when any state changes, as opposed to the specified variables.\r\n\r\nIs there any way we can bring this into Vue template syntax?\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n<template>\r\n  <div>\r\n    {{ @debug }}\r\n    or\r\n    {{ @debug var1, var2, ..., varN }}\r\n  </div>\r\n</template>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10305","RelatedDescription":"Open issue \"Facilitate debugging in template\" (#10305)"},{"Id":"471831134","IsPullRequest":false,"CreatedAt":"2019-07-23T17:32:25","Actor":"Xationch","Number":"10304","RawContent":null,"Title":"Adding vuejs data on template make scroll event bug","State":"closed","Body":"I found something very very strange : I'm using capacitor (but without Ionic, I'm creating everything myself) for create a iOS app. I try to recreate a refresh style scroll. See my code :\r\n\r\n```javascript\r\n  data() {\r\n    return {\r\n      position: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener('scroll', this.onScroll, true)\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('scroll', this.onScroll, true)\r\n  },\r\n  methods: {\r\n    onScroll(event) {\r\n      this.position = event.target.scrollTop\r\n      console.log(event.target.scrollTop)\r\n    }\r\n  }\r\n```\r\n\r\nWith some css help I can create the \"negative\" scroll / bounce. Evertything working well except when I display the data this.position on the <template> ! That mutate (add?) some 0 value to the event.target.scrollTop... And it's only when I scrolling on negative. Nothing append on positive scrolling in both case.\r\n\r\n```javascript\r\n<template>\r\n     ...\r\n    <div :class=\"$style.percentage\">\r\n      {{ position }}\r\n    </div>\r\n     ...\r\n```\r\n![6CLQoOo](https://user-images.githubusercontent.com/24409229/61733602-757c2480-ad80-11e9-8225-4b2dfc584786.png)\r\n\r\nHow is it possible that adding this.position to the template the event.target.scrollTop add some 0? When I remove the data this.position from the template it's working. And when this.position is present but hidden by display: none it's working\r\n```html\r\n<!-- working -->\r\n<span style=\"display: none;\">\r\n{{ this.position }}\r\n</span>\r\n```\r\n![jY7JtZs](https://user-images.githubusercontent.com/24409229/61733601-757c2480-ad80-11e9-8f40-2462077f4f34.png)","Url":"https://github.com/vuejs/vue/issues/10304","RelatedDescription":"Closed issue \"Adding vuejs data on template make scroll event bug\" (#10304)"},{"Id":"471639628","IsPullRequest":false,"CreatedAt":"2019-07-23T11:35:05","Actor":"Grovespaz","Number":"10303","RawContent":null,"Title":"Can't reuse data object in createElement","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/dxGVOg?editors=1010#0](https://codepen.io/anon/pen/dxGVOg?editors=1010#0)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn your render function, create two distinct elements (with two separate createElement calls), but with the same data object specifying an event listener.\r\n\r\n### What is expected?\r\nWhen the event is triggered from the *second* child component, it should fire the appropiate handler.\r\n\r\n### What is actually happening?\r\nNothing\r\n\r\n---\r\nI am aware of the constraints section here: https://vuejs.org/v2/guide/render-function.html#Constraints but it doesn't seem to specifically mention re-use of just the data-object.\r\n\r\nIf this restriction is known and meant to be then this issue is about properly documenting this limitation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10303","RelatedDescription":"Closed issue \"Can't reuse data object in createElement\" (#10303)"},{"Id":"471452975","IsPullRequest":true,"CreatedAt":"2019-07-23T02:38:33","Actor":"NarithEko","Number":"10301","RawContent":null,"Title":"Delete CODE_OF_CONDUCT.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10301","RelatedDescription":"Closed or merged PR \"Delete CODE_OF_CONDUCT.md\" (#10301)"},{"Id":"471453593","IsPullRequest":true,"CreatedAt":"2019-07-23T02:18:06","Actor":"NarithEko","Number":"10302","RawContent":null,"Title":"Delete BACKERS.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10302","RelatedDescription":"Closed or merged PR \"Delete BACKERS.md\" (#10302)"},{"Id":"471320166","IsPullRequest":false,"CreatedAt":"2019-07-22T20:42:34","Actor":"v174ly","Number":"10300","RawContent":null,"Title":"v-bind:key should be optional.","State":"closed","Body":"`v-bind:key` should be optional, when using `v-for`.\r\nThis is not a question about is `v-bind:key` required or not.\r\nVue should generate unique key by default in background. if omitted. \r\nMaybe I have not quite understood yet. Why is it required? I get an error in console and highlighted in editor. (I come from Angular 2+)\r\n\r\nhttps://vuejs.org/v2/guide/list.html#Maintaining-State\r\n\r\nVersion `2.6.10`\r\n","Url":"https://github.com/vuejs/vue/issues/10300","RelatedDescription":"Closed issue \"v-bind:key should be optional.\" (#10300)"},{"Id":"471235730","IsPullRequest":false,"CreatedAt":"2019-07-22T18:11:53","Actor":"DavudSafarli","Number":"10299","RawContent":null,"Title":"Being able to see and mutate vuex state from browser console. Is it a vulnerability?","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/10299","RelatedDescription":"Closed issue \"Being able to see and mutate vuex state from browser console. Is it a vulnerability?\" (#10299)"},{"Id":"471123018","IsPullRequest":false,"CreatedAt":"2019-07-22T14:19:49","Actor":"nori3tsu","Number":"10298","RawContent":null,"Title":"data property and class extended with Array","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/632dch1e/](https://jsfiddle.net/632dch1e/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen link to minimal reproduction\r\n\r\n### What is expected?\r\nKeep the type even if you set the class that extends Array to data.\r\n\r\n### What is actually happening?\r\nMethods defined in a class that extends Array can not be used.\r\nAlso, since the class of each object of Array remains as it is, the class structure is broken.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10298","RelatedDescription":"Closed issue \"data property and class extended with Array\" (#10298)"},{"Id":"470241895","IsPullRequest":false,"CreatedAt":"2019-07-22T07:20:02","Actor":"Ystr4","Number":"10295","RawContent":null,"Title":"Cannot read property '_isDestroyed' of undefined\"","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/Ystr4/is_destroyed_error](https://github.com/Ystr4/is_destroyed_error)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTo get the error, click on button: \"doesn't work\", a few times.\r\n\r\n### What is expected?\r\nTo get an error if a component fails to render\r\n\r\n### What is actually happening?\r\nTrying to cleanup something that doesn't exist\r\n\r\n---\r\nHi,\r\nI'm rewriting an old barebones javascript frontend using Vue.js.\r\nAllot of the content of the site is created with a custom tool which outputs an array of objects for the nodes. \r\nI'm using render functions to build the HTML templates out of that. Some of the components have allot of logic in them and are just container around simple html elements.\r\n\r\nThis seems to be working fine for most template, but on some of the templates I get this error in the destroy cycle when the :key gets updated (i.e load a different template). \r\n\r\nDepending where i put the :key i get different error messages but they are all duo to the instance being undefined.\r\n\r\nDoes this have something to do with how I create the parent/child hierarchy by assigning directly to children on the VNode, or mixing functional components with non functional? \r\n\r\nAny suggestions are welcome. Cheers.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10295","RelatedDescription":"Closed issue \"Cannot read property '_isDestroyed' of undefined\"\" (#10295)"},{"Id":"470801095","IsPullRequest":false,"CreatedAt":"2019-07-21T16:52:41","Actor":"waldonUB","Number":"10297","RawContent":null,"Title":"当component绑定key时，keep-alive的max存在问题","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/waldonUB/pen/PMqXdr](https://codepen.io/waldonUB/pen/PMqXdr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. 点击第二个tem1按钮，将key值切换到 b\r\n2. 点击temp2，将key值切换到 c\r\n\r\n### What is expected?\r\n因为max设置为2，所以到第3个key值时，key值为a的temp1组件应该被销毁\r\n\r\n### What is actually happening?\r\n到了第三个key值的时候没有key值为a的temp1组件没有被销毁，而是到了第四个key值的时候才被销毁\r\n\r\n---\r\n#### 使用场景\r\n- 我需要对话框来缓存数据，但是很多对话框是相同的组件，以不同的编码来查询不同的数据\r\n- 以编码作为key值绑定在component上缓存组件，避免重新打开时再次查询\r\n- 加上max属性，防止内存溢出\r\n\r\n#### 绑定key时，max存在的问题\r\n- 当同一个组件有多个key绑定时，当key的数量 >= max的值，max将会缓存相同的key，不会触发生命周期中的destroyed函数  \r\n![](http://ww1.sinaimg.cn/large/00760Iw1gy1g57y2y0ef4j30g80ipgmb.jpg)\r\n\r\n#### 以往类似的issue\r\n- https://github.com/vuejs/vue/issues/6509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10297","RelatedDescription":"Closed issue \"当component绑定key时，keep-alive的max存在问题\" (#10297)"},{"Id":"469844565","IsPullRequest":false,"CreatedAt":"2019-07-20T11:18:26","Actor":"dritir","Number":"10289","RawContent":null,"Title":"-leave transition class is not applied","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/mftxrs1d/27/](http://jsfiddle.net/mftxrs1d/27/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick toggle button on fiddle\r\n\r\n### What is expected?\r\nI expected to see the square change to red.\r\ninitial color: grey.\r\n\r\nleaving:\r\n[red]->[green]\r\nentering\r\n[blue]->[yellow]\r\n\r\n### What is actually happening?\r\nNot applying v-leave class\r\ninitial color: grey.\r\n\r\nleaving:\r\n[grey]->[green]\r\nentering\r\n[blue]->[yellow]\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10289","RelatedDescription":"Closed issue \"-leave transition class is not applied\" (#10289)"},{"Id":"470510153","IsPullRequest":true,"CreatedAt":"2019-07-19T19:46:05","Actor":"Gherciu","Number":"10296","RawContent":null,"Title":"[Enhancement]  improved eslint-config to be more readable","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nupdated eslint-config to be more readable and more understandable","Url":"https://github.com/vuejs/vue/pull/10296","RelatedDescription":"Open PR \"[Enhancement]  improved eslint-config to be more readable\" (#10296)"},{"Id":"470208901","IsPullRequest":false,"CreatedAt":"2019-07-19T08:44:22","Actor":"JackFGreen","Number":"10294","RawContent":null,"Title":"[SSR] SyntaxError: Unexpected token export， babel-loader 已经编译 node_modules 中的 es6 文件","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/JackFGreen/vue-ssr-demo](https://github.com/JackFGreen/vue-ssr-demo)\r\n\r\n### Steps to reproduce\r\n1. yarn build && yarn prod\r\n2. http://localhost:3000/\r\n3. logs/app.log\r\n\r\n### What is expected?\r\n调用 vendors 中编译后的 demo-lib\r\n\r\n### What is actually happening?\r\n调用了 node_modules/demo-lib 中的 es6 源码\r\n\r\n![image](https://user-images.githubusercontent.com/23187848/61522019-10ed5c80-aa44-11e9-845c-4505be16293d.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10294","RelatedDescription":"Closed issue \"[SSR] SyntaxError: Unexpected token export， babel-loader 已经编译 node_modules 中的 es6 文件\" (#10294)"},{"Id":"470179021","IsPullRequest":false,"CreatedAt":"2019-07-19T07:25:57","Actor":"LingRen","Number":"10293","RawContent":null,"Title":"sleep","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/10293","RelatedDescription":"Closed issue \"sleep\" (#10293)"},{"Id":"470118615","IsPullRequest":true,"CreatedAt":"2019-07-19T03:21:55","Actor":"hanzhangyu","Number":"10292","RawContent":null,"Title":"refactor: use lastIndex provide by exec","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\n> I received lots of changes after run `npm run build`, so I skip it\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\nlastIndex will auto-update in `RegExp.prototype.exec`, We do not need update manually\r\n- https://tc39.es/ecma262/#sec-regexpbuiltinexec\r\n\r\n**Other information:**\r\n\r\n```js\r\nvar a = /a/g\r\nvar lastIndex = a.lastIndex\r\nvar match = a.exec(\"baa\")\r\nmatch[0].length + match.index === a.lastIndex\r\n```","Url":"https://github.com/vuejs/vue/pull/10292","RelatedDescription":"Open PR \"refactor: use lastIndex provide by exec\" (#10292)"},{"Id":"469976432","IsPullRequest":false,"CreatedAt":"2019-07-18T20:48:27","Actor":"LongTengDao","Number":"10291","RawContent":null,"Title":"与原生标签名称冲突时，如果组件存在，优先作为组件解析；至少 SVG 标签名检测不应该不区分大小写","State":"closed","Body":"### What problem does this feature solve?\r\n\r\n目前的 Vue 引擎的机制是，如果标签名和浏览器原生元素同名，那么无论是否存在这个组件，都作为原生元素对待。\r\n\r\n这就意味着为组件起名字时，要记忆和回避所有已经存在的原生元素名。\r\n\r\nVue文档中建议，自定义组件中应当包含 `-`，这样就不会冲突了。但是实践中，刻意总是把一个直观的单词变成两个单词是非常难受的。\r\n\r\n好在后来的 Vue 实现了大驼峰组件名，并推荐这种做法。这样就不用管黑名单了，可以根据语义自由设置最佳的组件名。\r\n\r\n但是最近发现，一旦与 SVG 全家桶同名，那么无论是否大小写，都会无效：\r\n```js\r\nnew Vue({\r\n    template: '<LiNe />',// 这个不会被作为组件对待\r\n    components: {\r\n        LiNe: {\r\n            template: '<div>LiNe</div>'\r\n        },\r\n    },\r\n});\r\n```\r\n\r\n而这个清单很长，又没什么规律，还都是常用单词，而且 SVG 标签并不是常用标签，前端工程师对此不熟悉是很正常的，文档中也没有提醒，中间甚至还有包含 `-` 和大写字母（好在不是首字母）的标签名：\r\n```\r\nsvg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,\r\nforeignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,\r\npolygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view\r\n```\r\n\r\n这就意味着写 Vue 时，要么面向黑名单编程，要么就要放弃无脑大驼峰的便利，一律用 `-` 写组件名（而且还要回避 `font-face` 和 `missing-glyph`）。\r\n\r\n更糟糕的是，可以想见，一旦未来 MathML 全家桶外来元素清单生效，按照目前的机制，会打破很多已有的 Vue 组件兼容，对引擎开发者同样是个历史包袱。\r\n\r\n### What does the proposed API look like?\r\n\r\n将这里的第二个参数 `, true` 去掉，使得 SVG 内置标签名检测行为大小写敏感：\r\n\r\nhttps://github.com/vuejs/vue/blob/52719ccab8fccffbdf497b96d3731dc86f04c1ce/src/platforms/web/util/element.js#L31\r\n\r\n当然更期待的做法是，无论标签名是什么，都优先检查组件是否存在，不存在才作为浏览器原生元素对待。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10291","RelatedDescription":"Closed issue \"与原生标签名称冲突时，如果组件存在，优先作为组件解析；至少 SVG 标签名检测不应该不区分大小写\" (#10291)"},{"Id":"469851194","IsPullRequest":false,"CreatedAt":"2019-07-18T15:56:37","Actor":"Stegosource","Number":"10290","RawContent":null,"Title":"Dynamic input with component doesn't update UI","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-hi3gb](https://codesandbox.io/s/vue-template-hi3gb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate an input component with the <component /> tag, and bind the value and input events for data updates:\r\n<component :is=\"'input'\" :value=\"text1\" @input=\"text1 = $event.target.value\"/>\r\n\r\nEdit the input value manually and you can confirm the data is being updated.\r\n\r\nProgramatically change the data and everything depending on the data will update including the \"value\" of the input, but the visual UI for the input will still show the old data.\r\n\r\n### What is expected?\r\nIf I clear the data programmatically, the input should also clear\r\n\r\n### What is actually happening?\r\nClearing the data functionally works, but visually leaves the previous data as the input value.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10290","RelatedDescription":"Closed issue \"Dynamic input with component doesn't update UI\" (#10290)"},{"Id":"469781375","IsPullRequest":false,"CreatedAt":"2019-07-18T13:49:46","Actor":"elevatebart","Number":"10288","RawContent":null,"Title":"Can template parser avoid loosing comments betwen conditionals?","State":"open","Body":"### What problem does this feature solve?\r\nLibraries like vuese or vue-docgen-api, use comments to determine how to document slots, props, methods, and events.\r\nIt gets comments from a JavaScript AST for the JavaScript code. \r\nUsing the `vue-template-compiler` parser, it does the same for HTML templates.\r\n\r\nHere is the catch: If a comment is in-between conditions of `v-if`/`v-else`, see below, the comment will not be in the returned AST.\r\n\r\n```vue\r\n<template>\r\n  <div v-if=\"test\">foo</div>\r\n  <!-- this comment will disapear -->\r\n  <p v-else>bar</p>\r\n</template>\r\n```\r\n\r\nSince I am using these comments to build the appropriate documentation objects, those comments will never bubble up.\r\n\r\n### What does the proposed API look like?\r\nWhat if `ASTifCondition` could contain their own comment field? \r\nThe field would contain the `comment` as an ASTText object just before the condition allowing conditions to be commented and parsed.\r\n\r\nShould it only contain the last one?\r\nShould it contain an array of comments?\r\nShould its name even be comments?\r\nIs there performance concerns to look at?\r\n\r\nThank you in advance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nI already created a PR #10286 for the desired API. \r\nI can change it however you decide.","Url":"https://github.com/vuejs/vue/issues/10288","RelatedDescription":"Open issue \"Can template parser avoid loosing comments betwen conditionals?\" (#10288)"},{"Id":"469619532","IsPullRequest":false,"CreatedAt":"2019-07-18T07:47:37","Actor":"lifenglei","Number":"10287","RawContent":null,"Title":"MaxListenersExceededWarning","State":"closed","Body":"项目启动的时候 报错了\r\n\r\n\r\nMaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 upgrade listeners added. Use emitter.setMaxListeners() to increase limit\r\n","Url":"https://github.com/vuejs/vue/issues/10287","RelatedDescription":"Closed issue \"MaxListenersExceededWarning\" (#10287)"},{"Id":"469555742","IsPullRequest":true,"CreatedAt":"2019-07-18T03:39:15","Actor":"elevatebart","Number":"10286","RawContent":null,"Title":"feat(compiler): comments for if-else conditions","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\ncloses #10288 \r\n\r\n**Other information:**\r\n\r\nIn order to fix these 2 issues, I need to have access to the HTML comments before a `v-else` block\r\n- https://github.com/vue-styleguidist/vue-styleguidist/issues/430\r\n- https://github.com/vue-styleguidist/vue-styleguidist/issues/322\r\n\r\nTo give you an example, here is a format that does not work with the current parser.\r\nSince we cannot have the comments as normal nodes, I thought we could have the missing comment beside the `ifCondition`. \r\n\r\n```html\r\n<div>\r\n  <slot name=\"isTest\" v-if=\"test\"></slot>\r\n  <!-- doesn't come out -->\r\n  <slot name=\"foo\" v-else-if=\"otherTest\"></slot>\r\n  <!-- doesn't come out -->\r\n  <template v-else><slot name=\"bar\"></slot></template>\r\n</div>\r\n```","Url":"https://github.com/vuejs/vue/pull/10286","RelatedDescription":"Open PR \"feat(compiler): comments for if-else conditions\" (#10286)"},{"Id":"469329420","IsPullRequest":false,"CreatedAt":"2019-07-17T16:45:57","Actor":"yasirrose","Number":"10285","RawContent":null,"Title":"IE11, console print: [Vue warn]: Error in nextTick: \"Error: Invalid argument.\" But work well with chrome","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[http://ec2-18-207-188-97.compute-1.amazonaws.com/#/garage](http://ec2-18-207-188-97.compute-1.amazonaws.com/#/garage)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nYou need to open this link in IE, after that move below the slider and click on add to garage button after that go to garage page in header and then click on remove to garage. When you click on remove to garage then console trigger an error.\r\n http://ec2-18-207-188-97.compute-1.amazonaws.com/#/\r\n\r\n### What is expected?\r\nnextTick is working fine on chrome and firefox but not working on IE 11.\r\n\r\n### What is actually happening?\r\nnextTick is not working in IE 11. When DOM is updated it triggered an error in console. Here is the screenshot: http://prntscr.com/ogdz4t\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10285","RelatedDescription":"Closed issue \"IE11, console print: [Vue warn]: Error in nextTick: \"Error: Invalid argument.\" But work well with chrome\" (#10285)"},{"Id":"469103728","IsPullRequest":false,"CreatedAt":"2019-07-17T10:06:39","Actor":"AeonFr","Number":"10284","RawContent":null,"Title":"Consistency in `$refs`: all children of $refs array using same format.","State":"open","Body":"### What problem does this feature solve?\r\nI know this is intended as a feature, but I encountered a lot of issues when trying to access $refs due to all the different formats:\r\n\r\n- If `ref` is inside a `v-for`, the `$refs` element will be an array. This wouldn't be necessary since is trivial to add an unique name to the `ref` inside a loop, [as seen in this example](https://forum.vuejs.org/t/this-refs-theid-returns-an-array/31995/4)\r\n- If `ref` is outside of a `v-for`, it will be a DOM Node.\r\n- Except that when the referenced item is a custom component, then it will be an object and to access the DOM node you would have to read the `$el` property...\r\n\r\nSo basically, if we wanted to select a ref's node, and we wouldn't know if it's a node or a custom component, if it's in a for-loop or not, this would be the code:\r\n\r\n```\r\nconst ref = (this.$refs.test && this.$refs.test[0] && this.$refs.test[0].$el) ? this.$refs.test[0].$el\r\n    : (this.$refs.test && this.$refs.test.$el) ? this.$refs.test.$el\r\n    : (this.$refs.test && this.$refs.test[0]) ? this.$refs.test[0]\r\n    : this.$refs.test ? this.$refs.test\r\n    : null;`\r\n```\r\n\r\nSo far I've never encountered this case, but I did encounter:\r\n\r\n- The case where the ref could be either a node or a custom component — I wanted to add a class and remove it with a timeout, for animation purposes. At the end, my workaround was to create a custom component to handle the \"empty state\" of a component, to consistently be able to reference the node using `.$el` (this was easier than refactoring all the parts where `.$el` was being referenced)-\r\n- The case where the ref could either be a node or an array of nodes, in a case of a list that had a default value (the default value was outside of the \"for loop\").\r\n\r\n\r\nMy proposal is to have a consistent way of referencing a node/component inside templates.\r\n\r\nAn idea I found in [another issue of this repo](https://github.com/vuejs/vue/issues/2044) is to use a special syntax when the ref is expected to be an array:\r\n\r\n```\r\n<div ref:multiple=\"example\"></div>\r\n```\r\n\r\nAnother part of the proposed change is to be able to access the DOM Node using `$el` (__always__ and exclusively that way). \r\n\r\nSince this is a breaking change, it would be interesting to hear workarounds for this. For example, using a different keyword altogether.\r\n\r\nIn general, I think this would add a lot of sanity and consistency to the usage of `$refs`, and I think it's a common issue for a lot of beginners.\r\n\r\nNote: this feature request is not compatible with [this other feature request](https://github.com/vuejs/vue/issues/4035)\r\n\r\n### What does the proposed API look like?\r\n``` vue-html\r\n<!-- Refs inside loops: -->\r\n<div v-for=\"...\">\r\n    <div ref:multiple=\"example\"></div>\r\n    (or ref:nested=\"example\")\r\n</div>\r\n```\r\n\r\n``` js\r\n// Refs array\r\n[\r\n    0: { $el: <div></div> }, // simple node item\r\n    1: { $el: <div></div>, methods, data, etc..... }, // ref in custom component\r\n    ...\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10284","RelatedDescription":"Open issue \"Consistency in `$refs`: all children of $refs array using same format.\" (#10284)"},{"Id":"468990887","IsPullRequest":false,"CreatedAt":"2019-07-17T06:07:55","Actor":"ChinaMars","Number":"10283","RawContent":null,"Title":"vue cli3 有什么办法提取css,但是打包不生成css文件","State":"closed","Body":"### What problem does this feature solve?\r\n我只想用到js文件，但是写在.vue里的样式会打包到js里，vue cli3有方法提取css，但是我用的是别的框架样式不需要再生成一遍。\r\n\r\n### What does the proposed API look like?\r\nextract: false，这样css文件是不生成了，但是会打包到js文件里，我想要的结果是js里的css和css文件都不需要\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10283","RelatedDescription":"Closed issue \"vue cli3 有什么办法提取css,但是打包不生成css文件\" (#10283)"},{"Id":"468820182","IsPullRequest":false,"CreatedAt":"2019-07-16T19:30:46","Actor":"Meekohi","Number":"10282","RawContent":null,"Title":"@click.prevent causes checkbox :checked property to not render","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/meekohi/pen/jjgezj](https://codepen.io/meekohi/pen/jjgezj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse `@click.prevent=` along with a `:checked='booleanComponentProp'` on a checkbox. Clicking the checkbox correctly updates all data, but the checkbox visually remains in whatever the original state was.\r\n\r\n### What is expected?\r\nCheckbox should update based on the `:checked` property.\r\n\r\n### What is actually happening?\r\nCheckbox does not update.\r\n\r\n---\r\nThis bug did not exist in Vue 2.5.22 -- it seems like Vue 2.6 started relying on the native `click` event to change the state of the box for the simple case, but if the underlying property changes via some other mechanism (for example a prop updating) then the checkbox visual appearance gets out of sync with the underlying data.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10282","RelatedDescription":"Closed issue \"@click.prevent causes checkbox :checked property to not render\" (#10282)"},{"Id":"468762196","IsPullRequest":false,"CreatedAt":"2019-07-16T17:39:11","Actor":"yaoguoli","Number":"10280","RawContent":null,"Title":"TypeError: undefined is not an object(evaluating 'vm.$scopedSlots')","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/yaoguoli/vue-bug](https://github.com/yaoguoli/vue-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. find an iphone which ios software version > 12.2 .  My situation is ios 12.3.1 iphoneX\r\n\r\n2.  vue-cli 3.9.2  &  clone https://github.com/yaoguoli/vue-bug & npm i & npm run serve\r\n\r\n3. use charles to proxy your iphone and  open url http://local.m.immomo.com:8081/ in wechat or safari\r\n\r\n4. you will get an alert with \"TypeError: undefined is not an object(evaluating 'vm.$scopedSlots')\"\r\n\r\n### What is expected?\r\nno error happens\r\n\r\n### What is actually happening?\r\nAn error happens only in ios > 12.2\r\n\r\n---\r\n1. parent componet App changes data 'selected' which props to child componets Tab in created hook\r\n\r\n2. componets Tab watch 'selected'  immediate: true\r\n\r\n3. child componets Test create an iframe Element and append to body in in created hook.\r\n\r\n4.  ios 12.3.1\r\n\r\nAn error will not happen if any of four conditions not set. I'm so confused ! .  It seems create iframe  will fire patch before Test componetInstance set up.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10280","RelatedDescription":"Closed issue \"TypeError: undefined is not an object(evaluating 'vm.$scopedSlots')\" (#10280)"},{"Id":"468768089","IsPullRequest":false,"CreatedAt":"2019-07-16T17:11:23","Actor":"afuno","Number":"10281","RawContent":null,"Title":"How to clean HTML code from extra spaces?","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrLg4uk/](https://jsfiddle.net/chrLg4uk/)\r\n\r\n### Steps to reproduce\r\n1. Write a simple component that I attached.\r\n2. In the HTML code you will see that there are spaces before and after the text.\r\n\r\n### What is expected?\r\nI want to remove these spaces. I can not imagine how you can write an HTML tag and a variable on one line. Especially when a lot of classes and other attributes.\r\n\r\n### What is actually happening?\r\nCannot remove extra spaces. Need to write a variable on a single line with an HTML tag.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10281","RelatedDescription":"Closed issue \"How to clean HTML code from extra spaces?\" (#10281)"},{"Id":"468677630","IsPullRequest":true,"CreatedAt":"2019-07-16T14:09:54","Actor":"HusamIbrahim","Number":"10279","RawContent":null,"Title":"chore: remove redundant code from Vue.prototype._render","State":"open","Body":"Parent vnode is set already in `initRender`.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: remove redundant code.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10279","RelatedDescription":"Open PR \"chore: remove redundant code from Vue.prototype._render\" (#10279)"},{"Id":"468631291","IsPullRequest":false,"CreatedAt":"2019-07-16T12:44:37","Actor":"dxvladislavvolkov","Number":"10278","RawContent":null,"Title":"The value is changed twice when two-way binding is used","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-3zzp2](https://codesandbox.io/s/vue-template-3zzp2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nA prepared an example. If you change the value of one component then you can see that computed value set twice (see console).\r\nI know that the event is emitted. But why is the same value set?\r\n\r\n### What is expected?\r\nI expect that value set once.\r\n\r\n### What is actually happening?\r\nThe computed value set twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10278","RelatedDescription":"Closed issue \"The value is changed twice when two-way binding is used\" (#10278)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"471469668","IsPullRequest":false,"CreatedAt":"2019-07-23T07:03:26","Actor":"Max-Law","Number":"2860","RawContent":null,"Title":"子路由嵌套，在一些安卓机型的微信web中切换列表会出现$router.push()跳转失效","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://eoatestdev.sscc.com/sscc-ow-mobile-web/webstatic/weixin/index.html#/inquirePage/inquireList](https://eoatestdev.sscc.com/sscc-ow-mobile-web/webstatic/weixin/index.html#/inquirePage/inquireList)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n在安卓微信（android^8.0重现频繁）中打开这个链接，关注测试环境的公众号并找我要测试账号就可进入列表。当你一直切换底部的三个tab后，再次点击列表的详情跳转将无任何反应。\r\n\r\n首页的代码概要：\r\n```\r\n    <keep-alive>\r\n      <router-view class=\"mid\" :search=\"searchData\"></router-view>\r\n    </keep-alive>\r\n    <footer>\r\n      <router-link\r\n        v-for=\"item in tab\"\r\n        :key=\"item.name\"\r\n        :to=\"`/inquirePage/${item.name}`\"\r\n      >{{item.text}}</router-link>\r\n    </footer>\r\n```\r\n\r\n子路由中的代码概要：\r\n```\r\n<div name=\"我的账单\">\r\n    <Refersh :callback=\"getList\" :option=\"option\" :check=\"check\" ref=\"myBuillRefersh\">\r\n      <ul>\r\n        <li v-for=\"item in items\" :key=\"item.uuid\">\r\n          <router-link :to=\"goTo(item.uuid,item.billStatus)\">\r\n            <div class=\"title\">{{item.billName}}</div>\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n    </Refersh>\r\n  </div>\r\n```\r\n\r\n### What is expected?\r\n切换tab依旧能正常跳转详情页\r\n\r\n### What is actually happening?\r\n频繁切换tab后不能正常跳转详情页\r\n\r\n---\r\n个人debug过程：\r\n首先我怀疑是因为我用better-scroll导致没有触发点击事件，然而我在最外层用事件委托发现是触发了点击事件只是$router.push()没反应。\r\n后来我从 @click 改到 v-on:click.stop 再改到<router-link>来触发还是不行。\r\n再后来我查issue，他们说vue2.6.9的版本也有click的冒泡问题，我测试了2.9.10与2.5.x的版本依旧出现。\r\n同时，我进入详情再用安卓物理返回键回到列表，有时也会出现点击不太跳转的情况。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2860","RelatedDescription":"Closed issue \"子路由嵌套，在一些安卓机型的微信web中切换列表会出现$router.push()跳转失效\" (#2860)"},{"Id":"470882500","IsPullRequest":false,"CreatedAt":"2019-07-22T04:08:52","Actor":"liaoxuewei","Number":"2859","RawContent":null,"Title":"keep-alive问题？","State":"closed","Body":"```\r\n<keep-alive>\r\n  <router-view v-if=\"$route.meta.keepAlive\"></router-view>\r\n</keep-alive>\r\n<router-view v-if=\"!$route.meta.keepAlive\"></router-view>\r\n\r\n```\r\n本人采用这种做法来实现缓存功能，但是有时可以，有时不行，经过多次测试，发现似乎是Route的层级问题，我的路由定义是：\r\n\r\n```\r\n{\r\n  id: 1,\r\n  ...\r\n  path: \"xxx\",\r\n  children:\r\n  [\r\n    {\r\n      id: 2,\r\n      ...\r\n      path: \"xxx\",\r\n      children:\r\n      [\r\n        {\r\n          id: 3,\r\n          ...\r\n          path: \"xxx\",\r\n          meta: {\r\n            keepAlive: true // 需要被缓存\r\n          },\r\n          children:\r\n          [\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\nid=3的这个无法缓存，id=2可以缓存（即树的第二级可以缓存，第三级及以后不能缓存）。\r\n这个是不是BUG啊？按理不应该局限这个吧？","Url":"https://github.com/vuejs/vue-router/issues/2859","RelatedDescription":"Closed issue \"keep-alive问题？\" (#2859)"},{"Id":"470676774","IsPullRequest":true,"CreatedAt":"2019-07-20T16:29:28","Actor":"kevinkhill","Number":"2858","RawContent":null,"Title":"Update README.md","State":"closed","Body":"caught a typo","Url":"https://github.com/vuejs/vue-router/pull/2858","RelatedDescription":"Closed or merged PR \"Update README.md\" (#2858)"},{"Id":"469738414","IsPullRequest":false,"CreatedAt":"2019-07-18T12:25:43","Actor":"wizardnet972","Number":"2857","RawContent":null,"Title":"Can't pass data to component from beforeRouteEnter only after component is initialized","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-typescript-example-cb9o0](https://codesandbox.io/s/vue-typescript-example-cb9o0)\r\n\r\n### Steps to reproduce\r\nOpen the reproduction.\r\nopen the console.\r\nThen click on the link: go to page.\r\n\r\ncheck the console log.\r\n\r\n### What is expected?\r\nconsole log object\r\n\r\n### What is actually happening?\r\nconsole log undefined.\r\n\r\n---\r\nI think because next function happens after the component is initialized and in setTimeout((), 16) I can't be able to pass to its props before the component is executed.\r\n\r\nI think right now is weird behavior for the router. its miss the expected guard/resolve behavior.\r\n\r\nSo this is why I got undefined at the getter function.\r\n\r\nAny idea how to solve this issue?\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2857","RelatedDescription":"Closed issue \"Can't pass data to component from beforeRouteEnter only after component is initialized\" (#2857)"},{"Id":"469624614","IsPullRequest":false,"CreatedAt":"2019-07-18T08:00:27","Actor":"q379257013","Number":"2856","RawContent":null,"Title":"为什么要用 resetRouter， 请问他解决什么问题了， 一直没有明白了？ ","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2856","RelatedDescription":"Closed issue \"为什么要用 resetRouter， 请问他解决什么问题了， 一直没有明白了？ \" (#2856)"},{"Id":"469374275","IsPullRequest":true,"CreatedAt":"2019-07-18T06:47:43","Actor":"darrylhein","Number":"2855","RawContent":null,"Title":"Adding periods in docs","State":"closed","Body":"very minor\r\n","Url":"https://github.com/vuejs/vue-router/pull/2855","RelatedDescription":"Closed or merged PR \"Adding periods in docs\" (#2855)"},{"Id":"469283566","IsPullRequest":false,"CreatedAt":"2019-07-17T15:21:55","Actor":"atrueresistance","Number":"2854","RawContent":null,"Title":"Why does vue.js report 404 route in production, but not development?","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development](https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRunning npm run serve I can visit auth/login, but after npm run build the server returns a 404 on auth/login.\r\n\r\nI get a 404 when going to https://example.com/auth/login but navigating to https://example.com/address-records works just fine. It seems as if only something that is more than a single / deep returns a 404.\r\n\r\nHere is the router code\r\n\r\n```\r\nlet router = new Router({\r\n  mode: \"history\",\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      name: \"home\",\r\n      component: Home\r\n    },\r\n    {\r\n      path: \"/auth/login\",\r\n      name: \"Login\",\r\n      component: Login\r\n    },\r\n    {\r\n      path: \"/address-records\",\r\n      name: \"Address\",\r\n      component: Address\r\n    }\r\n  ]\r\n});\r\n```\r\n\r\nIs there something special I need to be doing with Nginx? I have it setup with similar searched questions.\r\n\r\n```\r\n location / {\r\n        try_files $uri $uri/ /index.html;\r\n }\r\n location @rewrites {\r\n         rewrite ^(. )$ /index.html last;\r\n      }\r\n\r\n location ~* \\.(?:ico|css|js|gif|jpe?g|png)$ {\r\n         # Some basic cache-control for static files to be sent to the browser\r\n         expires max;\r\n         add_header Pragma public;\r\n         add_header Cache-Control \"public, must-revalidate, proxy-revalidate\";\r\n  }\r\n```\r\n\r\n### What is expected?\r\n200 status code from auth/login in production\r\n\r\n### What is actually happening?\r\n404 status code from auth/login in production\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2854","RelatedDescription":"Closed issue \"Why does vue.js report 404 route in production, but not development?\" (#2854)"},{"Id":"469007379","IsPullRequest":true,"CreatedAt":"2019-07-17T06:49:12","Actor":"graup","Number":"2853","RawContent":null,"Title":"Add named exports RouterLink, RouterView to es modules","State":"closed","Body":"#1976\r\n","Url":"https://github.com/vuejs/vue-router/pull/2853","RelatedDescription":"Closed or merged PR \"Add named exports RouterLink, RouterView to es modules\" (#2853)"},{"Id":"468804144","IsPullRequest":false,"CreatedAt":"2019-07-16T18:36:51","Actor":"rSammy","Number":"2852","RawContent":null,"Title":"Cannot use router link with @contextmenu","State":"closed","Body":"Hello,\r\n\r\nI figured it's impossible to use @contextmenu event with router-link.\r\n\r\nI first thought I did something wrong before realizing I didn't touch this file, so there shouldn't be any problem with contextmenu.\r\n\r\nBut then I remembered @contextmenu was working when I used div before my previous changes.\r\n\r\n**Line 483** I found this function in **vue-router-esm.js**\r\nI guess instead of just \"return\", the router should emit @contextmenu event or something like this, am I wrong ?\r\n\r\n```\r\nfunction guardEvent (e) {\r\n  // don't redirect with control keys\r\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\r\n  // don't redirect when preventDefault called\r\n  if (e.defaultPrevented) { return }\r\n  // don't redirect on right click\r\n  if (e.button !== undefined && e.button !== 0) { return }\r\n  // don't redirect if `target=\"_blank\"`\r\n  if (e.currentTarget && e.currentTarget.getAttribute) {\r\n    var target = e.currentTarget.getAttribute('target');\r\n    if (/\\b_blank\\b/i.test(target)) { return }\r\n  }\r\n  // this may be a Weex event which doesn't have this method\r\n  if (e.preventDefault) {\r\n    e.preventDefault();\r\n  }\r\n  return true\r\n}\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2852","RelatedDescription":"Closed issue \"Cannot use router link with @contextmenu\" (#2852)"},{"Id":"468772602","IsPullRequest":true,"CreatedAt":"2019-07-16T17:39:50","Actor":"posva","Number":"2851","RawContent":null,"Title":"fix(hash): correctly place query after first hash","State":"closed","Body":"Fixes #2125 \r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2851","RelatedDescription":"Closed or merged PR \"fix(hash): correctly place query after first hash\" (#2851)"},{"Id":"468535290","IsPullRequest":false,"CreatedAt":"2019-07-16T09:07:44","Actor":"chenguzhen87","Number":"2850","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://www.lulutopic.com/web/#/login](http://www.lulutopic.com/web/#/login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、设置hash路由\r\n2、在iphone下打开带hash路由\r\n3、点击浏览器‘复制’按纽\r\n4、粘贴地址\r\n\r\n### What is expected?\r\n粘贴地址带上hash部分\r\n\r\n### What is actually happening?\r\nhash地址丢失\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2850","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2850)"},{"Id":"468529272","IsPullRequest":false,"CreatedAt":"2019-07-16T08:54:06","Actor":"chenguzhen87","Number":"2849","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"在浏览器中点击复制链接，但是复制出来的链接hash部分丢失\r\n","Url":"https://github.com/vuejs/vue-router/issues/2849","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2849)"},{"Id":"468518712","IsPullRequest":false,"CreatedAt":"2019-07-16T08:32:21","Actor":"zhengxsFE","Number":"2848","RawContent":null,"Title":"createHref 方法能否变成公共方法","State":"closed","Body":"### What problem does this feature solve?\r\n**场景一：**\r\n\r\n我的商城 base 是 /h5/shop/:shopId ( node 路由 )\r\n\r\nMy mall 'base' is 'h5/shop/: shopId' (node routing)\r\n\r\n\r\n点击购物车需要跳转到登录页，但是 fullPath 拿到的 path 不包含 base 的内容\r\n\r\nClick on the shopping cart to jump to the login page, but the 'path' of 'fullPath' does not contain the content of 'base'.\r\n\r\n\r\n每次都手动拼接，希望能变成一个公共方法，（ps: 应用有多个，目前左右一个函数在使用）\r\n\r\nHope to make this method public\r\n\r\n\r\n**场景二：**\r\n\r\n购买成功页需要生成海报，海报的地址指向商品详情页，需要生成 url 地址\r\n\r\nBusiness needs to generate URLs for other pages\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n/**\r\n * url join\r\n *\r\n * @param {String|Object} location\r\n * @param {Object} [options=null]\r\n * @param {Boolean} [options.base=false]\r\n *\r\n * @returns {String|Null}\r\n */\r\nrouter.url(location, options?)\r\n\r\n// -> /home\r\nrouter.url('home')\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url('home', {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url({ path: 'home' }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/member/123\r\nrouter.url({ name: 'member', params: { memberId: '123' } }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/products?sort=date\r\nrouter.url({ path: 'products', query: { sort: 'date' } }, {\r\n  base: true\r\n})\r\n```\r\n\r\n\r\n```javascript\r\n// 或者 route 添加 href 字段\r\nroute.href = '/h5/shop/1/shopping-cart'\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2848","RelatedDescription":"Closed issue \"createHref 方法能否变成公共方法\" (#2848)"},{"Id":"467233641","IsPullRequest":false,"CreatedAt":"2019-07-12T08:40:45","Actor":"Rolanddoda","Number":"2847","RawContent":null,"Title":"Visiting another page immediately creates the respective component, before disposing the component of the previous page. ","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (/ route)\r\n2. Click the Contact button to navigate to the contact component (/contact route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact components (or pages) I use store.registerModule and store.unregisterModule to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nVue router runs the new component before destroying the old one.\r\n\r\n---\r\nInitially I thought was a vuex issue and I opened one [here](https://github.com/vuejs/vuex/issues/1580). But then I saw that is a vue router issue. I tried to find if that issue already exists and couldn't find something.\r\n\r\nAs a workaround I can use transition mode out-in. And everything works\r\n```js\r\n    <transition mode=\"out-in\">\r\n      <router-view></router-view>\r\n    </transition>\r\n```\r\n\r\nbut to me, it doesn't makes sense to mount a component, before destroying the other one. What I am missing?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2847","RelatedDescription":"Closed issue \"Visiting another page immediately creates the respective component, before disposing the component of the previous page. \" (#2847)"},{"Id":"466813370","IsPullRequest":false,"CreatedAt":"2019-07-11T10:42:06","Actor":"up-chen","Number":"2846","RawContent":null,"Title":"路由返回错误","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\na页面使用router.push跳到b页面，b页面在beforeEnter钩子里面重定向到了c页面（replace），从c页面返回时直接到了空页面，没有返回到a页面\r\n![image](https://user-images.githubusercontent.com/20765130/61044509-65bd2180-a40b-11e9-9a5d-2bf93aae8e51.png)\r\n![image](https://user-images.githubusercontent.com/20765130/61044538-7372a700-a40b-11e9-99ad-58088c658851.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2846","RelatedDescription":"Closed issue \"路由返回错误\" (#2846)"},{"Id":"466782855","IsPullRequest":false,"CreatedAt":"2019-07-11T09:42:58","Actor":"ZhiGang-Fang","Number":"2845","RawContent":null,"Title":"There's no routing rules in history mode that don't match","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nIn history mode, no routing rules can be matched, only: path: '/register' can be matched, while path:' /member/register' cannot be matched, nor can dynamic routing attempts be matched\r\n\r\n\r\n`\r\n{\r\n        path: '/member/register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n    }\r\n\r\n\r\n{\r\n    path: '/:member',\r\n    component: { render: h => h('router-view') },\r\n    children: [ \r\n      {\r\n        path: 'register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n`\r\n\r\nIn the hash mode, the error is reported as follows: ‘Uncaught SyntaxError: Unexpected token <’\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2845","RelatedDescription":"Closed issue \"There's no routing rules in history mode that don't match\" (#2845)"},{"Id":"465619547","IsPullRequest":false,"CreatedAt":"2019-07-09T07:34:18","Actor":"lk8888","Number":"2844","RawContent":null,"Title":"typescript error Property 'matcher' does not exist on type 'VueRouter'.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nthis is my code:\r\nconst router = createRouter();\r\n\r\nexport function resetRouter() {\r\n  const newRouter = createRouter();\r\n  router.matcher = newRouter.matcher; // reset router\r\n}\r\nthe error:\r\nTS2339: Property 'matcher' does not exist on type 'VueRouter'.","Url":"https://github.com/vuejs/vue-router/issues/2844","RelatedDescription":"Closed issue \"typescript error Property 'matcher' does not exist on type 'VueRouter'.\" (#2844)"},{"Id":"465472063","IsPullRequest":false,"CreatedAt":"2019-07-09T07:03:50","Actor":"iFgR","Number":"2843","RawContent":null,"Title":"How to extract only components RouterView and RouterLink?","State":"closed","Body":"### What problem does this feature solve?\r\nLoad only the *router-view* and *router-link* will give me the ability to use external VueRouter instance.\r\n\r\nI'm working with web-components and I have an AppShell with VueRouter and I'm using a web-component inside them with another VueRouter.\r\nEverything inside the web-component are working fine but my AppShell can't load the router components.\r\n\r\n### What does the proposed API look like?\r\nI think something like **const { RouterView, RouterLink } = VueRouter** can help\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2843","RelatedDescription":"Closed issue \"How to extract only components RouterView and RouterLink?\" (#2843)"},{"Id":"465416375","IsPullRequest":false,"CreatedAt":"2019-07-08T19:13:27","Actor":"koszar93","Number":"2842","RawContent":null,"Title":"Best way to create vue-router - Online Shop","State":"closed","Body":"i have a little problem with prepare vue-router to my Online Shop. I have two level product category tree view with parent and child item.\r\nMy category view, is built dynamic of data get from the database:\r\n\r\n>     PARENT\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 2\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 3\r\n>     - CHILD 1\r\n>     PARENT 4\r\n>     - CHILD 1\r\n>     - CHILD 2\r\n> \r\n\r\netc.\r\nI don’t know how to prepare dynamic router. Now, i do something like that:\r\n\r\n```\r\n    {\r\n            name: 'Produkty',\r\n            display: true,\r\n            meta: { requiresAuth: false, menuType: 'topNav' },\r\n            path: '/product/:categoryId?/:subCategoryId?',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product')\r\n          },\r\n          {\r\n            name: 'productDetail',\r\n            display: false,\r\n            meta: { requiresAuth: false },\r\n            path: '/product/:categoryId/:subCategoryId/:productId',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product/Details')\r\n          }\r\n```\r\n\r\nI don't know is this a good way? Maybe anyone have better idea for this?\r\nI also want to implement dynamic breadcrumbs base on router path.\r\n\r\nAnd other question:\r\nHow to redirect from: http://localhost/produkt/1234/523/123(productId) to http://localhost/product_name.html for example ? Or.. id from url chage to http://localhost/parent_1/child_1/product_1 ??","Url":"https://github.com/vuejs/vue-router/issues/2842","RelatedDescription":"Closed issue \"Best way to create vue-router - Online Shop\" (#2842)"},{"Id":"464976350","IsPullRequest":true,"CreatedAt":"2019-07-07T17:50:43","Actor":"debs-obrien","Number":"2841","RawContent":null,"Title":"docs: update active class explanation","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2841","RelatedDescription":"Open PR \"docs: update active class explanation\" (#2841)"},{"Id":"464165688","IsPullRequest":false,"CreatedAt":"2019-07-04T09:33:08","Actor":"ykushev","Number":"2840","RawContent":null,"Title":"Add afterRouteEnter guard","State":"open","Body":"### What problem does this feature solve?\r\nI want execute one function in component after each routing (enter route, reused in the new route)\r\n\r\n### What does the proposed API look like?\r\nvariant 1:\r\n```\r\nbeforeRouteUpdate (to, from, next) {\r\n        console.log('page category beforeRouteUpdate');\r\n        next(() => {\r\n            // this don't calling\r\n            console.log('page category beforeRouteUpdate next');\r\n            this.$store.dispatch('catalog/exec');\r\n        });\r\n    },\r\n```\r\n\r\nvariant 2: add hook named \"afterRouteUpdate\" that will calling after we enter in route and after each time we navigating in this route (foo/2 -> foo/3)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2840","RelatedDescription":"Open issue \"Add afterRouteEnter guard\" (#2840)"},{"Id":"463845211","IsPullRequest":false,"CreatedAt":"2019-07-03T16:57:38","Actor":"juanescarraga","Number":"2839","RawContent":null,"Title":"Color active state on link does not return to color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the project in the browser.\r\nThe link with the name Say Hello appears in the browser.\r\nThe default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\nThe gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\nIn tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2839","RelatedDescription":"Closed issue \"Color active state on link does not return to color\" (#2839)"},{"Id":"462388128","IsPullRequest":true,"CreatedAt":"2019-07-02T20:09:24","Actor":"Alexeykhr","Number":"2838","RawContent":null,"Title":"Handle Promise rejection in guards (fix #2833)","State":"closed","Body":"#2833","Url":"https://github.com/vuejs/vue-router/pull/2838","RelatedDescription":"Closed or merged PR \"Handle Promise rejection in guards (fix #2833)\" (#2838)"},{"Id":"461944569","IsPullRequest":false,"CreatedAt":"2019-06-28T09:32:51","Actor":"liho00","Number":"2837","RawContent":null,"Title":"External JavaScript working when changing route","State":"closed","Body":"### What problem does this feature solve?\r\nI am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nthis feature should allow the javascript works when changing routes. \r\n\r\n### What does the proposed API look like?\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works in different paths.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2837","RelatedDescription":"Closed issue \"External JavaScript working when changing route\" (#2837)"},{"Id":"461942087","IsPullRequest":false,"CreatedAt":"2019-06-28T09:23:21","Actor":"liho00","Number":"2836","RawContent":null,"Title":"External JavaScript stop working when changing route","State":"closed","Body":"I am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works with different paths.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2836","RelatedDescription":"Closed issue \"External JavaScript stop working when changing route\" (#2836)"},{"Id":"461913917","IsPullRequest":false,"CreatedAt":"2019-06-28T08:20:25","Actor":"liubin595338764","Number":"2835","RawContent":null,"Title":"base是否能当成params参数来配置？","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://www](https://www)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n### What is expected?\r\n希望在history模式的时候可以把`base`当成`params`来处理，\r\n\r\n对于多公司访问通一个应用的时候，这样的链接比较好看，\r\n\r\n比如：\r\n```js\r\nexport default new Router({\r\n    mode: 'history',\r\n    base: '/:company',\r\n    routes: routes\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n---\r\n希望能尽快支持哦\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2835","RelatedDescription":"Closed issue \"base是否能当成params参数来配置？\" (#2835)"},{"Id":"461897204","IsPullRequest":false,"CreatedAt":"2019-06-28T07:41:09","Actor":"Mighty683","Number":"2834","RawContent":null,"Title":"Add beforeUpdate to route config","State":"closed","Body":"### What problem does this feature solve?\r\nSince for now we can't handle lazy loading components without losing access to navigation hooks build in components we should give equal API on router config level.\r\nFor now we can only add `beforeEnter` route guard. It would be usefull if we had `beforeUpdate` guard too.\r\n\r\nProblem with lazy loading components described here: \r\nhttps://github.com/vuejs/vue-router/issues/2830\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/foo',\r\n      component: Foo,\r\n      beforeUpdate: (to, from, next) => {\r\n        // ...\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2834","RelatedDescription":"Closed issue \"Add beforeUpdate to route config\" (#2834)"},{"Id":"461529830","IsPullRequest":false,"CreatedAt":"2019-06-27T13:28:28","Actor":"posva","Number":"2833","RawContent":null,"Title":"Handle Promise rejection in guards","State":"open","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/orzwg537/](https://jsfiddle.net/orzwg537/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle and look in console\r\n\r\n### What is expected?\r\na message saying error caught\r\n\r\n### What is actually happening?\r\nThere is an Unhandled Promise rejection instead\r\n\r\n---\r\nCurrently, errors thrown in guards are caught by router.onError but Promises rejections (or error thrown in an `async` function) are not caught. This should be handled in all the other guards as well\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2833","RelatedDescription":"Open issue \"Handle Promise rejection in guards\" (#2833)"},{"Id":"461488156","IsPullRequest":false,"CreatedAt":"2019-06-27T12:06:14","Actor":"stavid","Number":"2832","RawContent":null,"Title":" use history mode,history.length is wrong","State":"closed","Body":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/2831](https://github.com/vuejs/vue-router/issues/2831)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nexport default new Router({\r\nmode: 'history',\r\nroutes: [\r\n\r\n\t{\r\n\t\tpath: '/A',\r\n\t\tname: 'A',\r\n                   component: resolve => require(['../components/files/\r\n\r\nA.vue'], resolve),\r\nmeta: {\r\ntitle: 'A'\r\n}\r\n},\r\nopen A page ,print history.length in beforeEach method , the message is：\r\n\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n### What is expected?\r\nhistory.length add 1\r\n\r\n### What is actually happening?\r\nhistory.length add 2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2832","RelatedDescription":"Closed issue \" use history mode,history.length is wrong\" (#2832)"},{"Id":"461486225","IsPullRequest":false,"CreatedAt":"2019-06-27T11:56:25","Actor":"stavid","Number":"2831","RawContent":null,"Title":"use history mode,history.length is wrong","State":"closed","Body":"export default new Router({\r\n\tmode: 'history',\r\n\troutes: [\r\n\r\n\t\t{\r\n\t\t\tpath: '/A',\r\n\t\t\tname: 'A',\r\n                       component: resolve => require(['../components/files/\r\nA.vue'], resolve),\r\n\t\t\tmeta: {\r\n\t\t\t\ttitle: 'A'\r\n\t\t\t}\r\n\t\t},\r\n-------------------------------\r\nopen A page ,print history.length  in beforeEach method , the message is：\r\n---------------------------------\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2831","RelatedDescription":"Closed issue \"use history mode,history.length is wrong\" (#2831)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"469975199","IsPullRequest":true,"CreatedAt":"2019-07-18T20:36:22","Actor":"valdezalbertm","Number":"1583","RawContent":null,"Title":"Update README.md","State":"closed","Body":"The URL provided is not existing anymore.","Url":"https://github.com/vuejs/vuex/pull/1583","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1583)"},{"Id":"468913070","IsPullRequest":true,"CreatedAt":"2019-07-16T23:20:37","Actor":"ben-turner","Number":"1582","RawContent":null,"Title":"Update link to flux in README","State":"open","Body":"The current link to flux is broken. Looks like the paths have been updated to not include a file extension.","Url":"https://github.com/vuejs/vuex/pull/1582","RelatedDescription":"Open PR \"Update link to flux in README\" (#1582)"},{"Id":"468441343","IsPullRequest":false,"CreatedAt":"2019-07-16T04:28:09","Actor":"regchiu","Number":"1581","RawContent":null,"Title":"When actions returns promise, the property will be ignored","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-5rovy](https://codesandbox.io/s/vue-template-5rovy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```js\r\nactions: {\r\n    test() {\r\n      let prom = new Promise((resolve) => {\r\n        setTimeout(function(){\r\n          resolve(\"DONE\"); \r\n        }, 3000);\r\n      });\r\n      prom['id'] = 10\r\n      console.log(prom) // Object contains id\r\n      return prom;\r\n    }\r\n  }\r\n```\r\n```js\r\ncreated() {\r\n    let pf = this.$store.dispatch(\"test\");\r\n    console.log(\"PF\", pf); // No id property\r\n    pf.then(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n```\r\n\r\n### What is expected?\r\nThe properties of the object should be displayed in the console.\r\n\r\n### What is actually happening?\r\nThe properties of the object are ignored.\r\n\r\n---\r\nShare questions from the forum\r\n\r\nhttps://forum.vuejs.org/t/custom-promise-properties-in-actions/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1581","RelatedDescription":"Open issue \"When actions returns promise, the property will be ignored\" (#1581)"},{"Id":"466821711","IsPullRequest":false,"CreatedAt":"2019-07-12T05:53:05","Actor":"Rolanddoda","Number":"1580","RawContent":null,"Title":"Duplicate getter key: 'something/something' : When register/unregister Vuex module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (`/` route)\r\n2. Click the `Contact` button to navigate to the contact component (`/contact` route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact  components (or pages) I use `store.registerModule` and `store.unregisterModule` to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nAn error is showing in the console that I have duplicate getter keys.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1580","RelatedDescription":"Closed issue \"Duplicate getter key: 'something/something' : When register/unregister Vuex module\" (#1580)"},{"Id":"466177457","IsPullRequest":false,"CreatedAt":"2019-07-10T08:38:57","Actor":"yoyoys","Number":"1579","RawContent":null,"Title":"[Feature Request] mapModule","State":"open","Body":"### What problem does this feature solve?\r\nThis made namespaced module can be use like simple vuex store.\r\n\r\n### What does the proposed API look like?\r\n`store/modules/myModule.ts`\r\n\r\n```ts\r\n\r\nexport const myModule = {\r\n  state: {\r\n    count: 0\r\n  },\r\n  mutations: {\r\n    add(state, payload) {\r\n      state.count = state.count   payload\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n`lib/someLib.ts`\r\n\r\n```ts\r\nimport store from '@/store'\r\n\r\n// the `myModule` is module path\r\nconst myModule = mapModule<IMyModule>(store, 'myModule')\r\n\r\nconsole.log(myModule.state.count) // 0\r\nmyModule.commit('add', 2)\r\nconsole.log(myModule.state.count) // 2\r\n\r\n// for reuse or singleton?\r\nexport myModule\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1579","RelatedDescription":"Open issue \"[Feature Request] mapModule\" (#1579)"},{"Id":"465584333","IsPullRequest":false,"CreatedAt":"2019-07-09T05:57:06","Actor":"tinyCucumber","Number":"1578","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/cucumbers/pen/bPQQeO](https://codepen.io/cucumbers/pen/bPQQeO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.\r\n\r\n### What is expected?\r\nIf the param cb  is useless, remove it.\r\n\r\n### What is actually happening?\r\nThe param cb for wrappedActionHandler is never used;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1578","RelatedDescription":"Open issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1578)"},{"Id":"465576393","IsPullRequest":false,"CreatedAt":"2019-07-09T05:28:32","Actor":"tinyCucumber","Number":"1577","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"closed","Body":"in the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.Can someone answer my doubts?\r\n\r\n**wrappedActionHandler**\r\n\r\n```javascript\r\nfunction registerAction (store, type, handler, local) {\r\n  const entry = store._actions[type] || (store._actions[type] = [])\r\n  entry.push(function wrappedActionHandler (payload, cb) {\r\n    let res = handler.call(store, {\r\n      dispatch: local.dispatch,\r\n      commit: local.commit,\r\n      getters: local.getters,\r\n      state: local.state,\r\n      rootGetters: store.getters,\r\n      rootState: store.state\r\n    }, payload, cb)\r\n    if (!isPromise(res)) {\r\n      res = Promise.resolve(res)\r\n    }\r\n    if (store._devtoolHook) {\r\n      return res.catch(err => {\r\n        store._devtoolHook.emit('vuex:error', err)\r\n        throw err\r\n      })\r\n    } else {\r\n      return res\r\n    }\r\n  })\r\n}\r\n```\r\n\r\n**dispatch**\r\n```javascript\r\n    const {\r\n      type,\r\n      payload\r\n    } = unifyObjectStyle(_type, _payload)\r\n\r\n    const action = { type, payload }\r\n    const entry = this._actions[type]\r\n    if (!entry) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(`[vuex] unknown action type: ${type}`)\r\n      }\r\n      return\r\n    }\r\n\r\n    try {\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    } catch (e) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`[vuex] error in before action subscribers: `)\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    const result = entry.length > 1\r\n      ? Promise.all(entry.map(handler => handler(payload)))\r\n      : entry[0](payload)\r\n\r\n    return result.then(res => {\r\n      try {\r\n        this._actionSubscribers\r\n          .filter(sub => sub.after)\r\n          .forEach(sub => sub.after(action, this.state))\r\n      } catch (e) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`[vuex] error in after action subscribers: `)\r\n          console.error(e)\r\n        }\r\n      }\r\n      return res\r\n    })\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1577","RelatedDescription":"Closed issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1577)"},{"Id":"465294713","IsPullRequest":true,"CreatedAt":"2019-07-08T15:53:27","Actor":"hejialianghe","Number":"1576","RawContent":null,"Title":"vuex-cart","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1576","RelatedDescription":"Closed or merged PR \"vuex-cart\" (#1576)"},{"Id":"465291851","IsPullRequest":true,"CreatedAt":"2019-07-08T14:32:06","Actor":"hejialianghe","Number":"1575","RawContent":null,"Title":"Create vuex-cart","State":"closed","Body":"1","Url":"https://github.com/vuejs/vuex/pull/1575","RelatedDescription":"Closed or merged PR \"Create vuex-cart\" (#1575)"},{"Id":"465227767","IsPullRequest":true,"CreatedAt":"2019-07-08T12:56:43","Actor":"boomler","Number":"1574","RawContent":null,"Title":"Refactor: extract a method for duplicate environment judgement","State":"closed","Body":"There are 17 times of environment judgement in `store.js`.  Extract it to  `util.js`","Url":"https://github.com/vuejs/vuex/pull/1574","RelatedDescription":"Closed or merged PR \"Refactor: extract a method for duplicate environment judgement\" (#1574)"},{"Id":"463514720","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:27","Actor":"hugoazevedosoares","Number":"1573","RawContent":null,"Title":"fix(#1571): remove undefined payload from store.dispatch","State":"open","Body":"Fixed the issue #1571\r\n\r\nRunned all tests and they were ok, except for tsc/types that didn't work on my computer, by that was before the change was made. Also, the change has no reason to break this kind of test.\r\n\r\nThe solution was proposed by @gitlab-winnie .","Url":"https://github.com/vuejs/vuex/pull/1573","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from store.dispatch\" (#1573)"},{"Id":"461385089","IsPullRequest":false,"CreatedAt":"2019-06-27T08:18:24","Actor":"StijnVandermeulen1","Number":"1572","RawContent":null,"Title":"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.","State":"open","Body":"### What problem does this feature solve?\r\nIf you subscribe to an action an return a promise or use an await statement, the code does not wait for the request to be complete. This is a problem when you implement a component as a plugin. Communication between components can be handled by the subscribeAction. But retrieving data and pushing it into the state using the afore mentioned methods will not result in any data since the service does not wait for it to be completed.\r\n\r\nThis feature would be very usefull for components as plugins that can be fully compartmentalized and plugged into different applications. Configuration retrieval can then be defined in the subscribeAction allowing different implementations over multiple applications.\r\n\r\n### What does the proposed API look like?\r\nExample for before action:\r\n\r\nCurrent code in src/store.js line 132:\r\n\r\n   try {\r\n\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    }\r\n\r\nShould be:\r\n\r\n  try {\r\n\r\n          async function asyncForEach(array, callback) {\r\n             for (let index = 0; index < array.length; index  ) {\r\n                await callback(array[index], index, array);\r\n           }\r\n         }\r\n\r\n         await asyncForEach(this._actionSubscribers\r\n           .filter(function (sub) { return sub.before; }), async function (sub) {\r\n                return await sub.before(action, this$1.state); \r\n           });\r\n        }\r\n\r\ndispatch function should be async as wel.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1572","RelatedDescription":"Open issue \"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.\" (#1572)"},{"Id":"460917840","IsPullRequest":false,"CreatedAt":"2019-06-26T11:34:51","Actor":"markrian","Number":"1571","RawContent":null,"Title":"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/markrian/pen/vqeGZZ?editors=0010](https://codepen.io/markrian/pen/vqeGZZ?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codepen.io/markrian/pen/vqeGZZ?editors=0010\r\n1. Open the browser's console\r\n1. Observe the differing logged arguments passed to `store.dispatch` depending on whether it's a root-mapped action or a namespace-mapped action (`[ \"foo\" ]` and `[ \"childModule/foo\", undefined ]` respectively - note the extra `undefined` argument in the second case; the different action name is of course expected)\r\n\r\nNote that this only really applies in a testing scenario, where the test spies on `store.dispatch` to ensure the component dispatches the expected actions.\r\n\r\n### What is expected?\r\n`store.dispatch` receives exactly the same arguments regardless of whether the actions are namespace-mapped or not.\r\n\r\n### What is actually happening?\r\n`store.dispatch` receives a payload argument of `undefined` for namespace-mapped actions.\r\n\r\n---\r\nI encountered this when refactoring a store into a namespaced module, and found that my expectations needed to change: that `store.dispatch` received an extra `undefined` argument.\r\n\r\nI'm not sure if this should be considered a bug in Vuex, or in my testing approach of spying on `store.dispatch` :man_shrugging: \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1571","RelatedDescription":"Open issue \"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`\" (#1571)"},{"Id":"456973589","IsPullRequest":false,"CreatedAt":"2019-06-17T14:39:06","Actor":"mojodev","Number":"1570","RawContent":null,"Title":"Creating a new module via registerModule firing unrelated module watchers","State":"closed","Body":" i have loaded a module dynamically using registerModule on a page. one of my parent component is watching other module state variable. so while registering module watcher on other module state is firing. same thing happening for unRegisterModule. \r\ni found same issue which is closed only difference is that i am getting this issue in new version of Vuex3.1.1\r\n\r\nAny help will be appreciated :)\r\n","Url":"https://github.com/vuejs/vuex/issues/1570","RelatedDescription":"Closed issue \"Creating a new module via registerModule firing unrelated module watchers\" (#1570)"},{"Id":"456838883","IsPullRequest":false,"CreatedAt":"2019-06-17T09:41:41","Actor":"lemongranule","Number":"1569","RawContent":null,"Title":"This file maybe has a mistake. ","State":"closed","Body":"examples/server.js\r\nOne more \"de\" in the first line","Url":"https://github.com/vuejs/vuex/issues/1569","RelatedDescription":"Closed issue \"This file maybe has a mistake. \" (#1569)"},{"Id":"456589519","IsPullRequest":false,"CreatedAt":"2019-06-17T08:54:29","Actor":"orblazer","Number":"1568","RawContent":null,"Title":"Use interface for Store type definition","State":"closed","Body":"### What problem does this feature solve?\r\nThis could allow extends Store like in Nuxt.JS.\r\nWithout that we don't have clean way for use `this.app` of `this.$router` in vuex actions and mutations.\r\n\r\nWith that we can extends like :\r\n```ts\r\ndeclare module 'vuex/types/index' {\r\n  interface Store<S> {\r\n    app: Vue;\r\n    $route: Route;\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/types/index.d.ts#L10 Change type of that from `class` to `interface`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1568","RelatedDescription":"Closed issue \"Use interface for Store type definition\" (#1568)"},{"Id":"454069279","IsPullRequest":false,"CreatedAt":"2019-06-10T09:04:41","Actor":"guanweiwang","Number":"1567","RawContent":null,"Title":"使用registerModule注册嵌套，出现错误","State":"closed","Body":"```js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\nstore.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n})\r\nexport default store\r\n```\r\n在浏览器上会给出警告\r\n```\r\nvuex.esm.js?2f62:199 Uncaught TypeError: Cannot read property 'addChild' of undefined\r\n    at ModuleCollection.register (vuex.esm.js?2f62:199)\r\n    at Store.registerModule (vuex.esm.js?2f62:464)\r\n    at Store.t.registerModule.t.registerModule (<anonymous>:1:1182)\r\n    at eval (store.js?c0d6:11)\r\n    at Module../src/store.js (app.js:2393)\r\n    at __webpack_require__ (app.js:767)\r\n    at fn (app.js:130)\r\n    at eval (main.js:13)\r\n    at Module../src/main.js (app.js:2369)\r\n    at __webpack_require__ (app.js:767)\r\n```","Url":"https://github.com/vuejs/vuex/issues/1567","RelatedDescription":"Closed issue \"使用registerModule注册嵌套，出现错误\" (#1567)"},{"Id":"453666442","IsPullRequest":false,"CreatedAt":"2019-06-07T19:43:58","Actor":"winniehell","Number":"1566","RawContent":null,"Title":"registerModule does not warn if existing state is overwritten","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n\r\n[https://jsfiddle.net/winniehell/enjkob2w/](https://jsfiddle.net/winniehell/enjkob2w/)\r\n\r\n### Steps to reproduce\r\n- create store module with some state\r\n- dynamically register module with same name but different state\r\n\r\n### What is expected?\r\na warning or error is shown\r\n\r\n### What is actually happening?\r\nstate is silently overwritten\r\n\r\n---\r\nThis issue is similar to https://github.com/vuejs/vuex/issues/1363.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1566","RelatedDescription":"Open issue \"registerModule does not warn if existing state is overwritten\" (#1566)"},{"Id":"453610451","IsPullRequest":true,"CreatedAt":"2019-06-07T17:05:35","Actor":"Douten","Number":"1565","RawContent":null,"Title":"minor typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1565","RelatedDescription":"Open PR \"minor typo\" (#1565)"},{"Id":"451134309","IsPullRequest":true,"CreatedAt":"2019-06-01T23:19:18","Actor":"YongzeYao","Number":"1564","RawContent":null,"Title":"修改病句","State":"open","Body":"加入一个“的”。","Url":"https://github.com/vuejs/vuex/pull/1564","RelatedDescription":"Open PR \"修改病句\" (#1564)"},{"Id":"451113147","IsPullRequest":true,"CreatedAt":"2019-06-01T18:38:55","Actor":"WIStudent","Number":"1563","RawContent":null,"Title":"Typescript: Use generics for payload/result in commit/dispatch","State":"open","Body":"I am using Typescript to write my store, like this for example:\r\n```typescript\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\ninterface AddToCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ninterface SubstractFromCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ntype SubstractFromCounterResult = number\r\n\r\nconst store = new Store<State>({\r\n    mutations: {\r\n        addToCounter: (state, payload: AddToCounterPayload): void => {\r\n            state.counter += payload.amount;\r\n        }\r\n    },\r\n    actions: {\r\n        substractFromCounter: async (context, payload: SubstractFromCounterPayload): Promise<SubstractFromCounterResult> => {\r\n            const addToCounterPayload: AddToCounterPayload =  {amount: -1 * payload.amount};\r\n            context.commit('addToCounter', addToCounterPayload)\r\n            return context.state.counter;\r\n        }\r\n    },\r\n    state: {\r\n        counter: 0\r\n    }\r\n})\r\n```\r\n\r\nTriggering a mutation like this will currently not check if the payload has the correct type\r\n```typescript\r\n// correct payload type\r\nstore.commit('addToCounter', {amount: 1});\r\n// incorrect payload type\r\nstore.commit('addToCounter', {amount: '1'});\r\n// Current solution to ensure correct type\r\nconst payload: AddToCounterPayload = {\r\n  amount: 1\r\n}\r\nstore.commit('addToCounter', payload);\r\n```\r\nBut there are cases where I would prefer to build the payload inline, that's why I would like to propose using generics to set the payload type:\r\n```typescript\r\nstore.commit<AddToCounterPayload>('addToCounter', {amount: 1});\r\n```\r\n\r\nTriggering actions would work similary but additionaly the type of the returned value can be set using the second generic parameter\r\n```typescript\r\nconst result = store.dispatch<SubstractFromCounterPayload, SubstractFromCounterResult>('substractFromCounter', {amount: 1}); \r\n// type of result will be Promise<SubstractFromCounterResult>\r\n```\r\nBy setting the default values of the generics to `any` the behavior of `commit` and `dispatch` won't change if called without generics.","Url":"https://github.com/vuejs/vuex/pull/1563","RelatedDescription":"Open PR \"Typescript: Use generics for payload/result in commit/dispatch\" (#1563)"},{"Id":"451011749","IsPullRequest":false,"CreatedAt":"2019-05-31T23:13:08","Actor":"winniehell","Number":"1562","RawContent":null,"Title":"Deprecate testAction helper in favor of vuex-mock-store","State":"open","Body":"### What problem does this feature solve?\r\nThe officially documented way to [test actions](https://vuex.vuejs.org/guide/testing.html#testing-actions)\r\n\r\n- has a complex interface (5 positional, required arguments)\r\n- is always asynchronous—even if the action under test is not\r\n- requires copying a helper function from the documentation into a project's code base\r\n- involves manually patching that helper because of some shortcomings (see for example https://github.com/vuejs/vuex/issues/939)\r\n- offers no way to automatically update the copied helper once it changes in the documentation\r\n\r\n### What does the proposed API look like?\r\nRecommend to use https://github.com/posva/vuex-mock-store instead.\r\n\r\n```javascript\r\n// actions.js\r\n\r\nimport shop from '../api/shop'\r\n\r\nexport const getAllProducts = ({ commit }) => {\r\n  commit('REQUEST_PRODUCTS')\r\n  return shop.getProducts().then(products => {\r\n    commit('RECEIVE_PRODUCTS', products)\r\n  })\r\n}\r\n```\r\n\r\n```javascript\r\n// actions.spec.js\r\n\r\nimport { Store } from 'vuex-mock-store'\r\n\r\nconst store = new Store()\r\n\r\nafterEach(() => store.reset())\r\n\r\ndescribe('actions', () => {\r\n  it('getAllProducts', done => {\r\n    actions.getAllProducts(store)\r\n      .then(() => {\r\n        expect(store.commit).toHaveBeenCalledTimes(2)\r\n        expect(store.commit).toHaveBeenCalledWith('REQUEST_PRODUCTS')\r\n        expect(store.commit).toHaveBeenCalledWith('RECEIVE_PRODUCTS',  /* mocked response */)\r\n      })\r\n      .then(done)\r\n      .catch(done.fail)\r\n})\r\n```\r\n\r\nsee also https://github.com/vuejs/vue-test-utils/issues/1060\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1562","RelatedDescription":"Open issue \"Deprecate testAction helper in favor of vuex-mock-store\" (#1562)"},{"Id":"450569242","IsPullRequest":false,"CreatedAt":"2019-05-31T01:03:40","Actor":"mspiderv","Number":"1561","RawContent":null,"Title":"Retrieve module context from store instance","State":"open","Body":"### What problem does this feature solve?\r\nThis feature adds the ability to retrieve the store module context directly from root store instance.\r\n\r\n### What does the proposed API look like?\r\nLet's suppose, that `store` variable is my Vuex (root) store instance.\r\n\r\nI solve this problem with the following code:\r\n\r\n```\r\nlet subModuleContext = store._modulesNamespaceMap['subModuleName/'].context\r\n```\r\n\r\nIt would be nice to write\r\n\r\n```\r\nlet subModuleContext = store.getContext('subModuleName')\r\n```\r\n\r\nThen, I can write `subModuleContext.dispatch('someAction')` instead of `store.dispatch('subModuleName/someAction')`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1561","RelatedDescription":"Open issue \"Retrieve module context from store instance\" (#1561)"},{"Id":"448157757","IsPullRequest":false,"CreatedAt":"2019-05-30T07:01:45","Actor":"xianshenglu","Number":"1556","RawContent":null,"Title":"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode","State":"closed","Body":"### What problem does this feature solve?\r\nAs [doc](https://vuex.vuejs.org/guide/strict.html) said, \r\n\r\n> In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. \r\n\r\nHowever, **state will still be mutated** though an error would be thrown. \r\n\r\nIn my opinion, this behavior is weird and misleading. Normally,  operation would fail if an error showed. But in this case, it didn't. \r\n\r\nAlso, if a developer doesn't see this error and only see the result which is actually worked, he might do this behavior all the time until one day he find the error.\r\n\r\n So, my propose is\r\n\r\n>  Why Not Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode?\r\n\r\nThere should be a way to absolutely disable direct state mutation outside of mutation handlers. \r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst store = new Vuex.Store({\r\n  // ...\r\n  strict: true\r\n})\r\n```\r\nDirect state mutation outside of mutation handlers would be disabled when `strict` is true.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1556","RelatedDescription":"Closed issue \"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode\" (#1556)"},{"Id":"450157740","IsPullRequest":false,"CreatedAt":"2019-05-30T06:56:44","Actor":"savoygu","Number":"1560","RawContent":null,"Title":"the parent state's key is covered by the same key of the child module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust look at the content displayed on the page.\r\n\r\n### What is expected?\r\nNot covered\r\n\r\n### What is actually happening?\r\nCovered\r\n\r\n---\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1560","RelatedDescription":"Closed issue \"the parent state's key is covered by the same key of the child module\" (#1560)"},{"Id":"450155081","IsPullRequest":false,"CreatedAt":"2019-05-30T06:38:52","Actor":"savoygu","Number":"1559","RawContent":null,"Title":"[BUG] the parent state's key is covered by the same key of the child module","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n  }\r\n```","Url":"https://github.com/vuejs/vuex/issues/1559","RelatedDescription":"Closed issue \"[BUG] the parent state's key is covered by the same key of the child module\" (#1559)"},{"Id":"449676032","IsPullRequest":false,"CreatedAt":"2019-05-29T08:46:50","Actor":"de-don","Number":"1558","RawContent":null,"Title":"Add handler \"subscribeAction.onError\"","State":"open","Body":"### What problem does this feature solve?\r\nThe \"subscribeAction.after\" is not run if an action throws an error.\r\n\r\n### What does the proposed API look like?\r\nI propose to add one more property for catching errors in actions:\r\n```\r\nconst waitPlugin = (store) => {\r\n  store.subscribeAction({\r\n    before: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    after: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    onError: (action, error) => {\r\n      console.log(action.type);\r\n    }\r\n  });\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1558","RelatedDescription":"Open issue \"Add handler \"subscribeAction.onError\"\" (#1558)"},{"Id":"448881052","IsPullRequest":false,"CreatedAt":"2019-05-28T06:31:34","Actor":"chulman444","Number":"1557","RawContent":null,"Title":"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2tb9frcj/1/](https://jsfiddle.net/2tb9frcj/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the reproduction, open the developer console panel, click on the \"click\", Look at the result and please click on the `Object > val`.\r\n\r\n### What is expected?\r\n0 is printed out when clicking on the output of:\r\n\r\n```\r\nconsole.log(\"Printed as undefined\", store.state.tests[0])\r\n```\r\n\r\n### What is actually happening?\r\nPrinted as undefined but behaves like zero\r\n\r\n---\r\nI know that `mutations` are not asynchronous, so the `setTimeout` or `$nextTick` won't fix it; try clicking the button multiple times to add more entries but the old values still 'display' as undefined but behaves like zero.\r\n\r\nBehaves like zero, so I'm fine with it. Printing out the value directly prints zero, so I'm fine with it. But this was HUGELY misleading in my case when it printed out `undefined`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1557","RelatedDescription":"Closed issue \"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly\" (#1557)"},{"Id":"445811290","IsPullRequest":true,"CreatedAt":"2019-05-22T02:28:11","Actor":"liyangworld","Number":"1554","RawContent":null,"Title":"add warnings when the different namespaced modules has the same names…","State":"closed","Body":"Add warnings when the different namespaced modules has the same namespace.\r\nThere is a situation that different namespaced modules could have the same namespace, so when in the method of installModule, generate store._modulesNamespaceMap, the follow module will override the before module.\r\nFor example:\r\n```\r\nnew Store({\r\n  modules: {\r\n    m1: {\r\n      namespaced: true,\r\n      state: {\r\n        a: \"a1\"\r\n      }\r\n    },\r\n    m2: {\r\n      modules: {\r\n        m1: {\r\n          namespaced: true,\r\n          state: {\r\n            a: \"a2\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\nthe module m1 has the namespace 'm1',\r\nthe module m2/m1 has the same namespace 'm1'\r\nso in the store._modulesNamespaceMap the module m2/m1 will override the module m1","Url":"https://github.com/vuejs/vuex/pull/1554","RelatedDescription":"Closed or merged PR \"add warnings when the different namespaced modules has the same names…\" (#1554)"},{"Id":"446184900","IsPullRequest":true,"CreatedAt":"2019-05-21T10:49:47","Actor":"57u","Number":"1555","RawContent":null,"Title":"Typo correction in docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1555","RelatedDescription":"Closed or merged PR \"Typo correction in docs\" (#1555)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-24T05:30:52.2762835Z","RunDurationInMilliseconds":2554}