{"Data":{"Vue-Issues":{"Issues":[{"Id":"568421930","IsPullRequest":false,"CreatedAt":"2020-02-23T05:18:52","Actor":"fastfedora","Number":"11132","RawContent":null,"Title":"Allow `class` as valid component prop","State":"closed","Body":"### What problem does this feature solve?\r\nIt allows for proper encapsulation of components. Currently the `class` and `style` props cannot be intercepted or prevented from being injected into the root element of a component. This prevents the ability to refactor components without requiring the calling code to be changed.\r\n\r\nFor example, assume a `Logo` component which is used with a `class` attribute:\r\n\r\n```\r\n<my-logo class=\"app-logo\" />\r\n``` \r\n\r\nWith the template:\r\n\r\n```\r\n<template>\r\n   <img src=\"my-logo.png\" />\r\n</template>\r\n```\r\n\r\nDue to the merging of the `class` attribute the rendered tag will be:\r\n\r\n```\r\n   <img class=\"app-logo\" src=\"my-logo.png\" />\r\n```\r\n\r\nNow, let's assume we want to refactor this component so it lazily loads the image. Our new template is:\r\n\r\n\r\n```\r\n<template>\r\n   <div>\r\n      <my-loader v-if=\"loading\" />\r\n      <img v-else src=\"my-logo.png\" />\r\n   </div>\r\n</template>\r\n```\r\n\r\nNow the `class` attribute is put on the `div`, which may not be appropriate. With good encapsulation, there would be a way to define `class` as a prop to intercept the value being passed in and render it on a different element than the root element, such as:\r\n\r\n```\r\n<template>\r\n   <div> a\r\n      <my-loader v-if=\"loading\" />\r\n      <img v-else :class=\"class\" src=\"my-logo.png\" />\r\n   </div>\r\n</template>\r\n```\r\n\r\nCurrently, attempting to define `class` as a prop displays this warning on the console:\r\n\r\n```\r\n[Vue warn]: \"class\" is a reserved attribute and cannot be used as component prop.\r\n```\r\n\r\nWhile `inheritAttrs` can be set to `false` to disable most props from being passed through to the root element, it does not apply to `class` or `style`. \r\n\r\n### What does the proposed API look like?\r\nIdeally simply allow `class` and `style` as valid Vue props that can be used to intercept the values passed in (that is, they don't pass through to the root element when these are defined as props).\r\n\r\nIf that is not possible for backward-compatibility reasons, add a flag similar to `inheritAttrs` that enables this functionality (e.g. `enableClassAndStyleProps`).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11132","RelatedDescription":"Closed issue \"Allow `class` as valid component prop\" (#11132)"},{"Id":"569433521","IsPullRequest":true,"CreatedAt":"2020-02-23T04:04:08","Actor":"geongeorge","Number":"11138","RawContent":null,"Title":"fix(compiler): Better whitespace regex","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nRelated to #11065\r\n","Url":"https://github.com/vuejs/vue/pull/11138","RelatedDescription":"Open PR \"fix(compiler): Better whitespace regex\" (#11138)"},{"Id":"569287208","IsPullRequest":false,"CreatedAt":"2020-02-22T14:52:21","Actor":"renjithspace","Number":"11137","RawContent":null,"Title":"Something weird happening when using computed setter in input binding","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Ly3tmeuk/](https://jsfiddle.net/Ly3tmeuk/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFind the code from https://jsfiddle.net/Ly3tmeuk/. Please input on the fullName computed property bind field.\r\n\r\n### What is expected?\r\nWorking properly\r\n\r\n### What is actually happening?\r\nNot getting result as expected\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11137","RelatedDescription":"Closed issue \"Something weird happening when using computed setter in input binding\" (#11137)"},{"Id":"569073600","IsPullRequest":false,"CreatedAt":"2020-02-22T14:48:54","Actor":"mmestas","Number":"11136","RawContent":null,"Title":"v-model.number allows for things other than numbers","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mmestas/ca7v214w/1/](https://jsfiddle.net/mmestas/ca7v214w/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n<input v-model.number=\"modelName.name\"\r\n                     name=\"inputName\"\r\n                     placeholder=\"0-65\"\r\n                     type=\"number\"\r\n                     max=\"65\"\r\n                     min=\"0\"                \r\n                     />\r\n\r\nType in 0-2 or any number value with a \"-\" after it.\r\n\r\n\r\n\r\n### What is expected?\r\nThat only numbers are allowed\r\n\r\n### What is actually happening?\r\nthe v.model.number with type=number allows for the input of characters other than numbers, specifically, \"-\".\r\nMy guess is this is allowed because of numbers like \"-3\" but this enables someone to enter (eg: 0-2) into the input.\r\nI had to create special functions using v-on:keypress and v-on:keyup to validate the inputs to not receive something like \"0-2\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11136","RelatedDescription":"Closed issue \"v-model.number allows for things other than numbers\" (#11136)"},{"Id":"569033392","IsPullRequest":false,"CreatedAt":"2020-02-22T14:47:13","Actor":"tcummin2","Number":"11135","RawContent":null,"Title":"v-model.lazy not working properly when mousedown event causes another part of the component to re-render","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ynhzuacw/6/](https://jsfiddle.net/ynhzuacw/6/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Change the input value to different text without unfocusing the input\r\n1. Mousedown on the 'Toggle on/off' button\r\n\r\n\r\n### What is expected?\r\nThe changed text value should be kept after the input is unfocused.\r\n\r\n### What is actually happening?\r\nThe mousedown event changes the state of the component so that it renders the state of the button to 'on' or 'off' which overwrites anything that has changed in the lazy input field.\r\n\r\n---\r\nAny mousedown that doesn't re-render a different part of the component works fine. In the reproduction above, removing the div that shows the state of the button results in expected behavior.\r\n\r\nWorked properly until 2.6.0.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11135","RelatedDescription":"Closed issue \"v-model.lazy not working properly when mousedown event causes another part of the component to re-render\" (#11135)"},{"Id":"568836745","IsPullRequest":false,"CreatedAt":"2020-02-22T14:44:56","Actor":"ariran5","Number":"11134","RawContent":null,"Title":"Add support esm dynamic imports on ssr","State":"closed","Body":"### What problem does this feature solve?\r\nToday SSR not support esm async components, but I would like to use this opportunity\r\n\r\n### What does the proposed API look like?\r\nVue API looks unchanged. You need to add support for this feature inside vue-server-renderer\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11134","RelatedDescription":"Closed issue \"Add support esm dynamic imports on ssr\" (#11134)"},{"Id":"568560230","IsPullRequest":false,"CreatedAt":"2020-02-20T21:51:56","Actor":"goetas","Number":"11133","RawContent":null,"Title":"Attach elements to DOM with event listeners","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis is more of a support request to be honest but I'm pretty sure to not be the first one having this issue. Sorry for the fake reproduction link.\r\n\r\nWe are running our acceptance tests using selenium and we have random failures on some tests. \r\n\r\nWhat we are doing is basically waiting for a button to appear (vue to draw it), and then we click on it.\r\n\r\nAfter spending a lot of time, what  it seems happening is the following:\r\n\r\n1. Vue draws a component on the DOM (but did not make in time to attach events yet).\r\n2. Selenium detects the element and clicks on it\r\n3. Nothing happens, the event listener on that button is not triggered since vue did not make in time to attach the event listener.\r\n\r\nAdding a small delay (50ms as example) fixes the issue. \r\n\r\n### What is expected?\r\nWhen vue draws a component, event listeners are already registered\r\n\r\n### What is actually happening?\r\nIt seems that takes some time for event listeners to be registered \r\n\r\n---\r\nIs there some parameter to tweak vue and to not attach the nodes to the dom without registering event handlers?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11133","RelatedDescription":"Closed issue \"Attach elements to DOM with event listeners\" (#11133)"},{"Id":"568333488","IsPullRequest":false,"CreatedAt":"2020-02-20T14:20:01","Actor":"hareku","Number":"11131","RawContent":null,"Title":"Improve PropType with Function","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/11131","RelatedDescription":"Closed issue \"Improve PropType with Function\" (#11131)"},{"Id":"568230928","IsPullRequest":false,"CreatedAt":"2020-02-20T12:10:46","Actor":"ariran5","Number":"11130","RawContent":null,"Title":"don't work ssr with esm build ","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\nno\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nuse rollup esm build with rollup-plugin-vue\r\nuse components\r\nuse async components <-- error\r\n\r\n### What is expected?\r\nSsr with async components\r\n\r\n### What is actually happening?\r\nerror \r\nTypeError: Cannot add property _Ctor, object is not extensible\r\n\r\n\r\n---\r\nDon't work esm rollupjs build with ssr and async component, because\r\n\r\nthis code in 'vue-server-renderer'\r\n```js\r\nfunction renderAsyncComponent (node, isRoot, context) {\r\n  var factory = node.asyncFactory;\r\n\r\n  var resolve = function (comp) {\r\n    if (comp.__esModule && comp.default) { // don't work with native esm in nodejs\r\n      comp = comp.default;\r\n    }\r\n...\r\n```\r\nnode 13.8\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11130","RelatedDescription":"Closed issue \"don't work ssr with esm build \" (#11130)"},{"Id":"564267820","IsPullRequest":true,"CreatedAt":"2020-02-20T04:15:16","Actor":"lKk2","Number":"11102","RawContent":null,"Title":"fix: fix(ssr) textarea domProps keeps falsy values (#10803)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [X] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [X] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11102","RelatedDescription":"Closed or merged PR \"fix: fix(ssr) textarea domProps keeps falsy values (#10803)\" (#11102)"},{"Id":"567752364","IsPullRequest":true,"CreatedAt":"2020-02-19T18:23:33","Actor":"dependabot[bot]","Number":"11129","RawContent":null,"Title":"build(deps-dev): bump codecov from 3.1.0 to 3.6.5","State":"open","Body":"Bumps [codecov](https://github.com/codecov/codecov-node) from 3.1.0 to 3.6.5.\n<details>\n<summary>Release notes</summary>\n\n*Sourced from [codecov's releases](https://github.com/codecov/codecov-node/releases).*\n\n> ## v3.6.4\n> Fix for Cirrus CI\n> \n> ## v3.6.3\n> AWS Codebuild fixes + package updates\n> \n> ## v3.6.2\n> command line args sanitised\n> \n> ## v3.6.1\n> Fix for Semaphore\n> \n> ## v3.6.0\n> AWS CodeBuild\r\n> Semaphore v2\n> \n> ## v3.3.0\n> Added pipe `--pipe`, `-l`\n</details>\n<details>\n<summary>Commits</summary>\n\n- See full diff in [compare view](https://github.com/codecov/codecov-node/commits)\n</details>\n<details>\n<summary>Maintainer changes</summary>\n\nThis version was pushed to npm by [drazisil](https://www.npmjs.com/~drazisil), a new releaser for codecov since your current version.\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=codecov&package-manager=npm_and_yarn&previous-version=3.1.0&new-version=3.6.5)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vuejs/vue/network/alerts).\n\n</details>","Url":"https://github.com/vuejs/vue/pull/11129","RelatedDescription":"Open PR \"build(deps-dev): bump codecov from 3.1.0 to 3.6.5\" (#11129)"},{"Id":"567637427","IsPullRequest":true,"CreatedAt":"2020-02-19T15:10:13","Actor":"yannisgu","Number":"11128","RawContent":null,"Title":"fix(transition-group): handle non-visible list items","State":"open","Body":"Handle the case, when a component inside a transition-group doesn't yield any HTML, e.g. when there is a `v-if` on the root-element. \r\n\r\nBefore this fix, transition-group would fail with the errror `c$1.elm.getBoundingClientRect is not a function`, when moving items, if there was such an item.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11128","RelatedDescription":"Open PR \"fix(transition-group): handle non-visible list items\" (#11128)"},{"Id":"567325845","IsPullRequest":false,"CreatedAt":"2020-02-19T10:27:29","Actor":"sns45","Number":"11127","RawContent":null,"Title":"No Inlining of Critical CSS by bundleRenderer","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/eddyerburgh/vue-hackernews](https://github.com/eddyerburgh/vue-hackernews)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Build and Start the project (npm run build && npm run start) \r\n2. View source the http://localhost:8080\r\n\r\n### What is expected?\r\nInline styles in head section should appear like this:\r\n\r\n```\r\n<style data-vue-ssr-id=\"4e49db98:0 ba2f7d08:0\">.news-view{padding-top:45px}.news-list,.news-list-nav{background-color:#fff;border-radius:2px}.news-list-nav{padding:15px 30px;position:fixed;text-align:center;top:55px;left:0;right:0;z-index:998;box-shadow:0 1px 2px rgba(0,0,0,.1)}.news-list-nav a{margin:0 1em}.news-list-nav .disabled{color:#ccc}.news-list{position:absolute;margin:30px 0;width:100%;transition:all .5s cubic-bezier(.55,0,.1,1)}.news-list ul{list-style-type:none;padding:0;margin:0}.slide-left-enter,.slide-right-leave-to{opacity:0;transform:translate(30px)}.slide-left-leave-to,.slide-right-enter{opacity:0;transform:translate(-30px)}.item-enter-active,.item-leave-active,.item-move{transition:all .5s cubic-bezier(.55,0,.1,1)}.item-enter,.item-leave-active{opacity:0;transform:translate(30px)}.item-leave-active{position:absolute}@media (max-width:600px){.news-list{margin:10px 0}}\r\n.news-item{background-color:#fff;padding:20px 30px 20px 80px;border-bottom:1px solid #eee;position:relative;line-height:20px}.news-item .score{color:#f60;font-size:1.1em;font-weight:700;position:absolute;top:50%;left:0;width:80px;text-align:center;margin-top:-10px}.news-item .host,.news-item .meta{font-size:.85em;color:#828282}.news-item .host a,.news-item .meta a{color:#828282;text-decoration:underline}.news-item .host a:hover,.news-item .meta a:hover{color:#f60}</style>\r\n```\r\n\r\nThere should be inline styles in head section like its on here:\r\nhttps://vue-hn.herokuapp.com/top\r\n\r\n### What is actually happening?\r\nOnly link tags are outputted by the server. \r\nNo inlining of critical CSS.\r\n\r\n---\r\nI am using vue-cli to configure SSR build. \r\nWhy is the bundle renderer not inlining the critical css? I want to reduce network calls so I am experimenting with inlining some critical css in order to improve the performance. \r\n\r\nAlso as a side note, can we have an official vue-hackernews with SSR capabilities utilizing vue-cli.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11127","RelatedDescription":"Closed issue \"No Inlining of Critical CSS by bundleRenderer\" (#11127)"},{"Id":"567161132","IsPullRequest":false,"CreatedAt":"2020-02-19T10:14:38","Actor":"mauroviniciussilva","Number":"11125","RawContent":null,"Title":"Not able to perform action before user reload page or exit my application","State":"closed","Body":"### What problem does this feature solve?\r\nSo, I'm using the version 2.6.11 and I'm facing some difficulties to perform an action before the user exit my application or reloads the page.\r\n\r\nI'm doing a integration of a CRM with telephony. When the user access my application he needs to login (not in my application, but in a hub that I'm accessing with SignalR), so I can perform some action like make a call, receive a call, and handle the events that I receive from the hub. The problem is: if the user reloads the page or exit the page, I need to log him out of the hub connection. \r\n\r\nWhen using angular the solution was very simple, i just needed to call:\r\n```JS\r\n$scope.$on('$destroy', function () {\r\n       // Log user out here\r\n});\r\n```\r\n... but I can't do this with vue. I've been trying to use the <code>beforeDestroy</code>, <code>keep-alive</code>, <code>destroyed</code>, and other methods, but none of them are helping me to achieve my goal. I tried pure javascript like \r\n```JS\r\nwindow.onbeforeunload = () => { \r\n       // Log user out here\r\n}\r\n```\r\n... but for some reason not even this had helped me to solve the issue.\r\n\r\nI really don't know if it is my mistake, or if this is not implemented on vue yet, but I haven't find similar issues on internet, so I decided to open one here. I hope you can help me, because I'm kinda new to vuejs and I've been liking a lot the flexibility of this framework.\r\n\r\nI believe that a functionality like that can help in many environments, like showing a message before the user gets out of the website, perform some inherit logic of the application, and even more. If you guys know any other way to do this, I'll be very thankful to know as well.\r\n\r\n### What does the proposed API look like?\r\nSo, this is what AngularJS documentation talks about the event that I've mentioned:\r\n\r\n> $destroy()\r\n>\r\n> Removes the current scope (and all of its children) from the parent scope. Removal implies that calls to $digest() will no longer propagate to the current scope and its children. Removal also implies that the current scope is eligible for garbage collection.\r\n>\r\n> The $destroy() is usually used by directives such as ngRepeat for managing the unrolling of the loop.\r\n>\r\n> Just before a scope is destroyed a $destroy event is broadcasted on this scope. Application code can register a $destroy event handler that will give it chance to perform any necessary cleanup.\r\n\r\nI don't think I have enough knowledge to suggest a simple solution for this issue, or to write some code that can be used in way to implement this kind of feature, but my idea is to have something similar to this in the vuejs framework.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11125","RelatedDescription":"Closed issue \"Not able to perform action before user reload page or exit my application\" (#11125)"},{"Id":"566952282","IsPullRequest":false,"CreatedAt":"2020-02-19T02:27:17","Actor":"aweiu","Number":"11123","RawContent":null,"Title":"why my custom elements such as 'view', 'text' are not show?","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t9fyx82u/5/](https://jsfiddle.net/t9fyx82u/5/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnothing to do.\r\n\r\n### What is expected?\r\nview and text will be shown, just like view2 and text2.\r\n\r\n### What is actually happening?\r\nview and text in the #app are not show，but they can be displayed outside of #app\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11123","RelatedDescription":"Closed issue \"why my custom elements such as 'view', 'text' are not show?\" (#11123)"},{"Id":"567186155","IsPullRequest":false,"CreatedAt":"2020-02-18T22:03:12","Actor":"YanDevDe","Number":"11126","RawContent":null,"Title":"Allow BigInt usage in templates","State":"open","Body":"### What problem does this feature solve?\r\nIt would allow us to use numbers which is larger than MAX_SAFE_INTEGER. \r\n\r\n### What does the proposed API look like?\r\nIn HTML, `{{BigInt(\"100\")}}`, `{{100n}}`, `{{2n * 50n}}` or `{{50n + 50n}}` should show \"100\" (it can be just simply string by using .toString()) at frontend.\r\nAt the moment using BigInt in \"Mustache\" syntax just throw error.\r\nSure, backup solution would be using external functions or converted into string and save it to variable. But using BigInt directly in HTML would be nice to have.\r\nMore Information about BigInt -> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11126","RelatedDescription":"Open issue \"Allow BigInt usage in templates\" (#11126)"},{"Id":"567110992","IsPullRequest":false,"CreatedAt":"2020-02-18T19:32:55","Actor":"talktelecom","Number":"11124","RawContent":null,"Title":"beforeDestroy ","State":"closed","Body":"\r\nbeforeDestroy event does not work like the $ destroy event of the angular.\r\nI've used keepalive and it still doesn't work.\r\n\r\nHow do I update a page with F5 and receive the event before Destroy.\r\n\r\n\r\n\r\nAngular\r\n$scope.$on('$destroy', function () {\r\n         Service.terminar();\r\n });\r\n![1](https://user-images.githubusercontent.com/29492336/74771022-32c5f080-526c-11ea-8b2a-cc466f84db0f.PNG)\r\n![2](https://user-images.githubusercontent.com/29492336/74771025-335e8700-526c-11ea-9600-48494de25f77.PNG)\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11124","RelatedDescription":"Closed issue \"beforeDestroy \" (#11124)"},{"Id":"566793480","IsPullRequest":false,"CreatedAt":"2020-02-18T10:26:46","Actor":"kfirba","Number":"11122","RawContent":null,"Title":"Trailing whitespaces are trimmed from the end of inline <strong> element when page is being parsed by Vue","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/kfirba2/us5h04f7/5/](https://jsfiddle.net/kfirba2/us5h04f7/5/)\r\n\r\n### Steps to reproduce\r\n1. Have a wrapper for Vue\r\n2. Inside that wrapper, insert an inline element such as `<strong>` and leave trailing whitespace at the end of it:\r\n```html\r\n<div id=\"#app\">\r\n  This is <strong>BOLD </strong>text\r\n</div>\r\n```\r\n3. After the page is parsed with Vue (and Vue has generated a Virtual DOM for the page), the words \"BOLD\" and \"text\" will be glued together (the whitespace after the word \"BOLD\" and before the enclosing tag of `<strong>` is removed.\r\n\r\n### What is expected?\r\nIt is expected that the whitespace will remain in its place and not trimmed.\r\n\r\n### What is actually happening?\r\nThe trailing whitespace is trimmed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11122","RelatedDescription":"Open issue \"Trailing whitespaces are trimmed from the end of inline <strong> element when page is being parsed by Vue\" (#11122)"},{"Id":"566552221","IsPullRequest":false,"CreatedAt":"2020-02-18T09:10:33","Actor":"lucasmsoares96","Number":"11120","RawContent":null,"Title":" Impossible to select the child elements of the table when filled with function","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/lucasmsoares96/2x0mpLt7/1/](https://jsfiddle.net/lucasmsoares96/2x0mpLt7/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen the browser console\r\n\r\n### What is expected?\r\nthe browser console is expected to show the childre elements of the selected table.\r\n\r\n### What is actually happening?\r\nChild elements are not selected.\r\n\r\n---\r\nchild elements are selected when the items attribute is defined within data(), but not when items are returned from a function\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11120","RelatedDescription":"Closed issue \" Impossible to select the child elements of the table when filled with function\" (#11120)"},{"Id":"566619602","IsPullRequest":true,"CreatedAt":"2020-02-18T03:16:12","Actor":"danielsuguimoto","Number":"11121","RawContent":null,"Title":"fix(ssr): textarea keeps undefined/null values","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nRelates to #10803 ","Url":"https://github.com/vuejs/vue/pull/11121","RelatedDescription":"Open PR \"fix(ssr): textarea keeps undefined/null values\" (#11121)"},{"Id":"566180824","IsPullRequest":false,"CreatedAt":"2020-02-17T09:53:47","Actor":"WofWca","Number":"11113","RawContent":null,"Title":"Throw error/warn if watch path doesn't resolve to an existing property","State":"open","Body":"### What problem does this feature solve?\r\nCurrently, if a watch path does not address an existing property, its handler would just silently never execute.\r\nThis may cause bugs due to a typo or refactoring that involves restructuring the app model. Especially if we want to watch something like `'$store.state.user.user.subscriptions'`.\r\n\r\nHere's a JSFiddle to play with: https://jsfiddle.net/WofWca/50feyxn7\r\n\r\n### What does the proposed API look like?\r\nJust throw an error (or warn?) in such case. Like it would happen if we used `this.$watch(() => this.$store.state.user.user.subscriptions, () => { .... });`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11113","RelatedDescription":"Open issue \"Throw error/warn if watch path doesn't resolve to an existing property\" (#11113)"},{"Id":"566137394","IsPullRequest":true,"CreatedAt":"2020-02-17T08:34:32","Actor":"WORMSS","Number":"11112","RawContent":null,"Title":"types: $refs update","State":"open","Body":"Added undefined as a return type of $refs as it was quite hard to convince typescript that something COULD be undefined if you type in a ref that doesn't exist,\r\nI also changed the two array statements from `Element[] | Vue[]` to `(Element | Vue)[]` because it's not guaranteed that they are ALL Elements or they are ALL Vue components. (Very likely, yes, but not always)\r\nFor example\r\n```html\r\n<template v-for=\"(a, index) of b\">\r\n  <div v-if=\"index % 2 === 0\" ref=\"test\"></div>\r\n  <my-component v-else ref=\"test\"></my-component>\r\n</template>\r\n```\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Typings\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11112","RelatedDescription":"Open PR \"types: $refs update\" (#11112)"},{"Id":"565642006","IsPullRequest":true,"CreatedAt":"2020-02-15T02:10:17","Actor":"deqwin","Number":"11111","RawContent":null,"Title":"fix(ssr): ignore empty text vnode when hydrating (fix #11109)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11111","RelatedDescription":"Open PR \"fix(ssr): ignore empty text vnode when hydrating (fix #11109)\" (#11111)"},{"Id":"565375135","IsPullRequest":false,"CreatedAt":"2020-02-14T14:53:03","Actor":"deqwin","Number":"11109","RawContent":null,"Title":"Hydration fails when write like \"<div><span>123</span>{{value}}</div>\" in the template and the data \"value\" is a empty string","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/deqwin/pen/wvaMxoO](https://codepen.io/deqwin/pen/wvaMxoO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen the reproduction above and you will see a red vue warning in the console\r\n\r\n### What is expected?\r\na successful hydration\r\n\r\n### What is actually happening?\r\nthe hydration fails and the app re-renders absolutely\r\n\r\n---\r\nthis looks like the problem caused by the empty text node (src/core/vdom/patch.js line:646)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11109","RelatedDescription":"Open issue \"Hydration fails when write like \"<div><span>123</span>{{value}}</div>\" in the template and the data \"value\" is a empty string\" (#11109)"},{"Id":"565193888","IsPullRequest":true,"CreatedAt":"2020-02-14T09:23:30","Actor":"OddDev","Number":"11108","RawContent":null,"Title":"Refactored dedupeHooks","State":"closed","Body":"Using the new Set API makes it faster and more readable.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [X] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11108","RelatedDescription":"Closed or merged PR \"Refactored dedupeHooks\" (#11108)"},{"Id":"565126023","IsPullRequest":false,"CreatedAt":"2020-02-14T09:02:17","Actor":"notomorow","Number":"11106","RawContent":null,"Title":"prop 的值更新不及时","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/notomorow/pen/abOdVPE?editors=1010。](https://codepen.io/notomorow/pen/abOdVPE?editors=1010。)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://codepen.io/notomorow/pen/abOdVPE?editors=1010。当父组件里的key加1时，立即调用子组件的alert方法，按预想此时子组件alert里的val应该更新了，但是并没有。\r\n\r\n### What is expected?\r\n当父组件里的key加1时，立即调用子组件的alert方法，按预想此时子组件alert里的val应该更新了。\r\n\r\n### What is actually happening?\r\n子组件alert的this.val 还是老的\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11106","RelatedDescription":"Closed issue \"prop 的值更新不及时\" (#11106)"},{"Id":"565127938","IsPullRequest":true,"CreatedAt":"2020-02-14T06:14:44","Actor":"contribu","Number":"11107","RawContent":null,"Title":"fix(core): fix sameVnode for async component","State":"open","Body":"I found and fixed a vdom bug related to async component and SSR.\r\nI originally noticed this bug on my closed project using Nuxt.\r\nThe minimal reproduction code is included in test.\r\n\r\n## Phenomenon\r\n\r\nThrow when hydrated pending async component is patched by v-if=\"false\" node.\r\n(version: 2.6.11)\r\n\r\n## Cause\r\n\r\n1. v-if=\"false\" node is represented by comment node\r\n2. sameVNode returns true when asyncPlaceholder and comment are compared.\r\n3. patchVNode executed for asyncPlaceholder and comment.\r\n4. comment doesn't have asyncFactory but asyncFactory.resolved is accessed.\r\n\r\n## Fix\r\n\r\nFix sameVNode to return false when asyncPlaceholder and comment are compared.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**","Url":"https://github.com/vuejs/vue/pull/11107","RelatedDescription":"Open PR \"fix(core): fix sameVnode for async component\" (#11107)"},{"Id":"564746047","IsPullRequest":true,"CreatedAt":"2020-02-13T15:41:35","Actor":"jesusvilla","Number":"11105","RawContent":null,"Title":"fix(core): remove event only when it is not $root","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n**Other information:**\r\nLook #11104 \r\n","Url":"https://github.com/vuejs/vue/pull/11105","RelatedDescription":"Closed or merged PR \"fix(core): remove event only when it is not $root\" (#11105)"},{"Id":"564729289","IsPullRequest":false,"CreatedAt":"2020-02-13T15:39:57","Actor":"hawkeye64","Number":"11104","RawContent":null,"Title":"Global event bus sets listeners to null on bad code","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/Hawkeye64/pen/bGdENZo?editors=1010](https://codepen.io/Hawkeye64/pen/bGdENZo?editors=1010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe link has the steps. Basically, you need two components that are subsequently created and destroyed. The first component registers an event with the global event bus and de-registers it when destroyed. The second component, only has the de-registration in it's BeforeDestroy. When going from 1st component, to second component, then back to first component, the first component is created, the event is registered, the second component is destroyed and array of listeners for that event is set to null when the de-registration is done.\r\nI know this is bad coding. But could happen to anyone. This took us two days to figure out. I wanted to learn more about the issue, so wrote the codepen to illustrate the issue and to test various versions of Vue.\r\nThis issue does not occur in v2.5.2 or earlier. It started with v2.5.3 and is present in latest (v2.6.11).\r\n\r\n\r\n### What is expected?\r\nVue should keep track of $on/$off listeners and ignore $off if no corresponding $on - at least don't set the listeners array to null.\r\nWith the link to reproduce the bug, I have done the latest (2.6.11) and back to 2.5.3 - this is NOT a bug in 2.5.2 as the reproduction works in that version, so quite possibly something changed.\r\n\r\n### What is actually happening?\r\nThe listeners array for the event is set to null. Therefore, no other listeners can receive the event messages from the global event bus.\r\n\r\n---\r\nBefore a jr dev left our company, he was doing some clean up. In the mounted() he remove some code `this.$root.$on('alarms:new', this.myFunc)` but forgot to remove in the `BeforeDestroy` this `this.$root.$off('alarms:new', this.myFunc)`. Subsequently, we stopped getting this particular event with other components. \r\nWhat we found is that the innocuous code, when calling $root.$off does not have a matching $root.$on, so the event array for the listeners is set to null.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11104","RelatedDescription":"Closed issue \"Global event bus sets listeners to null on bad code\" (#11104)"},{"Id":"564271953","IsPullRequest":false,"CreatedAt":"2020-02-12T21:07:13","Actor":"AndreSouzaAbreu","Number":"11103","RawContent":null,"Title":"Syntax suggestion when passing props to components","State":"closed","Body":"Hello, I'd like to suggest the following syntax that you may add to future releases.\r\n```\r\n<my-component ::params @@myMethod />\r\n```\r\nCould be equivalent to \r\n```\r\n<my-component :params=\"params\" @myMethod=\"myMethod\" />\r\n```\r\nThat would make code much cleaner when we have to pass multiple props to a child component and those props have the same name as the variables in the parent component. The same thing can be said about events. \r\n\r\nI hope you take this into consideration and that my suggestion will help you improve VUE.","Url":"https://github.com/vuejs/vue/issues/11103","RelatedDescription":"Closed issue \"Syntax suggestion when passing props to components\" (#11103)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"569352079","IsPullRequest":true,"CreatedAt":"2020-02-22T20:50:43","Actor":"rongzedong","Number":"3131","RawContent":null,"Title":"增加个 methods 中 redirect 的方法","State":"closed","Body":"不知道这么写对不对，哪里不对，请修正并实现这个方法，因为比如登录 或者其他某些时候是需要这样做的。而比如我就需要这样的教程（例子）。\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3131","RelatedDescription":"Closed or merged PR \"增加个 methods 中 redirect 的方法\" (#3131)"},{"Id":"569344783","IsPullRequest":false,"CreatedAt":"2020-02-22T14:51:31","Actor":"zhouyanggodking","Number":"3130","RawContent":null,"Title":"router.go() will not free previous page data causing memory leak issue","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.  first land on /home page, then navigate to /about page.    (at this page, it produces a large array)\r\n2. on about page, click back button (calling router.go(-1))\r\n3. at the memory panel of chrome devtool,  click \"garbage collect\" button to force garbage collection.\r\n4. take a snapshot\r\n\r\nyou can see the created array is not freed.\r\n\r\n### What is expected?\r\nArray created on about page should be freed.\r\n\r\n\r\n### What is actually happening?\r\nArray created on about page stays in memory\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n![image](https://user-images.githubusercontent.com/6425541/75094433-fd9c0400-55c5-11ea-9a7b-9ac17321bdd9.png)\r\n\r\nNote:  if I click the back button of chrome browser, no issue at all. Weird\r\nYou can also monitor the memory usage of each page. (Please remember to force garbage collection before you look at the stats)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3130","RelatedDescription":"Open issue \"router.go() will not free previous page data causing memory leak issue\" (#3130)"},{"Id":"568732576","IsPullRequest":false,"CreatedAt":"2020-02-22T14:35:01","Actor":"alphatr","Number":"3128","RawContent":null,"Title":"beforeRouteLeave don't prevent router.back()","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/alphatr/eawpdvb6/](https://jsfiddle.net/AlphaTr/eawpdvb6/)\r\n\r\n### Steps to reproduce\r\nopen https://jsfiddle.net/alphatr/eawpdvb6/ and click `Go to Page` then click `back`;\r\n\r\n### What is expected?\r\nNeither `location.hash` nor `$route` change\r\n\r\n### What is actually happening?\r\nlocation.hash is changed\r\n\r\n---\r\nif beforeRouteLeave used next in synchronize, the location.hash is not change;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3128","RelatedDescription":"Closed issue \"beforeRouteLeave don't prevent router.back()\" (#3128)"},{"Id":"568791080","IsPullRequest":true,"CreatedAt":"2020-02-21T07:42:12","Actor":"NoelDeMartin","Number":"3129","RawContent":null,"Title":"Documentation: Update guard example to avoid stack overflow","State":"open","Body":"I am surprised that this hasn't been brought up before, so maybe I am doing something wrong. But I am getting a \"too much recursion\" error with the sample code in the documentation.\r\n\r\nLooking at the code, it seems to me like getting a stack overflow *is* the expected behaviour. May this be a [schrödinbug](http://www.catb.org/jargon/html/S/schroedinbug.html)?","Url":"https://github.com/vuejs/vue-router/pull/3129","RelatedDescription":"Open PR \"Documentation: Update guard example to avoid stack overflow\" (#3129)"},{"Id":"568413801","IsPullRequest":false,"CreatedAt":"2020-02-20T16:18:46","Actor":"991567775","Number":"3127","RawContent":null,"Title":"History mode input URL and refresh will not enter the route guard or Axios global interception","State":"closed","Body":"History mode input URL and refresh will not enter the route guard or Axios global interception\r\n\r\n\r\nWhat's the solution","Url":"https://github.com/vuejs/vue-router/issues/3127","RelatedDescription":"Closed issue \"History mode input URL and refresh will not enter the route guard or Axios global interception\" (#3127)"},{"Id":"567068016","IsPullRequest":false,"CreatedAt":"2020-02-18T19:34:48","Actor":"tafelnl","Number":"3126","RawContent":null,"Title":"$route incorrect for view when inactive (in combination with keep-alive)","State":"closed","Body":"### Version\r\n3.1.3\r\n(and up to 3.1.5 as well)\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mdvL4276/29](https://jsfiddle.net/mdvL4276/29)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the JsFiddle\r\n2. Click 'navigate to random'\r\n\r\n### What is expected?\r\nThe list that shows all children of the App.vue should all have their own correct id. The id is a computed property that is computed the following:\r\n`return this.$route.params.id`\r\n\r\nIn the JsFiddle I also implemented a workaround myself. This is done as follows:\r\n```\r\n  data() {\r\n    return {\r\n      'routeFixed': this.$route\r\n    }\r\n  },\r\n```\r\nThis way the `routeFixed` property will always have the correct `$route` info available.\r\n\r\n### What is actually happening?\r\nThe $route param changes when the view becomes inactive. In my opinion it should remained fixed as it is linked to that specific view. \r\n\r\n---\r\nThis can cause all sorts of problems and issues. For example, I have a computed property based on one of the $route.params variables. If I then make a watcher on that computed property, it will actually execute the code within that watcher's handler (because it changed from some value to undefined). Of course this can be worked around by adding a check to see if the variable is undefined, but I don't think that should be necessary. Besides that it can cause problems when you use that computed property in a Vue plugin that does not check for undefined for example.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3126","RelatedDescription":"Closed issue \"$route incorrect for view when inactive (in combination with keep-alive)\" (#3126)"},{"Id":"565800604","IsPullRequest":true,"CreatedAt":"2020-02-15T19:54:45","Actor":"Alexeykhr","Number":"3125","RawContent":null,"Title":"WIP: Fix/find init location","State":"open","Body":"I will try to fix this :). Issue: https://github.com/vuejs/vue-router/issues/3103\r\n\r\nThe problem is url generation. We have 2 routes:\r\n\r\n```\r\n<router-link to=\"/special/tést1\">/special/tést1</router-link>\r\n<router-link :to=\"{ name: 'special', params: {word: 'tést2'} }\">/special/tést2</router-link>\r\n```\r\n\r\nIn the first case, the route is transmitted as it is. In the second - it is decoded through the library: `path-to-regexp` (in new versions this can be changed by parameter)\r\n\r\nBefore:\r\n![1](https://user-images.githubusercontent.com/14747569/74594204-1e031600-503c-11ea-9810-593e744afbb4.png)\r\n\r\nAfter:\r\n![2](https://user-images.githubusercontent.com/14747569/74594203-1ba0bc00-503c-11ea-8b8e-632e466b577a.png)\r\n\r\nBut, if it works in **History Mode**. Then for **Hash Mode** you need to edit separately, because there the same problem exists.\r\n\r\n[Somewhere here](https://github.com/vuejs/vue-router/blob/dev/src/history/hash.js#L128)","Url":"https://github.com/vuejs/vue-router/pull/3125","RelatedDescription":"Open PR \"WIP: Fix/find init location\" (#3125)"},{"Id":"564682459","IsPullRequest":false,"CreatedAt":"2020-02-13T15:58:59","Actor":"jods4","Number":"3124","RawContent":null,"Title":"Design for Vue 3","State":"closed","Body":"### What problem does this feature solve?\r\nThe roadmap for Vue 3 says it will release Q1 2020 and the core lib is already very usable.\r\nI think now is the right time to port vue-router, which is a must-have for many apps. \r\nThe exercise may provide interesting feedback on Vue3 public APIs.\r\n\r\nI could help porting the code but I'm unsure of some design decisions.\r\n\r\n### What does the proposed API look like?\r\n#### 1. Setup\r\n`install` could be an instance function on `VueRouter` so that one could register it like that:\r\n```js\r\nlet router = new VueRouter(/* routes, options */);  // <- actual, usable router\r\ncreateApp(MyApp)\r\n  .use(router)\r\n  .mount('#app');\r\n```\r\n\r\nWhat `install` does is:\r\n- Register global components `router-link` and `router-view`;\r\n- Provide value `Router` at the root of application.\r\n- :question: Do we want to provide a `Route` ref as well? It's available through the router object.\r\n\r\nI'll talk more about injecting value next.\r\nIf someone wants more control (e.g. use different name for components or not register them globally), those tasks can easily be made manually instead of using `.use(router)`.\r\n\r\n#### 2. Accessing the router\r\nThere is no global mixins `$router`, `$route` anymore.\r\n\r\nIf a component (userland, or internally in `router-view` and `router-link`) needs to access the router, e.g. to navigate, it injects the router in setup: `let router = inject('Router')`.\r\n\r\nThe route can be found on the router, or could be provided as `Route` (ref).\r\nNesting routers can be done be re-providing those keys.\r\n\r\n#### 3. Guards\r\nThis is what I'm having most trouble with. \r\nCurrently `vue-router` does some ugly hacks to get hold of component instances that are navigated to/from, in order to call `beforeRouteEnter`, `beforeRouteUpdate` and `beforeRouteLeave`.\r\n\r\nI'm hoping the new API could look something like:\r\n```js\r\nimport { beforeRouteLeave } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    beforeRouteLeave(() => ...);\r\n  }\r\n}\r\n```\r\nbut I'm not clear about how fine details would work. Such as: \r\n- where/how is the component defined in routing actually created? \r\n- is `setup` always called, even when using `keep-alive`?\r\n\r\nWith some feedback on the design and a few pointers for the last point, I can have a try at porting this component.\r\n\r\nBTW: 300Mo of dependencies to build a 20Ko lib is crazy :(\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3124","RelatedDescription":"Closed issue \"Design for Vue 3\" (#3124)"},{"Id":"564383940","IsPullRequest":false,"CreatedAt":"2020-02-13T08:47:10","Actor":"diachedelic","Number":"3122","RawContent":null,"Title":"Aborting navigation throws `undefined`","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/0ukqxgho/1/](https://jsfiddle.net/0ukqxgho/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the `/foo` button, check the browser console for errors\r\n\r\n### What is expected?\r\nAn `Error` be thrown.\r\n\r\n### What is actually happening?\r\n`undefined` is thrown.\r\n\r\n---\r\nThe [docs](https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort) specify that if a navigation is aborted, then the promise returned by `$router.push` is rejected. This was causing me grief because I was trying to track down where an `Uncaught (in promise) undefined` error was being thrown - would have been helpful to have been able to narrow down the error faster.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3122","RelatedDescription":"Closed issue \"Aborting navigation throws `undefined`\" (#3122)"},{"Id":"564318061","IsPullRequest":false,"CreatedAt":"2020-02-13T08:46:34","Actor":"719media","Number":"3121","RawContent":null,"Title":"Having store accessible from router on initialization depends on order of use statements","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-jf31j](https://codesandbox.io/s/vue-routing-example-jf31j)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe codesandbox works fine as is. However, if you change the order of the imports to\r\n\r\n```\r\nimport router from \"./router\";\r\nimport store from \"./store\";\r\n```\r\n as described in the code, the router.beforeEach will be unable to access the $store.\r\n\r\n### What is expected?\r\nthe store would work in the router, regardless of the order of Vue.use statements\r\n\r\n### What is actually happening?\r\nThe store is only initially accessible in router.beforeEach if Vue.use(Vuex) is called before Vue.use(Router);.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3121","RelatedDescription":"Closed issue \"Having store accessible from router on initialization depends on order of use statements\" (#3121)"},{"Id":"564410268","IsPullRequest":false,"CreatedAt":"2020-02-13T03:09:13","Actor":"drmmyx","Number":"3123","RawContent":null,"Title":"Vue router version 3.1.5 hash mode redirect to 1 page before","State":"closed","Body":"solution : rollback to version 3.1.3 solve the issue ...","Url":"https://github.com/vuejs/vue-router/issues/3123","RelatedDescription":"Closed issue \"Vue router version 3.1.5 hash mode redirect to 1 page before\" (#3123)"},{"Id":"564087604","IsPullRequest":false,"CreatedAt":"2020-02-12T15:45:01","Actor":"AlexandreBonaventure","Number":"3120","RawContent":null,"Title":"Yarn v2 compat: add vue to peerDependencies","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Steps to reproduce\r\nWhen using Typescript, vue-router export types like here: https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L1 But as you can see here, it imports Vue typings to make it work. As a matter of fact `vue` should be added to peerDependencies\r\n\r\n### What is expected?\r\n`vue` should be a peerDependency \r\n\r\n### What is actually happening?\r\nit is not, and it fails in a strict dependency-tree context\r\n\r\nRef: https://github.com/vuejs/vue-cli/issues/5135\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3120","RelatedDescription":"Open issue \"Yarn v2 compat: add vue to peerDependencies\" (#3120)"},{"Id":"562462075","IsPullRequest":false,"CreatedAt":"2020-02-10T20:34:38","Actor":"Knogobert","Number":"3119","RawContent":null,"Title":"Transpile/expose utils for importing into project","State":"closed","Body":"### What problem does this feature solve?\r\nThis let's devs rely on one source of truth for using the same utilities as vue-router when building similar functionality into our own projects.\r\n\r\nMainly, this came up when looking for a way to import the `stringifyQuery` function from `vue-router/src/util/query.js`. Then realizing that it would need to be transpiled from TS etc. for it to be able to be imported.\r\nThis was so that I could build a URL with parameters to be sent to an API.\r\n\r\nI have not researched further than this, but maybe there are more functions that could benefit devs by exposing them more easily?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nimport { stringifyQuery } from 'vue-router';\r\n...\r\nconst encodedQueries = stringifyQuery(query);\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3119","RelatedDescription":"Closed issue \"Transpile/expose utils for importing into project\" (#3119)"},{"Id":"561313040","IsPullRequest":true,"CreatedAt":"2020-02-07T15:31:53","Actor":"rijkvanzanten","Number":"3117","RawContent":null,"Title":"fix(TS): update type of Route.name","State":"closed","Body":"On very first load, `name` is `null`, not `string` or `undefined`. This means that either the passed route is wrong, or the type is incorrect.\r\n","Url":"https://github.com/vuejs/vue-router/pull/3117","RelatedDescription":"Closed or merged PR \"fix(TS): update type of Route.name\" (#3117)"},{"Id":"561660216","IsPullRequest":false,"CreatedAt":"2020-02-07T15:31:03","Actor":"geekox86","Number":"3118","RawContent":null,"Title":"Passing Params as Props does not Work Well with Composition API","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://github.com/geekox86/OeMis](https://github.com/geekox86/OeMis)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1- `yarn serve`.\r\n\r\n2- A type error is thrown in the terminal.\r\n\r\n3- The types of `beforeRouteEnter` parameters (in `src/Base/Organization/Structure.vue` line 88) are not recognized by TypeScript.\r\n\r\n### What is expected?\r\nThe program should execute correctly without having to define routing component `props` using the old syntax of Vue options API.\r\n\r\n### What is actually happening?\r\nThe program does not work unless the old syntax of Vue options API is used to define routing component `props`.\r\n\r\n---\r\nSee line 92 in `src/Base/Organization/Structure.vue`, if this line is uncommented everything works perfectly, but I do not want to use this old syntax. I just want to relay on Typescript type definitions in the `setup` function for `props`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3118","RelatedDescription":"Closed issue \"Passing Params as Props does not Work Well with Composition API\" (#3118)"},{"Id":"561156523","IsPullRequest":false,"CreatedAt":"2020-02-06T17:21:04","Actor":"service-paradis","Number":"3116","RawContent":null,"Title":"Accepting named target for router-link","State":"open","Body":"### What problem does this feature solve?\r\nRight now, if we want to open a link in a new tab (or page), we can use target=\"_blank\".\r\n\r\nIn some cases, I prefer using named target when opening a new tab. This way, if we click multiple times on the same link, it will only refresh the named tab already opened.\r\n\r\nAccepting something like target=\"my_report\" would be great. Right now, the target attribute is added to the a tag, but the link is not opened on another tab.\r\n\r\n### What does the proposed API look like?\r\nAccepting named target and opening them in new tabs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3116","RelatedDescription":"Open issue \"Accepting named target for router-link\" (#3116)"},{"Id":"561155778","IsPullRequest":false,"CreatedAt":"2020-02-06T17:19:38","Actor":"service-paradis","Number":"3115","RawContent":null,"Title":"Using named target using router-link","State":"closed","Body":"Right now, if we want to open a link in a new tab (or page), we can use `target=\"_blank\"`.\r\n\r\nIn some cases, I prefer using named target when opening a new tab. This way, if we click multiple times on the same link, it will only refresh the named tab already opened.\r\n\r\nAccepting something like `target=\"my_report\"` would be great. Right now, the target attribute is added to the `a` tag, but the link is not opened on another tab.\r\n","Url":"https://github.com/vuejs/vue-router/issues/3115","RelatedDescription":"Closed issue \"Using named target using router-link\" (#3115)"},{"Id":"559259641","IsPullRequest":true,"CreatedAt":"2020-02-04T09:16:33","Actor":"kelunik","Number":"3114","RawContent":null,"Title":"feat(core): add 'on-complete' and 'on-abort' props to router-link","State":"closed","Body":"This allows implementing a wrapper component handling aborted navigations, e.g. due to navigating to the exact same path (see #974), and other custom behavior such as a loading state showing on a button-like link.\r\n\r\n**Sample Implementation**\r\n\r\nNote: This doesn't trigger the scroll behavior hook, so that needs some separate PR / implementation automatically work, but that's fine, as we're not doing any navigation with this implementation.\r\n\r\n```vue\r\n<template>\r\n  <div id=\"app\">\r\n    <router-link to=\"/\" :on-abort=\"handleAbort\">Home</router-link>\r\n    <router-link to=\"/about\" :on-abort=\"handleAbort\">About</router-link>\r\n    <router-view :key=\"$route.fullPath + ' @ ' + sameRouteCounter\"/>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport HelloWorld from './components/HelloWorld.vue'\r\n\r\n@Component({\r\n  components: {\r\n    HelloWorld\r\n  }\r\n})\r\nexport default class App extends Vue {\r\n  sameRouteCounter: number = 0\r\n\r\n  mounted () {\r\n    this.$router.afterEach((to, from) => {\r\n      if (to.fullPath !== from.fullPath) {\r\n        this.sameRouteCounter = 0\r\n      }\r\n    })\r\n  }\r\n\r\n  handleAbort (err: any) {\r\n    if (err.name === 'NavigationDuplicated') {\r\n      this.sameRouteCounter++\r\n      this.$nextTick().then(() => {\r\n        window.scroll(0, 0)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nImplements #3027.","Url":"https://github.com/vuejs/vue-router/pull/3114","RelatedDescription":"Closed or merged PR \"feat(core): add 'on-complete' and 'on-abort' props to router-link\" (#3114)"},{"Id":"558276976","IsPullRequest":false,"CreatedAt":"2020-01-31T18:09:15","Actor":"protium-dev","Number":"3113","RawContent":null,"Title":"Throw proper error when aborting navigation","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-router-undefined-error-7ltnr](https://codesandbox.io/s/vue-router-undefined-error-7ltnr)\r\n\r\n### Steps to reproduce\r\n* Create route \"/\" and \"/B\"\r\n* Redirect to \"/\" inside \"beforeEnter\" in /\"B\" using `next('/')`\r\n* Push \"/B\" from \"/\"\r\n\r\n### What is expected?\r\nTo have a proper error object thrown\r\n\r\n### What is actually happening?\r\nUndefined object thrown `Uncaught (in promise) undefined`\r\n\r\n---\r\nThis only happens when using `this.$router.push`. The behaviour is not present using `router-link`.\r\nEven though, I'd be great to always have proper errors. I suspect this is the line of code involved https://github.com/vuejs/vue-router/blob/dev/src/history/base.js#L163\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3113","RelatedDescription":"Closed issue \"Throw proper error when aborting navigation\" (#3113)"},{"Id":"557964317","IsPullRequest":true,"CreatedAt":"2020-01-31T07:34:36","Actor":"anselal","Number":"3112","RawContent":null,"Title":":pencil: docs(router): Update history mode apache config, fix SPA","State":"open","Body":"Make Single Page Applications load the correct endpoint on refresh and not just fallback to index.html\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3112","RelatedDescription":"Open PR \":pencil: docs(router): Update history mode apache config, fix SPA\" (#3112)"},{"Id":"551959995","IsPullRequest":false,"CreatedAt":"2020-01-29T17:17:57","Actor":"adi-zz","Number":"3106","RawContent":null,"Title":"push to named star route with empty pathMatch fails","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-7k3sv](https://codesandbox.io/s/vue-template-7k3sv)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codesandbox.io/s/vue-template-7k3sv\r\n1. Click [button 1]. Note you get to `https://7k3sv.csb.app/anything/123` - which is ok.\r\n1. Click [button 2].\r\n\r\n### What is expected?\r\nYou should get to `https://7k3sv.csb.app/anything/`.\r\n\r\n### What is actually happening?\r\nYou get to `https://7k3sv.csb.app/`.\r\n\r\n---\r\nI checked a couple of vue-router issues in the past, and I noticed posva has his own particular way of assessing bugs, so I know he will say this is not a bug. But is there anyone in vue-router team willing to acknowledge this is a bug? (cc @yyx990803, @kazupon)\r\n\r\nI used the latest vue-router available on npm (3.1.5). My current issue report says I used 3.1.3 because new-issue.vuejs.org does not let me choose 3.1.5. Guys, if you force me using new-issue.vuejs.org when reporting an issue, it would be nice to keep it up-to-date.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3106","RelatedDescription":"Closed issue \"push to named star route with empty pathMatch fails\" (#3106)"},{"Id":"556813703","IsPullRequest":true,"CreatedAt":"2020-01-29T17:17:51","Actor":"adi-zz","Number":"3111","RawContent":null,"Title":"fix: correctly calculate `path` when `pathMatch` is empty string (fix #3106)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->","Url":"https://github.com/vuejs/vue-router/pull/3111","RelatedDescription":"Closed or merged PR \"fix: correctly calculate `path` when `pathMatch` is empty string (fix #3106)\" (#3111)"},{"Id":"554715940","IsPullRequest":false,"CreatedAt":"2020-01-24T12:44:11","Actor":"ejez","Number":"3110","RawContent":null,"Title":"Routes with non-ascii characters are not matched in SSR","State":"open","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://github.com/ejez/vue-router-ssr-issue](https://github.com/ejez/vue-router-ssr-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a basic vue project with ssr and router:\r\n```sh\r\ngit clone https://github.com/ejez/vue-router-ssr-issue\r\ncd vue-router-ssr-issue && yarn\r\n```\r\n2. start project:\r\n```sh\r\nyarn start\r\n```\r\n3. open following link in browser:\r\nhttp://localhost:8080/à-propos\r\n\r\n\r\n### What is expected?\r\nRoute should match and browser should show page contents\r\n\r\n### What is actually happening?\r\n404 error in terminal\r\n\r\n---\r\nWhen on client, the previous route is matched and works normally, this can be checked by initially visiting http://localhost:8080 , and then clicking on the link \"Go To à-propos\".\r\n\r\nAnother route without \"non-ascii characters\" is provided to show that it works normally both in ssr and client:\r\nhttp://localhost:8080/about\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3110","RelatedDescription":"Open issue \"Routes with non-ascii characters are not matched in SSR\" (#3110)"},{"Id":"554520249","IsPullRequest":false,"CreatedAt":"2020-01-24T03:00:39","Actor":"Davilink","Number":"3109","RawContent":null,"Title":"Add Router.options in type definition","State":"closed","Body":"I don't know if it 'as design' or only a oversight, but the property 'options' is missing the Router type definition\r\nhttps://github.com/vuejs/vue-router/blob/256cf3edfc126411febe4573d427949d273a38b8/types/router.d.ts#L16-L59\r\n \r\nhere the property in the js\r\nhttps://github.com/vuejs/vue-router/blob/256cf3edfc126411febe4573d427949d273a38b8/src/index.js#L38","Url":"https://github.com/vuejs/vue-router/issues/3109","RelatedDescription":"Closed issue \"Add Router.options in type definition\" (#3109)"},{"Id":"551242706","IsPullRequest":false,"CreatedAt":"2020-01-23T13:46:01","Actor":"zoaked","Number":"3105","RawContent":null,"Title":"Router-link has excessive memory usage","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n    <title>Back and forward navigation cancel</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"https://unpkg.com/vue\"></script>\r\n    <script src=\"https://unpkg.com/vue-router\"></script>\r\n\r\n    <div id=\"app\">\r\n      <h1>Memory consumption test</h1>\r\n      <router-view />\r\n    </div>\r\n\r\n    <script>\r\n      const Home = {\r\n        template: `\r\n      <div>\r\n        <input type=\"button\" @click=\"showList()\" value=\"Begin\" />\r\n        <div class=\"links\" v-if=\"linksToShow\">\r\n          <div><input type=\"button\" @click=\"hideList()\" value=\"X\" /></div>\r\n          <ul>\r\n            <li v-for=\"link in linksToShow\" :key=\"link.id\">\r\n              <span class=\"colorDot\" :class=\"link.status\"></span>\r\n              <router-link :to=\"\\'/details/\\' + link.id\"\r\n                >{{ link.id }}</router-link\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n        `,\r\n        data() {\r\n          const statuses = ['outdated', 'unused', 'alarm', 'alert', 'normal']\r\n          this.links = []\r\n          for (let i = 0; i < 3000; i++) {\r\n            const status = statuses[Math.floor(Math.random() * statuses.length)]\r\n            this.links.push(\r\n              Object.freeze({\r\n                id: i.toString().padStart(10, '0'),\r\n                status: status\r\n              })\r\n            )\r\n          }\r\n          return {\r\n            linksToShow: null\r\n          }\r\n        },\r\n        methods: {\r\n          hideList() {\r\n            this.linksToShow = null\r\n          },\r\n          showList() {\r\n            this.linksToShow = this.links\r\n          }\r\n        }\r\n      }\r\n\r\n      const Details = {\r\n        data() {\r\n          return {\r\n            selectedLinkId: null\r\n          }\r\n        },\r\n        mounted() {\r\n          this.selectedLinkId = this.$route.params.linkId\r\n        },\r\n        template:\r\n          '<div><router-link to=\"/\">Back to Home</router-link><h1 v-if=\"selectedLinkId\">{{ selectedLinkId }}</h1></div>'\r\n      }\r\n\r\n      Vue.use(VueRouter)\r\n\r\n      const router = new VueRouter({\r\n        // mode: 'history',\r\n        routes: [\r\n          { path: '/', component: Home },\r\n          { path: '/details', component: Details }\r\n        ]\r\n      })\r\n\r\n      // router.push('/')\r\n\r\n      new Vue({\r\n        router,\r\n        el: '#app'\r\n      })\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n\r\n* Take note of memory usage for your browser\r\n* Click the \"Begin\" button in the top left corner of the reproduction\r\n* Review memory usage of the browser \r\n* Click the \"X\" button right below the \"Begin\" button\r\n* Review memory usage of the browser \r\n\r\n### What is expected?\r\nA reasonable amount of memory is used for a component and that memory is released when the component is no longer utilized\r\n\r\n### What is actually happening?\r\nrouter-link is using an excessive amount of memory and is not able to release it\r\n\r\n---\r\nI\r\nOptional reproduction steps:\r\n* Close the browser window and open the reproduction in a fresh instance \r\n* Edit the Home.template so that instead of there being a <router-link> tag, it uses another element (I tried it with an a tag as well as a span tag)\r\n* Also edit the </router-link> tag to be a closing tag for whatever element you chose in the previous step\r\n* Take note of memory usage of the browser\r\n* Click the \"Begin\" button in the top left corner of the reproduction\r\n* Wait a few seconds for the text to appear\r\n* Review memory usage of the browser\r\n* Compare the significant difference from router-link results\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3105","RelatedDescription":"Closed issue \"Router-link has excessive memory usage\" (#3105)"},{"Id":"553081845","IsPullRequest":false,"CreatedAt":"2020-01-22T08:33:06","Actor":"pavinthan","Number":"3108","RawContent":null,"Title":"Set $route meta data dynamically.","State":"closed","Body":"### What problem does this feature solve?\r\nFor SEO / Layout purpose good to have ```$route.setMeta``` method to update current route's meta information because if we view an artical, I'll fetch artical title using route param first, then We can set the page title.\r\n\r\nplease advice me.\r\n\r\n### What does the proposed API look like?\r\nTo update current route meta data\r\n```\r\nthis.$route.setMeta({\r\n    title: \"Example title from service.\"\r\n})\r\n```\r\n\r\nThen we can have separete hook for route modifed like\r\n```\r\nrouter.onUpdate((route) => {\r\n    // do something here\r\n    document.title = route.meta.title;\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3108","RelatedDescription":"Closed issue \"Set $route meta data dynamically.\" (#3108)"},{"Id":"553077559","IsPullRequest":false,"CreatedAt":"2020-01-21T19:22:17","Actor":"pavinthan","Number":"3107","RawContent":null,"Title":"Set $route meta data dynamically.","State":"closed","Body":"This is not a bug report, just a featue request.\r\n\r\nFor SEO / Layout purpose good to have `$route.setMeta` method to update current route's meta information because if we view an artical, I'll fetch artical title using route param first, then We can set the page title.\r\n\r\nplease advice me.","Url":"https://github.com/vuejs/vue-router/issues/3107","RelatedDescription":"Closed issue \"Set $route meta data dynamically.\" (#3107)"},{"Id":"551235486","IsPullRequest":false,"CreatedAt":"2020-01-17T06:49:18","Actor":"VincentMRA","Number":"3104","RawContent":null,"Title":"Rerouted when query contains 'blog' ","State":"closed","Body":"Dear,\r\n\r\nI've noticed some strange behaviour of the router recently.\r\nWhenever my query contains the word 'blog' it gets rerouted to homepage.\r\n\r\nFor example a route where test.com/params?next=-LkSAnyVzUPorYnblog \r\nGets rerouted to / \r\nwhile test.com/params?next=-LkSAnyVzUPorYn9Q1Qx \r\ngoes to the requested route.\r\n\r\nI've double checked my code to see whether it provides from my error but can't seem to find anything that reroutes with such a query.\r\n\r\nThanks a lot.\r\n\r\nKind regards ","Url":"https://github.com/vuejs/vue-router/issues/3104","RelatedDescription":"Closed issue \"Rerouted when query contains 'blog' \" (#3104)"},{"Id":"550681095","IsPullRequest":false,"CreatedAt":"2020-01-16T09:29:42","Actor":"vkaelin","Number":"3103","RawContent":null,"Title":"Router link active class not applied with non ascii params","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/romantic-browser-xvj0m](https://codesandbox.io/s/romantic-browser-xvj0m)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Refresh page at https://xvj0m.csb.app/user/test : the active class works fine.\r\n* Refresh page at https://xvj0m.csb.app/user/tést : the active class is not applied.\r\n\r\n### What is expected?\r\nActive class on the router link\r\n\r\n### What is actually happening?\r\nNo active class is applied\r\n\r\n---\r\nThe active class is not even applied when the params is encoded (e.g: https://xvj0m.csb.app/user/t%C3%A9st).\r\n\r\nFinally, the active class is applied when you click on router links, even with non ASCII char. The only problem is at the first load of the page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3103","RelatedDescription":"Open issue \"Router link active class not applied with non ascii params\" (#3103)"},{"Id":"550587874","IsPullRequest":false,"CreatedAt":"2020-01-16T05:44:41","Actor":"priyankagupta34","Number":"3102","RawContent":null,"Title":"Navigation locations are stacking over one another","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nHere i am redirecting, / and * to login page.\r\n`export default new Router({\r\n    routes: [\r\n\r\n        {\r\n            path: '/login',\r\n            name: 'login',\r\n            component: Login\r\n        },\r\n        {\r\n            path: '/signup',\r\n            name: 'signup',\r\n            component: Signup\r\n        },\r\n        {\r\n            path: '*',\r\n            redirect: '/login'\r\n        },\r\n        {\r\n            path: '/',\r\n            redirect: '/login'\r\n        },\r\n    ]\r\n})`\r\n\r\nTo test this i wrote in url bar `http://localhost:8080/fhhfjfkjfkkf` just to make sure it redirects to login page. However i noticed that this got redirected to `http://localhost:8080/fhhfjfkjfkkf#/login`\r\nExpection: `http://localhost:8080/login`\r\n\r\nBecause of this problem while swapping between login and signup page via button click, i am facing `Navigating to current location (\"/login\") is not allowed` Error.\r\nThis is happening because i am trying to again got to `/login` from page `http://localhost:8080/fhhfjfkjfkkf#/login` via `this.$router.push('/login').catch((err)=>{\r\n                console.log('err going to login ', err);})`\r\nI am guessing it would be better if this was checking the url first just like how u find in angularjs, angular or react routing systems, and without throwing any such error it silently redirects to the page if it suits because what will a front-end user do with that kind of message anyway.\r\n","Url":"https://github.com/vuejs/vue-router/issues/3102","RelatedDescription":"Closed issue \"Navigation locations are stacking over one another\" (#3102)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"569116559","IsPullRequest":false,"CreatedAt":"2020-02-21T18:34:46","Actor":"davidmeirlevy","Number":"1684","RawContent":null,"Title":"`createNamespacedHelpers` return mappers that need `this`","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/davidmeirlevy/9hbqjmg2/4/](https://jsfiddle.net/davidmeirlevy/9hbqjmg2/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nget a mapper:\r\n`const { mapActions } = createNamespacedHelpers(MODULE_NAME)`\r\n\r\nmap some action:\r\n`const {action} = mapActions(['action'])`\r\n\r\nrun this action directly, without adding it to a component methods:\r\n`action()`\r\n\r\n### What is expected?\r\nthe action should be dispacthed\r\n\r\n### What is actually happening?\r\nThis line breaks because we didn't ran this function from a vue component context:\r\n`var dispatch = this.$store.dispatch;`\r\n\r\n---\r\nwhen we want to use the mappers from the `setup()` function of the composition-api, the component's `this` shouldn't be relevant, so you should probably find another way to map actions without expecting being executed as a vue component's method.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1684","RelatedDescription":"Open issue \"`createNamespacedHelpers` return mappers that need `this`\" (#1684)"},{"Id":"562476929","IsPullRequest":false,"CreatedAt":"2020-02-21T12:47:59","Actor":"davidpelayo","Number":"1680","RawContent":null,"Title":"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n\r\n- Non-working version, due not binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw](https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw).\r\n- Working version, due binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7](https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7).\r\n\r\n### Steps to reproduce\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `updated` or `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` doesn't get triggered.\r\n\r\nHowever: If you use the getter directly into the component template, it gets correctly reevaluated and the `beforeUpdate` gets triggered.\r\n\r\n### What is expected?\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` gets triggered.\r\n\r\n### What is actually happening?\r\nThe `beforeUpdate` lifecycle method does not get triggered due the reactivity doesn't seem to work correctly, unless you bind the getter directly to the component `<template />`.\r\n\r\n---\r\n#### Context\r\nDue a project's needs, I needed to monitor when the getter value got updated to update a component `data` property, accordingly, and then update the view.\r\n\r\nHowever, a restriction was set in place that the getter couldn't be directly used at the view, because the complexity of the component, the data should have been used instead.\r\n\r\nIt might be that this is actually a feature instead of a bug, requiring binding a getter to the vue to enjoy 100% reactivity from state down to the actual DOM out of the box; but, mentally, the documentation tells you reactivity works so that components can inject getters and get updated values magically; **but not explicitly saying those needs to be declared at the view** (template) - that's why I consider this a bug.\r\n\r\n#### The workaround\r\nWorkaround 1: A simple workaround would consist on setting a dynamic class name or DOM attribute bound to the getter; so that provokes the `updated` to get invoked, and works nicely.\r\n\r\nWorkaround 2: Watch the computed value incoming from the getter, and update your local component state based on the new value.\r\n\r\nHowever, it took me around an hour to debug the whole thing and figure out this topic. **It might be worth to update the documentation if this is actually intended.**\r\n\r\n#### What led me to confusion\r\nThe `beforeUpdate` and `updated` hooks are meant to be triggered only when the virtual DOM needs updates and patching, but not necessarily as a result of the single store being updated. That probably led me to a misleading conception.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1680","RelatedDescription":"Closed issue \"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)\" (#1680)"},{"Id":"567707440","IsPullRequest":false,"CreatedAt":"2020-02-19T17:11:26","Actor":"blacksonic","Number":"1683","RawContent":null,"Title":"Vuex breaks with Vue 3.x upgrade","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/blacksonic/todoapp-vue/tree/vue3](https://github.com/blacksonic/todoapp-vue/tree/vue3)\r\n\r\n### Steps to reproduce\r\nvue add vue-next\r\ntry to use the Vuex plugin on the instance returned from createApp\r\n\r\n### What is expected?\r\nVuex plugin added to the app instance\r\n\r\n### What is actually happening?\r\nThe app breaks with console error:\r\n\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n\r\n---\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\nvar version = Number(Vue.version.split('.')[0]);\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1683","RelatedDescription":"Open issue \"Vuex breaks with Vue 3.x upgrade\" (#1683)"},{"Id":"567702944","IsPullRequest":false,"CreatedAt":"2020-02-19T17:04:20","Actor":"blacksonic","Number":"1682","RawContent":null,"Title":"Vuex breaks with Vue 3.x","State":"closed","Body":"I've tried to run a Vue 3 application with Vuex, but when using it as a plugin I get the following error:\r\n\r\n```\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n```\r\n\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\n```javascript\r\nvar version = Number(Vue.version.split('.')[0]);\r\n```\r\n\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.","Url":"https://github.com/vuejs/vuex/issues/1682","RelatedDescription":"Closed issue \"Vuex breaks with Vue 3.x\" (#1682)"},{"Id":"562244423","IsPullRequest":true,"CreatedAt":"2020-02-14T00:15:32","Actor":"cjihrig","Number":"1678","RawContent":null,"Title":"refactor: remove extra loops in dispatch()","State":"closed","Body":"This commit replaces two chained `filter()`-`forEach()` sequences in `dispatch()` with single `forEach()`s.","Url":"https://github.com/vuejs/vuex/pull/1678","RelatedDescription":"Closed or merged PR \"refactor: remove extra loops in dispatch()\" (#1678)"},{"Id":"564092739","IsPullRequest":false,"CreatedAt":"2020-02-12T15:52:47","Actor":"AlexandreBonaventure","Number":"1681","RawContent":null,"Title":"Yarn v2 compat: add vue to peerDependencies","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Steps to reproduce\r\nWhen using Typescript, vuex export types like here: https://github.com/vuejs/vuex/blob/dev/types/index.d.ts#L1 But as you can see here, it imports Vue typings to make it work. As a matter of fact `vue` should be added to peerDependencies\r\n\r\n### What is expected?\r\n`vue` should be a peerDependency \r\n\r\n### What is actually happening?\r\nit is not, and it fails in a strict dependency-tree context\r\n\r\nRef: https://github.com/vuejs/vue-cli/issues/5135\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1681","RelatedDescription":"Open issue \"Yarn v2 compat: add vue to peerDependencies\" (#1681)"},{"Id":"562379417","IsPullRequest":true,"CreatedAt":"2020-02-10T07:44:36","Actor":"PeterChen1997","Number":"1679","RawContent":null,"Title":"fix docs description","State":"open","Body":"I think this 'action' maybe is not the action in Vuex? Maybe using 'mutation' in docs is more specific\r\nI check the englinsh docs, and it's the same word 'action'...\r\nMaybe I misunderstand the mean","Url":"https://github.com/vuejs/vuex/pull/1679","RelatedDescription":"Open PR \"fix docs description\" (#1679)"},{"Id":"561614729","IsPullRequest":false,"CreatedAt":"2020-02-07T12:41:22","Actor":"XemaA","Number":"1677","RawContent":null,"Title":"Dispatching large data cause app craches","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/XemaA/pen/jOPEOqm?editors=0010](https://codepen.io/XemaA/pen/jOPEOqm?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am trying to mutate  a file content's in the state so I can use them in different modules of the app.\r\n```javascript\r\n// In the action : I read file content\r\nreadFile(context, payload) {\r\n    const readStream = fs.createReadStream(payload.filePath);\r\n    Papa.parse(readStream, { header: true }, complete(results) { // here I use papaparse (Papa) to parse file content\r\n        context.commit('testA', results.data); // in case of large file, when I comment this line the app doesn't stop\r\n    });\r\n}\r\n// mutation\r\ntestA(state, payload) {\r\n    state.structData = payload;\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\nfile content mutated to state\r\n\r\n### What is actually happening?\r\non case of 23MB size file the app craches without returning any errors or warning\r\n\r\n---\r\nWhen working with small files the process works as expected, the issue appears only with large files ( I am testing 23MB size file)\r\nI am working on electron/vue app\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1677","RelatedDescription":"Open issue \"Dispatching large data cause app craches\" (#1677)"},{"Id":"560738552","IsPullRequest":true,"CreatedAt":"2020-02-06T02:21:56","Actor":"miguelrincon","Number":"1676","RawContent":null,"Title":"fix(#1571): remove undefined payload from dispatch","State":"open","Body":"Fix for #1571\r\n\r\nRemoves unused payloads from the dispatch calls.\r\n\r\n- Original PR at https://github.com/vuejs/vuex/pull/1573.\r\n- Solution was proposed at https://github.com/vuejs/vuex/issues/1571#issuecomment-505838341","Url":"https://github.com/vuejs/vuex/pull/1676","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from dispatch\" (#1676)"},{"Id":"558957076","IsPullRequest":false,"CreatedAt":"2020-02-05T08:55:46","Actor":"HuberTRoy","Number":"1673","RawContent":null,"Title":"Default mutations for set state.","State":"closed","Body":"### What problem does this feature solve?\r\nIf I just want to set a value for one state, I must code: \r\n\r\n```js\r\nconst state = {\r\n     test : 1\r\n}\r\n\r\nconst mutations = {\r\n      setTest(state, value) {\r\n            state.test = value\r\n      }\r\n}\r\n```\r\n\r\nI wrote or read most of the mutations are this kind of. So If `vuex` set default mutations for all states we will reduce most of the mutations set.\r\n\r\n### What does the proposed API look like?\r\n\r\n```js\r\nconst state = {\r\n    test: 1\r\n}\r\n\r\nconst actions = {\r\n      async setTestWhenRequest(context) {\r\n            let res = await axios.get('http://www.new-issue.vuejs.org')\r\n            if ( res.code === 200) {\r\n                  context.commit('$setTest', 2)\r\n            }\r\n      }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1673","RelatedDescription":"Closed issue \"Default mutations for set state.\" (#1673)"},{"Id":"559587635","IsPullRequest":true,"CreatedAt":"2020-02-05T08:52:36","Actor":"kiaking","Number":"1674","RawContent":null,"Title":"ci: fix failing e2e test","State":"closed","Body":"This PR Tries to fix randomly failing e2e test.","Url":"https://github.com/vuejs/vuex/pull/1674","RelatedDescription":"Closed or merged PR \"ci: fix failing e2e test\" (#1674)"},{"Id":"560016091","IsPullRequest":false,"CreatedAt":"2020-02-04T22:25:41","Actor":"ashahbazFV","Number":"1675","RawContent":null,"Title":"Dynamic module state not created with hot loading (preserveState set to true)","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/compassionate-hermann-msyze](https://codesandbox.io/s/compassionate-hermann-msyze)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a module with _vuex-module-decorators_\r\n2. Set the `dynamic` and `preserveState` flags to `true`\r\n    ```ts\r\n    @Module({ dynamic: true, name: 'SomeModule', store, preserveState: true })\r\n    ```\r\n3.  Attempt to access a property of the module, retrieved with `getModule` function to initialise the module from vuex-module-decorators\r\n     ```js\r\n    const someModule = getModule(SomeModule);\r\n    someModule.someProperty;\r\n    ```\r\n4.  Note `someProperty` will be `undefined`\r\n\r\n### What is expected?\r\nWhen installing a dynamic module and there is no state present, a default state should be created\r\n\r\n### What is actually happening?\r\nWhen installing a dynamic module and there is no state present, the module is not registered causing reads to the state for that module to fail.\r\n\r\n---\r\nNOTE: Was unable to reproduce the issue cleanly in CodeSandbox so the reproduction is not working, but the key aspects are still there.\r\n\r\nUpon investigation, it was discovered the [_vuex-module-decorators_](https://github.com/championswimmer/vuex-module-decorators) lib [passes their `preserveState` flag down](https://github.com/championswimmer/vuex-module-decorators/pull/102) to the vuex layer.  When the dynamic module is installed with the `installModule` function and the `hot` option is enabled, the current implementation skips creating any state for the new module.  This introduces side effects, where the module is registered in the vuex store but the state can't be retrieved if there was no state previously present.\r\n\r\nThe [_vuex-persist_](https://github.com/championswimmer/vuex-persist) lib is in use, but it is used to hydrate any past state down to _vuex_.  The store, while using the _vuex-persist_ lib, has the data initialised in the following order.\r\n\r\n1. The store is created by _vuex_ and any known modules are initialised with their default values.\r\n2. If there are data in the local storage within the browser, it is loaded into the store state replacing the default state data.\r\n3. Dynamic modules are added as they are needed.\r\n\r\nUpon modifying the `installModule` function, to check if the state of the new dynamic module exists, the problem is resolved.  Essentially, if the state of the module doesn't currently exist in the `parentState` within the store, then the default module state is created and registered.\r\n\r\nOne set of changes that fix this case are as follows.\r\n\r\nIn [`src/store.js`](https://github.com/vuejs/vuex/blob/dev/src/store.js) the following code seems to be the offending code.\r\n\r\n```js\r\n// set state\r\nif (!isRoot && !hot) {\r\n  const parentState = getNestedState(rootState, path.slice(0, -1))\r\n  const moduleName = path[path.length - 1]\r\n  store._withCommit(() => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (moduleName in parentState) {\r\n        console.warn(\r\n          `[vuex] state field \"${moduleName}\" was overridden by a module with the same name at \"${path.join('.')}\"`\r\n        )\r\n      }\r\n    }\r\n    Vue.set(parentState, moduleName, module.state)\r\n  })\r\n}\r\n```\r\n\r\nWhen modified, the default state is created when the `moduleName` isn't found in the `parentState`.\r\n\r\n```js\r\n// set state\r\nvar parentState = getNestedState(rootState, path.slice(0, -1));\r\nvar moduleName = path[path.length - 1];\r\nvar moduleStateExists = moduleName in parentState\r\nif (!isRoot && (!hot || !moduleStateExists )) {\r\n store._withCommit(function () {\r\n   {\r\n     if (moduleStateExists) {\r\n       console.warn(\r\n         (\"[vuex] state field \\\"\"   moduleName   \"\\\" was overridden by a module with the same name at \\\"\"   (path.join('.'))   \"\\\"\")\r\n       );\r\n     }\r\n   }\r\n   Vue.set(parentState, moduleName, module.state);\r\n });\r\n}\r\n```\r\n\r\nThere may be other ways to fix this issue, this is one potential solution that was discovered after some investigation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1675","RelatedDescription":"Open issue \"Dynamic module state not created with hot loading (preserveState set to true)\" (#1675)"},{"Id":"548374675","IsPullRequest":true,"CreatedAt":"2020-02-02T06:41:42","Actor":"huybuidac","Number":"1665","RawContent":null,"Title":"Apply mixins to module","State":"closed","Body":"Support inject common mutations/getters/actions to each Module","Url":"https://github.com/vuejs/vuex/pull/1665","RelatedDescription":"Closed or merged PR \"Apply mixins to module\" (#1665)"},{"Id":"556895643","IsPullRequest":false,"CreatedAt":"2020-01-29T14:23:53","Actor":"Candane","Number":"1672","RawContent":null,"Title":"为什么不推荐使用常量替代 action事件类型?","State":"closed","Body":"为什么不是使用常量代替 Action 类型，通常 Mutation 的类型只在一个 store 使用，如果修改 y 一个类型也在一个 store 里面修改，但是 action 的话可能在很多组件中会使用到，修改的面积会比 Mutation 大得多，为什么官方只推荐使用常量替代 Mutation 事件类型？","Url":"https://github.com/vuejs/vuex/issues/1672","RelatedDescription":"Closed issue \"为什么不推荐使用常量替代 action事件类型?\" (#1672)"},{"Id":"555645733","IsPullRequest":true,"CreatedAt":"2020-01-27T16:09:47","Actor":"kiaking","Number":"1670","RawContent":null,"Title":"#1591 refactor: do not mutate mutation payload in the todo app example","State":"closed","Body":"Issue #1591\r\n\r\nThis PR refactors the mutation logic in todo example to not mutate mutation payload directly in the simplest form.\r\n\r\nIt's still using the reference to todo (at `indexOf`) but I think it's more clearer than before that Vuex recommends to not mutate payload directly.","Url":"https://github.com/vuejs/vuex/pull/1670","RelatedDescription":"Closed or merged PR \"#1591 refactor: do not mutate mutation payload in the todo app example\" (#1670)"},{"Id":"555668976","IsPullRequest":false,"CreatedAt":"2020-01-27T15:57:21","Actor":"steveworkman","Number":"1671","RawContent":null,"Title":" Cannot set reactive property on undefined, null, or primitive value: undefined when using Vuex and Storybook 5.3","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/dylanbanks96/storybook-demo](https://github.com/dylanbanks96/storybook-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a basic component using Vuex, and add storybook documentation. The component attempts to commit data to vuex state via an action and mutator\r\n\r\nEssentially, I'm trying to commit input field data to my store\r\n\r\n### What is expected?\r\nI'm able to access and modify state\r\n\r\n### What is actually happening?\r\nCannot set reactive property on undefined, null, or primitive value: undefined\" and a TypeError: \"index.js:47 TypeError: Cannot use 'in' operator to search for 'foo' in undefined\".\r\n\r\n---\r\nThis may be a storybook issue, but it may be a Vuex issue as well. I've also raised this on S/O https://stackoverflow.com/questions/59919325/vuex-storybook-cannot-set-reactive-property-on-undefined-null-or-primitive\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1671","RelatedDescription":"Open issue \" Cannot set reactive property on undefined, null, or primitive value: undefined when using Vuex and Storybook 5.3\" (#1671)"},{"Id":"555507435","IsPullRequest":false,"CreatedAt":"2020-01-27T14:16:39","Actor":"tbetous","Number":"1669","RawContent":null,"Title":"Slow performance using getter references other getter","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/tbetous/y4m0keav/53/](https://jsfiddle.net/tbetous/y4m0keav/53/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1 - Write a getter `myGetter` that use another getter `otherGetter` by using `getters` argument\r\n\r\n```js\r\nmyGetter: (state, getters) => {\r\n      console.time('myGetter')\r\n      const t0 = performance.now();\r\n      for(let i = 0; i < 100; i  ) {\r\n        const foo = getters.otherGetter\r\n      }\r\n      console.timeEnd('myGetter')\r\n      const t1 = performance.now();\r\n      return t1 - t0\r\n    },\r\n```\r\n\r\n2 - Write a getter `myGetterOptimized` that use another getter `otherGetter` by destructuring `getters`\r\n\r\n```js\r\nmyGetterOptimized: (state, {otherGetter}) => {\r\n      console.time('myGetterOptimized')\r\n      const t0 = performance.now();\r\n      for(let i = 0; i < 100; i  ) {\r\n        const foo = otherGetter\r\n      }\r\n      console.timeEnd('myGetterOptimized')\r\n      const t1 = performance.now();\r\n      return t1 - t0\r\n    },\r\n```\r\n\r\n3 - Compare time execution\r\n\r\n### What is expected?\r\nTime execution should be the same.\r\n\r\n### What is actually happening?\r\nTime execution is different :\r\n- getterOptimized : 0.21999999989930075\r\n- getterNotOptimized : 494.8850000000675\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1669","RelatedDescription":"Closed issue \"Slow performance using getter references other getter\" (#1669)"},{"Id":"554690831","IsPullRequest":false,"CreatedAt":"2020-01-27T01:19:55","Actor":"vicglarson","Number":"1668","RawContent":null,"Title":"dispatch interface returns pending promise instead of resolved","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jtzqmxk3/](https://jsfiddle.net/jtzqmxk3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin this request insterface of dispatch changed\r\nLook at this https://github.com/vuejs/vuex/pull/1115/files#diff-3bf35cd41da51153dcca3003656f7c67R139\r\n\r\nit returns now pending promise for returned true from action instead of resolved. You can see it at jsfiddle console.\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nuntouched Promise.resolve(true) returned by action wrapper\r\nwhen no any action subscribers added\r\n\r\n\r\n### What is actually happening?\r\nreturned pending promise\r\n\r\n---\r\nalso you can look at \r\nhttps://github.com/vuejs/vuex/issues/1572\r\nwhich targets the same pull request\r\n\r\nPerhaps I have bad assumptions. But behavior for trivial action response is not specified here https://vuex.vuejs.org/ru/guide/actions.html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1668","RelatedDescription":"Closed issue \"dispatch interface returns pending promise instead of resolved\" (#1668)"},{"Id":"552158159","IsPullRequest":true,"CreatedAt":"2020-01-20T08:56:42","Actor":"Zhwt","Number":"1667","RawContent":null,"Title":"docs: Add clarity of module definition","State":"open","Body":"Add documentation clarity of module definition","Url":"https://github.com/vuejs/vuex/pull/1667","RelatedDescription":"Open PR \"docs: Add clarity of module definition\" (#1667)"},{"Id":"548553432","IsPullRequest":true,"CreatedAt":"2020-01-12T23:55:24","Actor":"huybuidac","Number":"1666","RawContent":null,"Title":"Store adds reset function that helps reset to initial state","State":"closed","Body":"Currently, there is no true way to reset to initial state.\r\n\r\nAdding Reset function to do that.\r\n\r\nFixes: https://github.com/vuejs/vuex/issues/1118","Url":"https://github.com/vuejs/vuex/pull/1666","RelatedDescription":"Closed or merged PR \"Store adds reset function that helps reset to initial state\" (#1666)"},{"Id":"547194166","IsPullRequest":false,"CreatedAt":"2020-01-09T01:22:33","Actor":"wangqiang66","Number":"1664","RawContent":null,"Title":"Typescript下webpack热更新 actions多次执行","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[http://localhost:9529/login](http://localhost:9529/login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. typescript 正常书写modules 例如添加\r\n@Action\r\npublic login() {}\r\n2. webpack 采用热更新方式\r\n3.修改modules代码 例如public login() { console.log(test)} 保存\r\n\r\n### What is expected?\r\n执行login的时候的用更新的代码\r\n\r\n### What is actually happening?\r\n以前的方法和新的方法都执行\r\n\r\n\r\n---\r\n热更新才会出现，需要动态的修改源码， 无法提供重现链接\r\n\r\n正常打包不会出现这个问题，热更新的时候才会出现\r\n\r\n查看store._actions 发现login对象是一个数组，有两条数据\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1664","RelatedDescription":"Open issue \"Typescript下webpack热更新 actions多次执行\" (#1664)"},{"Id":"546753496","IsPullRequest":false,"CreatedAt":"2020-01-08T09:51:42","Actor":"wangqiang66","Number":"1663","RawContent":null,"Title":"Typescript webpack 热加载开发模式下修改store/modules的内容。store._actions下面会多加一个事件","State":"closed","Body":"如图\r\n\r\n![image](https://user-images.githubusercontent.com/9331467/71968195-62caae80-323f-11ea-92fb-c4abaa90a3bf.png)\r\n\r\n旧的事件没有删除，导致会触发以前的方法","Url":"https://github.com/vuejs/vuex/issues/1663","RelatedDescription":"Closed issue \"Typescript webpack 热加载开发模式下修改store/modules的内容。store._actions下面会多加一个事件\" (#1663)"},{"Id":"546444301","IsPullRequest":false,"CreatedAt":"2020-01-07T18:41:53","Actor":"BonBonSlick","Number":"1662","RawContent":null,"Title":"Error in v-on handler: \"TypeError: Cannot destructure property 'data' of 'undefined' as it is undefined.\"","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1662","RelatedDescription":"Closed issue \"Error in v-on handler: \"TypeError: Cannot destructure property 'data' of 'undefined' as it is undefined.\"\" (#1662)"},{"Id":"545746876","IsPullRequest":false,"CreatedAt":"2020-01-06T14:11:39","Actor":"wangzhiyao66","Number":"1661","RawContent":null,"Title":"Vue项目报错：Uncaught SyntaxError: Unexpected token <","State":"closed","Body":"1. Vue  and  Typescript Projects built\r\n2.I want to use webworker to count user data,\r\n3. The code snippet is as follows\r\n// webworker.js\r\n`\r\nonmessage = function (event) {\r\n  // postmessage的参数\r\n  const eventData = {\r\n    token: event.data.token,\r\n    requestData: event.data,\r\n    url: event.data.url,\r\n  }\r\n\r\n  // 请求地址 在 worker.service.ts 里面\r\n\r\n  const sleep = function (time) {\r\n    /**\r\n     *\r\n     * @param {*} data 请求参数\r\n     * @param {*} callback 请求成功回掉函数\r\n     */\r\n    var xhr = function (data, callback) {\r\n      // console.log('worker 参数', data);\r\n      const workerdata = JSON.parse(JSON.stringify(data));\r\n      if (workerdata) {\r\n        delete workerdata.token;\r\n        delete workerdata.url;\r\n      }\r\n      // fetch 请求方式\r\n      fetch(eventData.url, {\r\n        body: JSON.stringify(workerdata), // must match 'Content-Type' header\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + eventData.token,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\"\r\n        },\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      })\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          throw new Error('Network response was not ok.');\r\n        })\r\n        .then(function (data) {\r\n          // console.log(JSON.stringify(data));\r\n          // console.table(data);\r\n          console.log('%c webworker请求成功 fetch方式 开始收集数据', 'color:orange');\r\n          callback();\r\n        }, function (err) {\r\n          console.error(err);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      const obj = {\r\n        data: 'ok',\r\n        type: 'worker'\r\n      };\r\n\r\n      xhr(eventData.requestData, function () {\r\n        resolve(obj);\r\n      });\r\n    });\r\n  };\r\n\r\n  // 立即执行的 async 函数\r\n  (async () => {\r\n    const result = await sleep(event.data);\r\n    postMessage(result);\r\n    // console.log('在使用importScripts()的文件中调用：' + kk());\r\n    close();\r\n  })();\r\n};\r\n`\r\n// An error occurred during a method call\r\n\r\n`\r\n        if (typeof Worker !== 'undefined') {\r\n            this.worker = new Worker('../../../../../static/js/webworker.js'); // 需要每次都调用打开一个woker\r\n            console.log( 'msg =========', msg);\r\n      \r\n            // 可以序列化为JSON结构的任何值都可以作为参数传递给 postMessage();\r\n            this.worker.postMessage(msg);\r\n            this.worker.onmessage = (event: any) => {\r\n              this.worker_data = event.data;\r\n            };\r\n            console.log('start Web Workers...');\r\n          } else {\r\n            console.log('Sorry, your browser does not support Web Workers...');\r\n          }\r\n`\r\n\r\n\r\nI need your help to solve this problem. Thank you very much","Url":"https://github.com/vuejs/vuex/issues/1661","RelatedDescription":"Closed issue \"Vue项目报错：Uncaught SyntaxError: Unexpected token <\" (#1661)"},{"Id":"543671710","IsPullRequest":false,"CreatedAt":"2019-12-30T01:52:06","Actor":"phymo","Number":"1660","RawContent":null,"Title":"Vuex 3.1.2 shows TSlint Error","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/phymo/pen/bGNrJVQ](https://codepen.io/phymo/pen/bGNrJVQ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvuex 3.1.2 shows tslint error: \r\n/node_modules/vuex/types/helpers.d.ts(8,85):\r\nTS2370: A rest parameter must be of an array type.\r\n/node_modules/vuex/types/helpers.d.ts(8,120):\r\nTS2370: A rest parameter must be of an array type.\r\n\r\n\r\n### What is expected?\r\nno error\r\n\r\n### What is actually happening?\r\nupdated to 3.1.2 then error occurs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1660","RelatedDescription":"Open issue \"Vuex 3.1.2 shows TSlint Error\" (#1660)"},{"Id":"542311819","IsPullRequest":false,"CreatedAt":"2019-12-25T11:22:55","Actor":"SunGuoQiang123","Number":"1659","RawContent":null,"Title":"mapMutations and mapActions not usable in mixin","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/sungunguoqiang/pen/vYEZmpN?editors=1112](https://codepen.io/sungunguoqiang/pen/vYEZmpN?editors=1112)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nApp component created hook executed, the error emit  `this.TEST is not a function`\r\n\r\n### What is expected?\r\nno error happen\r\n\r\n### What is actually happening?\r\nan error emitted when called in created hook, and also mapActions also has the same problem.\r\nif call by the `this.$store.commit('TEST')`, it's right\r\n\r\n---\r\n`mapState ` and `mapGetters` are right, but `mapMutations` and `mapActions` are not right\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1659","RelatedDescription":"Closed issue \"mapMutations and mapActions not usable in mixin\" (#1659)"},{"Id":"534236183","IsPullRequest":true,"CreatedAt":"2019-12-25T08:28:07","Actor":"saylestyler","Number":"1655","RawContent":null,"Title":"mutates -> mutate; add period to mirror other constructions","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1655","RelatedDescription":"Closed or merged PR \"mutates -> mutate; add period to mirror other constructions\" (#1655)"},{"Id":"542247801","IsPullRequest":false,"CreatedAt":"2019-12-25T08:23:54","Actor":"galenyuan","Number":"1658","RawContent":null,"Title":"Change of state not dispatch to component","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/sx9e7fav/](http://jsfiddle.net/sx9e7fav/)\r\n\r\n### Steps to reproduce\r\nOpen the reproduce link.\r\n\r\n### What is expected?\r\nshould display email list\r\n\r\n### What is actually happening?\r\nThe placeholder value 「-」 displayed\r\n\r\n---\r\njsfiddle can not use Vue  devtool, so you can copy this code in a html file and run a HTTP Server.\r\n```html\r\n<html>\r\n  <head>\r\n    <title>demo</title>\r\n    <script src=\"https://unpkg.com/vue@2.6.11/dist/vue.min.js\"></script>\r\n    <script src=\"https://unpkg.com/vuex@3.1.2/dist/vuex.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <ul id=\"demo\">\r\n      <li v-for=\"item in list\">{{ users[item.userid] ? users[item.userid].email : '-' }}</li>\r\n    </ul>\r\n    <script>\r\n      Vue.config.devtools = true\r\n      const getUserById = (id) => {\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve({\r\n              id,\r\n              email: `${id}@email.com`\r\n            })\r\n          }, 1000)\r\n        })\r\n      }\r\n      const store = new Vuex.Store({\r\n        state: {\r\n          users: {}\r\n        },\r\n        mutations: {\r\n          addUser(state, user) {\r\n            state.users[user.id] = user\r\n          }\r\n        },\r\n        actions: {\r\n          async getUser(ctx, id) {\r\n            if (id in ctx.state.users) return\r\n            ctx.commit('addUser', { id, email: '-' })\r\n            const user = await getUserById(id)\r\n            ctx.commit('addUser', user)\r\n          }\r\n        }\r\n      })\r\n      const app = new Vue({\r\n        store,\r\n        el: '#demo',\r\n        data: {\r\n          list: [\r\n            { userid: 1 },\r\n            { userid: 2 },\r\n            { userid: 3 },\r\n            { userid: 4 },\r\n            { userid: 5 },\r\n          ]\r\n        },\r\n        computed: {\r\n          ...Vuex.mapState(['users'])\r\n        },\r\n        methods: {\r\n          ...Vuex.mapActions(['getUser'])\r\n        },\r\n        created() {\r\n          this.list.forEach(item => {\r\n            this.getUser(item.userid)\r\n          })\r\n        }\r\n      });\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\nLet's check in Vue devtool, we can find mutaion has triggered and state changed:\r\n![image](https://user-images.githubusercontent.com/10335062/71431526-4aba4180-270d-11ea-88c6-3e1c4f28e265.png)\r\n\r\nThen lets try a Time Travel:\r\n![image](https://user-images.githubusercontent.com/10335062/71431539-64f41f80-270d-11ea-9f7c-5334108adc57.png)\r\n\r\nThen the page gose to what I want:\r\n![image](https://user-images.githubusercontent.com/10335062/71431555-7d643a00-270d-11ea-9a23-d38a68878bc6.png)\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1658","RelatedDescription":"Closed issue \"Change of state not dispatch to component\" (#1658)"},{"Id":"538511187","IsPullRequest":false,"CreatedAt":"2019-12-16T16:16:11","Actor":"andywuzh","Number":"1657","RawContent":null,"Title":"mapGetter dosen't work with namespaced module","State":"closed","Body":"**Version**\r\n3.1.2\r\n\r\n**Steps to reproduce**\r\n\r\n```javascript\r\n// store/modules/todo.js\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    todos: [\r\n      { id: 1, title: 'something todo' }\r\n    ]\r\n  },\r\n  getters: {\r\n    getTodo: state => id => state.todos.filter(todo => todo.id === id)[0]\r\n  }\r\n}\r\n\r\n\r\n// a component.vue\r\nmethods: {\r\n  ...mapGetters('todo', ['getTodo']),\r\n  someMethod: {\r\n    console.log(this.getTodo(1))\r\n\r\n    // this work!\r\n    console.log(this.getTodo()(1))\r\n  }\r\n}\r\n\r\n```\r\n\r\n**What is expected?**\r\n\r\n```this.getTodo(1)``` should return ``` {id: 1, title: 'something todo'}```\r\n\r\n**What is actually happening?**\r\n\r\nit return a callable function same as ```getTodo```: \r\n```javascript\r\nƒ (id) {\r\n  return state.filter(function (s) {\r\n    return s.id == id;\r\n  })[0];\r\n}\r\n```\r\n\r\n-----\r\nThere is no more details about how to use ```mapGetters``` with **namespaced** module in the [doc](https://vuex.vuejs.org/api/#mapgetters).\r\nAm I miss something or it should not be used in this way?\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1657","RelatedDescription":"Closed issue \"mapGetter dosen't work with namespaced module\" (#1657)"},{"Id":"536744701","IsPullRequest":false,"CreatedAt":"2019-12-12T04:04:47","Actor":"liwanchao4","Number":"1656","RawContent":null,"Title":"vue3.1.2 webpack打包出错的问题","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n.gitlab-ci.yml\r\n\r\n```\r\n.package:\r\n  stage: package\r\n  before_script:\r\n    - npm config set registry http://nexus.sjgs/repository/npm-group/\r\n  artifacts:\r\n    paths:\r\n      - dist\r\n# 测试环境\r\npackage-staging:\r\n    extends: .package\r\n    script:      \r\n      - npm install\r\n      - npm run build-staging --verbose\r\n    only:\r\n    - pre_production\r\n```\r\n\r\nbuild的时候报错如下：\r\n![image](https://user-images.githubusercontent.com/43988736/70681714-4175b180-1cd7-11ea-9733-ec49b6133403.png)\r\n\r\n将vuex降级到3.1.1版本就没有问题","Url":"https://github.com/vuejs/vuex/issues/1656","RelatedDescription":"Closed issue \"vue3.1.2 webpack打包出错的问题\" (#1656)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-23T05:30:49.7810009Z","RunDurationInMilliseconds":2174}