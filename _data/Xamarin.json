{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin Podcast: Microsoft Build 2019 Recap","PublishedOn":"2019-05-14T18:29:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development. This edition also covering a recap of Microsoft Build 2019!\nBuild...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-build-2019-recap/","RawContent":null},{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null},{"Title":"The Next Evolution of Xamarin Training: Microsoft Learn","PublishedOn":"2019-05-06T08:01:53+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We&#8217;re excited to announce two new learning paths on Building Xamarin Apps in Microsoft Learn: A free and interactive learning portal.\nXamarin University Joins MS Learn\nThe Xamarin University...","Href":"https://devblogs.microsoft.com/xamarin/next-evolution-xamarin-training-microsoft-learn/","RawContent":null},{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9626589774","Type":"PullRequestEvent","CreatedAt":"2019-05-14T22:58:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3094","RelatedDescription":"Merged pull request \"[tests] Run locale test with AOT enabled too\" (#3094) at xamarin/xamarin-android","RelatedBody":"Commit\r\nhttps://github.com/xamarin/xamarin-android/commit/74cf0ec949783f2b70b9541a24ebea304dc9e6eb\r\nstarted running the locale test non-parallel to have *sane* time\r\nmeasurements.\r\n\r\nIt will be nice to have the AOT and profiled AOT times for locale test\r\nas well."},{"Id":"9626571121","Type":"IssuesEvent","CreatedAt":"2019-05-14T22:53:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3095","RelatedDescription":"Opened issue \"Jenkins master build shouldn't upload `bundle-*.zip` unless it is \"new\"\" (#3095) at xamarin/xamarin-android","RelatedBody":"Currently the Jenkins/master build *always* uploads a `bundle-*.zip`, even if it hasn't \"really\" changed.  What happens is:\r\n\r\n 1. The existing `bundle-*.zip` is downloaded into `$HOME/android-archives`\r\n 2. The file from (1) is extracted into e.g. `bin/Debug`\r\n 3. Later, `bin/BuildDebug/bundle-*.zip` is created, using the contents from (2).\r\n 4. (3) is uploaded and becomes the \"new\" `bundle-*.zip`\r\n\r\nThe result is that `bundle-*.zip` changes with *every master build*, which means it's ~constantly \"changing\" -- though only *timestamps* within the file changes; no other contents change -- which makes for some \"bizarro\" environmental conditions.\r\n\r\nIf (1) & (2) happens, we should *skip* (3) & (4)."},{"Id":"9626423645","Type":"IssuesEvent","CreatedAt":"2019-05-14T22:20:26","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3092","RelatedDescription":"Closed issue \"VS For Mac 2019 - An error occurred when executing task 'Release-Android'.\" (#3092) at xamarin/xamarin-android","RelatedBody":"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2873,3): error XA5101: C compiler for target Arm was not found. Tried paths: \"/Users/UserName/Library/Developer/Xamarin/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-gcc; /Users/UserName/Library/Developer/Xamarin/android-sdk-macosx/ndk-bundle/prebuilt/darwin-x86_64/bin/gcc\" [/Users/UserName/Projetos/ProjectName/app/src/android/ProjectNameApp.Droid/ProjectName.Droid.csproj]\r\n\r\n**An error occurred when executing task 'Release-Android'.**\r\nTeardown\r\nExecuting custom teardown action...\r\nEnvironment: QA\r\nConfiguration: Release\r\nTarget: Release-Android\r\nError: One or more errors occurred. (MSBuild: Process returned an error (exit code 1).)\r\nMSBuild: Process returned an error (exit code 1).\r\n\r\n**Hi guys,**\r\n**I installed Visual Studio for Mac and around to build the application for Android it gave me this error. I installed NDK and now this error appears to me.**\r\n\r\n**Do you know how to solve this?**\r\n\r\nBest regards,\r\nRafael Santos"},{"Id":"9626200882","Type":"PullRequestEvent","CreatedAt":"2019-05-14T21:37:59","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3094","RelatedDescription":"Opened pull request \"[tests] Run locale test with AOT enabled too\" (#3094) at xamarin/xamarin-android","RelatedBody":"Commit\r\nhttps://github.com/xamarin/xamarin-android/commit/74cf0ec949783f2b70b9541a24ebea304dc9e6eb\r\nstarted running the locale test non-parallel to have *sane* time\r\nmeasurements.\r\n\r\nIt will be nice to have the AOT and profiled AOT times for locale test\r\nas well."},{"Id":"9625125267","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:49:56","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3063","RelatedDescription":"Reopened issue \"Archiving failed: An item with the same key has already been added\" (#3063) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nOne of my android project started to complain with this error when Archiving in Release mode. I used to delete the content of the Archive folder, or change the versionCode in androidmanifest to workaround the error. But this time it does not work.\r\nI also tried after deleting bin/obj/.vs and other use files.\r\nAny clue ?\r\n\r\nUPDATE\r\nI worked around it by changing the versionName in androidmanifest. It now does archive fine.\r\n\r\n### Expected Behavior\r\n\r\nArchive correctly without having to change the versionName.\r\n\r\n### Actual Behavior\r\n\r\nFails. See logs.\r\n\r\n### Version Information\r\n\r\nVS2019 16.1.0 Preview 2.\r\nAlso happen with other VS versions.\r\n\r\n### Xamarin Tools Log File\r\n\r\n```\r\nXamarin.VisualStudio.TastyPackage|Information|0|Hooked up SDB tracing adapter\r\nXamarin.VisualStudio.TastyPackage|Information|0|Initialization finished\r\nXamarin|Information|0|Xamarin - 16.1.0.528-d16-1+3cff8c337\r\nXamarin.VisualStudio.TastyPackage|Information|0|Hooked up SDB tracing adapter\r\nXamarin.VisualStudio.TastyPackage|Information|0|Initialization finished\r\nXamarin.VisualStudio.Android.XamarinAndroidPackage|Warning|0|Initializing Xamarin.VisualStudio.Android.XamarinAndroidPackage\r\nXamarin.VisualStudio.TastyPackage|Information|0|Hooked up SDB tracing adapter\r\nXamarin.VisualStudio.TastyPackage|Information|0|Initialization finished\r\nXamarin.VisualStudio.IOS.XamarinIOSPackage|Warning|0|Initializing Xamarin.VisualStudio.IOS.XamarinIOSPackage.\r\nXamarin.Inspector|Information|0|Inspector extension loaded\r\nXamarin.VisualStudio.Android.AndroidVirtualDeviceProvider|Error|0|an error occurred loading avd `Android_Accelerated_x86_Nougat`, the system image does not exists\r\nXamarin.VisualStudio.Android.AndroidVirtualDeviceProvider|Error|0|an error occurred loading avd `Nexus_5X_API_19`, the system image does not exists\r\nXamarin.VisualStudio.Progress.ProgressReportService|Information|0|Archiving App Bundle 'AirViewer.Droid'...\r\nXamarin.VisualStudio.Publishing.ArchiveManager|Error|0|System.ArgumentException: An item with the same key has already been added.\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyManager.GetHierarchyEvents(IVsHierarchy vsHierarchy)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyManager.AddItem(HierarchyItem item, HierarchyItem knownParent, Boolean isLoadingSolution)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyManager.GetHierarchyItemImpl(HierarchyItemIdentity identity, HierarchyItem knownParent)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.AppendChildren(IVsHierarchy hierarchy, UInt32 itemID, List`1 appendedChildren)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.FillChildren()\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.get_InternalChildren()\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.get_Children()\r\n   at Clide.SolutionExplorerNode.get_Nodes() in E:\\A\\_work\\977\\s\\src\\Clide\\Solution\\SolutionExplorerNode.cs:line 174\r\n   at Clide.ITreeNodeExtensions.<>c.<Traverse>b__1_0(ISolutionExplorerNode x) in E:\\A\\_work\\977\\s\\src\\Clide.Interfaces\\Extensions\\ITreeNodeExtensions.cs:line 33\r\n   at Traverser.<TraverseDepthFirst>d__2`1.MoveNext() in E:\\A\\_work\\977\\s\\src\\Clide.Interfaces\\Extensions\\Traverser.cs:line 70\r\n   at System.Linq.Enumerable.<OfTypeIterator>d__95`1.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Clide.AndroidClideExtensions.GetAndroidResources(IProjectNode projectNode) in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Android\\ProjectSystem\\Extensions.cs:line 18\r\n   at Xamarin.VisualStudio.Android.Publishing.AndroidArchiveToolsService.CreateParameters(IProjectNode project) in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Android\\Services\\Publishing\\Archival\\AndroidArchiveToolsService.cs:line 195\r\n   at Xamarin.VisualStudio.Android.Publishing.AndroidArchiveToolsService.ArchiveAsync(IProjectNode project, IProgressReport progress, CancellationToken cancellationToken) in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Android\\Services\\Publishing\\Archival\\AndroidArchiveToolsService.cs:line 115\r\n   at Xamarin.VisualStudio.Publishing.ArchivableProjectBase.<ArchiveAsync>d__8.MoveNext() in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Publishing\\Archival\\ArchivableProjectBase.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Xamarin.VisualStudio.Publishing.ArchiveManager.<ArchiveAsync>d__14.MoveNext() in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Publishing\\Archival\\ArchiveManager.cs:line 197\r\nXamarin.VisualStudio.ProgressReport|Error|0|System.ArgumentException: An item with the same key has already been added.\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyManager.GetHierarchyEvents(IVsHierarchy vsHierarchy)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyManager.AddItem(HierarchyItem item, HierarchyItem knownParent, Boolean isLoadingSolution)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyManager.GetHierarchyItemImpl(HierarchyItemIdentity identity, HierarchyItem knownParent)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.AppendChildren(IVsHierarchy hierarchy, UInt32 itemID, List`1 appendedChildren)\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.FillChildren()\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.get_InternalChildren()\r\n   at Microsoft.VisualStudio.PlatformUI.HierarchyItem.get_Children()\r\n   at Clide.SolutionExplorerNode.get_Nodes() in E:\\A\\_work\\977\\s\\src\\Clide\\Solution\\SolutionExplorerNode.cs:line 174\r\n   at Clide.ITreeNodeExtensions.<>c.<Traverse>b__1_0(ISolutionExplorerNode x) in E:\\A\\_work\\977\\s\\src\\Clide.Interfaces\\Extensions\\ITreeNodeExtensions.cs:line 33\r\n   at Traverser.<TraverseDepthFirst>d__2`1.MoveNext() in E:\\A\\_work\\977\\s\\src\\Clide.Interfaces\\Extensions\\Traverser.cs:line 70\r\n   at System.Linq.Enumerable.<OfTypeIterator>d__95`1.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Clide.AndroidClideExtensions.GetAndroidResources(IProjectNode projectNode) in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Android\\ProjectSystem\\Extensions.cs:line 18\r\n   at Xamarin.VisualStudio.Android.Publishing.AndroidArchiveToolsService.CreateParameters(IProjectNode project) in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Android\\Services\\Publishing\\Archival\\AndroidArchiveToolsService.cs:line 195\r\n   at Xamarin.VisualStudio.Android.Publishing.AndroidArchiveToolsService.ArchiveAsync(IProjectNode project, IProgressReport progress, CancellationToken cancellationToken) in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Android\\Services\\Publishing\\Archival\\AndroidArchiveToolsService.cs:line 115\r\n   at Xamarin.VisualStudio.Publishing.ArchivableProjectBase.<ArchiveAsync>d__8.MoveNext() in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Publishing\\Archival\\ArchivableProjectBase.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Xamarin.VisualStudio.Publishing.ArchiveManager.<ArchiveAsync>d__14.MoveNext() in E:\\A\\_work\\2139\\s\\src\\Core\\VisualStudio.Publishing\\Archival\\ArchiveManager.cs:line 197\r\nXamarin.VisualStudio.Progress.ProgressReportService|Information|0|An item with the same key has already been added.\r\nXamarin.VisualStudio.Progress.ProgressReportService|Information|0|Failed to create App archive 'AirViewer.Droid'.\r\n```\r\n"},{"Id":"9623270612","Type":"IssuesEvent","CreatedAt":"2019-05-14T14:41:02","Actor":"ashokkumar96","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3093","RelatedDescription":"Opened issue \"EditText text is not aligned to the center properly while changing the layout of the View.\" (#3093) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run the attached sample.\r\n2. Click the \"Change Layout \" button.\r\n3. Text is not aligned to the center of the layout.\r\n\r\n<!--\r\n[App13.zip](https://github.com/xamarin/xamarin-android/files/3178280/App13.zip)\r\n\r\n-->\r\n\r\n### Expected Behavior\r\nText should be aligned to center of the View, as the layout changes.\r\n\r\n### Actual Behavior\r\nText is not aligned to center of the View, as the layout changes.\r\n\r\n### Version Information\r\nMicroSoft visual studio Version 15.9.4\r\nXamarin Android sdk 9.1.4.2\r\n\r\nReproduced in android device with version 7.1\r\n\r\n[App13.zip](https://github.com/xamarin/xamarin-android/files/3178309/App13.zip)\r\n"},{"Id":"9621137592","Type":"IssuesEvent","CreatedAt":"2019-05-14T09:55:09","Actor":"rafaelcsantos92","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3092","RelatedDescription":"Opened issue \"VS For Mac 2019 - An error occurred when executing task 'Release-Android'.\" (#3092) at xamarin/xamarin-android","RelatedBody":"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2873,3): error XA5101: C compiler for target Arm was not found. Tried paths: \"/Users/UserName/Library/Developer/Xamarin/android-sdk-macosx/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-gcc; /Users/UserName/Library/Developer/Xamarin/android-sdk-macosx/ndk-bundle/prebuilt/darwin-x86_64/bin/gcc\" [/Users/UserName/Projetos/ProjectName/app/src/android/ProjectNameApp.Droid/ProjectName.Droid.csproj]\r\n\r\n**An error occurred when executing task 'Release-Android'.**\r\nTeardown\r\nExecuting custom teardown action...\r\nEnvironment: QA\r\nConfiguration: Release\r\nTarget: Release-Android\r\nError: One or more errors occurred. (MSBuild: Process returned an error (exit code 1).)\r\nMSBuild: Process returned an error (exit code 1).\r\n\r\n**Hi guys,**\r\n**I installed Visual Studio for Mac and around to build the application for Android it gave me this error. I installed NDK and now this error appears to me.**\r\n\r\n**Do you know how to solve this?**\r\n\r\nBest regards,\r\nRafael Santos"},{"Id":"9611971117","Type":"IssuesEvent","CreatedAt":"2019-05-13T07:45:07","Actor":"michalsznajder","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3091","RelatedDescription":"Opened issue \"Shared runtime redeployed on overy run\" (#3091) at xamarin/xamarin-android","RelatedBody":"When I run my application in Debug shared runtime is constantly deployed to my target device. Application is actually Xamarin.Forms but I think it does not matter here.\r\n\r\nI did run msbuild in verbose mode and below is interesting part. It look like build process is not able to veryfiy that shared runtime is installed and redeploys shared runtime every time.\r\n\r\n\r\nI use Huavei P20 Pro with Oreo on board. Other software versions below.\r\n\r\n```\r\n[BEGIN] Detecting installed packages\r\n[MESSAGE] Detecting installed packages...\r\n  Detecting installed packages... (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 am broadcast -a \"mono.android.intent.action.PACKAGE_VERSIONS\" -e \"packages\" \"Mono.Android.DebugRuntime,Mono.Android.Platform.ApiLevel_27,com.myapp.app\" -n \"Mono.Android.DebugRuntime/com.xamarin.mono.android.PackageVersions\" (TaskId:597)\r\n  \r\n  TASK: Broadcast \r\n  am broadcast -a \"mono.android.intent.action.PACKAGE_VERSIONS\" -e \"packages\" \"Mono.Android.DebugRuntime,Mono.Android.Platform.ApiLevel_27,com.myapp.app\" -n \"Mono.Android.DebugRuntime/com.xamarin.mono.android.PackageVersions\" \r\n  \r\n  completed?:Broadcasting: Intent { act=mono.android.intent.action.PACKAGE_VERSIONS flg=0x400000 cmp=Mono.Android... (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 cat /data/system/packages.xml (TaskId:597)\r\n  TASK: GetPackages cat /data/system/packages.xml completed?:cat: /data/system/packages.xml: Permission denied\r\n   (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 cat /dbdata/system/packages.xml (TaskId:597)\r\n  TASK: GetPackages cat /dbdata/system/packages.xml completed?:cat: /dbdata/system/packages.xml: No such file or directory\r\n   (TaskId:597)\r\n[BEGIN] Removing old runtime\r\n[MESSAGE] Removing old runtime: Mono.Android.DebugRuntime...\r\n  Removing old runtime: Mono.Android.DebugRuntime... (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 pm uninstall \"Mono.Android.DebugRuntime\" (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 pm uninstall \"Mono.Android.DebugRuntime\" (TaskId:597)\r\n  TASK: UninstallPackage pm uninstall \"Mono.Android.DebugRuntime\" completed?:Failure [DELETE_FAILED_INTERNAL_ERROR]\r\n   (TaskId:597)\r\n[END] \r\n[BEGIN] Installing shared runtime\r\n[MESSAGE] Target device is arm64-v8a.\r\n  Target device is arm64-v8a. (TaskId:597)\r\n[MESSAGE] Installing the Mono shared runtime (debug - 1549073043)...\r\n  Installing the Mono shared runtime (debug - 1549073043)... (TaskId:597)\r\n  TASK: UninstallPackage pm uninstall \"Mono.Android.DebugRuntime\" completed?:Success\r\n   (TaskId:597)\r\n[PROGRESS] 10\r\n  10% ... 3456kb of 34475kb copied (TaskId:597)```\r\n\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.11\r\nVisualStudio.15.Release/15.9.11+28307.586\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nXamarin   4.12.3.83 (d15-9@23fa80172)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.4.0.64 (9c8d8e0)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9627557000","Type":"IssuesEvent","CreatedAt":"2019-05-15T03:29:07","Actor":"Adam-Langley","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6195","RelatedDescription":"Opened issue \"Regression of Bugzilla#27779 Xamarin.Forms.ReadOnlyListAdapter.IndexOf throws NotImplementedException\" (#6195) at xamarin/Xamarin.Forms","RelatedBody":"See https://bugzilla.xamarin.com/show_bug.cgi?id=27779\r\n\r\nAll details are there.\r\nI did originally fill this all out - then GitHub blanked out my report when I submitted it... \r\n\r\n[XamForms-CrashSelectingItem.zip](https://github.com/xamarin/Xamarin.Forms/files/3180769/XamForms-CrashSelectingItem.zip)\r\n"},{"Id":"9627011435","Type":"PullRequestEvent","CreatedAt":"2019-05-15T00:52:43","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6194","RelatedDescription":"Opened pull request \"[X] resolve event handlers in base generic types\" (#6194) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #6176\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9627005185","Type":"IssuesEvent","CreatedAt":"2019-05-15T00:50:49","Actor":"viniciuslln","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6193","RelatedDescription":"Opened issue \"[Bug] Grid with ColumnDefinitions with Unexpected Behavior\" (#6193) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nIn the code informed the grid and the internal views are rendered incorrectly when I add ColumnDefinitions (second image attached )\r\n\r\n### Steps to Reproduce\r\nAdd\r\n```\r\n<Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=\"Auto\" />\r\n     <ColumnDefinition Width=\"*\" />\r\n</Grid.ColumnDefinitions>\r\n```\r\nin the Grid.\r\n\r\n### Expected Behavior\r\nHeight grid adjust content size\r\nFrame Corner radius present\r\n\r\n### Actual Behavior\r\nGrid has incorrect height\r\nThe corner radius of the inner frame (with image) disappeared\r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n4.0.0.394984-pre10\r\n- Last known good version: \r\nnull\r\n- IDE:\r\n VS 19 For Windows\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  \r\nNot tested<!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n9.0\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Affected Devices:\r\nAll\r\n### Screenshots\r\n- Without ColumnDefinition \r\n<img src=\"https://i.imgur.com/J2gMSVf.png\"/>\r\n- With ColumnDefinition \r\n<img src=\"https://i.imgur.com/3kk6HZj.png\"/>\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nhttps://gist.github.com/viniciuslln/1876c1f0c4a9f23dc9a3e40b5bc58bb4\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9626472658","Type":"IssuesEvent","CreatedAt":"2019-05-14T22:31:00","Actor":"akamud","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6192","RelatedDescription":"Opened issue \"[Bug] x:Name + Binding reference not working on nested layouts binding\" (#6192) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have a `Page` with a `StackLayout` using `BindableLayout.ItemsSource`, inside each item I have a `ListView`, for each item in this nested `ListView` I need to do a `Binding` to a property on the Page's ViewModel. I'm trying to use the [Source+Path](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/app-fundamentals/data-binding/binding-path) approach but the app crashes as soon as I open the page that contains this structure.\r\n\r\n**MainPage.xaml**:\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage\r\n  x:Class=\"BindableLayoutReferenceBug.ListViewPage\"\r\n  xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n  xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n  xmlns:local=\"clr-namespace:BindableLayoutReferenceBug\">\r\n  <StackLayout BindableLayout.ItemsSource=\"{Binding Items}\">\r\n    <BindableLayout.ItemTemplate>\r\n      <DataTemplate>\r\n        <local:MessageListViewTemplate />\r\n      </DataTemplate>\r\n    </BindableLayout.ItemTemplate>\r\n  </StackLayout>\r\n</ContentPage>\r\n```\r\n\r\n**MessageListViewTemplate.xaml**:\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<ContentView\r\n  x:Class=\"BindableLayoutReferenceBug.MessageListViewTemplate\"\r\n  xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n  xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n  x:Name=\"listView\">\r\n  <ListView ItemsSource=\"{Binding Options}\">\r\n    <ListView.ItemTemplate>\r\n      <DataTemplate>\r\n        <ViewCell>\r\n        <StackLayout>\r\n          <Label Text=\"{Binding .}\" />\r\n          <Button\r\n            BackgroundColor=\"Blue\"\r\n            Command=\"{Binding Source={x:Reference Name=listView}, Path=Parent.BindingContext.ShowMessageCommand}\"\r\n            CommandParameter=\"{Binding .}\"\r\n            Text=\"Show Message\" />\r\n        </StackLayout>\r\n        </ViewCell>\r\n      </DataTemplate>\r\n    </ListView.ItemTemplate>\r\n  </ListView>\r\n</ContentView>\r\n```\r\n\r\nThe exception shows that there is a problem finding the reference to the `x:Name` I used: Can not find the object referenced by `listView`.\r\n\r\n![image](https://user-images.githubusercontent.com/954102/57736346-f7afe480-767d-11e9-8b74-857ee647bccc.png)\r\n\r\nThis only happens when I have a nested structure as I mentioned (StackLayout with BindableLayout > ListView). At first I thought this was a problem only with `BindableLayout`, but my repro shows that his happens on `ListView` and `BindableLayout`\r\n\r\nI tried using different Paths for the binding, but since this is a problem parsing the XAML not finding the x:Name referenced, I don't think it even starts evaluating my Path.\r\n\r\nAs shown in this [answer](https://stackoverflow.com/a/56123573/1710624) in SO, it works with C#, so this look like a XAML bug.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Clone https://github.com/akamud/BindableLayoutReferenceBug\r\n2. Run the app and click any of the buttons\r\n\r\n### Expected Behavior\r\n\r\nThe app should render a nested list with a frame that fires a command on the parent ViewModel.\r\n\r\n### Actual Behavior\r\n\r\nThe app crashes as soon as the page's XAML is parsed.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.6.0.293080 \r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS: 12.2\r\n  - Android: 9.0\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/akamud/BindableLayoutReferenceBug"},{"Id":"9626270740","Type":"PullRequestEvent","CreatedAt":"2019-05-14T21:50:21","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6191","RelatedDescription":"Opened pull request \"[Controls] Update nuget packages\" (#6191) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUpdate nuget packages\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9625950929","Type":"IssuesEvent","CreatedAt":"2019-05-14T20:56:10","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5598","RelatedDescription":"Closed issue \"XamlC throws Object reference not set to an instance of an object on DevOps\" (#5598) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nXamlC crashes in Xamarin.Forms project under DevOps build with \"Object reference not set to an instance of an object \".\r\n\r\n### Expected Behavior\r\nXF solution should build in DevOps as it does in local VS \r\n\r\n### Actual Behavior\r\nError thrown: `\r\n```\r\n error : Object reference not set to an instance of an object. [C:\\agent\\_work\\4\\s\\Controller\\ControllerApp\\ControllerApp.csproj]\r\n2019-03-18T09:19:56.8468956Z      at Xamarin.Forms.Build.Tasks.TypeReferenceExtensions.<GetMethods>d__14.MoveNext()\r\n2019-03-18T09:19:56.8468994Z      at Xamarin.Forms.Build.Tasks.TypeReferenceExtensions.<GetMethods>d__14.MoveNext()\r\n2019-03-18T09:19:56.8469381Z      at System.Linq.Enumerable.<ConcatIterator>d__59`1.MoveNext()\r\n2019-03-18T09:19:56.8469437Z      at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n2019-03-18T09:19:56.8469484Z      at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n2019-03-18T09:19:56.8469524Z      at Xamarin.Forms.Build.Tasks.TypeReferenceExtensions.GetImplicitOperatorTo(TypeReference fromType, TypeReference toType, ModuleDefinition module)\r\n2019-03-18T09:19:56.8469580Z      at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.<Add>d__54.MoveNext()\r\n2019-03-18T09:19:56.8469618Z      at Xamarin.Forms.Build.Tasks.ILProcessorExtensions.Append(ILProcessor processor, IEnumerable`1 instructions)\r\n2019-03-18T09:19:56.8469655Z      at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.Visit(ElementNode node, INode parentNode)\r\n2019-03-18T09:19:56.8469691Z      at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n2019-03-18T09:19:56.8469754Z      at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n2019-03-18T09:19:56.8469788Z      at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n2019-03-18T09:19:56.8469830Z      at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n2019-03-18T09:19:56.8469882Z      at Xamarin.Forms.Xaml.RootNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n2019-03-18T09:19:56.8469923Z      at Xamarin.Forms.Build.Tasks.XamlCTask.TryCoreCompile(MethodDefinition initComp, MethodDefinition initCompRuntime, ILRootNode rootnode, Exception& exception) (TaskId:535)`\r\n```\r\n\r\n### Basic Information\r\nXF project builds successful in local VS and from MSBuild command line. \r\nDevOps has MSBuildVersion = 15.9.21.\r\n- Platform Target Frameworks: Android\r\n\r\nI can send the output log to assignee as it's a non-public log\r\n\r\n"},{"Id":"9625867051","Type":"IssuesEvent","CreatedAt":"2019-05-14T20:43:15","Actor":"samhouts","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5857","RelatedDescription":"Closed issue \"[Android] MainActivity.OnBackPressed() System.InvalidOperationException: Sequence contains no elements\" (#5857) at xamarin/","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nNavigation stack seems to be lost while app is Sleeping causing a blank screen to appear when resumed and upon the back button being pressed the error `System.InvalidOperationException: Sequence contains no elements` occurring.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open a Xamarin.forms app\r\n2. Put it on background\r\n3. Resume the app\r\n\r\n### Expected Behavior\r\nApp should resume as expected\r\n\r\n### Actual Behavior\r\nBlank screen appears and pressing back button causes app crash\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1009999\r\n- Last known good version: 2.3.4.247\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  N/A\r\n  - Android: 5.0. 6.0, 6.0.1, 7.0, 7.1.1, 8.0.0, 8.1.0, 9. It appears to be for every version of Android we support.\r\n  - UWP:  N/A\r\n- Android Support Library Version: 5.0 onwards\r\n- Nuget Packages:\r\n- Affected Devices: All\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/17048266/55795305-5d2d1600-5abf-11e9-92d2-a3ad316f5de5.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9625867051","Type":"IssuesEvent","CreatedAt":"2019-05-14T20:43:15","Actor":"samhouts","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5857","RelatedDescription":"Closed issue \"[Android] MainActivity.OnBackPressed() System.InvalidOperationException: Sequence contains no elements\" (#5857) at xamarin/","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nNavigation stack seems to be lost while app is Sleeping causing a blank screen to appear when resumed and upon the back button being pressed the error `System.InvalidOperationException: Sequence contains no elements` occurring.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open a Xamarin.forms app\r\n2. Put it on background\r\n3. Resume the app\r\n\r\n### Expected Behavior\r\nApp should resume as expected\r\n\r\n### Actual Behavior\r\nBlank screen appears and pressing back button causes app crash\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1009999\r\n- Last known good version: 2.3.4.247\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  N/A\r\n  - Android: 5.0. 6.0, 6.0.1, 7.0, 7.1.1, 8.0.0, 8.1.0, 9. It appears to be for every version of Android we support.\r\n  - UWP:  N/A\r\n- Android Support Library Version: 5.0 onwards\r\n- Nuget Packages:\r\n- Affected Devices: All\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/17048266/55795305-5d2d1600-5abf-11e9-92d2-a3ad316f5de5.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9626054598","Type":"PullRequestEvent","CreatedAt":"2019-05-14T21:12:53","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6053","RelatedDescription":"Opened pull request \"[d16-2] Bump mono to head of 2019-02\" (#6053) at xamarin/xamarin-macios","RelatedBody":"New commits in mono/mono:\n\n* mono/mono@06c3f553122 [sdks] Lipo arm64_32 binaries for watchOS\n* mono/mono@0f69e271534 [sdks] Use -pathmap CSC option for iOS/Mac\n* mono/mono@69fae70242e [WinForms] Related Forms closing issue (#13717)\n* mono/mono@4fa246df3f9 [2019-02] [WinForms] fix EditingCellFormattedValue getter and setter for bool value (#14437)\n* mono/mono@a55d1c93771 [2019-02] TextInfo.ChangeCase should not use CultureInfo.CurrentCulture (#14438)\n* mono/mono@b41578079ec [2019-02] Revert \"[System] Add FSEvent FileSystemWatcher to monotouch BCL profile\" (#14448)\n* mono/mono@09429597dcb [metadata] use handle stack in mono_runtime_object_init_handle (#14445)\n* mono/mono@77ddc3abc18 [arm64] set MONO_ARCH_HAVE_UNWIND_BACKTRACE for watch4 (#14452)\n* mono/mono@f1aa58d9a90 [2019-02] Do not allocate handles in ReleaseMutex. (#14428)\n* mono/mono@382c836e7fb Mutex memory leak on sgen GC (nursery, major).\n* mono/mono@6ab15f25295 Usually do not create a handle in mono_runtime_invoke_handle. (#14423)\n* mono/mono@7361a4f01c7 [llvmonly] make local copy of trace_ips pointer from exception object (#14409)\n* mono/mono@7daf13e0d44 [2019-02] [runtime] Use MAP_JIT automatically when running under a hardened runtime on osx. (#14413)\n* mono/mono@ca78977b319 [sdks] Add .cs source files to ios archive\n* mono/mono@7814ea810cf [sdks] Make sure the mono-version.txt directory exists\n* mono/mono@f9cdf7b9866 Bump helix-binaries\n* mono/mono@238d4a71db5 A deadlock happens when during a process_suspend there is a pending invoke and then when it's calling the invoke there is another call to process_suspend in the same thread. (#14387)\n* mono/mono@189b0c5c35b [sdks] Add Mono version to ios/mac archive\n* mono/mono@ff46d6e49ea [sdks] Fix wrong path\n* mono/mono@2397d41abfb [sdks] Add Mono binaries to mac archive\n\nDiff: https://github.com/mono/mono/compare/bc3791b0ffb077da0f415f70b401c2d086b8d821..06c3f553122b17457147695475957ead3ec90b6a"},{"Id":"9625103097","Type":"PullRequestEvent","CreatedAt":"2019-05-14T18:46:37","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6052","RelatedDescription":"Opened pull request \"[d16-2] [VSTS] Ensure that the corrent tests are run on devices.\" (#6052) at xamarin/xamarin-macios","RelatedBody":"The change allows to state the tests that have to be ran. ATM with these\r\nchanges, the vsts pipeline must add the following to the env vars:\r\n\r\n* tvOS device pipelines: Must add 'run-tvos-tests' to the labels.\r\n* iOS device pipelines: Must add 'run-ios-tests' to the labels.\r\n\r\nThis will ensure that only the tests for the devices are ran and if the\r\ntests pass we get a green build with no unexpected skips.\n\nBackport of #6019.\n\n/cc @VincentDondain @mandel-macaque"},{"Id":"9624860708","Type":"PullRequestEvent","CreatedAt":"2019-05-14T18:10:20","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6051","RelatedDescription":"Opened pull request \"Revert \"[launcher] Pass --use-map-jit to mono on XM app startup\"\" (#6051) at xamarin/xamarin-macios","RelatedBody":"- This reverts commit 2278512abafe68a808c84c7575a6bdb053cc8081.\r\n- This is no longer necessary due to https://github.com/mono/mono/pull/14395"},{"Id":"9624770863","Type":"PullRequestEvent","CreatedAt":"2019-05-14T17:56:39","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6050","RelatedDescription":"Opened pull request \"[apidiff] Add q quick'n'dirty script to produce a diff between any two bundle.zip\" (#6050) at xamarin/xamarin-macios","RelatedBody":"Use for producing API diff for release notes without waiting for a PR,\nbots and/or approvals...\n\nAlso useful to produce API diff between any versions, not just between\nthe current revision and a baseline (last stable)."},{"Id":"9624641010","Type":"PullRequestEvent","CreatedAt":"2019-05-14T17:37:15","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6042","RelatedDescription":"Merged pull request \"[appkit] Make NSCell and NSControl 'Formatter' accept null\" (#6042) at xamarin/xamarin-macios","RelatedBody":"- Fixes #6032: NSTextField.Formatter missing null-allowed\r\n  (https://github.com/xamarin/xamarin-macios/issues/6032)\r\n- Swift seems to have nullable [here](https://developer.apple.com/documentation/appkit/nscontrol/1428887-formatter)."},{"Id":"9624640982","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:37:15","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6032","RelatedDescription":"Closed issue \"NSTextField.Formatter missing null-allowed\" (#6032) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1.  Set `NSTextField`'s `Formatter` to `NSNumberFormatter`\r\n2. Set `NSTextField`'s `Formatter` to null.\r\n3. Observe ArgumentNullException\r\n\r\n### Expected Behavior\r\nNo Exception\r\n\r\n### Actual Behavior\r\nArgumentNullException\r\n\r\n### Environment\r\nany\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n\r\nSwift seems to have nullable here. No special annotation on objc.\r\nhttps://developer.apple.com/documentation/appkit/nscontrol/1428887-formatter\r\n![image](https://user-images.githubusercontent.com/109974/57468994-403a5d00-728e-11e9-8c3e-fce640c01d50.png)\r\n"},{"Id":"9624300214","Type":"PullRequestEvent","CreatedAt":"2019-05-14T16:46:33","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6049","RelatedDescription":"Opened pull request \"[linker] Add the custom attributes removal step as an configurable optimization. Fix #3655\" (#6049) at xamarin/xamarin-macios","RelatedBody":"This allows the optimization to be disabled in cases where one, or\nmany, a custom attribute(s) are required by the application at runtime.\n\nWhile not ideal disabling this single step is much better than disabling\nlinking for the whole application.\n\nA better approach is described in https://github.com/xamarin/xamarin-macios/issues/6048\nbut this configuration optimization makes sense independently of it.\n\nFix https://github.com/xamarin/xamarin-macios/issues/3655"},{"Id":"9624294679","Type":"IssuesEvent","CreatedAt":"2019-05-14T16:45:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6048","RelatedDescription":"Opened issue \"Smart removal of custom attributes\" (#6048) at xamarin/xamarin-macios","RelatedBody":"Following up https://github.com/xamarin/xamarin-macios/issues/3655#issuecomment-491124725\r\n\r\nThe existing custom attribute removal is, largely, based on a static list.\r\n\r\nA better approach would be to make this closer to the metadata removal of parameter names. IOW if user (non SDK) code does not reference an attribute then it can be removed (from all assemblies, not only the linked ones)."},{"Id":"9621048116","Type":"IssuesEvent","CreatedAt":"2019-05-14T09:43:15","Actor":"Sebastian1989101","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6047","RelatedDescription":"Opened issue \"iOS 9: Could not find the assembly 'Xamarin.iOS.dll' in the app.\" (#6047) at xamarin/xamarin-macios","RelatedBody":"Because of a watchOS project within my app, I'm currently forced to use the Xamarin.iOS Version mentioned in this post: https://devblogs.microsoft.com/xamarin/apple-new-processor-architecture/ \r\n\r\nBut if I do so, I got the following error when trying to debug on iOS 9 (or run my TF version on it): \r\n\r\n```\r\nPlease connect the device 'iPhone-4S'...\r\nobjc[219]: Class MSService is implemented in both /System/Library/PrivateFrameworks/MailServices.framework/MailServices and /var/containers/Bundle/Application/0CE07819-522A-4C48-B036-2BC6EBC37612/MyApp.iOS.app/MyApp.iOS. One of the two will be used. Which one is undefined.\r\nLaunched application 'com.SoftwareNotion.MyApp' on 'Sebastians-iPhone-4S' with pid 219\r\n2019-05-14 11:39:55.779 MyApp.iOS[219:7343] Xamarin.iOS: Could not find the assembly 'Xamarin.iOS.dll' in the app. This is usually fixed by cleaning and rebuilding your project; if that doesn't work, please file a bug report: https://github.com/xamarin/xamarin-macios/issues/new\r\n\r\n=================================================================\r\n\tNative Crash Reporting\r\n=================================================================\r\nGot a SIGABRT while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\n=================================================================\r\n\tBasic Fault Adddress Reporting\r\n=================================================================\r\nMemory around native instruction pointer (0x21c02c5c):0x21c02c4c  1c ff 2f e1 1e ff 2f e1 52 cf a0 e3 80 00 00 ef  ../.../.R.......\r\n0x21c02c5c  04 00 00 3a 04 c0 9f e5 0c c0 9f e7 00 00 00 ea  ...:............\r\n0x21c02c6c  b8 13 e1 13 1c ff 2f e1 1e ff 2f e1 53 cf a0 e3  ....../.../.S...\r\n0x21c02c7c  80 00 00 ef 04 00 00 3a 04 c0 9f e5 0c c0 9f e7  .......:........\r\n\r\n=================================================================\r\n\tNative stacktrace:\r\n=================================================================\r\n\t0x22815f9 - /private/var/containers/Bundle/Application/0CE07819-522A-4C48-B036-2BC6EBC37612/MyApp.iOS.app/Frameworks/Mono.framework/Mono : mono_dump_native_crash_info\r\n\t0x227995f - /private/var/containers/Bundle/Application/0CE07819-522A-4C48-B036-2BC6EBC37612/MyApp.iOS.app/Frameworks/Mono.framework/Mono : mono_handle_native_crash\r\n\t0x21ca6077 - /usr/lib/system/libsystem_platform.dylib : _sigtramp\r\n\t0x21cac733 - /usr/lib/system/libsystem_pthread.dylib : pthread_kill\r\n\t0x21b970ad - /usr/lib/system/libsystem_c.dylib : abort\r\n\t0x1c94428 - /var/containers/Bundle/Application/0CE07819-522A-4C48-B036-2BC6EBC37612/MyApp.iOS.app/MyApp.iOS : xamarin_get_block_descriptor\r\n\t0x1c95da4 - /var/containers/Bundle/Application/0CE07819-522A-4C48-B036-2BC6EBC37612/MyApp.iOS.app/MyApp.iOS : xamarin_find_protocol_wrapper_type\r\n\t0x1c9daf8 - /var/containers/Bundle/Application/0CE07819-522A-4C48-B036-2BC6EBC37612/MyApp.iOS.app/MyApp.iOS : xamarin_release_block_on_main_thread\r\n\t0x9c5e1 - /var/containers/Bundle/Application/0CE07819-522A-4C48-B036-2BC6EBC37612/MyApp.iOS.app/MyApp.iOS : _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy\r\n\t0x21b2f873 - /usr/lib/system/libdyld.dylib : <redacted>\r\n\r\n=================================================================\r\n\tManaged Stacktrace:\r\n=================================================================\r\n=================================================================\r\nApplication 'com.SoftwareNotion.MyApp' terminated.\r\n```"},{"Id":"9618840000","Type":"IssuesEvent","CreatedAt":"2019-05-14T02:17:40","Actor":"Therzok","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6046","RelatedDescription":"Opened issue \"[RFC] Possibly port IsDirectBinding optimization to Mac\" (#6046) at xamarin/xamarin-macios","RelatedBody":"Currently, there is no safe way to directly remove IsDirectBinding for Mac, unless the Dynamic registrar is completely removed and/or assembly.\r\n\r\nI was wondering whether we could alleviate the costs here by creating 2 different `SelectorInvoker` classes, let's call them `DirectInvoker` and `SubclassInvoker`.\r\n\r\nThey would be a really thin layer over the Messaging calls, where DirectInvoker would call `msgSend`, SubclassInvoker would call `msgSendSuper`, both classes being sealed to avoid virtual calls at JIT time, all the methods being marked as aggressive inlining. Static readonly instances could be defined which are then used by NSObject.\r\n\r\nAs an example, [SetValueKeyForPath](https://github.com/xamarin/xamarin-macios/blob/81d6225eb7a377fa49dd98aa324f03e749a161dd/src/Foundation/NSObject2.cs#L704-L721) esentially becomes this; \r\n```\r\nclass NSObject\r\n{\r\n    SelectorInvoker invoker; // set it in InitializeObject\r\n\r\n    public void SetValueForKeyPath (IntPtr handle, NSString keyPath)\r\n    {\r\n        if (keyPath == null)\r\n            throw new ArgumentNullException (\"keyPath\");\r\n\r\n        invoker.void_objc_msgSend_IntPtr_IntPtr (this.Handle, selSetValue_ForKeyPath_Handle, handle, keyPath.Handle);\r\n    }    \r\n}\r\n```\r\n\r\nAt object construction time, we would take a 8byte memory hit for each NSObject at the price of removing branch prediction on every call. In an ideal world, direct calls would be generated by Mono, so we would have the performance improvement of what ILLinker would do at the price of slightly increased object size.\r\n\r\nGiven desktop does not have the same limitations memory wise as iOS, it seems like a decent enough trade-off to me. Maybe an experiment could be done in this sense?"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1128376789510819840","CreatedAt":"2019-05-14T19:09:25+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. In today's episode, we learn the difference between the Preferences API part… https://t.co/z7Yrhk0jNn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":19,"RawContent":null},{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":76,"FavoriteCount":41,"RawContent":null},{"Id":"1125851046939697152","CreatedAt":"2019-05-07T19:53:01+00:00","UserScreenname":"xamarinhq","Text":"The @XamarinU team has joined the #MicrosoftLearn family! Find Xamarin content in Microsoft Learn today at… https://t.co/gWKXwsPUuk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":132,"FavoriteCount":63,"RawContent":null},{"Id":"1125402214661382146","CreatedAt":"2019-05-06T14:09:31+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin Team at Microsoft Build 2019.\nWe have a packed schedule for Xamarin developers.\nCheck out the sche… https://t.co/fFz1nlYVTp","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":65,"FavoriteCount":27,"RawContent":null},{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null}]}},"RunOn":"2019-05-15T05:30:58.0833564Z","RunDurationInMilliseconds":2271}