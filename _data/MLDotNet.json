{"Data":{"GitHub":{"Issues":[{"Id":"359315860","IsPullRequest":false,"CreatedAt":"2018-09-12T04:57:42","Actor":"jignparm","Number":"893","RawContent":null,"Title":"ONNX/Sonoma - add strong name signing to dlls.","State":"open","Body":"ML.Net requires strong-name signed assemblies for loading dlls.","Url":"https://github.com/dotnet/machinelearning/issues/893","RelatedDescription":"Open issue \"ONNX/Sonoma - add strong name signing to dlls.\" (#893)"},{"Id":"359315596","IsPullRequest":false,"CreatedAt":"2018-09-12T04:56:11","Actor":"jignparm","Number":"892","RawContent":null,"Title":"ONNX/Sonoma -- Port to .NetStandard","State":"open","Body":"Replace the windows only  C++/CLI layer for unmanged code interop with Pinvoke calls to  comply with .NetStandard and remove .NetFramework dependency","Url":"https://github.com/dotnet/machinelearning/issues/892","RelatedDescription":"Open issue \"ONNX/Sonoma -- Port to .NetStandard\" (#892)"},{"Id":"359315191","IsPullRequest":false,"CreatedAt":"2018-09-12T04:53:34","Actor":"jignparm","Number":"891","RawContent":null,"Title":"ONNX/Sonoma - remove dependency on Python model_export utility","State":"open","Body":"Sonoma ships with a model_export utility to generates a manifest.json file containing input/output shapes, names, and types.\r\n\r\nIt's not required for ONNX models in ml.net, and causes extra user hops -- this dependency needs to be removed.","Url":"https://github.com/dotnet/machinelearning/issues/891","RelatedDescription":"Open issue \"ONNX/Sonoma - remove dependency on Python model_export utility\" (#891)"},{"Id":"359261749","IsPullRequest":true,"CreatedAt":"2018-09-11T23:35:40","Actor":"ericstj","Number":"890","RawContent":null,"Title":"[WIP] Add GPU package of tensorflow","State":"open","Body":"Best reviewed commit-by-commit.\r\n\r\nThis adds a GPU build package for tensorflow and attempts to use it for tests.\r\n\r\nI'm not certain yet about the mechanism for opting into the GPU build, this was really just a sample to see what we could do.","Url":"https://github.com/dotnet/machinelearning/pull/890","RelatedDescription":"Open PR \"[WIP] Add GPU package of tensorflow\" (#890)"},{"Id":"358306412","IsPullRequest":true,"CreatedAt":"2018-09-11T23:21:23","Actor":"sfilipi","Number":"867","RawContent":null,"Title":"Add TensorFlow documentation to the main class, and include examples on it. ","State":"closed","Body":"Fixes #866 \r\nAdds the documentation to the class, and not just the Create method, and changes the visibility of some of the properties that don't need to be user-facing. \r\n\r\nIncludes the examples in the doc.  \r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/867","RelatedDescription":"Closed or merged PR \"Add TensorFlow documentation to the main class, and include examples on it. \" (#867)"},{"Id":"358305182","IsPullRequest":false,"CreatedAt":"2018-09-11T23:21:23","Actor":"sfilipi","Number":"866","RawContent":null,"Title":"The documentation page for the TensorFlow transform needs to include the examples","State":"closed","Body":"A few things to fix on the documentation page:\r\nThe documentation page for the TensorFlow transform currently does not include the examples. \r\nThere is more documentation on the Create method, than on the class itself. \r\nInternal fields, like ShortName, Summary and UserName are currently listed as public.","Url":"https://github.com/dotnet/machinelearning/issues/866","RelatedDescription":"Closed issue \"The documentation page for the TensorFlow transform needs to include the examples\" (#866)"},{"Id":"359246664","IsPullRequest":false,"CreatedAt":"2018-09-11T22:25:03","Actor":"justinormont","Number":"889","RawContent":null,"Title":"Hot linking to a UCI dataset","State":"open","Body":"I noticed we are hot linking to a UCI dataset:\r\nhttps://github.com/dotnet/machinelearning/blob/a6e3c0a79c225c84f882cb8c8c6013f070cf0e7a/build.proj#L80\r\n\r\nWe should get CELA approval for hot linking, and if possible get approval to redistribute the full dataset in either the [/test/data/](https://github.com/dotnet/machinelearning/tree/6ed90b713f0dbf51a355dab189988554991a7b16/test/data) folder (if small), or the CDN (if large). \r\n\r\nWe should still explore Git LFS for hosting datasets. [[relevant discussion](https://github.com/dotnet/machinelearning/pull/198#issuecomment-391042287)]\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/889","RelatedDescription":"Open issue \"Hot linking to a UCI dataset\" (#889)"},{"Id":"359228389","IsPullRequest":true,"CreatedAt":"2018-09-11T21:20:02","Actor":"Anipik","Number":"888","RawContent":null,"Title":"Added numeric ranking Performance Tests","State":"open","Body":"Added benchmarking performance tests for Numeric ranking.\r\n\r\ncc @justinormont @sfilipi @danmosemsft @eerhardt @shauheen \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/888","RelatedDescription":"Open PR \"Added numeric ranking Performance Tests\" (#888)"},{"Id":"358857468","IsPullRequest":true,"CreatedAt":"2018-09-11T19:34:03","Actor":"TomFinley","Number":"881","RawContent":null,"Title":"Concat estimator with pigsty extensions for ConcatWith, AsVector","State":"closed","Body":"This is a version of the ConcatEstimator. It is functional but will require future work in future especially w.r.t. its transformer. Related to #632.","Url":"https://github.com/dotnet/machinelearning/pull/881","RelatedDescription":"Closed or merged PR \"Concat estimator with pigsty extensions for ConcatWith, AsVector\" (#881)"},{"Id":"359189638","IsPullRequest":true,"CreatedAt":"2018-09-11T19:28:54","Actor":"eerhardt","Number":"887","RawContent":null,"Title":"Move IComponentFactory from EntryPoints namespace","State":"open","Body":"I chose the same namespace as `ComponentCatalog` is in, which is the root `Microsoft.ML.Runtime` namespace. If we ever move `ComponentCatalog` to a different namespace, we could move this as well.\r\n\r\nI spot checked as many places as I could to remove unnecessary `using Microsoft.ML.Runtime.EntryPoints` statements.\r\n\r\nFix #861 ","Url":"https://github.com/dotnet/machinelearning/pull/887","RelatedDescription":"Open PR \"Move IComponentFactory from EntryPoints namespace\" (#887)"},{"Id":"359176721","IsPullRequest":true,"CreatedAt":"2018-09-11T18:55:37","Actor":"eerhardt","Number":"886","RawContent":null,"Title":"Cleanup ComponentCatalog code","State":"open","Body":"Format document in VS.\r\nRemove unused method.\r\nUse readonly property declarations.\r\nDrop unnecessary partial keyword.\r\nRemove unnecessary define.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/886","RelatedDescription":"Open PR \"Cleanup ComponentCatalog code\" (#886)"},{"Id":"358877756","IsPullRequest":true,"CreatedAt":"2018-09-11T18:32:07","Actor":"Zruty0","Number":"882","RawContent":null,"Title":"TensorFlow static extensions, SDCA multiclass static extensions","State":"closed","Body":"Code changes to enable end-to-end static pipe training for TF and multiclass","Url":"https://github.com/dotnet/machinelearning/pull/882","RelatedDescription":"Closed or merged PR \"TensorFlow static extensions, SDCA multiclass static extensions\" (#882)"},{"Id":"359167602","IsPullRequest":false,"CreatedAt":"2018-09-11T18:31:19","Actor":"wschin","Number":"885","RawContent":null,"Title":"Create IDataView from unsafe pointer like float*","State":"open","Body":"There is a CreateDataView function which can accept a customized data type (`IList<TRow> data`) and optionally a schema (`SchemaDefinition schemaDefinition`). Is it possible to pass a data structure like\r\n`class NativeTensor{\r\n  long size;\r\n  float* addr;\r\n};`\r\nto `IList<TRow> data` with a proper definition of schema. I have searched through the code base but didn't find any test with `schemaDefinition!=null`.","Url":"https://github.com/dotnet/machinelearning/issues/885","RelatedDescription":"Open issue \"Create IDataView from unsafe pointer like float*\" (#885)"},{"Id":"358883471","IsPullRequest":true,"CreatedAt":"2018-09-11T17:40:37","Actor":"TomFinley","Number":"883","RawContent":null,"Title":"Static SDCA Multiclass, and Multiclass Evaluator","State":"closed","Body":"Related to #632.","Url":"https://github.com/dotnet/machinelearning/pull/883","RelatedDescription":"Closed or merged PR \"Static SDCA Multiclass, and Multiclass Evaluator\" (#883)"},{"Id":"359004976","IsPullRequest":false,"CreatedAt":"2018-09-11T11:31:21","Actor":"SuperDaveWhite","Number":"884","RawContent":null,"Title":"Setting column weights in KmeansPlusPlus","State":"open","Body":"I find no clue as to how column weights can be adjusted for KmeansPlusPlus or any other type of ML. Gitter board shows no answer after several days. Is there an example? I did download the source code for ML.net and found nothing in the KMeans constructors. I assume ML.net will be doing this on the import or is it something not implemented so far? What is the road map to making this usable for where  KmeansPlusPlus needs to be tuned?\r\n\r\nIn Accord.net it's WeightColumn = (new double[] { .95, 0.05, .05, .95 }) . There is some WeightColumn to as a string, but no documentation how it would be used.\r\n\r\npublic Microsoft.ML.Runtime.EntryPoints.Optional<string> WeightColumn { get; set; }\r\n","Url":"https://github.com/dotnet/machinelearning/issues/884","RelatedDescription":"Open issue \"Setting column weights in KmeansPlusPlus\" (#884)"},{"Id":"358831841","IsPullRequest":true,"CreatedAt":"2018-09-11T05:32:50","Actor":"eerhardt","Number":"879","RawContent":null,"Title":"Remove CmdParser.GetConsoleWindowWidth.","State":"closed","Body":"This method is available on the Console class, thus we don't need to have our own API for it.\r\n\r\nFix #878","Url":"https://github.com/dotnet/machinelearning/pull/879","RelatedDescription":"Closed or merged PR \"Remove CmdParser.GetConsoleWindowWidth.\" (#879)"},{"Id":"358831623","IsPullRequest":false,"CreatedAt":"2018-09-11T05:32:50","Actor":"eerhardt","Number":"878","RawContent":null,"Title":"Remove public CmdParser.GetConsoleWindowWidth()","State":"closed","Body":"See https://github.com/dotnet/machinelearning/blob/510382d2e3685fcf76ff22ea311c025df0f8fb27/src/Microsoft.ML.Core/CommandLine/CmdParser.cs#L506-L568\r\n\r\nThis function is available on the `System.Console` class. We don't need to provide an API for this ourselves, plus we are returning the wrong thing in ML.NET (which builds with `CORECLR` defined).","Url":"https://github.com/dotnet/machinelearning/issues/878","RelatedDescription":"Closed issue \"Remove public CmdParser.GetConsoleWindowWidth()\" (#878)"},{"Id":"358829651","IsPullRequest":true,"CreatedAt":"2018-09-11T03:58:56","Actor":"Zruty0","Number":"877","RawContent":null,"Title":"Static extension for one-to-one TensorFlow mapping","State":"closed","Body":"Added a static extension for a simple TF use case when both single input and single output are vectors of floats of known size.","Url":"https://github.com/dotnet/machinelearning/pull/877","RelatedDescription":"Closed or merged PR \"Static extension for one-to-one TensorFlow mapping\" (#877)"},{"Id":"358834243","IsPullRequest":true,"CreatedAt":"2018-09-10T23:44:54","Actor":"Anipik","Number":"880","RawContent":null,"Title":"WordEmbedding Tests added plus added dimension check for the first row","State":"open","Body":"Fixes https://github.com/dotnet/machinelearning/issues/873\r\nRelated PR https://github.com/dotnet/machinelearning/pull/820\r\n\r\nplease review it after 55fb378\r\n\r\ncc @danmosemsft @sfilipi @eerhardt @Ivanidzo4ka @justinormont ","Url":"https://github.com/dotnet/machinelearning/pull/880","RelatedDescription":"Open PR \"WordEmbedding Tests added plus added dimension check for the first row\" (#880)"},{"Id":"358332963","IsPullRequest":true,"CreatedAt":"2018-09-10T23:05:49","Actor":"TomFinley","Number":"869","RawContent":null,"Title":"Static pipeline column indexers, binary/regression evaluators","State":"closed","Body":"* Infrastructure for column indexers\r\n* Binary classification and regression evaluators\r\n\r\nFixes #868.","Url":"https://github.com/dotnet/machinelearning/pull/869","RelatedDescription":"Closed or merged PR \"Static pipeline column indexers, binary/regression evaluators\" (#869)"},{"Id":"358332894","IsPullRequest":false,"CreatedAt":"2018-09-10T23:05:48","Actor":"TomFinley","Number":"868","RawContent":null,"Title":"Statically Piped Evaluators for Binary Classification and Regression","State":"closed","Body":"Now that we have a few trainers/scorers as part of the static pipelines, the next step might be evaluators. This is somewhat different than other components, since evaluators are not pipeline components (excepting per-instance evaluators, perhaps), as we see here in the aspirational examples.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/df499aa9ea1d671e0df1c432622745c295e3e675/test/Microsoft.ML.Tests/Scenarios/Api/AspirationalExamples.cs#L133\r\n\r\nOne interesting part of the work is the introduction of a method of identifying columns. We already have this somewhat in the `.Append` method, where we are given an instance of the shape type, and select columns from it to show what to append. Here the technique looks identical, but we're in this case selecting a single item.\r\n\r\nWhat makes me a little nervous about this approach is that if the operations are extension methods on the column types, I see absolutely no way to prevent someone from calling one of those extension methods inside that \"indexer\" delegate, short of adding more protections in the analyzer. (And, maybe \r\nthis is fine, since the analyzer is clear and really this is probably a mistake a sensible person might plausibly make once.) More generally I talked about this in my remarks on [\"context\" here](https://github.com/dotnet/machinelearning/issues/632#issuecomment-416391466).\r\n\r\nRelated to #632.","Url":"https://github.com/dotnet/machinelearning/issues/868","RelatedDescription":"Closed issue \"Statically Piped Evaluators for Binary Classification and Regression\" (#868)"},{"Id":"358406510","IsPullRequest":true,"CreatedAt":"2018-09-10T22:49:45","Actor":"TomFinley","Number":"870","RawContent":null,"Title":"Term estimators in static pipeline","State":"closed","Body":"Potentially controversial moves:\r\n\r\n* Naming the extension method for `TermEstimator` as `ToKey`, pursuant to #214 discussion. Please consider discussing that there.\r\n* `.tt` file to generate the extension methods. We've previously never used T4, but in this case I felt it was warranted.\r\n\r\nAt the moment, #863 is not yet in, so the `onFit` delegate returns an object with nothing in it. If that goes in prior to when we must finish this work I'll update it, otherwise we'll do it later.","Url":"https://github.com/dotnet/machinelearning/pull/870","RelatedDescription":"Closed or merged PR \"Term estimators in static pipeline\" (#870)"},{"Id":"358811865","IsPullRequest":true,"CreatedAt":"2018-09-10T22:40:25","Actor":"abgoswam","Number":"874","RawContent":null,"Title":"Fix typo in nuget Microsoft.ML.TensorFlow.TestModels","State":"closed","Body":"Fixes #804 \r\n\r\n1. Fix typo in name of nuget package\r\n2. Update version\r\n","Url":"https://github.com/dotnet/machinelearning/pull/874","RelatedDescription":"Closed or merged PR \"Fix typo in nuget Microsoft.ML.TensorFlow.TestModels\" (#874)"},{"Id":"358815427","IsPullRequest":true,"CreatedAt":"2018-09-10T22:17:27","Actor":"artidoro","Number":"876","RawContent":null,"Title":"WIP: Conversion of prior and random trainers to estimators","State":"open","Body":"Fixes #875.\r\n\r\nConverted prior and random trainers to estimators. \r\nI still need to write the tests and am working on that now, but any comments are more than welcome in the meantime.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/876","RelatedDescription":"Open PR \"WIP: Conversion of prior and random trainers to estimators\" (#876)"},{"Id":"358814814","IsPullRequest":false,"CreatedAt":"2018-09-10T22:15:03","Actor":"artidoro","Number":"875","RawContent":null,"Title":"Convert Prior and Random trainers to estimators","State":"open","Body":"Convert Prior and Random trainers to estimators as part of the API overhaul project, and write tests for the new estimators.","Url":"https://github.com/dotnet/machinelearning/issues/875","RelatedDescription":"Open issue \"Convert Prior and Random trainers to estimators\" (#875)"},{"Id":"358786355","IsPullRequest":false,"CreatedAt":"2018-09-10T20:41:51","Actor":"Anipik","Number":"873","RawContent":null,"Title":"Failure while using WordEmbeddings [Regression]","State":"open","Body":"I am using Maml.MainAll(string cmd) for producing the benchmark results.\r\n\r\nThe command that I tried is \r\n```\r\nmaml.exe CV \r\ntr=OVA{p=AveragedPerceptron{iter=10}}\r\nk=5 \r\nloader=TextLoader{quote=- sparse=- col=Label:R4:0 col=rev_id:TX:1 col=comment:TX:2 col=logged_in:BL:4 col=ns:TX:5 col=sample:TX:6 col=split:TX:7 col=year:R4:3 header=+}\r\ndata=c:\\git\\machinelearning\\bin\\AnyCPU.Release\\Microsoft.ML.Benchmarks\\netcoreapp2.1\\491da934-573a-4301-bb13-570ecee3aed2\\bin\\Release\\netcoreapp2.1\\external\\WikiDetoxAnnotated160kRows.tsv \r\nxf=Convert{col=logged_in type=R4} xf=CategoricalTransform{col=ns} xf=TextTransform\r\n{col=FeaturesText:comment tokens=+ wordExtractor=NGramExtractorTransform{ngram=2}} \r\nxf=WordEmbeddingsTransform{col=FeaturesWordEmbedding:FeaturesText_TransformedText \r\nmodel=FastTextWikipedia300D} xf=Concat\r\n{col=Features:FeaturesText,FeaturesWordEmbedding,logged_in,ns}\r\n```\r\nThe error I get is \r\n```\r\n--- Command line args ---\r\nCV tr=OVA{p=AveragedPerceptron{iter=10}} k=5 loader=TextLoader{quote=- sparse=- col=Label:R4:0 col=rev_id:TX:1 col=comment:TX:2 col=logged_in:BL:4 col=ns:TX:5 col=sample:TX:6 col=split:TX:7 col=year:R4:3 header=+} data= c:\\git\\machinelearning\\bin\\AnyCPU.Release\\Microsoft.ML.Benchmarks\\netcoreapp2.1\\95c44c13-fcff-45f8-8427-370a4bb30f47\\bin\\Release\\netcoreapp2.1\\external\\WikiDetoxAnnotated160kRows.tsv xf=Convert{col=logged_in type=R4} xf=CategoricalTransform{col=ns} xf=TextTransform{col=FeaturesText:comment tokens=+ wordExtractor=NGramExtractorTransform{ngram=2}} xf=WordEmbeddingsTransform{col=FeaturesWordEmbedding:FeaturesText_TransformedText model=FastTextWikipedia300D} xf=Concat{col=Features:FeaturesText,FeaturesWordEmbedding,logged_in,ns}\r\n--- Exception message ---\r\n(1) Unexpected exception: One or more errors occurred. (Exception has been thrown by the target of an invocation.) (Exception has been thrown by the target of an invocation.) (Exception has been thrown by the target of an invocation.) (Exception has been thrown by the target of an invocation.) (Exception has been thrown by the target of an invocation.), 'System.AggregateException'\r\n   at System.Threading.Tasks.Task.WaitAllCore(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at Microsoft.ML.Runtime.Data.CrossValidationCommand.FoldHelper.GetCrossValidationTasks() in c:\\git\\machinelearning\\src\\Microsoft.ML.Data\\Commands\\CrossValidationCommand.cs:line 503\r\n   at Microsoft.ML.Runtime.Data.CrossValidationCommand.RunCore(IChannel ch, String cmd) in c:\\git\\machinelearning\\src\\Microsoft.ML.Data\\Commands\\CrossValidationCommand.cs:line 200\r\n   at Microsoft.ML.Runtime.Data.CrossValidationCommand.Run() in c:\\git\\machinelearning\\src\\Microsoft.ML.Data\\Commands\\CrossValidationCommand.cs:line 130\r\n   at Microsoft.ML.Runtime.Tools.Maml.MainCore(TlcEnvironment env, String args, Boolean alwaysPrintStacktrace) in c:\\git\\machinelearning\\src\\Microsoft.ML.Maml\\MAML.cs:line 140\r\n(2) Unexpected exception: Exception has been thrown by the target of an invocation., 'System.Reflection.TargetInvocationException'\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo.CreateInstanceCore(Object[] ctorArgs) in c:\\git\\machinelearning\\src\\Microsoft.ML.Core\\ComponentModel\\ComponentCatalog.cs:line 212\r\n   at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes](IHostEnvironment env, Type signatureType, TRes& result, String name, String options, Object[] extra) in c:\\git\\machinelearning\\src\\Microsoft.ML.Core\\ComponentModel\\ComponentCatalog.cs:line 977\r\n   at Microsoft.ML.Runtime.ComponentCatalog.CreateInstance[TRes](IHostEnvironment env, Type signatureType, String name, String options, Object[] extra) in c:\\git\\machinelearning\\src\\Microsoft.ML.Core\\ComponentModel\\ComponentCatalog.cs:line 901\r\n   at Microsoft.ML.Runtime.CommandLine.CmdParser.ComponentFactoryFactory.ComponentFactory`2.CreateComponent(IHostEnvironment env, TArg1 argument1) in c:\\git\\machinelearning\\src\\Microsoft.ML.Core\\CommandLine\\CmdParser.cs:line 2659\r\n   at Microsoft.ML.Runtime.Data.CrossValidationCommand.CreateRoleMappedData(IHostEnvironment env, IChannel ch, IDataView data, ITrainer trainer) in c:\\git\\machinelearning\\src\\Microsoft.ML.Data\\Commands\\CrossValidationCommand.cs:line 265\r\n   at Microsoft.ML.Runtime.Data.CrossValidationCommand.FoldHelper.RunFold(Int32 fold) in c:\\git\\machinelearning\\src\\Microsoft.ML.Data\\Commands\\CrossValidationCommand.cs:line 524\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n(3) Unexpected exception: Source array was not long enough. Check the source index, length, and the array's lower bounds.\r\nParameter name: sourceArray, 'System.ArgumentException'\r\n   at System.Array.Copy(Array sourceArray, Int32 sourceIndex, Array destinationArray, Int32 destinationIndex, Int32 length, Boolean reliable)\r\n   at Microsoft.ML.Runtime.Internal.Utilities.BigArray`1.AddRange(T[] src, Int32 length) in c:\\git\\machinelearning\\src\\Microsoft.ML.Core\\Utilities\\BigArray.cs:line 337\r\n   at Microsoft.ML.Runtime.Data.WordEmbeddingsTransform.GetVocabularyDictionary() in c:\\git\\machinelearning\\src\\Microsoft.ML.Transforms\\Text\\WordEmbeddingsTransform.cs:line 436\r\n   at Microsoft.ML.Runtime.Data.WordEmbeddingsTransform..ctor(IHostEnvironment env, Arguments args, IDataView input) in c:\\git\\machinelearning\\src\\Microsoft.ML.Transforms\\Text\\WordEmbeddingsTransform.cs:line 154\r\n\r\n```\r\n\r\nI also tried it using Microsoft.console proj  but I get similar results.\r\n\r\nlonger call stack\r\n```\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.Contracts.DbgFailCore(string msg, Microsoft.ML.Runtime.IExceptionContext ctx) Line 772\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.Contracts.DbgFail(Microsoft.ML.Runtime.IExceptionContext ctx) Line 779\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.Contracts.Assert(Microsoft.ML.Runtime.IExceptionContext ctx, bool f) Line 834\tC#\r\n>\tMicrosoft.ML.Transforms.dll!Microsoft.ML.Runtime.Data.WordEmbeddingsTransform.Model.AddWordVector(Microsoft.ML.Runtime.IChannel ch, string word, float[] wordVector) Line 101\tC#\r\n \tMicrosoft.ML.Transforms.dll!Microsoft.ML.Runtime.Data.WordEmbeddingsTransform.GetVocabularyDictionary() Line 433\tC#\r\n \tMicrosoft.ML.Transforms.dll!Microsoft.ML.Runtime.Data.WordEmbeddingsTransform.WordEmbeddingsTransform(Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.WordEmbeddingsTransform.Arguments args, Microsoft.ML.Runtime.Data.IDataView input) Line 154\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo.CreateInstanceCore(object[] ctorArgs) Line 209\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo.CreateInstance(Microsoft.ML.Runtime.IHostEnvironment env, object args, object[] extra) Line 233\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance<Microsoft.ML.Runtime.Data.IDataTransform>(Microsoft.ML.Runtime.IHostEnvironment env, System.Type signatureType, out Microsoft.ML.Runtime.Data.IDataTransform result, string name, string options, object[] extra) Line 977\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.ComponentCatalog.CreateInstance<Microsoft.ML.Runtime.Data.IDataTransform>(Microsoft.ML.Runtime.IHostEnvironment env, System.Type signatureType, string name, string options, object[] extra) Line 901\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.CommandLine.CmdParser.ComponentFactoryFactory.ComponentFactory<Microsoft.ML.Runtime.Data.IDataView, Microsoft.ML.Runtime.Data.IDataTransform>.CreateComponent(Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Data.IDataView argument1) Line 2659\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Data.CrossValidationCommand.CreateRoleMappedData(Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.IDataView data, Microsoft.ML.Runtime.ITrainer trainer) Line 266\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Data.CrossValidationCommand.FoldHelper.RunFold(int fold) Line 524\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Data.CrossValidationCommand.FoldHelper.GetCrossValidationTasks.AnonymousMethod__0() Line 494\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.Task<Microsoft.ML.Runtime.Data.CrossValidationCommand.FoldHelper.FoldResult>.InnerInvoke() Line 621\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 145\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.Task.ExecuteWithThreadLocal(ref System.Threading.Tasks.Task currentTaskSlot) Line 2454\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch() Line 582\tC#\r\n\r\n```\r\nIt works perfectly fine with TLC 3.10 . I ran the same command using that version and it runs perfectly fine\r\n\r\n# Debugging\r\nThe array that is being getting created is of size 1 https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Transforms/Text/WordEmbeddingsTransform.cs#L431\r\n\r\narray[0] = 300 //dimension of the word vector being downloaded which leads to failure later on.\r\nThere is no change in the file from the internal repo\r\n\r\ncc @danmosemsft @sfilipi @eerhardt @shauheen ","Url":"https://github.com/dotnet/machinelearning/issues/873","RelatedDescription":"Open issue \"Failure while using WordEmbeddings [Regression]\" (#873)"},{"Id":"358672414","IsPullRequest":false,"CreatedAt":"2018-09-10T15:20:50","Actor":"yaeldekel","Number":"872","RawContent":null,"Title":"Need a strong name for the Microsoft.ML.Scoring NuGet","State":"open","Body":"ML.NET requires all referenced assemblies to be signed with a strong name.","Url":"https://github.com/dotnet/machinelearning/issues/872","RelatedDescription":"Open issue \"Need a strong name for the Microsoft.ML.Scoring NuGet\" (#872)"},{"Id":"358444942","IsPullRequest":false,"CreatedAt":"2018-09-10T02:28:56","Actor":"zeahmed","Number":"871","RawContent":null,"Title":"ML.Net is not able to load Tensorflow GPU DLL...","State":"open","Body":"I am trying work with TF GPU native dll so that I can speed up the scoring process. I replaced the tensorflow.dll in `microsoft.ml.tensorflow.redist\\0.5.0\\runtimes\\win-x64\\native` with gpu version but ML.Net throws `DLL not found exception`.\r\n\r\nI did the same with TensorflowSharp and it loads the GPU version perfectly fine.\r\n\r\n### SOLVED\r\n#### Updating To TensorFlow GPU DLL\r\nIf you want to use TF GPU dll during scoring follow the steps below\r\n- In your ML.Net nuget, replace the `tensorflow.dll` in `microsoft.ml.tensorflow.redist\\<ML.Net-Version>\\runtimes\\win-x64\\native` with gpu version (please keep the name same).\r\n- You can grap the prebuilt gpu dll from https://github.com/fo40225/tensorflow-windows-wheel. \r\n- Update the graphics card drivers, CUDA and CuDNN according the Tensorflow gpu version you are using.\r\n- TensorFlowScorer will automatically pick up the TF GPU version.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/871","RelatedDescription":"Open issue \"ML.Net is not able to load Tensorflow GPU DLL...\" (#871)"},{"Id":"358241981","IsPullRequest":true,"CreatedAt":"2018-09-07T23:41:23","Actor":"sfilipi","Number":"865","RawContent":null,"Title":"WIP: Ova estimator","State":"open","Body":"Converting OVA and PKPD to derive from TrainerEstimatorBase. \r\nUpdating the arguments of those Metalinear learners to have the standard Feature, Label, Weights columns. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/865","RelatedDescription":"Open PR \"WIP: Ova estimator\" (#865)"},{"Id":"358237995","IsPullRequest":true,"CreatedAt":"2018-09-07T23:12:34","Actor":"Anipik","Number":"864","RawContent":null,"Title":"Ported some of the tests from TestCommandMore","State":"open","Body":"- Ported some of the tests from TestCommandMore. Remaining tests contain modules or datasets that are not yet available\r\n\r\ncc @danmosemsft @eerhardt ","Url":"https://github.com/dotnet/machinelearning/pull/864","RelatedDescription":"Open PR \"Ported some of the tests from TestCommandMore\" (#864)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-12T05:30:35.77881Z","RunDurationInMilliseconds":1135}