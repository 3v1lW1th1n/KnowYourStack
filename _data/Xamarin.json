{"Data":{"Blog":{"FeedItems":[{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7888783325","Type":"IssuesEvent","CreatedAt":"2018-06-27T23:52:51","Actor":"nathanielcook","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1894","RelatedDescription":"Opened issue \"Percent 20 encoded space breaks Console.WriteLine for Android Apps\" (#1894) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In the context of an Android app, do a call to `Console.WriteLine` with a URL containing an encoded space. For example:\r\n```\r\nConsole.WriteLine(\"GET to endpoint https://my.api.com/Products?updated_after=06/27/2018%2021:52:59&id_after=25\");\r\n```\r\nSample project: [AndroidAppOutputLineBreak.zip](https://github.com/xamarin/xamarin-android/files/2143262/AndroidAppOutputLineBreak.zip)\r\n\r\n### Expected Behavior\r\nIn the output pad, you see \r\n```\r\nGET to endpoint https://my.api.com/Products?updated_after=06/27/2018%2021:52:59&id_after=25\r\n```\r\n\r\n### Actual Behavior\r\nIn the output pad, you instead see only\r\n```\r\nGET to endpoint https://my.api.com/Products?updated_after=06/27/2018\r\n```\r\n\r\n### Version Information\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: d1dfe322-c6cf-425c-adb9-922478bd2821\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/ncook/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAddinMaker 1.4.2\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Log File\r\n```\r\n06-27 18:48:18.359  8637  8637 I mono-stdout: GET to endpoint https://my.api.com/Products?updated_afterid_after=25\r\n```\r\n(Note the excessive whitespace, which is not a typo.)\r\n"},{"Id":"7888618848","Type":"IssuesEvent","CreatedAt":"2018-06-27T22:57:13","Actor":"guygodin","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1893","RelatedDescription":"Opened issue \"P/Invoke issue in Release build only\" (#1893) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run selected project in Debug\r\n2. The native media format will be correctly created and output the following when calling AMediaFormat_toString():\r\n\r\n> mime: string(video/avc), width: int32(1280), height: int32(720)}\r\n\r\n3. Run the same project in Release\r\n4. The native media format will be created but be invalid. When calling AMediaFormat_toString(), the output will be garbage:\r\n\r\n> �#\u000e��#\u000e�\r\n\r\n5. Trying to configure an AMediaCodec with the created AMediaFormat will work correctly in Debug but will fail in Release.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n[PInvokeBug.zip](https://github.com/xamarin/xamarin-android/files/2143194/PInvokeBug.zip)\r\n\r\n\r\n### Expected Behavior\r\n\r\nCalling into a native library from the NDK should work in both Debug and Release\r\n\r\n### Actual Behavior\r\n\r\nThe application only works in Debug and fails to create a valid AMediaFormat in Release\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.4\r\nVisualStudio.15.Release/15.7.4+27703.2035\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA129\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40601.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40608.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40608.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.2\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27625.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2035\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7888156375","Type":"IssuesEvent","CreatedAt":"2018-06-27T21:00:14","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1813","RelatedDescription":"Closed issue \"Android app build fails during \"SdkOnly\" linking when referencing package (e.g. Entity Framework Core 2.1) that depends on newer System.Memory\" (#1813) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download, extract, and load the sample solution in Visual Studio 15.7.3:\r\n    [AndroidEFCore21LinkedSoln.zip](https://github.com/xamarin/xamarin-android/files/2098515/AndroidEFCore21LinkedSoln.zip)\r\n\r\n   Note: This is the same sample solution as I created for https://github.com/xamarin/xamarin-android/issues/1769 (now closed, fixed in 15.7.3) except I modified the project's Debug configuration *AndroidLinkMode* setting from *None* to *SdkOnly*.\r\n\r\n2. Build the project.\r\n\r\n### Expected Behavior\r\n\r\nThe project should build and deploy to device.\r\n\r\n### Actual Behavior\r\n\r\nThe build fails at the linker stage, with the following error:\r\n\r\n```\r\nXamarin.Android.Common.targets(1812,5): error MSB4018: The \"LinkAssemblies\" task failed unexpectedly.\r\nXamarin.Android.Common.targets(1812,5): error MSB4018: Mono.Linker.MarkException: Error processing method: 'System.ReadOnlySpan`1<System.Char> Microsoft.Extensions.Primitives.StringSegment::AsSpan()' in assembly: 'Microsoft.Extensions.Primitives.dll' ---> Mono.Cecil.ResolutionException: Failed to resolve System.ReadOnlySpan`1<System.Char> System.MemoryExtensions::AsSpan(System.String,System.Int32,System.Int32)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.HandleUnresolvedMethod(MethodReference reference)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.MarkMethod(MethodReference reference)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.MarkInstruction(Instruction instruction)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.MarkMethodBody(MethodBody body)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.ProcessMethod(MethodDefinition method)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.ProcessQueue()\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    --- End of inner exception stack trace ---\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.ProcessQueue()\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.ProcessPrimaryQueue()\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.Process()\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Steps.MarkStep.Process(LinkContext context)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Mono.Linker.Pipeline.Process(LinkContext context)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\nXamarin.Android.Common.targets(1812,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nFWIW, if you were to downgrade the `Microsoft.EntityFrameworkCore.Sqlite` package to 2.0.3, which no longer indirectly depends on `System.Memory` 4.5, then the project builds and is deployed to device.\r\n\r\n\r\n### Version Information\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.3\r\nVisualStudio.15.Release/15.7.3+27703.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA398\r\nMicrosoft Visual C++ 2017\r\n\r\nAdd New File   3.5\r\nThe fastest and easiest way to add new files to any project - including files that start with a dot\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40522.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.21208.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCodeMaid   10.4.53\r\nCodeMaid is an open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.2.2    Build 109.0.20171006.122324\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOpen Command Line   2.1.212\r\nOpens a command line at the root of the project. Support for all consoles such as CMD, PowerShell, Bash etc. Provides syntax highlighting, Intellisense and execution of .cmd and .bat files.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSearch in Velocity by Silverlake Software LLC   0.7.1\r\nProvides a command to search in Velocity the offline documentation and docset viewer for Windows\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQLite & SQL Server Compact Toolbox   4.7\r\nSQLite & SQL Server Compact Toolbox adds scripting, import, export, rename, query execution and much more to SQL Server Compact & SQLite Data Connections.\r\n\r\nSyntax Visualizer   1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 2527e6829ecdc8281ee60d83be8cfd0fa720a648.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2026\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nVSColorOutput   2.5.1\r\nColor output for build and debug windows - http://mike-ward.net/vscoloroutput\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.1 (f1760154c)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Log File\r\n\r\n`adb logcat` output is not applicable as the app didn't even build.\r\n\r\n### Example Project\r\n\r\n[AndroidEFCore21LinkedSoln.zip](https://github.com/xamarin/xamarin-android/files/2098515/AndroidEFCore21LinkedSoln.zip)\r\n"},{"Id":"7887884877","Type":"IssuesEvent","CreatedAt":"2018-06-27T20:03:37","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1448","RelatedDescription":"Closed issue \"Encountering crash due to a SIGILL in System.Numerics.Tests.GenericVectorTests.LessThanOrEqualInt64 when running on an x86 Android device \" (#1448) at xamarin/xamarin-android","RelatedBody":"I'm encountering a SIGILL when running the new XUnit tests added to XA in 15.7 on an x86 device. I can not reproduce this crash when I run on an x86 emulator however. I am seeing this crash after building and deploying the suite in multiple project configurations (Debug, Release + AOT + LLVM).\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Download prebuilt .apk file, and run it on an x86 device:\r\n> adb install 15-7-aotllvm-Xamarin.Android.Bcl_Tests-Signed.apk\r\n> adb shell am instrument -w Xamarin.Android.Bcl_Tests/xamarin.android.bcltests.XUnitInstrumentation\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Details\r\nLink to .apk file - https://microsoft-my.sharepoint.com/:u:/p/pecolli/EYrN-tuwhJFJmkrnwj5vAgIBzEQFPGZkCUcmSkNMJUYMUg?e=LBt3gv\r\nLink to obj output - https://microsoft-my.sharepoint.com/:u:/p/pecolli/EXGoMM2LZURMhg8mPY8IUyoBgDudDiDsjXrLA86zaPjHSQ?e=3YL4a8\r\n\r\n### Version Information\r\nWindows 10 w/ VS 15.7\r\nXamarin.Android SDK 8.3.0.5 (HEAD/1a8ed5388)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nDell Venue 8 3830 v4.4.2 (x86) - http://xqa.blob.core.windows.net/gist/log-d7615b087eff4a3ebdbec837e357ad1d.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7887744630","Type":"IssuesEvent","CreatedAt":"2018-06-27T19:33:19","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1447","RelatedDescription":"Closed issue \"Encountering segfault after MonoTests.System.Linq.Expressions.ExpressionTest_MemberBind on 32bit Android devices when using AOT+LLVM\" (#1447) at xamarin/xamarin-android","RelatedBody":"Somewhat similar to #1444, I'm also hitting a segfault when running the new set of NUnit BCL tests on the majority of \"older\" devices when compiled in Release mode with both AOT+LLVM enabled. Given the timing and a quick review of the test runner, this crash is potentially occurring during a GC attempt after the fixture completes?\r\n\r\nThe same set of tests execute successfully without crashing on newer 64bit devices when both AOT and LLVM are enabled, however there are some new failures (which I will file as a separate issue).\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download prebuilt .apk file, and run it on an older device:\r\n> `adb install 15-7-aotllvm-Xamarin.Android.Bcl_Tests-Signed.apk`\r\n> `adb shell am instrument -w Xamarin.Android.Bcl_Tests/xamarin.android.bcltests.NUnitInstrumentation`\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Details\r\nLink to .apk file - https://microsoft-my.sharepoint.com/:u:/p/pecolli/EYrN-tuwhJFJmkrnwj5vAgIBzEQFPGZkCUcmSkNMJUYMUg?e=LBt3gv\r\nLink to obj output - https://microsoft-my.sharepoint.com/:u:/p/pecolli/EXGoMM2LZURMhg8mPY8IUyoBgDudDiDsjXrLA86zaPjHSQ?e=3YL4a8\r\n\r\n### Version Information\r\nWindows 10 w/ VS 15.7\r\nXamarin.Android SDK 8.3.0.5 (HEAD/1a8ed5388)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nNexus 10 v5.1.1 (armeabi-v7a) - http://xqa.blob.core.windows.net/gist/log-56e8718213e442b786d5bc0446febaad.txt\r\nNexus 5 v6.0 (armeabi-v7a) - https://gist.githubusercontent.com/pjcollins/a0f65c74caf7cebe64cc6685ad05a821/raw/351c559bf50bf40719ff6a9c0b86d66edabd9449/gistfile1.txt\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7887706504","Type":"IssuesEvent","CreatedAt":"2018-06-27T19:24:54","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1444","RelatedDescription":"Closed issue \"Encountering segfault seemingly in System.Numerics.Tests.PlaneTests.PlaneCreateFromVerticesTest on 32bit Android devices when using AOT+LLVM\" (#1444) at xamarin/xamarin-android","RelatedBody":"The new XUnit System.* tests that have been added to XA in 15.7 are crashing on the majority of \"older\" devices when compiled in Release mode with both AOT+LLVM enabled. As is shown in the gist output links below, the test run crashes consistently after printing the following line which leads me to believe the issue may have to do with `System.Numerics.Tests.PlaneTests.PlaneCreateFromVerticesTest`.\r\n\r\n> 03-20 11:19:26.757 I/xUnit   ( 9992): Test starting\r\n> 03-20 11:19:26.757 I/xUnit   ( 9992):    Test name: System.Numerics.Tests.PlaneTests.PlaneCreateFromVerticesTest\r\n> 03-20 11:19:26.786 I/ActivityManager( 1022): Process Xamarin.Android.Bcl_Tests (pid 9992) has died.\r\n\r\nThe same set of tests execute successfully without crashing on newer 64bit devices when both AOT and LLVM are enabled, however there are some new failures (which I will file as a separate issue).\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download prebuilt .apk file, and run it on an older device:\r\n> `adb install 15-7-aotllvm-Xamarin.Android.Bcl_Tests-Signed.apk`\r\n> `adb shell am instrument -w  Xamarin.Android.Bcl_Tests/xamarin.android.bcltests.XUnitInstrumentation`\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Details\r\nLink to .apk file - https://microsoft-my.sharepoint.com/:u:/p/pecolli/EYrN-tuwhJFJmkrnwj5vAgIBzEQFPGZkCUcmSkNMJUYMUg?e=LBt3gv\r\nLink to obj output - https://microsoft-my.sharepoint.com/:u:/p/pecolli/EXGoMM2LZURMhg8mPY8IUyoBgDudDiDsjXrLA86zaPjHSQ?e=3YL4a8\r\n\r\n\r\n### Version Information\r\nWindows 10 w/ VS 15.7\r\nXamarin.Android SDK   8.3.0.5 (HEAD/1a8ed5388)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nThe following devices reproduced the crash with the following log files:\r\nNexus 10 v5.1.1 (armeabi-v7a) - http://xqa.blob.core.windows.net/gist/report-426eda8f3f0a419682cd440c99126f10.txt\r\nMoto G  v4.4.4 (armeabi-v7a) - http://xqa.blob.core.windows.net/gist/report-8b4910f76fab4ad89c23c31ed1dd8059.txt\r\nNexus 5 v6.0 (armeabi-v7a) - https://gist.githubusercontent.com/pjcollins/8fcd8d365e62a71e0427190924c8dfd2/raw/09804bbe144cb34097e97a6737b44d2cce1f8f98/gistfile1.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7887697687","Type":"IssuesEvent","CreatedAt":"2018-06-27T19:22:57","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1241","RelatedDescription":"Closed issue \"Encountering a crash on startup when enabling hybrid AOT\" (#1241) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Attempt to run the Runtime test suite (src/Mono.Android/Test/Mono.Android-Tests.csproj) with AOT, LLVM, and Hybrid AOT (/p:AndroidAotMode=Hybrid) enabled.\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nTest suite ruins to completion successfully.\r\n\r\n### Actual Behavior\r\n```\r\n--------- beginning of crash\r\n01-25 04:01:19.169 F/libc    (31621): Fatal signal 11 (SIGSEGV), code 2, fault addr 0x745a3fffd0 in tid 31640 (Threadpool work)\r\n01-25 04:01:19.199 E/HsmCoreServiceImpl( 1080): onTransact in code is: 103\r\n01-25 04:01:19.242 F/DEBUG   (31642): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n01-25 04:01:19.242 F/DEBUG   (31642): Build fingerprint: 'HUAWEI/VTR-L29/HWVTR:7.0/HUAWEIVTR-L29/C636B120:user/release-keys'\r\n01-25 04:01:19.242 F/DEBUG   (31642): Revision: '0'\r\n01-25 04:01:19.242 F/DEBUG   (31642): ABI: 'arm64'\r\n01-25 04:01:19.242 F/DEBUG   (31642): pid: 31621, tid: 31640, name: Threadpool work  >>> Mono.Android_Tests <<<\r\n01-25 04:01:19.242 F/DEBUG   (31642): signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0x745a3fffd0\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x0   0000007474a262d8  x1   000000745a400000  x2   0000000000000008  x3   0000007474a262d8\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x4   0000800000000000  x5   0000000000000000  x6   000000745a400270  x7   6451ff6b6f6c4864\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x8   000000745a400260  x9   000000000000000b  x10  000000745a400270  x11  0000000000000028\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x12  000000745ac8dc08  x13  0000000000000001  x14  00000000170240bb  x15  000000001f2fdb25\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x16  000000747b137b68  x17  000000747e7a3a88  x18  0000000000000005  x19  000000745a400260\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x20  000000745a400000  x21  0000000000000000  x22  000000745a400260  x23  0000000000000001\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x24  0000000000000001  x25  000000747b13a000  x26  000000745ba37b48  x27  0000007472198400\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x28  000000747b13ae20  x29  000000745a400250  x30  000000747af9ae38\r\n01-25 04:01:19.242 F/DEBUG   (31642):     sp   000000745a400000  pc   000000747af9f748  pstate 0000000020000000\r\n01-25 04:01:19.243 F/DEBUG   (31642): \r\n01-25 04:01:19.243 F/DEBUG   (31642): backtrace:\r\n01-25 04:01:19.243 F/DEBUG   (31642):     #00 pc 0000000000184748  /data/app/Mono.Android_Tests-1/lib/arm64/libmonosgen-2.0.so\r\n01-25 04:01:19.243 F/DEBUG   (31642):     #01 pc 000000000017fe34  /data/app/Mono.Android_Tests-1/lib/arm64/libmonosgen-2.0.so\r\n```\r\n### Version Information\r\nOperating System: Mac OS X 10.12.3\r\nProduct Name: Xamarin.Android\r\nBranch Name: d15-6\r\nBuild Revision: 2e24209998f93aa15c66ea5733724660a122dd88\r\n[Device] Manufacturer: HUAWEI, Model: VTR-L29, Version: 7.0, ABI: arm64-v8a, Timezone: Not set\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-2d21177b132f4d1fa79c25bdf55007ae.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7887654382","Type":"PullRequestEvent","CreatedAt":"2018-06-27T19:13:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1892","RelatedDescription":"Opened pull request \"[tests] fix for BuildAppWithManagedResourceParserAndLibraries timeout\" (#1892) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/nunit/docs/wiki/Framework-Parallel-Test-Execution#specifying-parallelism-at-multiple-test-levels\r\nContext: http://xamarin-jenkins/job/monodroid-pr/397/\r\n\r\nOn Jenkins (monodroid builds) a test can fail with:\r\n\r\n    1) Failed : Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.BuildAppWithManagedResourceParserAndLibraries\r\n        DesignTime build should be less than 10000 milliseconds.\r\n        Expected: less than or equal to 10000.0d\r\n        But was:  12820.0d\r\n\r\nBut this test is marked with `[NonParallelizable]`, what is going on?\r\n\r\nLooking at NUnit's documentation, we have this test configured as:\r\n\r\n    Parallel class with non-parallel methods: The methods run\r\n    sequentially, usually on the same thread that ran the class one-time\r\n    setup, but may actually be running in parallel with other, unrelated\r\n    methods from other classes.\r\n\r\nSince the test class has `[Parallelizable (ParallelScope.Children)]`,\r\nif we mark `BuildAppWithManagedResourceParserAndLibraries` as\r\n`[NonParallelizable]` it can still run in parallel with methods of\r\nother test classes!\r\n\r\nSo the only way to fix this is:\r\n- Make the test class `[NonParallelizable]`\r\n- Mark each method `[Parallelizable]`, which defaults to a scope of\r\n  `ParallelScope.Self`\r\n\r\nThen we get the configuration we want in this case:\r\n\r\n    Non-parallel class with parallel methods: The methods only run in\r\n    parallel with one another, not with the test methods of any other\r\n    classes."},{"Id":"7887515226","Type":"IssuesEvent","CreatedAt":"2018-06-27T18:44:16","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1856","RelatedDescription":"Closed issue \"Issues with Binding to jar file\" (#1856) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create Android  Binding Project\r\n2. Add minewBeaconAdmin.jar to the Jars folder as an EmbeddedJar\r\n3. Set Target Framework to Android Api 21(Android 5.0 Lollipop)\r\n4. Android Class Parser selection produces the same results\r\n5. First compilation causes errors, edit generated files then build again(not rebuild)\r\n   -change 'public override unsafe bool IsInAlphabet (sbyte p0)' to                                                \r\n    'protected override unsafe bool IsInAlphabet (sbyte p0)' in Org.Apache.Commons.Csts.Binary.Base32\r\n   - add 'IIterable IPhonemeExpr.Phonemes { get; }' to PhonemeList in \r\n    'Org.Apache.Commons.Csts.Language.BM.Rule'\r\n6. Add binding to Android project, I am actually using a Dependency Service to access this library in \r\n   Xamarin Forms.\r\n7. SDK guide http://docs.beaconyun.com/BeaconAdmin/Android_BeaconAdmin_Software_Development_Kit_Guide_en/\r\n8. Hardware Smart Minew i4 iBeacon  \r\nwww.minewtech.cn/product/60456179997-220649015/Smart_Minew_i4_iBeacon_nRF51822_chipet_ble_4_0_beacon_for_IOS_Android.html\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n[MinewBeaconAdminSDK(Android)20170801 (2).zip](https://github.com/xamarin/xamarin-android/files/2116373/MinewBeaconAdminSDK.Android.20170801.2.zip)\r\n\r\n[MinewBeaconAdminAndroidBinding.zip](https://github.com/xamarin/xamarin-android/files/2116377/MinewBeaconAdminAndroidBinding.zip)\r\n\r\n\r\n\r\n### Expected Behavior\r\nThe expected behavior is to scan for beacons and connect to a beacon.\r\n\r\n### Actual Behavior\r\nWhen trying to connect to the beacon, \"Java.Lang.NullPointerException: Attempt to invoke virtual method 'void com.minew.beaconset.ConnectService.connect(com.minew.beaconset.MinewBeacon)' on a null object reference\"\r\n\r\nsdk implementation:\r\n```java\r\npublic void connect() {\r\n        this.mConnectService = MinewBeaconManager.getInstance(this.mContext).getConnectService();\r\n        this.mConnectService.connect(this.mBeacon);\r\n        minewBeaconConnections.put(this.mBeacon.getMacAddress(), this);\r\n        this.state = ConnectionState.BeaconStatus_Connecting;\r\n    }\r\n```\r\n\r\nbinding implementation:\r\n```csharp\r\n[Register (\"connect\", \"()V\", \"GetConnectHandler\")]\r\n\t\tpublic virtual unsafe void Connect ()\r\n\t\t{\r\n\t\t\tif (id_connect == IntPtr.Zero)\r\n\t\t\t\tid_connect = JNIEnv.GetMethodID (class_ref, \"connect\", \"()V\");\r\n\t\t\ttry {\r\n\r\n\t\t\t\tif (((object) this).GetType () == ThresholdType)\r\n\t\t\t\t\tJNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_connect);\r\n\t\t\t\telse\r\n\t\t\t\t\tJNIEnv.CallNonvirtualVoidMethod (((global::Java.Lang.Object) this).Handle, ThresholdClass, JNIEnv.GetMethodID (ThresholdClass, \"connect\", \"()V\"));\r\n\t\t\t} finally {\r\n\t\t\t}\r\n\t\t}\r\n```\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.6.6\r\nVisualStudio.15.Release/15.6.6+27428.2037\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA413\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA413\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10402.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.6.18072.2\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nEclipseAndroidImporter   1.0\r\nImport Android projects from Eclipse.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.6.18072.2\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.6.18072.2\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.6.18072.2\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.6.18072.2\r\nProfiling support for Python projects.\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik ASP.NET AJAX VSExtensions   2017.3.1017.0\r\nProgress® Telerik® UI for ASP.NET AJAX Visual Studio extensions\r\n\r\nTelerik ASP.NET Core VSExtensions   2017.3.1121.0\r\nProgress® Telerik® UI for ASP.NET Core Visual Studio extensions\r\n\r\nTelerik ASP.NET MVC VSExtensions   2017.3.1121.0\r\nProgress® Telerik® UI for ASP.NET MVC Visual Studio extensions\r\n\r\nTelerik WinForms VSExtensions   2018.1.215.2\r\nProgress® Telerik® UI for WinForms Visual Studio extensions\r\n\r\nTelerik WPF VSExtensions   2018.1.215.2\r\nProgress® Telerik® UI for WPF Visual Studio extensions\r\n\r\nTelerik Xamarin VSExtensions   2018.1.322.3\r\nProgress® Telerik® UI for Xamarin Visual Studio extensions\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27428.2015\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Linux Development   1.0.8\r\nVisual C++ for Linux Development\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7102.2\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Unity   3.6.0.5\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.753 (f0f46392f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.96 (a702a9ceb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.9.1.24 (f62de47)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7887115615","Type":"PullRequestEvent","CreatedAt":"2018-06-27T17:23:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1884","RelatedDescription":"Merged pull request \"[Xamarin.ProjectTools] fix for VSTS and BUILD_SOURCEVERSIONMESSAGE\" (#1884) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/1806783\r\n\r\nCommit messages can \"accidentally\" cause test failures on VSTS.\r\n\r\nConsider if you added an error message in a commit message, then wrote\r\na test asserting the error no longer occurs.\r\n\r\nBoth Jenkins and VSTS have an environment variable containing the full\r\ncommit message, which will inexplicably cause your test to fail...\r\n\r\n- Jenkins sets `ghprbPullLongDescription`\r\n- VSTS sets `BUILD_SOURCEVERSIONMESSAGE`\r\n\r\nIn this case my build log had:\r\n```\r\nBUILD_SOURCEVERSIONAUTHOR = Jonathan Peppers\r\nBUILD_SOURCEVERSIONMESSAGE = [Xamarin.Android.Build.Tasks] clean intermediates if NuGets change (#1878)\r\n~~commit message text~~\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.animated.vector.drawable\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Animated.Vector.Drawable.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.annotations\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Annotations.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.compat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Compat.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.core.ui\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Core.UI.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.core.utils\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Core.Utils.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.design\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Design.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.fragment\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Fragment.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.media.compat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Media.Compat.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.transition\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Transition.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v4\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v4.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.appcompat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.AppCompat.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.cardview\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.CardView.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.mediarouter\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.MediaRouter.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.palette\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.Palette.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.recyclerview\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.RecyclerView.dll: extracted files are up to date\r\n        Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.vector.drawable\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Vector.Drawable.dll: extracted files are up to date\r\n~~commit message text~~\r\nBUILD_STAGINGDIRECTORY = E:\\A\\_work\\2\\a\r\n```\r\n\r\nThe test was asserting that `Xamarin.Android.Support.v4.dll: extracted files are up to date` was not found...\r\n\r\nWe can clear these values on the `ProcessStartInfo` object when\r\nrunning MSBuild in Xamarin.ProjectTools."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7888799890","Type":"IssuesEvent","CreatedAt":"2018-06-27T23:58:55","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3175","RelatedDescription":"Opened issue \"[Android] Long press on a Button with custom BackgroundColor doesn't fade to the PressedColor\" (#3175) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIf you long press on a native Android button or a default Xamarin.Forms Button on Android, you'll see a slow fade to the PressedColor. Since the Drawable is swapped out on Xamarin.Forms Buttons where the BackgroundColor (or Border, CornerRadius, etc.) are changed, this pressed state animation is not handled.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Button. Change the background color to something other than Default.\r\n2. Long press the Button (tap and hold).\r\n\r\n### Expected Behavior\r\n\r\nColor of Button (and surrounding shadow) should fade to a darker luminosity.\r\n\r\n### Actual Behavior\r\n\r\nColor of Button is immediately darker luminosity, no fade.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1+\r\n- Last known good version: None\r\n\r\n### Screenshots\r\n\r\nTODO\r\n\r\n### Reproduction Link\r\n\r\nUse Issue1935 or Issue2664 in Control Gallery.\r\n"},{"Id":"7888611009","Type":"IssuesEvent","CreatedAt":"2018-06-27T22:54:52","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1648","RelatedDescription":"Closed issue \"MasterDetailPage throws ArgumentOutOfRangeException\" (#1648) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen adding a MasterDetailPage inside a NavigationPage, it throws an Exception upon loading\r\n\r\n### Steps to Reproduce\r\nStart the modified version of the official example at:\r\nhttps://github.com/TiBall/xamarin-forms-samples/tree/MasterDetailNavigationException/Navigation/MasterDetailPage\r\n\r\n### Expected Behavior\r\nMasterDetailPage renders with no Exception\r\n\r\n### Actual Behavior\r\nApplication terminates because of this error inside the Xamarin Control\r\n\"System.ArgumentOutOfRangeException: Non-negative number required.\\r\\… \r\n…nParameter name: height\\r\\n at Windows.Foundation.Size..ctor(Double width, Double height)\\r\\n at Xamarin.Forms.Platform.UWP.MasterDetailControl.get_MasterSize()\\r\\n at Xamarin.Forms.Platform.UWP.MasterDetailPageRenderer.UpdateBounds()\\r\\n at Xamarin.Forms.Platform.UWP.MasterDetailPageRenderer.OnControlLoaded(Object sender, RoutedEventArgs routedEventArgs)\"\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: VS 2017 v 15.5.3\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  10.0.10586.0 and higher\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: \"Xamarin.Forms\": \"2.5.0.91635\"\r\n- Affected Devices: Windows\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nhttps://github.com/TiBall/xamarin-forms-samples/commit/f79e75114e970f07ddcf7dfc5df85571c48af67b\r\n\r\n"},{"Id":"7888567049","Type":"PullRequestEvent","CreatedAt":"2018-06-27T22:41:17","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3164","RelatedDescription":"Merged pull request \"[build] require .NET framework >= 4.7\" (#3164) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThrow a meaningful error on old .NET Framework\r\n"},{"Id":"7888539895","Type":"PullRequestEvent","CreatedAt":"2018-06-27T22:33:13","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3174","RelatedDescription":"Opened pull request \"[Android] Don't mess with the `Button.Padding` if the `Padding` property isn't set\" (#3174) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#2426 added the `Button.Padding` property, but on Android, it was removing necessary padding when the value wasn't set. This checks to ensure that there is a value set before it adjusts it.\r\n\r\n#### Before this change:\r\n![screenshot_1530138753](https://user-images.githubusercontent.com/7827070/42003246-53382aee-7a1f-11e8-877c-81167af7d026.png)\r\n\r\n#### After this change: (should match screenshots in #1570)\r\n![screenshot_1530138641](https://user-images.githubusercontent.com/7827070/42003229-39886848-7a1f-11e8-97ab-76dcee7cb85b.png)\r\n\r\n### Issues Resolved ###\r\n\r\nunreported\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7888879540","Type":"IssuesEvent","CreatedAt":"2018-06-28T00:29:02","Actor":"j0971780723","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4355","RelatedDescription":"Opened issue \"Mmm\" (#4355) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7888682536","Type":"PullRequestEvent","CreatedAt":"2018-06-27T23:17:45","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4354","RelatedDescription":"Opened pull request \"[CloudKit] Update bindings to Xcode 10 Beta 1, nothing in beta 2\" (#4354) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7887690088","Type":"PullRequestEvent","CreatedAt":"2018-06-27T19:21:19","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4343","RelatedDescription":"Merged pull request \"Add CoreAudio 10b1\" (#4343) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":34,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":33,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":84,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2018-06-28T05:30:56.1167578Z","RunDurationInMilliseconds":4534}