{"Data":{"Blog":{"FeedItems":[{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10094574655","Type":"PullRequestEvent","CreatedAt":"2019-07-27T00:07:16","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7383","RelatedDescription":"Merged pull request \"[Hotfix] Don't throw when adding a package owner without a message\" (#7383) at NuGet/NuGetGallery","RelatedBody":"https://github.com/NuGet/NuGetGallery/issues/7382"},{"Id":"10094548069","Type":"PullRequestEvent","CreatedAt":"2019-07-26T23:57:00","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7383","RelatedDescription":"Opened pull request \"[Hotfix] Don't throw when adding a package owner without a message\" (#7383) at NuGet/NuGetGallery","RelatedBody":"https://github.com/NuGet/NuGetGallery/issues/7382"},{"Id":"10094546208","Type":"IssuesEvent","CreatedAt":"2019-07-26T23:56:14","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7382","RelatedDescription":"Opened issue \"Adding an owner without a message fails when sending email\" (#7382) at NuGet/NuGetGallery","RelatedBody":"It appears that adding owners without a message is failing to send emails on PROD.\r\nFortunately the owner is still being added, but the email is failing to send.\r\n\r\n# Reproduction steps:\r\n1. Go to the manage page for a package you own.\r\n2. In the owners section, enter a username, leave the \"message\" field blank, and submit.\r\n\r\nExpected:\r\n- email is sent\r\n- owner shows up in list on page as \"pending\"\r\n\r\nActual:\r\n\"Internal Server Error\" is displayed on page"},{"Id":"10094264722","Type":"IssuesEvent","CreatedAt":"2019-07-26T22:24:43","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7381","RelatedDescription":"Opened issue \"[Azure Search] Increase tag field weight\" (#7381) at NuGet/NuGetGallery","RelatedBody":"Try to improve the following queries:\n\n* aad -> microsoft.identitymodel.clients.activedirectory\n* excel -> EPPlus\n* mail -> SendGrid, Mailkit\n* ml.net ->Microsoft.ML\n* orm -> Dapper\n* rx -> System.Reactive\n* mysql -> MySqlConnector"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10099083405","Type":"IssuesEvent","CreatedAt":"2019-07-28T20:31:18","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8383","RelatedDescription":"Closed issue \"IVsPackageSourceProvider.GetSources(…) has ill-defined exception behavior\" (#8383) at NuGet/Home","RelatedBody":"While `NuGet.VisualStudio.IVsPackageSourceProvider.GetSources(…)` has [no formally defined throwable exceptions](https://github.com/NuGet/Home/issues/8380), [this comment](https://github.com/dotnet/roslyn/pull/21066#issuecomment-317567025) is the best definition so far.\r\n\r\nThis has led to internal issues 468626 and 733658.\r\n"},{"Id":"10098993948","Type":"IssuesEvent","CreatedAt":"2019-07-28T19:45:22","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8397","RelatedDescription":"Opened issue \"Test:  NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginReturnsNoCredentials_FallBackToConsoleProvider is flaky\" (#8397) at NuGet/Home","RelatedBody":"Test `NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginReturnsNoCredentials_FallBackToConsoleProvider` is flaky.\r\n```\r\nSystem.TimeoutException : NuGet.exe timed out: push E:\\\\A\\\\_work\\\\235\\\\s\\\\.test\\\\work\\\\21ba1234\\\\3c190f51\\\\testPackage1.1.1.0.nupkg -Source http://localhost:50231/65d23f64-0663-43b5-80e5-f01d69bbac4a/nuget\r\n   at NuGet.Test.Utility.CommandRunner.Run(String process, String workingDirectory, String arguments, Boolean waitForExit, Int32 timeOutInMilliseconds, Action`1 inputAction, Boolean shareProcessObject, IDictionary`2 environmentVariables) in E:\\A\\_work\\235\\s\\test\\TestUtilities\\Test.Utility\\CommandRunner.cs:line 88\r\n   at NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginReturnsNoCredentials_FallBackToConsoleProvider() in E:\\A\\_work\\235\\s\\test\\NuGet.Clients.Tests\\NuGet.CommandLine.Test\\NuGetPushCommandTest.cs:line 1060\r\n```"},{"Id":"10098962936","Type":"IssuesEvent","CreatedAt":"2019-07-28T19:29:34","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8396","RelatedDescription":"Opened issue \"Test:  NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginTimesOut_ThrowsAndDoesNotFallBackToConsoleProvider is flaky\" (#8396) at NuGet/Home","RelatedBody":"Test `NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginTimesOut_ThrowsAndDoesNotFallBackToConsoleProvider` is flaky.\r\n```\r\nSystem.ComponentModel.Win32Exception : Access is denied\r\n   at System.Diagnostics.Process.Kill()\r\n   at NuGet.Test.Utility.CommandRunner.Run(String process, String workingDirectory, String arguments, Boolean waitForExit, Int32 timeOutInMilliseconds, Action`1 inputAction, Boolean shareProcessObject, IDictionary`2 environmentVariables) in E:\\A\\_work\\235\\s\\test\\TestUtilities\\Test.Utility\\CommandRunner.cs:line 84\r\n   at NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginTimesOut_ThrowsAndDoesNotFallBackToConsoleProvider() in E:\\A\\_work\\235\\s\\test\\NuGet.Clients.Tests\\NuGet.CommandLine.Test\\NuGetPushCommandTest.cs:line 1265\r\n```"},{"Id":"10098595057","Type":"IssuesEvent","CreatedAt":"2019-07-28T16:21:46","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8395","RelatedDescription":"Opened issue \"Test:  NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginTimesOut_ThrowsAndDoesNotFallBackToConsoleProvider is flaky\" (#8395) at NuGet/Home","RelatedBody":"Test `NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginTimesOut_ThrowsAndDoesNotFallBackToConsoleProvider` is flaky.\r\n```\r\nSystem.TimeoutException : NuGet.exe timed out: push E:\\\\A\\\\_work\\\\279\\\\s\\\\.test\\\\work\\\\e1971ebd\\\\2ac4581d\\\\testPackage1.1.1.0.nupkg -Source http://localhost:50231/c5f508e4-7619-48ef-a899-cdccdc7d084e/nuget\r\n   at NuGet.Test.Utility.CommandRunner.Run(String process, String workingDirectory, String arguments, Boolean waitForExit, Int32 timeOutInMilliseconds, Action`1 inputAction, Boolean shareProcessObject, IDictionary`2 environmentVariables) in E:\\A\\_work\\279\\s\\test\\TestUtilities\\Test.Utility\\CommandRunner.cs:line 88\r\n   at NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_WhenPluginTimesOut_ThrowsAndDoesNotFallBackToConsoleProvider() in E:\\A\\_work\\279\\s\\test\\NuGet.Clients.Tests\\NuGet.CommandLine.Test\\NuGetPushCommandTest.cs:line 1265\r\n```\r\nFrom test history it appears that the test is consistently near its 10 second timeout.\r\n\r\n![image](https://user-images.githubusercontent.com/12734758/62009909-0f452800-b119-11e9-88a6-bd7c823389d4.png)\r\n"},{"Id":"10098563542","Type":"IssuesEvent","CreatedAt":"2019-07-28T16:06:06","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7891","RelatedDescription":"Closed issue \"Test:  NetCoreProjectExecuteInitScriptOnlyOnce test consistently fails\" (#7891) at NuGet/Home","RelatedBody":"```\r\nSystem.Management.Automation.PSInvalidOperationException: The WriteObject and WriteError methods cannot be called from outside the overrides of the BeginProcessing, ProcessRecord, and EndProcessing methods, and they can only be called from within the same thread. Validate that the cmdlet makes these calls correctly, or contact Microsoft Customer Support Services.\r\nat System.Management.Automation.MshCommandRuntime.ThrowIfWriteNotPermitted(Boolean needsToWriteToPipeline)\r\nat System.Management.Automation.MshCommandRuntime.DoWriteError(Object obj)\r\nat System.Security.SecurityContext.Run(SecurityContext securityContext, ContextCallback callback, Object state)\r\nat System.Management.Automation.MshCommandRuntime.WriteError(ErrorRecord errorRecord, Boolean overrideInquire)\r\nat System.Management.Automation.MshCommandRuntime.WriteError(ErrorRecord errorRecord)\r\nat System.Management.Automation.Cmdlet.WriteError(ErrorRecord errorRecord)\r\nat NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.HandleError(ErrorRecord errorRecord, Boolean terminating)\r\nat NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.HandleException(Exception exception, Boolean terminating, String errorId, ErrorCategory category, Object target)\r\nat NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.WriteError(Exception exception)\r\nat NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.WriteError(String message)\r\nat NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.LogCore(MessageLevel level, String formattedMessage)\r\nat NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.WaitAndLogPackageActions()\r\nat NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand.<ProcessRecordCore>b__7_1()\r\nat NuGet.PackageManagement.VisualStudio.NuGetLockService.<>c__DisplayClass9_0`1.<<ExecuteNuGetOperationAsync>b__2>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.VisualStudio.Threading.JoinableTask.<JoinAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.VisualStudio.Threading.JoinableTask`1.<JoinAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.VisualStudio.NuGetLockService.<>c__DisplayClass9_0`1.<<ExecuteNuGetOperationAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.VisualStudio.Threading.JoinableTask.<JoinAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.VisualStudio.Threading.JoinableTask`1.<JoinAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.VisualStudio.NuGetLockService.<ExecuteNuGetOperationAsync>d__9`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand.<<ProcessRecordCore>b__7_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\nat NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand.ProcessRecordCore()\r\nat NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.ProcessRecord() \r\n```"},{"Id":"10098537003","Type":"IssuesEvent","CreatedAt":"2019-07-28T15:54:08","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8394","RelatedDescription":"Opened issue \"Test:  Dotnet.Integration.Test.PackCommandTests.PackCommand_PackProject_PackageReferenceFloatingVersionRange is flaky\" (#8394) at NuGet/Home","RelatedBody":"Test Dotnet.Integration.Test.PackCommandTests.PackCommand_PackProject_PackageReferenceFloatingVersionRange is flaky.\r\n```\r\n  [xUnit.net 00:49:25.5928107]     Dotnet.Integration.Test.PackCommandTests.PackCommand_PackProject_PackageReferenceFloatingVersionRange [FAIL]\r\n    X Dotnet.Integration.Test.PackCommandTests.PackCommand_PackProject_PackageReferenceFloatingVersionRange [7s 885ms]\r\nEXEC : warning Message:  [C:\\git\\NuGet.Client\\build\\build.proj]\r\n     Restore failed with following log information :\r\n     Retrying 'FindPackagesByIdAsyncCore' for source 'https://test3.net/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0'.\r\n    The SSL connection could not be established, see inner exception.\r\n      The remote certificate is invalid according to the validation procedure.\r\n    Retrying 'FindPackagesByIdAsyncCore' for source 'https://test3.net/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0'.\r\n    The SSL connection could not be established, see inner exception.\r\n      The remote certificate is invalid according to the validation procedure.\r\nC:\\git\\NuGet.Client\\.test\\work\\0e604d6a\\f2a85a0e\\sdk\\2.2.301-preview-010200\\NuGet.targets(123,5): warning : Failed to retrieve information about 'Newtonsoft.Json' from remote source 'https://test3.net/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0'. [C:\\git\\NuGet.Client\\.test\\work\\2ce3c1b1\\faf0586b\\ClassLibrary1\\ClassLibrary1.csproj] [C:\\git\\NuGet.Client\\build\\build.proj]\r\nC:\\git\\NuGet.Client\\.test\\work\\0e604d6a\\f2a85a0e\\sdk\\2.2.301-preview-010200\\NuGet.targets(123,5): warning : The SSL connection could not be established, see inner exception. [C:\\git\\NuGet.Client\\.test\\work\\2ce3c1b1\\faf0586b\\ClassLibrary1\\\r\nClassLibrary1.csproj] [C:\\git\\NuGet.Client\\build\\build.proj]\r\nC:\\git\\NuGet.Client\\.test\\work\\0e604d6a\\f2a85a0e\\sdk\\2.2.301-preview-010200\\NuGet.targets(123,5): warning : The remote certificate is invalid according to the validation procedure. [C:\\git\\NuGet.Client\\.test\\work\\2ce3c1b1\\faf0586b\\ClassLi\r\nbrary1\\ClassLibrary1.csproj] [C:\\git\\NuGet.Client\\build\\build.proj]\r\n\r\n\r\n  Expected: True\r\n  Actual:   False\r\n    Stack Trace:\r\n     at Dotnet.Integration.Test.MsbuildIntegrationTestFixture.RestoreProjectOrSolution(String workingDirectory, String fileName, String args) in C:\\git\\NuGet.Client\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\MsbuildIntegrationTestFixture.cs:line 152\r\n     at Dotnet.Integration.Test.MsbuildIntegrationTestFixture.RestoreProject(String workingDirectory, String projectName, String args) in C:\\git\\NuGet.Client\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\MsbuildIntegrationTestFixture.cs:line 137\r\n     at Dotnet.Integration.Test.PackCommandTests.PackCommand_PackProject_PackageReferenceFloatingVersionRange() in C:\\git\\NuGet.Client\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\PackCommandTests.cs:line 251\r\n```\r\n\r\nAs part of fixing this we should replace external URL's (modulo nuget.org) with local test URL's.  For example, this test hits https://test3.net, which is easily mockable with a local test endpoint.\r\n\r\n"},{"Id":"10098506344","Type":"IssuesEvent","CreatedAt":"2019-07-28T15:39:50","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8393","RelatedDescription":"Opened issue \"Test:  NuGet.PackageManagement.UI.Test.PackageItemLoaderTests.EmitsSearchTelemetryEvents is flaky\" (#8393) at NuGet/Home","RelatedBody":"Test `NuGet.PackageManagement.UI.Test.PackageItemLoaderTests.EmitsSearchTelemetryEvents` is flaky.\r\n```\r\nNuGet.PackageManagement.UI.Test.PackageItemLoaderTests.EmitsSearchTelemetryEvents [FAIL]\r\n  Assert.Equal() Failure\r\n  Expected: 4\r\n  Actual:   5\r\n  Stack Trace:\r\n    C:\\git\\NuGet.Client\\test\\NuGet.Clients.Tests\\NuGet.PackageManagement.UI.Test\\PackageItemLoaderTests.cs(107,0): at NuGet.PackageManagement.UI.Test.PackageItemLoaderTests.<EmitsSearchTelemetryEvents>d__2.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"},{"Id":"10098458908","Type":"IssuesEvent","CreatedAt":"2019-07-28T15:17:54","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8392","RelatedDescription":"Opened issue \"Test:  NuGet.Protocol.Tests.HttpRetryHandlerTests.HttpRetryHandler_TimesOutDownload is flaky\" (#8392) at NuGet/Home","RelatedBody":"`NuGet.Protocol.Tests.HttpRetryHandlerTests.HttpRetryHandler_TimesOutDownload` is flaky.\r\n```\r\nNuGet.Protocol.Tests.HttpRetryHandlerTests.HttpRetryHandler_TimesOutDownload [FAIL]\r\n  Assert.Throws() Failure\r\n  Expected: typeof(System.IO.IOException)\r\n  Actual:   (No exception was thrown)\r\n  Stack Trace:\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n    C:\\git\\NuGet.Client\\test\\NuGet.Core.Tests\\NuGet.Protocol.Tests\\HttpSource\\HttpRetryHandlerTests.cs(360,0): at NuGet.Protocol.Tests.HttpRetryHandlerTests.<HttpRetryHandler_TimesOutDownload>d__13.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"},{"Id":"10098443139","Type":"IssuesEvent","CreatedAt":"2019-07-28T15:10:35","Actor":"asherber","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8391","RelatedDescription":"Opened issue \"nuget.exe add doesn't recognize named sources\" (#8391) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.1.0.6013\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1709 (16299.1217)\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. `nuget sources add -name local -source c:\\mypackages`\r\n2. `nuget add mypackage.nupkg -source local`\r\n\r\nAt this point, I would expect to see `mypackage.nupkg` installed under `c:\\mypackages`, but instead it's installed under a new directory called `local` under my current folder.\r\n\r\n`nuget list -source local` returns no packages (because it's looking at the source named `local`)\r\n\r\n### Verbose logs\r\n```\r\nλ nuget add -source local mypackage.1.0.nupkg -verbosity detailed\r\nNuGet Version: 5.1.0.6013\r\nAcquiring lock for the installation of mypackage 1.0\r\nAcquired lock for the installation of mypackage 1.0\r\nInstalling mypackage 1.0\r\nCompleted installation of mypackage 1.0\r\nSuccessfully added package 'mypackage.1.0.nupkg' to feed 'local'.\r\n```"},{"Id":"10095378393","Type":"IssuesEvent","CreatedAt":"2019-07-27T08:17:10","Actor":"maartenba","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8390","RelatedDescription":"Opened issue \"Revert \"public -> internal\" change in PluginProcess\" (#8390) at NuGet/Home","RelatedBody":"Tracking issue for Revert \"public -> internal\" change in PluginProcess NuGet/NuGet.Client#2954"},{"Id":"10095273911","Type":"IssuesEvent","CreatedAt":"2019-07-27T07:15:01","Actor":"neville-nazerane","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8389","RelatedDescription":"Opened issue \"csproj equivalent to licence \" (#8389) at NuGet/Home","RelatedBody":"I usually push a nuget by using \r\n\r\n    dotnet pack -c release\r\n\r\nfollowed by:\r\n\r\n    nuget push <package> -source nuget.org\r\n\r\nToday suddenly I got a 403 error when trying to push. After spending a good amount of time creating api keys and restarting, I tried uploading manually from nuget.org. This shows me the error \r\n\r\n> All published packages should have license information specified.\r\n\r\nThe documentation says to use <license type=\"file\">license\\license.txt</license> in the .nuspec. I prefer not to have to update the .nuspec everytime and update the csproj file instead. I can't find any documentation pointing to what is to be used in the .csproj in order to generate this license tag. I have tried :\r\n\r\n     <PackageLicense>none</PackageLicense>\r\n      <License>none</License>\r\n\r\nTrying `type=\"file\"` crashes the project. I have also tried adding a License.txt file. "},{"Id":"10094690202","Type":"IssuesEvent","CreatedAt":"2019-07-27T01:03:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8388","RelatedDescription":"Opened issue \"Clarify TargetFramework vs TargetFrameworks vs TargetFrameworkMoniker across the NUGet codebase.\" (#8388) at NuGet/Home","RelatedBody":"Discussion in https://github.com/NuGet/Home/issues/7717#issuecomment-515638800. \r\n\r\n//cc @davkean @zivkan @rrelyea "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-07-29T05:30:45.1441973Z","RunDurationInMilliseconds":2912}