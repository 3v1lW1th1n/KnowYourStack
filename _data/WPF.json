{"Data":{"GitHub":{"Issues":[{"Id":"509712425","IsPullRequest":false,"CreatedAt":"2019-10-21T03:35:35","Actor":"ThomasGoulet73","Number":"2070","RawContent":null,"Title":"Error MSB4044 on build","State":"open","Body":"I have recently cloned the wpf project for potentially making PRs, but as I was building the project using build.cmd, I had a MSB4044 error :\r\n\r\nC:\\Users\\\\{Username}\\Documents\\GitHub\\Wpf\\eng\\WpfArcadeSdk\\tools\\InjectModuleInitializer.targets(372,5): error MSB4044:\r\n The \"ILDasmTask\" task was not given a value for the required parameter \"ILDAsm\". [C:\\Users\\\\{Username}\\Documents\\GitHu\r\nb\\Wpf\\src\\Microsoft.DotNet.Wpf\\src\\PresentationCore\\PresentationCore.csproj].\r\n\r\nI tried building the CoreFX project and had no problems.\r\n\r\nI didn't really know where to report those kind of issues so sorry for the inconvenience if it wasn't at the right place.\r\n\r\nThank you !","Url":"https://github.com/dotnet/wpf/issues/2070","RelatedDescription":"Open issue \"Error MSB4044 on build\" (#2070)"},{"Id":"509586963","IsPullRequest":true,"CreatedAt":"2019-10-20T12:48:27","Actor":"dotnet-maestro[bot]","Number":"2068","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191019.8\r\n- **Date Produced**: 10/20/2019 12:13 AM\r\n- **Commit**: 637232344881c144efc1567982562b5c46964467\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19519.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2068","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2068)"},{"Id":"509590308","IsPullRequest":false,"CreatedAt":"2019-10-20T12:44:09","Actor":"mysteryx93","Number":"2069","RawContent":null,"Title":"Trigger Binding to Child Control Not Working","State":"open","Body":"I posted about this elsewhere but I'll report it here since it looks like a bug in WPF (using .NET 4.8)\r\n\r\nI have this on a WPF Window\r\n\r\n    <local:TestControl>\r\n        <local:TestHost />\r\n    </local:MediaPlayer>\r\n\r\nClasses defined like this\r\n\r\n    public class TestControl : ContentControl\r\n    {\r\n        static TestControl()\r\n        {\r\n            DefaultStyleKeyProperty.OverrideMetadata(typeof(TestControl), new FrameworkPropertyMetadata(typeof(TestControl)));\r\n            ContentProperty.OverrideMetadata(typeof(TestControl), new FrameworkPropertyMetadata(ContentChanged, CoerceContent));\r\n        }\r\n    \r\n        private static void ContentChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            var P = d as TestControl;\r\n            P.Host = e.NewValue as TestHost;\r\n        }\r\n    \r\n        private static object CoerceContent(DependencyObject d, object baseValue) => baseValue as TestHost;\r\n    \r\n        public static readonly DependencyPropertyKey HostProperty = DependencyProperty.RegisterReadOnly(\"Host\", typeof(TestHost), typeof(TestControl), null);\r\n        public TestHost Host { get => (TestHost)GetValue(HostProperty.DependencyProperty); protected set => SetValue(HostProperty, value); }\r\n    }\r\n    \r\n    public class TestHost : Control\r\n    {\r\n        static TestHost()\r\n        {\r\n            DefaultStyleKeyProperty.OverrideMetadata(typeof(TestHost), new FrameworkPropertyMetadata(typeof(TestHost)));\r\n        }\r\n    \r\n        public static readonly DependencyProperty IsPlayingProperty = DependencyProperty.Register(\"IsPlaying\", typeof(bool), typeof(TestHost), \r\n            new PropertyMetadata(true));\r\n        public bool IsPlaying { get => (bool)GetValue(IsPlayingProperty); set => SetValue(IsPlayingProperty, value); }\r\n    }\r\n\r\nThen in Generic.xaml\r\n\r\n    <Style TargetType=\"{x:Type local:TestControl}\">\r\n        <Setter Property=\"Template\">\r\n            <Setter.Value>\r\n                <ControlTemplate TargetType=\"{x:Type local:TestControl}\">\r\n                    <Border>\r\n                        <Grid>\r\n                            <ContentPresenter Content=\"{TemplateBinding Content}\" />\r\n                            <Button x:Name=\"MyButton\" Content=\"False\" />\r\n                        </Grid>\r\n                    </Border>\r\n                    <ControlTemplate.Triggers>\r\n                        <DataTrigger Value=\"True\" Binding=\"{Binding Host.IsPlaying, RelativeSource={RelativeSource TemplatedParent}}\">\r\n                            <Setter TargetName=\"MyButton\" Property=\"Content\" Value=\"True\" />\r\n                        </DataTrigger>\r\n                    </ControlTemplate.Triggers>\r\n                </ControlTemplate>\r\n            </Setter.Value>\r\n        </Setter>\r\n    </Style>\r\n\r\nIt should display \"true\" in the button, but remains \"false\".\r\n\r\nSetting a breakpoint when setting Host, it does get called and Host does get set correctly.\r\n\r\nI'm getting this in the debug log after changing VS option to display all binding debug info.\r\n\r\n    System.Windows.Data Information: 41 : BindingExpression path error: 'Host' property not found for 'object' because data item is null.  This could happen because the data provider has not produced any data yet. BindingExpression:Path=Host.IsPlaying; DataItem=null; target element is 'TestControl' (Name=''); target property is 'NoTarget' (type 'Object')\r\n    System.Windows.Data Information: 20 : BindingExpression cannot retrieve value due to missing information. BindingExpression:Path=Host.IsPlaying; DataItem=null; target element is 'TestControl' (Name=''); target property is 'NoTarget' (type 'Object')\r\n    System.Windows.Data Information: 21 : BindingExpression cannot retrieve value from null data item. This could happen when binding is detached or when binding to a Nullable type that has no value. BindingExpression:Path=Host.IsPlaying; DataItem=null; target element is 'TestControl' (Name=''); target property is 'NoTarget' (type 'Object')\r\n    System.Windows.Data Information: 20 : BindingExpression cannot retrieve value due to missing information. BindingExpression:Path=Host.IsPlaying; DataItem=null; target element is 'TestControl' (Name=''); target property is 'NoTarget' (type 'Object')\r\n    System.Windows.Data Information: 21 : BindingExpression cannot retrieve value from null data item. This could happen when binding is detached or when binding to a Nullable type that has no value. BindingExpression:Path=Host.IsPlaying; DataItem=null; target element is 'TestControl' (Name=''); target property is 'NoTarget' (type 'Object')\r\n    System.Windows.Data Information: 10 : Cannot retrieve value using the binding and no valid fallback value exists; using default instead. BindingExpression:Path=Host.IsPlaying; DataItem=null; target element is 'TestControl' (Name=''); target property is 'NoTarget' (type 'Object')\r\n\r\nNote that creating a normal binding outside the trigger does work\r\n\r\n    <Button x:Name=\"MyButton\" Content=\"{Binding Host.IsPlaying, RelativeSource={RelativeSource TemplatedParent}}\" />\r\n\r\nHow can I get this trigger binding to work?\r\n\r\nWell... here's \"one\" way\r\n\r\n    <Style TargetType=\"{x:Type local:TestControl}\">\r\n        <Setter Property=\"Template\">\r\n            <Setter.Value>\r\n                <ControlTemplate TargetType=\"{x:Type local:TestControl}\">\r\n                    <Border>\r\n                        <Grid>\r\n                            <ContentPresenter Content=\"{TemplateBinding Content}\" />\r\n                            <Button x:Name=\"MyButton\" Content=\"False\" Height=\"50\" Width=\"100\" />\r\n                            <TextBox x:Name=\"IsPlayingHidden\" Visibility=\"Hidden\" Text=\"{Binding Host.IsPlaying, RelativeSource={RelativeSource TemplatedParent}}\" />\r\n                        </Grid>\r\n                    </Border>\r\n                    <ControlTemplate.Triggers>\r\n                        <Trigger SourceName=\"IsPlayingHidden\" Property=\"Text\" Value=\"True\">\r\n                            <Setter TargetName=\"MyButton\" Property=\"Content\" Value=\"True\" />\r\n                        </Trigger>\r\n                    </ControlTemplate.Triggers>\r\n                </ControlTemplate>\r\n            </Setter.Value>\r\n        </Setter>\r\n    </Style>\r\n\r\nThis works, but it's ugly.\r\n\r\nIt really looks like a bug in the framework.","Url":"https://github.com/dotnet/wpf/issues/2069","RelatedDescription":"Open issue \"Trigger Binding to Child Control Not Working\" (#2069)"},{"Id":"509442924","IsPullRequest":true,"CreatedAt":"2019-10-19T13:31:56","Actor":"dotnet-maestro[bot]","Number":"2067","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191018.9\r\n- **Date Produced**: 10/19/2019 12:23 AM\r\n- **Commit**: 4b2da5152c89443b4bc9e247fa1ee19452757cba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19518.9\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2067","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2067)"},{"Id":"509440815","IsPullRequest":true,"CreatedAt":"2019-10-19T13:18:54","Actor":"dotnet-maestro[bot]","Number":"2066","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191018.2\r\n- **Date Produced**: 10/18/2019 9:12 PM\r\n- **Commit**: f59f1ebe9b293ad523d3bfa4e5cffc663708ef11\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19518.2\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2066","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2066)"},{"Id":"508392357","IsPullRequest":false,"CreatedAt":"2019-10-19T09:03:27","Actor":"AmierCheng","Number":"2057","RawContent":null,"Title":"Fault module name:\twpfgfx_cor3.dll","State":"closed","Body":"* .NET Core Version: 3.0\r\n* Windows version: window server R2 enterprise\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n 问题签名:\r\n  问题事件名称:\tAPPCRASH\r\n  应用程序名:\tWpfApp1.exe\r\n  应用程序版本:\t1.0.0.0\r\n  应用程序时间戳:\t5d7bb0cb\r\n  故障模块名称:\twpfgfx_cor3.dll\r\n  故障模块版本:\t4.800.19.46238\r\n  故障模块时间戳:\t5d7ab8ec\r\n  异常代码:\tc000001d\r\n  异常偏移:\t00158e19\r\n  OS 版本:\t6.1.7601.2.1.0.274.10\r\n  区域设置 ID:\t2052\r\n  其他信息 1:\t0a9e\r\n  其他信息 2:\t0a9e372d3b4ad19135b953a78882e789\r\n  其他信息 3:\t0a9e\r\n  其他信息 4:\t0a9e372d3b4ad19135b953a78882e789\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\n **Expected behavior:**\r\n \r\n **Minimal repro:**\r\n\r\n\r\n<hr/>\r\n\r\n_edit by @vatsan-madhavan - adding a machine translation_\r\n```\r\nProblem Signature: \r\nProblem Event Name: APPCRASH \r\nApplication Name: WpfApp1.exe \r\nApplication Version: 1.0.0.0 \r\nApplication Timestamp: 5d7bb0cb \r\nFault Module Name: wpfgfx_cor3.dll \r\nFault Module Version: 4.800.19.46238 \r\nFault Module \r\nTimestamp: 5d7ab8ec \r\nException Code : c000001d \r\nAbnormal offset: 00158e19 \r\nOS Version: 6.1.7601.2.1.0.274.10 \r\nLocale ID: 2052 \r\nOther information 1: 0a9e \r\nOther information 2: 0a9e372d3b4ad19135b953a78882e789 \r\nOther information 3: 0a9e \r\nOther information 4: 0a9e372d3b4ad19135b953a78882e789\r\n```","Url":"https://github.com/dotnet/wpf/issues/2057","RelatedDescription":"Closed issue \"Fault module name:\twpfgfx_cor3.dll\" (#2057)"},{"Id":"506784712","IsPullRequest":false,"CreatedAt":"2019-10-18T20:22:37","Actor":"scalablecory","Number":"2045","RawContent":null,"Title":"System.Componentmodel.IcollectionView not available for .net core 3.0","State":"closed","Body":"_From @ebolefeysot on Wednesday, October 9, 2019 12:29:25 PM_\r\n\r\nDespite what documentation on page https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.icollectionview?view=netcore-3.0 claims, this interface is not found in the nuget package for .net core 3.0.\r\n\r\nMicrosoft.Windows.SDK.Contracts offers an ICollectionView interface on .net core, but unfortunatly, it is not complete: Filter and refresh are not implemented.\r\n\r\nSample to compile:\r\n```\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            ICollectionView v =new CollectionViewSource().View;\r\n            v.Filter = null;\r\n            v.Refresh();\r\n        }\r\n    }\r\n```\r\n\r\n_Copied from original issue: dotnet/core#3578_","Url":"https://github.com/dotnet/wpf/issues/2045","RelatedDescription":"Closed issue \"System.Componentmodel.IcollectionView not available for .net core 3.0\" (#2045)"},{"Id":"509224055","IsPullRequest":true,"CreatedAt":"2019-10-18T19:37:17","Actor":"rladuca","Number":"2065","RawContent":null,"Title":"Adding more guards in configure-toolset.ps1 to fix issues in publish steps","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/2065","RelatedDescription":"Closed or merged PR \"Adding more guards in configure-toolset.ps1 to fix issues in publish steps\" (#2065)"},{"Id":"509036895","IsPullRequest":true,"CreatedAt":"2019-10-18T13:13:24","Actor":"dotnet-maestro[bot]","Number":"2064","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191017.8\r\n- **Date Produced**: 10/17/2019 10:37 PM\r\n- **Commit**: b47a997282b4d347cb079d26515ea4147e2ac548\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19517.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19517.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19517.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19517.8\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19517.8\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2064","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2064)"},{"Id":"508977063","IsPullRequest":false,"CreatedAt":"2019-10-18T09:54:47","Actor":"darcome","Number":"2063","RawContent":null,"Title":"WPF3D improvements.","State":"open","Body":"Good Morning,\r\n\r\nI'd like to know if there are any improvements planned for WPF3D to make it more similar to a modern 3D engine.\r\n\r\nThanks in advance","Url":"https://github.com/dotnet/wpf/issues/2063","RelatedDescription":"Open issue \"WPF3D improvements.\" (#2063)"},{"Id":"508843253","IsPullRequest":false,"CreatedAt":"2019-10-18T04:11:31","Actor":"lindexi","Number":"2062","RawContent":null,"Title":"Add D3D11Image and D3D12Image to WPF","State":"open","Body":"I find D3D11Image in [microsoft/WPFDXInterop: Repo for WPF DX Interop support](https://github.com/microsoft/WPFDXInterop ). But it is not maintained.\r\n\r\nCan we add D3D11Image and D3D12Image to WPF","Url":"https://github.com/dotnet/wpf/issues/2062","RelatedDescription":"Open issue \"Add D3D11Image and D3D12Image to WPF\" (#2062)"},{"Id":"507377697","IsPullRequest":true,"CreatedAt":"2019-10-18T03:53:15","Actor":"dotnet-maestro[bot]","Number":"2050","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191017.7\r\n- **Date Produced**: 10/17/2019 9:51 PM\r\n- **Commit**: 913c7241fada79d1d6a43d8b5693d806d4c2e6fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19517.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19517.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19517.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19517.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19517.7\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2050","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2050)"},{"Id":"507471363","IsPullRequest":true,"CreatedAt":"2019-10-18T03:39:23","Actor":"rladuca","Number":"2051","RawContent":null,"Title":"Update config toolset with guards","State":"closed","Body":"https://github.com/dotnet/arcade/pull/3975 changed the include semantics for configure_toolset.ps1.  It now is included from tools.ps1 instead of build.ps1 directly.  This means the properties variable may not be defined in some instances.  We need to guard against these call paths.","Url":"https://github.com/dotnet/wpf/pull/2051","RelatedDescription":"Closed or merged PR \"Update config toolset with guards\" (#2051)"},{"Id":"508801657","IsPullRequest":true,"CreatedAt":"2019-10-18T01:40:25","Actor":"dotnet-maestro[bot]","Number":"2061","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191017.7\r\n- **Date Produced**: 10/18/2019 1:10 AM\r\n- **Commit**: ef0fdeda487deb05f2864f11e97f047ed8620e9c\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-preview1.19517.7\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2061","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2061)"},{"Id":"506783071","IsPullRequest":false,"CreatedAt":"2019-10-17T17:53:06","Actor":"scalablecory","Number":"2044","RawContent":null,"Title":"WPF Core Xaml Designer RTL layout and custom fonts bugs","State":"closed","Body":"_From @mrNo0b on Thursday, October 10, 2019 8:26:32 PM_\r\n\r\nWhen I set **FlowDirection=\"RightToLeft\"** in MainWindow in WPF Core 3 app and when I add controls to the MainWindow they shows up in their correct locations in Designer but when I want to click on them to select, the selection highlight is in the opposite side of the window\r\n`VS 2019 16.3.4`\r\n\r\n![designerIssue](https://user-images.githubusercontent.com/12209347/65650408-5f564300-e013-11e9-9744-85ecd26f1a60.png)\r\n\r\nAnother issue that I have is that the designer don't support custom fonts, I added FontAwsome \r\n(_Font Awesome 5 Free-Solid-900.otf_) to my project and I use it in TextBlock for example:\r\n`<TextBlock Text=\"&#xF0C7;\" FontSize=\"16\" Foreground=\"White\"/>`\r\nwhen I run the app I can see the fonts but in Designer I can only see empty character boxes\r\n\r\n![bug2](https://user-images.githubusercontent.com/12209347/66603280-8769a880-ebb4-11e9-8304-e244491b88c1.png)\r\n\r\n_Copied from original issue: dotnet/core#3597_","Url":"https://github.com/dotnet/wpf/issues/2044","RelatedDescription":"Closed issue \"WPF Core Xaml Designer RTL layout and custom fonts bugs\" (#2044)"},{"Id":"508582316","IsPullRequest":false,"CreatedAt":"2019-10-17T17:20:49","Actor":"scalablecory","Number":"2058","RawContent":null,"Title":"Windows Forms default font is different between .Net Core and .Net Framework.","State":"closed","Body":"_From @Lily721 on Thursday, October 17, 2019 6:22:16 AM_\r\n\r\nSee the attached sample code, we got two buttons with same size, but there's slightly differences between their font, see my attached snapshot.\r\n\r\nMy environment:\r\nWin10 64-bit\r\n.Net Core 3.0.1\r\n\r\nIf you try this two samples under a Win7 32-bit machine, there will be a big difference between them.\r\n\r\nThis issue will cause a big problem for our product, for example, the text will extends or can not show completely with original control size if users migrate from .Net Framework to .Net Core.\r\n\r\n[WinFormApps.zip](https://github.com/dotnet/core/files/3737641/WinFormApps.zip)\r\n![snapshot](https://user-images.githubusercontent.com/33749874/66982677-3fcdaa00-f0e9-11e9-8e0d-75bd415017b3.png)\r\n![snapshot-win7](https://user-images.githubusercontent.com/33749874/66982687-465c2180-f0e9-11e9-92e9-b8a1d6e289c7.png)\r\n\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/core#3649_","Url":"https://github.com/dotnet/wpf/issues/2058","RelatedDescription":"Closed issue \"Windows Forms default font is different between .Net Core and .Net Framework.\" (#2058)"},{"Id":"508596664","IsPullRequest":true,"CreatedAt":"2019-10-17T16:54:51","Actor":"vatsan-madhavan","Number":"2060","RawContent":null,"Title":"Update Prerelease name from preview2 -> preview.2","State":"closed","Body":"Fixes #2059 \r\n\r\n/cc @wtgodbe, @mmitche ","Url":"https://github.com/dotnet/wpf/pull/2060","RelatedDescription":"Closed or merged PR \"Update Prerelease name from preview2 -> preview.2\" (#2060)"},{"Id":"508595489","IsPullRequest":false,"CreatedAt":"2019-10-17T16:54:08","Actor":"vatsan-madhavan","Number":"2059","RawContent":null,"Title":"Update Prerelease name from preview2 -> preview.2 in release/3.1 branch","State":"closed","Body":"For .NET Core 3.1 preview 2, update version to be in this format:  `[major].[minor].[patch]-[pre-release name].[pre-release revision].[buildnumber]`. \r\n\r\nFor example `3.1.0-preview.1.19506.1`. \r\n\r\nThis is agreed upon and being changed across all corefx repos. ","Url":"https://github.com/dotnet/wpf/issues/2059","RelatedDescription":"Closed issue \"Update Prerelease name from preview2 -> preview.2 in release/3.1 branch\" (#2059)"},{"Id":"508049278","IsPullRequest":false,"CreatedAt":"2019-10-16T19:22:01","Actor":"vsfeedback","Number":"2056","RawContent":null,"Title":"WPF Datagrid crashes the app after screen loaded","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/763608/wpf-datagrid-crashes-the-app-after-screen-loaded.html)._\n\n---\nHi, after implementing the AppCenter in my WPF application I recived a bug that causes the app to crash (not caused by the AppCenter it looks an old issue on my client's PC)\nthe following report is exported to AppCenter, I am using .net frameword 4.5 and my ID is VS2019 16.3.2\n\nSystem.ArgumentNullException: Value cannot be null. Parameter name: element\nSystem.Windows.Automation.Peers\nUIElementAutomationPeer.FromElement (UIElement element)\nSystem.Windows.Controls.DataGrid\nCellAutomationValueHolder.TrackValue ()\nSystem.Windows.Controls\nDataGrid.ReleaseCellAutomationValueHolders ()\nSystem.Windows.Controls\nDataGrid.OnExecutedCommitEdit (ExecutedRoutedEventArgs e)\nSystem.Windows.Input\nCommandBinding.OnExecuted (Object sender, ExecutedRoutedEventArgs e)\nSystem.Windows.Input\nCommandManager.ExecuteCommandBinding (Object sender, ExecutedRoutedEventArgs e, CommandBinding commandBinding)\n\ncrossover.local.xpos.productsPrism.Views.Common.Controls\nXPosStockInMatrixControl.HandleMainDataGridCellEditEnding (Object sender, DataGridCellEditEndingEventArgs e)\nSystem.Windows.Controls\nDataGrid.OnCellEditEnding (DataGridCellEditEndingEventArgs e)\n\nMS. Win32\nHwndWrapper.WndProc (IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\nMS. Win32\nHwndSubclass.DispatcherCallbackOperation (Object o)\nSystem.Windows.Threading\nExceptionWrapper.InternalRealCall (Delegate callback, Object args, Int32 numArgs)\n\nMS. Win32\nHwndSubclass.SubclassWndProc (IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\nMS. Win32\nUnsafeNativeMethods.DispatchMessage (MSG&amp; msg)\nSystem.Windows.Threading\nDispatcher.PushFrameImpl (DispatcherFrame frame)\n\ncrossover.local.xpos.productsPrism.ViewModels.MainProductViewModel\n&lt;&gt;c__DisplayClass772_0. &lt;EventAggregatorMessageProcess&gt;b__0 ()\nSystem.Windows.Threading\nExceptionWrapper.InternalRealCall (Delegate callback, Object args, Int32 numArgs)\n\nMS. Internal\nCulturePreservingExecutionContext.Run (CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\nSystem.Windows.Threading\nDispatcherOperation.Invoke ()\n\nMS. Win32\nHwndWrapper.WndProc (IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\nMS. Win32\nHwndSubclass.DispatcherCallbackOperation (Object o)\nSystem.Windows.Threading\nExceptionWrapper.InternalRealCall (Delegate callback, Object args, Int32 numArgs)\n\nMS. Win32\nHwndSubclass.SubclassWndProc (IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\nMS. Win32\nUnsafeNativeMethods.DispatchMessage (MSG&amp; msg)\nSystem.Windows.Threading\nDispatcher.PushFrameImpl (DispatcherFrame frame)\n\ncrossover.local.xpos.productsPrism\nApp.Main ()\n\n---\n### Original Comments\n\n#### Fiona Niu[MSFT] on 10/7/2019, 08:35 PM: \n\n<p>Thank you for taking the time to log this issue!<br>\nI’ve tried to reproduce and investigate using the description, and attachments already provided. Unfortunately those aren’t enough and more information is needed in order to investigate it further.<br>\nThe easiest way to provide all the information is to use the Visual Studio Feedback Tool. This will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace).<br>\nSince this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool:</p>\n<pre><code>• Open Visual Studio Feedback tool.\n• Click the banner letting you know that you have problems requesting your attention.\n• Click this problem from the list\n• Click &quot;View their request and respond&quot; from the problem details banner\n• Add a comment, in the Attachments/Record: click Start Recording\n• When the Steps Recorder tool appears, perform the steps that reproduce the problem.\n• When you're done, choose the Stop Record button.\n• Wait a few minutes for Visual Studio to collect and package the information that you recorded.\n• Submit. You will be able to see the comment on Developer Community. For security reasons, your files come directly to us and don't appear on Developer Community.\n</code></pre>\n<p>For the full instructions, please see: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info</a> . For information about what data is collected, see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect\">https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect</a></p>\n<p>We look forward to hearing from you!</p>\n\n#### Visual Studio Feedback System on 10/15/2019, 08:06 PM: \n\nWe will close this report in 7 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n#### Mustafa Shaban on 10/15/2019, 11:52 PM: \n\n<p>The problem is that this trace log is coming from the client's PC, and I am unable to reproduce this but on my device</p>\n\n#### Fiona Niu[MSFT] on 10/16/2019, 02:27 AM: \n\n<p>Thanks for your reply. We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/2056","RelatedDescription":"Open issue \"WPF Datagrid crashes the app after screen loaded\" (#2056)"},{"Id":"507101145","IsPullRequest":false,"CreatedAt":"2019-10-16T18:20:57","Actor":"typinging","Number":"2048","RawContent":null,"Title":"Why Content  Property can't display first '_' in CheckBox Control","State":"closed","Body":"* .NET Core Version: 3.0\r\n* Windows version: win 10 1809 (17763.475)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio: No\r\n \r\n **Problem description:** The Checkbox Control do not display first '_' in content property.\r\n like this: \r\n![QQ截图20191015164959](https://user-images.githubusercontent.com/16849935/66816160-2f43f500-ef6c-11e9-96d9-8c8d9e6912ad.png)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/2048","RelatedDescription":"Closed issue \"Why Content  Property can't display first '_' in CheckBox Control\" (#2048)"},{"Id":"506785205","IsPullRequest":false,"CreatedAt":"2019-10-16T18:20:03","Actor":"scalablecory","Number":"2046","RawContent":null,"Title":"Entity Framework logs not showing up anymore after migration to .NET Core 3","State":"closed","Body":"_From @shoe-diamente on Wednesday, October 9, 2019 9:45:08 AM_\r\n\r\n# Issue Title\r\n\r\nEntity Framework SQL logs stop showing up in debug after I migrated from .NET Core 2.2 to .NET Core 3.0.\r\n\r\n# General\r\n\r\nBy using this configuration:\r\n\r\n```\r\n{\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Warning\",\r\n      \"System\": \"Information\",\r\n      \"Microsoft\": \"Information\"\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nin `appsettings.json` I was able to see logging informations about SQL queries made via Entity Framework.\r\n\r\nNow, even with this configuration:\r\n\r\n```\r\n{\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Debug\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI'm unable to see any logging regarding SQL queries made (but I see other debugging messages from .NET Core which suggests that the configurations are picked up correctly).\r\n\r\nDid anything change with regards to logging that was not [documented here](https://docs.microsoft.com/it-it/aspnet/core/migration/22-to-30?view=aspnetcore-3.0&tabs=visual-studio)?\r\n\r\n_Copied from original issue: dotnet/core#3576_","Url":"https://github.com/dotnet/wpf/issues/2046","RelatedDescription":"Closed issue \"Entity Framework logs not showing up anymore after migration to .NET Core 3\" (#2046)"},{"Id":"507817799","IsPullRequest":true,"CreatedAt":"2019-10-16T13:20:35","Actor":"dotnet-maestro[bot]","Number":"2055","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191015.4\r\n- **Date Produced**: 10/15/2019 4:49 PM\r\n- **Commit**: 70745118ec34e556ada1caf52a72526feca2af7a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19515.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2055","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2055)"},{"Id":"507571128","IsPullRequest":false,"CreatedAt":"2019-10-16T02:11:16","Actor":"lindexi","Number":"2054","RawContent":null,"Title":"WPF topmost window Cannot touch in tablet","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`) 3.0\r\n* Windows version: (`winver`) All version\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio  No\r\n\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nAll you need is two tablets (or other touch device) and a WPF window set topmost. Here is the demo.\r\n\r\n```xml\r\n<Window x:Class=\"WpfApp6.MainWindow\"\r\n        xmlns=\"https://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"https://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"https://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"https://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:options=\"https://schemas.microsoft.com/winfx/2006/xaml/presentation/options\"\r\n        xmlns:local=\"clr-namespace:WpfApp6\"\r\n        mc:Ignorable=\"d\" Topmost=\"True\" \r\n        Title=\"MainWindow\" Height=\"350\" Width=\"525\">\r\n    <Border x:Name=\"RootBorder\" Width=\"740\" Height=\"480\" Background=\"Green\" >\r\n    </Border>\r\n</Window>\r\n```\r\n\r\nNext, plug in these two tablets (called T1&T2) in turn, and run the demo.(you can run the demo first, if you like. it doesn't change the result).Everythin is fine,it works.\r\n\r\nBUT, when you plug out the second tablet (T2), you will find the demo cannot response for any touch message from the first one(T1). Until you close this window, or plug out and plug in T1 again.(Well other parts in you computer do get the touch message from T1, as well as other windows in your demo but this topmost window)\r\n\r\nI made some efforts to figure out why. And it seems that there is some hooks didn't remove when a `TouchDevice` is disconnected.But I can't go any further. \r\n\r\nA good news is I found a way by chance, may fix this bug.\r\n\r\nuse\r\n\r\n```csharp\r\nnew WindowInteropHelper(this).EnsureHandle();\r\n```\r\n\r\nin constructor. Or just call this method BEFORE the window show,like\r\n\r\n```csharp\r\nvar window =new TopmostWindow();\r\nnew WindowInteropHelper(window).EnsureHandle();\r\nwindow.show();\r\n```\r\n\r\nThe bug will disapper.\r\n\r\nBut who want add this in every topmost window.By the way, it seems to have a conflict with `AllowTransparent=True` in some cases.\r\n\r\nHope this bug get fixed soon.\r\n\r\nCopied from: [WPF topmost window Cannot touch in tablet - Developer Community](https://developercommunity.visualstudio.com/content/problem/196879/wpf-topmost-window-cannot-touch-in-tablet.html )","Url":"https://github.com/dotnet/wpf/issues/2054","RelatedDescription":"Open issue \"WPF topmost window Cannot touch in tablet\" (#2054)"},{"Id":"507530111","IsPullRequest":true,"CreatedAt":"2019-10-15T23:55:31","Actor":"dotnet-maestro[bot]","Number":"2053","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191015.8\r\n- **Date Produced**: 10/15/2019 11:07 PM\r\n- **Commit**: 3886eb2dc8384f5490e289a321707ddc454ec45e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-preview1.19515.8\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2053","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2053)"},{"Id":"507508605","IsPullRequest":true,"CreatedAt":"2019-10-15T22:30:27","Actor":"dotnet-maestro[bot]","Number":"2052","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191015.5\r\n- **Date Produced**: 10/15/2019 9:47 PM\r\n- **Commit**: 38e25264cbdea3246fe52d4fa2bdb72069668f05\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-preview1.19515.5\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2052","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2052)"},{"Id":"507208853","IsPullRequest":true,"CreatedAt":"2019-10-15T13:18:02","Actor":"dotnet-maestro[bot]","Number":"2049","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191014.10\r\n- **Date Produced**: 10/15/2019 3:08 AM\r\n- **Commit**: a7e25c6ca5906c561a3ccae6e6c63063f78baaba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19514.10\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2049","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2049)"},{"Id":"507079034","IsPullRequest":false,"CreatedAt":"2019-10-15T08:10:14","Actor":"EmaginationStore","Number":"2047","RawContent":null,"Title":"Drop shadow causes clipping when saved to XPS","State":"open","Body":"* .NET Core Version:  3.0 \r\n* Windows version: Win 10 1903 (18362.239)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio: No\r\n\r\n **Problem description:**\r\nI have a textblock with the built-in drop shadow effect. If the textblock is within a viewbox and the width and height of the window is around the size of the viewbox then the text is clipped when you save to XPS \r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nClipped XPS document\r\n\r\n **Expected behavior:**\r\nXPS document which represents the WPF visual\r\n\r\n **Minimal repro:**\r\nXaml Window\r\n`<Window x:Class=\"XpsDropShadowCore.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:XpsDropShadowCore\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"340\" Width=\"600\" MouseDoubleClick=\"MainWindow_OnMouseDoubleClick\">    \r\n        <Canvas Name=\"Canv\">\r\n                <Viewbox StretchDirection=\"DownOnly\" Width=\"580\" Height=\"300\" >\r\n                    <TextBlock FontSize=\"400\" Foreground=\"BlueViolet\" Text=\"Hello\" >\r\n                        <TextBlock.Effect>\r\n                            <DropShadowEffect ShadowDepth=\"30\"></DropShadowEffect>\r\n                        </TextBlock.Effect>\r\n                    </TextBlock>\r\n                </Viewbox>\r\n        </Canvas>\r\n</Window>\r\n`\r\nWindow Code behind\r\n`public partial class MainWindow : Window\r\n    {\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n        private void MainWindow_OnMouseDoubleClick(object sender, MouseButtonEventArgs e)\r\n        {\r\n            var sfd = new SaveFileDialog { Filter = \"XPS files (*.xps)|*.xps\" };\r\n            if (sfd.ShowDialog() != true) return;\r\n            var c = Canv;\r\n            var doc = new XpsDocument(sfd.FileName, FileAccess.ReadWrite);\r\n            var writer = XpsDocument.CreateXpsDocumentWriter(doc);\r\n            writer.Write(c);\r\n            doc.Close();\r\n        }\r\n    }`\r\n","Url":"https://github.com/dotnet/wpf/issues/2047","RelatedDescription":"Open issue \"Drop shadow causes clipping when saved to XPS\" (#2047)"},{"Id":"506703819","IsPullRequest":false,"CreatedAt":"2019-10-14T14:51:23","Actor":"EmaginationStore","Number":"2043","RawContent":null,"Title":"Support Opentype SVG fonts","State":"open","Body":"There is already a request to support SVG in WPF which I would really like to use, but I would also like to use color fonts and emojis so I think adding support for opentype-svg fonts would be a great feature to add to WPF.\r\n","Url":"https://github.com/dotnet/wpf/issues/2043","RelatedDescription":"Open issue \"Support Opentype SVG fonts\" (#2043)"},{"Id":"506616352","IsPullRequest":true,"CreatedAt":"2019-10-14T13:17:10","Actor":"dotnet-maestro[bot]","Number":"2042","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191013.4\r\n- **Date Produced**: 10/14/2019 12:11 AM\r\n- **Commit**: 9b700990e457705e8ac7ae70123ea27e35a250b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19513.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2042","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2042)"},{"Id":"506573081","IsPullRequest":false,"CreatedAt":"2019-10-14T10:39:22","Actor":"KutanaDev","Number":"2041","RawContent":null,"Title":"Duplexing support is incomplete in PrintTicket and PrintCapabilities ","State":"open","Body":"I initially logged this as a Documentation issue in https://github.com/dotnet/dotnet-api-docs/issues/3282#issuecomment-540858696 \r\n\r\nBut that documentation issue has since been Closed with the recommendation that this be logged as a Feature Request instead. So here it is:\r\n\r\n----\r\n\r\nThe documentation source files dotnet-api-docs/xml/System.Printing/PrintTicket.xml and PrintCapabilities.xml both describe printer Duplexing support, and both have a Remark saying:\r\n\r\nThis property corresponds to the Print Schema's `JobDuplexAllDocumentsContiguously` keyword, not the `DocumentDuplex` keyword.\r\n\r\nI'm puzzled that the printing schema contains _two_ keywords for duplex support but the accompanying classes only support _one_ of them. Ideally I'd like the classes to be modified to support _both_ schema keywords, or (failing that) some new note in the documentation suggesting what to do if the Printer Driver reports duplex behaviour using `DocumentDuplex` rather than `JobDuplexAllDocumentsContiguously`. Both classes are sealed, so cannot be extended to add the new behaviour - the classes themselves would need to change.","Url":"https://github.com/dotnet/wpf/issues/2041","RelatedDescription":"Open issue \"Duplexing support is incomplete in PrintTicket and PrintCapabilities \" (#2041)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-21T05:30:54.3971721Z","RunDurationInMilliseconds":738}