{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 1)","PublishedOn":"2019-06-10T15:22:01+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Olia recently wrote a post about how to port a WinForms app from .NET Framework to .NET Core. Today, I&#8217;d like to follow that up by walking through the steps to migrate a sample WPF app to .NET...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-1/","RawContent":null},{"Title":"Supporting the community with WF and WCF OSS projects","PublishedOn":"2019-06-07T17:06:06+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"At the Build conference in May 2019, we mentioned that, after we add WinForms, WPF and Entity Framework 6 to .NET Core 3.0, we do not plan to add any more of the technologies from .NET Framework to...","Href":"https://devblogs.microsoft.com/dotnet/supporting-the-community-with-wf-and-wcf-oss-projects/","RawContent":null},{"Title":"Porting desktop apps to .NET Core","PublishedOn":"2019-05-28T16:00:55+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Since I&#8217;ve been working with the community on porting desktop applications from .NET Framework to .NET Core, I&#8217;ve noticed that there are two camps of folks: some want a very simple and...","Href":"https://devblogs.microsoft.com/dotnet/porting-desktop-apps-to-net-core/","RawContent":null},{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":47,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9811876400","Type":"IssuesEvent","CreatedAt":"2019-06-13T01:50:59","Actor":"xiangzhai","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24659","RelatedDescription":"Reopened issue \"[X86/MIPS/Linux] Failed to initialize CoreCLR, HRESULT: 0x80004005 when System.Private.CoreLib.dll build unsupported\" (#24659) at dotnet/coreclr","RelatedBody":"Hi,\r\n\r\nUpdate to https://github.com/dotnet/coreclr/commit/d4fadf03b9964ba9a1bf96f5a2136c2c8f4f38fe\r\n\r\nThen build to skipcrossgen:\r\n\r\n```\r\n./build.sh cmakeargs \"-DFEATURE_INTERPRETER=1\" ignorewarnings skipcrossgen\r\n```\r\n\r\nNew console HelloWorld demo:\r\n\r\n```\r\ndotnet new console -o HelloWorld\r\n```\r\n\r\nChange HelloWorld.csproj:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <RuntimeIdentifier>linux-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRun `dotnet publish -c Debug` and sort of things by following the [document](https://github.com/dotnet/coreclr/blob/master/Documentation/building/viewing-jit-dumps.md):\r\n\r\n```\r\ncp -rT bin/Product/Linux.x64.Debug HelloWorld/bin/Debug/netcoreapp2.1/linux-x64/publish\r\n./HelloWorld/bin/Debug/netcoreapp2.1/linux-x64/publish/HelloWorld\r\n\r\nFailed to initialize CoreCLR, HRESULT: 0x80004005\r\n```\r\n\r\nIt is about `initializeCoreCLR` in the [src/coreclr/hosts/unixcoreruncommon/coreruncommon.cpp:425](https://github.com/dotnet/coreclr/blob/master/src/coreclr/hosts/unixcoreruncommon/coreruncommon.cpp#L425)\r\n\r\nBTW: the patch https://github.com/jkotas/coreclr/commit/0b00027c6e90f5edd25f1acd5ea2ca00139ca282  works for release/2.1 branch.\r\n\r\nThanks,\r\nLeslie Zhai"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9812496168","Type":"IssuesEvent","CreatedAt":"2019-06-13T04:46:50","Actor":"ravarnamsft","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11544","RelatedDescription":"Opened issue \"dotnet publish results in wrong runtimeTarget in dependencies.json\" (#11544) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nCreate a .Net core project targeting 3.0 (having installed 3.0 preview 5 SDK)\r\nAdd runtime identifiers linux-64 and win-64 to the project file.\r\nIn powershell,\r\nrun dotnet publish -c release -o outputFolder --runtime win-x64 myProject.csproj\r\ndelete the \"outputFolder\"\r\nrun dotnet publish -c release -o outputFolder --runtime linux-x64 myProject.csproj\r\n\r\nThe dependencies.json file in the outputFolder has run time target of win-x64 when published for linux and therefore fails to start on a linux VM. I have seen this happen if you switch the ordering and linux gets written to the windows dependencies.json file, causing the app to fail on a Windows VM.\r\n\r\n## Expected  behavior\r\nThe dependencies .json should have the correct runtimeTarget.\r\n\r\n## Actual behavior\r\nThe dependencies.json file has the wrong runtimeTarget and the app doesn't run on the target platform.\r\n\r\n## Environment data\r\n\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.107 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nHere are some settings from the project file:\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <TargetFrameworkVersion>v3.0</TargetFrameworkVersion>\r\n    <LangVersion>latest</LangVersion>\r\n    <RuntimeIdentifiers>linux-x64;win-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\nThis used to work properly all the time in 2.1 and 2.2. Is there some static state maintained in the cli session that doesn't get reset properly?\r\n\r\n"},{"Id":"9812472488","Type":"IssuesEvent","CreatedAt":"2019-06-13T04:39:29","Actor":"leecow","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11543","RelatedDescription":"Opened issue \"PublishSingleFile with RuntimeIdentifiers fail to publish\" (#11543) at dotnet/cli","RelatedBody":"@johnlarfour commented on [Tue Jun 11 2019](https://github.com/dotnet/core/issues/2851)\n\n`linux/amd64 dotnet 3.0.100-preview5-011568`\r\n\r\nStep to reproduce:\r\n```\r\ndotnet new console -o app\r\n```\r\nReplace csproj with:\r\n```\r\n﻿<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifiers>linux-x64;win-x86;osx-x64</RuntimeIdentifiers>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n  </PropertyGroup> \r\n</Project>\r\n```\r\n```\r\ncd app\r\ndotnet publish\r\n```\r\n\r\nError:\r\n```\r\n/home/john/dotnet/sdk/3.0.100-preview5-011568/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(133,5): error NETSDK1097: It is not supported to publish an application to a single-file without specifying a RuntimeIdentifier. Please either specify a RuntimeIdentifier or set PublishSingleFile to false. [/home/john/Desktop/app/app.csproj]\r\n\r\n```\r\n\r\n\n\n"},{"Id":"9812267146","Type":"IssuesEvent","CreatedAt":"2019-06-13T03:36:44","Actor":"jhoward321","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11542","RelatedDescription":"Opened issue \"System.ComponentModel.Win32Exception when using ef tools\" (#11542) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nRun any dotnet ef command inside a working repo\r\n\r\n## Expected  behavior\r\nShow existing migrations\r\n\r\n## Actual behavior\r\n`$ dotnet ef migrations list                          \r\nSystem.ComponentModel.Win32Exception (2): No such file or directory\r\n   at Interop.Sys.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setUser, UInt32 userId, UInt32 groupId, Int32& lpChildPid, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean shouldThrow)\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at System.Diagnostics.Process.Start(ProcessStartInfo startInfo)\r\n   at Microsoft.EntityFrameworkCore.Tools.Exe.Run(String executable, IReadOnlyList`1 args, String workingDirectory, Boolean interceptOutput)\r\n   at Microsoft.EntityFrameworkCore.Tools.Project.FromFile(String file, String buildExtensionsDir, String framework, String configuration, String runtime)\r\n   at Microsoft.EntityFrameworkCore.Tools.RootCommand.Execute()\r\n   at Microsoft.DotNet.Cli.CommandLine.CommandLineApplication.Execute(String[] args)\r\n   at Microsoft.EntityFrameworkCore.Tools.Program.Main(String[] args)\r\nNo such file or directory`\r\n\r\n## Environment data\r\n`$ dotnet --info            \r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.107\r\n Commit:    2212cac826\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  30\r\n OS Platform: Linux\r\n RID:         fedora.30-x64\r\n Base Path:   /usr/lib64/dotnet/sdk/2.2.107/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.2.107 [/usr/lib64/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.2.5 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"9811066413","Type":"PullRequestEvent","CreatedAt":"2019-06-12T22:14:20","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11540","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/sdk\" (#11540) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/12/2019 4:30 AM\r\n- **Commit**: 8e7f7cf546d26b4dba4bae2b8bbe3ab51beb17a9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19311.1\r\n\r\n"},{"Id":"9811061668","Type":"PullRequestEvent","CreatedAt":"2019-06-12T22:13:18","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11537","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.2.0-preview2.6045 into cli\" (#11537) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.2.0-preview2.6045 into cli release/2.1.8xx branch"},{"Id":"9811060596","Type":"PullRequestEvent","CreatedAt":"2019-06-12T22:13:03","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11536","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.2.0-preview2.6045 into cli\" (#11536) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.2.0-preview2.6045 into cli release/2.2.4xx branch"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9812172461","Type":"IssuesEvent","CreatedAt":"2019-06-13T03:10:37","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1212","RelatedDescription":"Closed issue \"NETSDK1073 occurs on netcoreapp3.0 projects\" (#1212) at dotnet/standard","RelatedBody":"```\r\n>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012085\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(194,5): error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\r\n```\r\n\r\n```\r\n<TargetFramework>netcoreapp3.0</TargetFramework>\r\n\r\n<ItemGroup>\r\n  <PackageReference Include=\"System.Text.Encoding.CodePages\" Version=\"4.6.0-preview5.19224.8\" /> <!--It doesn't matter what's referenced-->\r\n</ItemGroup>\r\n```"},{"Id":"9811354469","Type":"IssuesEvent","CreatedAt":"2019-06-12T23:22:34","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/59","RelatedDescription":"Closed issue \"System.Data: we should review differences with .NET Framework\" (#59) at dotnet/standard","RelatedBody":"Right now, we've haven't included `DbProviderFactories` for examples, which I think we should.\n"},{"Id":"9811301739","Type":"IssuesEvent","CreatedAt":"2019-06-12T23:09:19","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1064","RelatedDescription":"Closed issue \"NETStandard, T4 templates, and System.Numerics.Vectors\" (#1064) at dotnet/standard","RelatedBody":"We have a T4 template to generate code based on reflection of another project. The template project and the other project are SDK style, multitargeted: &lt;TargetFrameworks&gt;net46;netstandard2.0;uap10.0.14393&lt;/TargetFramework&gt;\r\nThe assembly to reflect on is loaded with &lt;#@ assembly name=…\r\nIf the first target in the list is net46, reflection works fine: typeof(MyClass).Assembly.GetTypes()\r\nBut with netstandard first in the list, we get ReflectionTypeLoadException containing the following:\r\n\r\nCould not load file or assembly 'System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n(the reflected-on assembly uses System.Vector.Numerics: &lt;PackageReference Include=\"System.Numerics.Vectors\" Version=\"4.5.0\" Condition=\" '$(TargetFramework)' == 'netstandard2.0' \" /&gt;\r\nOur previous workaround was to do the design-time code generation on net46, but we want to move to netstandard builds soon. How can this error be dealt with?"},{"Id":"9807226113","Type":"PullRequestEvent","CreatedAt":"2019-06-12T13:17:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1246","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1246) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.10\r\n- **Date Produced**: 6/12/2019 9:52 AM\r\n- **Commit**: f5399d9d24536697a3bc36339e13ba085fc28938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.10\r\n\r\n"},{"Id":"9807145817","Type":"PullRequestEvent","CreatedAt":"2019-06-12T13:07:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1246","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1246) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.10\r\n- **Date Produced**: 6/12/2019 9:52 AM\r\n- **Commit**: f5399d9d24536697a3bc36339e13ba085fc28938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.10\r\n\r\n"},{"Id":"9806758431","Type":"PullRequestEvent","CreatedAt":"2019-06-12T12:14:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1245","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1245) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19311.2\r\n\r\n"},{"Id":"9806690847","Type":"PullRequestEvent","CreatedAt":"2019-06-12T12:04:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1245","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1245) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19311.2\r\n\r\n"},{"Id":"9798861850","Type":"PullRequestEvent","CreatedAt":"2019-06-11T13:19:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1244","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1244) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/11/2019 11:00 AM\r\n- **Commit**: a78bd7308555926f88aad3d0ecaaebae0f9204cc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.1\r\n\r\n"},{"Id":"9798780260","Type":"PullRequestEvent","CreatedAt":"2019-06-11T13:09:08","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1244","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1244) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/11/2019 11:00 AM\r\n- **Commit**: a78bd7308555926f88aad3d0ecaaebae0f9204cc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9812610767","Type":"IssuesEvent","CreatedAt":"2019-06-13T05:19:58","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37485","RelatedDescription":"Closed issue \"[System.Text.Json] About difference between property with null and does not exists\" (#37485) at dotnet/corefx","RelatedBody":"How do we deal with the difference between a json property being null, and there is no property?\r\nFor example:\r\n\r\n```csharp\r\npublic class ObjectOne {\r\n\r\n    [JsonProperty(Name = \"propertyOne\")]\r\n    public string PropertyOne {get;set;}\r\n    \r\n    [JsonProperty(Name = \"propertyTwo\")]\r\n    public string PropertyTwo {get;set;}\r\n\r\n}\r\n```\r\n```javascript\r\n{\"propertyOne\": null, \"propertyTwo\":null}\r\n{\"propertyOne\": null }\r\n```\r\n\r\nWe could create a struct that contains the information of whether a property exists or not in deserialization. For exemple.\r\n \r\n```csharp\r\n public struct JsonMetadata<T>\r\n    {\r\n        public JsonMetadata(T obj)\r\n        {\r\n            HasProperty = true;\r\n            Value = obj;\r\n        }\r\n\r\n        public bool HasProperty { get; }  \r\n        public T Value { get; }\r\n\r\n        public static implicit operator T(JsonMetadata<T> jMetadata) => jMetadata.Value;\r\n        public static implicit operator JsonMetadata<T>(T value) => new JsonMetadata<T>(value);\r\n    }\r\n\r\n public class ObjectOne {\r\n\r\n    [JsonProperty(Name = \"propertyOne\")]\r\n    public string PropertyOne {get;set;}\r\n    \r\n    [JsonProperty(Name = \"propertyTwo\")]\r\n    public JsonMetadata<string> PropertyTwo {get;set;}\r\n\r\n}\r\n```\r\nIs this possible? Is there any way to handle this case in the current implementation?\r\n"},{"Id":"9812533711","Type":"IssuesEvent","CreatedAt":"2019-06-13T04:58:09","Actor":"AArnott","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38497","RelatedDescription":"Opened issue \"Debug.Fail crashes .netcoreapp2.x and 3.0 processes\" (#38497) at dotnet/corefx","RelatedBody":"Create an xunit csproj test project with these targets:\r\n```xml\r\n <TargetFrameworks>netcoreapp1.0;netcoreapp2.0;netcoreapp2.1;netcoreapp2.2;netcoreapp3.0</TargetFrameworks>\r\n```\r\n\r\nDefine the following test method:\r\n```cs\r\n[Fact]\r\npublic void CatchTest()\r\n{\r\n    try\r\n    {\r\n        System.Diagnostics.Debug.Fail(\"just a test\");\r\n    }\r\n    catch\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nRun the tests using `dotnet test` or Test Explorer.\r\n\r\n**Expected**\r\n\r\nAll tests pass\r\n\r\n**Actual**\r\n\r\nThe test passes on .netcoreapp1.0, but *crashes the process* for .netcoreapp2.0, 2.1, 2.2, and 3.0.\r\n\r\nSee repro project: [XUnitTestProject1.zip](https://github.com/dotnet/corefx/files/3284264/XUnitTestProject1.zip)\r\n"},{"Id":"9812417789","Type":"IssuesEvent","CreatedAt":"2019-06-13T04:22:36","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/38445","RelatedDescription":"Closed issue \"Undefined symbols error while building CoreFx\" (#38445) at dotnet/corefx","RelatedBody":"Hi all, I tried to build CoreFx using this instructions [https://github.com/dotnet/corefx/blob/a619534cac9b7d000f0899248656d232cb44f61f/Documentation/building/unix-instructions.md](url)  and faced the next error during executing build script:\r\n\r\n`[ 82%] Linking C shared library System.Security.Cryptography.Native.OpenSsl.dylib\r\n  Undefined symbols for architecture x86_64:\r\n    \"_X509_STORE_CTX_get0_store\", referenced from:\r\n        _CryptoNative_X509StoreCtxReset in pal_x509.c.o\r\n        _CryptoNative_X509StoreCtxResetForSignatureError in pal_x509.c.o\r\n        _CheckOcsp in pal_x509.c.o\r\n       (maybe you meant: _local_X509_STORE_CTX_get0_store)\r\n    \"_X509_check_host\", referenced from:\r\n        _CryptoNative_CheckX509Hostname in openssl.c.o\r\n       (maybe you meant: _local_X509_check_host)\r\n  ld: symbol(s) not found for architecture x86_64`\r\n\r\nI'm using Mac OS 10.14.4 Mojave, CMake 3.14.5, pkgconfig  0.29.2 and OpenSSL 1.0.2r. All things are installed via Homebrew.\r\nI'm looking forward to any suggestions."},{"Id":"9811979996","Type":"PullRequestEvent","CreatedAt":"2019-06-13T02:19:40","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38496","RelatedDescription":"Merged pull request \"Disable Socket_SendReceiveAsync_PropagateToStream_Success test on Windows\" (#38496) at dotnet/corefx","RelatedBody":"It's hanging sporadically in CI.\r\nhttps://github.com/dotnet/corefx/issues/29742"},{"Id":"9811835523","Type":"PullRequestEvent","CreatedAt":"2019-06-13T01:39:29","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38456","RelatedDescription":"Merged pull request \"Updating the OS matrix for CI\" (#38456) at dotnet/corefx","RelatedBody":"PRs:\r\n* Remove Debian 8 (not supported in 3.0)\r\n* Add Debian 9 (minimum supported Debian in 3.0)\r\n* Remove openSUSE 42 (end of support this month)\r\n* Add SLES 15 (best upgrade for openSUSE 42)\r\n* Remove Fedora 28 (end of support)\r\n* Add Fedora 29 (best supported version)\r\n* Remove macOS 10.12 (not supported in 3.0, effective end of support)\r\n\r\nFull Runs:\r\n* Remove Debian 8 (not supported in 3.0)\r\n* Remove Ubuntu 18.10 (end of support next month)\r\n* Remove openSUSE 42 (end of support this month)\r\n* Remove Fedora 28 (end of support)\r\n* Remove macOS 10.12 (not supported in 3.0, effective end of support)\r\n* Add Windows 10 1903 (\"19H1\") (current release)"},{"Id":"9811732667","Type":"PullRequestEvent","CreatedAt":"2019-06-13T01:09:39","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38496","RelatedDescription":"Opened pull request \"Disable Socket_SendReceiveAsync_PropagateToStream_Success test on Windows\" (#38496) at dotnet/corefx","RelatedBody":"It's hanging sporadically in CI.\r\nhttps://github.com/dotnet/corefx/issues/29742"},{"Id":"9811708533","Type":"PullRequestEvent","CreatedAt":"2019-06-13T01:02:14","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38478","RelatedDescription":"Merged pull request \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#38478) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190612.1\r\n- **Date Produced**: 6/12/2019 11:03 AM\r\n- **Commit**: c6eebb7f1627b32d804071f189a5041fc48696b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190612.1\r\n\r\n"},{"Id":"9811702963","Type":"PullRequestEvent","CreatedAt":"2019-06-13T01:00:33","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37905","RelatedDescription":"Merged pull request \"Add nullable annotations to System.Runtime.Extensions ref\" (#37905) at dotnet/corefx","RelatedBody":"Needs to go through API Review\r\n\r\ncc: @dotnet/nullablefc @jkotas "},{"Id":"9811654257","Type":"PullRequestEvent","CreatedAt":"2019-06-13T00:45:38","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/38491","RelatedDescription":"Closed pull request \"Changed DisplayNameAttribute targets to all\" (#38491) at dotnet/corefx","RelatedBody":"I wanted to apply the DisplayNameAttribute to enum values, but currently it can't be used for that purpose because the targets are limited. I've discovered someone else who wanted to do the same thing, but [used the DescriptionAttribute](https://www.codingame.com/playgrounds/2487/c---how-to-display-friendly-names-for-enumerations).\r\n\r\nWhile it is possible to use the DescriptionAttribute I feel it has a different meaning, and in the future I might want to use both the DisplayNameAttribute and the DescriptionAttribute.\r\n\r\nIn my commit I've changed the targets to AttributeTargets.All because that is what DescriptionAttribute is using. A more limited target could suffice but I don't know what the trade-offs might be in that case. For instance adding AttributeTargets.Struct seems sensible as well."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9812065233","Type":"IssuesEvent","CreatedAt":"2019-06-13T02:42:40","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36397","RelatedDescription":"Opened issue \"[Regression] Get errors when you open two Visual Studio instances with different versions of Roslyn build tasks\" (#36397) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n16.1.2 and 16.2.0 Preview 3.0 [29010.160.d16.2stg]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Open Roslyn.sln in 16.2.0 keeping it open\r\n2.  Open Roslyn.sln in 16.1.2\r\n\r\n**Expected Behavior**:\r\n\r\nNo errors\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNETSDK1045\tThe current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\tMicrosoft.CodeAnalysis.CSharp.Symbol.UnitTests\tC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\t137\t\r\nError\tNETSDK1045\tThe current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\tMicrosoft.CodeAnalysis.VisualBasic.Symbol.UnitTests\tC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\t137\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tRoslyn.PerformanceTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tRoslyn.PerformanceTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.Apex\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.Apex\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.LegacyCodeAnalysis\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.LegacyCodeAnalysis\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.IntelliTrace\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.IntelliTrace\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.LiveShare\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.LiveShare\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.FSharp.UnitTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.FSharp.UnitTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\n\r\n```\r\n\r\nThe build tasks are supposed to versioned every build for avoid this. Looks like this was regressed again."},{"Id":"9811602311","Type":"PullRequestEvent","CreatedAt":"2019-06-13T00:30:20","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36388","RelatedDescription":"Merged pull request \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36388) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9812411087","Type":"PullRequestEvent","CreatedAt":"2019-06-13T04:20:34","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7519","RelatedDescription":"Merged pull request \"Delete unnecessary code\" (#7519) at dotnet/corert","RelatedBody":"Fixes some errors while building with clang5.0"},{"Id":"9812409748","Type":"PullRequestEvent","CreatedAt":"2019-06-13T04:20:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7520","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7520) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @stephentoub @dotnet-maestro[bot]"},{"Id":"9811873783","Type":"IssuesEvent","CreatedAt":"2019-06-13T01:50:16","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/issues/7500","RelatedDescription":"Reopened issue \"ARM64 cross-compilation assembly\" (#7500) at dotnet/corert","RelatedBody":"I've been working on getting CoreRT to cross-compile to ARM64 from x64 and so far I've gotten 61% of the progress to compile after a LOT of painful work.\r\n\r\nHowever, I have now reached the point where ARM64 only has .asm format assembly code (for Windows, I presume?). ARM assembly is a bit out of the scope of my knowledge, unfortunately, so I'd like to know if that part has already been solved on the closed source side and, if that's the case, whether there's some hope for that \"small\" part to be released."},{"Id":"9811873639","Type":"IssuesEvent","CreatedAt":"2019-06-13T01:50:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7500","RelatedDescription":"Closed issue \"ARM64 cross-compilation assembly\" (#7500) at dotnet/corert","RelatedBody":"I've been working on getting CoreRT to cross-compile to ARM64 from x64 and so far I've gotten 61% of the progress to compile after a LOT of painful work.\r\n\r\nHowever, I have now reached the point where ARM64 only has .asm format assembly code (for Windows, I presume?). ARM assembly is a bit out of the scope of my knowledge, unfortunately, so I'd like to know if that part has already been solved on the closed source side and, if that's the case, whether there's some hope for that \"small\" part to be released."},{"Id":"9811844363","Type":"PullRequestEvent","CreatedAt":"2019-06-13T01:41:56","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7520","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7520) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9811828099","Type":"PullRequestEvent","CreatedAt":"2019-06-13T01:37:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7518","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7518) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"9811753018","Type":"PullRequestEvent","CreatedAt":"2019-06-13T01:15:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7519","RelatedDescription":"Opened pull request \"Delete unnecessary code\" (#7519) at dotnet/corert","RelatedBody":"Fixes some errors while building with clang5.0"},{"Id":"9811438363","Type":"PullRequestEvent","CreatedAt":"2019-06-12T23:45:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7518","RelatedDescription":null,"RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"9811438215","Type":"PullRequestEvent","CreatedAt":"2019-06-12T23:45:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7518","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/coreclr\" (#7518) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"9807453027","Type":"PullRequestEvent","CreatedAt":"2019-06-12T13:44:45","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7518","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7518) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9812583458","Type":"IssuesEvent","CreatedAt":"2019-06-13T05:12:15","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3328","RelatedDescription":"Closed issue \"use different assembly version for different build task\" (#3328) at dotnet/sdk","RelatedBody":"a lot of times, I get something like this whenever I do branch switch and restore and open solution in VS\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/59394912-5d06fc00-8d36-11e9-81c1-d2f0ad724168.png)\r\n\r\nand I believe that is happening because different dll that has same assembly version is already loaded in the msbuild which got reused.\r\n\r\ncan we make different build task dll to use different assembly version so that we don't get into this problem?"},{"Id":"9811572828","Type":"IssuesEvent","CreatedAt":"2019-06-13T00:22:00","Actor":"heejaechang","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3328","RelatedDescription":"Opened issue \"use different assembly version for different build task\" (#3328) at dotnet/sdk","RelatedBody":"a lot of times, I get something like this whenever I do branch switch and restore and open solution in VS\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/59394912-5d06fc00-8d36-11e9-81c1-d2f0ad724168.png)\r\n\r\nand I believe that is happening because different dll that has same assembly version is already loaded in the msbuild which got reused.\r\n\r\ncan we make different build task dll to use different assembly version so that we don't get into this problem?"},{"Id":"9811497068","Type":"IssuesEvent","CreatedAt":"2019-06-13T00:01:15","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/938","RelatedDescription":"Closed issue \"Remove unused DONET10xx and NU10xx diagnostic strings\" (#938) at dotnet/sdk","RelatedBody":"We hurried these in to the resx so that the translations would be available to use past the loc deadline for RTM. Many were not used at all. We should trim them down to the set that we actually use and only add new ones as we need them. I would also suggest changing the naming convention of the resource keys to match the rest of our strings. "}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"455496411","IsPullRequest":true,"CreatedAt":"2019-06-13T01:42:58","Actor":"davidwrighton","Number":"25144","RawContent":null,"Title":"Improve metadata perf and refactor ilasm/ildasm metadata usage","State":"open","Body":"This change currently conflates 2 change\r\n1. Removing function pointer indirections around various enumerator calls into metadata\r\n2. Stop depending on coreclr shared library from ildasm/ilasm. Instead those binaries now are statically linked against all of the metadata logic","Url":"https://github.com/dotnet/coreclr/pull/25144","RelatedDescription":"Open PR \"Improve metadata perf and refactor ilasm/ildasm metadata usage\" (#25144)"},{"Id":"455494396","IsPullRequest":false,"CreatedAt":"2019-06-13T01:32:53","Actor":"VincentBu","Number":"25143","RawContent":null,"Title":"Test failed: System.ComponentModel.EventBasedAsync.Tests.AsyncOperationTests.ThrowAfterAsyncComplete","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190611.2/workItem/System.ComponentModel.EventBasedAsync.Tests/analysis/xunit/System.ComponentModel.EventBasedAsync.Tests.AsyncOperationTests~2FThrowAfterAsyncComplete\r\n\r\n**Failed tests:**\r\nSystem.ComponentModel.EventBasedAsync.Tests.AsyncOperationTests.ThrowAfterAsyncComplete\r\n\r\n**Log:**\r\n```\r\n at System.ComponentModel.EventBasedAsync.Tests.AsyncOperationTests.TestAsyncOperation.Wait() in /_/src/System.ComponentModel.EventBasedAsync/tests/AsyncOperationTests.cs:line 154\r\n   at System.ComponentModel.EventBasedAsync.Tests.AsyncOperationTests.<>c.<ThrowAfterAsyncComplete>b__2_0() in /_/src/System.ComponentModel.EventBasedAsync/tests/AsyncOperationTests.cs:line 39\r\n   at System.Threading.Tasks.Task.InnerInvoke() in /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2453\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj) in /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2432\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /_/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 289\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /_/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 314\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread) in /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2393\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.ComponentModel.EventBasedAsync.Tests.AsyncOperationTests.ThrowAfterAsyncComplete() in /_/src/System.ComponentModel.EventBasedAsync/tests/AsyncOperationTests.cs:line 34\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25143","RelatedDescription":"Open issue \"Test failed: System.ComponentModel.EventBasedAsync.Tests.AsyncOperationTests.ThrowAfterAsyncComplete\" (#25143)"},{"Id":"455445438","IsPullRequest":true,"CreatedAt":"2019-06-13T01:12:08","Actor":"safern","Number":"25136","RawContent":null,"Title":"Fix a couple of annotations on Type","State":"closed","Body":"Found these 2 APIs that I missed to add a nullable return type. (Already did on the ref assembly).\r\n\r\ncc: @stephentoub @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/25136","RelatedDescription":"Closed or merged PR \"Fix a couple of annotations on Type\" (#25136)"},{"Id":"455470374","IsPullRequest":false,"CreatedAt":"2019-06-12T23:37:42","Actor":"dcorbett-fivebridgesllc","Number":"25142","RawContent":null,"Title":"P/Invoke from .Net Core in WSL calls DLLMain","State":"open","Body":"I am porting an application that works in .net framework to .net core and Linux.\r\nIt uses DLLImport to cause P/Invoke to be called on the DLL or .so in Linux.\r\nUnder WSL when I call the library function, it is always attempting to call DLLMain, and not finding it.\r\nI can't build DLLMain in Linux C++ as I can in Windows C++ because \"far\" isn't supported, thus it will never be able to find DLLMain.\r\nI've tried:\r\n[DllImport(@\"libAvmModel.so\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\r\npublic static extern void GetAVMvalue(…);\r\n\r\n[DllImport(@\"libAvmModel.so\")]\r\npublic static extern void GetAVMvalue(…);\r\n\r\nAfter setting LD_DEBUG=libs\r\nI see the entry point it's trying:\r\n6157: /mnt/c/dev/avm/Avm.ServiceHost/bin/x64/Debug/netcoreapp2.2/publish/libAvmModel.so: error: symbol lookup error: undefined symbol: DllMain (fatal)\r\nTarget Property: 0x7fb0f8012850 OrderId: 27e9581d-552e-e811-80f4-44a8423692d6-01/01/2019 .\r\nSegmentation fault (core dumped)\r\n\r\nAlternatively when I build the code in docker, and run it in a container, I am now getting:\r\n\r\ncalling init: /app/libAvmModel.so\r\n/app/libAvmModel.so: error: symbol lookup error: undefined symbol: PAL_RegisterModule (fatal)\r\n","Url":"https://github.com/dotnet/coreclr/issues/25142","RelatedDescription":"Open issue \"P/Invoke from .Net Core in WSL calls DLLMain\" (#25142)"},{"Id":"455461820","IsPullRequest":true,"CreatedAt":"2019-06-12T23:04:51","Actor":"tarekgh","Number":"25141","RawContent":null,"Title":"Update the SDK version","State":"open","Body":"The updated SDK version has a fix for the issue causing msbuild to crash during the build on Linux environment.\r\n\r\nhttps://github.com/dotnet/corefx/issues/37907\r\nhttps://github.com/dotnet/corefx/pull/38185","Url":"https://github.com/dotnet/coreclr/pull/25141","RelatedDescription":"Open PR \"Update the SDK version\" (#25141)"},{"Id":"455451466","IsPullRequest":true,"CreatedAt":"2019-06-12T22:27:05","Actor":"sandreenko","Number":"25140","RawContent":null,"Title":"abort build-tests if failed to restore stress dependencies","State":"open","Body":"Allows us to catch failures like #25131 earlier.","Url":"https://github.com/dotnet/coreclr/pull/25140","RelatedDescription":"Open PR \"abort build-tests if failed to restore stress dependencies\" (#25140)"},{"Id":"455449526","IsPullRequest":true,"CreatedAt":"2019-06-12T22:20:20","Actor":"CarolEidt","Number":"25139","RawContent":null,"Title":"Don't try to fold constants for GT_HWIntrinsic","State":"open","Body":"Fix #25133","Url":"https://github.com/dotnet/coreclr/pull/25139","RelatedDescription":"Open PR \"Don't try to fold constants for GT_HWIntrinsic\" (#25139)"},{"Id":"455448858","IsPullRequest":true,"CreatedAt":"2019-06-12T22:17:55","Actor":"jashook","Number":"25138","RawContent":null,"Title":"Change how build.sh/build.cmd parse the PGO and IBC versions","State":"open","Body":"This will reduce fragility in our build pipeline, by explicitely controlling the output of dotnet msbuild. It also unblocks the source-build effort, as source-build will write extra console output breaking our old parsing.\r\n\r\n/cc @RussKeldorph ","Url":"https://github.com/dotnet/coreclr/pull/25138","RelatedDescription":"Open PR \"Change how build.sh/build.cmd parse the PGO and IBC versions\" (#25138)"},{"Id":"455445951","IsPullRequest":true,"CreatedAt":"2019-06-12T22:08:01","Actor":"fadimounir","Number":"25137","RawContent":null,"Title":"Add a switch to suppress crossgen warnings","State":"open","Body":"This switch will be used by the SDK to suppress warnings by default. The SDK will have an optional property that could be set to show warnings again.","Url":"https://github.com/dotnet/coreclr/pull/25137","RelatedDescription":"Open PR \"Add a switch to suppress crossgen warnings\" (#25137)"},{"Id":"455343337","IsPullRequest":true,"CreatedAt":"2019-06-12T21:43:34","Actor":"Dotnet-GitSync-Bot","Number":"25128","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro[bot]","Url":"https://github.com/dotnet/coreclr/pull/25128","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#25128)"},{"Id":"455183484","IsPullRequest":true,"CreatedAt":"2019-06-12T21:43:04","Actor":"dotnet-maestro[bot]","Number":"25119","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19311.2\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25119","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25119)"},{"Id":"455433759","IsPullRequest":true,"CreatedAt":"2019-06-12T21:31:21","Actor":"CarolEidt","Number":"25135","RawContent":null,"Title":"Fix contained LEA handling","State":"open","Body":"This adds an LEA case to both `LinearScan::BuildOperandUses` and `CodeGen::genConsumeRegs`.\r\n\r\nFix #25039","Url":"https://github.com/dotnet/coreclr/pull/25135","RelatedDescription":"Open PR \"Fix contained LEA handling\" (#25135)"},{"Id":"455277965","IsPullRequest":false,"CreatedAt":"2019-06-12T21:08:21","Actor":"arlm","Number":"25124","RawContent":null,"Title":"Problem when comparing boolean values after IL conv.i1","State":"closed","Body":"I am working on some tests for an DynamicMehtod IL generator called [Sigil ](/kevin-montrose/Sigil) and I hit some interesting behavior on comparing booleans:\r\n\r\nThe dynamic method (`Func<int, bool>`) looks like:\r\n```\r\n   ldarg.0\r\n   conv.i1\r\n   ret   \r\n```\r\n\r\nWhen I invoke this function using `1` everything goes as expected for `true`.  Although, when I invoke this function using `2` and start testing the results it happens that Visual Studio debugger and variable dumps (using `Console.Write`) states that it is `true` and `==`comparisons succeed, but `true.Equals()` returns false. I have tried casting, making a boolean AND `&` operation with true, all with the same result.\r\n\r\nIs this the expected behavior for this IL operation? It seems that `Boolean.Equals(bool)` behaves differently from `Boolean.Equals(object?)`.\r\n\r\nhttps://github.com/dotnet/corefx/blob/f5399d9d24536697a3bc36339e13ba085fc28938/src/Common/src/CoreLib/System/Boolean.cs#L143-L146\r\n\r\nhttps://github.com/dotnet/corefx/blob/f5399d9d24536697a3bc36339e13ba085fc28938/src/Common/src/CoreLib/System/Boolean.cs#L130-L140\r\n\r\nAlso it seems that the second one is using the base `Object` `== operator` which is not defined as an `operator` on this object, so I infer it calls `Object.Equals(objec)` internally:\r\n\r\nhttps://github.com/dotnet/corefx/blob/f5399d9d24536697a3bc36339e13ba085fc28938/src/Common/src/CoreLib/System/Object.cs#L47-L50\r\n\r\nAlthough I found no code counterpart of this `RuntimeHelpers.Equals(this, object)`, I guess it comes from the runtime and my guess would be that it calls the `ObjectNative::Equals(Object, Object)`\r\n\r\nhttps://github.com/dotnet/coreclr/blob/fd2287c5e833439e0ea7c27ad14350bcccf371a0/src/classlibnative/bcltype/objectnative.cpp#L140-L179\r\n\r\nWhich compares the memory content of both objects.\r\n\r\nWell that is as far as I could go with this odd behavior.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25124","RelatedDescription":"Closed issue \"Problem when comparing boolean values after IL conv.i1\" (#25124)"},{"Id":"455424412","IsPullRequest":false,"CreatedAt":"2019-06-12T21:05:23","Actor":"kalimag","Number":"25134","RawContent":null,"Title":"Inlining disables overflow checking for checked uint to int conversion","State":"open","Body":"The following code prints a negative number instead of the expected `OverflowException` under certain conditions:\r\n\r\n    class Program\r\n    {\r\n        static uint _value = int.MaxValue + 1U;\r\n\r\n        static void Main()\r\n        {\r\n            try\r\n            {\r\n                var result = CastToIntChecked(_value);\r\n                Console.WriteLine(result);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex);\r\n            }\r\n        }\r\n\r\n        static int CastToIntChecked(uint value) => checked((int)value);\r\n    }\r\n\r\nThis only seems to happen when `CastToIntChecked` is inlined. Preventing inlining by running a debug build, applying `MethodImplOptions.NoInlining` or bloating the method body results in an overflow exception.\r\n\r\nOther changes that cause overflow checking to be performed as expected include:\r\n\r\n- calling `CastToIntChecked(int.MaxValue + 1U)`\r\n\r\n- calling `CastToIntChecked(_value + 1)`\r\n\r\n- calling `CastToIntChecked(uint.Parse(\"2147483648\"))`\r\n\r\n- reading `_value` inside `CastToIntChecked` instead of passing it in as an argument\r\n\r\n- performing other overflowing conversions like `ulong`->`long` or `ulong`->`int`\r\n\r\nI haven't been able to extensively determine the affected runtimes, but as far as I can tell this occurs at least on Windows builds of .NET Core 2.2, 3.0-preview5, as well as .NET Desktop x64 but not .NET Desktop x86.","Url":"https://github.com/dotnet/coreclr/issues/25134","RelatedDescription":"Open issue \"Inlining disables overflow checking for checked uint to int conversion\" (#25134)"},{"Id":"455419344","IsPullRequest":false,"CreatedAt":"2019-06-12T20:52:56","Actor":"AndyAyersMS","Number":"25133","RawContent":null,"Title":"JIT: Assert in BMI intrinsic from random inline stress","State":"open","Body":"Have been randomly playing with different seeds for random inline stress and hit this.\r\n\r\nTo repro (on windows or Linux)\r\n```\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitInlinePolicyRandom=3\r\n\r\ncorerun tests\\Windows_NT.x64.Checked\\jit\\HardwareIntrinsics\\X86\\Bmi1.X64\\Bmi1.X64_ro\\Bmi1.X64_ro.exe\r\n\r\nAssert failure(PID 22518 [0x000057f6], Thread: 22518 [0x57f6]): \r\nAssertion failed 'tree->gtType == TYP_INT || varTypeIsGC(tree->TypeGet()) || tree->gtOper == GT_MKREFANY'\r\nin 'JIT.HardwareIntrinsics.X86.ScalarTernOpTest__BitFieldExtractUInt64:RunStructLclFldScenario():this' (IL size 71)\r\n\r\n              File: /home/andy/repos/coreclr/src/jit/gentree.cpp Line: 13547\r\n              Image: /home/andy/repos/coreclr/bin/tests/Linux.x64.Checked/Tests/Core_Root/corerun\r\n```\r\nSaw this at b5199393; haven't tried newer bits yet.\r\n\r\ncc @dotnet/jit-contrib\r\n","Url":"https://github.com/dotnet/coreclr/issues/25133","RelatedDescription":"Open issue \"JIT: Assert in BMI intrinsic from random inline stress\" (#25133)"},{"Id":"455376028","IsPullRequest":false,"CreatedAt":"2019-06-12T19:05:29","Actor":"tommcdon","Number":"25132","RawContent":null,"Title":"Breakpoint changes the output of the program on x64","State":"open","Body":"The output for the execution of a program may change if you add a breakpoint on a specified line.\r\n\r\nRepro Steps\r\nstatic void Main(string[] args)\r\n{\r\n    Console.WriteLine(WrapDegrees(-722.5f));\r\n\r\n    Console.WriteLine();\r\n}\r\n\r\nprivate static float WrapDegrees(float degrees)\r\n{\r\n    float remainder = Math.Abs(degrees);\r\n    remainder %= 360; // breakpoint here\r\n    return degrees < 0 ? 360 - remainder : remainder;\r\n}\r\n\r\n\r\n\r\n\r\nCode from: https://gist.github.com/tannergooding/af91efb30215ab360dfb3fe18e58fe36 \r\n\r\n1. Add breakpoint at specified line;\r\n2. Target .NET Core 3.0 Preview 4 for x64;\r\n3. Start debugging;\r\n4. Hit breakpoint and continue execution.\r\n\r\nExpected output\r\n357.5\r\n\r\nActual output\r\n357.51007\r\n\r\nRemarks\r\n* If you don't add any breakpoint (or add any breakpoint as long as the specified line does not have a breakpoint), the output will be the same as expected;\r\n* Unable to reproduce the issue with v3.0.0-preview-27122-01 or older versions (regression);\r\n* Unable to reproduce if targeting x86.","Url":"https://github.com/dotnet/coreclr/issues/25132","RelatedDescription":"Open issue \"Breakpoint changes the output of the program on x64\" (#25132)"},{"Id":"455365099","IsPullRequest":false,"CreatedAt":"2019-06-12T18:38:41","Actor":"sandreenko","Number":"25131","RawContent":null,"Title":"[x86][Windows] External disassembler is not available.","State":"open","Body":"All last windows x86 JitStress jobs failed with: `External disassembler is not available`.\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=221425&view=ms.vss-test-web.build-test-results-tab\r\n\r\nWe did not have this problem in the previous run. Probably all GCStress=0xc jobs will fail as well.\r\n\r\nIt can be that the last helix update again deleted some necessary libraries from these machines (last time it was MSVC++ Redistributable dll, it was tracked in https://github.com/dotnet/core-eng/issues/6109).\r\n\r\nI will check what we are missing now.\r\n\r\ncc @MattGal @echesakov.","Url":"https://github.com/dotnet/coreclr/issues/25131","RelatedDescription":"Open issue \"[x86][Windows] External disassembler is not available.\" (#25131)"},{"Id":"455361088","IsPullRequest":true,"CreatedAt":"2019-06-12T18:28:51","Actor":"VSadov","Number":"25130","RawContent":null,"Title":"ensure process-wide fence when updating GC write barrier on ARM64","State":"open","Body":"This is related to https://github.com/dotnet/coreclr/issues/24028 , but may not be sufficient to be a complete fix.\r\n\r\nThe other problem is that process-wide fence is not 100% reliable on pre 4.14 kernels on ARM64. \r\nLab has some machines like that and there is a chance they might still cause failures, as evidenced from \r\nhttps://github.com/dotnet/corefx/pull/38401  and\r\nhttps://github.com/dotnet/coreclr/issues/20215","Url":"https://github.com/dotnet/coreclr/pull/25130","RelatedDescription":"Open PR \"ensure process-wide fence when updating GC write barrier on ARM64\" (#25130)"},{"Id":"455353363","IsPullRequest":true,"CreatedAt":"2019-06-12T18:10:33","Actor":"kouvel","Number":"25129","RawContent":null,"Title":"Fix code version table lock / coop GC mode switch ordering","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/25086\r\n- The lock is taken inside other unsafe locks in coop mode, in some paths it may not be legal to switch to preemptive mode before taking the lock\r\n- Iterating over the cross loader allocator hash table to backpatch entry point slots needs coop GC mode, and was being done inside the lock\r\n- Moved the switch to coop GC mode to before acquiring the lock to maintain consistent ordering between the two","Url":"https://github.com/dotnet/coreclr/pull/25129","RelatedDescription":"Open PR \"Fix code version table lock / coop GC mode switch ordering\" (#25129)"},{"Id":"455318365","IsPullRequest":false,"CreatedAt":"2019-06-12T16:44:43","Actor":"tannergooding","Number":"25127","RawContent":null,"Title":"Consider updating generated floating-point equality code to avoid branches","State":"open","Body":"Currently, the floating-point equality logic is using `ucomiss` which can result in a branch in order to handle `NaN`.\r\n\r\nThe following code:\r\n```csharp\r\npublic static bool Equal(float a, float b) => a == b;\r\n```\r\n\r\nGenerates:\r\n```asm\r\n    L0000: vzeroupper\r\n    L0003: vucomiss xmm0, xmm1\r\n    L0007: setnp al\r\n    L000a: jp L000f\r\n    L000c: setz al\r\n    L000f: movzx eax, al\r\n    L0012: ret\r\n```\r\n\r\nIt may be beneficial to update this logic to emit `cmpss` instead to avoid the branching:\r\n```asm\r\nvcmpss xmm0, xmm1, 0\r\nmovd eax, xmm0\r\nand eax, 1\r\n```\r\n\r\nFor reference:\r\n![image](https://user-images.githubusercontent.com/10487869/59369995-7720ea00-8cf6-11e9-922e-c9080145d085.png)\r\n\r\nVersus:\r\n```\r\nRESULT <-UnorderedCompare(DEST[31:0] <> SRC[31:0]) {\r\n(* Set EFLAGS *) CASE (RESULT) OF\r\nUNORDERED: ZF,PF,CF <- 111;\r\nGREATER_THAN: ZF,PF,CF <- 000;\r\nLESS_THAN: ZF,PF,CF <- 001;\r\nEQUAL: ZF,PF,CF <- 100;\r\nESAC;\r\nOF, AF, SF <- 0; }\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25127","RelatedDescription":"Open issue \"Consider updating generated floating-point equality code to avoid branches\" (#25127)"},{"Id":"455289996","IsPullRequest":true,"CreatedAt":"2019-06-12T15:45:18","Actor":"janvorli","Number":"25126","RawContent":null,"Title":"Disable unloading incompatible test for runincontext","State":"open","Body":"These tests do various things that make them incompatible with running\r\nin an unloadable assembly load context using the runincontext tool.\r\nI've attached comments to the UnloadabilityIncompatible element\r\ndescribing the specific problems of each test.\r\n\r\nI've also found a problem in the parameter passing in the\r\nrunincontext.sh where it was always passing 7 parameters to each test\r\nand tests that were checking the number of parameters were failing due\r\nto that. This change fixes it by passing just the parameters that were\r\npassed to the runincontext.sh.","Url":"https://github.com/dotnet/coreclr/pull/25126","RelatedDescription":"Open PR \"Disable unloading incompatible test for runincontext\" (#25126)"},{"Id":"455128515","IsPullRequest":false,"CreatedAt":"2019-06-12T15:31:20","Actor":"Cronan","Number":"25116","RawContent":null,"Title":"Error building centos 7 from docker","State":"closed","Body":"Running in the following environment:\r\n```sh\r\nlsb_release -a\r\nLSB Version:\t:core-4.1-amd64:core-4.1-noarch\r\nDistributor ID:\tCentOS\r\nDescription:\tCentOS Linux release 7.5.1804 (Core) \r\nRelease:\t7.5.1804\r\nCodename:\tCore\r\n```\r\n\r\nI get the following errors in the build:\r\n```sh\r\ndocker run --rm -v /home/git/coreclr:/coreclr -w /coreclr mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-d485f41-20173404063424 ./build.sh\r\nCommencing CoreCLR Repo build\r\n__DistroRid: linux-x64\r\n__RuntimeId: linux-x64\r\nSetting up directories for build\r\nChecking prerequisites...\r\nInstalling dotnet using Arcade...\r\nLaying out dynamically generated EventSource classes\r\nAdding CMake flags to build native tests for Linux.x64.Debug\r\nCommencing build of CoreCLR component for Linux.x64.Debug in /coreclr/bin/obj/Linux.x64.Debug\r\n/coreclr\r\n/coreclr/.dotnet/sdk/3.0.100-preview6-011681/NuGet.targets(121,5): error : Access to the path '/coreclr/artifacts/obj/empty/empty.csproj.nuget.dgspec.json' is denied. [/coreclr/eng/empty.csproj]\r\n/coreclr/.dotnet/sdk/3.0.100-preview6-011681/NuGet.targets(121,5): error :   Permission denied [/coreclr/eng/empty.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/coreclr/.dotnet/sdk/3.0.100-preview6-011681/NuGet.targets(121,5): error : Access to the path '/coreclr/artifacts/obj/empty/empty.csproj.nuget.dgspec.json' is denied. [/coreclr/eng/empty.csproj]\r\n/coreclr/.dotnet/sdk/3.0.100-preview6-011681/NuGet.targets(121,5): error :   Permission denied [/coreclr/eng/empty.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.14\r\nBuild failed (exit code '1').\r\nFailed to generate native version file.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25116","RelatedDescription":"Closed issue \"Error building centos 7 from docker\" (#25116)"},{"Id":"455278215","IsPullRequest":true,"CreatedAt":"2019-06-12T15:23:39","Actor":"MichalStrehovsky","Number":"25125","RawContent":null,"Title":"Emit a message when skipping a method in crossgen","State":"open","Body":"Since crossgen normally prints a message when the compilation didn't happen (because e.g. something is not supported), we should print something here too. Otherwise the `/verbose` log makes it look like pregeneration succeeded and sends someone down a wrong path investigating why it's not picked up at runtime...","Url":"https://github.com/dotnet/coreclr/pull/25125","RelatedDescription":"Open PR \"Emit a message when skipping a method in crossgen\" (#25125)"},{"Id":"455225183","IsPullRequest":false,"CreatedAt":"2019-06-12T13:48:22","Actor":"gpomykala","Number":"25123","RawContent":null,"Title":"[ARM7/Linux] nullref leads to ABRT / SEGV exit code","State":"open","Body":"Environment:\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.1 [/opt/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.1 [/opt/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/opt/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nroot@gpomykala:~ cat /proc/cpuinfo\r\nprocessor       : 0\r\nmodel name      : ARMv7 Processor rev 10 (v7l)\r\nBogoMIPS        : 3.00\r\nFeatures        : half thumb fastmult vfp edsp neon vfpv3 tls vfpd32\r\nCPU implementer : 0x41\r\nCPU architecture: 7\r\nCPU variant     : 0x2\r\nCPU part        : 0xc09\r\nCPU revision    : 10\r\n\r\nprocessor       : 1\r\nmodel name      : ARMv7 Processor rev 10 (v7l)\r\nBogoMIPS        : 3.00\r\nFeatures        : half thumb fastmult vfp edsp neon vfpv3 tls vfpd32\r\nCPU implementer : 0x41\r\nCPU architecture: 7\r\nCPU variant     : 0x2\r\nCPU part        : 0xc09\r\nCPU revision    : 10\r\n\r\nHardware        : Freescale i.MX6 Quad/DualLite (Device Tree)\r\nRevision        : 0000\r\nSerial          : 0000000000000000\r\n\r\nWe have an ASP.NET core app which deserializes some JSON data using custom JsonConverter.\r\nIt may happen that converter throws a NullRef which is handled in the app. \r\n\r\nUnfortunately on linux-arm we never reach the error handling code since the process exits either with SIGABRT.\r\nI believe it is similar to ##16462.\r\n\r\nLogs:\r\nUnhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at MyCompany.Persistency.Converters.MyConverter`1.DoReadJson(JToken jsonObject, T resultValue, JsonSerializer serializer)\r\n   at MyCompany.Persistency.Converters.BaseConverter`1.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n) = ?\r\n+++ killed by SIGABRT (core dumped) +++\r\nAborted (core dumped)\r\n\r\nI am trying to make a reproduction with a sample app, please let me know whether i could provide more details.\r\n","Url":"https://github.com/dotnet/coreclr/issues/25123","RelatedDescription":"Open issue \"[ARM7/Linux] nullref leads to ABRT / SEGV exit code\" (#25123)"},{"Id":"455199122","IsPullRequest":true,"CreatedAt":"2019-06-12T12:58:37","Actor":"dotnet-maestro[bot]","Number":"25122","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190612.1\r\n- **Date Produced**: 6/12/2019 11:03 AM\r\n- **Commit**: c6eebb7f1627b32d804071f189a5041fc48696b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190612.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190612.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25122","RelatedDescription":"Open PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25122)"},{"Id":"455190736","IsPullRequest":true,"CreatedAt":"2019-06-12T12:41:30","Actor":"dotnet-maestro[bot]","Number":"25121","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190612.01\r\n- **Date Produced**: 6/12/2019 10:12 AM\r\n- **Commit**: b114db9944f92786a2f5e321827742ca5b4628bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27812-01\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25121","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#25121)"},{"Id":"455188610","IsPullRequest":true,"CreatedAt":"2019-06-12T12:36:57","Actor":"dotnet-maestro[bot]","Number":"25120","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.10\r\n- **Date Produced**: 6/12/2019 9:52 AM\r\n- **Commit**: f5399d9d24536697a3bc36339e13ba085fc28938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces** -> 1.0.0-preview7.19311.10\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19311.10\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview7.19311.10\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25120","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#25120)"},{"Id":"455167945","IsPullRequest":false,"CreatedAt":"2019-06-12T11:49:52","Actor":"RussKeldorph","Number":"25118","RawContent":null,"Title":"GC/Features/HeapExpansion/bestfit_1/bestfit_1.sh: line 259: 12266 Segmentation fault ","State":"open","Body":"https://mc.dot.net/#/product/netcore/master/source/official~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fr2r~2Fcli~2F/build/20190611.1/workItem/PayloadGroup0/analysis/xunit/GC_Features._HeapExpansion_bestfit_1_bestfit_1_~2F_HeapExpansion_bestfit_1_bestfit_1_sh\r\n\r\n```\r\n/root/helix/work/workitem/GC/Features/HeapExpansion/bestfit_1/bestfit_1.sh: line 259: 12266 Segmentation fault      (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/GC/Features/Reports/GC.Features/HeapExpansion/bestfit_1/bestfit_1.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\nin takeLock\r\n/root/helix/work/correlation/crossgen /Platform_Assemblies_Paths /root/helix/work/correlation:/root/helix/work/workitem/GC/Features/HeapExpansion/bestfit_1/IL:/root/helix/work/workitem/GC/Features/HeapExpansion/bestfit_1 /in bestfit_1.org /out bestfit_1.exe\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nNative image bestfit_1.exe generated successfully.\r\nin ReleaseLock\r\nin takeLock\r\n/root/helix/work/correlation/corerun bestfit_1.exe '1' '1000' '50000'\r\nUsing random seed: -997944524\r\nTook 7983 iterations to reach steady state\r\nin ReleaseLock\r\nExpected: 100\r\nActual: 139\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/GC/Features/HeapExpansion/bestfit_1/bestfit_1.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25118","RelatedDescription":"Open issue \"GC/Features/HeapExpansion/bestfit_1/bestfit_1.sh: line 259: 12266 Segmentation fault \" (#25118)"},{"Id":"455141280","IsPullRequest":true,"CreatedAt":"2019-06-12T10:45:13","Actor":"adamsitnik","Number":"25117","RawContent":null,"Title":"change SafeSortHandle to be CriticalSortHandle to avoid expensive ref counting","State":"open","Body":"### The problem\r\n\r\nIn my previous two PRs I have improved the performance of the string operations on Linux but our Linux implementation is still slower than Windows. For example for [this](https://github.com/dotnet/corefx/issues/37691#issuecomment-501166243) benchmark we get 90k RPS vs 60k RPS.\r\n\r\nThe captured trace file shows that the two hottest methods are:\r\n\r\n```log\r\nSystem.Private.CoreLib!System.Runtime.InteropServices.SafeHandle::InternalRelease(bool)[OptimizedTier1] \r\nSystem.Private.CoreLib!System.Runtime.InteropServices.SafeHandle::DangerousAddRef(bool&)[OptimizedTier1]\r\n```\r\n\r\n![obraz](https://user-images.githubusercontent.com/6011991/59334642-3f687100-8cfb-11e9-931a-e33f9af53e36.png)\r\n\r\nThose two methods are responsible for ref counting.\r\n\r\nThe question is: do we need ref counting for this particular handle?\r\n\r\nIn my opinion, not. \r\n\r\n### SortHandle\r\n\r\nWhat is `SortHandle`: it's a wrapper for an array of pointers to ICU UCollators that are required for culture-specific string operations on Linux in System.Globalization.Native.so.\r\n\r\nhttps://github.com/dotnet/coreclr/blob/c3ac0c460382519c0344f3e87626846ab6fd96a1/src/corefx/System.Globalization.Native/pal_collation.c#L43-L46\r\n\r\nIt's manged representation was so far a type derived from `SafeHandle`:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/9773db1e7b1acb3ec75c9cc0e36bd62dcbacd6d5/src/System.Private.CoreLib/shared/Interop/Unix/System.Globalization.Native/Interop.Collation.cs#L59-L77\r\n\r\n### The Life cycle of `SortHandle`\r\n\r\nWhen new `CompareInfo` is created, it's ctor calls the InitSort method:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/c3ac0c460382519c0344f3e87626846ab6fd96a1/src/System.Private.CoreLib/shared/System/Globalization/CompareInfo.cs#L63\r\n\r\nThe `InitSort` method calls `Interop.Globalization.GetSortHandle`. If it fails, the handle is `Disposed`\r\n\r\nhttps://github.com/dotnet/coreclr/blob/c3ac0c460382519c0344f3e87626846ab6fd96a1/src/System.Private.CoreLib/shared/System/Globalization/CompareInfo.Unix.cs#L33-L36\r\n\r\nThe `GetSortHandle` allocates memory for the handle and calls `ucol_open` that creates first `UCollator` and writes it to `collatorsPerOption[0]`\r\n\r\nhttps://github.com/dotnet/coreclr/blob/c3ac0c460382519c0344f3e87626846ab6fd96a1/src/corefx/System.Globalization.Native/pal_collation.c#L358\r\n\r\nThe cleanup relies on finalizer, the dispose method is not called in explicit way.\r\n\r\nThe type is internal and not exposed outside System.Private.CoreLib.\r\n\r\n### CriticalHandle\r\n\r\nThe `CriticalHandle` does not perform ref counting on marshaling.\r\n \r\nWith the proposed change, I am able to get from **60k RPS to 110k RPS**\r\n\r\n```log\r\nRequestsPerSecond:           110 245\r\nMax CPU (%):                 94\r\nWorkingSet (MB):             177\r\nAvg. Latency (ms):           2,65\r\nStartup (ms):                270\r\nFirst Request (ms):          110,62\r\nLatency (ms):                0,91\r\nTotal Requests:              562 104\r\nDuration: (ms)               5 100\r\nSocket Errors:               0\r\nBad Responses:               0\r\nSDK:                         3.0.100-preview7-012367\r\nRuntime:                     3.0.0-preview7-27812-01\r\nASP.NET Core:                3.0.0-preview7.19311.5\r\n```\r\n\r\nBefore:\r\n\r\n![obraz](https://user-images.githubusercontent.com/6011991/59344899-413c2f80-8d0f-11e9-9ad9-b05d9e4d8019.png)\r\n\r\nAfter:\r\n\r\n![obraz](https://user-images.githubusercontent.com/6011991/59344917-4c8f5b00-8d0f-11e9-88a6-6e93d7fa0b27.png)\r\n\r\nPlease keep in mind that I am not a security expert and my knowledge is limited. If this is a bad idea, please just explain why.\r\n","Url":"https://github.com/dotnet/coreclr/pull/25117","RelatedDescription":"Open PR \"change SafeSortHandle to be CriticalSortHandle to avoid expensive ref counting\" (#25117)"},{"Id":"455126617","IsPullRequest":true,"CreatedAt":"2019-06-12T10:11:04","Actor":"HermanEldering","Number":"25115","RawContent":null,"Title":"ArgumentException: use system-supplied message if message is null","State":"open","Body":"Enable using a system-supplied message while also providing an argument/parameter name by passing in a null message. While providing a specific error message would be best, providing a parameter name is better than nothing.\r\n\r\nMade my changes to match the behavior of FileNotFoundException. I think this change is relatively safe since it checks the HResult value, so subclasses that set the HResult will not be affected. Also the basic Exception class already provides a default string if the message is null, so `Message == null` checks should not exist.","Url":"https://github.com/dotnet/coreclr/pull/25115","RelatedDescription":"Open PR \"ArgumentException: use system-supplied message if message is null\" (#25115)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"455532891","IsPullRequest":false,"CreatedAt":"2019-06-13T04:46:49","Actor":"ravarnamsft","Number":"11544","RawContent":null,"Title":"dotnet publish results in wrong runtimeTarget in dependencies.json","State":"open","Body":"## Steps to reproduce\r\nCreate a .Net core project targeting 3.0 (having installed 3.0 preview 5 SDK)\r\nAdd runtime identifiers linux-64 and win-64 to the project file.\r\nIn powershell,\r\nrun dotnet publish -c release -o outputFolder --runtime win-x64 myProject.csproj\r\ndelete the \"outputFolder\"\r\nrun dotnet publish -c release -o outputFolder --runtime linux-x64 myProject.csproj\r\n\r\nThe deps.json file in the outputFolder has run time target of win-x64 when published for linux and therefore fails to start on a linux VM. I have seen this happen the other way around as well, if I switch the ordering of the publish commands above and linux gets written to the windows deps.json file, causing the app to fail on a Windows VM.\r\n\r\n## Expected  behavior\r\nThe deps.json in the output folder should have the correct runtimeTarget.\r\n\r\n## Actual behavior\r\nThe deps.json file has the wrong runtimeTarget and the app doesn't run on the target platform.\r\n\r\n## Environment data\r\n\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.107 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nHere are some settings from the project file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <TargetFrameworkVersion>v3.0</TargetFrameworkVersion>\r\n    <LangVersion>latest</LangVersion>\r\n    <RuntimeIdentifiers>linux-x64;win-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n```\r\n\r\nThis used to work properly all the time in 2.1 and 2.2. Is there some static state maintained in the cli session that doesn't get reset properly?\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11544","RelatedDescription":"Open issue \"dotnet publish results in wrong runtimeTarget in dependencies.json\" (#11544)"},{"Id":"455531480","IsPullRequest":false,"CreatedAt":"2019-06-13T04:39:28","Actor":"leecow","Number":"11543","RawContent":null,"Title":"PublishSingleFile with RuntimeIdentifiers fail to publish","State":"open","Body":"@johnlarfour commented on [Tue Jun 11 2019](https://github.com/dotnet/core/issues/2851)\n\n`linux/amd64 dotnet 3.0.100-preview5-011568`\r\n\r\nStep to reproduce:\r\n```\r\ndotnet new console -o app\r\n```\r\nReplace csproj with:\r\n```\r\n﻿<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifiers>linux-x64;win-x86;osx-x64</RuntimeIdentifiers>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n  </PropertyGroup> \r\n</Project>\r\n```\r\n```\r\ncd app\r\ndotnet publish\r\n```\r\n\r\nError:\r\n```\r\n/home/john/dotnet/sdk/3.0.100-preview5-011568/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(133,5): error NETSDK1097: It is not supported to publish an application to a single-file without specifying a RuntimeIdentifier. Please either specify a RuntimeIdentifier or set PublishSingleFile to false. [/home/john/Desktop/app/app.csproj]\r\n\r\n```\r\n\r\n\n\n","Url":"https://github.com/dotnet/cli/issues/11543","RelatedDescription":"Open issue \"PublishSingleFile with RuntimeIdentifiers fail to publish\" (#11543)"},{"Id":"455519628","IsPullRequest":false,"CreatedAt":"2019-06-13T03:36:44","Actor":"jhoward321","Number":"11542","RawContent":null,"Title":"System.ComponentModel.Win32Exception when using ef tools","State":"open","Body":"## Steps to reproduce\r\nRun any dotnet ef command inside a working repo. I'm using the 2.2.107 sdk from the https://copr.fedorainfracloud.org/coprs/g/dotnet-sig/dotnet/ repo. Unfortunately there is not a newer sdk available.\r\n\r\n## Expected  behavior\r\nShow existing migrations\r\n\r\n## Actual behavior\r\n```\r\n$ dotnet ef migrations list                          \r\nSystem.ComponentModel.Win32Exception (2): No such file or directory\r\n   at Interop.Sys.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setUser, UInt32 userId, UInt32 groupId, Int32& lpChildPid, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean shouldThrow)\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at System.Diagnostics.Process.Start(ProcessStartInfo startInfo)\r\n   at Microsoft.EntityFrameworkCore.Tools.Exe.Run(String executable, IReadOnlyList`1 args, String workingDirectory, Boolean interceptOutput)\r\n   at Microsoft.EntityFrameworkCore.Tools.Project.FromFile(String file, String buildExtensionsDir, String framework, String configuration, String runtime)\r\n   at Microsoft.EntityFrameworkCore.Tools.RootCommand.Execute()\r\n   at Microsoft.DotNet.Cli.CommandLine.CommandLineApplication.Execute(String[] args)\r\n   at Microsoft.EntityFrameworkCore.Tools.Program.Main(String[] args)\r\nNo such file or directory\r\n```\r\n\r\n## Environment data\r\n```\r\n$ dotnet --info            \r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.107\r\n Commit:    2212cac826\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  30\r\n OS Platform: Linux\r\n RID:         fedora.30-x64\r\n Base Path:   /usr/lib64/dotnet/sdk/2.2.107/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.2.107 [/usr/lib64/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.2.5 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11542","RelatedDescription":"Open issue \"System.ComponentModel.Win32Exception when using ef tools\" (#11542)"},{"Id":"455175202","IsPullRequest":true,"CreatedAt":"2019-06-12T22:14:19","Actor":"dotnet-maestro[bot]","Number":"11540","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/12/2019 4:30 AM\r\n- **Commit**: 8e7f7cf546d26b4dba4bae2b8bbe3ab51beb17a9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19311.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11540","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11540)"},{"Id":"454941149","IsPullRequest":true,"CreatedAt":"2019-06-12T22:13:18","Actor":"nugetlurker","Number":"11537","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into cli","State":"closed","Body":"Insert NuGet Build 5.2.0-preview2.6045 into cli release/2.1.8xx branch","Url":"https://github.com/dotnet/cli/pull/11537","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-preview2.6045 into cli\" (#11537)"},{"Id":"454941137","IsPullRequest":true,"CreatedAt":"2019-06-12T22:13:03","Actor":"nugetlurker","Number":"11536","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into cli","State":"closed","Body":"Insert NuGet Build 5.2.0-preview2.6045 into cli release/2.2.4xx branch","Url":"https://github.com/dotnet/cli/pull/11536","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-preview2.6045 into cli\" (#11536)"},{"Id":"454818735","IsPullRequest":true,"CreatedAt":"2019-06-12T19:58:57","Actor":"wli3","Number":"11528","RawContent":null,"Title":"Collect crash exception","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11528","RelatedDescription":"Closed or merged PR \"Collect crash exception\" (#11528)"},{"Id":"454885451","IsPullRequest":false,"CreatedAt":"2019-06-12T19:27:24","Actor":"CodeSwimBikeRunner","Number":"11533","RawContent":null,"Title":"Request to Make Self Contained Deployments Smaller","State":"closed","Body":"## Steps to reproduce\r\n1. Create a HelloWorld Console app with `dotnet new console`\r\n2. Run `dotnet publish -o output -c Release -r linux-x64 --self-contained`\r\n3. Look in the output folder and see libraries that are not necessary to running the app\r\n\r\n## Expected  behavior\r\n.net core runtime with only the deps of the project needed to run the executable.\r\n\r\n## Actual behavior\r\nFluff :)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\nHappens for all sdks\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11533","RelatedDescription":"Closed issue \"Request to Make Self Contained Deployments Smaller\" (#11533)"},{"Id":"454915890","IsPullRequest":true,"CreatedAt":"2019-06-12T15:25:37","Actor":"perjahn","Number":"11534","RawContent":null,"Title":"Spelling.","State":"closed","Body":"- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11534","RelatedDescription":"Closed or merged PR \"Spelling.\" (#11534)"},{"Id":"455177323","IsPullRequest":true,"CreatedAt":"2019-06-12T12:47:30","Actor":"dotnet-maestro[bot]","Number":"11541","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: d285831c74b28e71a8a494e1ec2a02a95861bbb8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19311.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11541","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11541)"},{"Id":"455175013","IsPullRequest":true,"CreatedAt":"2019-06-12T12:36:58","Actor":"dotnet-maestro[bot]","Number":"11539","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11539","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11539)"},{"Id":"454941158","IsPullRequest":true,"CreatedAt":"2019-06-11T23:05:49","Actor":"nugetlurker","Number":"11538","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into cli","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6045 into cli master branch","Url":"https://github.com/dotnet/cli/pull/11538","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6045 into cli\" (#11538)"},{"Id":"454939300","IsPullRequest":true,"CreatedAt":"2019-06-11T22:58:17","Actor":"dotnet-bot","Number":"11535","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11535","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11535)"},{"Id":"454875409","IsPullRequest":true,"CreatedAt":"2019-06-11T20:28:55","Actor":"wli3","Number":"11532","RawContent":null,"Title":"Update stage 0 and adjust a breaking change","State":"closed","Body":"From system.text.json https://github.com/dotnet/corefx/pull/38120\r\n","Url":"https://github.com/dotnet/cli/pull/11532","RelatedDescription":"Closed or merged PR \"Update stage 0 and adjust a breaking change\" (#11532)"},{"Id":"454859694","IsPullRequest":false,"CreatedAt":"2019-06-11T19:39:11","Actor":"daholste","Number":"11530","RawContent":null,"Title":"Telemetry Error","State":"closed","Body":"Hey Dotnet CLI,\r\n\r\nTo build the ML.NET CLI, we forked the telemetry portion of this repo. When @justinormont was executing this code on a Mac laptop, during one run, the following exception occurred:\r\n\r\n```\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n```\r\n\r\nOut of four runs today (and many in the past) on the Mac of the same code, this only happened one time.\r\n\r\nAny thoughts on what the issue could be?","Url":"https://github.com/dotnet/cli/issues/11530","RelatedDescription":"Closed issue \"Telemetry Error\" (#11530)"},{"Id":"454859813","IsPullRequest":false,"CreatedAt":"2019-06-11T19:37:25","Actor":"daholste","Number":"11531","RawContent":null,"Title":"Telemetry Exception in EnumerateInterfaceAddresses","State":"closed","Body":"Hey .NET CLI,\r\n\r\nTo build the ML.NET CLI, we forked the telemetry portion of this repo. When @justinormont was executing this code on a Mac, during one run, the following exception occurred:\r\n\r\n```\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n```\r\n\r\nOut of four runs today (and many in the past) on the Mac of the same code, this only happened one time.\r\n\r\nAny thoughts on what the issue could be?","Url":"https://github.com/dotnet/cli/issues/11531","RelatedDescription":"Closed issue \"Telemetry Exception in EnumerateInterfaceAddresses\" (#11531)"},{"Id":"454836187","IsPullRequest":true,"CreatedAt":"2019-06-11T18:20:42","Actor":"dotnet-maestro[bot]","Number":"11529","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/11/2019 6:20 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19306.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11529","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#11529)"},{"Id":"454653307","IsPullRequest":true,"CreatedAt":"2019-06-11T15:50:54","Actor":"dotnet-maestro[bot]","Number":"11527","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190610.1\r\n- **Date Produced**: 6/10/2019 12:49 PM\r\n- **Commit**: e56d4e9a911ea00445bfcf242d10fa135d68deb2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19310.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11527","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11527)"},{"Id":"454650498","IsPullRequest":true,"CreatedAt":"2019-06-11T15:49:40","Actor":"dotnet-maestro[bot]","Number":"11525","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190610.24\r\n- **Date Produced**: 6/11/2019 12:59 AM\r\n- **Commit**: f268510de7a7bcf800a6966830f8d11ff8d24e0d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19310.24\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11525","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11525)"},{"Id":"453996036","IsPullRequest":true,"CreatedAt":"2019-06-11T15:18:15","Actor":"vagisha-nidhi","Number":"11516","RawContent":null,"Title":"Updating TP version to 16.2 preview","State":"closed","Body":"Release: [https://github.com/microsoft/vstest/releases/tag/v16.2.0-preview-20190606-02](https://github.com/microsoft/vstest/releases/tag/v16.2.0-preview-20190606-02)\r\n","Url":"https://github.com/dotnet/cli/pull/11516","RelatedDescription":"Closed or merged PR \"Updating TP version to 16.2 preview\" (#11516)"},{"Id":"454650708","IsPullRequest":true,"CreatedAt":"2019-06-11T12:42:35","Actor":"dotnet-maestro[bot]","Number":"11526","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190610.1\r\n- **Date Produced**: 6/11/2019 2:35 AM\r\n- **Commit**: cb95988d8aba8f6a383feb2a7dc9890e5bce550c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19310.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11526","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11526)"},{"Id":"454455448","IsPullRequest":false,"CreatedAt":"2019-06-11T02:47:40","Actor":"friedrich-brunzema","Number":"11524","RawContent":null,"Title":"dotnet publish -f netcoreapp2.2 mysolution.sln should publish netcoreapp2.2 targets in solution but not generate errors for .netstandard2.2 projects in solution","State":"open","Body":"## Steps to reproduce\r\n1. Create 3 projects\r\n   - dotnet new classlib\r\n   - dotnet new nunit\r\n   - dotnet new console\r\n2. Link all 3 projects into a .sln file (t.sln)\r\n3. Both nunit and console project reference classlib as project reference\r\n4. run: dotnet publish -f netcoreapp2.2 t.sln\r\n\r\n## Expected  behavior\r\nNo errors, Netcore projects (nunit, console) publish to the publish folder for both projects.  Class library does not publish, because -f netcoreapp2.2 was selected, not netstandard2.2. Also -- dotnet publish -f netstandard t.sln publishes only the class lib with its dependencies.\r\nNo empty classlib/bin/Debug/netcoreapp2.2 folder present\r\nDuring the build, a message is shown that project classlib is not being published, because it does not match the requested target framework type.\r\n \r\n## Actual behavior\r\nError message is shown in RED.  Note that both netcore projects do publish correctly with the dependencies present.\r\nEmpty ./classlib/bin/Debug/netcoreapp2.2 is created.\r\n\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 49.54 ms for /Users/Friedrich/tmp/t/unittest/unittest.csproj.\r\n  Restore completed in 49.09 ms for /Users/Friedrich/tmp/t/netcore/netcore.csproj.\r\n  Restore completed in 49.09 ms for /Users/Friedrich/tmp/t/classlib/classlib.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error NETSDK1005: Assets file '/Users/Friedrich/tmp/t/classlib/obj/project.assets.json' doesn't have a target for '.NETCoreApp,Version=v2.2'. Ensure that restore has run and that you have included 'netcoreapp2.2' in the TargetFrameworks for your project. [/Users/Friedrich/tmp/t/classlib/classlib.csproj]\r\n  classlib -> /Users/Friedrich/tmp/t/classlib/bin/Debug/netstandard2.0/classlib.dll\r\n  netcore -> /Users/Friedrich/tmp/t/netcore/bin/Debug/netcoreapp2.2/netcore.dll\r\n  netcore -> /Users/Friedrich/tmp/t/netcore/bin/Debug/netcoreapp2.2/publish/\r\n  unittest -> /Users/Friedrich/tmp/t/unittest/bin/Debug/netcoreapp2.2/unittest.dll\r\n  unittest -> /Users/Friedrich/tmp/t/unittest/bin/Debug/netcoreapp2.2/publish/\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.105/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003148 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview2-1-003177 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview3-004056 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview4-004233 [/usr/local/share/dotnet/sdk]\r\n  1.0.1 [/usr/local/share/dotnet/sdk]\r\n  2.0.0-preview1-005977 [/usr/local/share/dotnet/sdk]\r\n  2.0.0-preview2-006497 [/usr/local/share/dotnet/sdk]\r\n  2.0.0 [/usr/local/share/dotnet/sdk]\r\n  2.1.4 [/usr/local/share/dotnet/sdk]\r\n  2.1.101 [/usr/local/share/dotnet/sdk]\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview1-002111-00 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-25407-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11524","RelatedDescription":"Open issue \"dotnet publish -f netcoreapp2.2 mysolution.sln should publish netcoreapp2.2 targets in solution but not generate errors for .netstandard2.2 projects in solution\" (#11524)"},{"Id":"454429140","IsPullRequest":false,"CreatedAt":"2019-06-11T00:34:17","Actor":"peterhuene","Number":"11523","RawContent":null,"Title":"Improvements to global.json.","State":"open","Body":"This epic tracks the work for improving the SDK versioning in global.json.","Url":"https://github.com/dotnet/cli/issues/11523","RelatedDescription":"Open issue \"Improvements to global.json.\" (#11523)"},{"Id":"454429106","IsPullRequest":false,"CreatedAt":"2019-06-11T00:34:09","Actor":"peterhuene","Number":"11522","RawContent":null,"Title":"Review global.json design document.","State":"open","Body":"Issue to track the review of the proposed changes to global.json for SDK versioning.","Url":"https://github.com/dotnet/cli/issues/11522","RelatedDescription":"Open issue \"Review global.json design document.\" (#11522)"},{"Id":"454421574","IsPullRequest":false,"CreatedAt":"2019-06-10T23:55:56","Actor":"StephenWeatherford","Number":"11521","RawContent":null,"Title":"dotnet-install.cmd fails if install path contains a space","State":"open","Body":"## Steps to reproduce\r\nOn Windows, run this:\r\n```\r\ndotnet-install.cmd -InstallDir \"c:\\Users\\<user>\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\ms-vscode.sample-extension\\.dotnet\\2.2.0\" -Runtime dotnet -Version 2.2.0\r\n```\r\n\r\n## Expected  behavior\r\nShould install\r\n\r\n## Actual behavior\r\nGives an error:\r\n```\r\nArchitecture not supported. If you think this is a bug, please report it at https://github.com/dotnet/cli/issues\r\n```\r\n\r\nThe path is correctly interpreted by the batch file, but PowerShell is getting a corrupted value for the $Archtecture parameter (`\"Insiders\\User\\globalStorage\\ms-vscode.sample-extension\\.dotnet\\2.2.0\"`)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download","Url":"https://github.com/dotnet/cli/issues/11521","RelatedDescription":"Open issue \"dotnet-install.cmd fails if install path contains a space\" (#11521)"},{"Id":"454354479","IsPullRequest":false,"CreatedAt":"2019-06-10T20:21:32","Actor":"crummel","Number":"11520","RawContent":null,"Title":"CLI should not use stage0 SDK for reference assemblies","State":"open","Body":"CLI currently uses the stage0 SDK in its build for reference assemblies.  In source-build, CoreFX is always built before CLI, so CLI can use up-to-date reference assemblies from there instead.\r\n\r\ncc @dseefeld","Url":"https://github.com/dotnet/cli/issues/11520","RelatedDescription":"Open issue \"CLI should not use stage0 SDK for reference assemblies\" (#11520)"},{"Id":"454336101","IsPullRequest":false,"CreatedAt":"2019-06-10T19:36:40","Actor":"jjxtra","Number":"11519","RawContent":null,"Title":"Cannot publish self contained of an exe that references another exe project","State":"open","Body":"## Steps to reproduce\r\nCreate two csproj, both exe console application\r\nHave one csproj reference the other\r\nAttempt to: dotnet publish -r linux-64 --self-contained -o ./publish\r\nYou will get a runtime identifier error, even though -r is passed\r\nNow set a <RuntimeIdentifier> to the referenced exe project in the csproj to 'win-x86'.\r\nNow run the dotnet publish command from above again. It works.\r\n\r\nSeems like a bug in the publish command to me.\r\n\r\nCommit that fixed it: https://github.com/DigitalRuby/IPBan/commit/2ae556ab5acdaef8f1e2805cb643c2afd6d1fc7f\r\n\r\nI have other private repo with an exe that references this project. Could not get dotnet publish to work until I added a runtimeidentifier to the csproj. Weird.\r\n\r\nFor reference, here is my publish command:\r\n`dotnet publish PrivateService.csproj -f netcoreapp2.2 -o ./package/linux-x64 -c Release -r linux-x64 --self-contained true`\r\n\r\nPrivateService.csproj is an exe that references IPBan.csproj.","Url":"https://github.com/dotnet/cli/issues/11519","RelatedDescription":"Open issue \"Cannot publish self contained of an exe that references another exe project\" (#11519)"},{"Id":"454335953","IsPullRequest":false,"CreatedAt":"2019-06-10T19:36:20","Actor":"crummel","Number":"11518","RawContent":null,"Title":"Source-build patch removal for CLI","State":"open","Body":"Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/cli.\r\n\r\nPatches that have the responsibility \"Repo\" and the Disposition \"Incorporate\" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility \"source-build\" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.\r\n\r\n\r\nPatch name | Type | Disposition | Responsibility | Notes\r\n-- | -- | -- | -- | --\r\ncli/0001-Implement-PVP-repo-API.patch | Flow | Incorporate | Repo |  \r\ncli/0002-Exclude-test-projects-from-source-build.patch | ProjRemoval | Incorporate | Repo |  \r\ncli/0003-Add-repo-specific-target-emptying-file.patch | Build | Incorporate | Repo |  \r\ncli/0004-Consolidate-Newtonsoft.Json-versions.patch | No-op | Remove | source-build | Rebased after CLI took the fix but due to a whitespace diff this patch   remained although it does nothing.\r\ncli/0005-Disable-signing.patch | Build | Unknown | source-build | Tomas suggested that we should be able to open-sign things in   source-build.  Needs investigation.\r\ncli/0006-Remove-keys-from-InternalsVisibleTo.patch | Build | Unknown | source-build | This shouldn't be necessary if CLI correctly doesn't build tests in   source-build.  Could be either of our   problems.\r\ncli/0007-Consolidate-CommandLine-versions.patch | Bug | RepoRemoval | Repo | This was an additional workaround for the cli-migrate signing issue and   should go away when that does.\r\ncli/0008-Add-LangVersion-to-CLI.patch | ToolCompat | Remove | source-build |  \r\ncli/0009-Revert-to-using-Newtonsoft.Json.patch | ToolCompat | Remove | source-build |  \r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11518","RelatedDescription":"Open issue \"Source-build patch removal for CLI\" (#11518)"},{"Id":"454137769","IsPullRequest":true,"CreatedAt":"2019-06-10T12:41:19","Actor":"dotnet-maestro[bot]","Number":"11517","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11517","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11517)"},{"Id":"453920142","IsPullRequest":false,"CreatedAt":"2019-06-09T17:32:23","Actor":"wli3","Number":"11515","RawContent":null,"Title":"Change all aspnet feed","State":"open","Body":"the feed is out of date and aspnet no longer publish to it\r\nhttps://github.com/dotnet/sdk/blob/4005bb6a11e492e03f784b5bde9ed5e438224374/src/Tests/Microsoft.NET.TestFramework/NuGetConfigWriter.cs#L13 \r\n\r\nThis is the update to date list\r\nhttps://github.com/aspnet/AspNetCore/blob/master/docs/DailyBuilds.md","Url":"https://github.com/dotnet/cli/issues/11515","RelatedDescription":"Open issue \"Change all aspnet feed\" (#11515)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"455203364","IsPullRequest":true,"CreatedAt":"2019-06-12T13:17:20","Actor":"dotnet-maestro[bot]","Number":"1246","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.10\r\n- **Date Produced**: 6/12/2019 9:52 AM\r\n- **Commit**: f5399d9d24536697a3bc36339e13ba085fc28938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1246","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1246)"},{"Id":"455174207","IsPullRequest":true,"CreatedAt":"2019-06-12T12:14:57","Actor":"dotnet-maestro[bot]","Number":"1245","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19311.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1245","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1245)"},{"Id":"454680960","IsPullRequest":true,"CreatedAt":"2019-06-11T13:19:14","Actor":"dotnet-maestro[bot]","Number":"1244","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/11/2019 11:00 AM\r\n- **Commit**: a78bd7308555926f88aad3d0ecaaebae0f9204cc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1244","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1244)"},{"Id":"454649658","IsPullRequest":true,"CreatedAt":"2019-06-11T12:15:00","Actor":"dotnet-maestro[bot]","Number":"1243","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190610.24\r\n- **Date Produced**: 6/11/2019 12:59 AM\r\n- **Commit**: f268510de7a7bcf800a6966830f8d11ff8d24e0d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19310.24\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1243","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1243)"},{"Id":"454251339","IsPullRequest":false,"CreatedAt":"2019-06-10T16:19:02","Actor":"vixisoft","Number":"1242","RawContent":null,"Title":"ExcludeFromCodeCoverageAttribute should have Justification property","State":"open","Body":"Hi,\r\n\r\nWe are trying to build our Organisation Framework for DotNetCore and while we tried to test everything, some of the methods cannot be tested directly. (EF Core Wrapper mainly)\r\n\r\nSo we added the Attribute ExcludeFromCodeCoverage but we are not satisfied with the attribute.\r\n\r\nFirst, it doesn't have any Justification property so it not clear for other person why this has been added. ( Missing expertise to test ?, Cannot be tested ?, why !)\r\n\r\nSecond, it cannot be inherited because its marked as sealed class...\r\n\r\nThere is no way we can use this attribute to help others ?\r\nTelling them why this is in place?\r\n\r\nWe put the justification in the summary at the moment but i feel it's the worse place to put it...\r\n\r\nBecause:\r\n- it's added to the documentation when it shouldn't.\r\n- Someone can erase the summary because it has been refactored or anything and kill the justification. If it was in Justification property of the attribute we could at leat keep it safe until we judge that it can be removed and tested!\r\n\r\nCan you modify this attribute? \r\nOr how can i add this justification without putting it in the summary of the method / class ?","Url":"https://github.com/dotnet/standard/issues/1242","RelatedDescription":"Open issue \"ExcludeFromCodeCoverageAttribute should have Justification property\" (#1242)"},{"Id":"454161356","IsPullRequest":true,"CreatedAt":"2019-06-10T13:16:44","Actor":"dotnet-maestro[bot]","Number":"1241","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.5\r\n- **Date Produced**: 6/10/2019 12:19 AM\r\n- **Commit**: 7e56d8bd8b224d834b782a98bfd7035f71c3f547\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1241","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1241)"},{"Id":"454137194","IsPullRequest":true,"CreatedAt":"2019-06-10T12:14:25","Actor":"dotnet-maestro[bot]","Number":"1240","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19309.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1240","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1240)"},{"Id":"453895716","IsPullRequest":true,"CreatedAt":"2019-06-09T13:13:58","Actor":"dotnet-maestro[bot]","Number":"1239","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 11:19 AM\r\n- **Commit**: 48c3adf8ad0256689375060437c2e6262d5e805a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1239","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1239)"},{"Id":"453891137","IsPullRequest":true,"CreatedAt":"2019-06-09T12:09:21","Actor":"dotnet-maestro[bot]","Number":"1238","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190608.1\r\n- **Date Produced**: 6/8/2019 12:50 PM\r\n- **Commit**: 747a1bdf2a74a486fb075045cb2384fa89a7983c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19308.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1238","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1238)"},{"Id":"453791889","IsPullRequest":true,"CreatedAt":"2019-06-08T13:12:04","Actor":"dotnet-maestro[bot]","Number":"1237","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190607.10\r\n- **Date Produced**: 6/8/2019 7:24 AM\r\n- **Commit**: 20ba99aaf60ba91180f304211b096e1147564a7c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19307.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19307.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19307.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1237","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1237)"},{"Id":"453787233","IsPullRequest":true,"CreatedAt":"2019-06-08T12:14:16","Actor":"dotnet-maestro[bot]","Number":"1236","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190607.62\r\n- **Date Produced**: 6/8/2019 3:43 AM\r\n- **Commit**: 29999b2846623e2d96733577165968d09bc2bcc1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19307.62\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1236","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1236)"},{"Id":"453504450","IsPullRequest":true,"CreatedAt":"2019-06-07T13:16:47","Actor":"dotnet-maestro[bot]","Number":"1235","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.9\r\n- **Date Produced**: 6/7/2019 5:48 AM\r\n- **Commit**: de1da50fc5f972348aba2fa40ff14e1cbadb13de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1235","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1235)"},{"Id":"453479367","IsPullRequest":true,"CreatedAt":"2019-06-07T12:24:35","Actor":"dotnet-maestro[bot]","Number":"1234","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190606.12\r\n- **Date Produced**: 6/6/2019 9:47 PM\r\n- **Commit**: a1805103791e43031355e11c0d037bca803a9593\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19306.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1234","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1234)"},{"Id":"453020508","IsPullRequest":true,"CreatedAt":"2019-06-06T13:17:28","Actor":"dotnet-maestro[bot]","Number":"1233","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:50 AM\r\n- **Commit**: 71aec681dd1247979e7956372abae8bbc02c9546\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1233","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1233)"},{"Id":"452992389","IsPullRequest":true,"CreatedAt":"2019-06-06T12:14:38","Actor":"dotnet-maestro[bot]","Number":"1232","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19305.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1232","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1232)"},{"Id":"450570292","IsPullRequest":true,"CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Number":"1219","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders","State":"closed","Body":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz ","Url":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Closed or merged PR \"Add HttpResponseMessage.TrailingHeaders\" (#1219)"},{"Id":"452490563","IsPullRequest":true,"CreatedAt":"2019-06-05T13:16:16","Actor":"dotnet-maestro[bot]","Number":"1231","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1231)"},{"Id":"452464354","IsPullRequest":true,"CreatedAt":"2019-06-05T12:14:49","Actor":"dotnet-maestro[bot]","Number":"1230","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1230","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1230)"},{"Id":"451078421","IsPullRequest":true,"CreatedAt":"2019-06-05T00:46:32","Actor":"dotnet-maestro[bot]","Number":"1224","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1224)"},{"Id":"451983344","IsPullRequest":true,"CreatedAt":"2019-06-04T13:12:14","Actor":"dotnet-maestro[bot]","Number":"1229","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 8:34 AM\r\n- **Commit**: 6d5959cbc7d489406f8f85dba0a42f06d4a0ea9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1229","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1229)"},{"Id":"451725417","IsPullRequest":false,"CreatedAt":"2019-06-03T23:00:31","Actor":"wpatter6","Number":"1228","RawContent":null,"Title":"Hosting environment or server.mappath in .net framework","State":"open","Body":"Hi, I'm building a nuget package that will be used in both .NET Framework 4.6.2+ and dotnet core MVC type applications.\r\n\r\nThere is some functionality I'm providing that requires knowing the web root path.  Within the dotnet core world, I'm able to access the hosting environment and get the web root from there. \r\n\r\nBut how can this be done for framework 4.6.2+ applications, without the hosting environment, Server.MapPath or some equivalent?  Is it possible?  \r\n\r\nI'm currently using `Directory.GetCurrentDirectory() + @\"..\\..\\\";` but this is obviously quite hacky and only supports the default hosting configuration.\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1228","RelatedDescription":"Open issue \"Hosting environment or server.mappath in .net framework\" (#1228)"},{"Id":"451464633","IsPullRequest":true,"CreatedAt":"2019-06-03T12:58:57","Actor":"dotnet-maestro[bot]","Number":"1227","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 10:38 AM\r\n- **Commit**: 0eed4042f056b4d9f6f4d1bf2918e234d67a6f88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1227","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1227)"},{"Id":"451188035","IsPullRequest":true,"CreatedAt":"2019-06-02T12:49:02","Actor":"dotnet-maestro[bot]","Number":"1226","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1226)"},{"Id":"451082070","IsPullRequest":true,"CreatedAt":"2019-06-01T12:54:30","Actor":"dotnet-maestro[bot]","Number":"1225","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1225)"},{"Id":"450941804","IsPullRequest":true,"CreatedAt":"2019-05-31T22:52:40","Actor":"dotnet-maestro-bot","Number":"1221","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @wtgodbe\n* @dotnet-maestro[bot]\n* @ericstj\n* @terrajobst\n* @ViktorHofer\n* @JohnTortugo\n* @joperezr\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1221","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1221)"},{"Id":"450951486","IsPullRequest":true,"CreatedAt":"2019-05-31T19:59:28","Actor":"safern","Number":"1222","RawContent":null,"Title":"Revert \"Add bulk operations to Collection<T>\"","State":"closed","Body":"Due to: https://github.com/dotnet/corefx/issues/38085\r\n\r\ncc: @terrajobst @wtgodbe @karelz ","Url":"https://github.com/dotnet/standard/pull/1222","RelatedDescription":"Closed or merged PR \"Revert \"Add bulk operations to Collection<T>\"\" (#1222)"},{"Id":"450955142","IsPullRequest":true,"CreatedAt":"2019-05-31T19:49:00","Actor":"wtgodbe","Number":"1223","RawContent":null,"Title":"Update branding to preview7 in master","State":"closed","Body":"CC @terrajobst @mmitche ","Url":"https://github.com/dotnet/standard/pull/1223","RelatedDescription":"Closed or merged PR \"Update branding to preview7 in master\" (#1223)"},{"Id":"450765638","IsPullRequest":true,"CreatedAt":"2019-05-31T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1220","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1220","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1220)"},{"Id":"450273832","IsPullRequest":true,"CreatedAt":"2019-05-30T12:36:19","Actor":"dotnet-maestro[bot]","Number":"1218","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1218)"},{"Id":"450026795","IsPullRequest":true,"CreatedAt":"2019-05-29T22:45:51","Actor":"ericstj","Number":"1217","RawContent":null,"Title":"Source build fixes","State":"closed","Body":"Use GenFacades instead of GenAPI and remove GenAPI and APICompat from source build.","Url":"https://github.com/dotnet/standard/pull/1217","RelatedDescription":"Closed or merged PR \"Source build fixes\" (#1217)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"455535070","IsPullRequest":false,"CreatedAt":"2019-06-13T04:58:09","Actor":"AArnott","Number":"38497","RawContent":null,"Title":"Debug.Fail crashes .netcoreapp2.x and 3.0 processes","State":"open","Body":"Create an xunit csproj test project with these targets:\r\n```xml\r\n <TargetFrameworks>netcoreapp1.0;netcoreapp2.0;netcoreapp2.1;netcoreapp2.2;netcoreapp3.0</TargetFrameworks>\r\n```\r\n\r\nDefine the following test method:\r\n```cs\r\n[Fact]\r\npublic void CatchTest()\r\n{\r\n    try\r\n    {\r\n        System.Diagnostics.Debug.Fail(\"just a test\");\r\n    }\r\n    catch\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nRun the tests using `dotnet test` or Test Explorer.\r\n\r\n**Expected**\r\n\r\nAll tests pass\r\n\r\n**Actual**\r\n\r\nThe test passes on .netcoreapp1.0, but *crashes the process* for .netcoreapp2.0, 2.1, 2.2, and 3.0.\r\n\r\nSee repro project: [XUnitTestProject1.zip](https://github.com/dotnet/corefx/files/3284264/XUnitTestProject1.zip)\r\n\r\n```\r\n[6/12/2019 10:53:08.062 PM Error] The active test run was aborted. Reason: Test host process crashed : FailFast: just a test\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)\r\n   at XUnitTestProject1.UnitTest1.CatchTest() in C:\\Users\\andarno\\source\\repos\\XUnitTestProject1\\XUnitTestProject1\\UnitTest1.cs:line 13\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)\r\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)\r\n   at Xunit.Sdk.TestInvoker`1.CallTestMethod(Object testClassInstance) in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestInvoker.cs:line 150\r\n   at Xunit.Sdk.TestInvoker`1.<>c__DisplayClass48_1.<<InvokeTestMethodAsync>b__1>d.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestInvoker.cs:line 257\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestInvoker`1.<>c__DisplayClass48_1.<InvokeTestMethodAsync>b__1()\r\n   at Xunit.Sdk.ExecutionTimer.<AggregateAsync>d__4.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\ExecutionTimer.cs:line 48\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.ExecutionTimer.AggregateAsync(Func`1 asyncAction)\r\n   at Xunit.Sdk.ExceptionAggregator.<RunAsync>d__9.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.core\\Sdk\\ExceptionAggregator.cs:line 90\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync(Func`1 code)\r\n   at Xunit.Sdk.TestInvoker`1.<InvokeTestMethodAsync>d__48.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestInvoker.cs:line 239\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestInvoker`1.InvokeTestMethodAsync(Object testClassInstance)\r\n   at Xunit.Sdk.TestInvoker`1.<<RunAsync>b__47_0>d.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestInvoker.cs:line 206\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestInvoker`1.<RunAsync>b__47_0()\r\n   at Xunit.Sdk.ExceptionAggregator.<RunAsync>d__10`1.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.core\\Sdk\\ExceptionAggregator.cs:line 107\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync[T](Func`1 code)\r\n   at Xunit.Sdk.XunitTestRunner.<InvokeTestAsync>d__4.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\XunitTestRunner.cs:line 67\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.XunitTestRunner.InvokeTestAsync(ExceptionAggregator aggregator)\r\n   at Xunit.Sdk.ExceptionAggregator.<RunAsync>d__10`1.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync[T](Func`1 code)\r\n   at Xunit.Sdk.TestRunner`1.<RunAsync>d__43.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestRunner`1.RunAsync()\r\n   at Xunit.Sdk.TestCaseRunner`1.<RunAsync>d__19.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestCaseRunner.cs:line 82\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestCaseRunner`1.RunAsync()\r\n   at Xunit.Sdk.XunitTestMethodRunner.RunTestCaseAsync(IXunitTestCase testCase) in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\XunitTestMethodRunner.cs:line 45\r\n   at Xunit.Sdk.TestMethodRunner`1.<RunTestCasesAsync>d__32.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestMethodRunner.cs:line 136\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestMethodRunner`1.RunTestCasesAsync()\r\n   at Xunit.Sdk.TestMethodRunner`1.<RunAsync>d__31.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestMethodRunner.cs:line 106\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestMethodRunner`1.RunAsync()\r\n   at Xunit.Sdk.TestClassRunner`1.<RunTestMethodsAsync>d__38.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestClassRunner.cs:line 213\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync()\r\n   at Xunit.Sdk.TestClassRunner`1.<RunAsync>d__37.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestClassRunner.cs:line 171\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestClassRunner`1.RunAsync()\r\n   at Xunit.Sdk.TestCollectionRunner`1.<RunTestClassesAsync>d__28.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestCollectionRunner.cs:line 130\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestCollectionRunner`1.RunTestClassesAsync()\r\n   at Xunit.Sdk.TestCollectionRunner`1.<RunAsync>d__27.MoveNext() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestCollectionRunner.cs:line 101\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Xunit.Sdk.TestCollectionRunner`1.RunAsync()\r\n   at Xunit.Sdk.XunitTestAssemblyRunner.<>c__DisplayClass14_2.<RunTestCollectionsAsync>b__2() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\XunitTestAssemblyRunner.cs:line 184\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n   at System.Threading.Tasks.Task.ExecuteEntry()\r\n   at System.Threading.Tasks.SynchronizationContextTaskScheduler.<>c.<.cctor>b__8_0(Object s)\r\n   at Xunit.Sdk.MaxConcurrencySyncContext.RunOnSyncContext(SendOrPostCallback callback, Object state) in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\MaxConcurrencySyncContext.cs:line 107\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at Xunit.Sdk.MaxConcurrencySyncContext.WorkerThreadProc() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\MaxConcurrencySyncContext.cs:line 89\r\n   at System.Threading.Thread.ThreadMain_ParameterizedThreadStart(Object parameter)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at XUnitTestProject1.UnitTest1.CatchTest()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(System.Object, System.Object[], System.Object[])\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CallTestMethod(System.Object)\r\n   at Xunit.Sdk.TestInvoker`1+<>c__DisplayClass48_1+<<InvokeTestMethodAsync>b__1>d[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Xunit.Sdk.TestInvoker`1+<>c__DisplayClass48_1+<<InvokeTestMethodAsync>b__1>d[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.0.4049, Cu\r\n```\r\n\r\nWhat's odd to me is that the output suggests an exception is thrown (which Debug.Fail isn't expected to do) and I try to catch all exceptions and fail to. So this must be a native exception or something. The exception type isn't printed for the crash so I can't see what it was.","Url":"https://github.com/dotnet/corefx/issues/38497","RelatedDescription":"Open issue \"Debug.Fail crashes .netcoreapp2.x and 3.0 processes\" (#38497)"},{"Id":"455489431","IsPullRequest":true,"CreatedAt":"2019-06-13T02:19:37","Actor":"stephentoub","Number":"38496","RawContent":null,"Title":"Disable Socket_SendReceiveAsync_PropagateToStream_Success test on Windows","State":"closed","Body":"It's hanging sporadically in CI.\r\nhttps://github.com/dotnet/corefx/issues/29742","Url":"https://github.com/dotnet/corefx/pull/38496","RelatedDescription":"Closed or merged PR \"Disable Socket_SendReceiveAsync_PropagateToStream_Success test on Windows\" (#38496)"},{"Id":"455198617","IsPullRequest":true,"CreatedAt":"2019-06-13T01:02:14","Actor":"dotnet-maestro[bot]","Number":"38478","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190612.1\r\n- **Date Produced**: 6/12/2019 11:03 AM\r\n- **Commit**: c6eebb7f1627b32d804071f189a5041fc48696b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190612.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38478","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#38478)"},{"Id":"455415751","IsPullRequest":true,"CreatedAt":"2019-06-13T00:45:37","Actor":"HermanEldering","Number":"38491","RawContent":null,"Title":"Changed DisplayNameAttribute targets to all","State":"closed","Body":"I wanted to apply the DisplayNameAttribute to enum values, but currently it can't be used for that purpose because the targets are limited. I've discovered someone else who wanted to do the same thing, but [used the DescriptionAttribute](https://www.codingame.com/playgrounds/2487/c---how-to-display-friendly-names-for-enumerations).\r\n\r\nWhile it is possible to use the DescriptionAttribute I feel it has a different meaning, and in the future I might want to use both the DisplayNameAttribute and the DescriptionAttribute.\r\n\r\nIn my commit I've changed the targets to AttributeTargets.All because that is what DescriptionAttribute is using. A more limited target could suffice but I don't know what the trade-offs might be in that case. For instance adding AttributeTargets.Struct seems sensible as well.","Url":"https://github.com/dotnet/corefx/pull/38491","RelatedDescription":"Closed or merged PR \"Changed DisplayNameAttribute targets to all\" (#38491)"},{"Id":"455478543","IsPullRequest":false,"CreatedAt":"2019-06-13T00:12:22","Actor":"LLRDevGirl","Number":"38495","RawContent":null,"Title":"Could not load file or assembly 'System.Net.Http with .NET 4.6.1","State":"open","Body":"System.Net team and @karelz , met you at Build conference and you asked me to submit an issue.  I have 5 webjobs having this problem.  I'm describing only **one** of the five webjob issues here.  **Need your help figuring out how to fix so webjob can be deployed with DevOps Pipeline.** \r\nThank you,\r\nMyrna\r\n\r\nOrderSync project - .NET 4.6.1., project builds with warnings in Visual Studio.  Our CI/CD pipeline in Azure DevOps shows release is successful.  Yet, webjob throws error on Azure portal.  Have to manually deploy in VS in order to make it to prod successfully.\r\n\r\nMethod call that errors is ShipOrders that calls FedExBLL and FedExDAL.  Errors related to System.Net.Http versions.  Need your help figuring out how to fix so webjob can be deployed with DevOps Pipeline.\r\n\r\nHere's the app insights report on the bug for the webJob:\r\n[query_data (1).xlsx](https://github.com/dotnet/corefx/files/3283585/query_data.1.xlsx)\r\n\r\nHere's the references:\r\n![FedEx BLL properties](https://user-images.githubusercontent.com/25438083/59394506-c1c15700-8d34-11e9-9e3e-158de826ea1b.PNG)\r\n![FedExDal properties](https://user-images.githubusercontent.com/25438083/59394507-c1c15700-8d34-11e9-92d0-26eef45f07c2.PNG)\r\n![OrderSync systemnethttp](https://user-images.githubusercontent.com/25438083/59394508-c1c15700-8d34-11e9-96e5-51580892afc3.PNG)\r\n\r\nBuild output:\r\n\r\n[Output-Build for OrderSync.txt](https://github.com/dotnet/corefx/files/3283588/Output-Build.for.OrderSync.txt)\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38495","RelatedDescription":"Open issue \"Could not load file or assembly 'System.Net.Http with .NET 4.6.1\" (#38495)"},{"Id":"455195728","IsPullRequest":true,"CreatedAt":"2019-06-12T23:55:15","Actor":"dotnet-maestro[bot]","Number":"38477","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/12/2019 2:30 AM\r\n- **Commit**: 6d29903a0f2d966214685c7d15de4435bb4b8ee3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview7.19311.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19311.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19311.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#38477)"},{"Id":"455438119","IsPullRequest":true,"CreatedAt":"2019-06-12T23:54:34","Actor":"Dotnet-GitSync-Bot","Number":"38493","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/38493","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#38493)"},{"Id":"455470042","IsPullRequest":false,"CreatedAt":"2019-06-12T23:36:22","Actor":"ryanbrandenburg","Number":"38494","RawContent":null,"Title":"Path of ModelState is not informative in certain cases","State":"open","Body":"Take the following example:\r\n\r\n```c#\r\n[Fact]\r\npublic virtual async Task ReadAsync_InformativePath()\r\n{\r\n    var byteArray = Encoding.ASCII.GetBytes(\"[0, 23, 300]\");\r\n    var inputStream = new MemoryStream(byteArray);\r\n\r\n    var modelType = typeof(byte[]);\r\n    var serializerOptions = new JsonSerializerOptions();\r\n\r\n    var ex = await Assert.ThrowsAsync<System.Text.Json.JsonException>(async () => {\r\n        await System.Text.Json.JsonSerializer.ReadAsync(inputStream, modelType, serializerOptions);\r\n    });\r\n\r\n    Assert.Equal(\"[2]\", ex.Path);\r\n}\r\n```\r\n\r\nThis will produce an `ex.Path` of `$` and an `ex.Message` of `The JSON value could not be converted to System.Byte[]. Path: $ | LineNumber: 0 | BytePositionInLine: 1.`, neither of which is particularly informative about what went wrong. The particular information I think would be helpful is the Path of the specific element that failed to convert and the BytePosition of the element that failed to convert. Without those you're essentially left to manually verify your elements one by one.\r\n\r\nCompare this to:\r\n```c#\r\n[Fact]\r\npublic virtual async Task ReadAsync_InformativePath()\r\n{\r\n    var byteArray = Encoding.ASCII.GetBytes(\"[{ \\\"Name\\\": \\\"Name Two\\\", \\\"Small\\\": 300}]\");\r\n    var inputStream = new MemoryStream(byteArray);\r\n\r\n    var modelType = typeof(ComplexModel[]);\r\n    var serializerOptions = new JsonSerializerOptions();\r\n\r\n    var ex = await Assert.ThrowsAsync<System.Text.Json.JsonException>(async () => {\r\n        await System.Text.Json.JsonSerializer.ReadAsync(inputStream, modelType, serializerOptions);\r\n    });\r\n\r\n    Assert.Equal(\"[2]\", ex.Path);\r\n}\r\n\r\nprotected sealed class ComplexModel\r\n{\r\n    public string Name { get; set; }\r\n\r\n    public decimal Age { get; set; }\r\n\r\n    public byte Small { get; set; }\r\n}\r\n```\r\n\r\nWhich produces something like `ex.Path` of `$[0].Small` and `ex.Message` of `The JSON value could not be converted to System.Byte. Path: $[1].Small | LineNumber: 0 | BytePositionInLine: 69.`. That's much more useful, it breaks down the exact array elements, parameter names and BytePositions that you should check out, and gives you the type it failed to convert to. This could only be more useful if it also told you the actual value that failed to convert.\r\n\r\n### Expected result:\r\n|Property|Value|\r\n|---------|------|\r\n|ex.Path  |$[2]|\r\n|ex.Message|The JSON value could not be converted to System.Byte. Path: $[2] \\| LineNumber: 0 \\| BytePositionInLine: 4|\r\n\r\nHopefully that all makes sense, let me know if it needs clarifying.","Url":"https://github.com/dotnet/corefx/issues/38494","RelatedDescription":"Open issue \"Path of ModelState is not informative in certain cases\" (#38494)"},{"Id":"455429394","IsPullRequest":false,"CreatedAt":"2019-06-12T21:19:01","Actor":"ryanbrandenburg","Number":"38492","RawContent":null,"Title":"Implement a concept of \"Required\" properties","State":"open","Body":"### Current situation\r\nThere's no way to indicate that if an object doesn't have a particular property that serialization should fail.\r\n\r\nFor example:\r\n```c#\r\npublic class Person\r\n{\r\n    [Required]\r\n    public string Name { get; set; }\r\n    public int Age { get; set; }\r\n}\r\n```\r\n```json\r\n{\r\n    \"Age\": 46\r\n}\r\n```\r\n\r\nTrying to deserialize the above json as a `Person` will succeed, even though it's been indicated that the name attribute is required, and is missing.\r\n\r\n### Describe the solution you'd like\r\nSystem.Text.Json should respect either `System.ComponentModel.DataAnnotations.RequiredAttribute` or a new attribute (likely extending `System.Text.Json.JsonAttribute`) and error when an attempt is made to serialize an object which doesn't have that property.\r\n\r\n### Describe alternatives you've considered\r\nUsing `System.ComponentModel.DataAnnotations.RequiredAttribute` might be troublesome because it could indicate Requirement in a different context. The alternative is that users implement their own \"Required\"  functionality (and likely get it wrong or incomplete).\r\n\r\nCC @pranavkm who I talked about this with.","Url":"https://github.com/dotnet/corefx/issues/38492","RelatedDescription":"Open issue \"Implement a concept of \"Required\" properties\" (#38492)"},{"Id":"455414282","IsPullRequest":false,"CreatedAt":"2019-06-12T20:40:18","Actor":"buyaa-n","Number":"38490","RawContent":null,"Title":"IndexOutOfRangeException on parsing struct having a class property","State":"open","Body":"Note: 1. Serialization part producing correct/valid json., Error happening on parsing it back.\r\n2. When the row 3 `testObject.MySampleTestClass = new SimpleTestClass  { MyString = \"Hello\", MyDouble = 3.14 } ;` is not set there is no error\r\n```csharp\r\n[Fact]\r\npublic static void ReadStructObjectValueTest()\r\n{\r\n    SimpleTestStruct testObject = new SimpleTestStruct();\r\n    testObject.Initialize();\r\n    testObject.MySampleTestClass = new SimpleTestClass  { MyString = \"Hello\", MyDouble = 3.14 } ;\r\n\r\n    string json = JsonSerializer.ToString(testObject);\r\n    SimpleTestStruct parsedObject = JsonSerializer.Parse<SimpleTestStruct>(json);\r\n    parsedObject.Verify();            \r\n}\r\n\r\npublic struct SimpleTestStruct : ITestClass\r\n{\r\n    public short MyInt16 { get; set; }\r\n    public int MyInt32 { get; set; }\r\n    public long MyInt64 { get; set; }\r\n    ...\r\n    public SampleStruct MySampleStruct { get; set; }\r\n    public SimpleTestClass MySampleTestClass { get; set; }\r\n    ...\r\n}\r\n\r\nSystem.Text.Json.Serialization.Tests.ObjectTests.ReadStructObjectValueTest [FAIL]\r\n   System.IndexOutOfRangeException : Index was outside the bounds of the array.\r\n Stack Trace:\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonClassInfo.cs(246,0):  \r\n   at System.Text.Json.JsonClassInfo.GetProperty(JsonSerializerOptions options, ReadOnlySpan`1 propertyName, ReadStackFrame& frame)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.HandlePropertyName.cs(76,0): \r\n   at System.Text.Json.JsonSerializer.HandlePropertyName(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& state)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.cs(52,0): \r\n   at System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.Helpers.cs(22,0): \r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.String.cs(74,0):\r\n   at System.Text.Json.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.String.cs(31,0):\r\n   at System.Text.Json.JsonSerializer.Parse[TValue](String json, JsonSerializerOptions options)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\tests\\Serialization\\Object.ReadTests.cs(297,0): \r\n   at System.Text.Json.Serialization.Tests.ObjectTests.ReadStructObjectValueTest()","Url":"https://github.com/dotnet/corefx/issues/38490","RelatedDescription":"Open issue \"IndexOutOfRangeException on parsing struct having a class property\" (#38490)"},{"Id":"455407322","IsPullRequest":true,"CreatedAt":"2019-06-12T20:23:50","Actor":"carlossanlop","Number":"38489","RawContent":null,"Title":"[WIP] Fix for issue where iterating over directories ending in a dot would unexpectedly throw","State":"open","Body":"Fixes #37709\r\n\r\n### Issue\r\nIn Windows, when iterating over the files of a directory whose name ends in a dot, the iteration fails by throwing an unexpected exception, even when using the proper prefix `\"\\\\?\\\"` for the full directory path.\r\n\r\n### Fix\r\n\r\n- Add a new internal boolean property to the `EnumerationOptions` class called `IsNormalized`, which will be `false` by default, and should only be switched to `true` after we normalized the path. Anytime a normalized path is modified, the boolean should be reverted to `false`.\r\n- Use `IsNormalized` to decide in `FileSystemEnumerator` if the root directory will be used as is or if we should call `Path.GetFullPath`. If we use the latter option, and the path is invalid, it will throw `ArgumentException`. This exception prevents attempting to open a directory handle later on, which would throw the unexpected `DirectoryNotFoundException`.\r\n- `DirectoryInfo` objects initialized internally are expected to be normalized. Those initialized by the user are marked as not normalized by default.\r\n- Added a unit test to verify the modified behavior is working as expected.\r\n- Make sure we return a brand new predefined `EnumerationOptions` object every time we call `EnumerationOptions.Compatible` or `EnumerationOptions.CompatibleRecursive`. Before, we were creating singletons, which could be modified by one unit test, and then re-used by the next unit test. This would cause ~80 new random, intermittent failures in the `System.IO.FileSystem` tests because `IsNormalized` did not have the expected initial `false` value.\r\n- Additional checks:\r\n    - Throw exception if a `\\0` character is detected in the expression. Added a new case in the unit test `WindowsSearchPatternInvalid_Core` that will verify this throws the expected `ArgumentException`.\r\n    - Improve performance when the expression is `\"*\"`, we should do nothing in that case, and it's the most common, so we should not call unnecessary code.\r\n    - Null-check the optional `EnumerationOptions` object passed to `FileSystemEnumerator`.\r\n- Minor fixes:\r\n    - Use proper casing in two unit test classes.\r\n","Url":"https://github.com/dotnet/corefx/pull/38489","RelatedDescription":"Open PR \"[WIP] Fix for issue where iterating over directories ending in a dot would unexpectedly throw\" (#38489)"},{"Id":"455385084","IsPullRequest":true,"CreatedAt":"2019-06-12T19:59:18","Actor":"stephentoub","Number":"38488","RawContent":null,"Title":"Disable PerformanceCounter_NextValue_ProcessorCounter test","State":"closed","Body":"https://github.com/dotnet/corefx/issues/38180","Url":"https://github.com/dotnet/corefx/pull/38488","RelatedDescription":"Closed or merged PR \"Disable PerformanceCounter_NextValue_ProcessorCounter test\" (#38488)"},{"Id":"455365546","IsPullRequest":true,"CreatedAt":"2019-06-12T19:51:33","Actor":"scalablecory","Number":"38487","RawContent":null,"Title":"Implement MaxResponseHeadersLength for HTTP2","State":"closed","Body":"Resolves #35528.\r\n\r\nImplement MaxResponseHeadersLength for HTTP2. This checks both pre- and post-Huffman decode.\r\nAdd a new test for huffman-coded MaxResponseHeadersLength, and port over two more from ASP.NET for the plaintext variant.\r\nMove HuffmanDecodingTests from functional to unit tests to avoid reflection.\r\n\r\nReviewers note: two tests are brought over from ASP.NET (these are the final two, now we have them all) and are intentionally not scrubbed for styling to make future diffs easier -- see `DecodesStringLength_GreaterThanLimit_Error` and `DecodesStringLength_LimitConfigurable`.","Url":"https://github.com/dotnet/corefx/pull/38487","RelatedDescription":"Closed or merged PR \"Implement MaxResponseHeadersLength for HTTP2\" (#38487)"},{"Id":"455296109","IsPullRequest":true,"CreatedAt":"2019-06-12T19:28:56","Actor":"dotnet-maestro[bot]","Number":"38484","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190612.1\r\n- **Date Produced**: 6/12/2019 12:33 PM\r\n- **Commit**: 3bede28bc81fb594463fc04010358312250dfeec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19312.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190612.2\r\n- **Date Produced**: 6/12/2019 1:30 PM\r\n- **Commit**: 6cc20acd4aa0063ec3300aa0d34dbd0b8c3b0bfe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19312.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38484","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#38484)"},{"Id":"455362184","IsPullRequest":false,"CreatedAt":"2019-06-12T18:31:29","Actor":"lmolkova","Number":"38486","RawContent":null,"Title":"Activity should generate new random ids when receives invalid W3C traceId and spanId","State":"open","Body":"https://www.w3.org/TR/trace-context/#trace-id\r\n\r\n`Implementations HAVE TO ignore the traceparent when the trace-id is invalid. For instance, if it contains non-allowed characters.`\r\n\r\nhttps://www.w3.org/TR/trace-context/#parent-id\r\n\r\n`Implementations HAVE TO ignore the traceparent when the parent-id is invalid. For instance, if it contains non lower case hex characters.`\r\n\r\nNow, when incoming traceId or spanId are invalid, they are set to 0, check [here](https://github.com/dotnet/corefx/blob/4ae5162cfcafcc4c966747d20056d2cb90a785a1/src/System.Diagnostics.DiagnosticSource/src/System/Diagnostics/Activity.cs#L1052) and [tests are missing/wrong too](https://github.com/dotnet/corefx/blob/4ae5162cfcafcc4c966747d20056d2cb90a785a1/src/System.Diagnostics.DiagnosticSource/tests/ActivityTests.cs#L582).","Url":"https://github.com/dotnet/corefx/issues/38486","RelatedDescription":"Open issue \"Activity should generate new random ids when receives invalid W3C traceId and spanId\" (#38486)"},{"Id":"455174041","IsPullRequest":true,"CreatedAt":"2019-06-12T17:41:33","Actor":"dotnet-maestro[bot]","Number":"38474","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19311.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19311.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19311.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38474","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#38474)"},{"Id":"455278953","IsPullRequest":true,"CreatedAt":"2019-06-12T16:59:34","Actor":"Dotnet-GitSync-Bot","Number":"38482","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/38482","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#38482)"},{"Id":"455321774","IsPullRequest":false,"CreatedAt":"2019-06-12T16:53:02","Actor":"Anipik","Number":"38485","RawContent":null,"Title":"No exception being thrown when truing to parse en empty object inside an array to an int array","State":"open","Body":"Adding a new test:\r\n```csharp\r\n        [Theory]\r\n        [InlineData(typeof(int[]), @\"[{}]\")]\r\n        [InlineData(typeof(Dictionary<string, int[]>), @\"{\"\"test\"\": [{}]}\")]\r\n        public static void InvalidJsonForArrayShouldFail(Type type, string json)\r\n        {\r\n            Assert.Throws<JsonException>(() => JsonSerializer.Parse(json, type));\r\n        }\r\n```\r\nFinds the following failure cases:\r\n```\r\nInvalidJsonForArrayShouldFail(type: typeof(int[]), json: \"[{}]\") [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.Text.Json.JsonException)\r\n      Actual:   (No exception was thrown)\r\n```\r\n\r\n```\r\nInvalidJsonForArrayShouldFail(type: typeof(System.Collections.Generic.Dictionary<string, int[]>), json: \"{\\\"test\\\": [{}]}\") [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.Text.Json.JsonException)\r\n      Actual:   (No exception was thrown)\r\n```\r\n\r\n\r\ncc @steveharter ","Url":"https://github.com/dotnet/corefx/issues/38485","RelatedDescription":"Open issue \"No exception being thrown when truing to parse en empty object inside an array to an int array\" (#38485)"},{"Id":"454961055","IsPullRequest":true,"CreatedAt":"2019-06-12T16:48:58","Actor":"stephentoub","Number":"38471","RawContent":null,"Title":"Add regression test for SafeSocketHandle getting collected","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/37044\r\ncc: @wfurt","Url":"https://github.com/dotnet/corefx/pull/38471","RelatedDescription":"Closed or merged PR \"Add regression test for SafeSocketHandle getting collected\" (#38471)"},{"Id":"455186292","IsPullRequest":true,"CreatedAt":"2019-06-12T16:37:10","Actor":"dotnet-maestro[bot]","Number":"38476","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.10\r\n- **Date Produced**: 6/12/2019 9:52 AM\r\n- **Commit**: f5399d9d24536697a3bc36339e13ba085fc28938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview7.19311.10\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19311.10\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#38476)"},{"Id":"455183798","IsPullRequest":true,"CreatedAt":"2019-06-12T16:35:37","Actor":"dotnet-maestro[bot]","Number":"38475","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190612.01\r\n- **Date Produced**: 6/12/2019 10:12 AM\r\n- **Commit**: b114db9944f92786a2f5e321827742ca5b4628bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27812-01\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview7-27812-01\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview7-27812-01\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38475","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#38475)"},{"Id":"455097822","IsPullRequest":true,"CreatedAt":"2019-06-12T16:09:55","Actor":"davidfowl","Number":"38473","RawContent":null,"Title":"Don't swallow OCE unconditionally","State":"closed","Body":"- Today we swallow OperationCanceledExceptions to avoid throwing if CancelPendingRead/CancelPendingFlush, this unintentionally swallows all exceptions that derive from OperationCancelled that were triggered by the ReadAsync call itself. This change rethrows the error unless we're in that specific case of having called one of those Cancel* methods.\r\n- Added tests and did some other small test cleanup.","Url":"https://github.com/dotnet/corefx/pull/38473","RelatedDescription":"Closed or merged PR \"Don't swallow OCE unconditionally\" (#38473)"},{"Id":"455285509","IsPullRequest":false,"CreatedAt":"2019-06-12T15:36:59","Actor":"CoffeeFlux","Number":"38483","RawContent":null,"Title":"ProcessStartInfo.Arguments follows Windows conventions on all platforms","State":"open","Body":"Related issue in Mono: https://github.com/mono/mono/issues/14724\r\n\r\nIt seems that currently in .NET Core, ProcessStartInfo.Arguments follows Windows argument conventions on all platforms. As shown in the linked issue, this leads to significant differences in common scenarios, single quotes being an easy example. \r\n\r\nI wanted to open this issue to clarify whether that is intended, or if there's any chance of Core using POSIX shell conventions on platforms when appropriate. I'm somewhat concerned that Mono customers depend on the current behavior, which is what I would personally expect to see on non-Windows platforms, but I don't know how similar platform differences are typically handled in Core. If following Windows conventions on all platforms is intentional, we'll figure out how to deal with that along with existing applications, but I wanted to clarify/see if there's any chance for a change here.","Url":"https://github.com/dotnet/corefx/issues/38483","RelatedDescription":"Open issue \"ProcessStartInfo.Arguments follows Windows conventions on all platforms\" (#38483)"},{"Id":"455223100","IsPullRequest":true,"CreatedAt":"2019-06-12T15:23:40","Actor":"Dotnet-GitSync-Bot","Number":"38479","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/38479","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#38479)"},{"Id":"455268399","IsPullRequest":false,"CreatedAt":"2019-06-12T15:05:41","Actor":"ahsonkhan","Number":"38481","RawContent":null,"Title":"GoAwayFrame_NoPendingStreams_ConnectionClosed failing with ObjectDisposedException","State":"open","Body":"From https://github.com/dotnet/corefx/pull/38306\r\n\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38306~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190612.4/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2~2FGoAwayFrame_NoPendingStreams_ConnectionClosed\r\n\r\nSystem.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2/GoAwayFrame_NoPendingStreams_ConnectionClosed\r\nUbuntu.1604.Amd64.Open-x64-Release\r\n```text\r\nUnhandled Exception of Type System.Net.Http.HttpRequestException\r\nMessage :\r\nSystem.Net.Http.HttpRequestException : An error occurred while sending the request.\r\n---- System.ObjectDisposedException : Cannot access a disposed object.\r\nObject name: 'CreditManager'.\r\nStack Trace :\r\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 1447\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/HttpConnectionPool.cs:line 539\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/RedirectHandler.cs:line 33\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts) in /_/src/System.Net.Http/src/System/Net/Http/HttpClient.cs:line 521\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.<>c__DisplayClass38_0.<<EstablishConnectionAndProcessOneRequestAsync>b__0>d.MoveNext() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 706\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 83\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 111\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks, Int32 millisecondsTimeout) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 77\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.EstablishConnectionAndProcessOneRequestAsync(HttpClient client, Http2LoopbackServer server) in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 720\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.GoAwayFrame_NoPendingStreams_ConnectionClosed() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 740\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n   at System.Net.Http.CreditManager.RequestCreditAsync(Int32 amount, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/CreditManager.cs:line 75\r\n   at System.Net.Http.Http2Connection.SendHeadersAsync(HttpRequestMessage request, CancellationToken cancellationToken, Boolean mustFlush) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 970\r\n   at System.Threading.Tasks.ValueTask`1.get_Result() in /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/ValueTask.cs:line 763\r\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 1368\r\n```","Url":"https://github.com/dotnet/corefx/issues/38481","RelatedDescription":"Open issue \"GoAwayFrame_NoPendingStreams_ConnectionClosed failing with ObjectDisposedException\" (#38481)"},{"Id":"455001899","IsPullRequest":false,"CreatedAt":"2019-06-12T04:04:13","Actor":"StephenMolloy","Number":"38472","RawContent":null,"Title":"System.Runtime.Caching.MemoryCacheStatistics.SetTrimStats DivideByZeroException","State":"open","Body":"From VS Feedback for .Net 4.5.2 - https://developercommunity.visualstudio.com/content/problem/539608/net-452-systemruntimecachingmemorycachestatisticss.html\r\n\r\n1. private readonly MemoryCache messageStore = new MemoryCache(\"Message Store\");\r\n2. Thread 1: this.messageStore.Add(messageId, message, new CacheItemPolicy { AbsoluteExpiration = DateTimeOffset.UtcNow.AddMinutes(5), RemovedCallback = arguments => { if (arguments.RemovedReason == CacheEntryRemovedReason.Expired) { // Logging ... } } })\r\n3. Timer Thread (System.Threading.Timer):this.messageStore.GetCount();\r\n4. Thread 2: this.messageStore.Get\r\n5. Thread Pool (TPL): this.messageStore.Remove\r\n\r\nSystem.DivideByZeroException: Es wurde versucht, durch 0 (null) zu teilen. bei System.Runtime.Caching.MemoryCacheStatistics.SetTrimStats(Int64 trimDurationTicks, Int64 totalCountBeforeTrim, Int64 trimCount) bei System.Runtime.Caching.MemoryCacheStatistics.CacheManagerThread(Int32 minPercent) bei System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx) bei System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx) bei System.Threading.TimerQueueTimer.CallCallback() bei System.Threading.TimerQueueTimer.Fire() bei System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() bei System.Threading.ThreadPoolWorkQueue.Dispatch() ","Url":"https://github.com/dotnet/corefx/issues/38472","RelatedDescription":"Open issue \"System.Runtime.Caching.MemoryCacheStatistics.SetTrimStats DivideByZeroException\" (#38472)"},{"Id":"454912865","IsPullRequest":false,"CreatedAt":"2019-06-11T22:04:27","Actor":"Priya91","Number":"38467","RawContent":null,"Title":"Https requests on linux distro fails with SSL error","State":"closed","Body":"**.NET Core Version:**\r\n2.1.9\r\n\r\n**OS version and info:**\r\nDebian GNU/Linux 10 (buster),\r\nand just in case -- OpenSSL 1.1.1b\r\n\r\n**Error:**\r\n\r\n```\r\nHTTP exception in auth.login request handler: System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception. ---> System.Security.Authentication.AuthenticationException: Authentication failed, see inner exception. ---> System.TypeInitializationException: The type initializer for 'SslMethods' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Ssl' threw an exception. ---> System.TypeInitializationException: The type initializer for 'SslInitializer' threw an exception. ---> Interop+Crypto+OpenSslCryptographicException: error:0E076071:configuration file routines:MODULE_RUN:unknown module name\r\n   at Interop.SslInitializer..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Interop.Ssl..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Interop.Ssl.SslV2_3Method()\r\n   at Interop.Ssl.SslMethods..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Interop.OpenSsl.AllocateSslContext(SslProtocols protocols, SafeX509Handle certHandle, SafeEvpPKeyHandle certKeyHandle, EncryptionPolicy policy, SslAuthenticationOptions sslAuthenticationOptions)\r\n   at System.Net.Security.SafeDeleteSslContext..ctor(SafeFreeSslCredentials credential, SslAuthenticationOptions sslAuthenticationOptions)\r\n   at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsClient(SslClientAuthenticationOptions sslClientAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__47_0(SslClientAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsClientAsync(SslClientAuthenticationOptions sslClientAuthenticationOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.LiveShare.Tracing.TracingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in E:\\A\\_work\\238\\s\\src\\Tracing\\Tracing\\TracingHttpMessageHandler.cs:line 63\r\n   at Microsoft.Cascade.Agent.ForwardResponseMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in E:\\A\\_work\\238\\s\\src\\Agent\\ForwardResponseMessageHandler.cs:line 50\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n```","Url":"https://github.com/dotnet/corefx/issues/38467","RelatedDescription":"Closed issue \"Https requests on linux distro fails with SSL error\" (#38467)"},{"Id":"454922173","IsPullRequest":true,"CreatedAt":"2019-06-11T21:58:13","Actor":"pgovind","Number":"38470","RawContent":null,"Title":"Handle Byte Order Mark in Utf8JsonReader.Read","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/38418","Url":"https://github.com/dotnet/corefx/pull/38470","RelatedDescription":"Open PR \"Handle Byte Order Mark in Utf8JsonReader.Read\" (#38470)"},{"Id":"454919384","IsPullRequest":true,"CreatedAt":"2019-06-11T21:49:27","Actor":"WinCPP","Number":"38469","RawContent":null,"Title":"CoreFx #36125 (Try)Get for byte sbyte short ushort","State":"open","Body":"Addresses (Try)Get APIs for byte, sbyte, short and ushort for #36125 \r\n\r\n@ahsonkhan @steveharter Kindly review.","Url":"https://github.com/dotnet/corefx/pull/38469","RelatedDescription":"Open PR \"CoreFx #36125 (Try)Get for byte sbyte short ushort\" (#38469)"},{"Id":"454913598","IsPullRequest":true,"CreatedAt":"2019-06-11T21:32:15","Actor":"Anipik","Number":"38468","RawContent":null,"Title":"Tests for  nullable reference types in Span apis","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/34358 https://github.com/dotnet/corefx/issues/33710","Url":"https://github.com/dotnet/corefx/pull/38468","RelatedDescription":"Open PR \"Tests for  nullable reference types in Span apis\" (#38468)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"455508484","IsPullRequest":false,"CreatedAt":"2019-06-13T02:42:40","Actor":"davkean","Number":"36397","RawContent":null,"Title":"[Regression] Get errors when you open two Visual Studio instances with different versions of Roslyn build tasks","State":"open","Body":"**Version Used**: \r\n16.1.2 and 16.2.0 Preview 3.0 [29010.160.d16.2stg]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Open Roslyn.sln in 16.2.0 keeping it open\r\n2.  Open Roslyn.sln in 16.1.2\r\n\r\n**Expected Behavior**:\r\n\r\nNo errors\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tRoslyn.PerformanceTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tRoslyn.PerformanceTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.Apex\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.Apex\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.LegacyCodeAnalysis\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.LegacyCodeAnalysis\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.IntelliTrace\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.IntelliTrace\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.LiveShare\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.LiveShare\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\nError\tMSB4064\tThe \"AnalyzerConfigFiles\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property.\tMicrosoft.CodeAnalysis.ExternalAccess.FSharp.UnitTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t64\t\r\nError\tMSB4063\tThe \"Csc\" task could not be initialized with its input parameters. \tMicrosoft.CodeAnalysis.ExternalAccess.FSharp.UnitTests\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\RTM\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t59\t\r\n\r\n```\r\n\r\nThe build tasks are supposed to versioned every build for avoid this. Looks like this was regressed again.","Url":"https://github.com/dotnet/roslyn/issues/36397","RelatedDescription":"Open issue \"[Regression] Get errors when you open two Visual Studio instances with different versions of Roslyn build tasks\" (#36397)"},{"Id":"455475781","IsPullRequest":true,"CreatedAt":"2019-06-13T00:30:20","Actor":"dotnet-bot","Number":"36388","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36388","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36388)"},{"Id":"455475932","IsPullRequest":true,"CreatedAt":"2019-06-13T00:30:11","Actor":"dotnet-bot","Number":"36392","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36392","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36392)"},{"Id":"455481404","IsPullRequest":false,"CreatedAt":"2019-06-13T00:25:40","Actor":"ryzngard","Number":"36396","RawContent":null,"Title":"Roslyn OOP does not use MEF part rejection","State":"open","Body":"The [OOP MEF composition](http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/Workspace/Host/Mef/MefHostServices.cs,41) currently does not have part rejection enabled. The usefulness of part rejection is that it allows dependency graphs to be used for option export. If a feature depends on something that doesn't exist, it can then also not be exported and avoid being lit up. The workaround right now is to use `AllowDefault = true` on imports and check for null. \r\n\r\nThis differs from the VS Mef behavior, which does use part rejection and puts the error in a logs file. We need to decide the best approach here so future service composition can be consistent. This was noticed in #36334 where one of the proposed fixes was to use part rejection to correctly disallow a feature on VS for Mac. ","Url":"https://github.com/dotnet/roslyn/issues/36396","RelatedDescription":"Open issue \"Roslyn OOP does not use MEF part rejection\" (#36396)"},{"Id":"455479693","IsPullRequest":true,"CreatedAt":"2019-06-13T00:17:33","Actor":"genlu","Number":"36395","RawContent":null,"Title":"Don't show full attribute type name if in attribute name context","State":"open","Body":"Fix #35540\r\nAlso Fix #35124 to show correct suffix for generics in VB.\r\n\r\nTODO:\r\n\r\n- [ ] perf analysis\r\n- [ ] more tests","Url":"https://github.com/dotnet/roslyn/pull/36395","RelatedDescription":"Open PR \"Don't show full attribute type name if in attribute name context\" (#36395)"},{"Id":"455475963","IsPullRequest":true,"CreatedAt":"2019-06-13T00:01:21","Actor":"dotnet-bot","Number":"36394","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"open","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36394","RelatedDescription":"Open PR \"Merge master to features/param-nullchecking\" (#36394)"},{"Id":"455475950","IsPullRequest":true,"CreatedAt":"2019-06-13T00:01:16","Actor":"dotnet-bot","Number":"36393","RawContent":null,"Title":"Merge master to demos/records","State":"open","Body":"\nThis is an automatically generated pull request from master into demos/records.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-demos/records\ngit reset --hard upstream/demos/records\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-demos/records --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36393","RelatedDescription":"Open PR \"Merge master to demos/records\" (#36393)"},{"Id":"455475912","IsPullRequest":true,"CreatedAt":"2019-06-13T00:01:07","Actor":"dotnet-bot","Number":"36391","RawContent":null,"Title":"Merge master to features/lspSupport","State":"open","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36391","RelatedDescription":"Open PR \"Merge master to features/lspSupport\" (#36391)"},{"Id":"455475885","IsPullRequest":true,"CreatedAt":"2019-06-13T00:01:02","Actor":"dotnet-bot","Number":"36390","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36390","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36390)"},{"Id":"455475858","IsPullRequest":true,"CreatedAt":"2019-06-13T00:00:58","Actor":"dotnet-bot","Number":"36389","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36389","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36389)"},{"Id":"455475697","IsPullRequest":true,"CreatedAt":"2019-06-13T00:00:21","Actor":"dotnet-bot","Number":"36387","RawContent":null,"Title":"Merge master to release/dev16.3-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.3-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.3-preview1\ngit reset --hard upstream/release/dev16.3-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.3-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36387","RelatedDescription":"Open PR \"Merge master to release/dev16.3-preview1\" (#36387)"},{"Id":"455471231","IsPullRequest":true,"CreatedAt":"2019-06-12T23:41:10","Actor":"mairaw","Number":"36386","RawContent":null,"Title":"ISymbol - added missing tag","State":"open","Body":"Fixes https://github.com/dotnet/docs/issues/12737\r\n\r\nMinor style guide fixes as well","Url":"https://github.com/dotnet/roslyn/pull/36386","RelatedDescription":"Open PR \"ISymbol - added missing tag\" (#36386)"},{"Id":"455464294","IsPullRequest":false,"CreatedAt":"2019-06-12T23:14:26","Actor":"vsfeedback","Number":"36385","RawContent":null,"Title":"C#: Naming rule violation with camelCase formatting applied will conflict with static void Main() method inside classes.","State":"open","Body":"<p>Steps to reproduce:</p><ol><li>Set the C# naming rules to allow camelCase naming applied everywhere, just to be able to get maximum coverage for debugging this issue. </li><li>Replace all PascalCase rules to camelCase rules.</li><li>Set all rules to throw errors, instead of giving suggestions.</li><li> Create a new C# file in a brand new C# project.</li><li> Create a simple Hello World program. </li><li> Observe how the camelCase naming rule violation do not give or provide exceptions to certain methods, like the Main() method, which requires the capital M.</li></ol><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/76052-capture.png\"> Image:76052-capture.png</a></p><p>I would like to request a feature to the naming rules convention options, to allow exceptions for Main(). Since, in Visual Studio 2019, we have the option for users to give them custom naming rules, if we were to extremely apply our camelCase naming rules to C#, eventually, the &quot;Main()&quot; method will annoy the users.</p><p>Or maybe it could be fixed? I don't know at this point. Hence my feedback.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/588353/c-naming-rule-violation-with-camelcase-formatting.html\nVSTS ticketId: 901455_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/29/2019, 07:03 PM (13 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36385","RelatedDescription":"Open issue \"C#: Naming rule violation with camelCase formatting applied will conflict with static void Main() method inside classes.\" (#36385)"},{"Id":"455463756","IsPullRequest":false,"CreatedAt":"2019-06-12T23:12:17","Actor":"sharwell","Number":"36384","RawContent":null,"Title":"Change Signature reorder parameters should reorder InlineData arguments","State":"open","Body":"**Version Used**: 16.2 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create an xunit test theory with two parameters\r\n2. Add test cases with `[InlineData]`\r\n3. Use the Change Signature dialog to reverse the order of the two parameters\r\n\r\n**Expected Behavior**:\r\n\r\nThe arguments to each of the `InlineData` attributes should be reversed.\r\n\r\n**Actual Behavior**:\r\n\r\nThe arguments to `InlineData` are not reversed.","Url":"https://github.com/dotnet/roslyn/issues/36384","RelatedDescription":"Open issue \"Change Signature reorder parameters should reorder InlineData arguments\" (#36384)"},{"Id":"455461626","IsPullRequest":false,"CreatedAt":"2019-06-12T23:05:12","Actor":"vsfeedback","Number":"36383","RawContent":null,"Title":"Spaces in declaration statements","State":"closed","Body":"VSF_TYPE_MARKDOWNGiven the following in .editorconfig:\ncsharp_space_around_declaration_statements = ignore\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\n\nIn VS2010 'csharp_space_around_declaration_statements = ignore'  only affected the accessibility, type, and name -- it did not affect the initializer if one was specified. (.editorconfig was not supported in VS2010, but I'm writing about the equivalent Text Editor option.)\n\nIn VS2019 'csharp_space_around_declaration_statements = ignore' affects the whole statement - other spacing options (e.g. 'csharp_space_between_method_call_name_and_opening_parenthesis = false' are ignored)\n\nAttached before.png shows is the original input.\n\nAttached after.png shows that 'csharp_space_between_method_call_name_and_opening_parenthesis = false' is ignored in the declaration statements.\n\nChanging the meaning of 'csharp_space_around_declaration_statements = ignore' is probably not doable as it would break existing formatting, but in the UI (Options/Text Editor/C#/Code Style/Formatting/Spacing/Ignore spaces in declaration statements) it would be good to have a sub-option to specify that the spaces are not ignored in the initializer.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/603361/spaces-in-declaration-statements.html\nVSTS ticketId: 916945_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 6/12/2019, 00:02 AM (16 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36383","RelatedDescription":"Closed issue \"Spaces in declaration statements\" (#36383)"},{"Id":"455458585","IsPullRequest":true,"CreatedAt":"2019-06-12T22:51:57","Actor":"JoeRobich","Number":"36382","RawContent":null,"Title":"Update PublishData.json for divisional snap","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36382","RelatedDescription":"Open PR \"Update PublishData.json for divisional snap\" (#36382)"},{"Id":"455458365","IsPullRequest":false,"CreatedAt":"2019-06-12T22:51:16","Actor":"mavasani","Number":"36381","RawContent":null,"Title":"Hit NRE in completion (GetDescriptionAsync)","State":"open","Body":"**Version Used**: \r\n\r\nVersion 16.2.0 Preview 2.0 [28930.63.d16.2stg]\r\n\r\n**Steps to Reproduce**:\r\n\r\nI don't have repro steps, just saw an NRE reported in goldbar with the following exception stack in activity log:\r\n\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.Completion.CommonCompletionProvider.<GetDescriptionAsync>d__2.MoveNext()\r\n --- End of stack trace from previous location where exception was thrown\r\n ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.AsyncCompletion.CompletionSource.<GetDescriptionAsync>d__23.MoveNext()\r\n --- End of stack trace from previous location where exception was thrown ---\r\n    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.<CallExtensionPointAsync>d__35`1.MoveNext() ---\r\n End of stack trace from previous location where exception was thrown ---\r\n    at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36381","RelatedDescription":"Open issue \"Hit NRE in completion (GetDescriptionAsync)\" (#36381)"},{"Id":"455414985","IsPullRequest":true,"CreatedAt":"2019-06-12T22:30:39","Actor":"dotnet-bot","Number":"36372","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36372","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36372)"},{"Id":"455414715","IsPullRequest":true,"CreatedAt":"2019-06-12T22:30:13","Actor":"dotnet-bot","Number":"36370","RawContent":null,"Title":"Merge master to release/dev16.3-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.3-preview1.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.3-preview1\ngit reset --hard upstream/release/dev16.3-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.3-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36370","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.3-preview1\" (#36370)"},{"Id":"455414860","IsPullRequest":true,"CreatedAt":"2019-06-12T22:30:08","Actor":"dotnet-bot","Number":"36371","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36371","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36371)"},{"Id":"455415015","IsPullRequest":true,"CreatedAt":"2019-06-12T22:00:24","Actor":"dotnet-bot","Number":"36373","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36373","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36373)"},{"Id":"455415057","IsPullRequest":true,"CreatedAt":"2019-06-12T22:00:19","Actor":"dotnet-bot","Number":"36374","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36374","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36374)"},{"Id":"455415084","IsPullRequest":true,"CreatedAt":"2019-06-12T22:00:13","Actor":"dotnet-bot","Number":"36375","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36375","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36375)"},{"Id":"455415127","IsPullRequest":true,"CreatedAt":"2019-06-12T22:00:08","Actor":"dotnet-bot","Number":"36376","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36376","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36376)"},{"Id":"455437341","IsPullRequest":true,"CreatedAt":"2019-06-12T21:41:55","Actor":"Andrew-Hanlon","Number":"36380","RawContent":null,"Title":"Fix #33560 Handle equal tokens where Text is not available.","State":"open","Body":"Fixes #33560\r\nI updated the helper method `AreTwoTokensOnSameLine` to exit early when the provided tokens are equal. This prevents an exception from being thrown when equal tokens are provided and the `SyntaxTree` is null or the `SyntaxTree.TryGetText()` call fails. I added unit tests to cover basic regressions as well as the erroneous case above.","Url":"https://github.com/dotnet/roslyn/pull/36380","RelatedDescription":"Open PR \"Fix #33560 Handle equal tokens where Text is not available.\" (#36380)"},{"Id":"455430598","IsPullRequest":true,"CreatedAt":"2019-06-12T21:22:22","Actor":"AlekseyTs","Number":"36379","RawContent":null,"Title":" Replace `dynamic` with `object` when substituting constraints.","State":"open","Body":"Fixes #36276.\r\n\r\nPlease review the last commit. Previous commits are from https://github.com/dotnet/roslyn/pull/36269.","Url":"https://github.com/dotnet/roslyn/pull/36379","RelatedDescription":"Open PR \" Replace `dynamic` with `object` when substituting constraints.\" (#36379)"},{"Id":"455396798","IsPullRequest":true,"CreatedAt":"2019-06-12T21:18:48","Actor":"jcouv","Number":"36369","RawContent":null,"Title":"Fix namespace for nullable annotations attributes","State":"closed","Body":"Relates to https://github.com/dotnet/roslyn/issues/35816 (work items for nullable annotation attributes)","Url":"https://github.com/dotnet/roslyn/pull/36369","RelatedDescription":"Closed or merged PR \"Fix namespace for nullable annotations attributes\" (#36369)"},{"Id":"455421067","IsPullRequest":false,"CreatedAt":"2019-06-12T20:56:53","Actor":"vsfeedback","Number":"36378","RawContent":null,"Title":"Cannot untick \"Show C# and Visual Basic References\"","State":"open","Body":"VSF_TYPE_MARKDOWNI would like to remove the text above methods which says &quot;x references | y exceptions&quot; but when I go to Tools&gt;Options&gt;Text Editor&gt;All Lanaguages&gt;CodeLens I find the &quot;Show C# and Visual Basic References&quot; checkbox is ticked and greyed out. I would rather not disable CodeLens outright to disable this text.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/590497/cannot-untick-show-c-and-visual-basic-references.html\nVSTS ticketId: 903135_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 6/2/2019, 11:19 PM (9 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36378","RelatedDescription":"Open issue \"Cannot untick \"Show C# and Visual Basic References\"\" (#36378)"},{"Id":"455415714","IsPullRequest":false,"CreatedAt":"2019-06-12T20:43:48","Actor":"vsfeedback","Number":"36377","RawContent":null,"Title":"Go To Definition does not work correctly with delegate and operator","State":"open","Body":"VSF_TYPE_MARKDOWNVS2019 goes to the operator definition when I perform &quot;Go to Defenition&quot; on &quot;Foo.Test&quot;, but I expect it to show me the method &quot;Test&quot;\n\n```\npublic sealed class Foo\n    {\n        public delegate int IntDelegate();\n\npublic static int Test()\n        {\n            return 1;\n        }\n\npublic static void Bar1()\n        {\n            Console.WriteLine((Foo)Foo.Test);\n        }\n\npublic static explicit operator Foo(IntDelegate intDelegate)\n        {\n            return new Foo();\n        }\n    }\n```\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/587895/go-to-definition-does-not-work-correctly-with-dele.html\nVSTS ticketId: 901152_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/29/2019, 11:39 PM (13 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36377","RelatedDescription":"Open issue \"Go To Definition does not work correctly with delegate and operator\" (#36377)"},{"Id":"455356823","IsPullRequest":true,"CreatedAt":"2019-06-12T18:18:49","Actor":"sharwell","Number":"36368","RawContent":null,"Title":"Update editor packages","State":"open","Body":"This is a prerequisite for #35667, broken out for independent review and validation.","Url":"https://github.com/dotnet/roslyn/pull/36368","RelatedDescription":"Open PR \"Update editor packages\" (#36368)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"455490633","IsPullRequest":true,"CreatedAt":"2019-06-13T04:20:34","Actor":"jkotas","Number":"7519","RawContent":null,"Title":"Delete unnecessary code","State":"closed","Body":"Fixes some errors while building with clang5.0","Url":"https://github.com/dotnet/corert/pull/7519","RelatedDescription":"Closed or merged PR \"Delete unnecessary code\" (#7519)"},{"Id":"455496226","IsPullRequest":true,"CreatedAt":"2019-06-13T04:20:10","Actor":"Dotnet-GitSync-Bot","Number":"7520","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @stephentoub @dotnet-maestro[bot]","Url":"https://github.com/dotnet/corert/pull/7520","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7520)"},{"Id":"455223188","IsPullRequest":true,"CreatedAt":"2019-06-13T01:37:18","Actor":"Dotnet-GitSync-Bot","Number":"7518","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7518","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7518)"},{"Id":"454961949","IsPullRequest":true,"CreatedAt":"2019-06-12T02:02:06","Actor":"Suchiman","Number":"7517","RawContent":null,"Title":"Unify GC sources and implement GetGCMemoryInfo","State":"closed","Body":"The first commit copies everything from coreclr (mainly formatting differences).\r\n\r\nThe second commit implements `GC.GetGCMemoryInfo` for #5680.\r\nI don't know how to test it though, the simple tests in corert yield\r\n> 'GC' does not contain a definition for 'GetGCMemoryInfo'\r\n\r\nand the [instructions](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built) are failing for me because\r\n> error MSB4064: The \"DotNetAppHostExecutableName\" parameter is not supported by the \"ComputeManagedAssemblies\" task. Verify the parameter exists on the task, and it is a settable public instance property","Url":"https://github.com/dotnet/corert/pull/7517","RelatedDescription":"Closed or merged PR \"Unify GC sources and implement GetGCMemoryInfo\" (#7517)"},{"Id":"454944688","IsPullRequest":true,"CreatedAt":"2019-06-11T23:20:28","Actor":"trylek","Number":"7516","RawContent":null,"Title":"Method call info cleanup pt. 1 - wrong method called","State":"open","Body":"This change fixes about 280 Pri#1 Loader/classloader tests where\r\npreviously we were using slightly incorrect method info. This\r\ncorresponds to the biggest error bucket \"wrong method called\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7516","RelatedDescription":"Open PR \"Method call info cleanup pt. 1 - wrong method called\" (#7516)"},{"Id":"454352531","IsPullRequest":true,"CreatedAt":"2019-06-11T23:02:11","Actor":"trylek","Number":"7507","RawContent":null,"Title":"Constrained calls pt. 2 - actually add constrained type to MethodWithToken","State":"closed","Body":"This change modifies MethodWithToken to optionally include the constrained type information and changes most places in the CPAOT compiler that were previously passing the separated triplet of MethodDesc / ModuleToken / TypeDesc to use the newly beefed up MethodWithToken.\r\n\r\nAs additional changes of note I removed the \"originalMethod\" parameter to MethodEntrypoint as it was almost unused and I deleted an orphaned method MethodGenericDictionary. I have decided to keep this change mostly mechanical to make git history cleaner.\r\n\r\nThanks\r\n\r\nTomas\r\n","Url":"https://github.com/dotnet/corert/pull/7507","RelatedDescription":"Closed or merged PR \"Constrained calls pt. 2 - actually add constrained type to MethodWithToken\" (#7507)"},{"Id":"454902237","IsPullRequest":true,"CreatedAt":"2019-06-11T23:01:35","Actor":"Dotnet-GitSync-Bot","Number":"7515","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel","Url":"https://github.com/dotnet/corert/pull/7515","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7515)"},{"Id":"454726423","IsPullRequest":true,"CreatedAt":"2019-06-11T17:57:05","Actor":"Suchiman","Number":"7513","RawContent":null,"Title":"Port GC changes from coreclr - 17","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7512\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/141926d90c54bb358cfe8d9eb641c88e94639a8c):**\r\n- https://github.com/dotnet/coreclr/commit/2832f54a6602cd4c0dff4fa65163345ab3ad953c (already merged)\r\n- https://github.com/dotnet/coreclr/commit/5a34da317e3f8cef7895d6d4ad6ed75f3a79d38e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/f143d0e3e1aff6fc5c3470a3a6e2d0732c23b7ce (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/b271aff1fa54c1385143f3b45c1bf3af01c901cd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/e985b20260631c98a09f08cb67e93d690a6ffd0b (not applicable)\r\n- https://github.com/dotnet/coreclr/commit/67c83438bad8cd8f0ba20b370e4cace746ef57d1 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/934d73fea95b4c479b67fee0ff53caea4a325ee5 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/718598334310f6ad331ba2893ee4557beffaa74c (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bdb995987178231ba541f22143cb3cab56309daa (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2a175563b5c1b04083da6841f84a991ac576446a (manual port)\r\n- https://github.com/dotnet/coreclr/commit/b676246c1dd880b7290a1313cdac309fe020aa6f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3489e56c875c6144c729b51063300c7d60b1ae31 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4ca032d49b0718eb40f2105f94db2b243cf94957 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/476dc1cb88a0dcedd891a0ef7a2e05d5c2f94f68 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4c82068adb046eee3573984392a0d1e774062ae0 (gc only port, omitted changes)","Url":"https://github.com/dotnet/corert/pull/7513","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 17\" (#7513)"},{"Id":"454781157","IsPullRequest":true,"CreatedAt":"2019-06-11T17:56:14","Actor":"Dotnet-GitSync-Bot","Number":"7514","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7514","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7514)"},{"Id":"454599070","IsPullRequest":true,"CreatedAt":"2019-06-11T14:07:29","Actor":"Suchiman","Number":"7512","RawContent":null,"Title":"Port GC changes from coreclr - 16","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7511\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/060990945a0117cb824b9d1c1e6c3a336533a3ee):**\r\n- https://github.com/dotnet/coreclr/commit/cee1a8c9d9c6669318d1567c85457fbcd642587d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3c07febf02b67c4c5f8eef846d5aa581372e454e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/fe355a617ff5e56c8607c2b12c650c3b95c5cfbd (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/77bd2c4aab50f84d2a0a94275072ee52f295757c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b56d39c5812db4780c818140083cf753aca8ca5a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/473993d3b9b1a50931392c7689872d4f16f140f7 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/577f8b84113fdf5ff001732b93da6733842123ec (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bef5dd6507f2e8ac163941646ef9936d6ced3715 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0d9114b1f5d0b125f04f1ec17064a761fb26ba66 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4029007b7edd290c236901a246ef48ac3e9de4b6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3f21a0f6cc8e0036ad536c791d7877a35d22cd01 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c2dacd2025145c586a5569408c1427899a3767cc (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a9b6851ad1a9551f3f654b654b094147b50e5999 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/8d93bd9080f47efd87dc5420a6e600f8dc432659 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/9733c30b27ca90d3eeb07928df6e6e5861c203bb (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/141926d90c54bb358cfe8d9eb641c88e94639a8c (gc only port)","Url":"https://github.com/dotnet/corert/pull/7512","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 16\" (#7512)"},{"Id":"454427739","IsPullRequest":true,"CreatedAt":"2019-06-11T08:59:13","Actor":"Suchiman","Number":"7511","RawContent":null,"Title":"Port GC changes from coreclr - 15","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7508\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a):**\r\n- https://github.com/dotnet/coreclr/commit/dacab04a17e0cd4ed2b321be936f233cf75bb7e8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c1801e85024add717f518feb6a9caed60d54500f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/5a97d8e9f14763a4ff90d14d045f0173e8d4b944 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4685a1e008ad7cf4118e8778d89e63d87ca5b7b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/23fbf7e7ab231876b9d54b52bac044cdde159118 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/66009329a187634dc432854cdd7c893d972156eb (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/07f9f2f101754c38570ed75ce9a7083090769a0f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/6100a9faf1c29b06aed3ad5bef00ce905880309d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cf887c943bf1dee978bc863b7481686ecee8ad83 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cc14e6cecf6984c991fe906c9fe4b327b4f93f96 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/67f1116cea421ebbe516fafc963e213cc6f0e117 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/94359a5208206be08ff44a1fc14e0334e2af2071 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb8b829fd3717acc2688025341f822e4097cf5c5 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/dd80afe98f969e3a309917643c0e45e83aaa37bf (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6e629e9ccd58be36fcc858d357cdf0811bdcb380 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aea3b1a80d6c114e3e67bc9521bf39a8a17371d1 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/98d2b480ff9fc207f568ed2ac8dcbcb7c9d6a719 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2c6c6c9ffe6ef40320dfce3c6e53e953485f21a6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d33f73f69051d2861454081bb3211615413d8ed0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/060990945a0117cb824b9d1c1e6c3a336533a3ee (manual port)","Url":"https://github.com/dotnet/corert/pull/7511","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 15\" (#7511)"},{"Id":"454365589","IsPullRequest":true,"CreatedAt":"2019-06-11T00:21:51","Actor":"Suchiman","Number":"7508","RawContent":null,"Title":"Port GC changes from coreclr - 14","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7495\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657):**\r\n- https://github.com/dotnet/coreclr/commit/d62143d4ae97833081c5f235a91dea95da4461a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b25304c757219d3103f691f615b5fa70ed22e92e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1db91c5acd17384952d1e1f8e3079c2c8cfb78f6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aa13ca95d633e9251fa040533d3d5650808455c0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/03ab0ca0f81313319f30cfd75ee56dc59d71390c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/616fea550548af750b575f3c304d1a9b4b6ef9a6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/9107ff1d48a2454d1ac84a8dfa97178809d8e793 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/a28b25aacdcd2adb0fdfa70bd869f53ba6565976 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba (gc only port, except omitted cgroup conflict)\r\n- https://github.com/dotnet/coreclr/commit/46cbd93c20780bcacd9f39fe18079acf2a9f4178 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5bb7eb68035e98e356aba68115e28ed22d3d34aa (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/36931ac7b24249201547f7ca667105014b2e4c7f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d559d44e02471854748763a6c7eb52cbdc56168f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2dfd1779ae9eebe89b223cff6fd77825301971dd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bd84f468ac3f82847669d49614d01eba8dd2a9a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0495f7377fca88999d335757e9680052cfedc51d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a (gc only port, omitted changes)","Url":"https://github.com/dotnet/corert/pull/7508","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 14\" (#7508)"},{"Id":"454376259","IsPullRequest":true,"CreatedAt":"2019-06-11T00:21:41","Actor":"Dotnet-GitSync-Bot","Number":"7509","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @maryamariyan","Url":"https://github.com/dotnet/corert/pull/7509","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7509)"},{"Id":"454422699","IsPullRequest":false,"CreatedAt":"2019-06-11T00:01:23","Actor":"timmydo","Number":"7510","RawContent":null,"Title":"CoreRT doesn't support scratch docker image.","State":"open","Body":"See also #4552.\r\n\r\nI'd like to create a docker image like this. Sample dockerfile\r\n```\r\nFROM microsoft/dotnet:3.0-sdk AS build\r\nWORKDIR /app\r\nRUN apt-get update && apt-get install -y libkrb5-dev zlib1g-dev clang-3.9\r\nRUN wget https://github.com/dotnet/corert/raw/master/samples/HelloWorld/HelloWorld.csproj https://github.com/dotnet/corert/raw/master/samples/HelloWorld/Program.cs\r\nRUN dotnet restore --runtime linux-x64\r\nRUN dotnet publish -c Release -r linux-x64 -o out\r\n\r\nFROM scratch AS runtime\r\nWORKDIR /app\r\nCOPY --from=build /app/out/* /app/\r\nENTRYPOINT [\"/app/HelloWorld\"] \r\n```\r\n\r\nError: docker run --rm -it a7b54e604622\r\nstandard_init_linux.go:211: exec user process caused \"no such file or directory\"\r\n\r\nIf I change `scratch` to `alpine`:\r\n\r\n```\r\n/app # ldd HelloWorld\r\n        /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library libstdc++.so.6: No such file or directory (needed by HelloWorld)\r\n        libdl.so.2 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        libm.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        librt.so.1 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library libgcc_s.so.1: No such file or directory (needed by HelloWorld)\r\n        libpthread.so.0 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        libc.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library ld-linux-x86-64.so.2: No such file or directory (needed by HelloWorld)\r\nError relocating HelloWorld: _Znam: symbol not found\r\nError relocating HelloWorld: _ZSt9terminatev: symbol not found\r\nError relocating HelloWorld: __cxa_begin_catch: symbol not found\r\nError relocating HelloWorld: __cxa_allocate_exception: symbol not found\r\nError relocating HelloWorld: _ZdlPvRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: __cxa_guard_abort: symbol not found\r\nError relocating HelloWorld: __cxa_guard_release: symbol not found\r\nError relocating HelloWorld: _ZdlPv: symbol not found\r\nError relocating HelloWorld: _Znwm: symbol not found\r\nError relocating HelloWorld: _ZdaPv: symbol not found\r\nError relocating HelloWorld: _ZnamRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: __cxa_throw: symbol not found\r\nError relocating HelloWorld: __cxa_thread_atexit: symbol not found\r\nError relocating HelloWorld: _Unwind_Resume: symbol not found\r\nError relocating HelloWorld: __cxa_guard_acquire: symbol not found\r\nError relocating HelloWorld: _ZnwmRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv121__vmi_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv121__vmi_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZSt7nothrow: symbol not found\r\nError relocating HelloWorld: _ZTIPKc: symbol not found\r\nError relocating HelloWorld: __gxx_personality_v0: symbol not found\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7510","RelatedDescription":"Open issue \"CoreRT doesn't support scratch docker image.\" (#7510)"},{"Id":"453292828","IsPullRequest":true,"CreatedAt":"2019-06-10T20:31:44","Actor":"Suchiman","Number":"7495","RawContent":null,"Title":"Port GC changes from coreclr - 13","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7478\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168):**\r\n- https://github.com/dotnet/coreclr/commit/a1404cafbe1cd15a5c0cfbd4995ad97694b708bd (manual port)\r\n- https://github.com/dotnet/coreclr/commit/00ab7387d849da889ebf6aac432ec989091bacec (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00a5ee589b565ebcd068c5851315a997848ed98c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/d82fc2062925ced3fb5c479ff8db7ef61cc4f290 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/35d424404f9930620204f3cc351992c0d9bd3b8a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/cd1f0d9ad32cacd9d2ac2998f368bc196c40754a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73a0bc0d549d1c8e41261891dcc2974fb8024556 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d1bb5271192ddac3d0d31ee6168afdc3c58f55da (manual port)\r\n- https://github.com/dotnet/coreclr/commit/b67d2fa8fc8cf5b8c41f5c34b1abe31e704386c4 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/af0c1f287d31ca3a641151df60baa7371635f508 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/340b5708ce38230f1af66acf832547996aa0b2ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3ff82040ea7be4f8c260b237690f2f0553c7cac6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6fe7effad7fddf8d5dc0b3ac3d5be5ec80e158ff (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2bf55bc5ca8b09dd26e32a9ee259ab22fb69806b (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8d6583e38f4e9b00ec21666225760a0df97afaec (skipped, reverted in next commit)\r\n- https://github.com/dotnet/coreclr/commit/53e0cce55692cd568a1dce218a2089146aa8e4f8 (skipped, reverts prior commit)\r\n- https://github.com/dotnet/coreclr/commit/b3859ce4debbeab0c0a04b8a519eded46bf67517 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/171837ddfef844e0f2952b9ce2df5af6bb65848a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/488d2a70ba59c58b26aa3f4f988a42f6b8927146 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4a6753dcacf44df6a8e91b91029e4b7a4f12d917 (skipped, cgroups changes)\r\n- https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657 (gc only port, omitted changes)","Url":"https://github.com/dotnet/corert/pull/7495","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 13\" (#7495)"},{"Id":"454186830","IsPullRequest":false,"CreatedAt":"2019-06-10T14:02:34","Actor":"eyupkayadarcin","Number":"7506","RawContent":null,"Title":"Internal.TypeSystem.TypeSystemException+TypeLoadException when using EntityFrameworkCore with Npgsql","State":"open","Body":"I've got a dotnet core 2.1 project . I'm getting a Internal.TypeSystem.TypeSystemException+TypeLoadException after compilation (using dotnet publish -r win-x64 -c release):\r\n\r\nInternal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: Microsoft.EntityFrameworkCore.Storage.Internal.NpgsqlArrayTypeMapping, Npgsql.EntityFrameworkCore.PostgreSQL, Version=2.1.2.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n\r\nAnd there is any method that create automatically rd.xml file ?","Url":"https://github.com/dotnet/corert/issues/7506","RelatedDescription":"Open issue \"Internal.TypeSystem.TypeSystemException+TypeLoadException when using EntityFrameworkCore with Npgsql\" (#7506)"},{"Id":"453799443","IsPullRequest":true,"CreatedAt":"2019-06-10T13:22:26","Actor":"hamish-milne","Number":"7503","RawContent":null,"Title":"Add support for GetManifestResourceInfo","State":"closed","Body":"This just adds an implementation for `Assembly.GetManifestResourceInfo` along the lines of its sibling methods, which will allow https://github.com/aspnet/Extensions/blob/master/src/FileProviders/Embedded/src/EmbeddedFileProvider.cs from [Microsoft.Extensions.FileProviders.Embedded](https://www.nuget.org/packages/Microsoft.Extensions.FileProviders.Embedded) to work.\r\n\r\nSome questions:\r\n\r\n- This always returns a `ResourceLocation.Embedded` - is this always true?\r\n- The file makes mention of `WinRTInterop`, and includes ifdefs for WinRT support, however: https://github.com/dotnet/corert/issues/823#issuecomment-315557621 , wut?\r\n- I attempted to add a test case for Embedded Resources as a whole, however it seems the way the test projects invoke the toolchain causes them to not link embedded resources, however it works when following the steps in https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md - any way to make this work?","Url":"https://github.com/dotnet/corert/pull/7503","RelatedDescription":"Closed or merged PR \"Add support for GetManifestResourceInfo\" (#7503)"},{"Id":"453882867","IsPullRequest":false,"CreatedAt":"2019-06-09T10:07:51","Actor":"hez2010","Number":"7505","RawContent":null,"Title":"The code below will cause program crashing during runtime","State":"open","Body":"Bug: The code below will cause program crashing during runtime  \r\n\r\n```\r\ndotnet add package Microsoft.DotNet.ILCompiler -v 1.0.0-alpha-*\r\ndotnet publish -c Release -r win-x64\r\n```\r\n\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Linq.Expressions;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace TypeTest\r\n{\r\n    public struct GenericNum<T> : IEquatable<T>, IComparable<T>, IComparable where T : struct\r\n    {\r\n        private static Func<T, T, T> add;\r\n        private static Func<T, T, T> sub;\r\n        private static Func<T, T, T> mul;\r\n        private static Func<T, T, T> div;\r\n        private static Func<T, T, bool> equ;\r\n        private static Func<T, T, bool> neq;\r\n        private static Func<T, T, bool> grt;\r\n        private static Func<T, T, bool> lst;\r\n        public T Value { get; set; }\r\n\r\n        public GenericNum(T value)\r\n        {\r\n            if (equ == null)\r\n            {\r\n                var p1 = Expression.Parameter(typeof(T));\r\n                var p2 = Expression.Parameter(typeof(T));\r\n                var dt = Expression.Parameter(typeof(double));\r\n                add = (Func<T, T, T>)Expression.Lambda(Expression.Add(p1, p2), p1, p2).Compile();\r\n                sub = (Func<T, T, T>)Expression.Lambda(Expression.Subtract(p1, p2), p1, p2).Compile();\r\n                mul = (Func<T, T, T>)Expression.Lambda(Expression.Multiply(p1, p2), p1, p2).Compile();\r\n                div = (Func<T, T, T>)Expression.Lambda(Expression.Divide(p1, p2), p1, p2).Compile();\r\n                equ = (Func<T, T, bool>)Expression.Lambda(Expression.Equal(p1, p2), p1, p2).Compile();\r\n                neq = (Func<T, T, bool>)Expression.Lambda(Expression.NotEqual(p1, p2), p1, p2).Compile();\r\n                grt = (Func<T, T, bool>)Expression.Lambda(Expression.GreaterThan(p1, p2), p1, p2).Compile();\r\n                lst = (Func<T, T, bool>)Expression.Lambda(Expression.LessThan(p1, p2), p1, p2).Compile();\r\n            }\r\n            Value = value;\r\n        }\r\n\r\n        public int CompareTo(T other)\r\n        {\r\n            if (lst(Value, other)) return -1;\r\n            else if (grt(Value, other)) return 1;\r\n            return 0;\r\n        }\r\n\r\n        public int CompareTo(object obj)\r\n        {\r\n            if (obj is GenericNum<T> t)\r\n            {\r\n                var other = t.Value;\r\n                if (lst(Value, other)) return -1;\r\n                else if (grt(Value, other)) return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        public override bool Equals(object obj)\r\n        {\r\n            if (obj is GenericNum<T> t) return equ(this, t);\r\n            return false;\r\n        }\r\n\r\n        public override int GetHashCode() => Value.GetHashCode();\r\n\r\n        public bool Equals(T other) => equ(Value, other);\r\n\r\n        public static T operator +(GenericNum<T> left, GenericNum<T> right) => add(left.Value, right.Value);\r\n        public static T operator -(GenericNum<T> left, GenericNum<T> right) => sub(left.Value, right.Value);\r\n        public static T operator *(GenericNum<T> left, GenericNum<T> right) => mul(left.Value, right.Value);\r\n        public static T operator /(GenericNum<T> left, GenericNum<T> right) => div(left.Value, right.Value);\r\n        public static bool operator >(GenericNum<T> left, GenericNum<T> right) => grt(left.Value, right.Value);\r\n        public static bool operator <(GenericNum<T> left, GenericNum<T> right) => lst(left.Value, right.Value);\r\n        public static bool operator ==(GenericNum<T> left, GenericNum<T> right) => equ(left.Value, right.Value);\r\n        public static bool operator !=(GenericNum<T> left, GenericNum<T> right) => neq(left.Value, right.Value);\r\n\r\n        public static implicit operator T(GenericNum<T> value) => value.Value;\r\n        public static implicit operator GenericNum<T>(T value) => new GenericNum<T>(value);\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var r = new Random();\r\n            var x = new GenericNum<int>(r.Next()); //create\r\n            var y = new GenericNum<int>(r.Next()); //create\r\n            var p = x + y; //add\r\n            Console.WriteLine(p);\r\n            return;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ndotnet --info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/corert/issues/7505","RelatedDescription":"Open issue \"The code below will cause program crashing during runtime\" (#7505)"},{"Id":"453819922","IsPullRequest":true,"CreatedAt":"2019-06-08T18:05:33","Actor":"kvittokonito","Number":"7504","RawContent":null,"Title":"Fixed errors when targeting ARM64 on Linux.","State":"open","Body":"Fixed several compilation errors found while trying to compile for ARM64 under Linux via cross-compilation.\r\n\r\nRelated to: #7500","Url":"https://github.com/dotnet/corert/pull/7504","RelatedDescription":"Open PR \"Fixed errors when targeting ARM64 on Linux.\" (#7504)"},{"Id":"453759227","IsPullRequest":true,"CreatedAt":"2019-06-08T14:14:14","Actor":"Dotnet-GitSync-Bot","Number":"7501","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sdmaclea","Url":"https://github.com/dotnet/corert/pull/7501","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7501)"},{"Id":"453768569","IsPullRequest":true,"CreatedAt":"2019-06-08T14:11:46","Actor":"MichalStrehovsky","Number":"7502","RawContent":null,"Title":"Move Marshal class to S.P.CoreLib","State":"closed","Body":"After this change, CoreRT only uses S.P.Interop to host the interop hashtable readers. Those can't move to CoreLib because they call into the type loader.\r\n\r\nThis remove's repo's reliance on UapAot System.Runtime.Interop.\r\n\r\nI didn't touch ProjectN's version of `Marshal` and I left the `PInvokeMarshal` class in place to help with that. I guess we'll need to make a call at some point on what to do with S.P.Interop since without MCG the code in it is kind of useless.","Url":"https://github.com/dotnet/corert/pull/7502","RelatedDescription":"Closed or merged PR \"Move Marshal class to S.P.CoreLib\" (#7502)"},{"Id":"453687239","IsPullRequest":true,"CreatedAt":"2019-06-08T05:34:21","Actor":"Dotnet-GitSync-Bot","Number":"7499","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7499","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7499)"},{"Id":"453744834","IsPullRequest":false,"CreatedAt":"2019-06-08T02:04:43","Actor":"kvittokonito","Number":"7500","RawContent":null,"Title":"ARM64 cross-compilation assembly","State":"open","Body":"I've been working on getting CoreRT to cross-compile to ARM64 from x64 and so far I've gotten 61% of the progress to compile after a LOT of painful work.\r\n\r\nHowever, I have now reached the point where ARM64 only has .asm format assembly code (for Windows, I presume?). ARM assembly is a bit out of the scope of my knowledge, unfortunately, so I'd like to know if that part has already been solved on the closed source side and, if that's the case, whether there's some hope for that \"small\" part to be released.","Url":"https://github.com/dotnet/corert/issues/7500","RelatedDescription":"Open issue \"ARM64 cross-compilation assembly\" (#7500)"},{"Id":"453222388","IsPullRequest":true,"CreatedAt":"2019-06-07T21:58:00","Actor":"trylek","Number":"7493","RawContent":null,"Title":"Preparatory change for constrained call changes pt.1: MethodEntrypoint","State":"closed","Body":"This is one of the problems I uncovered during the constrained call\r\nwork and I believe it merits separate treatment. Historically\r\nthe implementation of MethodEntrypoint was naturally one of the\r\noldest CPAOT bits and we had to iterate on its exact functionality.\r\n\r\nThe pre-existing version prior to this change had one strange aspect -\r\nsomewhat ambiguous blurring of functionality between MethodEntrypoint\r\nand ImportedMethodNode. This led to various weird situations including\r\nunintended direct method calls, infinite recursion when conditions\r\nin two methods didn't exactly match and similar fun.\r\n\r\nI have cleaned this mess up by basically moving the pre-existing\r\nfunctionality of ImportedMethodNode to MethodEntrypoint that has become\r\nthe only API dealing with creation of import cells used for calling\r\nmethods. The two flavors of import cells being created are\r\nExternalMethodImport and LocalMethodImport where the only difference\r\nbetween them is that LocalMethodImport brings in the dependency to the\r\nMethodWithGCInfo for the method and triggers its JIT compilation\r\n(which may fail when the method requires runtime JIT).\r\n\r\nI have added graceful handling for indeterminate signatures to\r\nArgIterator because the code graph changes triggered this in one\r\nof the ASP.NET assemblies and it's nice to have in general.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7493","RelatedDescription":"Closed or merged PR \"Preparatory change for constrained call changes pt.1: MethodEntrypoint\" (#7493)"},{"Id":"453648426","IsPullRequest":true,"CreatedAt":"2019-06-07T20:45:08","Actor":"Dotnet-GitSync-Bot","Number":"7498","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @safern @JeremyKuhne","Url":"https://github.com/dotnet/corert/pull/7498","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7498)"},{"Id":"453452909","IsPullRequest":false,"CreatedAt":"2019-06-07T10:50:19","Actor":"kvittokonito","Number":"7497","RawContent":null,"Title":"Windows ARM64 Support?","State":"open","Body":"With Desktop Windows 10 being available for ARM, is there any way in CoreRT to target windows-arm64? I've seen there's a method to cross-compile CoreRT on Linux but I see no references of the target of that being able to compile for Windows.","Url":"https://github.com/dotnet/corert/issues/7497","RelatedDescription":"Open issue \"Windows ARM64 Support?\" (#7497)"},{"Id":"453303038","IsPullRequest":true,"CreatedAt":"2019-06-07T05:58:31","Actor":"Dotnet-GitSync-Bot","Number":"7496","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7496","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7496)"},{"Id":"453275181","IsPullRequest":true,"CreatedAt":"2019-06-07T01:24:31","Actor":"Dotnet-GitSync-Bot","Number":"7494","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7494","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7494)"},{"Id":"453144813","IsPullRequest":true,"CreatedAt":"2019-06-06T17:19:02","Actor":"Dotnet-GitSync-Bot","Number":"7492","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7492","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7492)"},{"Id":"452995033","IsPullRequest":true,"CreatedAt":"2019-06-06T14:21:18","Actor":"janvorli","Number":"7491","RawContent":null,"Title":"Handle signals on alternate stack if previous handler required that","State":"closed","Body":"There is a problem with using CoreRT in CoreCLR process. CoreCLR sets\r\nsigsegv handler to use alternate stack, but CoreRT does not. That means\r\nthat when CoreRT registers its sigsegv handler after CoreCLR, it becomes\r\nthe handler that kernel calls and the previously registered CoreCLR\r\nhandler is called as a regular function call from this handler. And\r\nthat happens on the original stack. However the CoreCLR cannot run the\r\nhandler on the original stack and the handler crashes.\r\n\r\nThe fix is to copy the SA_ONSTACK flag of the previous handler when\r\nregistering the signal handler in CoreRT. In addition to that, this\r\nchange also copies the signal mask in this case. CoreCLR sigsegv handler\r\nmasks the activation injection signal (SIGRT_MIN) so that it doesn't\r\nhappen until the sigsegv handler switches to the original stack. This\r\nbehavior needs to be preserved.","Url":"https://github.com/dotnet/corert/pull/7491","RelatedDescription":"Closed or merged PR \"Handle signals on alternate stack if previous handler required that\" (#7491)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"455480612","IsPullRequest":false,"CreatedAt":"2019-06-13T05:12:14","Actor":"heejaechang","Number":"3328","RawContent":null,"Title":"use different assembly version for different build task","State":"closed","Body":"a lot of times, I get something like this whenever I do branch switch and restore and open solution in VS\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/59394912-5d06fc00-8d36-11e9-81c1-d2f0ad724168.png)\r\n\r\nand I believe that is happening because different dll that has same assembly version is already loaded in the msbuild which got reused.\r\n\r\ncan we make different build task dll to use different assembly version so that we don't get into this problem?","Url":"https://github.com/dotnet/sdk/issues/3328","RelatedDescription":"Closed issue \"use different assembly version for different build task\" (#3328)"},{"Id":"455469527","IsPullRequest":true,"CreatedAt":"2019-06-12T23:34:07","Actor":"nguerrera","Number":"3327","RawContent":null,"Title":"Reduce verbosity of conflict resolution","State":"open","Body":"Also:\r\n* Reduce line noise in preview message\r\n* Log info about arbitrary copy-local choice in conflict resolution\r\n\r\nFix #2468 \r\nFix #3319 ","Url":"https://github.com/dotnet/sdk/pull/3327","RelatedDescription":"Open PR \"Reduce verbosity of conflict resolution\" (#3327)"},{"Id":"454819855","IsPullRequest":true,"CreatedAt":"2019-06-12T19:59:06","Actor":"wli3","Number":"3318","RawContent":null,"Title":"Collect crash exception","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3318","RelatedDescription":"Closed or merged PR \"Collect crash exception\" (#3318)"},{"Id":"455368499","IsPullRequest":true,"CreatedAt":"2019-06-12T18:46:31","Actor":"nguerrera","Number":"3326","RawContent":null,"Title":"Support PublishReadyToRun for framework-dependent deployment","State":"open","Body":"Fix #3110 ","Url":"https://github.com/dotnet/sdk/pull/3326","RelatedDescription":"Open PR \"Support PublishReadyToRun for framework-dependent deployment\" (#3326)"},{"Id":"455273191","IsPullRequest":false,"CreatedAt":"2019-06-12T15:14:24","Actor":"dsplaisted","Number":"3325","RawContent":null,"Title":"Supply RuntimeIdentifier graph to NuGet","State":"open","Body":"Once this NuGet feature is implemented: https://github.com/NuGet/Client.Engineering/pull/96\r\n\r\nWe will need to set the appropriate property to supply the SDKs graph to NuGet, as well as remove the infrastructure that implicitly references Microsoft.NETCore.App.","Url":"https://github.com/dotnet/sdk/issues/3325","RelatedDescription":"Open issue \"Supply RuntimeIdentifier graph to NuGet\" (#3325)"},{"Id":"454848287","IsPullRequest":true,"CreatedAt":"2019-06-12T03:09:18","Actor":"nguerrera","Number":"3320","RawContent":null,"Title":"Fix duplicate resolved files to publish","State":"closed","Body":"Fix #3257 \r\n\r\nThere were two issues.\r\n\r\n1. A misunderstanding of msbuild batching rules and unqualified metadata caused satellite assemblies to be included twice (from same source location) into the publish list. (See https://github.com/microsoft/msbuild/issues/4429)\r\n2. There are assemblies with the same name and version in multiple frameworks. We have to choose one arbitrarily.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3320","RelatedDescription":"Closed or merged PR \"Fix duplicate resolved files to publish\" (#3320)"},{"Id":"454964340","IsPullRequest":true,"CreatedAt":"2019-06-12T00:55:17","Actor":"dsplaisted","Number":"3324","RawContent":null,"Title":"Use runtime pack manifest","State":"open","Body":"Use runtime pack manifest instead of using conventions and scanning folders.\r\n\r\nResources are still handled using conventions, we need updates to the runtime pack manifest in order to be able to consume them from it: https://github.com/dotnet/core-setup/issues/6768","Url":"https://github.com/dotnet/sdk/pull/3324","RelatedDescription":"Open PR \"Use runtime pack manifest\" (#3324)"},{"Id":"454941183","IsPullRequest":true,"CreatedAt":"2019-06-11T23:05:54","Actor":"nugetlurker","Number":"3323","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk master branch","Url":"https://github.com/dotnet/sdk/pull/3323","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3323)"},{"Id":"454941165","IsPullRequest":true,"CreatedAt":"2019-06-11T23:05:51","Actor":"nugetlurker","Number":"3322","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3322","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3322)"},{"Id":"454941152","IsPullRequest":true,"CreatedAt":"2019-06-11T23:05:48","Actor":"nugetlurker","Number":"3321","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3321","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3321)"},{"Id":"454842931","IsPullRequest":false,"CreatedAt":"2019-06-11T18:36:41","Actor":"nguerrera","Number":"3319","RawContent":null,"Title":"Issues with conflict resolution logging","State":"open","Body":"1. At normal verbosity, there are unactionable messages about things that happen in very common cases. For example, every core WPF project has a conflict between WindowsBase in netcore app. Importance should be lowered so that you can still see in binlog/diag, but not otherwise. We regularly get questions about what to do about a conflict, when there is nothing to do.\r\n\r\n2. It is quite noisy to have codes associated with non-error, non-warnings. We should refactor to not bother having codes for messages. Related: https://github.com/dotnet/sdk/issues/2468\r\n\r\n3. We are concatenating strings, so we end up with a code inside a code. NETSDKXXXX: Encountered conflict yada, yada.  NETSDKYYYY. Choosing Foo.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3319","RelatedDescription":"Open issue \"Issues with conflict resolution logging\" (#3319)"},{"Id":"452976611","IsPullRequest":false,"CreatedAt":"2019-06-11T03:32:07","Actor":"vadi2","Number":"3309","RawContent":null,"Title":"\"Application host will not be customised\" - meaning?","State":"closed","Body":"I've built an application[1] on .NET Core that runs on Windows, macOS, and Linux and I'd like to reduce the friction involved in getting it running - that is, having to install the runtime separately. I've read the [single-publish](https://github.com/dotnet/designs/blob/master/accepted/single-file/design.md) and [tried out the command](https://travis-ci.com/vadi2/Hammer/builds/114541271#L323) - but I get this warning:\r\n\r\n> The application host executable will not be customized because adding resources requires that the build be performed on Windows (excluding Nano Server).\r\n\r\nWhat does it actually mean? I'm new to the .NET world so I'm not sure what customisations is it actually talking about.\r\n\r\n[1] https://github.com/vadi2/Hammer","Url":"https://github.com/dotnet/sdk/issues/3309","RelatedDescription":"Closed issue \"\"Application host will not be customised\" - meaning?\" (#3309)"},{"Id":"454317577","IsPullRequest":true,"CreatedAt":"2019-06-11T00:58:34","Actor":"dsplaisted","Number":"3316","RawContent":null,"Title":"Remove old deps file generation logic","State":"closed","Body":"No need to keep both old and new copies anymore.\r\n\r\nThis ends up deleting some of the DependencyContextBuilder unit test coverage, as with the new design the builder depends on the output of ResolvePackageAssets, which isn't so easy to mock.","Url":"https://github.com/dotnet/sdk/pull/3316","RelatedDescription":"Closed or merged PR \"Remove old deps file generation logic\" (#3316)"},{"Id":"454341820","IsPullRequest":false,"CreatedAt":"2019-06-10T19:50:29","Actor":"crummel","Number":"3317","RawContent":null,"Title":"Source-build patch removal for SDK.","State":"open","Body":"Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/sdk.\r\n\r\nPatches that have the responsibility \"Repo\" and the Disposition \"Incorporate\" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility \"source-build\" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.\r\n\r\nPatch name | Type | Disposition | Responsibility | Notes\r\n-- | -- | -- | -- | --\r\nsdk/0001-Upgrade-to-netcoreapp2.1.patch | ToolCompat | Unknown | source-build | May go away with SDK uptake.  Otherwise needs investigation similar to   nuget-client/0001\r\nsdk/0002-Add-missing-PlatformAbstractions-reference.patch | Bug | Incorporate | Repo |  \r\nsdk/0003-Consolidate-versions.patch | Coherence | Incorporate | Repo |  \r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3317","RelatedDescription":"Open issue \"Source-build patch removal for SDK.\" (#3317)"},{"Id":"454300900","IsPullRequest":true,"CreatedAt":"2019-06-10T18:18:24","Actor":"vatsan-madhavan","Number":"3315","RawContent":null,"Title":"Add warnings related to Microsoft.NET.Sdk.WindowsDesktop","State":"open","Body":"Related: #3126 \r\nThis is also needed to completely fix https://github.com/dotnet/wpf/issues/866 - we still can't support support multitargeting `netcoreapp2.2`, and also to fix https://github.com/dotnet/wpf/issues/867\r\n\r\n- Adds warning strings related to `Microsoft.NET.Sdk.WindowsDesktop`\r\n- Adds a check to warn when `UseWpf` or `UseWindowsForms` is set without including `Microsoft.NET.Sdk.WindowsDesktop`","Url":"https://github.com/dotnet/sdk/pull/3315","RelatedDescription":"Open PR \"Add warnings related to Microsoft.NET.Sdk.WindowsDesktop\" (#3315)"},{"Id":"453311134","IsPullRequest":true,"CreatedAt":"2019-06-10T18:11:01","Actor":"dsplaisted","Number":"3311","RawContent":null,"Title":"Exclude Publish=\"false\" package assets from build output, don't infer Publish=\"false\" from PrivateAssets=\"all\"","State":"closed","Body":"See https://github.com/dotnet/designs/pull/78","Url":"https://github.com/dotnet/sdk/pull/3311","RelatedDescription":"Closed or merged PR \"Exclude Publish=\"false\" package assets from build output, don't infer Publish=\"false\" from PrivateAssets=\"all\"\" (#3311)"},{"Id":"453775677","IsPullRequest":false,"CreatedAt":"2019-06-08T09:32:34","Actor":"martincostello","Number":"3314","RawContent":null,"Title":"Regression in build times for Travis CI using 2.2.300 SDK","State":"open","Body":"I've noticed across several different projects I maintain that since the SDK was updated from 2.2.1xx or 2.2.2xx to 2.2.300, the time to build the projects in Travis CI has regressed by up to an order of magnitude on both Linux and macOS.\r\n\r\nHowever I'm not seeing the same regression in Azure DevOps pipelines for Linux, macOS or Windows, or AppVeyor for Windows.\r\n\r\nBelow are a selection of projects that show a build time regression immediately after merging a PR that contains a commit that updates the SDK to 2.2.300:\r\n\r\n| History | Build time pre-update | Build time post-update | Delta | PR with SDK update | Commit with SDK update |\r\n|:-:|:-:|:-:|:-:|:-:|:-:|\r\n| [project-euler](https://travis-ci.org/martincostello/project-euler/builds) | 3 min 40 sec | 37 min 13 sec | +1,015% | [#33](https://github.com/martincostello/project-euler/pull/33) | [b2c7ed3](https://github.com/martincostello/project-euler/commit/b2c7ed39e539201c6625f0d06787de42cb50abaa) |\r\n| [JustEat.StatsD](https://travis-ci.org/justeat/JustEat.StatsD/builds) |  2 min 33 sec | 12 min 19 sec | +483% | [#177](https://github.com/justeat/JustEat.StatsD/pull/177) | [4f4ac55](https://github.com/justeat/JustEat.StatsD/commit/4f4ac5505f2953efa09eef8cc304aad514e49099) |\r\n| [sqllocaldb](https://travis-ci.org/martincostello/sqllocaldb/builds) | 3 min 31 sec | 16 min 28 sec | +468% | [#88](https://github.com/martincostello/sqllocaldb/pull/88) | [671307a](https://github.com/martincostello/sqllocaldb/commit/671307a1fc216d1514f32c787aff547570408e37) |\r\n| [adventofcode](https://travis-ci.org/martincostello/adventofcode/builds) | 7 min 4 sec | 31 min 51 sec | +450% | [#72](https://github.com/martincostello/adventofcode/pull/72) | [8ecc3a7](https://github.com/martincostello/adventofcode/commit/8ecc3a77b5696e5eae735826ef510ef3599447b1) |\r\n| [JustSaying](https://travis-ci.org/justeat/JustSaying/builds) | 6 min 49 sec | 25 min 55 sec | +380% | [#545](https://github.com/justeat/JustSaying/pull/545) | [88f241c](https://github.com/justeat/JustSaying/commit/88f241c8a6bcb5768e2d57fae4aef906aacad53a) |\r\n| [httpclient-interception](https://travis-ci.org/justeat/httpclient-interception/builds) | 6 min 26 sec | 16 min 26 sec | +255% | [#85](https://github.com/justeat/httpclient-interception/pull/85) | [065c722](https://github.com/justeat/httpclient-interception/commit/065c7222669c291baf1fc75f20ce7c6f4863568c) |\r\n| [alexa-london-travel-site](https://travis-ci.org/martincostello/alexa-london-travel-site/builds) | 5 min 34 sec | 11 min 31 sec | +206% | [#267](https://github.com/martincostello/alexa-london-travel-site/pull/267) | [48b47a5](https://github.com/martincostello/alexa-london-travel-site/commit/48b47a5497e9e824fe3ba0d41ef4d9ef299773e0) |\r\n| [api](https://travis-ci.org/martincostello/api/builds) | 5 min 54 sec | 9 min 46 sec | +165% | [#112](https://github.com/martincostello/api/pull/112) | [40c1dee](https://github.com/martincostello/api/commit/40c1dee042f02e18f64c68fcdac7c4500559f907) |\r\n| [website](https://travis-ci.org/martincostello/website/builds) | 4 min 26 sec | 7 min 13 sec | +162% | [#263](https://github.com/martincostello/website/pull/263) | [3a43580](https://github.com/martincostello/website/commit/3a4358008c7022d0abf667774a26505ad9892a47) |\r\n\r\nMy hunch is that it is related to the new \"progress bar\" when running `dotnet test` which is causing the Travis agents to waste a lot of time trying to \"draw\" it because the actual test run times printed in the build output are equivalent:\r\n\r\n  * [Build before](https://travis-ci.org/martincostello/project-euler/jobs/513808297#L560) - `Time Elapsed 00:00:10.86`\r\n  * [Build after](https://travis-ci.org/martincostello/project-euler/jobs/537916269#L556) - `Time Elapsed 00:00:15.31`\r\n  * [Test before](https://travis-ci.org/martincostello/project-euler/jobs/513808297#L706) - `Test execution time: 46.8778 Seconds`\r\n  * [Test after](https://travis-ci.org/martincostello/project-euler/jobs/537916269#L700) - `Total time: 46.5308 Seconds`\r\n","Url":"https://github.com/dotnet/sdk/issues/3314","RelatedDescription":"Open issue \"Regression in build times for Travis CI using 2.2.300 SDK\" (#3314)"},{"Id":"453733086","IsPullRequest":false,"CreatedAt":"2019-06-08T00:05:53","Actor":"nguerrera","Number":"3313","RawContent":null,"Title":"DesignTimeBuild is included in ResolvePackageAssets HashSettings","State":"open","Body":"This will cause the cache to be rebuilt always when building after a design time build, or design time building after a build.\r\n\r\nThe test was updated to allow DesignTimeBuild to not be in the cache:\r\n\r\nhttps://github.com/dotnet/sdk/blob/de72490d26acee011e22f40113209323976980e0/src/Tasks/Microsoft.NET.Build.Tasks.UnitTests/GivenAResolvePackageAssetsTask.cs#L21\r\n\r\nBut it is actually written:\r\n\r\nhttps://github.com/dotnet/sdk/blob/de72490d26acee011e22f40113209323976980e0/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs#L376\r\n\r\nProbably need a test that checks the opposite of the settings hash test for DesignTimeBuild: that you can change it without influencing the hash.","Url":"https://github.com/dotnet/sdk/issues/3313","RelatedDescription":"Open issue \"DesignTimeBuild is included in ResolvePackageAssets HashSettings\" (#3313)"},{"Id":"453443961","IsPullRequest":false,"CreatedAt":"2019-06-07T10:26:09","Actor":"vitek-karas","Number":"3312","RawContent":null,"Title":"What should be default RollForward for component projects","State":"open","Body":"We haven’t made an official decision on the default value for `RollForward` in our new component scenarios.\r\n\r\nTLDR;\r\nShould we use `LatestMinor` or `LatestMajor` for component projects by default.\r\n\r\nThe long version:\r\nCurrently `RollForward` is set to `Minor` (roll to closest available version while staying with the same `major.` part of the version, then roll to latest patch of that version) for all projects by default. This is the value used when no `RollForward` is specified by the SDK in `.runtimeconfig.json`. More details about `RollForward` are here and here.\r\n\r\nFor dynamically loaded components this value would come with problems. The most important one being ordering issues. For example let’s have two COM components `A 3.0 Minor` and `B 3.1 Minor` on a machine which has both `3.0` and `3.1` installed. If the native app activates B first, it will load `3.1` runtime and then when it activates A second it will just work (since A can run on `3.1`). But if the app activates A first, it would load `3.0` (closest available match to `3.0 Minor`) and then when it would try to activate B that would fail (B is not compatible with `3.0`).\r\n\r\nTo overcome this problem the `RollForward` has two settings:\r\n* `LatestMinor` – pick the highest available version with the same `major.` part of the version (so `3.0 LatestMinor` would roll to latest `3.*` version)\r\n* `LatestMajor` – pick the highest available version (all up)\r\n\r\nIf in the above scenario A would be `3.0 LatestMinor` and B would be `3.1 LatestMinor`, no matter which one got activated first, they both would load `3.1` (as the latest `3.*` available version).\r\n\r\nSo to make it easy for users and make things just work out of the box, we would like to set `RollForward` to one of the `LatestMinor`/`LatestMajor` by default on component projects.\r\nElinor has a PR out which introduces the notion of “component project”: https://github.com/dotnet/sdk/pull/3305\r\n\r\nThe question is if we should use `LatestMinor` or `LatestMajor` as the default for component projects.\r\n\r\n*`LatestMinor`:*\r\n* Pros: Higher chance of providing the expected compatibility – in general we try really hard to avoid breaking changes for minor versions, so 3.1 is expected to be fully backward compatible with 3.0. We tell people that upgrading to minor version is “safe”.\r\n* Cons: Come .NET 5 components targeting 3.0 would not run on 5.0. Basically creating an upgrade problem. Combining components targeting both 3.0 and 5.0 would fail.\r\n\r\n*`LatestMajor`:*\r\n* Pros: No upgrade problems – all components run everywhere and together.\r\n* Cons: Potentially breaking for some components as we may introduce some breaking changes between `5.0` and `3.0`. That said `classlibs` (which components are a special case of) are already assumed to work just fine even across major versions (NuGet has no notion of compatibility ranges, and will let people use `3.0` `classlibs` in `5.0` projects).\r\n\r\nSome related discussions already happened:\r\nhttps://github.com/dotnet/core-setup/issues/5870\r\nhttps://github.com/dotnet/core-setup/issues/5062\r\n\r\nThoughs?","Url":"https://github.com/dotnet/sdk/issues/3312","RelatedDescription":"Open issue \"What should be default RollForward for component projects\" (#3312)"},{"Id":"453186764","IsPullRequest":true,"CreatedAt":"2019-06-07T01:17:19","Actor":"peterhuene","Number":"3310","RawContent":null,"Title":"Fix P/Invoke signatures for the resource updater.","State":"closed","Body":"The resource updater was not specifying a CharSet for the Windows API\r\nP/Invoke signatures and therefore the ANSI versions of the APIs were\r\nbeing used.\r\n\r\nThis caused an unhandled exception when customizing the apphost on\r\nWindows when the intermediate apphost path contained Unicode characters\r\nbecause the ANSI resource updating API couldn't find the file.\r\n\r\nFixes [AB#900429](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/900429).","Url":"https://github.com/dotnet/sdk/pull/3310","RelatedDescription":"Closed or merged PR \"Fix P/Invoke signatures for the resource updater.\" (#3310)"},{"Id":"452776840","IsPullRequest":true,"CreatedAt":"2019-06-06T20:36:55","Actor":"cdmihai","Number":"3306","RawContent":null,"Title":"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3306","RelatedDescription":"Closed or merged PR \"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject\" (#3306)"},{"Id":"452957325","IsPullRequest":true,"CreatedAt":"2019-06-06T10:36:29","Actor":"v-zbsail","Number":"3308","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk master | 20190606","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3308","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/sdk master | 20190606\" (#3308)"},{"Id":"452816272","IsPullRequest":false,"CreatedAt":"2019-06-06T03:38:50","Actor":"kkwpsv","Number":"3307","RawContent":null,"Title":"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype","State":"open","Body":"I have two projects. One is a ConsoleApp, the other is WebApplication. And the WebApplication has a `ProjectReference` to reference the ConsoleApp.\r\n\r\nWhen I publish the WebApplication with `--runtime`, it has an error like below:\r\n\r\n> /home/lsj/test/ConsoleApp2/ConsoleApp2.csproj : error : NETSDK1061: The project was restored using Microsoft.NETCore.App version 2.1.9, but with current settings, version 2.1.0 would be used instead. To resolve this issue, make sure the same settings are used for restore and for subsequent operations such as build or publish. Typically this issue can occur if the RuntimeIdentifier property is set during build or publish but not during restore. For more information, see https://aka.ms/dotnet-runtime-patch-selection.\r\n\r\nBut when I remove the `<OutputType>Exe</OutputType>` line from the csproj of ConsoleApp, it succeeds.\r\n\r\n\r\nI have done many tests:\r\n\r\n- If I only publish the ConsoleApp with `--runtime` and `<OutputType>Exe</OutputType>`, it will success.\r\n\r\n- If I publish the WebApplication with `--runtime` and `<OutputType>Exe</OutputType>`, it will fail, no matter on Linux or Windows, no matter with .net core 2.1 or 2.2. But it will succeed with .net core 3.0. (I think it's because that there's no any .net core 3.0.x)\r\n\r\n- If I publish the WebApplication with `--runtime` and without `<OutputType>Exe</OutputType>`, it will always succeed.\r\n\r\n- If I publish the WebApplication without `--runtime` and with `<OutputType>Exe</OutputType>`, it will always succeed.\r\n","Url":"https://github.com/dotnet/sdk/issues/3307","RelatedDescription":"Open issue \"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype\" (#3307)"},{"Id":"452773212","IsPullRequest":true,"CreatedAt":"2019-06-06T00:16:07","Actor":"elinor-fung","Number":"3305","RawContent":null,"Title":"Add property for building a library as a component","State":"open","Body":"SDK support for the hosting scenario of loading a managed component and calling into it from a native application: https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/native-hosting.md#scenarios. This hosting scenario requires a `runtimeconfig.json` file and our recommendation for components is to have a less restrictive `rollForward` setting.\r\n\r\nSetting `IsComponent=true` should result in:\r\n- `.runtimeconfig.json` being generated\r\n- `rollForward` being set to `LatestMinor` by default","Url":"https://github.com/dotnet/sdk/pull/3305","RelatedDescription":"Open PR \"Add property for building a library as a component\" (#3305)"},{"Id":"452682263","IsPullRequest":true,"CreatedAt":"2019-06-06T00:12:31","Actor":"dsplaisted","Number":"3304","RawContent":null,"Title":"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding","State":"closed","Body":"- Update stage 0, and remove code that added information that wasn't yet in bundled versions .props file.\r\n- Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\r\n","Url":"https://github.com/dotnet/sdk/pull/3304","RelatedDescription":"Closed or merged PR \"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\" (#3304)"},{"Id":"452651511","IsPullRequest":true,"CreatedAt":"2019-06-05T23:07:11","Actor":"peterhuene","Number":"3303","RawContent":null,"Title":"Resolve runtime target assets without copying for non-netcoreapp targets.","State":"closed","Body":"A [previous change](https://github.com/peterhuene/sdk/commit/545410772bb7c41d26b22dd9f3ba0cd3e8acd63e) disabled the resolution of runtime target assets when not\r\ntargeting netcoreapp by default. However, some users may want to be able to\r\ninspect the runtime target assets from their package dependencies without\r\nhaving them copied locally by default when not targeting netcoreapp.\r\n\r\nThis commit changes the previous fix by resolving the runtime target assets to\r\npopulate the `RuntimeTargetsCopyLocalItems` group, but sets the `CopyLocal`\r\nmetadata to false which prevents the items from ultimately being included in\r\nthe copy local files.  The property `CopyLocalRuntimeTargetAssets` now controls\r\nthis behavior, which defaults to `true` only when netcoreapp is the target TFM.\r\n\r\nFixes #3261.","Url":"https://github.com/dotnet/sdk/pull/3303","RelatedDescription":"Closed or merged PR \"Resolve runtime target assets without copying for non-netcoreapp targets.\" (#3303)"},{"Id":"452583102","IsPullRequest":false,"CreatedAt":"2019-06-05T15:56:25","Actor":"sbomer","Number":"3302","RawContent":null,"Title":"Mark assets from nuget packages as trimmable","State":"open","Body":"https://github.com/dotnet/sdk/pull/3231 flows `IsTrimmable` metadata from `FrameworkRefrence`s to the resolved assets. We could consider doing the same for `PackageReference`s to enable users to easily opt in to trimming assets that come from packages. Since the metadata was not originally intended as a customer-facing option, we may want to revisit this to see if it's the right way to expose such an option.\r\n\r\nFrom https://github.com/mono/linker/issues/595#issuecomment-498951483:\r\n\r\n> one of the assemblies I really would like to see reduced MahApps.Metro.IconPacks.dll is not. This DLL is 14MB but I probably use around 500KB... any way to see what happened and influence this?\r\n\r\nThis would come with the usual caveats: packages with logic that is activated by reflection, or that themselves use reflection, will likely be incompatible with trimming.","Url":"https://github.com/dotnet/sdk/issues/3302","RelatedDescription":"Open issue \"Mark assets from nuget packages as trimmable\" (#3302)"},{"Id":"452362994","IsPullRequest":false,"CreatedAt":"2019-03-22T10:08:51","Actor":"tommy86r","Number":"3300","RawContent":null,"Title":"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”","State":"open","Body":"# Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\r\n\r\nWhen I publish my asp.net core application as self-contained I succesfully get the myproject.exe. This exe file doesn't work if I double click on it and doesn't work if I try to run it from the cmd console. The project has been update from .net core 2.0 to 2.2\r\nThe exception is:\r\n\r\n> This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\n> A fatal error was encountered. This executable was not bound to load a managed DLL.\r\n\r\nI tried to publish throught Visual Studio (using Method: File System - Target Framework: netcoreapp2.2 - Deployment Mode: self-contained - Target Runtime: win-x64) and also throught cmd console \"dotnet publish -r win-x64\". But I get the same error.\r\n\r\nI added a repo to replicate the issue (I removed almost everythings from the project, it contains only the skeleton, but it seems sufficient to replicate the issue) https://github.com/tommy86r/TempProject\r\n\r\nAl last, this is my .net core configuration:\r\n![dot-net-info](https://user-images.githubusercontent.com/12224568/54815641-c1b03e80-4c92-11e9-805d-639ce9162e64.PNG)\r\n","Url":"https://github.com/dotnet/sdk/issues/3300","RelatedDescription":"Open issue \"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\" (#3300)"},{"Id":"452364411","IsPullRequest":false,"CreatedAt":"2019-03-13T07:55:02","Actor":"pavlexander","Number":"3301","RawContent":null,"Title":"Wrong assembly is being referenced in solution","State":"open","Body":"# Wrong assembly is being referenced in solution\r\n\r\nWhen trying to reference 1.0.4. version of an assembly - 1.0.1 version of file is being used.. Despite the fact, that project settings are pointing to the correct DLL. As the result - the solution is still compiled with 1.0.1 version.\r\n\r\n# General\r\n## Specs\r\n\r\nOS:\r\n\r\n* OS Name\tMicrosoft Windows 10 Enterprise\r\n* Version 10.0.16299 Build 16299\r\n\r\nVS:\r\n\r\n* Microsoft Visual Studio Professional 2017 \r\n* Version 15.9.7\r\n* VisualStudio.15.Release/15.9.7+28307.423\r\n* Microsoft .NET Framework\r\n* Version 4.7.02556\r\n\r\ndotnet --version\r\n\r\n* 2.2.104\r\n\r\n## Prerequisites\r\n\r\nCheckout the solution from my repo: \r\n\r\nhttps://github.com/pavlexander/dotnetbugs/tree/master/Bugs/12032019_WrongAssemblyLoaded\r\n\r\n## Steps to reproduce\r\n\r\n1. Open the solution in VisualStudio\r\n2. Right click on project, \"Add -> Reference\".\r\n3. Browse for file in directory: \"..12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll\"\r\nProceed with adding of a reference.\r\n**Note that file from 1.0.4 is selected.** \r\n4. Right click on project, click \"Edit WrongAssemblyLoaded.csproj\"\r\n5. Verify that correct assembly is specified:\r\n\r\n```\r\n  <ItemGroup>\r\n    <Reference Include=\"DebugTests.Common.NugetWithPdb\">\r\n      <HintPath>DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n```\r\n\r\n6. Now, in VisualStudio, expand the tree of the project -> Dependencies -> Assemblies, find the assembly that you referenced and check the path.\r\n\r\n**Expected result:**\r\n\r\nAssembly from 1.0.4 folder is used\r\n\r\n**Actual result:**\r\n\r\n..\\dotnetbugs\\Bugs\\12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.1\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb.dll\r\n\r\nAnd this is the issue. Assembly of version \"1.0.1\" is used in project, despite even the fact that in project settings \"1.0.4\" version is specified. If you try and build the solution now, in the output folder you will also see the \"1.0.1\" version. I don't think this is related to Visual Studio in any way. Because, even if you try to use the `dotnet build` command directly - it will also put the same wrong dll into an output directory. \r\n","Url":"https://github.com/dotnet/sdk/issues/3301","RelatedDescription":"Open issue \"Wrong assembly is being referenced in solution\" (#3301)"},{"Id":"451752075","IsPullRequest":false,"CreatedAt":"2018-06-29T10:44:56","Actor":"petroemil","Number":"3299","RawContent":null,"Title":"Define InternalsVisibleTo \"attributes\" in the csproj file","State":"open","Body":"Many of the AssemblyInfo.cs file's content are already generated from the project file, meaning in many (or more like most) cases we don't need to have an AssemblyInfo.cs file in our projects. \r\n\r\nThere is one quite frequently used assembly level attribute though that still has to be defined as a traditional attribute - the `InternalsVisibleToAttribute`.\r\n\r\nIt would be nice if this could also be defined from the project file, which would also mean we could easily define it in a solution level props file, enabling all projects implicitly to see their `internal`s from the test project(s).","Url":"https://github.com/dotnet/sdk/issues/3299","RelatedDescription":"Open issue \"Define InternalsVisibleTo \"attributes\" in the csproj file\" (#3299)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1138862091987800064","CreatedAt":"2019-06-12T17:34:16+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Preview 6 https://t.co/33ez5lSv95","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":238,"FavoriteCount":132,"RawContent":null},{"Id":"1138808172397899781","CreatedAt":"2019-06-12T14:00:00+00:00","UserScreenname":"dotnet","Text":"Announcing ML .NET 1.1 and Model Builder updates (Machine Learning for .NET)\nhttps://t.co/XN6b6HRpSP https://t.co/3pmcAPxoN9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1138490776495697920","CreatedAt":"2019-06-11T16:58:47+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":2,"RawContent":null},{"Id":"1138476484010446848","CreatedAt":"2019-06-11T16:02:00+00:00","UserScreenname":"dotnet","Text":"Find out what the @aspnet team has been working to add better support for building microservices in… https://t.co/kDZY18RslQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":16,"RawContent":null},{"Id":"1138214322503426048","CreatedAt":"2019-06-10T22:40:16+00:00","UserScreenname":"dotnet","Text":"On this week's #ASPNET Community Standup, we'll be talking to @danroth27 about the Blazing Pizza demo he showed at… https://t.co/EoPKEmeHPX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":55,"FavoriteCount":22,"RawContent":null},{"Id":"1137047014795911168","CreatedAt":"2019-06-07T17:21:48+00:00","UserScreenname":"dotnet","Text":"We're happy to support Core WF and Core WCF open source projects https://t.co/4hjysrl1X8 https://t.co/JWwVvdv01f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":142,"FavoriteCount":73,"RawContent":null},{"Id":"1136678589007519744","CreatedAt":"2019-06-06T16:57:48+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":2,"RawContent":null},{"Id":"1136485660875878400","CreatedAt":"2019-06-06T04:11:11+00:00","UserScreenname":"dotnet","Text":"Are you a Visual Basic developer? Are you interested in compilers? Make sure to watch @DualBrain's live stream wher… https://t.co/kcXhvWp7yZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":11,"RawContent":null},{"Id":"1136040221730934785","CreatedAt":"2019-06-04T22:41:10+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1135955901439971328","CreatedAt":"2019-06-04T17:06:06+00:00","UserScreenname":"dotnet","Text":"A Microsoft Build 2019, @LadyNaggaga showed us a new way to learn .NET using Try .NET\n\nhttps://t.co/KnbAuDyRzr #dotnet #dotnetcore","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2019-06-13T05:30:34.3159158Z","RunDurationInMilliseconds":12533}