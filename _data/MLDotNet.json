{"Data":{"GitHub":{"Issues":[{"Id":"379329615","IsPullRequest":false,"CreatedAt":"2018-11-10T03:48:13","Actor":"ReidAnderson","Number":"1591","RawContent":null,"Title":"Error When Building Anomaly Detection Example Using 0.7.0","State":"closed","Body":"Hello, I'm a .NET developer but new to the .NET core world. I was able to verify this on two different machines. I didn't see any existing issues open on this. Hopefully I'm not missing something obvious here, and apologies if I am. Let me know if there's any further information I can provide or questions I can answer\r\n\r\n### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10.0.16299\r\n- **.NET Version (eg., dotnet --info)**: \r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nPulled latest version of ML.NET to play around with the new anomaly detection algorithms. Added using statements from the [example](https://github.com/dotnet/machinelearning/blob/7fb76b026d0035d6da4d0b46bd3f2a6e3c0ce3f1/test/Microsoft.ML.TimeSeries.Tests/TimeSeriesDirectApi.cs) linked to from the [release notes](https://github.com/dotnet/machinelearning/blob/master/docs/release-notes/0.7/release-0.7.md). An example of some step by step command line instructions are below (and the file contents are in source code section):\r\n\r\n`dotnet new console `\r\n`dotnet add package Microsoft.ML --version 0.7.0`\r\n\r\n- **What happened?**\r\nFailed to build, received a missing type or name space `error CS0234: The type or namespace name 'TimeSeriesProcessing' does not exist in the namespace 'Microsoft.ML.Runtime' (are you missing an assembly reference?)`\r\nLooking through the object browser in VS I don't see any TimeSeriesProcessing namespace present in the 0.7.0 nuget package at all.\r\n\r\n- **What did you expect?**\r\nSuccessful build, finding the indicated namespace.\r\n\r\n### Source code / logs\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic; \r\nusing Microsoft.ML.Runtime.Api; \r\nusing Microsoft.ML.Runtime.Data; \r\nusing Microsoft.ML.Runtime.TimeSeriesProcessing;\r\n\r\nnamespace console_dotnetcore\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/1591","RelatedDescription":"Closed issue \"Error When Building Anomaly Detection Example Using 0.7.0\" (#1591)"},{"Id":"379367550","IsPullRequest":true,"CreatedAt":"2018-11-10T00:29:43","Actor":"sfilipi","Number":"1594","RawContent":null,"Title":"[WIP] Exposing normalizer parameters ","State":"open","Body":"Exposing the weights of the normalizers. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/1594","RelatedDescription":"Open PR \"[WIP] Exposing normalizer parameters \" (#1594)"},{"Id":"379342440","IsPullRequest":true,"CreatedAt":"2018-11-09T23:41:33","Actor":"shauheen","Number":"1593","RawContent":null,"Title":"Update Readme.md","State":"closed","Body":"Update the code snippet","Url":"https://github.com/dotnet/machinelearning/pull/1593","RelatedDescription":"Closed or merged PR \"Update Readme.md\" (#1593)"},{"Id":"379061169","IsPullRequest":true,"CreatedAt":"2018-11-09T22:31:05","Actor":"sfilipi","Number":"1588","RawContent":null,"Title":"Renaming transforms to transformers Part 1","State":"closed","Body":"Addresses part of the third section of #1318 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1588","RelatedDescription":"Closed or merged PR \"Renaming transforms to transformers Part 1\" (#1588)"},{"Id":"379337947","IsPullRequest":true,"CreatedAt":"2018-11-09T22:04:31","Actor":"Ivanidzo4ka","Number":"1592","RawContent":null,"Title":"WIP Convert Ngram transform to estimator/transformer","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/1592","RelatedDescription":"Open PR \"WIP Convert Ngram transform to estimator/transformer\" (#1592)"},{"Id":"379322402","IsPullRequest":true,"CreatedAt":"2018-11-09T21:08:33","Actor":"sfilipi","Number":"1590","RawContent":null,"Title":"more transform => transformer renaming","State":"open","Body":"Fixes part of #1318 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1590","RelatedDescription":"Open PR \"more transform => transformer renaming\" (#1590)"},{"Id":"379310526","IsPullRequest":false,"CreatedAt":"2018-11-09T20:27:49","Actor":"ganik","Number":"1589","RawContent":null,"Title":"class AssemblyRegistration should be public","State":"open","Body":"Currently AssemblyRegistration.RegisterAssemblies(...) is not accessible outside of ML.Legacy assembly. This method is needed for NimbusML to register/load assemblies","Url":"https://github.com/dotnet/machinelearning/issues/1589","RelatedDescription":"Open issue \"class AssemblyRegistration should be public\" (#1589)"},{"Id":"378542051","IsPullRequest":true,"CreatedAt":"2018-11-09T17:41:49","Actor":"najeeb-kazmi","Number":"1573","RawContent":null,"Title":"Fixing typo in ExtractWordEmbeddings","State":"closed","Body":"Fix #1548 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/1573","RelatedDescription":"Closed or merged PR \"Fixing typo in ExtractWordEmbeddings\" (#1573)"},{"Id":"379056001","IsPullRequest":true,"CreatedAt":"2018-11-09T07:46:57","Actor":"TomFinley","Number":"1587","RawContent":null,"Title":"Movement and Internalization Phase 1","State":"open","Body":"Internalization and sometimes movement of many types. Ongoing work related to #1519 as we try to limit user exposure to internal infrastructure types.\r\n\r\n* Move Sweeper types into Sweeper assembly, out of Core.\r\n* Internalize all command line related infrastructure, including ArgumentAttribute. Move different types into different files.\r\n* Internalize all types in Core's Utils folder.\r\n* Considerable cleanup of TimeSeries abstractions to hide them since they made public some things in Core's Utils.\r\n* Internalize PFA export support.\r\n* Internalize ONNX export support.\r\n* Internalize all the base cursor classes.\r\n* Internalize all ITreeEnsemble and related types.\r\n* Clean up some pointless code.\r\n* Make ModelSave/Load contexts uninstantiable.\r\n\r\nThe commits are mostly structured where I'm removing one sort of thing at a time, so if you want to break it up, just compare adjacent commits. It works pretty well, except sometimes I found I hadn't quite completed the job of a prior commit at a later point and didn't feel like rewriting history, so there is a small amount of pollution.\r\n\r\nThere's no particular reason why I started where I started or stopped where I stopped, except that it's the end of the day.","Url":"https://github.com/dotnet/machinelearning/pull/1587","RelatedDescription":"Open PR \"Movement and Internalization Phase 1\" (#1587)"},{"Id":"379047168","IsPullRequest":true,"CreatedAt":"2018-11-09T07:07:44","Actor":"jignparm","Number":"1586","RawContent":null,"Title":"Multiple inputs output support for OnnxTransform.","State":"open","Body":"Fixes issue #1585.\r\n\r\nThis PR is to add support for Onnx models that have multiple input/outputs. The current version of the transform allows for only single input and single output.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1586","RelatedDescription":"Open PR \"Multiple inputs output support for OnnxTransform.\" (#1586)"},{"Id":"379046800","IsPullRequest":false,"CreatedAt":"2018-11-09T07:05:47","Actor":"jignparm","Number":"1585","RawContent":null,"Title":"Add multiple input/output support for OnnxTransform","State":"open","Body":"Allow multiple IDV columns to be mapped to multiple input nodes of an Onnx model, and also accomodate models that have multiple outputs.","Url":"https://github.com/dotnet/machinelearning/issues/1585","RelatedDescription":"Open issue \"Add multiple input/output support for OnnxTransform\" (#1585)"},{"Id":"378983763","IsPullRequest":true,"CreatedAt":"2018-11-09T01:14:25","Actor":"najeeb-kazmi","Number":"1584","RawContent":null,"Title":"Adding CrossValidate to ClusteringContext","State":"open","Body":"Fixes #1575 ","Url":"https://github.com/dotnet/machinelearning/pull/1584","RelatedDescription":"Open PR \"Adding CrossValidate to ClusteringContext\" (#1584)"},{"Id":"378959354","IsPullRequest":true,"CreatedAt":"2018-11-08T23:22:37","Actor":"artidoro","Number":"1583","RawContent":null,"Title":"Moved WhiteningTransform to HalLearners","State":"open","Body":"Fixes #721.\r\n\r\nMoved the whitening transform file to HalLearners. Also had to move the corresponding mlcontext extensions.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1583","RelatedDescription":"Open PR \"Moved WhiteningTransform to HalLearners\" (#1583)"},{"Id":"378496767","IsPullRequest":true,"CreatedAt":"2018-11-08T21:44:42","Actor":"Zruty0","Number":"1569","RawContent":null,"Title":"Added support for caching and filtering","State":"closed","Body":"Fixes #1568 . Adds caching and range filtering as MLContext extensions","Url":"https://github.com/dotnet/machinelearning/pull/1569","RelatedDescription":"Closed or merged PR \"Added support for caching and filtering\" (#1569)"},{"Id":"378496469","IsPullRequest":false,"CreatedAt":"2018-11-08T21:44:42","Actor":"Zruty0","Number":"1568","RawContent":null,"Title":"Add support for caching and filtering","State":"closed","Body":"We need to add the API to cache the data view in memory (via `CacheDataView`).\r\n\r\nAlso, we want to add some filtering functionality: I think `RangeFilter` is enough. We have agreed in #933 to not make estimators/transformers for filtering, so I suggest to have only `MLContext` extensions for these operations.","Url":"https://github.com/dotnet/machinelearning/issues/1568","RelatedDescription":"Closed issue \"Add support for caching and filtering\" (#1568)"},{"Id":"378921485","IsPullRequest":true,"CreatedAt":"2018-11-08T21:20:27","Actor":"Ivanidzo4ka","Number":"1582","RawContent":null,"Title":"Convert Gcn and LpNorm to estimators","State":"open","Body":"Convert gcn and lp norn to estimators","Url":"https://github.com/dotnet/machinelearning/pull/1582","RelatedDescription":"Open PR \"Convert Gcn and LpNorm to estimators\" (#1582)"},{"Id":"378883906","IsPullRequest":false,"CreatedAt":"2018-11-08T19:32:51","Actor":"Zruty0","Number":"1581","RawContent":null,"Title":"Organize the folder structure","State":"open","Body":"We should make sure that the namespaces and folders are matching each other, especially for public components.\r\n\r\n- All our assemblies should have DefaultNamespace be equal to `Microsoft.ML`\r\n- All other public types should be located in files that match their namespace.\r\n\r\n@TomFinley do you want to comment?","Url":"https://github.com/dotnet/machinelearning/issues/1581","RelatedDescription":"Open issue \"Organize the folder structure\" (#1581)"},{"Id":"378869367","IsPullRequest":true,"CreatedAt":"2018-11-08T18:52:30","Actor":"eerhardt","Number":"1580","RawContent":null,"Title":"Introduce VBufferMutationContext and hide VBuffer.Count","State":"open","Body":"This PR executes on proposed changes (1) and (5) in https://github.com/dotnet/machinelearning/issues/608#issuecomment-433185895.\r\n\r\n> 1. Keep Length, but hide/private Count\r\n\r\n> 5. The most drastic proposed change is how to actually mutate a VBuffer.\r\n\r\nThis introduces `VBufferMutationContext`, and uses it in almost all the places where VBuffers are mutated. There are a few stragglers that I will fix in a subsequent PR, but I thought this change was large enough, so I cut it off once I could make `.Count` private.\r\n\r\nWorking towards #608.","Url":"https://github.com/dotnet/machinelearning/pull/1580","RelatedDescription":"Open PR \"Introduce VBufferMutationContext and hide VBuffer.Count\" (#1580)"},{"Id":"378845774","IsPullRequest":false,"CreatedAt":"2018-11-08T17:45:14","Actor":"abgoswam","Number":"1579","RawContent":null,"Title":"Exception when trying to Evaluate AveragedPerceptronTrainer, LinearSvm","State":"open","Body":"For a couple of Learners, we get an exception during `Evaluate`\r\n- AveragedPerceptronTrainer\r\n- LinearSvm\r\n\r\nException : \r\n\r\nMessage: System.ArgumentOutOfRangeException : Probability column 'Probability' not found\r\nParameter name: name\r\n\r\nSample : \r\n\r\n        [Fact]\r\n        public void OVA_BC_AP()\r\n        {\r\n            string dataPath = GetDataPath(\"breast-cancer.txt\");\r\n\r\n            // Create a new context for ML.NET operations. It can be used for exception tracking and logging, \r\n            // as a catalog of available operations and as the source of randomness.\r\n            var mlContext = new MLContext(seed: 1);\r\n            var reader = new TextLoader(mlContext, new TextLoader.Arguments()\r\n            {\r\n                Column = new[]\r\n                        {\r\n                            new TextLoader.Column(\"Label\", DataKind.R4, 0),\r\n                            new TextLoader.Column(\"Features\", DataKind.R4, new [] { new TextLoader.Range(1, 9) }),\r\n                        }\r\n            });\r\n\r\n            // Data\r\n            var data = reader.Read(GetDataPath(dataPath));\r\n\r\n            // Pipeline\r\n            var pipeline = new AveragedPerceptronTrainer(mlContext, \"Label\", \"Features\");\r\n\r\n            var model = pipeline.Fit(data);\r\n            var predictions = model.Transform(data);\r\n\r\n            // Metrics\r\n            var metrics = mlContext.BinaryClassification.Evaluate(predictions);\r\n        }\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1579","RelatedDescription":"Open issue \"Exception when trying to Evaluate AveragedPerceptronTrainer, LinearSvm\" (#1579)"},{"Id":"378753325","IsPullRequest":true,"CreatedAt":"2018-11-08T14:24:00","Actor":"feiyun0112","Number":"1578","RawContent":null,"Title":"Split timeseries samples","State":"open","Body":"Fix #1577","Url":"https://github.com/dotnet/machinelearning/pull/1578","RelatedDescription":"Open PR \"Split timeseries samples\" (#1578)"},{"Id":"378602425","IsPullRequest":false,"CreatedAt":"2018-11-08T06:59:06","Actor":"sfilipi","Number":"1577","RawContent":null,"Title":"The Timeseries samples need to be each one on its own file","State":"open","Body":"There are 4 samples in the [Timeseries.cs samples](https://github.com/dotnet/machinelearning/blob/master/docs/samples/Microsoft.ML.Samples/Dynamic/Timeseries.cs)\r\n\r\nSplit each sample, together with the helper classes in its own file, as it is easier to maintain, and change the references of those samples in the code to reference the new files. \r\n\r\nAlso, move the references from the constructor, to the actual class. \r\nExample reference [here](https://github.com/dotnet/machinelearning/blob/e63669b3228fe932e062983759321a021a660f51/src/Microsoft.ML.TimeSeries/IidSpikeDetector.cs#L185)\r\n\r\n` /// [!code-csharp[MF](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Timeseries.cs \"Timeseries examples for spike detection.\")]`\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1577","RelatedDescription":"Open issue \"The Timeseries samples need to be each one on its own file\" (#1577)"},{"Id":"378579525","IsPullRequest":false,"CreatedAt":"2018-11-08T04:57:31","Actor":"sfilipi","Number":"1576","RawContent":null,"Title":"Remove the copyright from the samples files","State":"open","Body":"There is no need for copyright in the docs/Microsoft.Ml.Samples project source files. \r\n1- Remove the copyright from the docs/Microsoft.Ml.Samples project sources.\r\n2- Change the other source files files that reference the samples in the XML to not contain a range\r\n. like [here](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.FastTree/TreeTrainersStatic.cs#L41): \r\n\r\nthe reference to the other file is:\r\n\r\n`[!code-csharp[FastTree](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/FastTreeRegression.cs?range=6-11,19-69 \"FastTree regression example.\")]\r\n`\r\nand it should change to not include a range nor comment anymore:\r\n\r\n`[!code-csharp[FastTree](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Static/FastTreeRegression.cs)]\r\n`\r\n \r\n","Url":"https://github.com/dotnet/machinelearning/issues/1576","RelatedDescription":"Open issue \"Remove the copyright from the samples files\" (#1576)"},{"Id":"378559227","IsPullRequest":false,"CreatedAt":"2018-11-08T03:03:50","Actor":"najeeb-kazmi","Number":"1575","RawContent":null,"Title":"ClusteringContext should have CrossValidate","State":"open","Body":"Currently, `ClusteringContext` lacks a `CrossValidate` method. We should add this for completeness and parity with the internal code which supports CV on clustering tasks.","Url":"https://github.com/dotnet/machinelearning/issues/1575","RelatedDescription":"Open issue \"ClusteringContext should have CrossValidate\" (#1575)"},{"Id":"378559185","IsPullRequest":true,"CreatedAt":"2018-11-08T03:03:38","Actor":"abgoswam","Number":"1574","RawContent":null,"Title":"WIP : More OVA Fixes","State":"open","Body":"Targets issue : #1387 \r\n\r\n- bug in OVA. Under the hood we were using LinearSVM as the binary classifier all the time \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1574","RelatedDescription":"Open PR \"WIP : More OVA Fixes\" (#1574)"},{"Id":"378530330","IsPullRequest":false,"CreatedAt":"2018-11-08T00:41:11","Actor":"wschin","Number":"1572","RawContent":null,"Title":"Some times we may want to provide test set in addition to training and validation sets","State":"open","Body":"Imagining that one day, a user prepares a training set and a validation, and she wants to train a `FastTree` (gradient boosting decision tree) with early stopping. Then, she probably also would like to know how good our early stopping is by calculating a score based on some predictions. If this is the case, she may need another data set (let's call it test set) because it's not fair to use validation set again because the training iteration number is determined by validation set via early stopping.","Url":"https://github.com/dotnet/machinelearning/issues/1572","RelatedDescription":"Open issue \"Some times we may want to provide test set in addition to training and validation sets\" (#1572)"},{"Id":"378508339","IsPullRequest":true,"CreatedAt":"2018-11-07T23:07:06","Actor":"wschin","Number":"1571","RawContent":null,"Title":"Printing out test scores in training phase for FastTree","State":"open","Body":"The current `FastTree` (defined in `FastTree.cs`) has a nice framework for handling the presence of training, validation, and test sets. This PR exposes this functionality to users by\r\n\r\n1. Extend `MLContext` defined in `TrainContext.cs`\r\n2. Create `Test` (defined in `Test.cs` under `FastTree` project) following what we having been doing for validation set.\r\n3. Make sure that the test data set can be accessed in `FastTree.InitializeTests()` when using `Train` or `TrainTest` commands.\r\n\r\nFixes #1572.\r\n\r\nLet's see an example command of how this works.\r\n\r\nCommand: `machinelearning>dotnet bin\\AnyCPU.Debug\\Microsoft.ML.Console\\netcoreapp2.1\\MML.dll train data=breast-cancer.txt loader=text{col=Label:R4:0 col=Features:R4:1-9} valid=breast-cancer.txt test=..\\TLC\\Samples\\breast-cancer.txt tr=frr{tf=1 iter=2} out=model.zip`\r\n\r\nExpected outcome printed on screen:\r\n```\r\nStarting to train ...\r\ntrain.L1=0.291333712794827\r\ntrain.L2=0.483948548949904\r\nvalid.L1=0.291333712794827\r\nvalid.L2=0.483948548949904\r\ntest[0].L1=0.291333712794827\r\ntest[0].L2=0.483948548949904\r\ntrain.L1=0.244367572749215\r\ntrain.L2=0.399588099386731\r\nvalid.L1=0.244367572749215\r\nvalid.L2=0.399588099386731\r\ntest[0].L1=0.244367572749215\r\ntest[0].L2=0.399588099386731\r\n```\r\ntrain*/valid*/test* are scores computed using the specified training/validation/test set.","Url":"https://github.com/dotnet/machinelearning/pull/1571","RelatedDescription":"Open PR \"Printing out test scores in training phase for FastTree\" (#1571)"},{"Id":"378503408","IsPullRequest":true,"CreatedAt":"2018-11-07T22:49:52","Actor":"ganik","Number":"1570","RawContent":null,"Title":"Register assemblies in  legacy predictor model","State":"open","Body":"fixes #1150","Url":"https://github.com/dotnet/machinelearning/pull/1570","RelatedDescription":"Open PR \"Register assemblies in  legacy predictor model\" (#1570)"},{"Id":"378493367","IsPullRequest":false,"CreatedAt":"2018-11-07T22:18:22","Actor":"artidoro","Number":"1567","RawContent":null,"Title":"Access whitening transform models","State":"open","Body":"There is no way for the user to access the models produced by the whitening transform (the whitening matrices). We would need to expose that, as well as a function that allows to apply the matrix to new suitable input vectors (something similar to FillValues in the current code).\r\n\r\nFurthermore, we need to have an onFit function for pigsty to pass this class out.\r\n\r\nAdding @Ivanidzo4ka  to the conversation. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/1567","RelatedDescription":"Open issue \"Access whitening transform models\" (#1567)"},{"Id":"378472284","IsPullRequest":true,"CreatedAt":"2018-11-07T21:15:49","Actor":"jwood803","Number":"1566","RawContent":null,"Title":"Add debug asserts","State":"open","Body":"Potential fix for #828 \r\n\r\n@briancylui Is this on the right track to what was needed? Do you think we should do the same to the `AvxIntrinsics` class, as well?","Url":"https://github.com/dotnet/machinelearning/pull/1566","RelatedDescription":"Open PR \"Add debug asserts\" (#1566)"},{"Id":"378359193","IsPullRequest":false,"CreatedAt":"2018-11-07T16:14:08","Actor":"TomFinley","Number":"1565","RawContent":null,"Title":"Legacy API: Should we migrate its entry-points?","State":"open","Body":"The plan is to deprecate then delete the legacy API. While most items in it are of questionable worth, the legacy API does contain some components that might be worth saving, and some we may have to save.\r\n\r\nConsider this entry-point definition, in the legacy project.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/7b2461cfdad150047dbbcbc163290a32e9f4d829/src/Microsoft.ML.Legacy/Runtime/EntryPoints/ModelOperations.cs#L81\r\n\r\nAs it is an entry-point, it was [duly published in NimbusML as we see here](https://github.com/Microsoft/NimbusML/blob/e1004720ec0c252ba87f02c190c33739d9c00f20/src/python/nimbusml/internal/entrypoints/models_ovamodelcombiner.py), and this internal entry-point definition actually [wound up being used here](https://github.com/Microsoft/NimbusML/blob/e1004720ec0c252ba87f02c190c33739d9c00f20/src/python/nimbusml/model_selection/cv.py#L474).\r\n\r\nThere are a couple questions we might want to ask. The legacy pipeline API was entry-point based, so anything that was part of a pipeline had to be an entry-point (I think). So were these entry-points defined in legacy *specifically* intended to be useful beyond legacy?\r\n\r\nIf we want to keep this entry-point, and others like it, we should have a migration plan somewhere, since legacy is to be deleted.","Url":"https://github.com/dotnet/machinelearning/issues/1565","RelatedDescription":"Open issue \"Legacy API: Should we migrate its entry-points?\" (#1565)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-11-10T05:30:32.6894195Z","RunDurationInMilliseconds":1143}