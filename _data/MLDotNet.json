{"Data":{"GitHub":{"Issues":[{"Id":"511625619","IsPullRequest":true,"CreatedAt":"2019-10-23T23:37:33","Actor":"Lynx1820","Number":"4371","RawContent":null,"Title":"Fixes onnx exports for binary classification trainers ","State":"open","Body":"This draft PR fixes the issues with exporting the following binary classification trainers to onnx: \r\n- FastTree()\r\n- LbfgsLogisticRegression()\r\n- LightGbm()\r\n- SdcaLogisticRegression()\r\n- SgdCalibrated()\r\n- SymbolicSgdLogisticRegression()\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4371","RelatedDescription":"Open PR \"Fixes onnx exports for binary classification trainers \" (#4371)"},{"Id":"511459518","IsPullRequest":true,"CreatedAt":"2019-10-23T17:10:44","Actor":"bpstark","Number":"4370","RawContent":null,"Title":"Created Polynomial Learning Rate scheduler","State":"open","Body":"Created the polynomial learning rate scheduler based upon Tensorflow's\r\nimplementation of polynomial lr scheduler. which can be found\r\nhttps://www.tensorflow.org/api_docs/python/tf/compat/v1/train/polynomial_decay\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4370","RelatedDescription":"Open PR \"Created Polynomial Learning Rate scheduler\" (#4370)"},{"Id":"511364376","IsPullRequest":false,"CreatedAt":"2019-10-23T14:31:16","Actor":"FilipRudzinski","Number":"4369","RawContent":null,"Title":"Error during training tensorflow images recognition with ML.NET 1.4preview2","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 4.6, 4.6.2, CORE - 2.0, 2.1, 3.0\r\n\r\n### Issue\r\n\r\nError running sample: ImageClassification.Train with Ml.NET 1.4Preview2\r\n\r\n- **What did you do?** Tried to run sample  ImageClassification.Train\r\n- **What happened?** \r\ngot error on line  ITransformer trainedModel = pipeline.Fit(trainDataView); \r\n- **What did you expect?** Produce trained model\r\n\r\n### Source code / logs\r\nException:\r\n\r\nSystem.ArgumentOutOfRangeException: The size of input lines is not consistent\r\nParameter name: Source\r\n   at Microsoft.ML.Data.TextLoader.Bindings..ctor(TextLoader parent, Column[] cols, IMultiStreamSource headerFile, IMultiStreamSource dataSample)\r\n   at Microsoft.ML.Data.TextLoader..ctor(IHostEnvironment env, Options options, IMultiStreamSource dataSample)\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer.GetShuffledData(String path)\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer.TrainAndEvaluateClassificationLayer(String trainBottleneckFilePath, Options options, String validationSetBottleneckFilePath)\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer..ctor(IHostEnvironment env, Options options, DnnModel tensorFlowModel, IDataView input)\r\n   at Microsoft.ML.Transforms.ImageClassificationEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at ImageClassification.Train.Program.Main(String[] args) in C:\\Projekty\\Experimental\\v14\\DeepLearning_TensorFlowEstimator\\ImageClassification.Train\\Program.cs:line 78\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4369","RelatedDescription":"Open issue \"Error during training tensorflow images recognition with ML.NET 1.4preview2\" (#4369)"},{"Id":"510183456","IsPullRequest":true,"CreatedAt":"2019-10-23T00:25:58","Actor":"CESARDELATORRE","Number":"4357","RawContent":null,"Title":"Fix path related to v10.0 instead v9.0","State":"closed","Body":"Fix path related to v10.0 instead v9.0.\r\nv9.0 was coming from NVIDIA documentation but it is not accurate for us.\r\n\r\nIn any case, this fix only applies for folks using C++\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4357","RelatedDescription":"Closed or merged PR \"Fix path related to v10.0 instead v9.0\" (#4357)"},{"Id":"510999572","IsPullRequest":true,"CreatedAt":"2019-10-23T00:21:55","Actor":"eerhardt","Number":"4368","RawContent":null,"Title":"Fix warnings/errors while buliding NuGet packages.","State":"open","Body":"- A new warning that PackageIconUrl is deprecated, and use PackageIcon instead.\r\n- Mkl.Redist has `build/netstandard2.0` assets, but no `lib` or `ref` assets, so this caused a warning. The fix is to put a placeholder file in the `lib/netstandard2.0` folder.\r\n- Microsoft.ML.symbols had a warning that it contains a `build` targets file, but not for the current package name. This was suppressed because we only use the symbols packages for publishing symbols.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4368","RelatedDescription":"Open PR \"Fix warnings/errors while buliding NuGet packages.\" (#4368)"},{"Id":"510989908","IsPullRequest":false,"CreatedAt":"2019-10-22T23:47:52","Actor":"aslotte","Number":"4367","RawContent":null,"Title":"LoadFromTextFile unable to correctly parse CSV file","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Home\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 3.0\r\n\r\n### Issue\r\n\r\n- **What did you do?** Loaded the following dataset: https://data.world/promptcloud/fashion-products-on-amazon-com/workspace/file?filename=amazon_co-ecommerce_sample.csv\r\n- **What happened?** The data was not correctly loaded. It looks like data from the same row is used in the following row etc. It may have something to do with the final column in the dataset.\r\n- **What did you expect?** Each row to load correctly as it does if opening the file in Excel\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4367","RelatedDescription":"Open issue \"LoadFromTextFile unable to correctly parse CSV file\" (#4367)"},{"Id":"509248221","IsPullRequest":true,"CreatedAt":"2019-10-22T23:40:15","Actor":"bpstark","Number":"4349","RawContent":null,"Title":"Added support for resnet50 architecture for image classification","State":"closed","Body":"Created a sample to show usage of resnet50 V2.\r\nTested against Tensorflow we can see there is a definitive discrepancy\r\nin accuracy.\r\n\r\nTraining for ~136 epochs (TF uses steps rather than epochs) we are able\r\nto achieve an accuracy of 78.7% in Tensorflow, compared to our accuracy\r\nwhich was 54.6%. This discrepancy can be accounted for due to the way in\r\nwhich TF adjusts the learning rate over time. We have already begun to\r\nmake those changes to our code, and will be added in a separate change.","Url":"https://github.com/dotnet/machinelearning/pull/4349","RelatedDescription":"Closed or merged PR \"Added support for resnet50 architecture for image classification\" (#4349)"},{"Id":"510972523","IsPullRequest":false,"CreatedAt":"2019-10-22T22:51:34","Actor":"Krusnik02","Number":"4366","RawContent":null,"Title":"UWP: Compilation error - C:\\Users\\user\\.nuget\\packages\\microsoft.net.uwpcoreruntimesdk\\2.2.9\\tools\\CoreRuntime\\Microsoft.Net.CoreRuntime.targets(195,9): error : Framework resource extraction failed. Exception of type 'System.OutOfMemoryException' was thrown.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI have large UWP project:\r\n[https://www.microsoft.com/ru-ru/p/spider-intelligence/9phw2smp1hl7?activetab=pivot:overviewtab](url)\r\nI have added ML.NET and ML processing algorithms to the solution. \r\nOnce I did \"Clean solution\" and “Rebuilt solution”....\r\n- **What happened?**\r\nBuilder have given me following error: \"C:\\Users\\user\\.nuget\\packages\\microsoft.net.uwpcoreruntimesdk\\2.2.9\\tools\\CoreRuntime\\Microsoft.Net.CoreRuntime.targets(195,9): error : Framework resource extraction failed. Exception of type 'System.OutOfMemoryException' was thrown.\"\r\n\r\nI have checked that the cause of the problem is ML.NET: I have removed ML.NET link and code from the solution, everything become fine. \r\n\r\nI have checked all versions of microsoft.net.uwpcoreruntimesdk, ML.NET, other libraries, building options. But error is still here. \r\nI have 48GB RAM so it is nor RAM issue.\r\n\r\n- **What did you expect?**\r\nAny way to build my UWP large enough project with ML.NET inside :) I think it is compiler or linker BUG somewhere.\r\n\r\n### Source code / logs\r\nCode is large... If it is needed, I can prepare code sample with error.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4366","RelatedDescription":"Open issue \"UWP: Compilation error - C:\\Users\\user\\.nuget\\packages\\microsoft.net.uwpcoreruntimesdk\\2.2.9\\tools\\CoreRuntime\\Microsoft.Net.CoreRuntime.targets(195,9): error : Framework resource extraction failed. Exception of type 'System.OutOfMemoryException' was thrown.\" (#4366)"},{"Id":"510361477","IsPullRequest":true,"CreatedAt":"2019-10-22T22:21:37","Actor":"ashbhandare","Number":"4362","RawContent":null,"Title":"Redesign DnnCatalog methods API for ease of use and consistency.","State":"closed","Body":"Fixes #4307\r\n\r\nInitially the methods in the DnnCatalog took a lot of optional arguments which would confuse users and adding features to the ImageClassification API would require breaking changes in the future.\r\n\r\nTo be consistent with the rest of ML .Net, this change follows the pattern where we have 2 overloads:\r\n1)An overload that takes the required parameters, and optionally the most important/common parameters to a method.\r\n2)An overload that takes an Options object, which contains all the options to the method \r\n\r\nThis changes also removes a couple of unused options for the ImageClassification API, while making RetrainDnnModel internal to enable further testing before releasing.\r\n\r\nWIP to get initial feedback/add necessary tests.","Url":"https://github.com/dotnet/machinelearning/pull/4362","RelatedDescription":"Closed or merged PR \"Redesign DnnCatalog methods API for ease of use and consistency.\" (#4362)"},{"Id":"510255896","IsPullRequest":true,"CreatedAt":"2019-10-22T20:06:37","Actor":"eerhardt","Number":"4358","RawContent":null,"Title":"Fix AutoML's reference to LightGbm","State":"closed","Body":"AutoML has a reference to LightGbm, however it is getting the wrong version number in the dependency. Instead of `1.4.0-preview...`, it is getting `0.16.0-preview...`. This is because the casing in the reference is incorrect.\r\n\r\nSince the casing is incorrect, when evaluating the LightGbm project as a reference, its name no longer matches the casing in the `StableProjects` list, so it no longer thinks it is stable, and gets the unstable version.\r\n\r\nThe fix is to fix the casing, and use case-insensitve checks when evaluating IsStableProject.\r\n\r\nFix #4354","Url":"https://github.com/dotnet/machinelearning/pull/4358","RelatedDescription":"Closed or merged PR \"Fix AutoML's reference to LightGbm\" (#4358)"},{"Id":"509644125","IsPullRequest":false,"CreatedAt":"2019-10-22T20:06:37","Actor":"LittleLittleCloud","Number":"4354","RawContent":null,"Title":"[AutoML] Recommendation experiment got SMAC local search exception during training","State":"closed","Body":"Hey folks\r\n\r\nI just try the Recommendation experiment API in the master branch. After I training for a period of time (like 300 sec), I got this error.\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: SMAC sweeper localSearch threw exception ---> System.MethodAccessException: Attempt by method 'Microsoft.ML.AutoML.SmacSweeper.ComputeForestStats(Double[][])' to access method 'Microsoft.ML.Trainers.FastTree.VectorUtils.GetMean(Double[])' failed.\r\n   at Microsoft.ML.AutoML.SmacSweeper.ComputeForestStats(Double[][] leafValues)\r\n   at Microsoft.ML.AutoML.SmacSweeper.LocalSearch(ParameterSet parent, FastForestRegressionModelParameters forest, Double bestVal, Double epsilon, Boolean isMetricMaximizing)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.AutoML.SmacSweeper.LocalSearch(ParameterSet parent, FastForestRegressionModelParameters forest, Double bestVal, Double epsilon, Boolean isMetricMaximizing)\r\n   at Microsoft.ML.AutoML.SmacSweeper.GreedyPlusRandomSearch(ParameterSet[] parents, FastForestRegressionModelParameters forest, Int32 numOfCandidates, IEnumerable`1 previousRuns)\r\n   at Microsoft.ML.AutoML.SmacSweeper.GenerateCandidateConfigurations(Int32 numOfCandidates, IEnumerable`1 previousRuns, FastForestRegressionModelParameters forest)\r\n   at Microsoft.ML.AutoML.PipelineSuggester.SampleHyperparameters(MLContext context, SuggestedTrainer trainer, IEnumerable`1 history, Boolean isMaximizingMetric)\r\n   at Microsoft.ML.AutoML.PipelineSuggester.GetNextInferredPipeline(MLContext context, IEnumerable`1 history, DatasetColumnInfo[] columns, TaskKind task, Boolean isMaximizingMetric, CacheBeforeTrainer cacheBeforeTrainer, IEnumerable`1 trainerWhitelist)\r\n   at Microsoft.ML.AutoML.Experiment`2.Execute()\r\n   at Microsoft.ML.AutoML.ExperimentBase`2.Execute(ColumnInformation columnInfo, DatasetColumnInfo[] columns, IEstimator`1 preFeaturizer, IProgress`1 progressHandler, IRunner`1 runner)\r\n   at Microsoft.ML.AutoML.ExperimentBase`2.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.<>c__DisplayClass23_0`4.<InnerTrainModelAsync>b__4() in C:\\Users\\xiaoyuz\\Source\\Repos\\machinelearning-tools\\Microsoft.ML.ModelBuilder.AutoMLService\\AutoMLEngineService\\AutoMLEngine.cs:line 277\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.<InnerTrainModelAsync>d__23`4.MoveNext() in C:\\Users\\xiaoyuz\\Source\\Repos\\machinelearning-tools\\Microsoft.ML.ModelBuilder.AutoMLService\\AutoMLEngineService\\AutoMLEngine.cs:line 281\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.<StartTrainingAsync>d__9.MoveNext() in C:\\Users\\xiaoyuz\\Source\\Repos\\machinelearning-tools\\Microsoft.ML.ModelBuilder.AutoMLService\\AutoMLEngineService\\AutoMLEngine.cs:line 107\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\Users\\xiaoyuz\\Source\\Repos\\machinelearning-tools\\Microsoft.ML.ModelBuilder.AutoMLService\\Program.cs:line 36\r\n```\r\n\r\nthe dataset I use is this [one](https://raw.githubusercontent.com/dotnet/machinelearning-samples/master/samples/csharp/getting-started/MatrixFactorization_MovieRecommendation/Data/recommendation-ratings-train.csv)\r\n\r\nI guess it's because of value error (like nan). But I'm not too sure about that, Please take a look, any suggestion will be helpful. Thanks\r\n\r\n## A minimal reproducable example [here](https://github.com/LittleLittleCloud/ReproducableExampleForIssue4354)","Url":"https://github.com/dotnet/machinelearning/issues/4354","RelatedDescription":"Closed issue \"[AutoML] Recommendation experiment got SMAC local search exception during training\" (#4354)"},{"Id":"510853092","IsPullRequest":true,"CreatedAt":"2019-10-22T19:13:15","Actor":"maryamariyan","Number":"4365","RawContent":null,"Title":"Adds CodeGen to master (from features/automl)","State":"open","Body":"- [x] Add src project for CodeGen\r\n- [x] Add test project for CodeGen\r\n- [x] Add packaging for CodeGen\r\n\r\ncc: @eerhardt @LittleLittleCloud ","Url":"https://github.com/dotnet/machinelearning/pull/4365","RelatedDescription":"Open PR \"Adds CodeGen to master (from features/automl)\" (#4365)"},{"Id":"510796392","IsPullRequest":false,"CreatedAt":"2019-10-22T17:20:33","Actor":"Nightrain","Number":"4364","RawContent":null,"Title":"Unable to find input colum on tensor flow model using C#","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10\r\n- **.NET Version (eg., dotnet --info)**: \r\n.NET Core 3.0\r\n### Issue\r\n\r\n- **What did you do?**\r\nI created my own TensorFlow object detection model and tried to load it in a C# console application.\r\n- **What happened?**\r\nWhen I tried to create a model by using pipeline.fit I get this error System.ArgumentOutOfRangeException: ”Could not find input column ‘image_tensor’ (Parameter ‘inputSchema’)\r\n- **What did you expect?**\r\nI would have been able to create the model and continue to create the prediction engine and test my TensorFlow.\r\n### Source code / logs\r\n\r\nI posted the question on the blog that showed how to load a pretrained TensorFlow model to \"Call out @yaeldekel in the issue. She might be able to help here.\"  \r\n\r\n\r\nHere is what I see in Netron\r\n![image](https://user-images.githubusercontent.com/11445010/67310423-55651a00-f4c3-11e9-9fc6-53707cd1227c.png)\r\n\r\n\r\nHere is how I am loading the pipeline\r\n```C#\r\nvar pipeline = context.Transforms\r\n                .LoadImages(\"input\", @\"D:\\tensorflow1\\images\",nameof(ImageNetData.ImagePath))              \r\n                .Append(context.Transforms.ExtractPixels(outputColumnName: \"input\", interleavePixelColors: true))\r\n                .Append(context.Model.LoadTensorFlowModel(@\"D:\\tensorflow1\\models\\research\\object_detection\\inference_graph\\PotatoDetector.pb\")\r\n              .ScoreTensorFlowModel(outputColumnNames: new[] { \"detection_boxes\",\"detection_classes\",\"detection_scores\", \"num_detections\" } },inputColumnNames: new[] { \"image_tensor\" }, addBatchDimensionInput: true));\r\n```\r\nWhen I try to load the model inPython like so it works just fine.\r\n```python\r\nimage_tensor = detection_graph.get_tensor_by_name('image_tensor:0')\r\ndetection_boxes = detection_graph.get_tensor_by_name('detection_boxes:0')\r\ndetection_scores = detection_graph.get_tensor_by_name('detection_scores:0')\r\ndetection_classes = detection_graph.get_tensor_by_name('detection_classes:0')\r\nnum_detections = detection_graph.get_tensor_by_name('num_detections:0')\r\n\r\n\r\nimage = cv2.imread(PATH_TO_IMAGE)\r\nimage_expanded = np.expand_dims(image, axis=0)\r\n\r\nprint(\"going to run the model now\")\r\n\r\n(boxes, scores, classes, num) = sess.run(\r\n    [detection_boxes, detection_scores, detection_classes, num_detections],\r\n    feed_dict={image_tensor: image_expanded})\r\n```\r\nAny ideas on how to find the input column that ML.NET wants?  \r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4364","RelatedDescription":"Open issue \"Unable to find input colum on tensor flow model using C#\" (#4364)"},{"Id":"510123128","IsPullRequest":true,"CreatedAt":"2019-10-22T17:02:01","Actor":"eerhardt","Number":"4356","RawContent":null,"Title":"Mark Microsoft.Extensions.ML as a stable package.","State":"closed","Body":"Fix #4352","Url":"https://github.com/dotnet/machinelearning/pull/4356","RelatedDescription":"Closed or merged PR \"Mark Microsoft.Extensions.ML as a stable package.\" (#4356)"},{"Id":"509336351","IsPullRequest":false,"CreatedAt":"2019-10-22T17:02:00","Actor":"CESARDELATORRE","Number":"4352","RawContent":null,"Title":"[Microsoft.Extensions.ML] Update Microsoft.Extensions.ML from 0.16.0-preview2 to 1.4","State":"closed","Body":"@eerhardt \r\n\r\nWe need to update Microsoft.Extensions.ML from 0.16.0-preview2 to 1.4 so it'll be ready for 1.4 GA.\r\n\r\nThis is mostly related to the .NET Integration package implementing the PredictionEnginePool for multi-threaded apps such as ASP.NET Core apps/services.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4352","RelatedDescription":"Closed issue \"[Microsoft.Extensions.ML] Update Microsoft.Extensions.ML from 0.16.0-preview2 to 1.4\" (#4352)"},{"Id":"510419323","IsPullRequest":false,"CreatedAt":"2019-10-22T04:16:40","Actor":"daholste","Number":"4363","RawContent":null,"Title":"OnlineGradientDescent crash","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 2.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI ran the script:\r\n```C#\r\nvar mlContext = new MLContext();\r\nvar textLoader = mlContext.Data.CreateTextLoader(new TextLoader.Options()\r\n{\r\n\tColumns = new TextLoader.Column[]\r\n\t{\r\n\t\tnew TextLoader.Column(\"Label\", DataKind.Single, 0),\r\n\t\tnew TextLoader.Column(\"0\", DataKind.String, 1),\r\n\t\tnew TextLoader.Column(\"1\", DataKind.String, 2),\r\n\t\tnew TextLoader.Column(\"2\", DataKind.Single, 3),\r\n\t\tnew TextLoader.Column(\"3\", DataKind.Single, 4),\r\n\t\tnew TextLoader.Column(\"4\", DataKind.Single, 5),\r\n\t\tnew TextLoader.Column(\"5\", DataKind.Single, 5),\r\n\t},\r\n\tHasHeader = true,\r\n\tSeparators = new char[] {','}\r\n});\r\nvar dataView = textLoader.Load(@\"dataset.csv\");\r\nvar pipeline = mlContext.Transforms.Categorical.OneHotHashEncoding(\"0\")\r\n\t.Append(mlContext.Transforms.Categorical.OneHotEncoding(\"1\", \"3\"))\r\n\t.Append(mlContext.Transforms.Concatenate(\"Features\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\"))\r\n\t.Append(mlContext.Transforms.NormalizeMinMax(\"Features\"))\r\n\t.Append(mlContext.Regression.Trainers.OnlineGradientDescent(new OnlineGradientDescentTrainer.Options()\r\n\t{\r\n\t\tLearningRate = 1.0f,\r\n\t\tDecreaseLearningRate = false,\r\n\t}));\r\npipeline.Fit(dataView);\r\n```\r\n(I can provide the data as requested)\r\n\r\n- **What happened?**\r\nI get the exception\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=The weights/bias contain invalid values (NaN or Infinite). Potential causes: high learning rates, no normalization, high initial weights, etc.\r\n  Source=Microsoft.ML.StandardTrainers\r\n  StackTrace:\r\n   at Microsoft.ML.Trainers.OnlineLinearTrainer`2.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at OnlineGradientDescentCrash.Program.Main(String[] args) in C:\\Users\\daholste\\source\\repos\\OnlineGradientDescentCrash\\OnlineGradientDescentCrash\\Program.cs:line 38\r\n```\r\n\r\n- **What did you expect?**\r\nSuccessful training","Url":"https://github.com/dotnet/machinelearning/issues/4363","RelatedDescription":"Open issue \"OnlineGradientDescent crash\" (#4363)"},{"Id":"510303993","IsPullRequest":true,"CreatedAt":"2019-10-21T22:59:50","Actor":"maryamariyan","Number":"4360","RawContent":null,"Title":"Add Code Gen piece for Recommendation task","State":"closed","Body":"- [x] Adds CodeGen piece for recommendation task\r\n- [x] Cherry-picks changes in https://github.com/dotnet/machinelearning/pull/4246 into features/automl branch\r\n- [x] Cross check mlnet tests build and run fine\r\n- [ ] confirm AutoML project tests build and run fine\r\n\r\ncc: @LittleLittleCloud @eerhardt ","Url":"https://github.com/dotnet/machinelearning/pull/4360","RelatedDescription":"Closed or merged PR \"Add Code Gen piece for Recommendation task\" (#4360)"},{"Id":"510340157","IsPullRequest":false,"CreatedAt":"2019-10-21T22:54:29","Actor":"kik3r","Number":"4361","RawContent":null,"Title":"Data file locked even after TextLoader goes out of context","State":"open","Body":"### System information\r\nMicrosoft Windows [Version 10.0.18363.418]\r\n.NET framework 4.8\r\nMicrosoft.ML- 1.4.0-preview2\r\nMicrosoft.ML.AutoML - 0.16.0-preview2\r\n\r\n### Issue\r\n\r\nIn the code attached, Trainset.csv is locked even after the MLTrain() method completes execution.\r\nsurprisingly, Testset.csv is not locked.\r\n\r\n[Program.txt](https://github.com/dotnet/machinelearning/files/3753250/Program.txt)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4361","RelatedDescription":"Open issue \"Data file locked even after TextLoader goes out of context\" (#4361)"},{"Id":"509319807","IsPullRequest":true,"CreatedAt":"2019-10-21T21:20:18","Actor":"ashbhandare","Number":"4351","RawContent":null,"Title":"Add support for Mobilenet v2 in Image Classification transfer learning","State":"closed","Body":"The base MobileNetV2 model is from https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet . Checkpoint file used: https://storage.googleapis.com/mobilenet_v2/checkpoints/mobilenet_v2_1.4_224.tgz\r\n\r\nBenchmarked transfer learning on the Cats V/s Dogs dataset at:\r\nhttps://www.microsoft.com/en-us/download/details.aspx?id=54765\r\n\r\nTrained last layer for 10 epochs with 0.0001f learning rate with batch size 32.\r\nFinal accuracy on eval set:\r\n Micro-accuracy: 0.980959936533122,macro-accuracy = 0.980874311779911\r\nComparable Tensorflow acuracy for same task: \r\nhttps://www.tensorflow.org/tutorials/images/transfer_learning#train_the_model","Url":"https://github.com/dotnet/machinelearning/pull/4351","RelatedDescription":"Closed or merged PR \"Add support for Mobilenet v2 in Image Classification transfer learning\" (#4351)"},{"Id":"510273354","IsPullRequest":false,"CreatedAt":"2019-10-21T20:32:46","Actor":"eerhardt","Number":"4359","RawContent":null,"Title":"Remove dependency on Newtonsoft.Json","State":"open","Body":"Now that we have https://www.nuget.org/packages/System.Text.Json/, we should remove our dependency on Newtonsoft.Json, at a minimum in our core Microsoft.ML nuget package.\r\n\r\nThis has the following advantages:\r\n\r\n1. Less assemblies to carry around/deploy on .NET Core, since `System.Text.Json` is part of the shared framework.\r\n2. It frees up the calling program to pick which version of Newtonsoft.Json it can use, instead of Microsoft.ML saying that it must use one `10.0.3` or higher.\r\n3. `System.Text.Json` is faster (although we don't really use JSON code on any critical path).\r\n4. In the core Microsoft.ML nuget package, this is the only 3rd party dependency. So removing it means ML.NET only depends on `System` packages.","Url":"https://github.com/dotnet/machinelearning/issues/4359","RelatedDescription":"Open issue \"Remove dependency on Newtonsoft.Json\" (#4359)"},{"Id":"508752289","IsPullRequest":true,"CreatedAt":"2019-10-21T16:38:56","Actor":"harishsk","Number":"4347","RawContent":null,"Title":"Devproperties","State":"closed","Body":"@eerhardt I am creating this draft pull request to initiate a discussion about this. \r\n\r\nMichael and I are running into similar issues where we would like to do our daily development against unstable and unreleased nugets from other sources and then merge our daily working branches into master when our dependent nugets are stable. \r\n\r\nThe current approach is to modify Directory.Build.Props and Dependencies.props appropriately and keep those files checked out. \r\n\r\nWhat do you think of optionally importing DevProperties.props from Directory.Build.props which would override those variables? (The DevProperties.props file would never be checked in and would be added to the .gitignore file if you are okay with this approach).\r\n\r\n@michaelgsharp I have verified that this approach works. Let me know if this works for you as well.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4347","RelatedDescription":"Closed or merged PR \"Devproperties\" (#4347)"},{"Id":"510096835","IsPullRequest":true,"CreatedAt":"2019-10-21T16:25:07","Actor":"harishsk","Number":"4355","RawContent":null,"Title":"Added onnx export support for OptionalColumnTransform","State":"open","Body":"This is a draft PR. This PR depends on [an earlier draft PR ](https://github.com/dotnet/machinelearning/pull/4312 )(from harishsk:ngramonnx branch) and cannot be merged until that draft PR is merged. \r\n\r\nOnce again, I publishing this PR as a draft PR early to get some review eyes on it so that both the PRs can be merged when the new version of ORT is released.  \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4355","RelatedDescription":"Open PR \"Added onnx export support for OptionalColumnTransform\" (#4355)"},{"Id":"509603271","IsPullRequest":false,"CreatedAt":"2019-10-20T14:35:48","Actor":"rossbuggins","Number":"4353","RawContent":null,"Title":"Recognise specific noise through Spectrogram images","State":"open","Body":"Hi,\r\n\r\nSorry if not best place to ask for a general pointer, but I recon someone could be able to quickly point me in the right direction re models/training etc.\r\n\r\nI've got a audio files in the format of spectrograms (png files), each about 2 seconds long (overlapping windows about .5 second) for a 10 minute audio file.\r\n\r\nThere is one specific noise that I want to identify in audio files, and treat all other noises as \"background\" or not interested in.\r\n\r\nI've looked at using TensorFlow and the sample Image Classification (https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification) and taking a few dozen spectrograms of what I want and classified as \"true\" and then a randoms selection of spectrogram images of \"background\" noise (i.e. anything i don't care about) and classified as \"false\".\r\n\r\nIs this the best way to approach this with the .net ML libraries, or is there a better way to say, \"this is all I want and I don't care about anything else\", and not give it any samples of background noise images at all?\r\n\r\nThanks,\r\n\r\nRoss\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4353","RelatedDescription":"Open issue \"Recognise specific noise through Spectrogram images\" (#4353)"},{"Id":"509277396","IsPullRequest":true,"CreatedAt":"2019-10-18T19:46:25","Actor":"ashbhandare","Number":"4350","RawContent":null,"Title":"Add try catch block to skip bad(failing to read) images","State":"open","Body":"Fixes #4348\r\nWhile computing the bottleneck values, if an image errors out and throws TensorflowException, this change skips the particular image and continues training.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4350","RelatedDescription":"Open PR \"Add try catch block to skip bad(failing to read) images\" (#4350)"},{"Id":"508685625","IsPullRequest":true,"CreatedAt":"2019-10-18T19:31:37","Actor":"CESARDELATORRE","Number":"4345","RawContent":null,"Title":"Minor updates of the GPU installation guide so it is clearer for users","State":"closed","Body":"Minor updates of the GPU installation so it is clearer\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4345","RelatedDescription":"Closed or merged PR \"Minor updates of the GPU installation guide so it is clearer for users\" (#4345)"},{"Id":"509242925","IsPullRequest":false,"CreatedAt":"2019-10-18T18:25:31","Actor":"ashbhandare","Number":"4348","RawContent":null,"Title":"[Image Classification API] Error when running ResnetV2101 transfer learning sample with Cats Vs Dogs dataset.","State":"open","Body":"### Issue\r\n\r\n- **What did you do?**\r\nRan the ResnetV2101TransferLearningTrainTestSplit sample with the Cats Vs Dogs dataset at https://www.microsoft.com/en-us/download/details.aspx?id=54765.\r\n\r\n- **What happened?**\r\nWhen computing bottleneck values, run aborted with the error message:\r\n2 root error(s) found.\r\n  (0) Invalid argument: Expected image (JPEG, PNG, or GIF), got unknown format starting with 'BM^\\357\\n\\000\\000\\000\\000\\0006\\000\\000\\000(\\000'\r\n         [[{{node DecodeJpeg}}]]\r\n         [[DecodeJpeg/_1]]\r\n  (1) Invalid argument: Expected image (JPEG, PNG, or GIF), got unknown format starting with 'BM^\\357\\n\\000\\000\\000\\000\\0006\\000\\000\\000(\\000'\r\n         [[{{node DecodeJpeg}}]]\r\n0 successful operations.\r\n0 derived errors ignored.\r\nTensorflow.TensorflowException: 2 root error(s) found.\r\n  (0) Invalid argument: Expected image (JPEG, PNG, or GIF), got unknown format starting with 'BM^\\357\\n\\000\\000\\000\\000\\0006\\000\\000\\000(\\000'\r\n         [[{{node DecodeJpeg}}]]\r\n         [[DecodeJpeg/_1]]\r\n  (1) Invalid argument: Expected image (JPEG, PNG, or GIF), got unknown format starting with 'BM^\\357\\n\\000\\000\\000\\000\\0006\\000\\000\\000(\\000'\r\n         [[{{node DecodeJpeg}}]]\r\n0 successful operations.\r\n0 derived errors ignored.\r\n   at Tensorflow.Status.Check(Boolean throwException)\r\n   at Microsoft.ML.Transforms.Dnn.DnnUtils.Runner.Run() in C:\\Users\\aibhanda\\source\\repos\\ashbhandare-machinelearning\\src\\Microsoft.ML.Dnn\\DnnUtils.cs:line 453\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer.ImageProcessor.ProcessImage(VBuffer`1& imageBuffer) in C:\\Users\\aibhanda\\source\\repos\\ashbhandare-machinelearning\\src\\Microsoft.ML.Dnn\\ImageClassificationTransform.cs:line 244\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer.CacheFeaturizedImagesToDisk(IDataView input, String labelColumnName, String imageColumnName, ImageProcessor imageProcessor, String inputTensorName, String outputTensorName, String cacheFilePath, Dataset dataset, ImageClassificationMetricsCallback metricsCallback) in C:\\Users\\aibhanda\\source\\repos\\ashbhandare-machinelearning\\src\\Microsoft.ML.Dnn\\ImageClassificationTransform.cs:line 284\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer..ctor(IHostEnvironment env, Options options, DnnModel tensorFlowModel, IDataView input) in C:\\Users\\aibhanda\\source\\repos\\ashbhandare-machinelearning\\src\\Microsoft.ML.Dnn\\ImageClassificationTransform.cs:line 169\r\n   at Microsoft.ML.Transforms.ImageClassificationEstimator.Fit(IDataView input) in C:\\Users\\aibhanda\\source\\repos\\ashbhandare-machinelearning\\src\\Microsoft.ML.Dnn\\ImageClassificationTransform.cs:line 1517\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input) in C:\\Users\\aibhanda\\source\\repos\\ashbhandare-machinelearning\\src\\Microsoft.ML.Data\\DataLoadSave\\EstimatorChain.cs:line 67\r\n   at Samples.Dynamic.ResnetV2101TransferLearningTrainTestSplit.Example() in C:\\Users\\aibhanda\\source\\repos\\ashbhandare-machinelearning\\docs\\samples\\Microsoft.ML.Samples\\Dynamic\\ImageClassification\\ResnetV2101TransferLearningTrainTestSplit.cs:line 87\r\n\r\n- **What did you expect?**\r\nThere should be a way to either identify the bad images so that they can be removed, or the run should continue by skipping these images or both.\r\n\r\n### Source code / logs\r\n[ResnetV2101_CatsVDogs.txt.txt](https://github.com/dotnet/machinelearning/files/3745204/ResnetV2101_CatsVDogs.txt.txt)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4348","RelatedDescription":"Open issue \"[Image Classification API] Error when running ResnetV2101 transfer learning sample with Cats Vs Dogs dataset.\" (#4348)"},{"Id":"508707259","IsPullRequest":true,"CreatedAt":"2019-10-17T20:35:48","Actor":"frank-dong-ms","Number":"4346","RawContent":null,"Title":"Extract TestFrameworkCommon Project, remove dependency of TestFramework from FT","State":"open","Body":"1. Extract TestFrameworkCommon from TestFramework\r\n   a. Extract CommonUtilities method, move some utilities from BaseTestClass to CommonUtilities\r\n   b. Move some test attributes from TestFramework to TestFrameworkCommon\r\n   c. Move TestDataset from TestFramework to TestFrameworkCommon and fix corresponding \r\nreference\r\n   d. Move some schema compare method from TestDataPipeBase to CommonUtilities\r\n   e. TestFrameworkCommon only have public dependency, no internal class dependency\r\n2. Remove dependency of TestFramework from FT\r\n   a. Remove dependency of TestFramework from FT, now FT dependent on TestFrameworkCommon\r\n   b. Remove unnecessary dependency of Maml from FT\r\n3. Remove duplicate CompareVec method, also fix bug in CompareVec method\r\n   a. Remove duplicate CompareVec method from CoreBaseTestClass, TestDataPipeBase and \r\nCopyColumnEstimatorTests, move CompareVec method to CommonUtilities and fix reference\r\n   b. Fix bug in CompareVec method from CoreBaseTestClass class, original line 125 seems problematic. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4346","RelatedDescription":"Open PR \"Extract TestFrameworkCommon Project, remove dependency of TestFramework from FT\" (#4346)"},{"Id":"508585522","IsPullRequest":true,"CreatedAt":"2019-10-17T18:57:48","Actor":"eerhardt","Number":"4344","RawContent":null,"Title":"Update .NET Core SDK to 3.0 GA","State":"closed","Body":"Updating the SDK to the officially released version.\r\n\r\nI also took this opportunity to update the building docs to be up-to-date.","Url":"https://github.com/dotnet/machinelearning/pull/4344","RelatedDescription":"Closed or merged PR \"Update .NET Core SDK to 3.0 GA\" (#4344)"},{"Id":"508150229","IsPullRequest":false,"CreatedAt":"2019-10-16T23:25:06","Actor":"CESARDELATORRE","Number":"4343","RawContent":null,"Title":"[Planning] Explore GAN (Generative Adversarial Networks) implementation in ML.NET + TensorFlow","State":"open","Body":"For future features planning it'd be worth to explore possibilities in ML.NET enabling GAN (Generative Adversarial Networks) implementation in ML.NET + TensorFlow.\r\n\r\nMost popular use cases are related to images generation, such as this cool prototype app:\r\n\r\nhttps://github.com/microsoft/GenStudio \r\nhttps://gen.studio/\r\n\r\nHowever, GAN can also be applied to data and very interesting cases are related to **synthetic data generation** from a generative adversarial network (GAN) designed to approximate any original training data distribution. For instance, you have a Time Series dataset of just a couple of years and want to generate a larger synthetic dataset, or any other synthetic data generation.\r\n\r\nMany more use cases:\r\nhttps://github.com/nashory/gans-awesome-applications \r\n \r\nQuestion for anyone in the community reading this issue, can you answer this issue with your thoughts about GAN (Generative Adversarial Networks), your own business scenarios and possibilities you might see in ML.NET?","Url":"https://github.com/dotnet/machinelearning/issues/4343","RelatedDescription":"Open issue \"[Planning] Explore GAN (Generative Adversarial Networks) implementation in ML.NET + TensorFlow\" (#4343)"},{"Id":"508001220","IsPullRequest":true,"CreatedAt":"2019-10-16T22:28:23","Actor":"tannergooding","Number":"4342","RawContent":null,"Title":"Moving the DatabaseLoader support into Microsoft.ML.Data","State":"closed","Body":"This resolves https://github.com/dotnet/machinelearning/issues/4323","Url":"https://github.com/dotnet/machinelearning/pull/4342","RelatedDescription":"Closed or merged PR \"Moving the DatabaseLoader support into Microsoft.ML.Data\" (#4342)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-24T05:30:44.0585417Z","RunDurationInMilliseconds":651}