{"Data":{"Blog":{"FeedItems":[{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. Security This release contains the following security changes. CVE-2017-8759 &#124; .NET Framework Remote Code Execution Vulnerability A remote code execution vulnerability exists... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":45,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null},{"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","PublishedOn":"2017-08-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current blog post focuses on &#8220;Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance&#8220;. Just as a reminder, the four introductory blog posts of this series are (or... <a aria-label=\"read more about Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","RawContent":null},{"Title":"The week in .NET – Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!","PublishedOn":"2017-08-23T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previous posts: .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore Visual Studio extension of the week: Project File Tools The Project File Tools Visual Studio extension provides package name and version IntelliSense, tooltips for... <a aria-label=\"read more about The week in .NET &#8211; Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/","RawContent":null},{"Title":".NET Framework Update for AppContext","PublishedOn":"2017-08-18T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"A new update for .NET Framework is now available for the AppContext class. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10. The AppContext class was introduced in the... <a aria-label=\"read more about .NET Framework Update for AppContext\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","RawContent":null},{"Title":".NET Framework August 2017 Preview of Quality Rollup","PublishedOn":"2017-08-16T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The August 2017 Preview of Quality Rollup is now available. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Values added to System.Web.Cache expire immediately, with .NET Framework 4.7. [452228] Also reported at ASP.NET Forums #2123507 ASP.NET site running on Sitefinity broken, with .NET Framework 4.7. [457739] CLR CRWLock::StaticAcquireWriterLock() never returns if... <a aria-label=\"read more about .NET Framework August 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/","RawContent":null},{"Title":"The week in .NET – .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston, and links!","PublishedOn":"2017-08-15T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Previous posts: Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore MIST, F# in NYC .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, and Visual Studio 2017 Update 3 launched! This is a week to celebrate for the .NET community, as .NET Core 2.0, ASP.NET Core 2.0, and Entity Framework 2.0 shipped! We&#8217;re also... <a aria-label=\"read more about The week in .NET &#8211; .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/15/the-week-in-net-net-core-2-0-asp-net-core-2-0-entity-framework-2-0-visual-studio-2017-update-3-enterprise-entity-framework-core-in-boston-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/15/the-week-in-net-net-core-2-0-asp-net-core-2-0-entity-framework-2-0-visual-studio-2017-update-3-enterprise-entity-framework-core-in-boston-and-links/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6470589367","Type":"PullRequestEvent","CreatedAt":"2017-08-17T09:24:13","Actor":"stefanov-stefan","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Opened pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6404144202","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:09:52","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/84","RelatedDescription":"Opened issue \"How can we embed images into the .NET foundation website?\" (#84) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding images. I'd prefer to _not to adjust CSP_ policy to add the reactiveui.net and instead have some way to pull-request images into this repository.\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6541935607","Type":"IssuesEvent","CreatedAt":"2017-09-01T22:57:04","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/31","RelatedDescription":"Opened issue \"Issues with .NET Standard 2.0 with .NET Framework & NuGet\" (#31) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\nWe've designed .NET Standard & our tooling so that projects targeting .NET Framework 4.6.1 can consume NuGet packages & projects targeting .NET Standard 2.0 or earlier. Unfortunately, we've seen a few issues around that scenario. The purpose of this document is to summarize the issues, outline our plan on addressing them, and providing workarounds you can deploy with today's state of our tooling.\r\n\r\n## Symptoms and root cause\r\n\r\nThe [primary symptom](https:/github.com/dotnet/standard/issues/410) is that applications crash with a `FileLoadException` or a `FileNotFoundException`. Another symptom is warnings at build time regarding assembly versions. This is due to one or both of the following issues:\r\n\r\n1. Missing binding redirects\r\n2. Missing binaries that come from indirect NuGet packages\r\n\r\n### Missing binding redirects\r\n\r\n.NET Standard 1.x was based around contracts. Many of these contracts shipped with .NET Framework 4.5 and later. However, different versions of .NET Framework picked up different versions of these contracts, as by-design of contract versioning. As a side effect of marking .NET Framework 4.6.1 as implementing .NET Standard 2.0, some projects will now start picking up binaries built for .NET Standard 1.5 and 1.6 (as opposed to previously where .NET Framework 4.6.1 was considered as implementing .NET Standard 1.4). This results in mismatches of the assembly versions between what was shipped in .NET Framework and what was part of .NET Standard 1.5/1.6.\r\n\r\nThis can be addressed by binding redirects. As writing them by hand sucks, we added an [Automatic Binding Redirect Generation][abrg] feature in .NET Framework 4.5.1. This feature is opt-in. Unfortunately, it's not enabled based on target framework, but by which target framework was selected when the project was created (as the feature is turned on via an MSBuild property that is conditionally emitted by the template). In practice, this means it's mostly off you often upgrade existing projects, rather than creating new ones.\r\n\r\n[abrg]: https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection\r\n\r\n### Missing binaries\r\n\r\nThere are two primary flavors of NuGet: `packages.config` and `PackageReference`.\r\n\r\n* With `packages.config`, each project has a config file with a flattened graph of all the NuGet dependencies. The project file in turn has direct links to all the assets. The assets are selected at install time. None of this includes indirect NuGet references coming from referenced projects.\r\n\r\n* With `PackageReference` each project contains MSBuild `PackageReference` items. The project file contains no references to any assets as the assets are selected at build time. Package restore will compute the graph of all packages, including indirect NuGet references coming from referenced projects.\r\n\r\nThe default for .NET Framework projects is `packages.config`. This ensures more compatibility because `PackageReference` doesn't support all the features that `packages.config` did, for example, PowerShell install scripts and content.\r\n\r\nThe only supported mode for SDK-style projects (.NET Core/.NET Standard) is `PackageReference`. This means that a .NET Framework project referencing a .NET Standard project ends up crossing the streams between two different NuGet models. When the .NET Standard project references NuGet packages that the .NET Framework project doesn't reference, the application ends up missing all binaries coming from those packages.\r\n\r\nWhy has this worked before? Because with` packages.config`, all dependencies are copied to each project's output folder. MSBuild copies them up from there. With `PackageReference`, we don't copy the binaries because it relies on the consuming project to see its dependencies and extract the proper asset itself. This allows the consuming project to pick up the right assets for packages that use bait & switch (which many of the .NET packages must do).\r\n\r\n### Plan\r\n\r\nThe plan is to address these issues moving forward as follows:\r\n\r\n1. **Converge on `PackageReference` for all project types**, including .NET Framework. The short-term plan for (1) is to start blocking project-to-project references in Visual Studio 15.4 that will end up crossing the streams between `packages.config` and `PackageReference`. This block is UI only; you can still edit the reference by editing the project by hand. The error message will instruct you to switch the .NET Framework project to `PackageReference` if you want to reference a .NET Standard project. Referencing .NET Standard binaries or NuGet packages will not require this, it's only about project-to-project references. In later releases, we plan on providing a converter. The challenge is that `packages.config` has features we can't offer for `PackagReference` across the board, in particular PowerShell install scripts and content. We'll need good guidance and mitigations, if applicable.\r\n\r\n2. **Ensure binding redirects are on by default**. Short term, this means we need to fix our target files to make sure we turn on automatic binding redirect generation. However, binding redirects don't work well in all scenarios, when there is no application project (like unit tests or add-ins). We need to work on a plan to bring the regular “higher wins” binding policy without binding redirects. This needs a proposal and proper vetting, but it seems we've reached the point where this is necessary.\r\n\r\n## Workarounds\r\n\r\n### Regular .NET Framework projects\r\n\r\n1. Enable [automatic binding redirects][abrg] in the root .NET Framework application.\r\n2. Make sure your root application project doesn't use `packages.config` but uses `PackageReference` for NuGet packages\r\n    * If you currently don't have `packages.config`, simply add `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` to your project file\r\n    * If you currently do have a `packages.config`, convert the contents to packages references in the project file. The syntax is like this:\r\n        - `<PackageReference Include=\"package-id\" Version=\"package-version\" />`\r\n\r\n### ASP.NET web applications and web sites\r\n\r\n1. Web applications and web sites don't support automatic binding redirect generation. In order to resolve binding conflicts, you need to double click the warning in the error list and Visual Studio will add them to your `web.config` file.\r\n2. In web application projects, you should enable `PackageReference` like mentioned above. In web sites, you cannot use `PackageReference` as there is no project file. In that case, you need to install all NuGet packages into your web site that any of the direct or indirect project references depend on.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to [https://github.com/dotnet/standard/issues/481]"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6617510481","Type":"PullRequestEvent","CreatedAt":"2017-09-21T02:09:03","Actor":"JosephTremoulet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14099","RelatedDescription":"Merged pull request \"Change base of literals in k-nucleotide-9\" (#14099) at dotnet/coreclr","RelatedBody":"This keeps it in sync with the copies in the release branches (the\r\nrelease/1.1.0 branch required this since older C# compilers don't accept\r\nthe binary literals), and improves readability."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6616819658","Type":"IssuesEvent","CreatedAt":"2017-09-20T21:45:34","Actor":"sstevenkang","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7686","RelatedDescription":"Opened issue \"dotnet-clean and project.assets.json in 2.0\" (#7686) at dotnet/cli","RelatedBody":"I would like to know why \"dotnet clean\" depends on project.assets.json file.  This new behavior in 2.0 is something we can work around, but I would like to understand why this change in behavior was introduced and what is the project structure expectation of dotnet cli.\r\n\r\nIs multiple .csproj files in a single directory not supported/encouraged? \r\n\r\n## Steps to reproduce\r\nIn our project, we have this folder structure for historical reasons:\r\n```\r\n/obj\r\n/bin\r\n/src\r\nProject.Net35.csproj\r\nProject.Net45.csproj\r\n```\r\nPre 2.0, we used to do following commands in sequence:\r\n\r\n```\r\n# build net35\r\ndotnet clean Project.Net35.csproj\r\ndotnet restore Project.Net35.csproj\r\ndotnet build Project.Net35.csproj\r\n\r\n# build net45\r\ndotnet clean Project.Net45.csproj\r\ndotnet restore Project.Net45.csproj\r\ndotnet build Project.Net45.csproj\r\n```\r\n\r\n## Expected  behavior\r\nThe above folder structure worked pre-2.0 because \"dotnet clean\" command did not take a dependency/make a reference to project.assets.json file and succeeded.\r\n\r\n## Actual behavior\r\nWith 2.0, we see the following error message:\r\n ```\r\n C:\\Program Files\\dotnet\\sdk\\2.0.0\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(165,5): error : Assets file 'd:\\workspace\\Project\\obj\\project.assets.json' doesn't have a target for '.NETFramework,Version=v4.5'. Ensure that restore has run and that\r\n you have included 'net45' in the TargetFrameworks for your project. [d:\\workspace\\Project\\Project.Net45.csproj] [\r\nd:\\workspace\\build.proj]\r\n```\r\n\r\nI think we can workaround this by specifying different `obj` directory per project or doing `dotnet restore` before `dotnet clean`.  Ideally, we would build for both frameworks in a single .csproj, but it's not something we can invest time in currently.\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"6616767948","Type":"PullRequestEvent","CreatedAt":"2017-09-20T21:31:49","Actor":"eerhardt","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/7685","RelatedDescription":"Closed pull request \"Update CoreSetup to preview1-25719-04 (master)\" (#7685) at dotnet/cli","RelatedBody":""},{"Id":"6616765359","Type":"PullRequestEvent","CreatedAt":"2017-09-20T21:31:08","Actor":"eerhardt","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7685","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-25719-04 (master)\" (#7685) at dotnet/cli","RelatedBody":""},{"Id":"6616419781","Type":"PullRequestEvent","CreatedAt":"2017-09-20T20:08:59","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/7655","RelatedDescription":"Closed pull request \"Updating the version of the runtime.\" (#7655) at dotnet/cli","RelatedBody":"@dotnet/dotnet-cli "},{"Id":"6616419122","Type":"PullRequestEvent","CreatedAt":"2017-09-20T20:08:50","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7684","RelatedDescription":"Opened pull request \"Moving the pre-release runtime hack to the test targets\" (#7684) at dotnet/cli","RelatedBody":"Moving the pre-release runtime hack to the test targets, where it is needed.\r\n\r\n@dotnet/dotnet-cli \r\n"},{"Id":"6616073566","Type":"IssuesEvent","CreatedAt":"2017-09-20T18:47:12","Actor":"danpere","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7683","RelatedDescription":"Opened issue \"ctrl-c on `dotnet build` doesn't always stop build\" (#7683) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Run `dotnet build`.\r\n2. Wait for version information notice to appear:\r\n```\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n```\r\n3. Hit `ctrl`+`c`.\r\n\r\n## Expected  behavior\r\nNo further output.\r\n\r\n## Actual behavior\r\nThe entire build runs displaying the normal output for the build.\r\n\r\nThis sounds similar to issues #4856 and #7426. I'm creating a separate issue because those are about `dotnet run`, not `dotnet build`.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```"},{"Id":"6615965744","Type":"IssuesEvent","CreatedAt":"2017-09-20T18:23:18","Actor":"guardrex","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7682","RelatedDescription":"Closed issue \"dotnet store command failure\" (#7682) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nFollow our topic sample for `dotnet store` at:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/core/deploying/runtime-store:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n    <PackageReference Include=\"Moq\" Version=\"4.7.63\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n```console\r\ndotnet store --manifest packages.csproj --runtime win10-x64 --framework netstandard2.0 --framework-version 2.0.0\r\n```\r\n## Expected  behavior\r\n\r\nWorks ... it was working at the time I wrote the topic, but that may have been during pre-release. The cheese has apparently moved since then.\r\n\r\n## Actual behavior\r\n\r\nBreaks ...\r\n\r\n![capture10](https://user-images.githubusercontent.com/1622880/30660442-6a36d632-9e06-11e7-8593-d910fd536206.PNG)\r\n\r\n## Environment data\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-25615-02\r\n  Build    : 2d818e87081bfe71f9a3f2cbba43cb279e79b265\r\n```\r\n\r\nThanks to @PauliusNorkus for reporting this to us.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6615915570","Type":"IssuesEvent","CreatedAt":"2017-09-20T18:12:06","Actor":"guardrex","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7682","RelatedDescription":"Opened issue \"dotnet store command failure\" (#7682) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nFollow our topic sample for `dotnet store` at:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/core/deploying/runtime-store:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n    <PackageReference Include=\"Moq\" Version=\"4.7.63\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n```console\r\ndotnet store --manifest packages.csproj --runtime win10-x64 --framework netstandard2.0 --framework-version 2.0.0\r\n```\r\n## Expected  behavior\r\n\r\nWorks ... it was working at the time I wrote the topic, but that may have been during pre-release. The cheese has apparently moved since then.\r\n\r\n## Actual behavior\r\n\r\nBreaks ...\r\n\r\n![capture10](https://user-images.githubusercontent.com/1622880/30659883-ccd69b8a-9e04-11e7-94dc-17dfc17f7075.PNG)\r\n\r\n## Environment data\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-25615-02\r\n  Build    : 2d818e87081bfe71f9a3f2cbba43cb279e79b265\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6616962154","Type":"IssuesEvent","CreatedAt":"2017-09-20T22:27:32","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/500","RelatedDescription":"Closed issue \"When to start Standard 3.0?\" (#500) at dotnet/standard","RelatedBody":"(asked above)"},{"Id":"6614205435","Type":"IssuesEvent","CreatedAt":"2017-09-20T12:24:17","Actor":"Priya-John","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/501","RelatedDescription":"Opened issue \"Will memory and performance effect with and without .netstandard.dll in VS2015 Update 3?\" (#501) at dotnet/standard","RelatedBody":""},{"Id":"6613588650","Type":"IssuesEvent","CreatedAt":"2017-09-20T09:48:33","Actor":"juepiezhongren","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/500","RelatedDescription":"Opened issue \"When to start Standard 3.0?\" (#500) at dotnet/standard","RelatedBody":"(asked above)"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6617712498","Type":"PullRequestEvent","CreatedAt":"2017-09-21T03:37:19","Actor":"maryamariyan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24183","RelatedDescription":"Opened pull request \"Adding System.Data.Odbc package and including in metapackage\" (#24183) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6617858986","Type":"IssuesEvent","CreatedAt":"2017-09-21T04:49:11","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22244","RelatedDescription":"Opened issue \"Remove PROTOTYPE markers from \"private protected\" feature\" (#22244) at dotnet/roslyn","RelatedBody":"It looks like some PROTOTYPE markers made it through when the feature was merged.\r\n\r\nhttps://github.com/dotnet/roslyn/blame/9da689b5e705672c050bbac63bccd896ba4aefbb/src/VisualStudio/CSharp/Impl/CodeModel/CSharpCodeModelService.cs#L1041\r\n\r\nhttps://github.com/dotnet/roslyn/blob/9da689b5e705672c050bbac63bccd896ba4aefbb/src/VisualStudio/VisualBasic/Impl/CodeModel/VisualBasicCodeModelService.vb#L1425"},{"Id":"6617792181","Type":"IssuesEvent","CreatedAt":"2017-09-21T04:14:56","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22197","RelatedDescription":"Closed issue \"ref ternary must match val-escapes on its branches (not ref escapes)\" (#22197) at dotnet/roslyn","RelatedBody":"The spec and implementation need to be updated. The following should fail\r\n\r\n```CS\r\npublic class C\r\n{\r\n    bool flag1 = true;\r\n    bool flag2 = false;\r\n\r\n    public void M(ref Span<int> global)\r\n    {\r\n        Span<int> local = stackalloc int[10];\r\n\r\n        ref var r1 = ref (flag1 ? ref global : ref local);\r\n        ref var r2 = ref (flag2 ? ref global : ref local);\r\n\r\n\t// same as         global = local;   which would be an error.\r\n       // but we can’t fail here, since r1 and r2 are basically the same, \r\n       // so should fail when making r1 and r2 above.\r\n        r1 = r2;   \r\n\r\n        // it would require val-escape scopes for r1 and r2 be different.\r\n        // easier to say that val-escape must match\r\n    }\r\n}\r\n```\r\n"},{"Id":"6617792172","Type":"IssuesEvent","CreatedAt":"2017-09-21T04:14:55","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/20496","RelatedDescription":"Closed issue \"Race condition in PEMethodSymbol causing overrides in structs to fail with CS000, in rare cases\" (#20496) at dotnet/roslyn","RelatedBody":"The race seems to have more effect when running on CoreClr/Linux and in particular affects CoreFxLab repo where it causes build breaks.\r\n\r\nThere is a test that this race causes to fail - `TestOverridingBaseConstructorStruct`, but it happens very rarily.\r\n\r\nThe issue seems to be in computation of the use site diagnostics in PEMethodSymbol\r\nOne of possible race scenarios:\r\n\r\nthread `#1` sees that IsUseSiteDiagnosticPopulated is not set, goes to compute and publish diagnostics\r\nthread `#2` sees that IsUseSiteDiagnosticPopulated is not set, goes to compute and publish diagnostics\r\nthread `#1` finds no issues and sets IsUseSiteDiagnosticPopulated\r\nthread `#3` does something else and indirectly creates UncommonFields **with a sentinel value** for the use site diagnostics\r\nthread `#2` checks again IsUseSiteDiagnosticPopulated and since it is set (by thread `#1`) happily returns the sentinel as the actual value!!!\r\n\r\nWhile we must fix the race ASAP in the readonly-ref branch, the rest of the PEMethodSymbol must be reviewed/simplified. \r\nIt seems to reuse this same pattern that mixes sentinel/null/flag as indication of the current state thus introducing a lot of states and it is hard to prove that incoherent states are unreachable."},{"Id":"6617790630","Type":"PullRequestEvent","CreatedAt":"2017-09-21T04:14:05","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22050","RelatedDescription":"Merged pull request \"Merge features/readonly-ref to master\" (#22050) at dotnet/roslyn","RelatedBody":"Merge from features/readonly-ref into master.\r\n\r\nBrings a number of interconnected features geared towards system/hi-perf programming.\r\n\r\nUser facing features:\r\n- `ref readonly`  parameters\r\n- `ref readonly` return\r\n- `ref` extension methods\r\n- `ref readonly` extension methods\r\n- `ref` ternary expressions\r\n- `readonly` stucts\r\n- `ref` structs     (such as `Span<T>` and `ReadonlySpan<T>`  and structs that contain them)\r\n- escape analysis for byref variables and `ref struct` values\r\n- safe `stackalloc`\r\n- various optimizations for scenarios that involve readonly fields, stackalloc, fixed, unsafe . . .\r\n- peverify-compat mode\r\n\r\nInternal improvements:\r\n- attribute embedding infrastructure\r\n- separation of variable/lvalue and writeable/readonly analysis\r\n\r\n==== See also\r\n- Championed feature at https://github.com/dotnet/csharplang/issues/666\r\n- Proposal for `[ref] readonly` at https://github.com/dotnet/csharplang/blob/master/proposals/readonly-ref.md    (ignore `in`, that is gone)  \r\n- Detailed spec for Ref-Like types at https://github.com/dotnet/csharplang/blob/master/proposals/span-safety.md\r\n- Smaller design details of the features above. - https://github.com/VSadov/csharplang/blob/RefSpanDesignChoices/proposals/RefReadonlySpanDesignChoices.md\r\n- Test plan for ref `[ref] readonly` at https://github.com/dotnet/roslyn/issues/19216\r\n- Test Plan for Span<T>, aka interior pointer, aka stackonly struct at https://github.com/dotnet/roslyn/issues/20127\r\n"},{"Id":"6617448012","Type":"PullRequestEvent","CreatedAt":"2017-09-21T01:42:33","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22243","RelatedDescription":"Opened pull request \"Add IRaiseEventExpression operation for VB\" (#22243) at dotnet/roslyn","RelatedBody":"Fix #8567 and #8345"},{"Id":"6617400790","Type":"IssuesEvent","CreatedAt":"2017-09-21T01:22:04","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22242","RelatedDescription":"Opened issue \"Implement Interface loses \"ref readonly\"\" (#22242) at dotnet/roslyn","RelatedBody":"Implement interface refactoring loses \"ref readonly\" on parameters. \r\n"},{"Id":"6617390856","Type":"IssuesEvent","CreatedAt":"2017-09-21T01:17:41","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22241","RelatedDescription":"Opened issue \"Replace lambda with local function loses \"ref readonly\"\" (#22241) at dotnet/roslyn","RelatedBody":"```cs\r\n        delegate ref readonly int D1(ref readonly int arg);\r\n\r\n            D1 dd = (ref readonly int a) => ref a;\r\n```\r\n\r\nReplace dd with a local function using IDE. - loses \"ref readonly\"\r\n"},{"Id":"6617375994","Type":"IssuesEvent","CreatedAt":"2017-09-21T01:11:22","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22240","RelatedDescription":"Opened issue \"Add Accessibility modifier removes \"ref\" from a ref struct\" (#22240) at dotnet/roslyn","RelatedBody":"\r\nInvoke Refactor/Add Accessibility modifiers on \r\n\r\n```cs\r\nreadonly unsafe ref struct S1 { }\r\n```\r\nThe dialog offers adding \"private\", but also offers to remove \"ref\"\r\n\r\n"},{"Id":"6617315375","Type":"IssuesEvent","CreatedAt":"2017-09-21T00:44:11","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22239","RelatedDescription":"Opened issue \"Change Signature does not show \"ref readonly\" modifier on parameters\" (#22239) at dotnet/roslyn","RelatedBody":"\r\nThe Change Signature  shows  other modifiers like \"out\" but not \"ref readonly\" - not sure if it does not understand it or because it simply does not fit. There is no much space in that UI."},{"Id":"6617286392","Type":"IssuesEvent","CreatedAt":"2017-09-21T00:31:20","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22238","RelatedDescription":"Opened issue \"Extract interface loses \"ref readonly\" on parameters and returns\" (#22238) at dotnet/roslyn","RelatedBody":"\r\nparameters become an ordinary `ref`, returns become ordinary byval returns."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6617844962","Type":"PullRequestEvent","CreatedAt":"2017-09-21T04:41:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4584","RelatedDescription":"Merged pull request \"Cleanup portable PInvokeTransitionFrame - fixes ARM build break\" (#4584) at dotnet/corert","RelatedBody":""},{"Id":"6617645942","Type":"PullRequestEvent","CreatedAt":"2017-09-21T03:07:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4584","RelatedDescription":"Opened pull request \"Cleanup portable PInvokeTransitionFrame - fixes ARM build break\" (#4584) at dotnet/corert","RelatedBody":""},{"Id":"6617645504","Type":"PullRequestEvent","CreatedAt":"2017-09-21T03:07:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4582","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4582) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6617347615","Type":"PullRequestEvent","CreatedAt":"2017-09-21T00:59:04","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4583","RelatedDescription":"Opened pull request \"Avoid linefeed in /proc/self/coredump_filter\" (#4583) at dotnet/corert","RelatedBody":"On Alpine Linux, the default shell is ash. To build .NET Core, we\r\nexplicitly install bash.\r\n\r\nIf we run the following command:\r\n\r\n```sh\r\necho 0x3F > /proc/self/coredump_filter\r\n```\r\n\r\nin bash, it raises the exception:\r\n\r\n> echo: write error: Invalid argument\r\n\r\nwhile with ask, it works fine.\r\n\r\nProblem is that, when `echo` is run from `bash`, it adds a trailing\r\nlinefeed which kernel seems to reject.\r\n\r\nAdding `-n` avoids adding the linefeed.\r\n\r\nOriginal exception while building CoreRT:\r\n\r\n```sh\r\nchmod +x /corert/Tools/dotnetcli//dotnet\r\n/corert/bin/Linux.x64.Debug/ILCompiler.DependencyAnalysisFramework.Tests/RunTests.sh: line 67: echo: write error: Invalid argument\r\n/corert/Tools/dotnetcli//dotnet xunit.console.netcore.exe ILCompiler.DependencyAnalysisFramework.Tests.dll  -xml testResults.xml -notrait Benchmark=true -notrait category=nontests -notrait category=nonlinuxtests  -notrait category=OuterLoop -notrait category=failing\r\n```"},{"Id":"6617209272","Type":"PullRequestEvent","CreatedAt":"2017-09-20T23:58:25","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4582","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4582) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6616952860","Type":"PullRequestEvent","CreatedAt":"2017-09-20T22:24:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4581","RelatedDescription":"Merged pull request \"Update ilc to netcoreapp2.0\" (#4581) at dotnet/corert","RelatedBody":""},{"Id":"6616840424","Type":"PullRequestEvent","CreatedAt":"2017-09-20T21:51:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4581","RelatedDescription":"Opened pull request \"Update ilc to netcoreapp2.0\" (#4581) at dotnet/corert","RelatedBody":""},{"Id":"6616832525","Type":"PullRequestEvent","CreatedAt":"2017-09-20T21:48:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4580","RelatedDescription":"Merged pull request \"Buildtools update\" (#4580) at dotnet/corert","RelatedBody":""},{"Id":"6616728737","Type":"PullRequestEvent","CreatedAt":"2017-09-20T21:21:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4579","RelatedDescription":"Merged pull request \"Enable Alpine build\" (#4579) at dotnet/corert","RelatedBody":"Using Linux distro detection part of CoreCLR's init-tools.sh here.\r\n\r\nThe following DockerFile is used to build on Alpine Linue:\r\n\r\n```dockerfile\r\nFROM alpine:3.6\r\nRUN cat /etc/*-release\r\n\r\nRUN apk update\r\nRUN apk add --no-cache \\\r\n        autoconf bash build-base clang clang-dev \\\r\n        cmake curl-dev gcc gettext-dev git icu-dev libtool \\\r\n        linux-headers libunwind-dev llvm make openssl zlib-dev \\\r\n        util-linux-dev\r\n\r\n# note that the testing URL will be changed once lldb-dev is moved to\r\n# aports' (more prominent) \"main\" repo.\r\n# See https://github.com/alpinelinux/aports/pull/2342#issuecomment-330894890\r\nRUN apk add --no-cache \\\r\n       -X https://dl-cdn.alpinelinux.org/alpine/edge/testing \\\r\n        lldb-dev\r\n\r\nRUN git clone https://github.com/dotnet/corert -b master --single-branch \\\r\n    && cd corert && ./build.sh\r\n```\r\n\r\nContributes to #4552."},{"Id":"6616643397","Type":"PullRequestEvent","CreatedAt":"2017-09-20T21:01:16","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4580","RelatedDescription":"Opened pull request \"Buildtools update\" (#4580) at dotnet/corert","RelatedBody":""},{"Id":"6616525909","Type":"PullRequestEvent","CreatedAt":"2017-09-20T20:33:50","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4579","RelatedDescription":"Opened pull request \"Enable Alpine build\" (#4579) at dotnet/corert","RelatedBody":"Using Linux distro detection part of CoreCLR's init-tools.sh here.\r\n\r\nThe following DockerFile is used to build on Alpine Linue:\r\n\r\n```dockerfile\r\nFROM alpine:3.6\r\nRUN cat /etc/*-release\r\n\r\nRUN apk update\r\nRUN apk add --no-cache \\\r\n        autoconf bash build-base clang clang-dev \\\r\n        cmake curl-dev gcc gettext-dev git icu-dev libtool \\\r\n        linux-headers libunwind-dev llvm make openssl zlib-dev \\\r\n        util-linux-dev\r\n\r\n# note that the testing URL will be changed once lldb-dev is moved to\r\n# aports' (more prominent) \"main\" repo.\r\n# See https://github.com/alpinelinux/aports/pull/2342#issuecomment-330894890\r\nRUN apk add --no-cache \\\r\n       -X https://dl-cdn.alpinelinux.org/alpine/edge/testing \\\r\n        lldb-dev\r\n\r\nRUN git clone https://github.com/dotnet/corert -b master --single-branch \\\r\n    && cd corert && ./build.sh\r\n```\r\n\r\nContributes to #4552."},{"Id":"6616479929","Type":"PullRequestEvent","CreatedAt":"2017-09-20T20:23:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4578","RelatedDescription":"Merged pull request \"Adding inspections to ARM emitter\" (#4578) at dotnet/corert","RelatedBody":"Signed-off-by: Petr Bred <bredpetr@gmail.com>"},{"Id":"6616474474","Type":"PullRequestEvent","CreatedAt":"2017-09-20T20:21:56","Actor":"AtsushiKan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4571","RelatedDescription":"Merged pull request \"Allow type info request to fall through to RuntimeNoMetadataNamedType…\" (#4571) at dotnet/corert","RelatedBody":"…Info when encountering a module that isnt an instance of NativeFormatModuleInfo\r\nThis is to address one of the failure paths in #4558"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"910653558374240256","CreatedAt":"2017-09-20T23:55:02+00:00","UserScreenname":"dotnet","Text":"Last up today @ #dotNETConf... walk through creating an automated #DevOps flow w/ @ASPNET Core, #EFCore, &amp; #TFS2017… https://t.co/dATx9eAjEI","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":18,"FavoriteCount":7,"RawContent":null},{"Id":"910638457223094273","CreatedAt":"2017-09-20T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf - Dev'ing @ASPNET Core MVC Apps for International Users. See how to change content base… https://t.co/XO0zN7cDNp","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"910623359863574528","CreatedAt":"2017-09-20T21:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf - See how developers can build #Tizen TV applications using #VS2017. Are you tuned in?… https://t.co/d2jqzcepDP","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":21,"FavoriteCount":12,"RawContent":null},{"Id":"910608261207949318","CreatedAt":"2017-09-20T20:55:02+00:00","UserScreenname":"dotnet","Text":"Get your automated CI pipeline up &amp; running! Now @ #dotNETConf - Build, Test, Distribute, &amp; Monitor #Xamarin apps w… https://t.co/ma3a2bpd6y","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":25,"FavoriteCount":15,"RawContent":null},{"Id":"910593161055129600","CreatedAt":"2017-09-20T19:55:02+00:00","UserScreenname":"dotnet","Text":"https://t.co/xrzrC4eAjN New hotness happening now @ #dotNETConf: .NET on Linux: Learn to install .NET on #Linux &amp; c… https://t.co/lgS0GrH9oz","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":27,"FavoriteCount":15,"RawContent":null},{"Id":"910585366888964096","CreatedAt":"2017-09-20T19:24:03+00:00","UserScreenname":"dotnet","Text":"Calling all #dotnet devs that love #sports! @BleacherReport talking about their architecture. Ask questions live! https://t.co/obSAcGjenl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":21,"RawContent":null},{"Id":"910578060629602305","CreatedAt":"2017-09-20T18:55:02+00:00","UserScreenname":"dotnet","Text":"Sports Analytics in .NET @ Bleacher Report, happening now @ #dotNETConf ...from Start-Up to a Million Monthly Users… https://t.co/Qe4lXWjqWo","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":22,"FavoriteCount":21,"RawContent":null},{"Id":"910562960006934537","CreatedAt":"2017-09-20T17:55:01+00:00","UserScreenname":"dotnet","Text":"Next up @ #dotNETConf - See how to run entire PHP apps, #WordPress, #Laravel, #Symfony, on .NET Core w/ Peachpie -… https://t.co/MADTasSDOl","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":34,"FavoriteCount":27,"RawContent":null},{"Id":"910547860579586050","CreatedAt":"2017-09-20T16:55:01+00:00","UserScreenname":"dotnet","Text":"Now @ #dotNETConf - https://t.co/2oi5lXg0VG - Turn software into computer chips - #Hastlayer transforms software in… https://t.co/pvwPIjdRv5","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":12,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2017-09-21T05:30:16.860051Z","RunDurationInMilliseconds":7171}