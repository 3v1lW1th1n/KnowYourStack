{"Data":{"GitHub":{"Issues":[{"Id":"490566314","IsPullRequest":true,"CreatedAt":"2019-09-13T20:43:17","Actor":"bpstark","Number":"4187","RawContent":null,"Title":"Modified how DataViewTypes are registered","State":"closed","Body":"The DataViewManager registers DataViewTypes to determine how to\r\nrepresent the the data within ML.Net. However, there was a bug in how\r\ntypes were being queried. Types that were being registered via an\r\nAttribute were being added to the manager with only that Attribute.\r\nHowever, when queried from the manager all custom Attributes were being\r\npassed.\r\nTo solve this we need to only pass custom Attributes that are relevant\r\nto the Manager. All Type attributes now inherit from a single\r\nTypeAttribute class such that we can filter custom attributes for\r\nrelevant types.\r\n\r\nFixes #4121\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4187","RelatedDescription":"Closed or merged PR \"Modified how DataViewTypes are registered\" (#4187)"},{"Id":"493504395","IsPullRequest":true,"CreatedAt":"2019-09-13T20:29:18","Actor":"eerhardt","Number":"4215","RawContent":null,"Title":"Remove unused parameter in BinarySaver.","State":"open","Body":"I noticed this parameter is not being used when looking at this code. Removing it to clean it up.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4215","RelatedDescription":"Open PR \"Remove unused parameter in BinarySaver.\" (#4215)"},{"Id":"493472059","IsPullRequest":true,"CreatedAt":"2019-09-13T18:59:10","Actor":"Lynx1820","Number":"4214","RawContent":null,"Title":"fixing scenerio 3 of issue #3995","State":"open","Body":"This fixes the issue #3995 scenario 3 \r\nI'm waiting to see what can be done about scenario 1(desired behavior not decided yet) and 2( can't replicate). Scenario 4 is not part of our code base. \r\n\r\nIn this commit, I have made the error comment more clear and switched the exception from an System.ArgumentOutOfRangeException to System.ArgumentNullException. ArgumentOutOfRangeException are reserved for signaling bad function parameters and thus doesn't make sense to use for signaling a missing column value. \r\n\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4214","RelatedDescription":"Open PR \"fixing scenerio 3 of issue #3995\" (#4214)"},{"Id":"493438608","IsPullRequest":false,"CreatedAt":"2019-09-13T17:30:29","Actor":"julianobd","Number":"4213","RawContent":null,"Title":"Error when trying to execute a sample test - MLNET-CLI","State":"open","Body":"### System information\r\n\r\nSDK do .NET Core (refletindo qualquer global.json):\r\n Version:   2.1.508\r\n Commit:    9ba8583e91\r\n\r\nAmbiente de tempo de execução:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.508\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.12\r\n  Commit:  ccea2e606d\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n### Issue\r\n\r\nI tried to execute one sample using MLNET-CLI\r\n`mlnet auto-train --task regression --dataset taxi-fare-train.csv --test-dataset taxi-fare-test.csv --label-column-name fare_amount --max-exploration-time 1000`\r\n\r\nreturns a error:\r\n```\r\nBest quality(RSquared): 0,9440, Best Algorithm: LightGbmRegression, Last Algorithm: FastTreeTweedieRegression\r\n00:01:37 Exception occured while exploring pipelines:\r\nAll instances skipped due to missing features.\r\nPlease see the log file for more info.\r\n```\r\n\r\n### Source code / logs\r\nLog: \r\n[debug_log.txt](https://github.com/dotnet/machinelearning/files/3611149/debug_log.txt)\r\n\r\nDatasets: \r\n[teste.zip](https://github.com/dotnet/machinelearning/files/3611150/teste.zip)\r\n\r\n#Update\r\nI've also tryied using single datasets:\r\n\r\ncommands used:\r\n`mlnet auto-train --task regression --dataset taxi-fare-test.csv --label-column-name fare_amount --max-exploration-time 1000`\r\n\r\n`mlnet auto-train --task regression --dataset taxi-fare-train.csv --label-column-name fare_amount --max-exploration-time 1000`\r\n\r\nlogs:\r\n\r\n[train_dataset_debug_log.txt](https://github.com/dotnet/machinelearning/files/3611873/train_dataset_debug_log.txt)\r\n[test_dataset_debug_log.txt](https://github.com/dotnet/machinelearning/files/3611874/test_dataset_debug_log.txt)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4213","RelatedDescription":"Open issue \"Error when trying to execute a sample test - MLNET-CLI\" (#4213)"},{"Id":"491527109","IsPullRequest":false,"CreatedAt":"2019-09-13T15:56:47","Actor":"Lelelo1","Number":"4198","RawContent":null,"Title":"Process memory limit when using Scda trainer with regression task?","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro\r\n- **.NET Version (eg., dotnet --info)**: .NET Core SDK (reflecting any global.json):\r\n Version:   2.2.401\r\n Commit:    729b316c13\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI started training a model with scda trainer - part of regression task.\r\n- **What happened?**\r\nIt is taking very long time and process memory seem to be fixed to...:\r\n\r\n![VIsualStudio](https://user-images.githubusercontent.com/42244983/64596652-98a47700-d3b4-11e9-8d61-dd2d71b9e3d0.png)\r\n\r\n165 MB - while the machine has 8 gb of ram.\r\n\r\n- **What did you expect?**\r\n\r\nI am expecting the process to take more ram.\r\n\r\n### Source code / logs\r\n.\r\n\r\nConclusions:\r\nAs it is now the training will not go much faster using a computer with better hardware (ram and cpu) - since trainer seem to be limited to 50% cpu and 165MB RAM?","Url":"https://github.com/dotnet/machinelearning/issues/4198","RelatedDescription":"Closed issue \"Process memory limit when using Scda trainer with regression task?\" (#4198)"},{"Id":"492093533","IsPullRequest":false,"CreatedAt":"2019-09-13T14:20:19","Actor":"gerjanvl","Number":"4201","RawContent":null,"Title":"InvalidOperationException: Invalid TValue in GetGetter: 'Microsoft.ML.Data.VBuffer`1[System.Single]'","State":"closed","Body":"### System information\r\n\r\n- Windows 10:\r\n- netcoreapp 2.2\r\n \r\n### Packages\r\nMicrosoft.ML 1.4.0-preview\r\nMicrosoft.ML.OnnxRuntime 0.5.0\r\nMicrosoft.ML.OnnxTransformer 1.4.0-preview\r\n\r\n### Issue\r\n\r\n- Used onnx model to create a prediction engine.\r\n- I get an exception when creating the prediction engine: InvalidOperationException: Invalid TValue in GetGetter: 'Microsoft.ML.Data.VBuffer`1[System.Single]'\r\n- I was expecting it to work everything looks right, the exception doesn't make it clear what's actually wrong. I could not debug the source code because it's inside a lambda function. \r\n\r\n### Source Code: \r\nhttps://github.com/GerjanVlot/BERT-ML.NET\r\n\r\n### Callstack:\r\n```\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.GenerateSetter(DataViewRow input, Int32 index, Column column, Delegate poke, Delegate peek)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase..ctor(TypedCursorable`1 parent, DataViewRow input, String channelMessage)\r\n   at Microsoft.ML.Data.TypedCursorable`1.GetRow(DataViewRow input)\r\n   at Microsoft.ML.PredictionEngineBase`2.PredictionEngineCore(IHostEnvironment env, InputRow`1 inputRow, IRowToRowMapper mapper, Boolean ignoreMissingColumns, SchemaDefinition outputSchemaDefinition, Action& disposer, IRowReadableAs`1& outputRow)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at ML.BERT.TestApp.Onnx.OnnxModelConfigurator`1.GetMlNetPredictionEngine[T]() in ML.BERT.TestApp\\Onnx\\OnnxModelConfigurator.cs:line 34\r\n   at ML.BERT.TestApp.Program.Main(String[] args) in ML.BERT.TestApp\\Program.cs:line 22\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4201","RelatedDescription":"Closed issue \"InvalidOperationException: Invalid TValue in GetGetter: 'Microsoft.ML.Data.VBuffer`1[System.Single]'\" (#4201)"},{"Id":"493243192","IsPullRequest":true,"CreatedAt":"2019-09-13T10:07:58","Actor":"zHaytam","Number":"4212","RawContent":null,"Title":"Sanitize OutputName using dots to handle spaces in namespaces and project files","State":"open","Body":"This fixes the issue with generating namespaces and project files with spaces in them.\r\nFixes #3792.\r\n\r\nThe `Utils.Sanitize` method now takes an extra (optional) parameter, `replacement`, which is the char to replace non letters/digits with. Default value: `_`.  \r\nI thought it's better and easier to sanitize the `OutputName` in the settings directly, since it's used in all the places that needs to be changed (namespaces, project files).\r\n\r\nIn order to try it, I used the same command/dataset from the issue, the output is:\r\n- Analyzing Categorical Data\r\n  - Analyzing.Categorical.Data.ConsoleApp\r\n    - Analyzing.Categorical.Data.ConsoleApp.csproj\r\n    - ModelBuilder.cs\r\n    - Program.cs\r\n  - Analyzing.Categorical.Data.Model\r\n    - Analyzing.Categorical.Data.Model.csproj\r\n    - DataModels\r\n      - ConsumeModel.cs\r\n      - ModelInput.cs\r\n      - ModelOutput.cs\r\n    - MLModel.zip\r\n  - logs\r\n  - Analyzing.Categorical.Data.sln\r\n\r\nAnd the base namespace is `Analyzing.Categorical.Data`.\r\n\r\n---\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4212","RelatedDescription":"Open PR \"Sanitize OutputName using dots to handle spaces in namespaces and project files\" (#4212)"},{"Id":"493081360","IsPullRequest":true,"CreatedAt":"2019-09-13T00:04:23","Actor":"antoniovs1029","Number":"4211","RawContent":null,"Title":"Fixes #3992 and corner cases of inputColumnNames on FeaturizeText","State":"open","Body":"Fixes #3992 , where FeaturizeText is used with an options object, but no inputColumnNames is provided, thus expecting the inputColumnName to be defaulted to the outputColumnName.\r\n\r\nIt also covers the corner cases where the user uses FeaturizeText with an options object along with a 'null' or an empty string as inputColumnNames.\r\n\r\nThree different tests are provided to cover those 3 cases. It is verified that the text is featurized correctly and the features are saved in a column with the same name as the input column. They are all based on the TextFeaturizerWithWordFeatureExtractorTest, but without using a PredictionEngine because the output column hides the input column, and thus instead getting the rows of the dataview to verify their values.\r\n\r\nA small fix to the documentation of FeaturizeText is added.","Url":"https://github.com/dotnet/machinelearning/pull/4211","RelatedDescription":"Open PR \"Fixes #3992 and corner cases of inputColumnNames on FeaturizeText\" (#4211)"},{"Id":"490809421","IsPullRequest":true,"CreatedAt":"2019-09-12T23:23:18","Actor":"harishsk","Number":"4194","RawContent":null,"Title":"Added onnx export functionality for MissingValueIndicatorTransformer","State":"closed","Body":"Fixes #4192","Url":"https://github.com/dotnet/machinelearning/pull/4194","RelatedDescription":"Closed or merged PR \"Added onnx export functionality for MissingValueIndicatorTransformer\" (#4194)"},{"Id":"490805302","IsPullRequest":false,"CreatedAt":"2019-09-12T23:23:18","Actor":"harishsk","Number":"4192","RawContent":null,"Title":"MissingValueIndicatorTransformer does not support exporting to onnx","State":"closed","Body":"- **What did you do?**\r\nCreated a pipeline from with MissingValueIndicatorTransformer and tried to export it to Onnx with ConvertToOnnxProtobuf.\r\n\r\n- **What happened?**\r\nThe transform wasn't saved in the onnx graph\r\n\r\n- **What did you expect?**\r\nThe transform should be saved in the onnx graph\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4192","RelatedDescription":"Closed issue \"MissingValueIndicatorTransformer does not support exporting to onnx\" (#4192)"},{"Id":"493060897","IsPullRequest":false,"CreatedAt":"2019-09-12T22:38:09","Actor":"natke","Number":"4210","RawContent":null,"Title":"TensorFlow scoring sample should pass an empty dataview","State":"open","Body":"This sample is calling Fit() with a dataview generated from one sample: https://github.com/dotnet/machinelearning/blob/master/docs/samples/Microsoft.ML.Samples/Dynamic/TensorFlow/TextClassification.cs\r\n\r\nThe pipeline contains a pre-trained TensorFlow model, so there is not need (and is misleading) to call Fit with data.\r\n\r\nIn other places where no dataview is required, we generate an empty one.\r\n\r\nRelated to #3795 \r\n","Url":"https://github.com/dotnet/machinelearning/issues/4210","RelatedDescription":"Open issue \"TensorFlow scoring sample should pass an empty dataview\" (#4210)"},{"Id":"492921853","IsPullRequest":false,"CreatedAt":"2019-09-12T16:56:01","Actor":"codemzs","Number":"4209","RawContent":null,"Title":"ImageType needs to be savable","State":"open","Body":"ImageType does not implement codecs for saving/reading. Implement them so that image type can be used in model schemas for saving/loading models.","Url":"https://github.com/dotnet/machinelearning/issues/4209","RelatedDescription":"Open issue \"ImageType needs to be savable\" (#4209)"},{"Id":"492761084","IsPullRequest":false,"CreatedAt":"2019-09-12T12:01:40","Actor":"aslotte","Number":"4208","RawContent":null,"Title":"Question: Roadmap for JupyterNotebook + ML.NET","State":"open","Body":"This is a question/enhancement suggestion.\r\n\r\nAs there is now support for transfer learning of DNN's, that means training has become a lot more computational expensive. This may push users to have to provision a VM in Azure or other to be able to train their deep neural networks. \r\n\r\n**Question**: How does the road map look for adding support for ML.NET in a Jupyter Notebook? \r\nI know there is a C# kernel available to install, is it possible to use that in Azure Machine Learning Service? It would be neat to be able to run ML.NET in a Jupyter Notebook as we then can quickly provision a compute resource required. That would also open up the path to additional summary statistics and plotting etc. \r\n\r\n**If** Jupyter Notebooks are not in the plans, are there plans of creating a VM image or suggest other ways of training a deep neural network in ML.NET in the cloud, in case a user does not have a strong enough computer locally?","Url":"https://github.com/dotnet/machinelearning/issues/4208","RelatedDescription":"Open issue \"Question: Roadmap for JupyterNotebook + ML.NET\" (#4208)"},{"Id":"492758774","IsPullRequest":false,"CreatedAt":"2019-09-12T11:56:52","Actor":"aslotte","Number":"4207","RawContent":null,"Title":"Summary Statistics","State":"open","Body":"It would be great to have the possibility to add a data exploration API to quickly get a feel of the data, e.g.\r\n\r\n- Shape of the date\r\n- Do we have NaNs etc.\r\n- How balanced is the data?\r\n\r\nThis can certainly be done through LinQ queries on the IDataView I'm sure, but would be cool to wrap some common methods as an extension method on the IDataView","Url":"https://github.com/dotnet/machinelearning/issues/4207","RelatedDescription":"Open issue \"Summary Statistics\" (#4207)"},{"Id":"492757889","IsPullRequest":false,"CreatedAt":"2019-09-12T11:54:42","Actor":"aslotte","Number":"4206","RawContent":null,"Title":"Graphs/Plots of Evaluation Metrics","State":"open","Body":"It would be beneficial to have some kind of plotting mechanism of sorts to display evaluation metrics after training.\r\n\r\n- Confusion matrix\r\n- ROC graph\r\n- Precision-recall graph\r\n\r\nIt would also be neat to have a default ToString() method to output the metrics object to the console.","Url":"https://github.com/dotnet/machinelearning/issues/4206","RelatedDescription":"Open issue \"Graphs/Plots of Evaluation Metrics\" (#4206)"},{"Id":"492481673","IsPullRequest":true,"CreatedAt":"2019-09-11T21:43:23","Actor":"ashbhandare","Number":"4205","RawContent":null,"Title":"Upgrade TF.Net version from 0.10.10 to 0.11.3","State":"open","Body":"Fixes #4204\r\n\r\nIncludes a few API changes necessary to upgrade TF.Net version.\r\nVerified that ML.Samples  and Tests run.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4205","RelatedDescription":"Open PR \"Upgrade TF.Net version from 0.10.10 to 0.11.3\" (#4205)"},{"Id":"492480232","IsPullRequest":false,"CreatedAt":"2019-09-11T21:39:31","Actor":"ashbhandare","Number":"4204","RawContent":null,"Title":"Need to move from TF.NET version 0.10.10 to 0.11.3","State":"open","Body":"\r\n- ML.Net currently runs with Tensorflow.Net version 0.10.10, but there is a newer stable version of Tensorflow.Net 0.11.3 with improvements :https://www.nuget.org/packages/TensorFlow.NET/0.11.3\r\n- **What happened?**\r\nThere are build errors with TF.Net 0.11.3\r\n- **What did you expect?**\r\nNeed the required API changes to make ML.Net compatible with TF.Net 0.11.3\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4204","RelatedDescription":"Open issue \"Need to move from TF.NET version 0.10.10 to 0.11.3\" (#4204)"},{"Id":"492467529","IsPullRequest":false,"CreatedAt":"2019-09-11T21:07:27","Actor":"OmarJay1","Number":"4203","RawContent":null,"Title":"App Store","State":"open","Body":"Hello, I'm wondering if there's any intention of ML.NET working in Microsoft app store apps. I'm getting this error message when I run the App Cert Kit.\r\n\r\nI believe that these DLLs have to do with ML.NET because the error goes away when I don't use ML.NET.  Thanks.\r\n\r\n      <MESSAGES>\r\n          <MESSAGE TEXT=\"File C:\\Program Files\\WindowsApps\\AppName\\CpuMathNative.dll has failed the AppContainerCheck check.\" />\r\n          <MESSAGE TEXT=\"File C:\\Program Files\\WindowsApps\\AppName\\LdaNative.dll has failed the AppContainerCheck check.\" />\r\n        </MESSAGES>\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4203","RelatedDescription":"Open issue \"App Store\" (#4203)"},{"Id":"492461153","IsPullRequest":false,"CreatedAt":"2019-09-11T20:52:32","Actor":"harishsk","Number":"4202","RawContent":null,"Title":"RankingEvaluatorOptions has OutputGroupSummary as an internal field","State":"open","Body":"- **What happened?**\r\nThe OutputGroupSummary field of RankingEvaluatorOptions is marked as an internal field and and related RankingMetrics class does not include data resulting from turning on that option. \r\n\r\n- **What did you expect?**\r\nRankingMetrics should include the data from OutputGroupSummary and the options should support turning on that option.","Url":"https://github.com/dotnet/machinelearning/issues/4202","RelatedDescription":"Open issue \"RankingEvaluatorOptions has OutputGroupSummary as an internal field\" (#4202)"},{"Id":"490566509","IsPullRequest":true,"CreatedAt":"2019-09-11T16:53:46","Actor":"harishsk","Number":"4188","RawContent":null,"Title":"Added Onnx export functionality to PCATransformer","State":"closed","Body":"Fixes #4186 ","Url":"https://github.com/dotnet/machinelearning/pull/4188","RelatedDescription":"Closed or merged PR \"Added Onnx export functionality to PCATransformer\" (#4188)"},{"Id":"490566177","IsPullRequest":false,"CreatedAt":"2019-09-11T16:53:46","Actor":"harishsk","Number":"4186","RawContent":null,"Title":"PCA Transformer does not support exporting to Onnx","State":"closed","Body":"- **What did you do?**\r\nCreated a pipeline from with PCATranfsform and tried to export it to Onnx with - ConvertToOnnxProtobuf.\r\n\r\n- **What happened?**\r\nThe transform wasn't saved in the onnx graph\r\n\r\n- **What did you expect?**\r\nThe transform should be saved in the onnx graph\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4186","RelatedDescription":"Closed issue \"PCA Transformer does not support exporting to Onnx\" (#4186)"},{"Id":"491868237","IsPullRequest":false,"CreatedAt":"2019-09-10T19:59:12","Actor":"CESARDELATORRE","Number":"4200","RawContent":null,"Title":"[DNN Image Classification] Add the LoadFromDirectory() as convenient API","State":"open","Body":"We actually have a convenient _custom_ method named LoadFromDirectory() in sample apps which loads the images in a folder with one sub-folder per class (image type) so it is very straight forward for users to create/load the images with their related labels into a DataSet. See sample here:\r\n\r\nhttps://github.com/dotnet/machinelearning-samples/blob/master/samples/csharp/getting-started/DeepLearning_ImageClassification_Training/ImageClassification.Train/Program.cs#L129 \r\n\r\nThis method should work integrated with the upcoming approach that images themselves need also to be loaded as in-memory objects into a DataView, so the pipeline will train with in-memory images and when scoring with the generated model and using a PredictionEngine the user will also be able to classify an in-memory image. \r\n\r\nUser's feedback:\r\n\r\n_\"A couple of methods such as LoadFromDirectory are so useful that they may actually be candidates to include in the framework. I actually have a specific use case, with the same approach, where I don't supply meta-data but use the folder structure for labels instead\"_","Url":"https://github.com/dotnet/machinelearning/issues/4200","RelatedDescription":"Open issue \"[DNN Image Classification] Add the LoadFromDirectory() as convenient API\" (#4200)"},{"Id":"491818341","IsPullRequest":false,"CreatedAt":"2019-09-10T18:01:57","Actor":"lisahua","Number":"4199","RawContent":null,"Title":"How to handle columns with mix DateTime and numeric values","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: .Net 4.6\r\n- **.NET Version (eg., dotnet --info)**:  ML.Net 1.1.0\r\n\r\n### Issue\r\n\r\n- **What did you do?** We have a column with mix DateTime and numeric values\r\n- **What happened?**  The [PrimitiveDataViewType](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.primitivedataviewtype?view=ml-dotnet) does not have a type to specify our column type \r\n- **What did you expect?** Have a way to represent both `DateTime` and numeric values with a dateView type, most like a primitive data type.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\nWe want to have a DataViewType to represent a column with a mix of DateTime and numeric types.\r\n             ","Url":"https://github.com/dotnet/machinelearning/issues/4199","RelatedDescription":"Open issue \"How to handle columns with mix DateTime and numeric values\" (#4199)"},{"Id":"491434433","IsPullRequest":true,"CreatedAt":"2019-09-10T03:49:31","Actor":"yamachu","Number":"4197","RawContent":null,"Title":"Fix relation between IsSavedModel and isFrozen in DnnRetrainTransformer.SaveModel","State":"open","Body":"Fix: https://github.com/dotnet/machinelearning/issues/4191\r\n\r\nIsSavedModel returns true when loaded model is an-frozen model \r\nhttps://github.com/dotnet/machinelearning/blob/1503b0aa9cac997cff8b8bc7e2075eb23d61ad81/src/Microsoft.ML.Dnn/DnnUtils.cs#L137-L143\r\n\r\nbut now isFrozen variable is set true in spite of an-frozen model.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/3c02da5d75534265223e56aee9c5d2da53ea4b99/src/Microsoft.ML.Dnn/DnnRetrainTransform.cs#L681\r\n\r\n---\r\n\r\nChecks\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4197","RelatedDescription":"Open PR \"Fix relation between IsSavedModel and isFrozen in DnnRetrainTransformer.SaveModel\" (#4197)"},{"Id":"491298821","IsPullRequest":false,"CreatedAt":"2019-09-09T20:05:19","Actor":"nilimb2000","Number":"4196","RawContent":null,"Title":"Automl: feature importance for regression models ","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\nHow do i extract the feature importances for the regression models that automl builds. Something similar to automlexplainer in azure maybe?\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4196","RelatedDescription":"Open issue \"Automl: feature importance for regression models \" (#4196)"},{"Id":"491121315","IsPullRequest":false,"CreatedAt":"2019-09-09T14:11:17","Actor":"luisquintanilla","Number":"4195","RawContent":null,"Title":"[DatabaseLoader] Error when using attributes (i.e ColumnName)","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 18362\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 2.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nTried to use `ColumnName` attribute in class that defines IDataView schema.  \r\n\r\n- **What happened?**\r\n\r\nWhen operating on the IDataView, I received the following error\r\n\r\n```text\r\nSystem.Reflection.TargetInvocationException: 'Exception has been thrown by the target of an invocation.'\r\n \r\nInner Exception\r\nIndexOutOfRangeException: Features\r\n```\r\n\r\n- **What did you expect?**\r\n\r\nNo error.\r\n\r\n### Source code / logs\r\n\r\nGiven the following data stored in a SQL Server DB\r\n\r\n![image](https://user-images.githubusercontent.com/46974588/64536954-fb7c0c80-d2e7-11e9-8a5b-531ddd267aa8.png)\r\n\r\nThe data schema is defined as such\r\n\r\n```csharp\r\npublic class HouseData\r\n{\r\n    public float Size { get; set; }\r\n\r\n    public float Price { get; set; }\r\n}\r\n```\r\n\r\nThe following code works:\r\n\r\n```csharp\r\nstring connectionString = @\"Connection-String\";\r\n\r\nstring sqlCommand = \"SELECT Size,Price FROM House\";\r\n\r\nMLContext mlContext = new MLContext();\r\n\r\nDatabaseLoader loader = mlContext.Data.CreateDatabaseLoader<HouseData>();\r\n\r\nDatabaseSource dbSource = new DatabaseSource(SqlClientFactory.Instance,connectionString,sqlCommand);\r\n\r\nIDataView data = loader.Load(dbSource);\r\n\r\n// Test Code\r\nIEnumerable<HouseData> housingData = mlContext.Data.CreateEnumerable<HouseData>(data, reuseRowObject: true);\r\n\r\nforeach (HouseData house in housingData)\r\n{\r\n    Console.WriteLine($\"{house.Size} costs {house.Price}\");\r\n}\r\n\r\nConsole.ReadKey();\r\n```\r\n\r\nHowever, when attributes are added to the schema class, it produces an error.\r\n\r\n```csharp\r\npublic class HouseData\r\n{\r\n    [ColumnName(\"Features\")]\r\n    public float Size { get; set; }\r\n\r\n    [ColumnName(\"Label\")]\r\n    public float Price { get; set; }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4195","RelatedDescription":"Open issue \"[DatabaseLoader] Error when using attributes (i.e ColumnName)\" (#4195)"},{"Id":"490805334","IsPullRequest":true,"CreatedAt":"2019-09-08T21:37:03","Actor":"harishsk","Number":"4193","RawContent":null,"Title":"Added onnx export functionality for MissingValueIndicatorTransformer","State":"closed","Body":"Fixes #4192 ","Url":"https://github.com/dotnet/machinelearning/pull/4193","RelatedDescription":"Closed or merged PR \"Added onnx export functionality for MissingValueIndicatorTransformer\" (#4193)"},{"Id":"490774573","IsPullRequest":false,"CreatedAt":"2019-09-08T16:32:57","Actor":"yamachu","Number":"4191","RawContent":null,"Title":"[DNN Training] Failed save model in Microsoft.ML.Transforms.DnnTransformer.SaveModel","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: maxOS 10.14.6\r\n- **.NET Version (eg., dotnet --info)**: 3.0.100-preview9-014004\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\n  * Use `RetrainDnnModel` for training regression-based deep-neural-network model\r\n  * Try to save trained model\r\n\r\n- **What happened?**\r\n\r\nApplication throw unhandled exception: System.ArgumentNullException and crash\r\n\r\n- **What did you expect?**\r\n\r\nWe could save trained model\r\n\r\n### Source code / logs\r\n\r\n```\r\nUnhandled exception. System.ArgumentNullException: Value cannot be null. (Parameter 'value')\r\n   at System.IO.BinaryWriter.Write(String value)\r\n   at Microsoft.ML.Transforms.DnnTransformer.SaveModel(ModelSaveContext ctx)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.Microsoft.ML.ICanSaveModel.Save(ModelSaveContext ctx)\r\n   at Microsoft.ML.ModelSaveContext.SaveModel[T](RepositoryWriter rep, T value, String path)\r\n   at Microsoft.ML.ModelOperationsCatalog.Save(ITransformer model, DataViewSchema inputSchema, Stream stream)\r\n   at Microsoft.ML.ModelOperationsCatalog.Save(ITransformer model, DataViewSchema inputSchema, String filePath)\r\n   at VoiceConversionStarter.Console.Program.Train(TrainMcapOptions opts) in /Users/yamachu/Projects/github.com/yamachu/VoiceConversionStarter/VoiceConversionStarter.Console/Program.cs:line 100\r\n   at VoiceConversionStarter.Console.Program.<>c.<Main>b__2_0(TrainMcapOptions opts) in /Users/yamachu/Projects/github.com/yamachu/VoiceConversionStarter/VoiceConversionStarter.Console/Program.cs:line 118\r\n   at CommandLine.ParserResultExtensions.MapResult[TSource,TResult](ParserResult`1 result, Func`2 parsedFunc, Func`2 notParsedFunc)\r\n   at VoiceConversionStarter.Console.Program.Main(String[] args) in /Users/yamachu/Projects/github.com/yamachu/VoiceConversionStarter/VoiceConversionStarter.Console/Program.cs:line 116\r\n```\r\n\r\nI think this issue is not to check null in this line\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/8d51eee8047842ae72f5521bd55a9bec51460859/src/Microsoft.ML.Dnn/DnnTransform.cs#L1118-L1119\r\n\r\nThat field in my trained model is null\r\n<img width=\"548\" alt=\"スクリーンショット 2019-09-09 1 21 42\" src=\"https://user-images.githubusercontent.com/1955233/64491256-3e66c180-d2a1-11e9-967d-5501d6315d61.png\">\r\n\r\nfull source code: https://github.com/yamachu/VoiceConversionStarter/tree/pkg-update\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4191","RelatedDescription":"Open issue \"[DNN Training] Failed save model in Microsoft.ML.Transforms.DnnTransformer.SaveModel\" (#4191)"},{"Id":"490764734","IsPullRequest":true,"CreatedAt":"2019-09-08T15:01:04","Actor":"yaeldekel","Number":"4190","RawContent":null,"Title":"Svmlight loader and saver","State":"open","Body":"Fixes #4014 .","Url":"https://github.com/dotnet/machinelearning/pull/4190","RelatedDescription":"Open PR \"Svmlight loader and saver\" (#4190)"},{"Id":"490662881","IsPullRequest":false,"CreatedAt":"2019-09-07T17:56:20","Actor":"CESARDELATORRE","Number":"4189","RawContent":null,"Title":"[DNN Training] Add API/support for Model Interpretability of DNNs","State":"open","Body":"Once we have the foundational DNN training API stabilized, we should add DNN Model Interpretability APIs such as methods of type Saliency Methods and Feature Attribution (FA). \r\n\r\nFor further details, this is a high level summary:\r\nhttps://towardsdatascience.com/interpretability-of-deep-learning-models-9f52e54d72ab","Url":"https://github.com/dotnet/machinelearning/issues/4189","RelatedDescription":"Open issue \"[DNN Training] Add API/support for Model Interpretability of DNNs\" (#4189)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-09-15T05:30:43.436799Z","RunDurationInMilliseconds":788}