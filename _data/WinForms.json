{"Data":{"GitHub":{"Issues":[{"Id":"433574529","IsPullRequest":true,"CreatedAt":"2019-04-16T04:06:34","Actor":"dotnet-maestro[bot]","Number":"793","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190415.08\r\n- **Date Produced**: 4/16/2019 4:06 AM\r\n- **Commit**: 29db80e003d7160f20bd2b036ba16721c3ee66bc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27615-08\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190415.09\r\n- **Date Produced**: 4/16/2019 4:28 AM\r\n- **Commit**: 3a2a4da53ac123ed42fcbaf3ccd27784ed6a5e59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27615-09\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview5-27615-72 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview5-27615-72 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/793","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#793)"},{"Id":"433527820","IsPullRequest":false,"CreatedAt":"2019-04-16T00:06:46","Actor":"hughbe","Number":"792","RawContent":null,"Title":"[API Addition] Message.GetLParam<T>()","State":"open","Body":"We currently have\r\n```cs\r\npublic class Message\r\n{\r\n        // ..\r\n        public object GetLParam(Type cls) => Marshal.PtrToStructure(LParam, cls);\r\n        // ..\r\n}\r\n```\r\n\r\nHowever, this is implemented using `Marshal.PtrToStructure` which has been obsoleted. I propose adding a new API that uses the un-obsoleted marshal API:\r\n\r\n```cs\r\npublic class Message\r\n{\r\n        // ..\r\n        public object GetLParam<T>() => Marshal.PtrToStructure<T>(LParam);\r\n        // ..\r\n}\r\n```\r\n\r\nThis would avoid the need for all the casting, e.g\r\n```cs\r\n                NativeMethods.NMHDR nmhdr = (NativeMethods.NMHDR)m.GetLParam(typeof(NativeMethods.NMHDR));\r\n```","Url":"https://github.com/dotnet/winforms/issues/792","RelatedDescription":"Open issue \"[API Addition] Message.GetLParam<T>()\" (#792)"},{"Id":"432841611","IsPullRequest":true,"CreatedAt":"2019-04-15T23:40:11","Actor":"hughbe","Number":"772","RawContent":null,"Title":"Remove references to GlobalAssemblyCache","State":"closed","Body":"The GAC is not supported in .NET Core - `Assembly.GlobalAssemblyCache` always returns false, for example.\r\n\r\nTherefore this is all dead in .NET Core. However, there may be a breaking change. Consider that the user defines their own non-runtime assembly by directly subclassing `Assembly` instead of using `typeof(int).Assembly` for example. If they overrode `GlobalAssemblyCache` to return `true` in .NET Core then the code that I deleted would have been run. However, the entire GAC feature has been removed in .NET Core so I firstly don't see this happening and secondly the code is actually meaningless anyway.\r\n\r\nContributes to #485 \r\n","Url":"https://github.com/dotnet/winforms/pull/772","RelatedDescription":"Closed or merged PR \"Remove references to GlobalAssemblyCache\" (#772)"},{"Id":"433429793","IsPullRequest":true,"CreatedAt":"2019-04-15T23:37:26","Actor":"hughbe","Number":"787","RawContent":null,"Title":" Add text metrics tests","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/787","RelatedDescription":"Closed or merged PR \" Add text metrics tests\" (#787)"},{"Id":"432840213","IsPullRequest":true,"CreatedAt":"2019-04-15T23:35:31","Actor":"dotnet-maestro[bot]","Number":"771","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190412.2\r\n- **Date Produced**: 4/12/2019 4:37 PM\r\n- **Commit**: 9d0fd805448082c8d55e2434607b481bca70a146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19212.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19212.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190413.2\r\n- **Date Produced**: 4/13/2019 9:02 PM\r\n- **Commit**: 10655eec2ab92accc1487d077979935127f16b4e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19213.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19213.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190414.2\r\n- **Date Produced**: 4/14/2019 4:07 PM\r\n- **Commit**: bcf1186cb0db792906fd319ae49bdbc41f44f8ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19214.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19214.2\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/771","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#771)"},{"Id":"433435639","IsPullRequest":true,"CreatedAt":"2019-04-15T21:55:01","Actor":"hughbe","Number":"788","RawContent":null,"Title":"Cleanup Padding and add PropertyDescriptor tests","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/788","RelatedDescription":"Closed or merged PR \"Cleanup Padding and add PropertyDescriptor tests\" (#788)"},{"Id":"433421795","IsPullRequest":true,"CreatedAt":"2019-04-15T21:54:42","Actor":"hughbe","Number":"786","RawContent":null,"Title":"Add DataGridCell tests","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/786","RelatedDescription":"Closed or merged PR \"Add DataGridCell tests\" (#786)"},{"Id":"433414544","IsPullRequest":true,"CreatedAt":"2019-04-15T21:54:13","Actor":"hughbe","Number":"785","RawContent":null,"Title":" Add Link/LinkConverter tests","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/785","RelatedDescription":"Closed or merged PR \" Add Link/LinkConverter tests\" (#785)"},{"Id":"432892379","IsPullRequest":true,"CreatedAt":"2019-04-15T21:48:09","Actor":"dotnet-maestro[bot]","Number":"774","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190413.07\r\n- **Date Produced**: 4/13/2019 7:54 PM\r\n- **Commit**: 5c329c85ae31cc90220e84cfab8c1f1d0787b0d3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27613-07\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/774","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/core-setup\" (#774)"},{"Id":"433334734","IsPullRequest":true,"CreatedAt":"2019-04-15T21:47:08","Actor":"hughbe","Number":"779","RawContent":null,"Title":"Add HelpProvider tests and perform associated cleanup","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/779","RelatedDescription":"Closed or merged PR \"Add HelpProvider tests and perform associated cleanup\" (#779)"},{"Id":"433370066","IsPullRequest":true,"CreatedAt":"2019-04-15T21:33:26","Actor":"hughbe","Number":"781","RawContent":null,"Title":"Add FeatureSupport/OSFeature tests and fix bug","State":"closed","Body":"Fixes #780","Url":"https://github.com/dotnet/winforms/pull/781","RelatedDescription":"Closed or merged PR \"Add FeatureSupport/OSFeature tests and fix bug\" (#781)"},{"Id":"433358066","IsPullRequest":false,"CreatedAt":"2019-04-15T21:33:26","Actor":"hughbe","Number":"780","RawContent":null,"Title":"FeatureSupport.GetVersionPresent for a non-IFeatureSupport class throws InvalidCastException, should return null","State":"closed","Body":"In the same way that the other static method `IsPresent` checks for:\r\n\r\n```cs\r\n            if (featureId != null && typeof(IFeatureSupport).IsAssignableFrom(c)) {\r\n```","Url":"https://github.com/dotnet/winforms/issues/780","RelatedDescription":"Closed issue \"FeatureSupport.GetVersionPresent for a non-IFeatureSupport class throws InvalidCastException, should return null\" (#780)"},{"Id":"432845316","IsPullRequest":true,"CreatedAt":"2019-04-15T21:27:19","Actor":"hughbe","Number":"773","RawContent":null,"Title":"Cleanup WinFormsUtils, ButtonBase, Toolstrip, ToolstripItem + Tests","State":"closed","Body":"Already tested across winforms in various functions","Url":"https://github.com/dotnet/winforms/pull/773","RelatedDescription":"Closed or merged PR \"Cleanup WinFormsUtils, ButtonBase, Toolstrip, ToolstripItem + Tests\" (#773)"},{"Id":"432830340","IsPullRequest":true,"CreatedAt":"2019-04-15T21:25:29","Actor":"hughbe","Number":"765","RawContent":null,"Title":"Add FileNameEditor tests, fix bugs and Debug Asserts","State":"closed","Body":"Fixes #764\r\nFixes #763","Url":"https://github.com/dotnet/winforms/pull/765","RelatedDescription":"Closed or merged PR \"Add FileNameEditor tests, fix bugs and Debug Asserts\" (#765)"},{"Id":"432830262","IsPullRequest":false,"CreatedAt":"2019-04-15T21:25:28","Actor":"hughbe","Number":"764","RawContent":null,"Title":"FileNameEditor.InitializeInitializeDialog(null) throws NRE","State":"closed","Body":"Should be ANE","Url":"https://github.com/dotnet/winforms/issues/764","RelatedDescription":"Closed issue \"FileNameEditor.InitializeInitializeDialog(null) throws NRE\" (#764)"},{"Id":"433472793","IsPullRequest":true,"CreatedAt":"2019-04-15T20:51:16","Actor":"hughbe","Number":"791","RawContent":null,"Title":"Add Message tests","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/791","RelatedDescription":"Open PR \"Add Message tests\" (#791)"},{"Id":"433459131","IsPullRequest":true,"CreatedAt":"2019-04-15T20:15:10","Actor":"hughbe","Number":"790","RawContent":null,"Title":" Add Timer tests and fix Debug assert failure","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/790","RelatedDescription":"Open PR \" Add Timer tests and fix Debug assert failure\" (#790)"},{"Id":"433441000","IsPullRequest":true,"CreatedAt":"2019-04-15T19:25:26","Actor":"hughbe","Number":"789","RawContent":null,"Title":"Fix TableLayoutPanelCellPositionConverter.CreateInstance validation","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/789","RelatedDescription":"Open PR \"Fix TableLayoutPanelCellPositionConverter.CreateInstance validation\" (#789)"},{"Id":"433412259","IsPullRequest":false,"CreatedAt":"2019-04-15T18:09:11","Actor":"hughbe","Number":"784","RawContent":null,"Title":"[Api Addition] Implement LinkLabel.Link.Equals","State":"open","Body":"Currently doing `new LinkLabel.Link(1, 2).Equals(new LinkLabel.Link(1, 2))` returns `false` which doesn't make sense!","Url":"https://github.com/dotnet/winforms/issues/784","RelatedDescription":"Open issue \"[Api Addition] Implement LinkLabel.Link.Equals\" (#784)"},{"Id":"433401697","IsPullRequest":true,"CreatedAt":"2019-04-15T17:40:56","Actor":"hughbe","Number":"783","RawContent":null,"Title":"Add LinkArea/LinkAreaConverter tests","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/783","RelatedDescription":"Open PR \"Add LinkArea/LinkAreaConverter tests\" (#783)"},{"Id":"433382684","IsPullRequest":true,"CreatedAt":"2019-04-15T16:51:44","Actor":"hughbe","Number":"782","RawContent":null,"Title":"Add OwnerDrawPropertyBag tests","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/782","RelatedDescription":"Open PR \"Add OwnerDrawPropertyBag tests\" (#782)"},{"Id":"433313165","IsPullRequest":false,"CreatedAt":"2019-04-15T14:27:31","Actor":"hughbe","Number":"778","RawContent":null,"Title":"[Cleanup] Remove Contract.Requires - they aren't used in .NET Core projects","State":"open","Body":"We removed these in corefx/coreclr, and probably should do so in winforms.\r\n\r\nHowever: do we want to replace these with an exception that validates the contract - e..g \r\n```cs\r\nprotected virtual void OnHelpRequested(HelpEventArgs hevent) {\r\n    Contract.Requires(hevent != null);\r\n    HelpEventHandler handler = (HelpEventHandler)Events[EventHelpRequested];\r\n    if (handler != null) {\r\n        handler(this,hevent);\r\n        // Set this to true so that multiple events aren't raised to the Form.\r\n        hevent.Handled = true;\r\n    }\r\n\r\n    if (!hevent.Handled) {\r\n        if (ParentInternal != null) {\r\n            ParentInternal.OnHelpRequested(hevent);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nNote that we have `Contract.Requires(hevent != null);` but this is ignored, and leads us to possibly throw NREs elsewhere","Url":"https://github.com/dotnet/winforms/issues/778","RelatedDescription":"Open issue \"[Cleanup] Remove Contract.Requires - they aren't used in .NET Core projects\" (#778)"},{"Id":"433067366","IsPullRequest":false,"CreatedAt":"2019-04-15T02:15:07","Actor":"Zheng-Li01","Number":"777","RawContent":null,"Title":"[.NET Core][LOC] The .NET Core Winforms app Template Name ‘Windows Forms App’ is not translated in Create a new project page","State":"open","Body":"**VS:** Version 16.1.0 Preview 2 [28811.12.d16.1]\r\n**OS:** RS3 X64 CHS\r\n**.NET Core**: 3.0.100-preview4-011198 from Release branch\r\n**Affected Languages:** CHS, CHT, CSY, DEU, ESN, FRA, ITA, JPN, KOR, PLK, PTB, RUS, TRK \r\n\r\n**More info:**\r\nThis issue also can reproduce with all 13 local languages: CHS, CHT, CSY, DEU, ESN, FRA, ITA, JPN, KOR, PLK, PTB, RUS, TRK\r\n\r\n**Steps to reproduce:**\r\n1. Install the .NET Core 3.0 from https://github.com/dotnet/core-sdk. \r\n2. Launch VS and click the ‘Create a new project’ item in the Get started page.\r\n3. Then find the Windows Forms app (.NET Core) template in the Create a new project page.\r\n\r\n**Actual Result:**\r\nThe template name ‘Windows Forms app’ is not localized.\r\n![CHS](https://user-images.githubusercontent.com/38325459/56103784-1af45080-5f67-11e9-9e69-06a79dfdd034.png)\r\n\r\n**Expected Result:**\r\nThe template name ‘Windows Forms app’ should be localized corresponding to the Framework template name. ","Url":"https://github.com/dotnet/winforms/issues/777","RelatedDescription":"Open issue \"[.NET Core][LOC] The .NET Core Winforms app Template Name ‘Windows Forms App’ is not translated in Create a new project page\" (#777)"},{"Id":"433061752","IsPullRequest":false,"CreatedAt":"2019-04-15T01:41:11","Actor":"Jessie-Zhang01","Number":"776","RawContent":null,"Title":"[.Net Core][LOC]The item '(none)'  in PropertyGrid is not translated in .Net core.","State":"open","Body":"**OS:** RS3 X64 JPN\r\n**VS:**  Dev16 16.1 d16.1 branch 28811.12 build JPN\r\n**.NET Core:** 3.0.100-preview4-011198 from Release branch\r\n\r\n**More info:**\r\nThis issue also can reproduce with all 13 local languages: CHS, CHT, CSY, DEU, ESN, FRA, ITA, JPN, KOR, PLK, PTB, RUS, TRK\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Install the .NET Core 3.0 SDK from https://github.com/dotnet/core-sdk for Release branch.\r\n2. Open the .NET Core app from \\\\\\mlangfs1\\public\\Winforms\\CoreTest\\LocalValidation\\WindowsFormsApp4.zip in VS.\r\n3. Run it and observe the ‘ImageList’ component in PropertyGrid.\r\n\r\n**Actual:** The item '(none)' in PropertyGrid is not translated in .Net core.\r\n![image](https://user-images.githubusercontent.com/45864649/56102896-87208580-5f62-11e9-9d36-3eba1d7363bb.png)\r\n\r\n**Expected:** The item '(none)' in PropertyGrid should be translated in .Net core. \r\nFollowing is the screenshot of .Net framework, it is translated.\r\n![image](https://user-images.githubusercontent.com/45864649/56102883-7708a600-5f62-11e9-9538-6e115e12a7ef.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/776","RelatedDescription":"Open issue \"[.Net Core][LOC]The item '(none)'  in PropertyGrid is not translated in .Net core.\" (#776)"},{"Id":"433061020","IsPullRequest":false,"CreatedAt":"2019-04-15T01:36:02","Actor":"Jessie-Zhang01","Number":"775","RawContent":null,"Title":"[.Net Core][LOC]The item '(Collection)' in PropertyGrid is not translated in .Net core","State":"open","Body":"**OS**: RS3 X64 JPN\r\n**VS**:  Dev16 16.1 d16.1 branch 28811.12 build JPN\r\n**.NET Core**: 3.0.100-preview4-011198 from Release branch\r\n\r\n**More info:**\r\nThis issue also can reproduce with all 13 local languages: CHS, CHT, CSY, DEU, ESN, ITA, JPN, KOR, PLK, PTB, RUS, TRK, FRA\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Install the .NET Core 3.0 SDK from https://github.com/dotnet/core-sdk for Release branch\r\n2. Open the .NET Core app from \\\\\\mlangfs1\\public\\Winforms\\CoreTest\\LocalValidation\\WindowsFormsApp4.zip in VS.\r\n3. Run it and observe the ‘Nodes’ component in PropertyGrid\r\n\r\n**Actual:** The item '(Collection)' in PropertyGrid is not translated in .Net core.\r\n![image](https://user-images.githubusercontent.com/45864649/56102740-8d623200-5f61-11e9-8002-0421f713754c.png)\r\n\r\n**Expected:** The item '(Collection)' in PropertyGrid should be translated in .Net core. Following is the screenshot of .Net framework, it is translated.\r\n![image](https://user-images.githubusercontent.com/45864649/56102780-bf739400-5f61-11e9-84ff-485917ffa315.png)","Url":"https://github.com/dotnet/winforms/issues/775","RelatedDescription":"Open issue \"[.Net Core][LOC]The item '(Collection)' in PropertyGrid is not translated in .Net core\" (#775)"},{"Id":"432834729","IsPullRequest":false,"CreatedAt":"2019-04-13T10:53:04","Actor":"hughbe","Number":"770","RawContent":null,"Title":"FolderNameEditor buffer only fits 260 ascii chars, not unicode","State":"open","Body":"We allocate `MAX_PATH` bytes, but should allocate `MAX_PATH * 2`","Url":"https://github.com/dotnet/winforms/issues/770","RelatedDescription":"Open issue \"FolderNameEditor buffer only fits 260 ascii chars, not unicode\" (#770)"},{"Id":"432834679","IsPullRequest":true,"CreatedAt":"2019-04-13T10:52:16","Actor":"hughbe","Number":"769","RawContent":null,"Title":"Fix FolderNameEditor memory leak on cancel","State":"open","Body":"Fixes #768\r\nFixes #770\r\nFixes #767 ","Url":"https://github.com/dotnet/winforms/pull/769","RelatedDescription":"Open PR \"Fix FolderNameEditor memory leak on cancel\" (#769)"},{"Id":"432834413","IsPullRequest":false,"CreatedAt":"2019-04-13T10:48:54","Actor":"hughbe","Number":"768","RawContent":null,"Title":"FolderNameEditor leaks buffer on cancel","State":"open","Body":"Here https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms.Design.Editors/src/System/Windows/Forms/Design/FolderNameEditor.cs#L140-L176 we allocate a buffer but only free it if `SHGetPathFromIDList` succeeds\r\n\r\n```cs\r\n// Construct a BROWSEINFO\r\nUnsafeNativeMethods.BROWSEINFO bi = new UnsafeNativeMethods.BROWSEINFO();\r\n\r\nIntPtr buffer = Marshal.AllocHGlobal(MAX_PATH);\r\n\r\nbi.pidlRoot = pidlRoot;\r\nbi.hwndOwner = hWndOwner;\r\nbi.pszDisplayName = buffer;\r\nbi.lpszTitle = descriptionText;\r\nbi.ulFlags = mergedOptions;\r\nbi.lpfn = IntPtr.Zero;\r\nbi.lParam = IntPtr.Zero;\r\nbi.iImage = 0;\r\n\r\n// And show the dialog\r\npidlRet = UnsafeNativeMethods.Shell32.SHBrowseForFolder(bi);\r\n\r\nif (pidlRet == IntPtr.Zero) return DialogResult.Cancel;\r\n\r\n// Then retrieve the path from the IDList\r\nUnsafeNativeMethods.Shell32.SHGetPathFromIDList(pidlRet, buffer);\r\n\r\n// Convert to a string\r\nDirectoryPath = Marshal.PtrToStringAuto(buffer);\r\n\r\n// Then free all the stuff we've allocated or the SH API gave us\r\nMarshal.FreeHGlobal(buffer);\r\n```","Url":"https://github.com/dotnet/winforms/issues/768","RelatedDescription":"Open issue \"FolderNameEditor leaks buffer on cancel\" (#768)"},{"Id":"432833248","IsPullRequest":false,"CreatedAt":"2019-04-13T10:34:29","Actor":"hughbe","Number":"767","RawContent":null,"Title":"Should FolderNameEditor use long paths like FolderBrowserDialog does?","State":"open","Body":"In `FolderNameEditor`:\r\n\r\n```cs\r\n                    // Then retrieve the path from the IDList\r\n                    UnsafeNativeMethods.Shell32.SHGetPathFromIDList(pidlRet, buffer);\r\n```\r\n\r\nIn `FolderBrowserDialog` we use\r\n```\r\n                    // Then retrieve the path from the IDList\r\n                    UnsafeNativeMethods.Shell32.SHGetPathFromIDListLongPath(pidlRet, ref pszSelectedPath);\r\n```\r\n\r\nThere's a mismatch here - do we need to update `FolderNameEditor`?","Url":"https://github.com/dotnet/winforms/issues/767","RelatedDescription":"Open issue \"Should FolderNameEditor use long paths like FolderBrowserDialog does?\" (#767)"},{"Id":"432831417","IsPullRequest":false,"CreatedAt":"2019-04-13T10:09:40","Actor":"hughbe","Number":"766","RawContent":null,"Title":"Suspicious definition of `BROWSEINFO` in Interop code","State":"open","Body":"In the C# code:\r\n\r\n```\r\n[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]\r\npublic class BROWSEINFO\r\n{\r\n    public IntPtr hwndOwner; //HWND        hwndOwner;    // HWND of the owner for the dialog\r\n\r\n    public int\r\n        iImage; //int          iImage;                      // output var: where to return the Image index.\r\n\r\n    public IntPtr\r\n        lParam; //LPARAM       lParam;                      // extra info that's passed back in callbacks\r\n\r\n    public IntPtr lpfn; //BFFCALLBACK  lpfn;            // Call back pointer\r\n\r\n    public string lpszTitle; //LPCWSTR      lpszTitle;           // text to go in the banner over the tree.\r\n    public IntPtr pidlRoot; //LPCITEMIDLIST pidlRoot;   // Root ITEMIDLIST\r\n\r\n    // For interop purposes, send over a buffer of MAX_PATH size. \r\n    public IntPtr pszDisplayName; //LPWSTR       pszDisplayName;      // Return display name of item selected.\r\n    public int ulFlags; //UINT         ulFlags;                     // Flags that control the return stuff\r\n}\r\n```\r\n\r\nIn the native code: \r\n```cpp\r\ntypedef struct _browseinfoA {\r\n  HWND              hwndOwner;\r\n  PCIDLIST_ABSOLUTE pidlRoot;\r\n  LPSTR             pszDisplayName;\r\n  LPCSTR            lpszTitle;\r\n  UINT              ulFlags;\r\n  BFFCALLBACK       lpfn;\r\n  LPARAM            lParam;\r\n  int               iImage;\r\n} BROWSEINFOA, *PBROWSEINFOA, *LPBROWSEINFOA;\r\n```\r\n\r\nNote that the order differs","Url":"https://github.com/dotnet/winforms/issues/766","RelatedDescription":"Open issue \"Suspicious definition of `BROWSEINFO` in Interop code\" (#766)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-16T05:30:51.7104644Z","RunDurationInMilliseconds":1014}