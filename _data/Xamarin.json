{"Data":{"Blog":{"FeedItems":[{"Title":"Learn How The Lean Cook Uses Mobile to Drive Revenue and Promote Healthy Living","PublishedOn":"2017-09-18T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The Lean Cook, a popular UK diet and fitness blog started as a hobby by a husband and wife team, is a prime example of how to design apps for the user. Instead of simply replicating web content on a smaller screen, the team crafted an interactive shopping and cooking experience. They’ve grown a loyal following, and their latest project (available [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/learn-lean-cook-uses-mobile-drive-revenue-promote-healthy-living/\">Learn How The Lean Cook Uses Mobile to Drive Revenue and Promote Healthy Living</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/learn-lean-cook-uses-mobile-drive-revenue-promote-healthy-living/","RawContent":null},{"Title":"Xamarin.Forms: Tips for Beating the Learning Curve","PublishedOn":"2017-09-15T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>As a first time user learning any new technology or pattern, there’s always a curve, and over the years I&#8217;ve stood at the threshold of a product and gazed up that curve to determine how painfully steep it appeared and how long it would take until I was productive. Now, as the Program Manager for Xamarin.Forms, [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/xamarin-forms-tips-beating-learning-curve/\">Xamarin.Forms: Tips for Beating the Learning Curve</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/xamarin-forms-tips-beating-learning-curve/","RawContent":null},{"Title":"Xamarin All-Stars at .NET Conf 2017!","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Join Xamarin Product Managers and Engineers at .NET Conf 2017, a free virtual event for any developer. This year&#8217;s speaker line-up consists of all-star Xamarin speakers, including Miguel de Icaza, James Montemagno, and Mikayla Hutchinson, who will present on Xamarin tooling and the latest on what’s happening with Xamarin and related technologies. What&#8217;s .NET Conf? [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/xamarin-stars-net-conf-2017/\">Xamarin All-Stars at .NET Conf 2017!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/xamarin-stars-net-conf-2017/","RawContent":null},{"Title":"Get Your Apps Ready for iOS 11!","PublishedOn":"2017-09-13T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>We’ve just updated our iOS 11 support to go along with the Xcode 9 GM Seed release. You can use this build along with the Xcode 9 GM to submit applications that take advantage of the new features in iOS 11, tvOS 11 and watchOS 4 to the Apple AppStore. We also have awesome new sample [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/get-apps-ready-ios-11/\">Get Your Apps Ready for iOS 11!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/get-apps-ready-ios-11/","RawContent":null},{"Title":"Xamarin.Android 8.0 Gets Even Sweeter with Oreo","PublishedOn":"2017-09-11T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Android 8.0 Oreo is by far the sweetest version of Android to date, with great new features including notification channels, notification badges, custom fonts in XML, downloadable fonts, instant apps, background limits, autofill, and picture-in-picture (PIP). We&#8217;re excited to announce Xamarin.Android support for Android Oreo in our latest release of Xamarin.Android for both Visual Studio [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/xamarin-android-8-0-gets-even-sweeter-with-oreo/\">Xamarin.Android 8.0 Gets Even Sweeter with Oreo</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/xamarin-android-8-0-gets-even-sweeter-with-oreo/","RawContent":null},{"Title":"Podcast: Android Oreo Support, Xamarin Live Player Preview 2, New iOS 11 Previews, and more!","PublishedOn":"2017-09-11T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>In this episode of the Xamarin Podcast, James Montemagno and I discuss all of the amazing new previews available to Xamarin developers, including Android Oreo, iOS 11, Xamarin Live Player, Xamarin.Forms, and more! We also discuss some exciting news with the Xamarin MVP Program and a new certification level for Xamarin developers. Be sure to [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/podcast-android-oreo-support-xamarin-live-player-preview-2-new-ios-11-previews/\">Podcast: Android Oreo Support, Xamarin Live Player Preview 2, New iOS 11 Previews, and more!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/podcast-android-oreo-support-xamarin-live-player-preview-2-new-ios-11-previews/","RawContent":null},{"Title":"Digitally Imported Delivers 10 Music Streaming Apps to Millions of Fans Globally","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the first music streaming services and the #1 radio network for electronic music fans, Digitally Imported’s laser focus on UX and mobile quality helps them retain their competitive edge and keep users coming back for more. The team has grown from one developer and one app to a global team supporting five (near [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/digitally-imported-delivers-10-music-streaming-apps-millions-fans-globally/\">Digitally Imported Delivers 10 Music Streaming Apps to Millions of Fans Globally</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/digitally-imported-delivers-10-music-streaming-apps-millions-fans-globally/","RawContent":null},{"Title":"Live Webinar | Xamarin University Presents: Exploring UrhoSharp 3D with Xamarin Workbooks","PublishedOn":"2017-09-06T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Join me on Thursday, September 21 at 9 am PST for my upcoming webinar on using UrhoSharp 3D with Xamarin Workbooks, which combines what I like most: graphics programming and helping developers build better apps. &#160; Register &#160; I love how graphics programming allows you to visualize something in your mind, and then see it [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/live-webinar-xamarin-university-presents-exploring-urhosharp-3d-xamarin-workbooks/\">Live Webinar | Xamarin University Presents: Exploring UrhoSharp 3D with Xamarin Workbooks</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/live-webinar-xamarin-university-presents-exploring-urhosharp-3d-xamarin-workbooks/","RawContent":null},{"Title":"Explore iOS 11 Previews Today","PublishedOn":"2017-09-05T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Since the announcement of iOS 11 at WWDC, we’ve been working on providing the new APIs as web previews with Xamarin.iOS from our releases blog. To help you get started building apps with the new iOS 11 APIs, we&#8217;ve put together an Introduction to iOS 11 guide covering new features in iOS 11. We&#8217;ll regularly [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/explore-ios-11-previews-today/\">Explore iOS 11 Previews Today</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/explore-ios-11-previews-today/","RawContent":null},{"Title":"Bringing Communities Together: Xamarin MVPs Join Microsoft MVPs","PublishedOn":"2017-09-01T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The Xamarin MVP Program and Microsoft MVP Award Program share a common bond in recognizing leaders who make outstanding contributions to our technical communities. In the last year, we&#8217;ve taken steps to bring our communities closer together, by making Xamarin University and Microsoft MSDN benefits available to all members of both programs, as well as [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bringing-communities-together-xamarin-mvps-join-microsoft-mvps/\">Bringing Communities Together: Xamarin MVPs Join Microsoft MVPs</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bringing-communities-together-xamarin-mvps-join-microsoft-mvps/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6606568249","Type":"PullRequestEvent","CreatedAt":"2017-09-19T01:05:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/872","RelatedDescription":"Opened pull request \"[Xamarin.Android.Bcl-Tests] Add BCL test project.\" (#872) at xamarin/xamarin-android","RelatedBody":"What do we want? (with apologies to 48e3fc26)\r\n**MOAR** Unit tests!\r\n\r\nSpecifically, we want to run the BCL unit tests which mono generates:\r\n\r\n\t$ cd external/mono/mcs/class/corlib\r\n\t$ make PROFILE=monodroid test\r\n\t# creates `monodroid_corlib_test.dll`\r\n\r\nCreation of `monodroid_*_test.dll` assemblies and the\r\n`make PROFILE=monodroid test` target is a relatively recent\r\ndevelopment, for which I need to buy the #runtime team some beers.\r\n\r\nIn terms of `mono-runtimes.targets`, we can build *all* of the BCL\r\nunit test assemblies with:\r\n\r\n\t$ cd external/mono/mcs/class\r\n\t$ make -i do-test PROFILE=monodroid\r\n\r\nNow that we can create them, how do we *use* them? That's the trickier\r\nbit: they need to be built within mono, as part of the existing BCL\r\nbuild process. This in turn means that the BCL unit test assemblies\r\nneed to be distributed as part of the mono bundle, as we don't want to\r\nrebuild the mono repo \"from scratch\" just for the unit tests.\r\n\r\nUpdate `build-tools/mono-runtimes/ProfileAssemblies.projitems` to\r\ninclude a new `@(MonoTestAssembly)` item group which contains all of\r\nthe BCL unit test assemblies and related files which should be\r\nincluded into `bundle-*.zip`. Additionally, add\r\n`ProfileAssemblies.projitems` to `@(VersionFile)` witihin\r\n`bundle-path.targets`, so that if anything within\r\n`ProfileAssemblies.projitems` changes, we rebuild the bundle.\r\n\r\nOnce we *have* the BCL unit test assemblies, we need to *run* them.\r\nThe new `Xamarin.Android.Bcl-Tests.csproj` project is a\r\nXamarin.Android application project which will execute the unit tests.\r\n\r\nThere's just one small problem: Xamarin.Android apps want to use\r\n`Xamarin.Android.NUnitLite.dll`. The BCL unit test assemblies instead\r\nbuild against their own `nunitlite.dll`, which has no Xamarin.Android\r\nintegration or support. How do we use the new test assemblies?\r\n\r\n*Force* a fix by using `remap-assembly-ref` to \"rename\" the\r\n`nunitlite` assembly reference to `Xamarin.Android.NUnitLite.dll`.\r\nThis *cannot* be done as part of the `mono-runtimes.mdproj` build, as\r\n`Xamarin.Android.NUnitLite.dll` won't yet exist. Instead, remap the\r\nassemblies within `Xamarin.Android.Bcl-Tests.targets`, and distribute\r\nthe remapped assemblies with the application."},{"Id":"6606191037","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:37:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/869","RelatedDescription":"Merged pull request \"[tests] fixed search paths for MSBuild on Windows\" (#869) at xamarin/xamarin-android","RelatedBody":"Builder.cs used in the unit tests does not currently use MSBuild from\r\nVisual Studio 2017.\r\n\r\nMSBuild is now located by checking the following:\r\n- Check `XA_MSBUILD_EXE` environment variable\r\n- Check VS 2017 path\r\n- Check older VS path\r\n- Check .NET path\r\n\r\nAlso updated `FrameworkLibDirectory` to check VS 2017 path."},{"Id":"6606186197","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:36:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/867","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix PCL _DesignTimeFacadeAssemblies Detetion.\" (#867) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=57849\r\n\r\nWe are sometimes getting duplicate assembly references in the `@(ReferencePath)`\r\nItemGroup. This is comming from the DesignTime Facade assembly detection.\r\n\r\nLooking at the msbuild targets [1], they do duplicate detection by checking the\r\n`%(Filename)` does not exist in the assembly list already. So we should\r\ndo the same in our Xamarin.Android.PCLSupport.targets.\r\n\r\n[1] https://github.com/mono/msbuild/blob/xplat-master/src/Tasks/Microsoft.NETFramework.CurrentVersion.targets#L103"},{"Id":"6606171892","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:31:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/871","RelatedDescription":"Closed pull request \"Revert \"Bump to lipzip/rel-1-3-0/51ff59da\"\" (#871) at xamarin/xamarin-android","RelatedBody":"Commit fa9f62a1 [broke the master build][b630]:\r\n\r\n[b630]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/630/\r\n\r\n\tLinking C executable hole.exe\r\n\tCMakeFiles/hole.dir/objects.a(hole.c.obj):hole.c:(.text+0x77): undefined reference to `__imp_zip_error_init'\r\n\t...\r\n\r\nRevert commit fa9f62a1 until we figure out how to properly fix it."},{"Id":"6606168023","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:30:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/871","RelatedDescription":"Opened pull request \"Revert \"Bump to lipzip/rel-1-3-0/51ff59da\"\" (#871) at xamarin/xamarin-android","RelatedBody":"Commit fa9f62a1 [broke the master build][b630]:\r\n\r\n[b630]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/630/\r\n\r\n\tLinking C executable hole.exe\r\n\tCMakeFiles/hole.dir/objects.a(hole.c.obj):hole.c:(.text+0x77): undefined reference to `__imp_zip_error_init'\r\n\t...\r\n\r\nRevert commit fa9f62a1 until we figure out how to properly fix it."},{"Id":"6605943748","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:26:50","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/870","RelatedDescription":"Opened pull request \"[tests] `gradlew` needs JAVA_HOME set on Windows\" (#870) at xamarin/xamarin-android","RelatedBody":"Context in #800\r\nFailing build at:\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/index?buildId=999607"},{"Id":"6604548408","Type":"PullRequestEvent","CreatedAt":"2017-09-18T16:12:49","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/869","RelatedDescription":"Opened pull request \"[tests] fixed search paths for MSBuild on Windows\" (#869) at xamarin/xamarin-android","RelatedBody":"Builder.cs used in the unit tests does not currently use MSBuild from\r\nVisual Studio 2017.\r\n\r\nMSBuild is now located by checking the following:\r\n- Check `XA_MSBUILD_EXE` environment variable\r\n- Check VS 2017 path\r\n- Check older VS path\r\n- Check .NET path\r\n\r\nAlso updated `FrameworkLibDirectory` to check VS 2017 path."},{"Id":"6603817680","Type":"PullRequestEvent","CreatedAt":"2017-09-18T13:59:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/837","RelatedDescription":"Merged pull request \"Remove Java.Interop.TypeNameMappings project, it is gone.\" (#837) at xamarin/xamarin-android","RelatedBody":"This fixes JavaNativeTypeManager.PackageNamingPolicy initialization issue\r\nthat blocks the entire use of package naming policy customization (one in\r\nXamarin.Android.Build.Tasks.dll is initialized in GenerateJavaStubs, while\r\nthe actual use in Java.Interop.Tools.JavaCallableWrappers.dll never gets\r\ninitialized).\r\n\r\nAdded test for PackageNamingPolicy.Lowercase. Deployed apps work fine too."},{"Id":"6603782499","Type":"PullRequestEvent","CreatedAt":"2017-09-18T13:52:33","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/868","RelatedDescription":"Opened pull request \"Fix MXE build of libzip\" (#868) at xamarin/xamarin-android","RelatedBody":"Commit https://github.com/xamarin/xamarin-android/commit/fa9f62a113bf9fba42e39c4556b130988137b967 failed to update the MXE build of the library\r\nand so it was still being built as a static archive (which is the\r\nnew libzip default) and caused build failures when building\r\nlibzip executables.\r\n\r\nThis commit makes MXE build a shared version of the library and,\r\nhopefully, fixes the issue."},{"Id":"6599327145","Type":"PullRequestEvent","CreatedAt":"2017-09-16T18:15:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/863","RelatedDescription":"Merged pull request \"Update libzip to v1.3.0\" (#863) at xamarin/xamarin-android","RelatedBody":"The new version fixes CVE-2017-12858 and CVE-2017-14107"},{"Id":"6599290810","Type":"PullRequestEvent","CreatedAt":"2017-09-16T17:48:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/865","RelatedDescription":"Merged pull request \"Bump to Java.Interop/d15-5/354bd575\" (#865) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59472"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6599000549","Type":"PullRequestEvent","CreatedAt":"2017-09-16T14:10:05","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1143","RelatedDescription":"Merged pull request \"Add iOS prototypical cell cache for LV RowHeight calcs\" (#1143) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nExpect when an iOS `ListView` with `HasUnevenRows` computes the row height for an appearing cell, that does not require creating a new iOS view. Actually, we've been creating a new view every time we compute the height. \r\n\r\nThe fix is to create an iOS cell (prototypical cell) for each type of `ViewCell`, then when the height of a `ViewCell` of that type needs to be computed, get (or create) the prototypical cell, update it's BindingContext, measure its height, and return that result.\r\n\r\nHow the type of the `ViewCell` is determined depends on the caching strategy. \r\n\r\n* RecycleElement -> the `ViewCell` type key is the `DataTemplate`. \r\n\r\n* RecycleElementAndDataTemplate -> the `ViewCell` type is the CLR `Type` of the binding context retrieved out of the `ItemsSource`. This differs from `RecycleElement` in that we need not keep asking the `DataTemplateSelector` for a `DataTemplate` as we'll assume it'll return the same `DataTemplate` for a given item type.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=52487\r\n\r\n### API Changes ###\r\n\r\nAdd `CachingStrategy.RecycleElementAndDataTemplate`\r\n\r\n### Behavioral Changes ###\r\n\r\nFor `RecycleElement`, we now assume every `DataTemplate` will return the same type of `ViewCell`. This is a breaking change which, we hope, won't bite anyone.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n   - We still have Android failures which block the test. But we want to get this fix out sooner.\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6598226892","Type":"PullRequestEvent","CreatedAt":"2017-09-16T01:52:25","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1144","RelatedDescription":"Merged pull request \"[iOS] Can activate ContextActions on ListViews reliably again\" (#1144) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#578 added a static `WeakReference` to the `UIScrollView` to check against and prevent multiple `ContextAction`s from being activated at once. This was not being set to `null` on `Dispose`, so if the `ListView` was on a page that was popped and then pushed again, subsequent attempts to activate `ContextAction`s would fail, since the reference was now out of sync. Now nulling the static `WeakReference` to resolve this.\r\n\r\n#885 built upon the original fix in #578, but as Ruddy2007 mentioned in that PR, this change caused possible `NullReferenceException`s. Added null checks to resolve this.\r\n\r\n### Bugs Fixed ###\r\n\r\n- [Bug 58875 - Back navigation disables Context Action in whole app, if Context Action left open](https://bugzilla.xamarin.com/show_bug.cgi?id=58875)\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6598225614","Type":"PullRequestEvent","CreatedAt":"2017-09-16T01:51:20","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1120","RelatedDescription":"Merged pull request \"[Android] Hide actionbar when MDP with NavigationPage with hidden NavigationBar\" (#1120) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMake sure to respect what NavigationPage says regarding the NavigationBar if we have a MDP with a NavigationPage as a detail. This Works fine in AppCompat but was broken in non AppCompat\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=27731\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6606145101","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:22:57","Actor":"radical","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2715","RelatedDescription":"Closed pull request \"[mac][msbuild] Opt-in to filtering out denied assemblies (#2482)\" (#2715) at xamarin/xamarin-macios","RelatedBody":"PR for adding support for the filtering in msbuild:\r\n\thttps://github.com/mono/msbuild/pull/23"},{"Id":"6605943401","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:26:44","Actor":"baulig","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2716","RelatedDescription":"Closed pull request \"[mmp]: Don't add Vision.framework unless we're targetting 10.13+.\" (#2716) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6605883925","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:12:23","Actor":"baulig","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2716","RelatedDescription":"Opened pull request \"[mmp]: Don't add Vision.framework unless we're targetting 10.13+.\" (#2716) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6605840395","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:02:11","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2715","RelatedDescription":"Opened pull request \"[mac][msbuild] Opt-in to filtering out denied assemblies (#2482)\" (#2715) at xamarin/xamarin-macios","RelatedBody":"PR for adding support for the filtering in msbuild:\r\n\thttps://github.com/mono/msbuild/pull/23"},{"Id":"6605572389","Type":"PullRequestEvent","CreatedAt":"2017-09-18T20:01:32","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2686","RelatedDescription":"Merged pull request \"macOS tests for NetStandard2 support\" (#2686) at xamarin/xamarin-macios","RelatedBody":"- Disabled for now due to https://bugzilla.xamarin.com/show_bug.cgi?id=53164"},{"Id":"6605123024","Type":"PullRequestEvent","CreatedAt":"2017-09-18T18:19:54","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2608","RelatedDescription":"Closed pull request \"Xcode9 CoreML msbuild support\" (#2608) at xamarin/xamarin-macios","RelatedBody":"Creating this PR mostly so I can setup a build lane so that Craig Dunn and Larry O'Brian can play with it and provide me with some feedback.\r\n\r\nThese commits will mostly likely never go into the 15.3/15.4 xcode9 releases and instead will wait until XI 11.x (15.5? 15.6?)"},{"Id":"6605114145","Type":"PullRequestEvent","CreatedAt":"2017-09-18T18:18:04","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2714","RelatedDescription":"Opened pull request \"[msbuild] Added support for building CoreML models\" (#2714) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"909881970783551489","CreatedAt":"2017-09-18T20:49:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how The Lean Cook is using mobile to promote healthy living AND drive revenue in a crowded market:… https://t.co/UF1i6PVrtR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":11,"FavoriteCount":2,"RawContent":null},{"Id":"909810012469514243","CreatedAt":"2017-09-18T16:03:05+00:00","UserScreenname":"xamarinhq","Text":"Request App Store ratings and reviews from your users with an in-app dialog using the SKStoreReviewController:… https://t.co/bSbfehKqcq","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":31,"FavoriteCount":12,"RawContent":null},{"Id":"908780317200179200","CreatedAt":"2017-09-15T19:51:26+00:00","UserScreenname":"xamarinhq","Text":"#XamarinForms Program Manager @davidortinau shares his tips for beating the learning curve: https://t.co/amiCZmJtYS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":38,"RawContent":null},{"Id":"908722845253083136","CreatedAt":"2017-09-15T16:03:04+00:00","UserScreenname":"xamarinhq","Text":"Ready to go mobile? @XamarinU offers 30-day free trials! Learn more: https://t.co/bVpjALvmoy https://t.co/4d4kRrEKka","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":28,"FavoriteCount":12,"RawContent":null},{"Id":"908428865781067776","CreatedAt":"2017-09-14T20:34:54+00:00","UserScreenname":"xamarinhq","Text":"Save the date for #dotNETconf, a FREE virtual event w/ talks from @JamesMontemagno, @migueldeicaza, &amp; @mjhutchinson: https://t.co/iTsu7CpsRx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":80,"FavoriteCount":46,"RawContent":null},{"Id":"908360444636786694","CreatedAt":"2017-09-14T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss out! Sign up now for Charles Petzold's 9/21 @XamarinU webinar on UrhoSharp 3D with Xamarin Workbooks:… https://t.co/xNJ8ThNJr9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":6,"RawContent":null},{"Id":"908108658436972545","CreatedAt":"2017-09-13T23:22:30+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin apps ready for #iOS11: https://t.co/gRQcYsRCXM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":40,"RawContent":null},{"Id":"907995789787648000","CreatedAt":"2017-09-13T15:54:00+00:00","UserScreenname":"xamarinhq","Text":"Demystifying build configurations: https://t.co/KxvabUJIue","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":28,"FavoriteCount":20,"RawContent":null},{"Id":"907633910342983680","CreatedAt":"2017-09-12T15:56:01+00:00","UserScreenname":"xamarinhq","Text":"Build better enterprise apps with our eBook, \"Enterprise Application Patterns using #XamarinForms\":… https://t.co/TIoMfDn3d8","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":104,"FavoriteCount":60,"RawContent":null},{"Id":"907351795420286976","CreatedAt":"2017-09-11T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with #AndroidOreo for https://t.co/3QxhuBuvHc 8.0: https://t.co/dqWUbgCT2F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":64,"RawContent":null},{"Id":"907325663409041414","CreatedAt":"2017-09-11T19:31:10+00:00","UserScreenname":"xamarinhq","Text":"The latest @XamarinPodcast covers #AndroidOreo support, #Xamarin Live Player Preview 2, new iOS 11 Previews, + more: https://t.co/CrVmWvzAtG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":28,"RawContent":null},{"Id":"907276055479799813","CreatedAt":"2017-09-11T16:14:02+00:00","UserScreenname":"xamarinhq","Text":"#XamarinDevDays are a great way to learn how to build, test, &amp; connect native apps with #Xamarin! Find one near you… https://t.co/O3GS7ee0AW","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":25,"FavoriteCount":14,"RawContent":null},{"Id":"906910639662215168","CreatedAt":"2017-09-10T16:02:00+00:00","UserScreenname":"xamarinhq","Text":"Build on our Pomodoro #macOS sample app with an activity log to track accomplishments displayed in a table view: https://t.co/NHwCfrILH6","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":31,"FavoriteCount":17,"RawContent":null},{"Id":"906729696989208579","CreatedAt":"2017-09-10T04:03:00+00:00","UserScreenname":"xamarinhq","Text":"Build a remote control companion app for Android with Microsoft's Project Rome: https://t.co/SLeQw6q4YO","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":72,"FavoriteCount":44,"RawContent":null},{"Id":"906186115077505025","CreatedAt":"2017-09-08T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to secure web requests using TLS 1.2 with #Xamarin's @JamesMontemagno: https://t.co/zw2y0PaAXH","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"905886118440304640","CreatedAt":"2017-09-07T20:10:55+00:00","UserScreenname":"xamarinhq","Text":"Learn how Digitally Imported delivers 10 iOS and Android music streaming apps to millions of fans around the world:… https://t.co/kgBUUs1NSH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":14,"RawContent":null},{"Id":"905821491916308481","CreatedAt":"2017-09-07T15:54:07+00:00","UserScreenname":"xamarinhq","Text":"Build a sample Android camera app with facial tracking and recognition using Microsoft Cognitive Services’ Face API… https://t.co/5pvUlzdDpn","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":124,"FavoriteCount":64,"RawContent":null},{"Id":"905498723719020545","CreatedAt":"2017-09-06T18:31:33+00:00","UserScreenname":"xamarinhq","Text":"Register now for @XamarinU's upcoming webinar from Charles Petzold on exploring UrhoSharp 3D with Xamarin Workbooks… https://t.co/Mek5tljUl6","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":52,"FavoriteCount":25,"RawContent":null}]}},"RunOn":"2017-09-19T05:30:33.1901869Z","RunDurationInMilliseconds":3650}