{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11310818595","Type":"IssuesEvent","CreatedAt":"2020-01-19T22:03:58","Actor":"SoftCircuits","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7816","RelatedDescription":"Opened issue \"ID Prefix Reservation\" (#7816) at NuGet/NuGetGallery","RelatedBody":"I have twice now followed the instructions for reserving an ID prefix to a name that matches the prefix of all 14 of my packages. It is also a name that I hold a federal trademark on. The second time, I also sent an email to an address I had for NuGet saying that it was my second attempt and that I had heard nothing back from the first attempt.\r\n\r\nIn both cases, I never heard anything back and my ID prefix is still not reserved.\r\n\r\nIs this a process that for some reason is normal to take several months? Or is it possible that the request was silently rejected for some reason? What should be my expectations for sending such an email into the void?"},{"Id":"11310816106","Type":"IssuesEvent","CreatedAt":"2020-01-19T22:03:04","Actor":"SoftCircuits","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7815","RelatedDescription":"Opened issue \"Search Results Display Order\" (#7815) at NuGet/NuGetGallery","RelatedBody":"I know this has been discussed before as I've found old, closed issues about it. But I don't see anything recent.\r\n\r\nIs there any logic used in the order of search results?\r\n\r\nI know this is a tricky issue as I assume many people would try and game the system to display their packages at the top. But is there any rules used at all?\r\n\r\nAs a second point, I have several packages that I really believe people will want if they know about it. Has NuGet ever considered supported any path developers can use to somehow promote their packages. I got a nice boost when first posted. I assume it was listed somewhere. But now people don't know to find it."},{"Id":"11305535397","Type":"PullRequestEvent","CreatedAt":"2020-01-18T06:33:11","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7814","RelatedDescription":"Opened pull request \"Reject packages with duplicate dependency groups\" (#7814) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/7714"},{"Id":"11303942896","Type":"PullRequestEvent","CreatedAt":"2020-01-17T21:28:02","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7795","RelatedDescription":"Merged pull request \"Improve the display package page's performance\" (#7795) at NuGet/NuGetGallery","RelatedBody":"## Introduction\r\n\r\nThis change improves the display package page's performance by optimizing its SQL queries:\r\n\r\n1. The first SQL query gets the metadata for all versions of the package, including their deprecations. Our telemetry shows this query is particularly expensive. I've simplified this query.\r\n1. I reduced the number of lazily loaded SQL queries.\r\n\r\nPart of https://github.com/NuGet/Engineering/issues/2910.\r\nI will validate this change using this [test plan](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc={15b3fddd-11c7-4f67-8f84-456297b3b279}&action=edit&wd=target%28BugBash.one%7Ce898229f-c60d-49f9-8c4a-1906ea8efd76%2FDisplay%20package%20page%20performance%20improvements%7C63ebcec6-9f14-4f20-ab2f-39a73e1b045d%2F%29&wdorigin=703).\r\nSee [postmortem #303385](https://icm.ad.msft.net/imp/v3/incidents/postmortem/303385) to learn about motivations for this change.\r\n\r\n## Results\r\n\r\nI load tested the current display package page (the \"baseline\") and this change (the \"treatment\"). The load test ran for 5 minutes using \"expensive\" traffic captured during incidents. I ran each load test twice to ensure the gallery cloud service and database were \"warm\". Results:\r\n\r\nTest | Request count | Exceptions | Max SQL queries per request | Average Duration (s) | 99 % duration (s) | Max duration (s) | Max DTU | Max Gallery CPU\r\n---- | ---------------- | ------------ | ----------------------------- | ---------------------- | -------------------- | ------------------- | ---------- | ------------------\r\nBaseline |  7,596 | 0 | 9 | 5.074 | 7.026 | 9.282 |  25% | 78%\r\nTreatment | 18,226 | 0 | 9 | 1.582 | 3.78 | 5.82 | 15% | 97%\r\n\r\nTakeaways:\r\n\r\n* ⚠Gallery CPU increased. This is likely because the database is no longer the bottleneck. I'm not too concerned by this as we have autoscaling \r\n* Request duration performance has improved. Requests were 68.8% faster on average and 46.2% faster at the 99th percentile.\r\n* Database DTU decreased by 10%\r\n\r\n<details>\r\n<summary>Results dump</summary>\r\n\r\nBaseline release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=550687\r\nBaseline perf test 1: [LINK](https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&runId=9c11b02c-ae85-457f-aea7-583c06a033d4&name=nuget-gallery-perf.jmx&definitionId=ecebeb3b-4a7a-4992-9091-d24962688de8&definitionType=jMeter)\r\nBaseline perf test 2: [LINK](https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&runId=8fa2a813-710a-4f11-bd95-05a0d4ac5a22&name=nuget-gallery-perf.jmx&definitionId=2020221c-7da0-4667-a199-ce9f7cea38da&definitionType=jMeter)\r\n\r\nTreatment build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3381244\r\nTreatment release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=552513\r\nTreatment perf test 1: [LINK](https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&runId=a1465d27-86b8-4f41-b0a3-f8a2f4093a81&name=nuget-gallery-perf.jmx&definitionId=a206e723-ed05-4019-a343-be96c9fd2694&definitionType=jMeter)\r\nTreatment perf test 2: [LINK](https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&runId=5f8395cf-36d3-4b8d-8f14-e476a3537082&name=nuget-gallery-perf.jmx&definitionId=c25b5694-5c08-483b-a27e-f5bebedcd41a&definitionType=jMeter)\r\n\r\n```\r\n// Baseline #2\r\nrequests\r\n| where timestamp > todatetime(\"1/14/2020, 11:15:00.000 PM\") and timestamp < todatetime(\"1/14/2020, 11:25:30.000 PM\")\r\n| extend CloudDeploymentId_ = tostring(customDimensions.CloudDeploymentId)\r\n| where CloudDeploymentId_ == \"207fc935d47e46c5962e92d262931556\" \r\n| where name == \"GET packages/DisplayPackage\"\r\n| summarize count(), avg(duration/1000), percentiles(duration/1000, 99), max(duration/1000)  //by bin(timestamp, 10s)\r\n\r\n// Treatment #2\r\nrequests\r\n| where timestamp > todatetime('2020-01-15T23:10:00Z') and timestamp < todatetime('2020-01-15T23:30:00Z') \r\n| extend CloudDeploymentId_ = tostring(customDimensions.CloudDeploymentId)\r\n| where CloudDeploymentId_ == \"987d6561696b4b6d8718d9d18820b8cf\" \r\n| where name == \"GET packages/DisplayPackage\"\r\n| summarize count(), avg(duration/1000), percentiles(duration/1000, 99), max(duration/1000)  //by bin(timestamp, 10s)\r\n```\r\n</details>"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11305092863","Type":"IssuesEvent","CreatedAt":"2020-01-18T02:22:15","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9072","RelatedDescription":"Opened issue \"Icon missing after install it in VS PM UI\" (#9072) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nNuGet version: 39963d7775d6ba22e2e5c1373a7cb027ce9bdaa7\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n0. Specify a NuGet source with a local folder. The packages must have embedded icons. Add it to nuget.config ($APPDATA\\NuGet\\NuGet.Config)\r\n1. Open VS, with any project and open NuGet (Manage NuGet packages...)\r\n2. Install a package with an embedded Icon\r\n3. Go to the Installed Tab\r\n"},{"Id":"11304819760","Type":"IssuesEvent","CreatedAt":"2020-01-18T00:37:07","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8899","RelatedDescription":"Closed issue \"Check VSTS Token in Initialize_Build\" (#8899) at NuGet/Home","RelatedBody":"## Details about Problem\r\nMinor CI improvement. We have had builds failing today after running fully, only to fail on the next-to-last step because the test results could not be obtained from VSTS.\r\n\r\nThis is wasteful since those build resources are occupied for hours, and really we should check up-front that we have a good VSTS token.\r\n\r\n[Example Build ](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3304881)for motivation.\r\nLog snapshot:\r\n> Invoke-RestMethod : \r\n>   \r\n>     Access Denied: The Personal Access Token used has expired.\r\n>     html {\r\n>     height: 100%;"},{"Id":"11304663983","Type":"IssuesEvent","CreatedAt":"2020-01-17T23:54:15","Actor":"osmodies","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9071","RelatedDescription":"Opened issue \"nuget restore succeed but project .net don't have content css and js\" (#9071) at NuGet/Home","RelatedBody":"Hi,\r\n\r\nFrom Azure Pipeline restore package succeed, but the content (css,js ,img) of package is not added in Web application .net\r\n![image](https://user-images.githubusercontent.com/19317872/72630201-dc3d5d80-391f-11ea-8d29-f2744282a8b9.png)\r\n\r\nBut, Build application faild \r\n![image](https://user-images.githubusercontent.com/19317872/72630022-79e45d00-391f-11ea-8356-4f8a1be39db2.png)\r\n\r\nIn the case of Visual Studio i must install package again.\r\n\r\nThanks if your help.\r\n"},{"Id":"11304602372","Type":"IssuesEvent","CreatedAt":"2020-01-17T23:38:04","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8653","RelatedDescription":"Closed issue \"Improve ConcurrencyUtilities (reduce CPU usage)\" (#8653) at NuGet/Home","RelatedBody":"`ConcurrencyUtilities.ExecuteWithFileLockedAsync` is used for locking both between processes and within a single process. It works by looping trying to exclusively open a file and sleeping just 10ms when an exception is caught.\r\n\r\nOn a solution with a large number of projects that use the same package, this can cause a lot of wasted CPU cycles because each project will spinlock until the file can be opened.\r\n\r\nThe exclusive file lock is a good idea for concurrent restores across different processes, but NuGet should be more intelligent within a process about locking and waiting."},{"Id":"11304449413","Type":"IssuesEvent","CreatedAt":"2020-01-17T23:01:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8968","RelatedDescription":"Closed issue \"Address VS threading warnings\" (#8968) at NuGet/Home","RelatedBody":"Each one of these can be addressed as a separate issues. \r\nWe should only attempt to tackle these after https://github.com/NuGet/NuGet.Client/pull/3172 has been merged.\r\n- [x] VSTHRD003 https://github.com/NuGet/Home/issues/8976\r\n- [x] VSTHRD010 https://github.com/NuGet/Home/issues/8978\r\n- [x] VSTHRD100 https://github.com/NuGet/Home/issues/8975\r\n- [x] VSTHRD109 https://github.com/NuGet/Home/issues/8978\r\n- [x] VSSDK004 https://github.com/NuGet/Home/issues/8974\r\n- [x] VSSDK005 https://github.com/NuGet/Home/issues/8974\r\n- [x] VSSDK006 https://github.com/NuGet/Home/issues/8974\r\n\r\nfyi @NuGet/nuget-client "},{"Id":"11304412992","Type":"IssuesEvent","CreatedAt":"2020-01-17T22:53:51","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8463","RelatedDescription":"Closed issue \"dotnet list package with multi targeting WPF project\" (#8463) at NuGet/Home","RelatedBody":"From https://github.com/dotnet/cli/issues/12267\r\n\r\n* `dotnet new wpf`\r\n* Replace TargetFramework with <TargetFrameworks>netcoreapp3.0;net45</TargetFrameworks>\r\n* `dotnet restore`\r\n* `dotnet list package`\r\n\r\nRestore succeeded, so `dotnet list package` should too."},{"Id":"11304062381","Type":"IssuesEvent","CreatedAt":"2020-01-17T21:48:20","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9070","RelatedDescription":"Opened issue \"Visual Studio 2017 Enterprise crashes at least twice per hour\" (#9070) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/437369/visual-studio-2017-enterprise-crashes-at-least-twi.html)._\n\n---\nI've had this problem on different computers and projects going back to my first use of Visual Studio in 2010.<br>This is not a computer or project specific issue, but is clearly specific to Visual Studio from the 2010 version to the latest I'm using which is 2017 Enterprise.<br>I have no extensions or addons installed.<br>The symptoms start with Visual Studio occasionally hanging or the intellisense ceasing to work for several seconds.<br>Also project references such as &quot;C++ 2015 runtime for UWP&quot; or the &quot;Microsoft Advertising SDK for XAML&quot; occasionally show yellow triangles against them as though they are no longer recognised.  I then have to right click on either item in references for Visual Studio to start recognising them again.<br>These symptoms preceed a general deterioration of Visual Studio performance which either results in it crashing completely and restarting automatically or hanging indefinately where I then have to use Task Manager to end the Visual Studio task.  Noticably recovery of files currently being editing rarely works to the point of previous editing.<br>This catastrophic failure of Visual Studio occurs at least twice per hour when I'm on a sprint, which usually means I lose 30 minutes or so work at most, however it is one of the reasons why I'm actively considering moving to another IDE such as Eclipse, Rider or MonoDevelop for my future development projects.\n\n---\n### Original Comments\n\n#### Alisa Ma [MSFT] on 1/29/2019, 00:56 AM: \n\n<p>Dear Customer,</p><p>Thanks for your feedback! In order to help us investigate this issue more accurately, could you please provide a repro projects,and a dump.</p><p>You are able to get the files with the following steps:</p><p>- Download ProcDump from <a target=\"_blank\"> https://docs.microsoft.com/en-us/sysinternals/downloads/procdump  </a>and extract to a local folder.</p><p>- Open an Administrator Command Prompt and navigate to ProcDump folder.</p><p>- Run Procdump.exe -w devenv.exe -e 1 -n 1000 -f *ArgumentException* -ma &gt; out.txt</p><p>- Launch Visual Studio and reproduce the error.</p><p>- Close Visual Studio</p><p>- ProcDump should generate some DMP files in the local directory if the exception is thrown</p><p>- Please zip the DMP file, reply to this thread and attach them using the attach / insert button</p><p>We look forward to hearing from you!</p><p>Thanks.</p>\n\n#### pythonesquespam on 2/18/2019, 05:12 PM: \n\n<p>Tried to upload last three dmp files but the upload window does nothing when I click the upload button.  The dump files are 1 Gig when zipped so perhaps such large files aren't allowed??  I uploaded a zipped out.txt file if that's any use to you.  <a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/59933-out.zip\">out.zip</a></p>\n\n#### Alisa Ma [MSFT] on 2/18/2019, 11:08 PM: \n\n<p>Dear Customer,</p><p>Thanks for your reply! We need to this dump file and compress it then attached to us. </p><p>And Dick add a solution for this issue as below, if your issue is the as him, maybe you can reference it.</p><p>Thanks.</p>\n\n#### pythonesquespam on 2/23/2019, 07:50 AM: \n\n(private comment, text removed)\n#### pythonesquespam on 2/23/2019, 08:49 AM: \n\n(private comment, text removed)\n#### Visual Studio Feedback System on 7/9/2019, 11:58 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n\n#### Dick solved on 1/28/2019, 03:00 AM, 0 votes: \n\n<p>Hello Andrew,<br><br>This looks like the problem I had in July 2018 when I installed VS 2017 because VS 2015 did no longer support UWP apps in combination with my W10 version. It took me 1,5 day to get it working. If you read the comments to my original post on<br><br><a target='_blank' href=\"https://developercommunity.visualstudio.com/content/problem/288722/visual-studio-2017-does-not-install-due-to-access.html\" target=\"_blank\">https://developercommunity.visualstudio.com/content/problem/288722/visual-studio-2017-does-not-install-due-to-access.html</a> it may help you as well.<br><br>VS installers are an absolute disaster. I won't install VS 2019 except forced and I don't even install updates for VS 2017. For almost any other software on my Pc I regularly update and it hardly ever takes more than a few minutes.</p><p>Dick</p>\n\n#### pythonesquespam solved on 3/4/2019, 05:55 PM, 0 votes: \n\n<p>I've been battling with Visual Studio since I first started using it at college in 2010.  This issue is just one of many aspects of Microsoft technologies that simply get in the way of development. I find that most of my development effort is about trying to get the technologies to even work, rather than producing the software and that's just not the best use of my time. XAML is full of inconsistencies especially with Binding and the Advert and Store SDK's don't work with anything but the simplest examples. Even testing the Store SDK is no longer possible with the latest version as it uses the live store as it's basis... ridiculous.  So I've decided my next project will use other technologies and I can get away from this awful mess that is Microsoft!</p>\n"},{"Id":"11303077691","Type":"IssuesEvent","CreatedAt":"2020-01-17T19:13:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8370","RelatedDescription":"Closed issue \"Analyze the refresh metrics\" (#8370) at NuGet/Home","RelatedBody":"Follow up to https://github.com/NuGet/Home/issues/8369"},{"Id":"11302836761","Type":"IssuesEvent","CreatedAt":"2020-01-17T18:38:26","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9069","RelatedDescription":"Opened issue \"Embedded Icons in VS could leave open PackageArchiveReaders\" (#9069) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nNuGet version: 39963d7775d6ba22e2e5c1373a7cb027ce9bdaa7\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n0. Specify a NuGet source with a local folder. The packages must have embedded icons\r\n1. Open VS, with any project and open NuGet (Manage NuGet packages...)\r\n2. Leave it open for 20 minutes\r\n3. Scroll the package list up an down\r\n\r\nThere's a posibilty that the icons dissapear because the PackageArchiveReader (PAR) are closed and, because the PAR instances are lazy loaded and memoized, those are not created anymore."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-20T05:30:49.3561964Z","RunDurationInMilliseconds":2247}