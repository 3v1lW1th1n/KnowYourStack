{"Data":{"GitHub":{"Issues":[{"Id":"477113055","IsPullRequest":false,"CreatedAt":"2019-08-06T00:33:16","Actor":"rladuca","Number":"1544","RawContent":null,"Title":"Fix WPF JumpList support and re-enable JumpList tests","State":"open","Body":"The WPF JumpList support broke in Windows 8.1.  This is due to many changes to the shell underneath and the fact that WPF has old versions of Automation proxies that cause us to not be able to find certain items.\r\n\r\nHere are some explanations from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/126798:\r\n\r\n@miguep In case he has any input on this.\r\n```\r\nAfter investigating this issue, it seems that WPF is the one at fault for this, WPF provides some custom out-dated Proxy providers (for standard win32 controls) for UIAutomation to use, this causes UIAutomation to use those providers instead of its more up-to-date defaults (for win32, winforms, WPF), which results in some newer controls (or updated ones) to not be reported when querying UIAutomation.\r\n\r\nIt seems that the easiest solution to this problem would be to remove our call to UiaRegisterProviderCallback, and let UIAutomation use their proxy defaults, I've tested that approach and I've gotten the desired results. The problem is that we need the call to UiaRegisterProviderCallback in order to provide the users with the ability to create their own custom proxy providers.\r\n\r\nThe solution would be to forward the user's custom proxy providers to UIAutomation via IUIAutomationProxyFactory, the problem with this approach is that we need a CUIAutomation object, but creating one of our own does not work, since our stack uses the flat node API, which creates a CUIAutomation object internally, but does not expose it.\r\n\r\nThe other solution would be to re-work all our proxy providers and bring them up-to-date.\r\n\r\nThis issue is caused by the OS call GetWindow, the public call will by default ignore immersive windows (Metro/Universal apps), since the jumplist in Win10 is now a Universal window, all the automation lookups and traversals will ignore it, the only way so far to change this behavior is via the app manifest\r\n\r\n<asmv3:application>\r\n    <asmv3:windowsSettings xmlns=\"http://schemas.microsoft.com/SMI/2011/WindowsSettings\">\r\n      <disableWindowFiltering>true</disableWindowFiltering>\r\n    </asmv3:windowsSettings>\r\n  </asmv3:application>\r\n```","Url":"https://github.com/dotnet/wpf/issues/1544","RelatedDescription":"Open issue \"Fix WPF JumpList support and re-enable JumpList tests\" (#1544)"},{"Id":"476390391","IsPullRequest":true,"CreatedAt":"2019-08-05T21:50:28","Actor":"vatsan-madhavan","Number":"1515","RawContent":null,"Title":"Fix for #1198 - fixes potential crashes in high-DPI applications","State":"closed","Body":"Addresses #1198. \r\n\r\n#### [Watson] clr20r3: CLR_EXCEPTION_System.Collections.Generic.KeyNotFoundException_80131577_PresentationCore.dll!MS.Internal.DpiUtil+DpiAwarenessScope..ctor\r\n\r\n--\r\n\r\nWhen a caller passes in `dpiAwarenessContextValue==Invalid`, `new DpiAwarenessContextHandle(dpiAwarenssContextValue)` throws `KeyNotFoundException`.\r\n\r\nThis happens because we do not have a pre-created pseudo-_HANDLE_  corresponding to `Invalid` in our internal map of pseudo-handles in `DpiAwarenessContextHandle.WellKnownContextValues`. Such a pseudo-handle cannot be created either.\r\n\r\nWhen `dpiAwarenessContextValue=Invalid` is passed, the correct behavior is to treat it as a no-op and simply `return`. The corresponding `Dispose()` will also run benignly and the caller will get the correct behavior - which is that no changes will be made to the thread-state.","Url":"https://github.com/dotnet/wpf/pull/1515","RelatedDescription":"Closed or merged PR \"Fix for #1198 - fixes potential crashes in high-DPI applications\" (#1515)"},{"Id":"476490422","IsPullRequest":true,"CreatedAt":"2019-08-05T21:50:03","Actor":"vatsan-madhavan","Number":"1525","RawContent":null,"Title":"Fix for #1198 - support for DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED","State":"closed","Body":"Addresses #1198.\r\n\r\n#### [Watson] clr20r3: CLR_EXCEPTION_System.Collections.Generic.KeyNotFoundException_80131577_PresentationCore.dll!MS.Internal.DpiUtil+DpiAwarenessScope..ctor\r\n\r\nThis is a 2nd fix approach for this issue, which is a more complete fix IMO compared to https://github.com/dotnet/wpf/pull/1515. This PR must be paired with the PR to the renderer at https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/pullrequest/2498?_a=overview\r\n\r\n\r\n--\r\n\r\nWhen a caller passes in dpiAwarenessContextValue==Invalid, new DpiAwarenessContextHandle(dpiAwarenssContextValue) throws KeyNotFoundException.\r\n\r\nThis happens because we do not have a pre-created pseudo-HANDLE corresponding to Invalid in our internal map of pseudo-handles in DpiAwarenessContextHandle.WellKnownContextValues. Such a pseudo-handle cannot be created either.\r\n\r\nWhen dpiAwarenessContextValue=Invalid is passed, the correct behavior is to treat it as a no-op and simply return. The corresponding Dispose() will also run benignly and the caller will get the correct behavior - which is that no changes will be made to the thread-state.\r\n\r\n\r\n==\r\n\r\nIdeally, this problem should not have happened when only dealing with 'valid' or 'good' `DpiAwarenessCotnextValue` enums (or equivalently, 'good' `DpiAwarenessContextHandle` values).\r\n\r\n\"good\" has two meanings here.\r\n\r\ni. Values recognized by the OS that are valid (as the OS sees it)\r\nii. Values recognized by WP as valid (i.e.., WPF has enough intelligence available to process this mode).\r\n\r\nWPF only knows how to process the following 4 DPI_AWARENESS_CONTEXT_HANDLE values, which were available during active feature development of .NET 4.8.\r\n\r\n- DPI_AWARENESS_CONTEXT_UNAWARE\r\n- DPI_AWARENESS_CONTEXT_SYSTEM_AWARE\r\n- DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE\r\n- DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2\r\n\r\nIt looks like one more value was added in Win10 1809 later in the development cycle which WPF has no understanding of.\r\n\r\n- DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED\r\n\r\nIn [SystemResources.cs](https://github.com/dotnet/wpf/blob/ac9d1b7a6b0ee7c44fd2875a1174b820b3940619/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/SystemResources.cs#L1146), we query HWND's for their DPI related info like this:\r\n\r\n```\r\n    var hwndDpiInfo =\r\n        IsPerMonitorDpiScalingActive ?\r\n        DpiUtil.GetExtendedDpiInfoForWindow(hwndNotify.Handle):\r\n        new DpiUtil.HwndDpiInfo(dpiContextValue, GetDpiScaleForUnawareOrSystemAwareContext(dpiContextValue));\r\n```\r\n\r\n`DpiUtil.GetExtendedDpiInfoForWindow(hwndNotify.Handle)` eventually calls into `new HwndDpiInfo`, which in turn attempts to map `DpiAwarenessContextHandle` -> `DpiAwarenessCotnextValue`. This mapping (which is acheived by an overloaded cast operator)\r\nonly recognizes `DPI_AWARENESS_CONTEXT_HANDLE` values WPF understands. Anything outside of this set is considered `Invalid`.\r\n\r\nI’m reasonably confident that this crash happens because we are getting an `HWND` with `DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED` or something else outside the recognized spectrum.","Url":"https://github.com/dotnet/wpf/pull/1525","RelatedDescription":"Closed or merged PR \"Fix for #1198 - support for DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED\" (#1525)"},{"Id":"477068402","IsPullRequest":false,"CreatedAt":"2019-08-05T21:33:55","Actor":"vsfeedback","Number":"1543","RawContent":null,"Title":"VS 2019 16.2 Hangs when connecting via Remote Desktop","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/661862/vs-2019-162-hangs-when-connecting-via-remote-deskt.html)._\n\n---\nWhen I reconnect to an existing Remote Desktop session on my development machine, the instance of Visual Studio that is already open will hang or become unresponsive. A &quot;Visual Studio is busy&quot; notification will appear after several seconds.\n\nThe development machine is running Visual Studio 2019 16.2 and Windows Server 2012 R2.\n\nI am connecting to the remote via Remote Desktop Connection 10.0.18362.1 on Windows 10.\n\n---\n### Original Comments\n\n#### Fiona Niu[MSFT] on 7/26/2019, 05:16 AM: \n\n<p>Thank you for taking the time to log this issue! Could you please provide more information via the Visual Studio Feedback Tool(Help -&gt; Send Feedback -&gt; Report A Problem)so that we can conduct further research?  The feedback tool  will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace).<br>\nSince this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool:</p>\n<pre><code>• Open Visual Studio Feedback tool.\n \n• Click the banner letting you know that you have problems requesting your attention.\n \n• Click this problem from the list\n\n• Click &quot;View their request and respond&quot; from the problem details banner\n\n• Add a comment, in the Attachments/Record: click Start Recording\n\n• When the Steps Recorder tool appears, perform the steps that reproduce the problem.\n\n• When you're done, choose the Stop Record button.\n \n• Wait a few minutes for Visual Studio to collect and package the information that you recorded.\n\n• Submit. You will be able to see the comment on Developer Community. For security reasons, your files come directly to us and don't appear on Developer Community.\n</code></pre>\n<p>For the full instructions, please see: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info</a> . For information about what data is collected, see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect\">https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect</a></p>\n<p>We look forward to hearing from you!</p>\n\n#### sjeynes on 7/26/2019, 06:09 AM: \n\nI tried recording the steps before, and it said nothing was recorded, even though the problem did occur. I'll give it another try. These are the steps that cause the issue in Visual Studio:<br>1. Open Visual Studio 2019 on the remote server<br>2. Exit the remote session (do not sign out)<br>3. Reconnect to the remote session<br>4. Visual Studio 2019 will consistently be unresponsive in the remote session, even after several minutes<br>This time, I tried the Steps Recorder again, and it became unresponsive after I clicked Stop (screenshot attached). After about 2 minutes, the Steps Recorder said there was an error trying to save the recorded steps.\n#### Fiona Niu[MSFT] on 7/28/2019, 07:41 PM: \n\n<p>Thanks a lot for providing the information. We’re sorry for the issues you’re experiencing. We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 7/30/2019, 06:00 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Visual Studio Feedback System on 7/31/2019, 06:59 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/1543","RelatedDescription":"Open issue \"VS 2019 16.2 Hangs when connecting via Remote Desktop\" (#1543)"},{"Id":"477053849","IsPullRequest":false,"CreatedAt":"2019-08-05T20:54:08","Actor":"SamBent","Number":"1542","RawContent":null,"Title":"Images not drawn by software rendering","State":"open","Body":"(Port of fix in the .NETFx servicing pipeline)\nSoftware rendering fails to draw images (or only partially draws them) when the image position and scaling are too large.  \n\nSoftware rendering does image-processing using integer arithmetic, representing points as \"16.16\" fixed-point numbers (16 bits of integer, 16 bits of fraction).  Thus it cannot deal with quantities whose magnitude exceeds 2^15=32768.   The translation components of the device-to-texture mapping can exceed this limit if the position and scaling of the image are large enough.  For example, the mapping for a 10x10 Image element, sourced to a 500x500 bitmap and positioned 700 pixels from the edge of the enclosing window, has scaling factor 500/10 = 50 and a desired translation of -50*700 = -35000 -- too big.\n\nIn this case the renderer uses the closest available number, -32768, causing it to sample the source bitmap too far to the right.  This produces a result equivalent to painting the image at the maximum \"working\" offset then clipping by the actual position of the Image.  In other words, as the Image moves to the right, the picture stops moving when the maximum offset is reached, and instead gets clipped on its left side until it eventually disappears altogether.\n\nFix:\nUse an adjusted mapping, relative to an \"origin\" point.  When mapping from device to texture, subtract the origin (in regular \"int\" coords), then apply the adjusted 16.16 mapping.  The adjusted mapping's translation components depend on the distance from the origin, rather than from the window-edge, so choosing an origin point that's close to the Image position will avoid the overflow.\n","Url":"https://github.com/dotnet/wpf/issues/1542","RelatedDescription":"Open issue \"Images not drawn by software rendering\" (#1542)"},{"Id":"477014840","IsPullRequest":false,"CreatedAt":"2019-08-05T19:13:58","Actor":"SamBent","Number":"1541","RawContent":null,"Title":"WPF controls in a RowVirtualized DataGrid control lose their value after scrolling","State":"open","Body":"(Port of recent .NETFx servicing fix)\nComboBox (or any Selector) displays the wrong value for SelectedValue (or any selection property) when\n1. ComboBox is declared in a cell template of a DataGrid\n2. Both ItemsSource and SelectedValue are bound to the row's data item via implicit DataContext (as opposed to explicit Source, ElementName, RelativeSource, etc.)\n3. DataGrid row virtualization is enabled.\n4. Item is re-virtualized, then de-virtualized.  E.g. scrolling it out of view, then back in.\n\nRoot cause:\nRe-virtualization causes the item's UI to be disconnected.  This sets DataContext to {DisconnectedItem}, which should set ItemsSource to null and leave SelectedValue unchanged, while removing property-changed listeners and other similar cleanup.  But if ItemsSource happens first, Selector tries to change SelectedValue (to null).   In a DataGrid, this records null as the \"proposed value\" of SelectedValue, (awaiting writing to the data item when the row-edit is committed).   When the item is later de-virtualized, the cell displays the proposed value (null).\n\nFix:  Selector should not change its selection properties, when reacting to being disconnected.","Url":"https://github.com/dotnet/wpf/issues/1541","RelatedDescription":"Open issue \"WPF controls in a RowVirtualized DataGrid control lose their value after scrolling\" (#1541)"},{"Id":"477004358","IsPullRequest":false,"CreatedAt":"2019-08-05T18:46:21","Actor":"SamBent","Number":"1540","RawContent":null,"Title":"Crash inserting text in front of Hyperlink when spelling is enabled","State":"open","Body":"Hard crash (FailFast) when inserting text in front of a Hyperlink in a RichTextBox, when spell-checking is enabled.\n\nThis is a port of a recent servicing fix in .NETFx.","Url":"https://github.com/dotnet/wpf/issues/1540","RelatedDescription":"Open issue \"Crash inserting text in front of Hyperlink when spelling is enabled\" (#1540)"},{"Id":"476996121","IsPullRequest":false,"CreatedAt":"2019-08-05T18:24:56","Actor":"SamBent","Number":"1539","RawContent":null,"Title":"Port Editing test fixes from .NET 4.8","State":"open","Body":"Two changes to Editing tests made recently in .NET 4.8 need to be ported to .NETCore.\n1. \"TripleClick\" tests fail because they rely on the old behavior of Input.SendMouseInput, which implicitly did a mouse-move when the Absolute flag was present.\n2. Speller tests are missing correct version numbers.","Url":"https://github.com/dotnet/wpf/issues/1539","RelatedDescription":"Open issue \"Port Editing test fixes from .NET 4.8\" (#1539)"},{"Id":"476545911","IsPullRequest":true,"CreatedAt":"2019-08-05T18:01:09","Actor":"dotnet-maestro[bot]","Number":"1527","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1527","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1527)"},{"Id":"476845861","IsPullRequest":true,"CreatedAt":"2019-08-05T17:52:32","Actor":"dotnet-maestro[bot]","Number":"1536","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190804.11\r\n- **Date Produced**: 8/4/2019 11:44 PM\r\n- **Commit**: e60b98724b39748b7ceec0bd73f03cfe3ff49db2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19404.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1536","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1536)"},{"Id":"476956011","IsPullRequest":true,"CreatedAt":"2019-08-05T17:01:07","Actor":"dotnet-maestro[bot]","Number":"1538","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.4\r\n- **Date Produced**: 8/5/2019 4:00 PM\r\n- **Commit**: 1d51f96ffdedd2f506d92f18af4d67a17e382f6a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1538","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1538)"},{"Id":"476863552","IsPullRequest":true,"CreatedAt":"2019-08-05T14:06:14","Actor":"dotnet-maestro[bot]","Number":"1537","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.3\r\n- **Date Produced**: 8/5/2019 12:53 PM\r\n- **Commit**: 5b18e1741342e3f9b89d69f8bfafe224da419c9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1537","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1537)"},{"Id":"476845824","IsPullRequest":true,"CreatedAt":"2019-08-05T14:00:25","Actor":"dotnet-maestro[bot]","Number":"1535","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190804.11\r\n- **Date Produced**: 8/4/2019 11:44 PM\r\n- **Commit**: e60b98724b39748b7ceec0bd73f03cfe3ff49db2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19404.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1535","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1535)"},{"Id":"476822944","IsPullRequest":true,"CreatedAt":"2019-08-05T12:28:04","Actor":"dotnet-maestro[bot]","Number":"1534","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1534","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1534)"},{"Id":"476811946","IsPullRequest":true,"CreatedAt":"2019-08-05T12:16:14","Actor":"dotnet-maestro[bot]","Number":"1533","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.2\r\n- **Date Produced**: 8/5/2019 10:48 AM\r\n- **Commit**: f477b2a5e3ae17a4524339b6a81ba66f6ba60411\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1533","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1533)"},{"Id":"476783712","IsPullRequest":true,"CreatedAt":"2019-08-05T11:16:23","Actor":"dotnet-maestro[bot]","Number":"1532","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.1\r\n- **Date Produced**: 8/5/2019 9:52 AM\r\n- **Commit**: f2221a740df596fc526f6d9dfcfb7f5947b1f473\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1532","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1532)"},{"Id":"476590123","IsPullRequest":false,"CreatedAt":"2019-08-04T21:07:08","Actor":"rogalmic","Number":"1531","RawContent":null,"Title":"Generate xml documentation files for public WPF api","State":"closed","Body":"Would there be a possibity to include autogenerated C# xml documentation in github releases?\r\n\r\n![image](https://user-images.githubusercontent.com/23117003/62428759-ac99f080-b705-11e9-9998-38c9dae160cc.png)\r\n\r\nIt would be good to have those for public part of WPF API...","Url":"https://github.com/dotnet/wpf/issues/1531","RelatedDescription":"Closed issue \"Generate xml documentation files for public WPF api\" (#1531)"},{"Id":"476554774","IsPullRequest":true,"CreatedAt":"2019-08-04T14:01:06","Actor":"dotnet-maestro[bot]","Number":"1530","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 1:01 PM\r\n- **Commit**: 75f26eb8c2f1ab43dd0b202c2c54023b38856eec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19404.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1530","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1530)"},{"Id":"476551303","IsPullRequest":true,"CreatedAt":"2019-08-04T13:53:18","Actor":"dotnet-maestro[bot]","Number":"1529","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190803.11\r\n- **Date Produced**: 8/3/2019 10:00 PM\r\n- **Commit**: 3148ef691f39dba670f9e4767f21abf31c40541c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19403.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1529","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1529)"},{"Id":"476551237","IsPullRequest":true,"CreatedAt":"2019-08-04T13:42:33","Actor":"dotnet-maestro[bot]","Number":"1528","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190803.11\r\n- **Date Produced**: 8/3/2019 10:00 PM\r\n- **Commit**: 3148ef691f39dba670f9e4767f21abf31c40541c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19403.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1528","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1528)"},{"Id":"476545897","IsPullRequest":true,"CreatedAt":"2019-08-04T13:09:25","Actor":"dotnet-maestro[bot]","Number":"1526","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 1:03 PM\r\n- **Commit**: 3b75ef38a33579dcd32f2912ee69e886356b0f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19403.1\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1526","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1526)"},{"Id":"476445538","IsPullRequest":true,"CreatedAt":"2019-08-03T19:17:43","Actor":"dotnet-maestro[bot]","Number":"1520","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190802.16\r\n- **Date Produced**: 8/3/2019 12:35 AM\r\n- **Commit**: d8457f6ba527aef165ff6fb0aded44bf8123ce83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19402.16\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1520","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1520)"},{"Id":"476445583","IsPullRequest":true,"CreatedAt":"2019-08-03T19:17:18","Actor":"dotnet-maestro[bot]","Number":"1521","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190802.16\r\n- **Date Produced**: 8/3/2019 12:35 AM\r\n- **Commit**: d8457f6ba527aef165ff6fb0aded44bf8123ce83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19402.16\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1521","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1521)"},{"Id":"476451991","IsPullRequest":true,"CreatedAt":"2019-08-03T13:56:09","Actor":"dotnet-maestro[bot]","Number":"1524","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 12:52 PM\r\n- **Commit**: 04dadb073abc4d8f5fe6319c6b50493dc48ebd8e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19403.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1524","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1524)"},{"Id":"476449768","IsPullRequest":true,"CreatedAt":"2019-08-03T13:50:56","Actor":"dotnet-maestro[bot]","Number":"1523","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190802.13\r\n- **Date Produced**: 8/3/2019 6:26 AM\r\n- **Commit**: ee8eb14bd1f10c5b3612be15fa23a23944eff76f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19402.13\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1523","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1523)"},{"Id":"476449342","IsPullRequest":true,"CreatedAt":"2019-08-03T13:35:19","Actor":"dotnet-maestro[bot]","Number":"1522","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190802.13\r\n- **Date Produced**: 8/3/2019 6:26 AM\r\n- **Commit**: ee8eb14bd1f10c5b3612be15fa23a23944eff76f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19402.13\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1522","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1522)"},{"Id":"476438558","IsPullRequest":false,"CreatedAt":"2019-08-03T10:27:47","Actor":"elyoh","Number":"1519","RawContent":null,"Title":"SpellerHighlightLayer uses hard coded spell check squiggle color","State":"open","Body":"The [spell check underline squiggle](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Documents/SpellerHighlightLayer.cs#L153) uses a hard coded color.  This behaviour is undesirable as it can lead to accessibility problems for users with color vision deficiency and when using custom themes.\r\n\r\nFor example, when the red squiggle is displayed on a black background (if using the HC Black theme) [insufficient color contrast is predicted](https://accessibilityinsights.io/) for users with Red-Weak/Protanomaly (and Green-Weak/Deuteranomaly). \r\n\r\nOriginal view\r\n![Capture](https://user-images.githubusercontent.com/14054078/62410535-bd9c1200-b5de-11e9-9403-ec0c4f15931a.PNG)\r\n\r\n[Red-Weak/Protanomaly simulation](https://www.color-blindness.com/coblis-color-blindness-simulator/)\r\n![redweak](https://user-images.githubusercontent.com/14054078/62410538-c0970280-b5de-11e9-9fc4-27bed00d84ee.PNG)\r\n![redweakmax](https://user-images.githubusercontent.com/14054078/62410656-8b8baf80-b5e0-11e9-83bc-e100dd6b68f9.PNG)\r\n\r\nIdeally it would be possible to override this color from controls which support spell check.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1519","RelatedDescription":"Open issue \"SpellerHighlightLayer uses hard coded spell check squiggle color\" (#1519)"},{"Id":"476435240","IsPullRequest":false,"CreatedAt":"2019-08-03T09:43:49","Actor":"elyoh","Number":"1518","RawContent":null,"Title":"DocumentViewer uses hard coded page border and drop shadow colors","State":"open","Body":"[DocumentGridPage](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationFramework/MS/Internal/documents/DocumentGridPage.cs) renders pages in the DocumentViewer.  If the ShowPageBorders property is true, a border and drop shadow are shown around the page.\r\n\r\n![documentgrid issue](https://user-images.githubusercontent.com/14054078/62410077-bffb6d80-b5d8-11e9-9dd4-1774b515a867.png)\r\n\r\nCurrently:\r\n- The page border and drop shadow use hard coded colors and sizes.\r\n- It is not possible to have a page border without a drop shadow.\r\n\r\nThese behaviors are undesirable when using custom themes.\r\n","Url":"https://github.com/dotnet/wpf/issues/1518","RelatedDescription":"Open issue \"DocumentViewer uses hard coded page border and drop shadow colors\" (#1518)"},{"Id":"476431638","IsPullRequest":false,"CreatedAt":"2019-08-03T08:58:00","Actor":"elyoh","Number":"1517","RawContent":null,"Title":"Highlight annotations and sticky note annotations on FlowDocument use hard coded colors","State":"open","Body":"When highlight annotations or sticky note annotations are made to a FlowDocument, the highlight (and anchor) use hard coded colors.  This behavior is undesirable as it can lead to accessibility problems when using custom themes.\r\n\r\n![sticky note annotation issue](https://user-images.githubusercontent.com/14054078/62409726-95f37c80-b5d3-11e9-8da0-828e6a0b17a3.PNG)\r\n\r\nThe sticky note highlight annotation uses hard coded colors defined here:\r\n\r\n[MarkedHighlightComponent.cs \r\n ](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationFramework/MS/Internal/Annotations/Component/MarkedHighlightComponent.cs#L1143)\r\n```csharp\r\ninternal static Color DefaultAnchorBackground = (Color)ColorConverter.ConvertFromString(\"#3380FF80\");\r\ninternal static Color DefaultMarkerColor = (Color)ColorConverter.ConvertFromString(\"#FF008000\");\r\ninternal static Color DefaultActiveAnchorBackground = (Color)ColorConverter.ConvertFromString(\"#3300FF00\");\r\ninternal static Color DefaultActiveMarkerColor = (Color)ColorConverter.ConvertFromString(\"#FF008000\");\r\n```\r\nThe highlight annotation uses hard coded colors defined here:\r\n\r\n[HighlightComponent.cs](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationFramework/MS/Internal/Annotations/Component/HighlightComponent.cs#L680)\r\n\r\n```csharp\r\nprivate Color _defaultBackroundColor = (Color)ColorConverter.ConvertFromString(\"#33FFFF00\");\r\nprivate Color _defaultActiveBackgroundColor = (Color)ColorConverter.ConvertFromString(\"#339ACD32\");\r\n```\r\n\r\nIt ought to be possible to set these colors from the controls which support annotations i.e. FlowDocumentReader and FlowDocumentScrollViewer which derive from DocumentViewerBase.\r\n\r\nCurrently the only way to alter the highlight color is to manually modify the AnnotationResource objects in the Annotation.Cargos each time an annotation is loaded or when the application or system theme changes.  The anchor colors can only be set via reflection.","Url":"https://github.com/dotnet/wpf/issues/1517","RelatedDescription":"Open issue \"Highlight annotations and sticky note annotations on FlowDocument use hard coded colors\" (#1517)"},{"Id":"476408739","IsPullRequest":true,"CreatedAt":"2019-08-03T03:16:02","Actor":"dotnet-maestro[bot]","Number":"1516","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190802.5\r\n- **Date Produced**: 8/3/2019 2:14 AM\r\n- **Commit**: 44b5076b843a67ab8497fe73c17576ef3e4dbd99\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19402.5\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1516","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1516)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-06T05:30:55.9278459Z","RunDurationInMilliseconds":493}