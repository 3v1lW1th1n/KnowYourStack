{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Updated: January 22, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7142005453","Type":"PullRequestEvent","CreatedAt":"2018-01-24T03:56:43","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15990","RelatedDescription":"Merged pull request \"Delete dead code\" (#15990) at dotnet/coreclr","RelatedBody":""},{"Id":"7142004772","Type":"PullRequestEvent","CreatedAt":"2018-01-24T03:56:25","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15976","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, PgoData to prerelease-02423-02, preview2-26124-01, preview2-26124-02, master-20180123-0043, respectively (master)\" (#15976) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7141992911","Type":"PullRequestEvent","CreatedAt":"2018-01-24T03:51:44","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15949","RelatedDescription":"Merged pull request \"Fix 64 bit shift inconsistencies (on 32 bit targets)\" (#15949) at dotnet/coreclr","RelatedBody":"Recent shift changes made the `JIT_LLsh` helper mask the shift count to 6 bits. The other 2 helpers (`JIT_LRsh` and `JIT_LRsz`) so now we get inconsistencies such as `(x >> 64) != (x << 64)`.\r\n\r\nThe ECMA spec says that \"the return value is unspecified if shiftAmount is greater than or equal to the width of value\" so the JIT has no obligation to implement a particular behavior. But it seems preferable to have all shift instructions behave similarly, it avoids complications and reduces risks.\r\n\r\nThis also changes `ValueNumStore::EvalOpIntegral` to mask the shift count for 64 bit shifts so it matches `gtFoldExprConst`. Otherwise the produced value depends on the C/C++ compiler's behavior."},{"Id":"7141835788","Type":"PullRequestEvent","CreatedAt":"2018-01-24T02:53:31","Actor":"swgillespie","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15873","RelatedDescription":"Merged pull request \"[Local GC] FEATURE_EVENT_TRACE 1/n: Tracking Event State\" (#15873) at dotnet/coreclr","RelatedBody":"This PR is the first of several PRs implementing [this design](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/standalone-gc-eventing.md) bringing FEATURE_EVENT_TRACE to standalone GCs. This PR implements the portion of the design that [keeps track of what events are enabled](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/standalone-gc-eventing.md#querying-whether-events-are-enabled).\r\n\r\nThe approach taken in this PR is fundamentally the same as the one described in the design document, with some minor tweaks to `GCEventState`.\r\n\r\nThe `GCEventState` class described in the spec was simplified somewhat, based on some insights I had when experimenting with ETW. There is no need to draw any distinction between enabling\r\nor disabling a provider, since the `EtwCallback` installed by the runtime receives the level and keyword state after applying the delta that a log enabler (e.g. logman) has created. For example, for the following sequence of events:\r\n\r\n```\r\nlogman start trace1 -p {clr-provider-guid} 0x1 0x5 -ets\r\nlogman start trace2 -p {clr-provider-guid} 0x2 0x4 -ets\r\nlogman stop trace1 -ets\r\nlogman stop trace2 -ets\r\n```\r\n\r\n`EtwCallback` is invoked four times, with the following arguments:\r\n\r\n```\r\nEtwCallback(Level=5, Keyword=1, EVENT_CONTROL_CODE_ENABLE_PROVIDER)\r\nEtwCallback(Level=5, Keyword=3, EVENT_CONTROL_CODE_ENABLE_PROVIDER)\r\nEtwCallback(Level=4, Keyword=2, EVENT_CONTROL_CODE_ENABLE_PROVIDER)\r\nEtwCallback(Level=0, Keyword=0, EVENT_CONTROL_CODE_DISABLE_PROVIDER)\r\n```\r\n\r\nWe can pass the level and keyword information verbatim to the GC and no additional logic is\r\nnecessary; the ETW subsystem is already keeping track of which trace client has what level and keyword enabled so the GC doesn't need to do it. The GC doesn't even need to know if a provider\r\nis being enabled or disabled since it can just take the information ETW gives it.\r\n\r\nInstead of having separate `Enable` and `Disable` code paths on `GCEventState`, as written in the spec, this PR has a single `Set` entry point that sets the GC's level and keyword state for a provider to exactly what is given to `Set` as arguments, which in turn comes directly from ETW."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7141485737","Type":"PullRequestEvent","CreatedAt":"2018-01-24T00:53:56","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8458","RelatedDescription":"Merged pull request \"update fsharp compiler to match vs2017.6 preview 3\" (#8458) at dotnet/cli","RelatedBody":"Update FSharp Compiler.\r\n\r\n@livarcocc This is needed to align FSharp with the version shipped in VS 15.6 preview 3"},{"Id":"7141260039","Type":"IssuesEvent","CreatedAt":"2018-01-23T23:41:49","Actor":"AngelosP","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8459","RelatedDescription":"Opened issue \"Updated message for the MSI installer\" (#8459) at dotnet/cli","RelatedBody":"For the next version of the MSI installer, we want to include the following message:\r\n\r\nInstalling this preview of the .NET Core SDK will cause Visual Studio 15 Update 1-5 to use the tools contained in this preview. Learn how to avoid this behavior [here](https://go.microsoft.com/fwlink/?linkid=866799)."},{"Id":"7140934133","Type":"IssuesEvent","CreatedAt":"2018-01-23T22:19:51","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8456","RelatedDescription":"Closed issue \"Building a sln with a Windows Service csproj using dotnet build fails\" (#8456) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet build solutionWithWindowsService.sln\r\n\r\n## Expected  behavior\r\nSolution builds successfully\r\n\r\n## Actual behavior\r\nC:\\Program Files\\dotnet\\sdk\\2.1.4\\Microsoft.Common.CurrentVersion.targets(2979,5): error MSB4216: Could not run the \"GenerateResource\" task because MSBuild could not create or connect to a task host with runtime \"CLR4\" and architecture \"x86\".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable \"C:\\Program Files\\dotnet\\sdk\\2.1.4\\MSBuild.exe\" exists and can be run. [D:\\git\\DemoWindowsService.csproj]\r\n    0 Warning(s)\r\n\r\n## Environment data\r\n$ dotnet --info\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7140815150","Type":"PullRequestEvent","CreatedAt":"2018-01-23T21:54:51","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8458","RelatedDescription":"Opened pull request \"update fsharp compiler to match vs2017.6 preview 3\" (#8458) at dotnet/cli","RelatedBody":"Update FSharp Compiler.\r\n\r\n@livarcocc This is needed to align FSharp with the version shipped in VS 15.6 preview 3"},{"Id":"7140802511","Type":"PullRequestEvent","CreatedAt":"2018-01-23T21:52:14","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8455","RelatedDescription":"Closed pull request \"Update F# compiler\" (#8455) at dotnet/cli","RelatedBody":"Update FSharp Compiler.\r\n\r\n@livarcocc This is needed to align FSharp with the version shipped in VS 15.6 preview 3"},{"Id":"7140753562","Type":"IssuesEvent","CreatedAt":"2018-01-23T21:41:56","Actor":"AngelosP","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8457","RelatedDescription":"Opened issue \"Add a \"high importance\" message when building using a preview version of .NET Core\" (#8457) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nI have .NET Core 2.0 stable on my machine and a bunch of projects using it.\r\nI download and install .NET Core 2.1 preview.\r\nI build one of my existing .NET Core 2.0 applications.\r\n\r\n## Expected  behavior\r\nApplication is built using the 2.1 Preview build tasks & targets \r\n\r\n## Actual behavior\r\nApplication is built using the 2.1 Preview build tasks & targets\r\n+\r\nA build message (classification \"high importance\") let's me know that I'm building the application using preview build tasks & targets. This message includes a link that points to documentation explaining the finer details.\r\n\r\n## Comment\r\nThis isn't really about expected vs not-expected behavior. It's more about being transparent and not surprising anyone. Some will expect the application to build using the 2.1 preview build tasks & targets and that's great. This is about giving the people who didn't expect that an opportunity to learn that's what's happening.\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7140588746","Type":"IssuesEvent","CreatedAt":"2018-01-23T21:06:53","Actor":"zeus82","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8456","RelatedDescription":"Opened issue \"Building a sln with a Windows Service csproj using dotnet build fails\" (#8456) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet build solutionWithWindowsService.sln\r\n\r\n## Expected  behavior\r\nSolution builds successfully\r\n\r\n## Actual behavior\r\nC:\\Program Files\\dotnet\\sdk\\2.1.4\\Microsoft.Common.CurrentVersion.targets(2979,5): error MSB4216: Could not run the \"GenerateResource\" task because MSBuild could not create or connect to a task host with runtime \"CLR4\" and architecture \"x86\".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable \"C:\\Program Files\\dotnet\\sdk\\2.1.4\\MSBuild.exe\" exists and can be run. [D:\\git\\DemoWindowsService.csproj]\r\n    0 Warning(s)\r\n\r\n## Environment data\r\n$ dotnet --info\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7140535364","Type":"PullRequestEvent","CreatedAt":"2018-01-23T20:55:44","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8455","RelatedDescription":"Opened pull request \"Update F# compiler\" (#8455) at dotnet/cli","RelatedBody":"Update FSharp Compiler.\r\n\r\n@livarcocc This is needed to align FSharp with the version shipped in VS 15.6 preview 3"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7140329255","Type":"PullRequestEvent","CreatedAt":"2018-01-23T20:13:01","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/627","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02423-01 (master)\" (#627) at dotnet/standard","RelatedBody":""},{"Id":"7140094288","Type":"PullRequestEvent","CreatedAt":"2018-01-23T19:26:10","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/622","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02422-01 (master)\" (#622) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7141843670","Type":"PullRequestEvent","CreatedAt":"2018-01-24T02:56:16","Actor":"caesar1995","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26525","RelatedDescription":"Merged pull request \"Enable HttpProtocolTests test cases on .NET Core\" (#26525) at dotnet/corefx","RelatedBody":"Removed test data which will fail on .NET Framework, .NET Core and ManagedHandler.\r\nEnabled all test data which will pass on .NET Core and ManagedHandler.\r\n\r\nCloses: #26455\r\nContributes: #24713"},{"Id":"7141843663","Type":"IssuesEvent","CreatedAt":"2018-01-24T02:56:15","Actor":"caesar1995","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26455","RelatedDescription":"Closed issue \"Fix HTTP Status line parsing to be more tolerant of white space\" (#26455) at dotnet/corefx","RelatedBody":"HTTP status line has a optional status description field, i.e., \"HTTP/1.1 200 OK\", \"OK\" is the StatusDescription.\r\n\r\nFrom RFC 7230: 3.1.2.  Status Line\r\n\r\n>   The first line of a response message is the status-line, consisting\r\n   of the protocol version, a space (SP), the status code, another\r\n   space, a possibly empty textual phrase describing the status code,\r\n   and ending with CRLF.\r\n\r\nSo a valid HTTP status line without status description should like this: \"HTTP/1.1 200 \" (contains a space at the end, which ASCII value is 0x20).\r\n\r\nHowever, Fiddler will trim out the white space at the end, which violate the RFC. Here is the evidence:\r\n\r\nThis is the address used for testing: `http://coastwatch.pfeg.noaa.gov/erddap/wms/jplAmsreSstMon_LonPM180/request?VERSION=1.3.0&SERVICE=WMS&REQUEST=GetCapabilities`\r\n\r\nWithout Fiddler: (notice the space after status code 200)\r\n![noproxy](https://user-images.githubusercontent.com/8537784/35165671-1cf34754-fd04-11e7-8017-1db7257d2b7b.PNG)\r\n\r\nWith Fiddler and do loopback packet capture:\r\n![withproxy](https://user-images.githubusercontent.com/8537784/35165765-5c6092e8-fd04-11e7-829f-0830165b8566.PNG)\r\n\r\nThis will cause `NullRefernceException` on .NET Framework under some conditions. (#25741 )\r\n\r\nFor now, .NET Core doesn't has the same issue, but we should notice this behavior. Since we cannot change how Fiddler works, we need to make our code more robust on dealing with this situation.\r\n\r\n/cc: @geoffkizer @karelz "},{"Id":"7141831500","Type":"PullRequestEvent","CreatedAt":"2018-01-24T02:52:01","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26559","RelatedDescription":"Opened pull request \"Add netfx placeholder configurations for inbox projects and enable netfx tests\" (#26559) at dotnet/corefx","RelatedBody":"This is part of the projects that need to be ignored. \r\n\r\nMissing: System.ComponentModel.Composition and https://github.com/dotnet/corefx/issues/24517\r\n\r\ncc: @weshaggard @danmosemsft \r\n\r\nFYI: @tarekgh @pjanotti "},{"Id":"7141656287","Type":"PullRequestEvent","CreatedAt":"2018-01-24T01:51:25","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26555","RelatedDescription":"Merged pull request \"Remove leftover un-needed assert in DS tests\" (#26555) at dotnet/corefx","RelatedBody":""},{"Id":"7141563125","Type":"PullRequestEvent","CreatedAt":"2018-01-24T01:19:18","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26557","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#26557) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7141524031","Type":"PullRequestEvent","CreatedAt":"2018-01-24T01:06:24","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26558","RelatedDescription":"Opened pull request \"Port the DirectoryService test fix from master branch\" (#26558) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7141937801","Type":"IssuesEvent","CreatedAt":"2018-01-24T03:30:28","Actor":"aobatact","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24413","RelatedDescription":"Opened issue \"Description of Deconstruct\" (#24413) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n15.5.2\r\n![8](https://user-images.githubusercontent.com/20785944/35312492-11879416-00ff-11e8-8c9f-1b4c82ccf5f2.png)\r\n![10](https://user-images.githubusercontent.com/20785944/35312505-228c9e82-00ff-11e8-920f-9d02a84f0e97.png)\r\n\r\nCurrently what ever object is deconstructed, it shows the description of deconstructing ValueTuple\r\n\r\n\r\n\r\n"},{"Id":"7141875529","Type":"IssuesEvent","CreatedAt":"2018-01-24T03:07:22","Actor":"npolyak","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24412","RelatedDescription":"Opened issue \"Cannot get internal members of a Type from within INamedTypeSymbol\" (#24412) at dotnet/roslyn","RelatedBody":"I am getting a referenced type from a compilation by using Compilation.GetTypeByMetadataName(...) method. Then I use INamedTypeSymbol.GetMembers() method to get all its member symbols. I am getting all public and protected symbols but neither private or internal. I do not care much about private member symbols, but internals are a must for me. Is there any way to get them from a Roslyn compilation?\r\n"},{"Id":"7141677861","Type":"PullRequestEvent","CreatedAt":"2018-01-24T01:58:49","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24199","RelatedDescription":"Merged pull request \"Support System.Enum as a valid generic type constraint\" (#24199) at dotnet/roslyn","RelatedBody":"Enables using `System.Enum` as a constraint for generic parameters. Example:\r\n```csharp\r\nclass Test<T> where T : System.Enum\r\n{\r\n}\r\n```\r\nLanguage design issue: https://github.com/dotnet/csharplang/issues/104\r\nRoslyn issue: https://github.com/dotnet/roslyn/issues/262\r\n\r\n@dotnet/roslyn-compiler @dotnet/roslyn-ide @VSadov  for review"},{"Id":"7141651690","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:49:51","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21134","RelatedDescription":"Closed issue \"ContainsChildrenGraphQuery.GetGraphicAsync crashes due to invalid characters in path\" (#21134) at dotnet/roslyn","RelatedBody":"This is from this community item: https://developercommunity.visualstudio.com/content/problem/76525/creating-a-nuget-package-from-uwp-library-using-th.html and it is likely a .NET Core project.\r\n\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.GetExtension(String path)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.Progression.ContainsChildrenGraphQuery.<GetGraphAsync>d__0.MoveNext()\r\n```"},{"Id":"7141529290","Type":"PullRequestEvent","CreatedAt":"2018-01-24T01:08:08","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24411","RelatedDescription":"Opened pull request \"Disable NuGet package restore in Visual Studio for Roslyn.sln\" (#24411) at dotnet/roslyn","RelatedBody":"Infrastructure only change"},{"Id":"7141470241","Type":"IssuesEvent","CreatedAt":"2018-01-24T00:48:45","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24408","RelatedDescription":"Closed issue \"Debugging scenario: Call stack with C# and F# frames\" (#24408) at dotnet/roslyn","RelatedBody":"Validates navigation to sources from Call Stack window with frames from multiple languages.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open a solution with a C# console app that references an F# class library:\r\n[Repro.zip](https://github.com/dotnet/roslyn/files/1657845/Repro.zip)\r\n\r\n2. Place breakpoint to `printfn \"Hello %s\" name` in F# library.\r\n3. F5 with the console app project as a startup project.\r\n\r\nThe program should stop the the breakpoint with the following Call Stack:\r\n![image](https://user-images.githubusercontent.com/41759/35304460-6d52bc36-004a-11e8-84a4-61ee1b47136f.png)\r\n\r\n4. Double-click on the first frame, it should navigate to the F# source.\r\n5. Double-click on the second frame, it should navigate to the C# source.\r\n\r\n"},{"Id":"7141428370","Type":"IssuesEvent","CreatedAt":"2018-01-24T00:34:55","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/20900","RelatedDescription":"Closed issue \"Move Microsoft.NETCore.Compilers to a release package\" (#20900) at dotnet/roslyn","RelatedBody":"This should be an \"official\" release package for CoreCLR as soon as https://github.com/dotnet/roslyn/issues/16717 is completed."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7142131983","Type":"PullRequestEvent","CreatedAt":"2018-01-24T04:49:31","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5285","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5285) at dotnet/corert","RelatedBody":""},{"Id":"7142131633","Type":"PullRequestEvent","CreatedAt":"2018-01-24T04:49:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5285","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5285) at dotnet/corert","RelatedBody":""},{"Id":"7141940436","Type":"PullRequestEvent","CreatedAt":"2018-01-24T03:31:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5284","RelatedDescription":"Merged pull request \"Update dependencies\" (#5284) at dotnet/corert","RelatedBody":""},{"Id":"7141820397","Type":"PullRequestEvent","CreatedAt":"2018-01-24T02:48:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5284","RelatedDescription":"Opened pull request \"Update dependencies\" (#5284) at dotnet/corert","RelatedBody":""},{"Id":"7141765653","Type":"PullRequestEvent","CreatedAt":"2018-01-24T02:29:01","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5283","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5283) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7141660074","Type":"PullRequestEvent","CreatedAt":"2018-01-24T01:52:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5282","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5282) at dotnet/corert","RelatedBody":""},{"Id":"7141509711","Type":"PullRequestEvent","CreatedAt":"2018-01-24T01:01:46","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5283","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5283) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7141423880","Type":"PullRequestEvent","CreatedAt":"2018-01-24T00:33:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5282","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5282) at dotnet/corert","RelatedBody":""},{"Id":"7141421170","Type":"PullRequestEvent","CreatedAt":"2018-01-24T00:32:37","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5281","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5281) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7140226171","Type":"PullRequestEvent","CreatedAt":"2018-01-23T19:52:11","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5281","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5281) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7141479094","Type":"PullRequestEvent","CreatedAt":"2018-01-24T00:51:36","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1868","RelatedDescription":"Merged pull request \"Removing 1705 from the NoWarn list for CSharp.\" (#1868) at dotnet/sdk","RelatedBody":"Fixes https://github.com/dotnet/sdk/issues/1232\r\n\r\n@dotnet/dotnet-cli "},{"Id":"7141479086","Type":"IssuesEvent","CreatedAt":"2018-01-24T00:51:36","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1232","RelatedDescription":"Closed issue \"Remove NoWarn of CS1705 because it is actually an error\" (#1232) at dotnet/sdk","RelatedBody":"I don't think the inclusion of 1705 alongside 1701,1702 has any impact because 1705 is an error. It is for the case where unification assumed by compiler *downgrades* a ref."},{"Id":"7141352344","Type":"IssuesEvent","CreatedAt":"2018-01-24T00:10:16","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1310","RelatedDescription":"Closed issue \"NuGet package downgrades occurring due to “nearest wins”, are errors by default   \" (#1310) at dotnet/sdk","RelatedBody":"https://github.com/NuGet/Home/issues/4895: NET Core 2.0: Register all warnings/errors to assets file (including PackageTargetFallback)\r\nNuGet spec: https://github.com/NuGet/Home/wiki/Improved-NuGet-warnings\r\nList of errors and warnings: https://github.com/NuGet/Home/wiki/Restore-errors-and-warnings\r\n\r\nDowngrade warning is [NU1605](https://github.com/NuGet/Home/wiki/Restore-errors-and-warnings#nu1605) \r\n@rrelyea & @emgarten  to confirm if this is the only one or if there are others to be elevated as errors by default.\r\n\r\nPost NuGet work, the SDK needs to insert the right properties to .NET Core 2.0 and .NET Standard 2.0 projects to mark NU1605 (and others if applicable) as error. This property should be visible to the end-user when he/she goes to the Project->Properties->Build. He should be able to revert the warning from being an error to a regular warning.\r\n"},{"Id":"7141118913","Type":"IssuesEvent","CreatedAt":"2018-01-23T23:02:48","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/479","RelatedDescription":"Closed issue \"ResolvePackageDependencies produces incorrect Resolved paths for project references\" (#479) at dotnet/sdk","RelatedBody":"ResolvePackageDependencies resolves paths for project references were computed based on the project root, which was originally [based on the location of the project lock file](https://github.com/dotnet/sdk/blob/39b7aba65043f9cb3cb7fce1b7466b5985d3b960/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageDependencies.cs#L429). This needs to be updated or removed since the assets file has moved, and the assets file may contain more appropriate root folder information.\r\n\r\nThe resolved path for project references is not actually used anywhere currently, so this bug does not cause any problems, but should be fixed anyway."},{"Id":"7141107351","Type":"IssuesEvent","CreatedAt":"2018-01-23T23:00:07","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1448","RelatedDescription":"Closed issue \"_CopyFilesMarkedCopyLocal Issue\" (#1448) at dotnet/sdk","RelatedBody":"In Microsoft.Net.SDK project, the copying of files to be copied locally is not respecting the relative directory structure, at least with resource files.\r\n\r\nExample Output:\r\n\r\n```\r\nTarget _CopyFilesMarkedCopyLocal:\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\de\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\es\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\fr\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\it\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\ja\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\ko\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\ru\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.edm\\5.8.2\\lib\\net40\\zh-Hans\\Microsoft.Data.Edm.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Edm.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\de\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\es\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\fr\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\it\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\ja\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\ko\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\ru\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\zh-Hans\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.odata\\5.8.2\\lib\\net40\\zh-Hant\\Microsoft.Data.OData.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.OData.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\de\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\es\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\fr\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\it\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\ja\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\ko\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\ru\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\microsoft.data.services.client\\5.8.2\\lib\\net40\\zh-Hans\\Microsoft.Data.Services.Client.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\Microsoft.Data.Services.Client.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\system.spatial\\5.8.2\\lib\\net40\\de\\System.Spatial.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\System.Spatial.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\system.spatial\\5.8.2\\lib\\net40\\fr\\System.Spatial.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\System.Spatial.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\system.spatial\\5.8.2\\lib\\net40\\it\\System.Spatial.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\System.Spatial.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\system.spatial\\5.8.2\\lib\\net40\\ja\\System.Spatial.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\System.Spatial.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\system.spatial\\5.8.2\\lib\\net40\\ko\\System.Spatial.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\System.Spatial.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\system.spatial\\5.8.2\\lib\\net40\\ru\\System.Spatial.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\System.Spatial.resources.dll\".\r\n1>    Copying file from \"C:\\repos\\Edge\\.packages\\system.spatial\\5.8.2\\lib\\net40\\zh-Hans\\System.Spatial.resources.dll\" to \"C:\\repos\\Edge\\.out\\bin\\managed\\Microsoft.Hcs\\Release\\net462\\System.Spatial.resources.dll\".\r\n```\r\n\r\nYou can see the output location does not contain the language directory.   This cause these files to be copied every build to the top level of the output directory.\r\n"},{"Id":"7140379226","Type":"PullRequestEvent","CreatedAt":"2018-01-23T20:23:31","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1889","RelatedDescription":"Merged pull request \"Merge release/2.1 to master\" (#1889) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180123-080048\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180123-080048 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7140377529","Type":"PullRequestEvent","CreatedAt":"2018-01-23T20:23:11","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1888","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/2.1\" (#1888) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180123-080047\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180123-080047 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7140375953","Type":"PullRequestEvent","CreatedAt":"2018-01-23T20:22:51","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1883","RelatedDescription":"Closed pull request \"Merge release/2.1 to master\" (#1883) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180122-080104\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180122-080104 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7140375699","Type":"PullRequestEvent","CreatedAt":"2018-01-23T20:22:48","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1882","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/2.1\" (#1882) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180122-080102\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180122-080102 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7140230059","Type":"PullRequestEvent","CreatedAt":"2018-01-23T19:52:54","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1753","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.5.0-rtm-4651 into sdk\" (#1753) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.5.0-rtm-4651 into sdk release/15.5 branch"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"955790963024257024","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"dotnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BLXAg7rubK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":2,"RawContent":null},{"Id":"954763538328883201","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"dotnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/EefnkSEqfe","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null},{"Id":"954724179533758465","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"dotnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/dWA8n7Ttph","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"953279226869960704","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/ZtyD9ubcE6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"952185961085067266","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"dotnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/kXZpzdtOqA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-01-24T05:30:20.8928139Z","RunDurationInMilliseconds":8002}