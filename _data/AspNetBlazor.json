{"Data":{"GitHubIssues":{"Issues":[{"Id":"341735673","IsPullRequest":true,"CreatedAt":"2018-07-17T01:46:23","Actor":"WaiChungK","Number":"1141","RawContent":null,"Title":"Update README.md","State":"open","Body":"Hello, this is my first time contributing to an open source project. I noticed that your contribution link does not link to the correct contribution page. I have made changes to fix the url","Url":"https://github.com/aspnet/Blazor/pull/1141","RelatedDescription":"Open PR \"Update README.md\" (#1141)"},{"Id":"341733144","IsPullRequest":true,"CreatedAt":"2018-07-17T01:43:56","Actor":"WaiChungK","Number":"1140","RawContent":null,"Title":"Update README.md","State":"closed","Body":"Hello, this is my first time contributing to an open source project. I noticed that your contribution link does not link to the correct contribution page. I have made changes to fix the url","Url":"https://github.com/aspnet/Blazor/pull/1140","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1140)"},{"Id":"341651385","IsPullRequest":true,"CreatedAt":"2018-07-16T19:41:17","Actor":"rynowak","Number":"1139","RawContent":null,"Title":"Fix Blazor tooling on 15.8","State":"open","Body":"/cc @SteveSandersonMS ","Url":"https://github.com/aspnet/Blazor/pull/1139","RelatedDescription":"Open PR \"Fix Blazor tooling on 15.8\" (#1139)"},{"Id":"341516151","IsPullRequest":false,"CreatedAt":"2018-07-16T15:13:42","Actor":"vertonghenb","Number":"1138","RawContent":null,"Title":"Visual Studio for mac not supported","State":"closed","Body":"Apparently  Visual Studio for Mac doesn't Support C# 7.3 thus not able to build a blazor app.\r\n\r\nDotnet 2.1.300 installed (and possible to build/run blazor apps on mac via CLI), but Visual Studio For Mac is not. \r\n\r\n`Error: CSC : error CS1617: Invalid option '7.3' for /langversion. Use '/langversion:?' to list supported values.`","Url":"https://github.com/aspnet/Blazor/issues/1138","RelatedDescription":"Closed issue \"Visual Studio for mac not supported\" (#1138)"},{"Id":"341248672","IsPullRequest":false,"CreatedAt":"2018-07-16T13:06:27","Actor":"Lupusa87","Number":"1134","RawContent":null,"Title":"Improve js interop with dynamic content execution","State":"closed","Body":"My experimental [project](http://lupusablazordemos.azurewebsites.net/) is working **very slow** right now.\r\n\r\nSo I think about optimization strategies and hope will achieve better performance. This strategies are different but I think this one is interesting not only for my project.\r\n\r\nI am using **canvas** and manipulating it via js interop, it means I do heavy operations with interop, many calls, passing parameters, maintain large code etc.\r\n\r\nLet's imagine I have **30 js registered function** (draw line, rect, arc etc) and mixing them (as will be required from projects logic) and let's say I **100 times** call, pass parameters, receive results from/to js. And it is repeating on every redraw (one second or less interval for smooth clock)!\r\n\r\nThis 30 js functions are like underlying level to access html5 canvas, it can be also referenced nuget package.\r\n\r\nAll this actions: call, passing params, return results have **time cost** and **probably is one reason for slow performance**.\r\n\r\nSo this question popups logically - can we reduce calls amount? For example collect all js functions and **call one time all this commands**.\r\n\r\nI think it is possible, because js allows us (with many ways) to **evalute code** (execute string containing js script).\r\n\r\nSo I can use string builder, collect all necessary js logic and call it one time. Please note that in most case **I don't need results from js**, if I need only to pass in another js function.\r\n\r\nAs I mentioned there is **many ways** to execute dynamic js scripts, first option is **evil()** function but I don't want now to go in details with way is better.\r\nI did **small research** and there can be found optimal way to do this (technique not matters for now).\r\nThere are security, debuging, preformance issues but let's forget about them for now.\r\n\r\nI try to **model theoretical structure** to improve js interop, it to become more dynamic and interoperable. Because as it seems we can't escape from js for next months/years and we need to find ways to use it in efficient way.\r\n\r\nWe can make parallel to **sql queries**, where we can build any query and then server will execute it.\r\n\r\nOk, I think it sounds good, less js functions, less calls, more flexibility and custom approach.\r\nNo one denies me to do it myself, maybe not perfectly but to try :)\r\n\r\n**Why I open this issue?**\r\n First I want to hear what people think about this;\r\n Second I think this improvement  (if it has sense) not should do all developers separately, we can say that someone will implement it and share as nuget package, but I think it's better to do blazor itself because we expect **more competentive people** in blazor team, **built-in feature** will be better and community always can contribute any improvement.\r\n\r\nI will be happy if you think about this and measure does it have perspective or not, is this no sense or **real way for some improvement**.\r\n\r\nHope text is understandable, for now it is **only theoretical** but if there will be interes or I will do it myself I will share my code and results about performance.\r\n\r\nThank you, **waiting for your activity** :)\r\n\r\nI know there are many open issues and many things to think and to do, but IMHO this issue can be useful too.\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1134","RelatedDescription":"Closed issue \"Improve js interop with dynamic content execution\" (#1134)"},{"Id":"341280865","IsPullRequest":false,"CreatedAt":"2018-07-16T13:02:43","Actor":"danroth27","Number":"1136","RawContent":null,"Title":"Minify blazor.server.js","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1136","RelatedDescription":"Closed issue \"Minify blazor.server.js\" (#1136)"},{"Id":"341484363","IsPullRequest":false,"CreatedAt":"2018-07-16T12:10:43","Actor":"uwbwsvd","Number":"1137","RawContent":null,"Title":"empty sreen","State":"closed","Body":"At first I'm not very familiar with all these things but interested.\r\nI tried this:\r\nhttps://blazor.net/docs/get-started.html\r\nAt Point 4 the browser opened: Loading ... Then an empty screen.\r\nI can't find any error messages.\r\nI have installed Visual Studio Community (Windows 10 Pro 1803)  and Blazor today.","Url":"https://github.com/aspnet/Blazor/issues/1137","RelatedDescription":"Closed issue \"empty sreen\" (#1137)"},{"Id":"341253517","IsPullRequest":false,"CreatedAt":"2018-07-14T23:51:56","Actor":"YandyZaldivar","Number":"1135","RawContent":null,"Title":"WebSockets support","State":"closed","Body":"There is this issue #20 tracking SignalR client support.\r\n\r\nI am opening this to follow a standard client WebSockets implementation. Maybe it comes from Mono making `System.Net.WebSockets` available, a separate package/api using JavaScript interop or a new API for Blazor.\r\n\r\nIs there any projection on this already?","Url":"https://github.com/aspnet/Blazor/issues/1135","RelatedDescription":"Closed issue \"WebSockets support\" (#1135)"},{"Id":"341244787","IsPullRequest":false,"CreatedAt":"2018-07-14T15:37:33","Actor":"Lupusa87","Number":"1133","RawContent":null,"Title":"Change standalone web.config to use Cache-Control headers","State":"open","Body":"I published updated [project](http://lupusablazordemos.azurewebsites.net) to azure.\r\nWhen I navigate to site Chrome was showing old version, Firefox got error. Edge showed new version but I am not sure there was loaded and cashed previous version.\r\n**I manually cleared browsers cache**, Chrome and Firefox downloaded updated files and run site as expected.\r\n\r\nOf course we need user to see new version for after all new publishing.\r\n\r\nShould I trigger this somehow from my code or should blazor do it automatically?","Url":"https://github.com/aspnet/Blazor/issues/1133","RelatedDescription":"Open issue \"Change standalone web.config to use Cache-Control headers\" (#1133)"},{"Id":"340100110","IsPullRequest":true,"CreatedAt":"2018-07-14T01:01:06","Actor":"rynowak","Number":"1116","RawContent":null,"Title":"[WIP] Blazor on the server","State":"closed","Body":"Putting this out there for early feedback. \r\n\r\nThings are basically in the right places, and rendering and event handling works. I still have some issues to work out with how our client code deals with HTTP clients.\r\n\r\nI haven't made any serious attempts at error handling yet.\r\n\r\nTODO:\r\n- [x] Error Handling\r\n- [x] Refactor Renderer\r\n- [x] Refactor UriHelper\r\n- [x] Remove UriHelper interop hack\r\n- [x] Allow Server-Side startup to consume client-side startup\r\n- [x] Tests For Server Side Sample\r\n\r\n\r\nPlanned to log issues for follow-up:\r\n- [x] Allow server boot script to specify a non-default URL for startup #1130\r\n- [x] Add object pool for serialization #1132\r\n- [x] Make server boot script work with non-default pathbase #1130\r\n- [x] TODO: Also support browsers that don't have TextDecoder (e.g., Edge) #1131\r\n- [x] Run E2E Tests on Server Side #1129","Url":"https://github.com/aspnet/Blazor/pull/1116","RelatedDescription":"Closed or merged PR \"[WIP] Blazor on the server\" (#1116)"},{"Id":"341031607","IsPullRequest":false,"CreatedAt":"2018-07-13T16:46:01","Actor":"Worble","Number":"1127","RawContent":null,"Title":"RenderFragment always refreshes if component or parent component calls StateHasChanged, even if there is no change to the fragment","State":"closed","Body":"Is there any way to prevent or control this behaviour?","Url":"https://github.com/aspnet/Blazor/issues/1127","RelatedDescription":"Closed issue \"RenderFragment always refreshes if component or parent component calls StateHasChanged, even if there is no change to the fragment\" (#1127)"},{"Id":"341071568","IsPullRequest":false,"CreatedAt":"2018-07-13T15:53:37","Actor":"rynowak","Number":"1132","RawContent":null,"Title":"Add object pool for ServerSide RenderFrame serialization","State":"open","Body":"Follow up item from #1116\r\n\r\nWe should consider pooling the byte arrays/streams from the render frame writer.","Url":"https://github.com/aspnet/Blazor/issues/1132","RelatedDescription":"Open issue \"Add object pool for ServerSide RenderFrame serialization\" (#1132)"},{"Id":"341071254","IsPullRequest":false,"CreatedAt":"2018-07-13T15:52:38","Actor":"rynowak","Number":"1131","RawContent":null,"Title":"Address TODO: Also support browsers that don't have TextDecoder (e.g., Edge)","State":"open","Body":"Follow up item from #1116\r\n\r\nThis is a TODO in the Blazor server boot script. We use TextDecoder where it's available, but don't have any support yet for browsers without it.","Url":"https://github.com/aspnet/Blazor/issues/1131","RelatedDescription":"Open issue \"Address TODO: Also support browsers that don't have TextDecoder (e.g., Edge)\" (#1131)"},{"Id":"341061202","IsPullRequest":false,"CreatedAt":"2018-07-13T15:23:53","Actor":"rynowak","Number":"1130","RawContent":null,"Title":"Allow server boot script to specify a non-default URL for startup","State":"open","Body":"Follow up item from #1116\r\n\r\nThe server boot script is hardcoded to use `/_blazor` as its URL for connected to SignalR. We should allow the developer to specify this URL. This will also be needed when the application has a base path.","Url":"https://github.com/aspnet/Blazor/issues/1130","RelatedDescription":"Open issue \"Allow server boot script to specify a non-default URL for startup\" (#1130)"},{"Id":"341060630","IsPullRequest":false,"CreatedAt":"2018-07-13T15:22:22","Actor":"rynowak","Number":"1129","RawContent":null,"Title":"Make a sensible set of E2E tests run on Server-Side Blazor","State":"open","Body":"Follow up item from https://github.com/aspnet/Blazor/pull/1116","Url":"https://github.com/aspnet/Blazor/issues/1129","RelatedDescription":"Open issue \"Make a sensible set of E2E tests run on Server-Side Blazor\" (#1129)"},{"Id":"341032298","IsPullRequest":true,"CreatedAt":"2018-07-13T14:06:02","Actor":"SteveSandersonMS","Number":"1128","RawContent":null,"Title":"Quick implementation of JS->.NET interop instance method calls","State":"open","Body":"This is in case we decide the best way to deal with accessing services from JS calls in #1116 is by having support for calling instance methods.\r\n\r\n@rynowak Would be interested in your preference on whether to use this approach, or the `ServicesAccessor.CurrentServices` asynclocal approach.","Url":"https://github.com/aspnet/Blazor/pull/1128","RelatedDescription":"Open PR \"Quick implementation of JS->.NET interop instance method calls\" (#1128)"},{"Id":"340664971","IsPullRequest":true,"CreatedAt":"2018-07-13T08:49:35","Actor":"SteveSandersonMS","Number":"1123","RawContent":null,"Title":"Make index.html static again","State":"closed","Body":"Previously, we \"built\" the `index.html` file by transforming it during the build, replacing `<script type='blazor-boot'>` with a machine-generated tag that contained the app's boot config.\r\n\r\nThis worked fine, but had the significant drawback that you have no way of launching a Blazor app from any other HTML file. For example, you couldn't render an HTML page on the server and start up a Blazor app from it, because you wouldn't have any way of transforming the `<script type='blazor-boot'>`.\r\n\r\nWith this PR, `<script type='blazor-boot'>` is replaced by a plain old normal script tag (`<script src='_framework/blazor.webassembly.js'></script>` that you can put in any page you want, whether it's a static `index.html` file, or something you're generating at runtime on the server.\r\n\r\nThis is a breaking change, in that `<script type='blazor-boot'>` will no longer work. Developers need to swap it for the new tag mentioned above. We need to emphasise this in the upgrade steps in release notes.","Url":"https://github.com/aspnet/Blazor/pull/1123","RelatedDescription":"Closed or merged PR \"Make index.html static again\" (#1123)"},{"Id":"340921981","IsPullRequest":false,"CreatedAt":"2018-07-13T08:06:09","Actor":"anirudhagupta","Number":"1126","RawContent":null,"Title":"Blazor Release compile exposing the path of developer machine.","State":"open","Body":"I was in travel last week and I see a tweet replied by steve about clock demo. I talk with that person on FB and chat with him if his demo is published under Debug.\r\n\r\nWe both realize the code is compiled under Release and later on I open the dll and able to see the path of his developer machine. \r\n\r\nI think the path can be either relative but not absolute or should not expose the machine path of developer in first place, This could be a lead to some hack.\r\n\r\nI was thinking for another scenario last week, If someone made a blazor app and user use it, user can easily figure out some endpoint which never should be exposed in first place.\r\n\r\nFor example Facebook.com have a secret admin panel at admin.facebook.com user will never know the ajax endpoint since they are not seeing anything without login, in Blazor I can figure out what kind of html admin.faceook.com have ( I am saying that admin.facebook.com is part of same app or I should better say facebook.com/admin) and what ajax endpoint they might have. Is this not a security issues.\r\n\r\nI am not a security expert but this thing make me worried (I am really new to WASM). Is this thing can lead to some trouble, for a common person who didn't prepare himself for DDOS, exposing ajax endpoint could cause a lot of trouble.\r\n\r\nFrom this thread 2 thing need to be checked.\r\n\r\n1. Exposing the develop machine path.\r\n2. Security for exposing ajax Endpoint (Someone can DDOS it by figure out the endpoint easily).\r\n3. Are we going to have any security for point 2 or does it already solved by any kind of thing implemented here.\r\n\r\nThanks\r\n\r\ncc @Lupusa87 @SteveSandersonMS ","Url":"https://github.com/aspnet/Blazor/issues/1126","RelatedDescription":"Open issue \"Blazor Release compile exposing the path of developer machine.\" (#1126)"},{"Id":"340429683","IsPullRequest":false,"CreatedAt":"2018-07-12T22:05:53","Actor":"Lupusa87","Number":"1120","RawContent":null,"Title":"How to wait when image load is completed","State":"closed","Body":"I need to load image in canvas, than to do another drawings.\r\nWhen I call js function from blazor it is not waiting image load and continues execution, in result my logic is mismached.\r\n\r\nInside javascript when we set src property js continues execution and fires onload when image is completely loaded.\r\n```\r\n    var img = new Image();\r\n    img.onload = function () {\r\n    };\r\n    img.src = imgPath;\r\n```\r\nIt looks like js itself is starting async task and calls callback when it's done.\r\n\r\nActually I need exactly to know (in c# code) when image is loaded, to do next steps.\r\nSo I need force c# or js to wait till img.onload fires.\r\n\r\nCan't find correct way for this, tried several approaches (including js interop async calls) no one was successful.\r\n\r\nOne solution (with I didn't tried) can be to call .net method from img.onload as callback, but to be honest I don't need to have callback hell in my blazor code.\r\n\r\nCan js interop solve this case already?\r\nIf not is it possible to implement this functional?\r\n\r\nMaybe I am doing or saying something wrong, or this is not correct place for asking.\r\nIn this case I am sorry and we can close issue.","Url":"https://github.com/aspnet/Blazor/issues/1120","RelatedDescription":"Closed issue \"How to wait when image load is completed\" (#1120)"},{"Id":"340765867","IsPullRequest":false,"CreatedAt":"2018-07-12T19:24:05","Actor":"galvesribeiro","Number":"1125","RawContent":null,"Title":"Failure binding on <select> when both \"bind\" and \"onchange\" are used","State":"closed","Body":"Hey folks,\r\n\r\nWhen I do this: `<select bind=@someVariable onchange=@SomeCallbackMethod>...</select>` the `SomeCallbackMethod` is never called. If I remove the `bind` it works just fine.\r\n\r\nIs that something expected?\r\n\r\nThanks","Url":"https://github.com/aspnet/Blazor/issues/1125","RelatedDescription":"Closed issue \"Failure binding on <select> when both \"bind\" and \"onchange\" are used\" (#1125)"},{"Id":"340674252","IsPullRequest":false,"CreatedAt":"2018-07-12T15:44:24","Actor":"JoelW187","Number":"1124","RawContent":null,"Title":"Access a service through code (not a cshtml file)","State":"closed","Body":"Is there currently anyway to get a reference to a service (particularly, a singleton) through a client class other than a .cshtml?\r\n\r\nI tried this:\r\n\r\n```\r\n    public class TestUtils : Microsoft.AspNetCore.Blazor.Components.BlazorComponent\r\n    {\r\n        [Microsoft.AspNetCore.Blazor.Components.Inject]\r\n        public Services.AppState appstate { get; set; }\r\n    }\r\n```\r\n\r\nBut my appstate property is always null.\r\n\r\nIf there is not currently a way to do this I propose that it be added.\r\n\r\n/joel","Url":"https://github.com/aspnet/Blazor/issues/1124","RelatedDescription":"Closed issue \"Access a service through code (not a cshtml file)\" (#1124)"},{"Id":"340580962","IsPullRequest":false,"CreatedAt":"2018-07-12T14:41:29","Actor":"lakani","Number":"1122","RawContent":null,"Title":"WASM: [System.Net.Http.HttpRequestException] TypeError: Failed to fetch","State":"closed","Body":"i get the following execption \r\n\r\nFailed to load http://localhost:5001/api/TodoItems/: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:32899' is therefore not allowed access. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\r\nMonoPlatform.ts:202 WASM: [System.Net.Http.HttpRequestException] TypeError: Failed to fetch\r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at Microsoft.AspNetCore.Blazor.Browser.Http.BrowserHttpMessageHandler.SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken) <0x1e07650 + 0x0038e> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at System.Net.Http.HttpClient.SendAsyncWorker (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken) <0x1df4860 + 0x0017e> in <86e6b54b599b4aa59c8ecb13ffc8f086>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at System.Net.Http.HttpClient.GetStringAsync (System.String requestUri) <0x1de51e0 + 0x000ee> in <86e6b54b599b4aa59c8ecb13ffc8f086>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at Microsoft.AspNetCore.Blazor.HttpClientJsonExtensions.GetJsonAsync[T] (System.Net.Http.HttpClient httpClient, System.String requestUri) <0x1f23d58 + 0x000c0> in <72270648a3b54698885c6ba1c18107cc>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at WebApplication7.Pages.TodoPage.OnInitAsync () <0x1f15960 + 0x00130> in <284c865a052f41afa310cba3c98a6c31>:0 \r\n\r\nwhile calling \r\n\r\n`_todos = await Http.GetJsonAsync<TodoItem[]>(\"http://localhost:5001/api/TodoItems/\");`\r\n\r\ni got two application, each one resides on a differnt domain\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1122","RelatedDescription":"Closed issue \"WASM: [System.Net.Http.HttpRequestException] TypeError: Failed to fetch\" (#1122)"},{"Id":"340475493","IsPullRequest":false,"CreatedAt":"2018-07-12T03:20:21","Actor":"yangyang80","Number":"1121","RawContent":null,"Title":"Is there a way to get the relationship between a child component and its parent component? ","State":"open","Body":"Hi,\r\n\r\nI am a newer for Blazor. My component is as the following:\r\n`<mycomponent>`\r\n`<complexproperty1 propertya=\"true\" propertyb=\"1\"></complexproperty1>`\r\n`<complexproperty2 propertya=\"true\" propertyb=\"1\"></complexproperty2>`\r\n`</mycomponent>`\r\nThe child components are some complex properties of mycomponent. I want to get the relationship between the child component and its parent. For example, I want to get the parent component instance in complexproperty1. The complexproperty1 component has no dom element for it. But I cannot find a way to do that. Is there any way to get that? Any help would be appreciated.\r\nBTW, I don't know if it is correct way to implement a Blazor component in this way.","Url":"https://github.com/aspnet/Blazor/issues/1121","RelatedDescription":"Open issue \"Is there a way to get the relationship between a child component and its parent component? \" (#1121)"},{"Id":"340287942","IsPullRequest":false,"CreatedAt":"2018-07-11T21:00:43","Actor":"budoray","Number":"1117","RawContent":null,"Title":"Hosted template fails to render when adding Microsoft.AspNetCore.Signalr.Client","State":"closed","Body":"Create a new ASP.NET Core Web Application ==> Blazor (ASP.NET Core hosted)\r\nUpdate Microsoft.AspNetCore.App to v2.1.2 via Nuget for Server application\r\nInstall Microsoft.AspNetCore.SignalR v1.0.2 via Nuget for Server application\r\nRun IIS Express\r\nSample template renders fine.\r\nInstall Microsoft.AspNetCore.SignalR.Client via Nuget for Client application\r\nRun IIS Express\r\n'Loading...' text from Client index.html renders fine\r\nLoading text disappears and nothing else is rendered.\r\n\r\nNo error messages. Removed the SignalR.Client package and the site renders just fine. \r\n\r\nUsing Chrome DevTools reveals a nice long stacktrace.\r\n\r\nUncaught (in promise) Error: System.MissingMethodException: Method not found: bool System.Collections.Generic.ISet`1.Add(!0) ....\r\n\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.5\r\nVisualStudio.15.Release/15.7.5+27703.2042\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET Core Blazor Language Services   0.4.0-rtm-10319\r\n","Url":"https://github.com/aspnet/Blazor/issues/1117","RelatedDescription":"Closed issue \"Hosted template fails to render when adding Microsoft.AspNetCore.Signalr.Client\" (#1117)"},{"Id":"340299121","IsPullRequest":false,"CreatedAt":"2018-07-11T20:58:41","Actor":"cores-system","Number":"1118","RawContent":null,"Title":"Blazor does not see a change if they are made through JavaScript","State":"closed","Body":"Hello, if you make changes through JavaScript, then in blazor the data does not change.\r\n**Example**: https://youtu.be/kHkkLWsMSF8\r\n\r\n```\r\n@page \"/testpage\"\r\n@layout TestLayout\r\n\r\n<div>\r\n    <select bind=\"@value\" style=\"width: 300px;\">\r\n        <option value=\"None\" selected=\"\">None</option>\r\n        <option value=\"GoogleAuth\">Google Authenticator</option>\r\n        <option value=\"Email\">Email</option>\r\n        <option value=\"Sms\">Sms</option>\r\n    </select>\r\n</div>\r\n\r\n<div style=\"position:  absolute; margin-top: 25px;\">\r\n    <b>bind</b>: @value\r\n</div>\r\n\r\n@functions\r\n{\r\n    string value;\r\n}\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/1118","RelatedDescription":"Closed issue \"Blazor does not see a change if they are made through JavaScript\" (#1118)"},{"Id":"340392317","IsPullRequest":false,"CreatedAt":"2018-07-11T20:24:16","Actor":"RemiBou","Number":"1119","RawContent":null,"Title":"ElementRef not changed to html element when passed to InvokeAsync","State":"open","Body":"### ElementRef not changed to html element when passed to InvokeAsync\r\nIf we want to send an ElementRef to a js async method, the parameter is seen as the json holding the ref id instead of html element\r\n\r\n### Minimal repro steps\r\n1. Create an async js function excpecting an html element\r\n2. Register it with Blazor.registerFunction (Blazor 0.4)\r\n3. Call this method from C# with an ElementRef\r\n\r\n### Expected result\r\nThe js function should be able to do what it wants with the html element\r\n\r\n### Actual result\r\nThe parameter is not an html element.\r\n\r\nI just looked at the dev branch and it seems this bug was fixed in JSRuntime. But I just want to be sure.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1119","RelatedDescription":"Open issue \"ElementRef not changed to html element when passed to InvokeAsync\" (#1119)"},{"Id":"339983067","IsPullRequest":false,"CreatedAt":"2018-07-10T20:16:37","Actor":"KlausEvenEnevoldsen","Number":"1115","RawContent":null,"Title":"HttpClient for communication between client and server?","State":"closed","Body":"Hi\r\n\r\nWhat are your plans regarding communication between client and server in Blazor?\r\n\r\nIn the current template you use HttpClient which is pretty low-level. Maybe the shared project could be used for something. I think that in 2018 we should not spend time writing code that use HttpClient when we control the code on both the client and the server. There has to be a better way, do you agree? :-)\r\n\r\nBR Klaus Even Enevoldsen","Url":"https://github.com/aspnet/Blazor/issues/1115","RelatedDescription":"Closed issue \"HttpClient for communication between client and server?\" (#1115)"},{"Id":"339769774","IsPullRequest":false,"CreatedAt":"2018-07-10T14:51:10","Actor":"Suchiman","Number":"1113","RawContent":null,"Title":"MyGet Feed broken since rename of dev to master","State":"closed","Body":"It seems that the renaming of the dev branch to master broke CI to https://dotnet.myget.org/gallery/blazor-dev","Url":"https://github.com/aspnet/Blazor/issues/1113","RelatedDescription":"Closed issue \"MyGet Feed broken since rename of dev to master\" (#1113)"},{"Id":"339859021","IsPullRequest":false,"CreatedAt":"2018-07-10T14:07:30","Actor":"RSIFormation","Number":"1114","RawContent":null,"Title":"SVG propertie binding failed","State":"open","Body":"Binding svg element properties does not work. Here, I just try to bind Height and Width properties :\r\n\r\n```\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     height=\"@Height\"\r\n     width=\"@Width\">\r\n    <ellipse cx=\"200\"\r\n             cy=\"80\"\r\n             rx=\"100\"\r\n             ry=\"50\"\r\n             style=\"fill:@Color;stroke:purple;stroke-width:@Thickness\" />\r\n</svg>\r\n\r\n<br />\r\n\r\nNew Height ? <input type=\"number\" bind=\"@Height\" />\r\nNew Width ? <input type=\"number\" bind=\"@Width\" />\r\n\r\n@functions\r\n{\r\n    private int Width {get; set;} = 200;\r\n    private int Height {get; set;} = 200;\r\n    private string Color {get; set;} = \"Green\";\r\n    private int Thickness { get; set; } = 2;\r\n}\r\n```\r\n\r\nOn first display, the SVG rendering is ok; binded properties values are used to render the SVG item (eg Width=200 & Height=200). But, when updating Width or Height values through INPUT control, following exception is thrown :\r\n\r\nSCRIPT5022: Microsoft.AspNetCore.Blazor.Browser.Interop.JavaScriptException: Cannot set attribute on non-element child\r\nError: Cannot set attribute on non-element child\r\n   at BrowserRenderer.prototype.applyEdits (http://localhost:59792/_framework/blazor.js:988:25)\r\n   at BrowserRenderer.prototype.updateComponent (http://localhost:59792/_framework/blazor.js:948:9)\r\n   at renderBatch (http://localhost:59792/_framework/blazor.js:347:9)\r\n   at Anonymous function (http://localhost:59792/_framework/wasm/mono.js:1:24341)\r\n   at _emscripten_asm_const_iiiiii (http://localhost:59792/_framework/wasm/mono.js:1:25665)\r\n   at Module[_mono_wasm_invoke_method] (http://localhost:59792/_framework/wasm/mono.js:1:172790)\r\n   at callMethod (http://localhost:59792/_framework/blazor.js:620:13)\r\n   at raiseEvent (http://localhost:59792/_framework/blazor.js:1220:5)\r\n   at Anonymous function (http://localhost:59792/_framework/blazor.js:937:13)\r\n   at EventDelegator.prototype.onGlobalEvent (http://localhost:59792/_framework/blazor.js:1374:21)\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1b45e00 + 0x00054> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1b45d18 + 0x00022> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch& batch) <0x1b45c30 + 0x0001c> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1a03ea0 + 0x000a0> in <72270648a3b54698885c6ba1c18107cc>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1e3e518 + 0x00074> in <72270648a3b54698885c6ba1c18107cc>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1e3b378 + 0x00020> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1dff9f0 + 0x0005a> in <7da830e0eabd429898584695ab9fd9e5>:0 ","Url":"https://github.com/aspnet/Blazor/issues/1114","RelatedDescription":"Open issue \"SVG propertie binding failed\" (#1114)"},{"Id":"339752076","IsPullRequest":false,"CreatedAt":"2018-07-10T08:58:42","Actor":"Daendel","Number":"1112","RawContent":null,"Title":"Absolute file paths in Blazor DLLs","State":"open","Body":"I created a client-server blazor app that that runs the server and client at once. It can be run by using the following .BAT command:\r\nexplorer.exe \"http://localhost:5000\"\r\ndotnet.exe \"C:\\BlazorExample.Server\\bin\\Release\\netcoreapp2.1\\BlazorExample.Server.dll\"\r\n\r\nThis works as expected. Only I cannot change the location of the DLLs. If I do so I get the following error:\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using 'C:\\Users\\m.bergman\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\nApplication startup exception: System.ArgumentException: The directory name 'T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Client\\bin\\Release\\netstandard2.0\\dist\\' does not exist.\r\nParameter name: path\r\n   at System.IO.FileSystemWatcher..ctor(String path, String filter)\r\n   at System.IO.FileSystemWatcher..ctor(String path)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.CreateFileWatcher(String root, ExclusionFilters filters)\r\n   at Microsoft.AspNetCore.Builder.BlazorAppBuilderExtensions.UseBlazor(IApplicationBuilder applicationBuilder, BlazorOptions options)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.ArgumentException: The directory name 'T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Client\\bin\\Release\\netstandard2.0\\dist\\' does not exist.\r\nParameter name: path\r\n   at System.IO.FileSystemWatcher..ctor(String path, String filter)\r\n   at System.IO.FileSystemWatcher..ctor(String path)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.CreateFileWatcher(String root, ExclusionFilters filters)\r\n   at Microsoft.AspNetCore.Builder.BlazorAppBuilderExtensions.UseBlazor(IApplicationBuilder applicationBuilder, BlazorOptions options)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n\r\nUnhandled Exception: System.ArgumentException: The directory name 'T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Client\\bin\\Release\\netstandard2.0\\dist\\' does not exist.\r\nParameter name: path\r\n   at System.IO.FileSystemWatcher..ctor(String path, String filter)\r\n   at System.IO.FileSystemWatcher..ctor(String path)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.CreateFileWatcher(String root, ExclusionFilters filters)\r\n   at Microsoft.AspNetCore.Builder.BlazorAppBuilderExtensions.UseBlazor(IApplicationBuilder applicationBuilder, BlazorOptions options)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token, String shutdownMessage)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at BlazorExample.Server.Program.Main(String[] args) in T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Server\\Program.cs:line 12\r\n```\r\n\r\nShouldn't the file paths in the DLL be relative?\r\n\r\nBy the way: is this a good way to run a Blazor app (including server) locally? If not, I hope you have some suggestions. Thanks in advance.","Url":"https://github.com/aspnet/Blazor/issues/1112","RelatedDescription":"Open issue \"Absolute file paths in Blazor DLLs\" (#1112)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-07-17T05:30:02.859545Z","RunDurationInMilliseconds":1292}