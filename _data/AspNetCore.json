{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains a number of changes (including API changes) and improvements. Notable Changes The JSON hub protocol now uses camel casing... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core Alpha 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T01:56:39+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T23:00:07+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T17:02:15+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T19:45:58+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6722882170","Type":"IssuesEvent","CreatedAt":"2017-10-16T16:33:19","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2244","RelatedDescription":"Closed issue \"IIS+Kestrel: IIS wraps 200 into 400 under load\" (#2244) at aspnet/Home","RelatedBody":"I have ASP.NET Core website hosted by Kestrel behind IIS as reverse proxy.\r\nUnder relatively high load server responds with **400 Bad Request**, higher load - more 400 results up to 100%.\r\nI've turned Kestrel logging on and realized website responds with **200**.\r\nHere is the example of application log and IIS log for the same request:\r\n\r\nKestrel logs:\r\n``` \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        RouteBase       Request successfully matched the route with name 'CStaticCdn' and template '{dir}/{*path}'.     \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executing action Api.Controllers.StaticCdnController.FileAsync (www.core)       \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executing action method Api.Controllers.StaticCdnController.FileAsync (www.core) with arguments (avatar, 2016/1/5AE7.JPG) - ModelState is Valid        \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executed action method Api.Controllers.StaticCdnController.FileAsync (www.core), returned result Microsoft.AspNetCore.Mvc.FileContentResult.    \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        FileContentResultExecutor       Executing FileResult, sending file as   \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executed action Api.Controllers.StaticCdnController.FileAsync (www.core) in 0.4742ms    \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        WebHost         Request finished in 0.981ms 200 image/jpeg\r\n```\r\n\r\n\r\nIIS logs:\r\n```2017-09-10 12:01:57 81.183.220.177 GET /avatar/2016/1/5AE7.JPG - 46 Mozilla/5.0+(Linux;+Android+5.1;+K4000+Build/LMY47D;+wv)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Version/4.0+Chrome/60.0.3112.107+Mobile+Safari/537.36 https://website.com HU website.com 400 0 737 198```\r\n\r\n\r\nEnvironment:\r\n.NET Core 1.1, net462, Windows Server 2012 R2 (reproduced under Windows Server 2016 too)\r\n\r\nPackages used:\r\nMicrosoft.AspNetCore.Mvc, 1.1.3\r\nMicrosoft.AspNetCore.Routing, 1.1.2\r\nMicrosoft.AspNetCore.Server.IISIntegration, 1.1.2\r\nMicrosoft.AspNetCore.Server.Kestrel, 1.1.2\r\nMicrosoft.AspNetCore.Server.Kestrel.Https, 1.1.2\r\nMicrosoft.Extensions.Configuration.EnvironmentVariables, 1.1.2\r\nMicrosoft.Extensions.Configuration.FileExtensions, 1.1.2\r\nMicrosoft.Extensions.Configuration.Json, 1.1.2\r\nMicrosoft.Extensions.Logging.Debug, 1.1.2\r\nMicrosoft.Extensions.Logging.EventLog, 1.1.2\r\nMicrosoft.Extensions.Options.ConfigurationExtensions, 1.1.2\r\nMicrosoft.Net.Http, 2.2.29\r\nSystem.Net.Http, 4.3.2"},{"Id":"6721695204","Type":"IssuesEvent","CreatedAt":"2017-10-16T12:45:47","Actor":"NicoSymo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2246","RelatedDescription":"Opened issue \"Mixing Cookie Auth and JWT auth in same controller (dual auth)\" (#2246) at aspnet/Home","RelatedBody":"Hi\r\n\r\nI'm working on an ASP Core 2.0 project that contains in the same controller both API actions returning JSON and actions returning views for simplicity.\r\n\r\nI implemented the dual auth considering the following blog :\r\n\r\nhttps://wildermuth.com/2017/08/19/Two-AuthorizationSchemes-in-ASP-NET-Core-2\r\n\r\nIt works, but because of my mixing API/actions for views in the same controller, If I have such a controller :\r\n\r\n`[Authorize]\r\npublic class AccountController : Controller\r\n{\r\n\r\n//This action only requires coockie auth (OK)\r\npublic IActionResult Index()\r\n{\r\n    return View();\r\n}\r\n\r\n[Authorize(AuthenticationSchemes = JwtBearerDefaults.AuthenticationScheme)]\r\n// This action currently requires BOTH cookie auth AND JWT auth ! (KO)\r\n// Here I would like only JWT, not a cumulative auth \r\n[Authorize(AuthenticationSchemes = JwtBearerDefaults.Aut\r\npublic IActionResult Get()\r\n{\r\nreturn Ok(new[] { \"One\", \"Two\", \"Three\" });\r\n}\r\n\r\n}`\r\n\r\nand in startup.cs (ConfigureServices)\r\n`// Enable Dual Authentication \r\nservices.AddAuthentication()\r\n.AddCookie(cfg => cfg.SlidingExpiration = true)\r\n.AddJwtBearer(cfg =>\r\n{\r\ncfg.RequireHttpsMetadata = false;\r\ncfg.SaveToken = true;\r\n\r\ncfg.TokenValidationParameters = new TokenValidationParameters()\r\n{\r\nValidIssuer = Configuration[\"Tokens:Issuer\"],\r\nValidAudience = Configuration[\"Tokens:Audience\"],\r\nIssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"Tokens:Key\"]))\r\n};\r\n\r\n});`\r\n\r\nI managed to make it work separately if I don't use the Authorize globally on the Controller, but on each Action instead :\r\n\r\n`\r\npublic class AccountController : Controller\r\n{\r\n\r\n[Authorize]\r\n//This action only requires coockie auth (OK)\r\npublic IActionResult Index()\r\n{\r\n    return View();\r\n}\r\n\r\n[Authorize(AuthenticationSchemes = JwtBearerDefaults.AuthenticationScheme)]\r\n// This action requires now only JWT auth  (OK)\r\n[Authorize(AuthenticationSchemes = JwtBearerDefaults.Aut\r\npublic IActionResult Get()\r\n{\r\nreturn Ok(new[] { \"One\", \"Two\", \"Three\" });\r\n}\r\n\r\n}`\r\n\r\nBut I would like to find a way to keep my [Authorize] globally and specify for each needed API actions the JWT bearer auth [Authorize(AuthenticationSchemes = JwtBearerDefaults.AuthenticationScheme)] and only it.\r\n\r\nIs there a way to do this ?"},{"Id":"6721394735","Type":"IssuesEvent","CreatedAt":"2017-10-16T11:33:28","Actor":"deanilvincent","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2245","RelatedDescription":"Opened issue \"Aborted (core dumped) when running dotnet ProjectName.dll\" (#2245) at aspnet/Home","RelatedBody":"Specifications:\r\n**Development Environment:** \r\nWindows 10 with updates\r\nVisual Studio 2017 15.3\r\n.Net Core 2.0 (Latest)\r\n\r\n**Project Description:** \r\nBasic and default MVC project of asp.net core 2.0 and nothing really fancy.\r\n\r\n**Server Hosting**\r\nUbuntu 16.04 with installed:\r\n    .Net Core 2.0\r\n    Nginx\r\n\r\nI already published my application inside my ubuntu server but when I'm trying to use the command \r\n\r\n`dotnet ProjectName.dll`\r\n\r\nI got this errors. Any help?\r\n\r\n![testingcoreerror](https://user-images.githubusercontent.com/10904957/31609711-d533d9f2-b2a7-11e7-8fcc-f6c2d34e0813.PNG)\r\n"},{"Id":"6720622466","Type":"IssuesEvent","CreatedAt":"2017-10-16T08:34:07","Actor":"intelli9","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2244","RelatedDescription":"Opened issue \"IIS+Kestrel: IIS wraps 200 into 400 under load\" (#2244) at aspnet/Home","RelatedBody":"I have ASP.NET Core website hosted by Kestrel behind IIS as reverse proxy.\r\nUnder relatively high load server responds with **400 Bad Request**, higher load - more 400 results up to 100%.\r\nI've turned Kestrel logging on and realized website responds with **200**.\r\nHere is the example of application log and IIS log for the same request:\r\n\r\nKestrel logs:\r\n``` \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        RouteBase       Request successfully matched the route with name 'CStaticCdn' and template '{dir}/{*path}'.     \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executing action Api.Controllers.StaticCdnController.FileAsync (www.core)       \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executing action method Api.Controllers.StaticCdnController.FileAsync (www.core) with arguments (avatar, 2016/1/5AE7.JPG) - ModelState is Valid        \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executed action method Api.Controllers.StaticCdnController.FileAsync (www.core), returned result Microsoft.AspNetCore.Mvc.FileContentResult.    \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        FileContentResultExecutor       Executing FileResult, sending file as   \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        ControllerActionInvoker         Executed action Api.Controllers.StaticCdnController.FileAsync (www.core) in 0.4742ms    \r\n        14:01:58        81.183.220.177  /avatar/2016/1/5AE7.JPG        WebHost         Request finished in 0.981ms 200 image/jpeg\r\n```\r\n\r\n\r\nIIS logs:\r\n```2017-09-10 12:01:57 81.183.220.177 GET /avatar/2016/1/5AE7.JPG - 46 Mozilla/5.0+(Linux;+Android+5.1;+K4000+Build/LMY47D;+wv)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Version/4.0+Chrome/60.0.3112.107+Mobile+Safari/537.36 https://website.com HU website.com 400 0 737 198```\r\n\r\n\r\nEnvironment:\r\n.NET Core 1.1, net462, Windows Server 2012 R2 (reproduced under Windows Server 2016 too)\r\n\r\nPackages used:\r\nMicrosoft.AspNetCore.Mvc, 1.1.3\r\nMicrosoft.AspNetCore.Routing, 1.1.2\r\nMicrosoft.AspNetCore.Server.IISIntegration, 1.1.2\r\nMicrosoft.AspNetCore.Server.Kestrel, 1.1.2\r\nMicrosoft.AspNetCore.Server.Kestrel.Https, 1.1.2\r\nMicrosoft.Extensions.Configuration.EnvironmentVariables, 1.1.2\r\nMicrosoft.Extensions.Configuration.FileExtensions, 1.1.2\r\nMicrosoft.Extensions.Configuration.Json, 1.1.2\r\nMicrosoft.Extensions.Logging.Debug, 1.1.2\r\nMicrosoft.Extensions.Logging.EventLog, 1.1.2\r\nMicrosoft.Extensions.Options.ConfigurationExtensions, 1.1.2\r\nMicrosoft.Net.Http, 2.2.29\r\nSystem.Net.Http, 4.3.2"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6725105549","Type":"IssuesEvent","CreatedAt":"2017-10-17T02:58:38","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1025","RelatedDescription":"Closed issue \"1.0.0-alpha2-final : Please bring back Clients.OthersInGroup\" (#1025) at aspnet/SignalR","RelatedBody":"Use case is a massive turn-based game in which the caller doesn't need to be notified about the play he already did and obviously already knows.\r\nGroups are small (4 members), but if there are thousands of groups in the hub, using Clients.OthersInGroup will save the server from sending thousands of useless \"self notifications\""},{"Id":"6725101643","Type":"IssuesEvent","CreatedAt":"2017-10-17T02:57:03","Actor":"aespino27","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1025","RelatedDescription":"Opened issue \"1.0.0-alpha2-final : Please bring back Clients.OthersInGroup\" (#1025) at aspnet/SignalR","RelatedBody":"Use case is a massive turn-based game in which the caller doesn't need to be notified about the play he already did and obviously already knows.\r\nGroups are small (4 members), but if there are thousands of groups in the hub, using Clients.OthersInGroup will save the server from sending thousands of useless \"self notifications\""},{"Id":"6724797862","Type":"PullRequestEvent","CreatedAt":"2017-10-17T00:52:45","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1024","RelatedDescription":"Opened pull request \"Client API Cancellation tokens\" (#1024) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6725328918","Type":"IssuesEvent","CreatedAt":"2017-10-17T04:38:03","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6964","RelatedDescription":"Closed issue \"Razor Pages Error with Section and TagHelpers \" (#6964) at aspnet/Mvc","RelatedBody":"Razor pages throws an error when working with sections.\r\nPostData is class declared inside the backing cs file.\r\n\r\nThis works\r\n```\r\n<label asp-for=\"PostData.PostId\"></label>\r\n@section detailsSection {\r\n}\r\n```\r\nMoving the TagHelp into a section produces and error.\r\n`A local or parameter named '__model' cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter`\r\n```\r\n@section detailsSection {\r\n    <label asp-for=\"PostData.PostId\"></label>\r\n}\r\n```\r\nMoving it to a partial works\r\n```\r\n@section detailsSection {\r\n    @Html.Partial(\"PostData\", @Model.PostData)\r\n}\r\n```"},{"Id":"6724891427","Type":"IssuesEvent","CreatedAt":"2017-10-17T01:31:59","Actor":"mgasparel","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6957","RelatedDescription":"Closed issue \"Url.Page() can not use path-based route if a custom route has been added\" (#6957) at aspnet/Mvc","RelatedBody":"After adding a custom route to my Index page, I am no longer able to generate URLs using the default path-based routes in Razor Pages.\r\n\r\nHere is my custom route that allows me to add paging to the Index page, ie: `http://localhost:5000/page/2`\r\n\r\n```\r\n.AddRazorPagesOptions(options =>\r\n{\r\n    options.Conventions.AddPageRoute(\"/Index\", \"page/{pageNum}\");\r\n});\r\n```\r\n\r\nAfter adding that route, the following now returns null:\r\n`Url.Page(\"/Index\");`\r\n\r\nAlso, the following now throws *InvalidOperationException: No page named '/Index' matches the supplied values.*\r\n`RedirectToPage(\"/Index\");`\r\n\r\nFrom what I can tell, this is the default behavior, based on the XML Documentation on the AddPageRoute method:\r\n>The page can be routed via route in addition to the default set of path based routes. **All links generated for this page will use the specified route.**\r\n\r\nAm I missing something, or is there no way to use the default path-based route after I start adding additional routes for a page?"},{"Id":"6724832625","Type":"IssuesEvent","CreatedAt":"2017-10-17T01:07:28","Actor":"RandyBuchholz","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6964","RelatedDescription":"Opened issue \"Razor Pages Error with Section and TagHelpers \" (#6964) at aspnet/Mvc","RelatedBody":"Razor pages throws an error when working with sections.\r\nPostData is class declared inside the backing cs file.\r\n\r\nThis works\r\n```\r\n<label asp-for=\"PostData.PostId\"></label>\r\n@section detailsSection {\r\n}\r\n```\r\nMoving the TagHelp into a section produces and error.\r\n`A local or parameter named '__model' cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter`\r\n```\r\n@section detailsSection {\r\n    <label asp-for=\"PostData.PostId\"></label>\r\n}\r\n```"},{"Id":"6724419629","Type":"PullRequestEvent","CreatedAt":"2017-10-16T22:31:32","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6930","RelatedDescription":"Closed pull request \"Infer binding sources for ApiController parameters\" (#6930) at aspnet/Mvc","RelatedBody":"Fixes #6847"},{"Id":"6724419061","Type":"IssuesEvent","CreatedAt":"2017-10-16T22:31:21","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6847","RelatedDescription":"Closed issue \"For types annotated with ApiControllerAttribute, consider making complex type parameters FromBody by default\" (#6847) at aspnet/Mvc","RelatedBody":"As part of producing, more opinionated APIs via `ApiControllerAttribute` we can assume any complex type parameter in your action without binding information is interpreted as `FromBody`. This will reduce the amount of typing \\ clutter in user code:\r\n\r\n```C#\r\n[ApiController]\r\npublic class OrdersController\r\n{\r\n   // ...\r\n   [HttpPost]\r\n   public IActionResult Create(Book book); // Assumes FromBody\r\n\r\n   [HttpPut]\r\n   public IActionResult Update([FromQuery] Book book); // Opt out\r\n}\r\n```\r\n\r\nWe could add a switch to `ApiControllerOptions` to disable this behavior globally.\r\n\r\n"},{"Id":"6724305916","Type":"PullRequestEvent","CreatedAt":"2017-10-16T21:58:03","Actor":"ryanbrandenburg","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6962","RelatedDescription":"Closed pull request \"Add RepositoryRoot\" (#6962) at aspnet/Mvc","RelatedBody":null}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6723766264","Type":"PullRequestEvent","CreatedAt":"2017-10-16T19:50:14","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1468","RelatedDescription":"Opened pull request \"Add RepositoryRoot\" (#1468) at aspnet/Identity","RelatedBody":null},{"Id":"6722522753","Type":"IssuesEvent","CreatedAt":"2017-10-16T15:23:26","Actor":"maqduni","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1467","RelatedDescription":"Opened issue \"Add alternative ASP.NET Identity RavenDB Provider to the README file\" (#1467) at aspnet/Identity","RelatedBody":"What's the process for adding an alternative provider? There already is a RavenDB Provider listed in the repository description, I'd like to list my package here as well, it's also the most downloaded and complete RavenDB provider.\r\n\r\nShould I list it underneath the already listed link? like,\r\n\r\n- ASP.NET Identity RavenDB Provider"},{"Id":"6719135527","Type":"IssuesEvent","CreatedAt":"2017-10-15T20:43:53","Actor":"paulhickman-a365","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1466","RelatedDescription":"Opened issue \"Suggestion: Support migrating to new Password Hashers over time\" (#1466) at aspnet/Identity","RelatedBody":"Over time, password hashes that were once considered secure are no longer considered so. Therefore, it would be desirable to be able to support multiple hashes in a single identity database, and transparently re-encrypt users' passwords as they login if a more secure hash function is available.\r\n\r\nA newer hash function may mean a new algorithm (e.g. Argon2), or simply more iterations / different configuration parameters for the algorithm already in use.\r\n\r\nA possible implementation would be:\r\n\r\n1.  ASPNet the identity `UserManager` has a `PasswordHashers` property added, which is a list of `IPasswordHasher` objects in order of ascending secure-ness called `PasswordHashers`. The existing `PasswordHasher` property is changed to retrieve the last item in the list, and is made read-only, so that newly stored passwords use the latest hash function.\r\n\r\n2. The  list index of the `PasswordHasher` that was used for a particular user is stored in a property of the `TUser` object called `PasswordHashVersion` \r\n\r\n3. During the authentication process, if the password check is successful, but the `PasswordHashVersion` value indicates it was not hashed using the current hasher, re-hash the password using the current `UserManager.PasswordHasher` and update the hash and version stored in the `TUser` object.\r\n\r\nThis would mean, over time, users still using the application would have their password encryption level upgraded and it would not be stuck at the quality of hashing algorithm available in the year they signed up. Users who no longer user the application would be stuck with the older password hashes. However, administrators could query the database to report on the number of users with legacy hashes, and contact them to request they sign-in to retain their account.\r\n\r\n"},{"Id":"6718683055","Type":"IssuesEvent","CreatedAt":"2017-10-15T15:41:12","Actor":"heku","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1465","RelatedDescription":"Opened issue \"Best practice to integrate Identity into a multiple-layers project?\" (#1465) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nI have google/bing this but no good solution/suggestion found, as all examples just demonstrate the usage in one project, I'm wondering what's the best practice for integrate Identity with a real solution like below.\r\n\r\n- UI Layer (MVC)\r\n- Domain/Models Layer (i.e. `AppUser`, and we may want to keep this layer POCOs)\r\n- Infrastructures Layers (i.e. `AppDbContext`)\r\n\r\nIn this case, we cannot define an `AppDbContext : IdentityDbContext<AppUser>` because` AppUser` is expected an `IdentityUser`, to make this work, we have to add reference to Identity stuffs to Domain layer.\r\n\r\nI understand that if I re-implement all Identity Stores inside the Infrastructures layer, this would work, but this sounds not so good.\r\n\r\nIs there a best practice that we can reuse majority of Identity and keep each layer clean?\r\n\r\nIt's very appreciated to hear your suggestion?\r\n\r\n"},{"Id":"6713193125","Type":"IssuesEvent","CreatedAt":"2017-10-13T12:33:47","Actor":"naveddeshmukh","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1464","RelatedDescription":"Opened issue \"Change Type from String to Int and Auto-generated UserName and NormalizedUserName Properties \" (#1464) at aspnet/Identity","RelatedBody":"I intended to use UserName property as Employee Codes (integers and auto-incrementing). \r\n\r\nAs per policy, My application requires the employee to be able to log in using their employee code (which are integer values of 5 digits, if that's relevant ). \r\n\r\nI was using UserName property to store the employee codes, but now the requirement is to automatically generate an Employee Code (similar behavior of auto increment in SQL Server.) \r\n\r\nIs their anyway to override UserName and used it as integer and make auto-generated whenever a new user is created. "},{"Id":"6712431507","Type":"IssuesEvent","CreatedAt":"2017-10-13T09:20:56","Actor":"Sathiyamm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1463","RelatedDescription":"Opened issue \"How to generate mobile  4 digit token in .net core?\" (#1463) at aspnet/Identity","RelatedBody":""},{"Id":"6711133702","Type":"IssuesEvent","CreatedAt":"2017-10-13T01:43:16","Actor":"ronydj","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1462","RelatedDescription":"Closed issue \"CheckPasswordAsync returns false after second call\" (#1462) at aspnet/Identity","RelatedBody":"Hi Guys,\r\n\r\nI have this part of the code checking the user's password:\r\n\r\nvar isValidPassword = await Manager.CheckPasswordAsync(user, password);\r\n\r\nmy manager is a singleton instance.\r\n\r\nAfter the second call, this line is always returning false. It will only return true if I restart my application. Am I doing something wrong? I am not finding anything in the documentation..."},{"Id":"6711112915","Type":"IssuesEvent","CreatedAt":"2017-10-13T01:34:33","Actor":"ronydj","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1462","RelatedDescription":"Opened issue \"CheckPasswordAsync returns false after second call\" (#1462) at aspnet/Identity","RelatedBody":"Hi Guys,\r\n\r\nI have this part of the code checking the user's password:\r\n\r\nvar isValidPassword = await Manager.CheckPasswordAsync(user, password);\r\n\r\nmy manager is a singleton instance.\r\n\r\nAfter the second call, this line is always returning false. It will only return true if I restart my application. Am I doing something wrong? I am not finding anything in the documentation..."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6724200067","Type":"PullRequestEvent","CreatedAt":"2017-10-16T21:30:04","Actor":"VSadov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2121","RelatedDescription":"Opened pull request \"Switching to the new toolset compiler - 2.6.0-beta2-62211-02\" (#2121) at aspnet/KestrelHttpServer","RelatedBody":"This brings support for the final syntax of \"ref readonly\" and some bug fixes.\r\n\r\nNoticeable changes:\r\n- use `in` at declaration of \"in\" parameters, not `ref readonly`\r\n- `ref` comes before `partial` when declaring partial ref structs.\r\n- unboxing conversions for ref-like types are statically rejected as impossible to succeed\r\n\r\nThe corresponding VSIX to match these compiler bits with IDE experience is -\r\nhttps://dotnet.myget.org/F/roslyn/vsix/0b48e25b-9903-4d8b-ad39-d4cca196e3c7-2.6.0.6221102.vsix"},{"Id":"6724132458","Type":"PullRequestEvent","CreatedAt":"2017-10-16T21:13:07","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2119","RelatedDescription":"Merged pull request \"Fix typos in project names\" (#2119) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6723769029","Type":"PullRequestEvent","CreatedAt":"2017-10-16T19:50:50","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2120","RelatedDescription":"Opened pull request \"Add RepositoryRoot\" (#2120) at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6723533759","Type":"PullRequestEvent","CreatedAt":"2017-10-16T18:56:25","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2119","RelatedDescription":"Opened pull request \"Fix typos in project names\" (#2119) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6724438330","Type":"IssuesEvent","CreatedAt":"2017-10-16T22:37:24","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1725","RelatedDescription":"Opened issue \"DocumentTrackers need to be refreshed when their impacted document is moved.\" (#1725) at aspnet/Razor","RelatedBody":"The documents configuration, project, basically everything needs to be recomputed when a cshtml file is moved."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6715213451","Type":"IssuesEvent","CreatedAt":"2017-10-13T20:09:17","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Closed issue \"Add HttpsRedirection and HSTS middleware template\" (#871) at aspnet/Templates","RelatedBody":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher "},{"Id":"6715040017","Type":"IssuesEvent","CreatedAt":"2017-10-13T19:22:44","Actor":"jkotalik","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Opened issue \"Add HttpsRedirection and HSTS middleware template\" (#871) at aspnet/Templates","RelatedBody":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher "},{"Id":"6698255499","Type":"PullRequestEvent","CreatedAt":"2017-10-10T17:47:03","Actor":"scottsauber","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Opened pull request \"Change Lockout wording of comment\" (#870) at aspnet/Templates","RelatedBody":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want."},{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"},{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"},{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"},{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-17T05:30:09.4021333Z","RunDurationInMilliseconds":7700}