{"Data":{"Blog":{"FeedItems":[{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null},{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null},{"Title":"Developer Community Events in March","PublishedOn":"2019-03-01T17:59:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/developer-community-events-in-march/","RawContent":null},{"Title":"View PDF Files within Your Xamarin.Forms Apps Using the Syncfusion PDF Viewer","PublishedOn":"2019-02-28T17:04:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Suresh Mohan. Suresh is the Product Manager for PDF Viewer at Syncfusion Software where he specializes in desktop and mobile app development. &#160;...","Href":"https://blog.xamarin.com/xamarin-forms-apps-syncfusion-pdf-viewer/","RawContent":null},{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9231567409","Type":"PullRequestEvent","CreatedAt":"2019-03-13T02:59:11","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2821","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] #deletebinobj bug with stale jars\" (#2821) at xamarin/xamarin-android","RelatedBody":"I updated usage of Xamarin.Forms to the current 3.6 stable, which has\r\na few benefits:\r\n\r\n* 3.6 includes the patch where Xamarin.Forms is shipping portable\r\n  `.pdb` files now. This prevents some of the pdb2mdb errors we see\r\n  with our tests running in parallel.\r\n* 3.6 does not require you to list a bunch of support libraries as\r\n  `<PackageReference/>` for things to build. The transitive\r\n  dependencies work, and the support library 28.x is pulled in\r\n  automatically.\r\n\r\nUnfortunately, I also discovered a bug when doing this...\r\n\r\nThe `CompileBeforeUpgradingNuGet` test was hitting a compiler error:\r\n\r\n    CompileToDalvik:\r\n      ...\r\n      Uncaught translation error: java.lang.IllegalArgumentException: already added: Landroid/support/annotation/AnimRes;\r\n      ...\r\n      UNEXPECTED TOP-LEVEL EXCEPTION:\r\n      java.lang.RuntimeException: Translation has been interrupted\r\n      \tat com.android.dx.command.dexer.Main.processAllFiles(Main.java:614)\r\n      \tat com.android.dx.command.dexer.Main.runMonoDex(Main.java:310)\r\n      \tat com.android.dx.command.dexer.Main.runDx(Main.java:288)\r\n      \tat com.android.dx.command.dexer.Main.main(Main.java:244)\r\n      \tat com.android.dx.command.Main.main(Main.java:95)\r\n      Caused by: java.lang.InterruptedException: Too many errors\r\n      \tat com.android.dx.command.dexer.Main.processAllFiles(Main.java:606)\r\n      \t... 4 more\r\n      Xamarin.Android.Common.targets(2821,3): java.lang.IllegalArgumentException: already added :  Landroid/support/annotation/AnimRes;\r\n\r\nWhen I looked at the list of jar files, two of them didn't make sense:\r\n\r\n    obj\\Debug\\lp\\3\\jl\\com.android.support.support-annotations.jar\r\n    obj\\Debug\\lp\\3\\jl\\support-annotations.jar\r\n\r\nXamarin.Android.Support.Annotations 28.x includes an `EmbeddedJar`\r\nnamed `com.android.support.support-annotations.jar`. In older support\r\nlibrary versions, the file is named `support-annotations.jar`.\r\n\r\nReviewing the `<ResolveLibraryProjectImports/>` MSBuild task, I don't\r\nsee what would delete old `EmbeddedJar` files? For that matter,\r\n`AndroidEnvironment` either? Reviewing the historical source code for\r\n`<ResolveLibraryProjectImports/>`, it seems it was always this way?\r\n\r\n`__AndroidLibraryProjects__.zip` and `__AndroidNativeLibraries__.zip`\r\nshould be properly deleting stale files now since the fixes in 98d881b\r\nwere added.\r\n\r\nChanges:\r\n\r\n* At the end of `<ResolveLibraryProjectImports/>`, I added a call to\r\n  enumerate the top directory where `AndroidEnvironment` and\r\n  `EmbeddedJar` files are extracted.\r\n* I added a call to delete unknown files of these types: making sure\r\n  the hash's timestamp (of the .NET assembly we extracted from) is\r\n  invalidated.\r\n* I updated the various tests to use Xamarin.Forms 3.6. (which was my\r\n  original goal here!)\r\n* In `CompileBeforeUpgradingNuGet` I added an assertion that the log\r\n  message where `support-annotations.jar` was deleted is present.\r\n* In `BuildAfterUpgradingNuget` I dropped the option for\r\n  `packages.config`, since it was making it difficult to update\r\n  Xamarin.Forms in these tests. I added a new\r\n  `BuildBasicApplicationAppCompat` test to cover `packages.config`\r\n  specifically. The scenario in `BuildAfterUpgradingNuget` is not\r\n  really affected by the \"NuGet package management format\"."},{"Id":"9231388663","Type":"PullRequestEvent","CreatedAt":"2019-03-13T02:09:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2820","RelatedDescription":"Merged pull request \"Revert \"Revert \"[BootstrapTasks] libZipSharp & <Unzip…/> (#2750)\" (#2…\" (#2820) at xamarin/xamarin-android","RelatedBody":"…796)\"\r\n\r\nThis reverts commit a014bd307bfbc754cb2d6ed68c16a63bd3fd67de.\r\n\r\nContext: https://github.com/xamarin/xamarin-android/commit/74aaad939587d525add51d51618a3337139dad79\r\nContext: https://github.com/xamarin/xamarin-android/commit/a014bd307bfbc754cb2d6ed68c16a63bd3fd67de\r\n\r\nThis unreverts teh LibZipSharp improvements which were thought to cause\r\nproblems when building on \"clean\" systems with no Android SDK installed.\r\nThe real cause was fixed in 74aaad9 and thus we can bring the improvements\r\nback."},{"Id":"9231376981","Type":"PullRequestEvent","CreatedAt":"2019-03-13T02:06:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2819","RelatedDescription":"Merged pull request \"[build] Bump cmake to 3.10 and the NDK to 19b\" (#2819) at xamarin/xamarin-android","RelatedBody":"`cmake` 3.10 is the current version of the tool in the Android SDK,\r\nan update from the much older 3.6. This update brings it closer to\r\nthe host `cmake` versions (currently mostly 3.12.*)\r\n\r\nBump NDK to release [19b][0] (a.k.a. 19.1), with the following changes:\r\n\r\n * [Issue 855][1]: ndk-build automatically disables multithreaded\r\n   linking for LLD on Windows, where it may hang. It is not\r\n   possible for the NDK to detect this situation for CMake,\r\n   so CMake users and custom build systems must pass\r\n   `-Wl,--no-threads` when linking with LLD on Windows.\r\n * [Issue 849][2]: Fixed unused command line argument warning when\r\n   using standalone toolchains to compile C code.\r\n * [Issue 890][3]: Fixed CMAKE_FIND_ROOT_PATH. CMake projects will\r\n   no longer search the host's sysroot for headers and libraries.\r\n * [Issue 907][4]: Fixed find_path for NDK headers in CMake.\r\n\r\n[0]: https://github.com/android-ndk/ndk/wiki/Changelog-r19#r19b\r\n[1]: https://github.com/android-ndk/ndk/issues/855\r\n[2]: https://github.com/android-ndk/ndk/issues/849\r\n[3]: https://github.com/android-ndk/ndk/issues/890\r\n[4]: https://github.com/android-ndk/ndk/issues/907"},{"Id":"9231344135","Type":"PullRequestEvent","CreatedAt":"2019-03-13T01:57:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2773","RelatedDescription":"Merged pull request \"[Mono.Android-Tests] Import additional tests\" (#2773) at xamarin/xamarin-android","RelatedBody":"Imports tests from https://github.com/xamarin/QualityAssurance/tree/b5e5c842b06dd88357443ceb5a4fa547b0943186/Automation/XARegressionTests.\r\n\r\nSome tests which represented duplicate coverage were ignored during this\r\nimport. There is however likely still _some_ level of duplication in the\r\nimported tests, but given how quickly they execute it didn't seem\r\nworthwhile to hunt down alternate coverage areas for every test.\r\n\r\nBoth Runtime test projects have had their targetSdkVersion bumped to 28,\r\nand as a result the `android:usesCleartextTraffic=\"true\"` application\r\nattribute has been added to their AndroidManifest.xml files. This allows\r\nus to avoid a breaking behavior change for applications targeting API 28:\r\nhttps://developer.android.com/about/versions/pie/android-9.0-changes-28#tls-enabled\r\n\r\nAdditional changes have been made to improve the ability to work with\r\nMono.Android-Test.csproj (and related projects) after opening\r\nXamarin.Android-Tests.sln in Visual Studio on macOS or Windows.\r\n\r\nThe new .png resources come from https://undraw.co/."},{"Id":"9231303623","Type":"PullRequestEvent","CreatedAt":"2019-03-13T01:45:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2733","RelatedDescription":"Merged pull request \"[installers] Share installer payload generation logic\" (#2733) at xamarin/xamarin-android","RelatedBody":"Introduces a new `create-pkg` project next to `create-vsix` to be used\r\nin a similar way to create a macOS installer for xamarin-android. The\r\n`build-tools/installers/create-installers.targets` file has also been\r\nadded to keep track of all of the content we require in both our macOS\r\nand Windows installers. These shared items, properties, and targets are\r\nused by both installer projects to ensure uniformity between the two\r\ninstallers we produce.\r\n\r\nThe `ConstructInstallerItems` target determines the majority of the files\r\nwhich should end up in the installer. Behavior will vary depending on the\r\nexistance of certain files or the values of certain msbuild properties.\r\nThis was done intentionally to be able to support creating installers for\r\nPR builds, open source packages, and commercial packages.\r\n\r\nThe `AndroidFirstFrameworkVersion`, `AndroidLatestStableFrameworkVersion`,\r\nand `AndroidLatestFrameworkVersion` MSBuild properties (along with some\r\nhardcoded values) are used to determine which API levels the installer\r\nwill support.\r\n\r\nThe `AndroidSupportedTargetJitAbi` MSBuild property is used to determine\r\nwhich Android ABIs the installer will support.\r\n\r\nThe `IncludeMonoBundleComponents` MSBuild property is used to determine\r\nwhether or not the components which come from a full mono integration\r\nbuild should be included in the installers.\r\n\r\nThe new `create-installers` make target will attempt to package all of\r\nthe relevant files for every ABI specified in the `ALL_JIT_ABIS` variable\r\nin `build-tools/scripts/BuildEverything.mk`. This behavior can be\r\noverridden by specifying an empty value for `_MSBUILD_ARGS` when calling\r\nthe `create-installers` make rule (as build.groovy does), or by providing\r\nan alternate value for `/p:AndroidSupportedTargetJitAbis` when building\r\neither installer directly from MSBuild.\r\n\r\nThe build.groovy script has been updated to handle creating different\r\ninstaller types for PR builds and full builds. Our macOS PR builds will\r\nnow build a mxe-win flavored version of `libmono-android`, so that it can\r\nbe included in a vsix installer and used to extend test coverage for our\r\nPR builds in the future. PR builds will also package a limited set of\r\nAndroid ABI support as briefly mentioned above.\r\n\r\nA new pkg preinstall script has also been added to fix an issue that\r\nwould result in old installations being left on disk. Now, the macOS\r\ninstaller will attempt to remove the version currently symlinked to\r\n`/Library/Frameworks/Xamarin.Android.framework/Versions/Current`\r\nbefore running.\r\n\r\nFixes #2686."},{"Id":"9231303610","Type":"IssuesEvent","CreatedAt":"2019-03-13T01:45:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2686","RelatedDescription":"Closed issue \"Remove glob use from create-vsix.csproj\" (#2686) at xamarin/xamarin-android","RelatedBody":"Consider the Visual Studio 2019 Preview 3 `Xamarin.Android.Sdk.*.vsix` contents.  It includes:\r\n\r\n```\r\n$ unzip -l Xamarin.Android.Sdk.9.1.103.12.vsix | grep Microsoft.Build.Tasks.Core.resources.dll\r\n   142336  01-25-2019 17:28   $MSBuild/Xamarin/Android/cs/Microsoft.Build.Tasks.Core.resources.dll\r\n   147456  01-25-2019 17:28   $MSBuild/Xamarin/Android/de/Microsoft.Build.Tasks.Core.resources.dll\r\n   134144  01-25-2019 17:28   $MSBuild/Xamarin/Android/en/Microsoft.Build.Tasks.Core.resources.dll\r\n   144384  01-25-2019 17:28   $MSBuild/Xamarin/Android/es/Microsoft.Build.Tasks.Core.resources.dll\r\n   147456  01-25-2019 17:28   $MSBuild/Xamarin/Android/fr/Microsoft.Build.Tasks.Core.resources.dll\r\n   145408  01-25-2019 17:28   $MSBuild/Xamarin/Android/it/Microsoft.Build.Tasks.Core.resources.dll\r\n   163840  01-25-2019 17:28   $MSBuild/Xamarin/Android/ja/Microsoft.Build.Tasks.Core.resources.dll\r\n   150528  01-25-2019 17:28   $MSBuild/Xamarin/Android/ko/Microsoft.Build.Tasks.Core.resources.dll\r\n   147968  01-25-2019 17:28   $MSBuild/Xamarin/Android/pl/Microsoft.Build.Tasks.Core.resources.dll\r\n   142848  01-25-2019 17:28   $MSBuild/Xamarin/Android/pt-BR/Microsoft.Build.Tasks.Core.resources.dll\r\n   185344  01-25-2019 17:28   $MSBuild/Xamarin/Android/ru/Microsoft.Build.Tasks.Core.resources.dll\r\n   141312  01-25-2019 17:28   $MSBuild/Xamarin/Android/tr/Microsoft.Build.Tasks.Core.resources.dll\r\n   130048  01-25-2019 17:28   $MSBuild/Xamarin/Android/zh-Hans/Microsoft.Build.Tasks.Core.resources.dll\r\n   128000  01-25-2019 17:28   $MSBuild/Xamarin/Android/zh-Hant/Microsoft.Build.Tasks.Core.resources.dll\r\n```\r\n\r\nThis is bonkers.\r\n\r\nThe *cause* is because `build-tools/create-vsix` just \"slurps up\" everything in the installation directory: https://github.com/xamarin/xamarin-android/blob/32cbc8df40b971b76e7b9fe2e1dfcf637f2a5971/build-tools/create-vsix/create-vsix.targets#L51\r\n\r\nIn retrospect, this might not have been the best idea. :-/\r\n\r\nWe need to \"improve\" things so that instead of grabbing *everything*, `create-vsix.csproj` instead includes a *specific list* of files, so that we don't inadvertently copy \"garbage\" into the installer.\r\n\r\nBonus: we need a macOS `.pkg` installer for the OSS repo, too.  It should use the same infrastructure. :-D"},{"Id":"9229588291","Type":"PullRequestEvent","CreatedAt":"2019-03-12T19:46:46","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2820","RelatedDescription":"Opened pull request \"Revert \"Revert \"[BootstrapTasks] libZipSharp & <Unzip…/> (#2750)\" (#2…\" (#2820) at xamarin/xamarin-android","RelatedBody":"…796)\"\r\n\r\nThis reverts commit a014bd307bfbc754cb2d6ed68c16a63bd3fd67de.\r\n\r\nContext: https://github.com/xamarin/xamarin-android/commit/74aaad939587d525add51d51618a3337139dad79\r\nContext: https://github.com/xamarin/xamarin-android/commit/a014bd307bfbc754cb2d6ed68c16a63bd3fd67de\r\n\r\nThis unreverts teh LibZipSharp improvements which were thought to cause\r\nproblems when building on \"clean\" systems with no Android SDK installed.\r\nThe real cause was fixed in 74aaad9 and thus we can bring the improvements\r\nback."},{"Id":"9229547231","Type":"PullRequestEvent","CreatedAt":"2019-03-12T19:40:22","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2819","RelatedDescription":"Opened pull request \"[build] Bump cmake to 3.10 and the NDK to 19b\" (#2819) at xamarin/xamarin-android","RelatedBody":"`cmake` 3.10 is the current version of the tool in the Android SDK,\r\nan update from the much older 3.6. This update brings it closer to\r\nthe host `cmake` versions (currently mostly 3.12.*)\r\n\r\nBump NDK to release [19b][0] (a.k.a. 19.1), with the following changes:\r\n\r\n * [Issue 855][1]: ndk-build automatically disables multithreaded\r\n   linking for LLD on Windows, where it may hang. It is not\r\n   possible for the NDK to detect this situation for CMake,\r\n   so CMake users and custom build systems must pass\r\n   `-Wl,--no-threads` when linking with LLD on Windows.\r\n * [Issue 849][2]: Fixed unused command line argument warning when\r\n   using standalone toolchains to compile C code.\r\n * [Issue 890][3]: Fixed CMAKE_FIND_ROOT_PATH. CMake projects will\r\n   no longer search the host's sysroot for headers and libraries.\r\n * [Issue 907][4]: Fixed find_path for NDK headers in CMake.\r\n\r\n[0]: https://github.com/android-ndk/ndk/wiki/Changelog-r19#r19b\r\n[1]: https://github.com/android-ndk/ndk/issues/855\r\n[2]: https://github.com/android-ndk/ndk/issues/849\r\n[3]: https://github.com/android-ndk/ndk/issues/890\r\n[4]: https://github.com/android-ndk/ndk/issues/907"},{"Id":"9229346807","Type":"PullRequestEvent","CreatedAt":"2019-03-12T19:08:20","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2818","RelatedDescription":"Opened pull request \"[prep-tasks] Fix git branch name identification\" (#2818) at xamarin/xamarin-android","RelatedBody":"Our current branch name identification logic does not work well\r\nwhen building in CI, and seemingly always returns `HEAD` for\r\nbuilds occuring on Jenkins.\r\n\r\nIn an attempt to fix this, we'll now use the git branch name\r\nidentification logic from:\r\nhttps://github.com/kzu/GitInfo/blob/b62e1c0e147cf75a20e94af9169b8eca5b153700/src/GitInfo/build/GitInfo.targets#L351\r\n\r\nUpdates the `GetXAVersionInfo` target to first attempt to read a\r\nbranch name from the file at `$(XamarinAndroidSourcePath)/.git/HEAD`.\r\n\r\nWhile this approach works well for a local branch checkout, we're often\r\nin a 'detached HEAD' state when executing from CI. As a fallback, the\r\n`git name-rev --name-only HEAD` command more consistently provides\r\nuseful branch information against various checkout states as compared to\r\n`git rev-parse --abbrev-ref`.\r\n\r\nSome examples of output differences for these commands are shown below:\r\n\r\n`git name-rev --name-only HEAD`\r\n* Local branch: `gitbranch-detached`\r\n* Merge commit: `remotes/origin/pr/2733/merge`\r\n* Detached HEAD: `remotes/origin/create-installers~1`\r\n* Submodule: `remotes/origin/gitbranch-detached`\r\n\r\n`git rev-parse --abbrev-ref HEAD`\r\n* Local branch: `gitbranch-detached`\r\n* Merge commit: `HEAD`\r\n* Deatched HEAD: `HEAD`\r\n* Submodule: `HEAD`\r\n\r\nGiven these local results, the `GitBranch` task has been updated to\r\nuse `git name-rev --name-only --exclude=tags/* HEAD` over the previous\r\n`git rev-parse --abbrev-ref`.call. The exclude parameter has been provided\r\nto prefer a branch name or other ref name over a tag when a tag exists."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9231839721","Type":"IssuesEvent","CreatedAt":"2019-03-13T04:20:15","Actor":"luczha","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5526","RelatedDescription":"Opened issue \"WebView.Focused event works on Android, but not on iOS\" (#5526) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\nI create a StackLayout which contains a WebView .And I set the Focused event.It works fine in Android but not works in iOS.\r\n`webView.Focused += WebView_Focused;`\r\n\r\n   ```\r\nprivate void WebView_Focused(object sender, FocusEventArgs e)\r\n   {\r\n       //do some thing            \r\n   }\r\n```\r\n\r\nI think it because of in native iOS platform.UIWebview and WKWebview do not support focus event( in native iOS we call becomeFirstResponder ).\r\n\r\nSo,is there a solution to solve it?\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9231814082","Type":"IssuesEvent","CreatedAt":"2019-03-13T04:12:05","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5128","RelatedDescription":"Closed issue \"Xamarin automation ID binding doesn't work for controls within controls\" (#5128) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nSince upgrading to Xamarin 3.4 we've starting using binding for our automation IDs following the fix so that automation IDs can use binding. This works well for controls on a xaml page binding to the viewmodel of that page but it seems that the automation ID binding doesn't work for controls that are used inside custom controls. Meaning if the automation ID of a control using within the xaml of the custom control is bound to a bindable property of the custom control then the automation ID doesn't appear to be set in a repl tree. "},{"Id":"9231570193","Type":"IssuesEvent","CreatedAt":"2019-03-13T02:59:59","Actor":"andre-motta","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5523","RelatedDescription":"Closed issue \"Template Distortion on Back Navigation Xamarin Forms 3.4.0\" (#5523) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n`Grid` inside `ItemTemplate` gets deformed when navigating back.\r\n\r\nBasically i have the following code on my `ItemTemplate`\r\n\r\n```\r\n<Frame BorderColor=\"{Binding Path=BindingContext.ColorTwo, Source={x:Reference Name=AuctionListViewXaml}}\"  BackgroundColor=\"{Binding Path=BindingContext.ColorOne, Source={x:Reference Name=AuctionListViewXaml}}\" Padding=\"2\" HeightRequest=\"{Binding Path=LeilaoHeight, Source={x:Reference Name=AuctionListViewXaml}}\" CornerRadius=\"0\">\r\n\t<Grid HorizontalOptions=\"FillAndExpand\">\r\n\t\t<Grid.ColumnDefinitions>\r\n\t\t\t<ColumnDefinition Width=\"2*\"/>\r\n\t\t\t<ColumnDefinition Width=\"5*\"/>\r\n\t\t</Grid.ColumnDefinitions>\r\n\t\t<StackLayout Grid.Column=\"0\" Spacing=\"0\" Margin=\"0,0,0,0\">\r\n\t\t\t<Image VerticalOptions=\"Center\" HorizontalOptions=\"Center\" Source=\"{Binding ProdutoImagem}\"  Aspect=\"AspectFit\" />\r\n\t\t</StackLayout>\r\n\t\t<Grid Grid.Column=\"1\" ColumnSpacing=\"0\" RowSpacing=\"0\" HorizontalOptions=\"FillAndExpand\" Margin=\"0,0,5,0\">\r\n\t\t\t<Grid.RowDefinitions>\r\n\t\t\t\t<RowDefinition Height=\"*\"/>\r\n\t\t\t\t<RowDefinition Height=\"*\"/>\r\n\t\t\t\t<RowDefinition Height=\"*\"/>\r\n\t\t\t\t<RowDefinition Height=\"*\"/>\r\n\t\t\t\t<!--<RowDefinition Height=\"*\"/>-->\r\n\t\t\t</Grid.RowDefinitions>\r\n\t\t\t<Grid.ColumnDefinitions>\r\n\t\t\t\t<ColumnDefinition Width=\"auto\"/>\r\n\t\t\t\t<ColumnDefinition Width=\"*\"/>\r\n\t\t\t</Grid.ColumnDefinitions>\r\n\t\t\t<Label Grid.Row=\"0\" Grid.Column=\"0\" Text=\"{Binding TextName}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<Label Grid.Row=\"0\" Grid.Column=\"1\" Text=\"{Binding Nome}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<BoxView Color=\"{Binding Path=BindingContext.ColorTwo, Source={x:Reference Name=AuctionListViewXaml}}\" Grid.Row=\"0\" Grid.Column=\"0\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"End\" HeightRequest=\"1\"/>\r\n\t\t\t<BoxView Color=\"{Binding Path=BindingContext.ColorTwo, Source={x:Reference Name=AuctionListViewXaml}}\" Grid.Row=\"0\" Grid.Column=\"1\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"End\" HeightRequest=\"1\"/>\r\n\t\t\t<Label Grid.Row=\"1\" Grid.Column=\"0\" Text=\"{Binding TextPrize}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<Label Grid.Row=\"1\" Grid.Column=\"1\" Text=\"{Binding ProdutoNome}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<BoxView Color=\"{Binding Path=BindingContext.ColorTwo, Source={x:Reference Name=AuctionListViewXaml}}\" Grid.Row=\"1\" Grid.Column=\"0\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"End\" HeightRequest=\"1\"/>\r\n\t\t\t<BoxView Color=\"{Binding Path=BindingContext.ColorTwo, Source={x:Reference Name=AuctionListViewXaml}}\" Grid.Row=\"1\" Grid.Column=\"1\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"End\" HeightRequest=\"1\"/>\r\n\t\t\t<Label Grid.Row=\"2\" Grid.Column=\"0\" Text=\"{Binding TextMinimumBid}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<Label Grid.Row=\"2\" Grid.Column=\"1\" Text=\"{Binding QuantidadePontos}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<!--<Label Grid.Row=\"3\" Grid.Column=\"0\" Text=\"{Binding TextLastBid}\"  VerticalOptions=\"CenterAndExpand\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<Label Grid.Row=\"3\" Grid.Column=\"1\" Text=\"{Binding UltimoLance}\"  VerticalOptions=\"CenterAndExpand\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/> -->\r\n\t\t\t<BoxView Color=\"{Binding Path=BindingContext.ColorTwo, Source={x:Reference Name=AuctionListViewXaml}}\" Grid.Row=\"2\" Grid.Column=\"0\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"End\" HeightRequest=\"1\"/>\r\n\t\t\t<BoxView Color=\"{Binding Path=BindingContext.ColorTwo, Source={x:Reference Name=AuctionListViewXaml}}\" Grid.Row=\"2\" Grid.Column=\"1\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"End\" HeightRequest=\"1\"/>\r\n\t\t\t<Label Grid.Row=\"3\" Grid.Column=\"0\" Text=\"{Binding TextExpiration}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\" VerticalTextAlignment=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t\t<Label Grid.Row=\"3\" Grid.Column=\"1\" Text=\"{Binding TempoRestante, Mode=TwoWay}\" HorizontalOptions=\"Center\" HorizontalTextAlignment=\"Center\" VerticalOptions=\"Center\"  TextColor=\"{Binding Path=BindingContext.TextColor, Source={x:Reference Name=AuctionListViewXaml}}\"/>\r\n\t\t</Grid>\r\n\t</Grid>\r\n</Frame>\r\n```\r\n    \r\nwhich translates to the items in the `ListView` below\r\n\r\n[Non Deformed](https://i.stack.imgur.com/ylHX9.jpg)\r\n\r\nAnd whenever i navigate forward to another page, if i press back the entire view gets distorted\r\n\r\nThis one below is a mild example of distortion, if the screen is smaller it will cut everything so much more.\r\n\r\n[Distorted](https://i.stack.imgur.com/5ZL86.jpg)\r\n\r\nHas anyone ever had troubles with this before? It happens on the following cases:\r\nI navigate back from another screen.\r\nThe object is added to the list from another list.\r\n\r\nI've tried loads of things and it consistently happens on Android, iOS is bug free as far as I know.\r\n\r\nXamarin Forms 3.4.0\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a listview with the ItemTemplate above\r\n2. Navigate from the item to another page using the item as a constructor for the other page\r\n3. Navigation.PopAsync()\r\n4. See that the navigation gets broken\r\n\r\n\r\n"},{"Id":"9230922007","Type":"PullRequestEvent","CreatedAt":"2019-03-12T23:58:06","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5475","RelatedDescription":"Merged pull request \"[UWP] added nuget dependency Win2D.uwp\" (#5475) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix missing dependency\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5188\r\n\r\n### Platforms Affected ### \r\n\r\n- UWP\r\n\r\n### Screencast ###\r\nhttps://www.screencast.com/t/Cq38uxLK\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9230888336","Type":"IssuesEvent","CreatedAt":"2019-03-12T23:49:31","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5270","RelatedDescription":"Closed issue \"Using Compiled Bindings with Xamarin.Forms 3.5.0.129452 causes a Runtime Exception and Terminates the Application\" (#5270) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nfollowing XAML compiles and throws a runtime exception\r\n\r\nUWP:\r\nSystem.ExecutionEngineException: 'Exception of type 'System.ExecutionEngineException' was thrown.'\r\n\r\nWPF:\r\nManaged Debugging Assistant 'FatalExecutionEngineError' : 'The runtime has encountered a fatal error. \r\nThe address of the error was at 0x731a8f42, on thread 0x28a8. \r\nThe error code is 0xc0000005. This error may be a bug in the CLR or in the unsafe or non-verifiable portions of user code. \r\nCommon sources of this bug include user marshaling errors for COM-interop or PInvoke, which may corrupt the stack.'\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:app21=\"clr-namespace:App21;assembly=App21\"\r\n             x:Class=\"App21.MainPage\"\r\n             x:DataType=\"app21:TestViewModel\">        \r\n    <StackLayout>\r\n        <Entry IsEnabled=\"{Binding CanEdit}\"/>                                                      \r\n        <Label Text=\"{Binding Text}\"/>\r\n    </StackLayout>        \r\n</ContentPage>\r\n```\r\nText is a Property that is although in a Interface that is implemented by TestViewModel.\r\nSomhow the Compiled Binding is generating IL that is not valid and crashes the runtime. In UWP it simply throws an exception and stops the application.\r\n\r\nIn WPF there is some more information but the Application is although stopped.\r\n\r\nCodeBehind:\r\n\r\n```\r\n  [XamlCompilation(XamlCompilationOptions.Compile)]    \r\n    public partial class MainPage : ContentPage\r\n    {\r\n        public MainPage()\r\n        {\r\n            InitializeComponent();\r\n            this.BindingContext = new TestViewModel();\r\n        }\r\n    }\r\n```\r\n\r\nCode:\r\n\r\n```\r\n    public sealed class TestViewModel : ITestViewModel\r\n    { \r\n        public bool CanEdit { get; set; }\r\n     \r\n        public string Text { get; set; }\r\n    }\r\n\r\n    public interface ITestViewModel\r\n    {         \r\n        string Text { get; set; }\r\n    }\r\n\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\nRun the attached Project and see the exception:\r\n\r\n### Expected Behavior\r\n\r\nNo Exception during execution\r\n\r\n### Actual Behavior\r\n\r\nException that stops the Application:\r\nOn this Code Line\r\n\r\n`this.BindingContext = new TestViewModel();`\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0.129452\r\n- Last known good version: 3.4.0.1029999\r\n- IDE: Visual Studio 2017 15.9.6, Visual Studio 2019 Preview 3\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:   16299 \r\n- Nuget Packages: Xamarin.Forms\r\n- Affected Devices: Simulator on Windows 10, 1809\r\n\r\n### Reproduction Link\r\n\r\n[App21.zip](https://github.com/xamarin/Xamarin.Forms/files/2868823/App21.zip)\r\n\r\n"},{"Id":"9230863359","Type":"IssuesEvent","CreatedAt":"2019-03-12T23:42:56","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5525","RelatedDescription":"Closed issue \"Content Page inside ShellContent renders page under tabs and header on iOS\" (#5525) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nWhen adding a Content Page as ShellContent page, the page renders under tabs and header on iOS, on Android is renders as expected.\r\n\r\n### Steps to Reproduce\r\n1. Create new Xamarin.Forms project and update to 4.0.0.169046-pre5 package\r\n2. Create a shell page AppShell.xaml\r\n3. Add two ShellContent sections and reference GroupPage.xaml\r\n4. Add GroupPage.xaml\r\n\r\n#### AppShell.xaml\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Shell \r\n    xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n    xmlns:local=\"clr-namespace:WeAreVoice.Mobile\" \r\n    RouteScheme=\"app\" \r\n    RouteHost=\"microsoft.com\"\r\n    Route=\"newapp\" \r\n    FlyoutBehavior=\"Disabled\"\r\n    x:Class=\"WeAreVoice.Mobile.AppShell\">\r\n    <ShellItem> \r\n        <ShellSection Title=\"Feed\">\r\n          <ShellContent>\r\n            <local:GroupPage />\r\n          </ShellContent>\r\n        </ShellSection>\r\n\r\n        <ShellSection Title=\"Groups\">\r\n             <ShellContent>\r\n                <local:GroupPage />\r\n             </ShellContent>\r\n        </ShellSection>\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n#### GroupPage.xaml\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" x:Class=\"WeAreVoice.Mobile.GroupPage\"\r\n             Title=\"Groups\">\r\n    <ContentPage.Content>\r\n        <Grid>\r\n            <Grid.RowDefinitions>\r\n                <RowDefinition Height=\"110\" />\r\n                <RowDefinition Height=\"*\" />\r\n                <RowDefinition Height=\"110\" />\r\n            </Grid.RowDefinitions>\r\n            <BoxView\r\n                BackgroundColor=\"Red\"\r\n                Grid.Row=\"0\"\r\n                Grid.Column=\"0\" />\r\n            <BoxView\r\n                BackgroundColor=\"Blue\"\r\n                Grid.Row=\"1\"\r\n                Grid.Column=\"0\" />\r\n            <BoxView\r\n                BackgroundColor=\"Green\"\r\n                Grid.Row=\"2\"\r\n                Grid.Column=\"0\" />\r\n        </Grid>\r\n    </ContentPage.Content>\r\n</ContentPage>\r\n```\r\n\r\n### Expected Behavior\r\n![shell_1](https://user-images.githubusercontent.com/9248053/54231272-867e7480-4508-11e9-9736-3259cab09b84.png)\r\n\r\n### Actual Behavior\r\n![shell_2](https://user-images.githubusercontent.com/9248053/54231295-91390980-4508-11e9-8766-400117f3724c.png)\r\n\r\n### iOS vs Android\r\n<img width=\"1024\" alt=\"Screenshot 2019-03-12 at 20 22 49\" src=\"https://user-images.githubusercontent.com/9248053/54231352-a877f700-4508-11e9-82bd-658c8dc71612.png\">\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.169046-pre5\r\n- IDE: Visual Studio for Mac\r\n- Platform Target Frameworks: \r\n  - iOS:  8.0 - 12\r\n  - Android: 8.1\r\n\r\n\r\n"},{"Id":"9230828868","Type":"IssuesEvent","CreatedAt":"2019-03-12T23:34:03","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5261","RelatedDescription":"Closed issue \"[Visual] Activity Indicators aren't responding to height requests correctly\" (#5261) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\non iOS height is totally ignored and on Android it's drawing multiple circles\r\n\r\n```XAML\r\n            <Label Text=\"Custom Background Color\" Margin=\"0,0,0,-10\" />\r\n            <StackLayout Orientation=\"Horizontal\">\r\n                <ActivityIndicator HeightRequest=\"200\"  BackgroundColor=\"{StaticResource SecondaryColor}\" IsRunning=\"true\" HorizontalOptions=\"FillAndExpand\" />\r\n                <ActivityIndicator HeightRequest=\"200\"  BackgroundColor=\"{StaticResource SecondaryColor}\" IsRunning=\"false\" HorizontalOptions=\"FillAndExpand\" />\r\n            </StackLayout>\r\n\r\n            <Label Text=\"Custom\" Margin=\"0,0,0,-10\" />\r\n            <StackLayout Orientation=\"Horizontal\">\r\n                <ActivityIndicator HeightRequest=\"200\"  Color=\"{StaticResource PrimaryColor}\" BackgroundColor=\"{StaticResource SecondaryColor}\" IsRunning=\"true\" HorizontalOptions=\"FillAndExpand\" />\r\n                <ActivityIndicator HeightRequest=\"200\"  Color=\"{StaticResource PrimaryColor}\" BackgroundColor=\"{StaticResource SecondaryColor}\" IsRunning=\"false\" HorizontalOptions=\"FillAndExpand\" />\r\n            </StackLayout>\r\n```"},{"Id":"9230811922","Type":"IssuesEvent","CreatedAt":"2019-03-12T23:29:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5498","RelatedDescription":"Reopened issue \"Maps Binding - Possible typo in the bindable property\" (#5498) at xamarin/Xamarin.Forms","RelatedBody":"I was looking to see how the template binding was done in #4269  and noticed this line of code :\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/138791927206ef6c2f64243f8b991ee768ef4193/Xamarin.Forms.Maps/Map.cs#L21\r\n\r\nShould this not have been nameof(ItemsSource):\r\n\r\n`\t\tpublic static readonly BindableProperty ItemsSourceProperty = BindableProperty.Create(nameof(ItemsSource), typeof(IEnumerable), typeof(Map), default(IEnumerable),`\r\n\r\n\r\n"},{"Id":"9230274469","Type":"PullRequestEvent","CreatedAt":"2019-03-12T21:36:13","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5496","RelatedDescription":"Merged pull request \"[Android] NamedSize now returns defaultValue instead of -1 if parsing from resource fails\" (#5496) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIn the previewer, `TryGetTextAppearance()` returns `-0.5` for all values. Return default value if we get a size of 0 or less.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes https://devdiv.visualstudio.com/DevDiv/_queries/edit/763877\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nBefore:\r\n\r\n![image](https://user-images.githubusercontent.com/9665847/54012828-eef4eb00-41c2-11e9-931d-0c72dbb34ec9.png)\r\n\r\nAfter:\r\n\r\n![image](https://user-images.githubusercontent.com/9665847/54012737-ac331300-41c2-11e9-9d2a-495fdc9bf37d.png)\r\n\r\n\r\n### Testing Procedure ###\r\nManual testing in previewer.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests (we will test this in the previewer)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9227600143","Type":"IssuesEvent","CreatedAt":"2019-03-12T15:25:40","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5756","RelatedDescription":"Closed issue \"Watch app template fails to build (MSB4094) in VS Mac\" (#5756) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n### Steps to Reproduce\r\n\r\nI created a new solution in VS Mac (MotionRecorder) and added to it a new WatchOS App. I attempted to build the just-generated project and received: \r\n\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(4,4): Error MSB4094: \"/Users/larryobrien/Documents/src/xamarin_mine/WatchKit_Work/MotionRecorder/MotionRecord/MotionRecord.WatchOSExtension/bin/iPhoneSimulator/Debug/device-builds/watch4.4-5.1/MotionRecordWatchOSExtension.appex;/Users/larryobrien/Documents/src/xamarin_mine/WatchKit_Work/MotionRecorder/MotionRecord/MotionRecord.WatchOSExtension/bin/iPhoneSimulator/Debug/device-builds/watch4.4-5.1/MotionRecordWatchOSExtension.appex\" is an invalid value for the \"Source\" parameter of the \"Ditto\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". (MSB4094) (MotionRecord.WatchOSApp)\r\n### Expected Behavior\r\n\r\nCompilation fails.\r\n\r\n### Actual Behavior\r\n\r\nCompilation succeeds.\r\n\r\n### Environment\r\n\r\n```\r\nVisual Studio Enterprise 2019 Preview for Mac\r\nVersion 8.0 Preview (8.0 build 2479)\r\nInstallation UUID: 6b94f136-026d-4a5a-bf6d-af2c0d8dc019\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\r\n\tPackage version: 518000266\r\n\r\n\r\nMono Framework MDK\r\nRuntime:\r\n\tMono 5.18.0.266 (2018-08/29eb176dd97) (64-bit)\r\n\tPackage version: 518000266\r\n\r\n\r\nNuGet\r\nVersion: 4.8.0.5385\r\n\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.8\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.504/Sdks\r\nSDK Versions:\r\n\t2.1.504\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n\r\nUpdater\r\nVersion: 11\r\n\r\n\r\nXamarin Designer\r\nVersion: 4.17.4.366\r\nHash: b4b7c658d\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-02-18 13:35:26 UTC\r\n\r\n\r\nApple Developer Tools\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n\r\nXamarin.Mac\r\nVersion: 5.6.0.23 (Visual Studio Enterprise)\r\nHash: ad57f877\r\nBranch: d16-0\r\nBuild date: 2019-02-12 15:19:51-0500\r\n\r\n\r\nXamarin.iOS\r\nVersion: 12.7.1.69 (Visual Studio Enterprise)\r\nHash: 011f73e9\r\nBranch: xi-interpreter\r\nBuild date: 2019-02-21 16:14:58-0500\r\n\r\n\r\nXamarin.Android\r\nVersion: 9.2.0.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/larryobrien/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08@163f45d81ce\r\nJava.Interop: xamarin/java.interop/d16-0@c987483\r\nLibZipSharp: grendello/LibZipSharp/master@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nMXE: xamarin/mxe/xamarin@b9cbb535\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.26.0@325e91a\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n\r\nMicrosoft Mobile OpenJDK\r\nJava SDK: /Users/larryobrien/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n\r\nAndroid Device Manager\r\nVersion: 1.2.0.13\r\nHash: ec487ee\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-02-20 20:21:52 UTC\r\n\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n\r\nBuild Information\r\nRelease ID: 800002479\r\nGit revision: 522ea35a65be379a2708fd885eb1adfacb54f9a8\r\nBuild date: 2019-02-23 17:46:57+00\r\nBuild branch: master\r\nXamarin extensions: 703d7b3e1a5c003264003b2293b63d72c0a03739\r\n\r\n\r\nOperating System\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\nI sample project can be found in the original feedback issue [here](https://developercommunity.visualstudio.com/comments/478997/view.html).\r\n"},{"Id":"9227102480","Type":"IssuesEvent","CreatedAt":"2019-03-12T14:26:48","Actor":"akoeplinger","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5760","RelatedDescription":"Opened issue \"GuiUnit is compiled against wrong mscorlib for XM\" (#5760) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run `make ../external/guiunit/bin/net_4_5/GuiUnit.exe XBUILD_VERBOSITY=/v:diag` in tests/\r\n2. Observe that wrong mscorlib.dll is used: `/Library/Frameworks/Mono.framework/Versions/6.0.0/lib/mono/4.5/mscorlib.dll`\r\n\r\nThis causes an issue in mono-2019-02 since types moved from System.dll to mscorlib.dll and due to the mismatch the compiler complains about types existing in both assemblies.\r\n\r\nNote that this is not a regression, it happens in master too but probably wasn't noticed yet since there were no conflicting types.\r\n\r\n### Expected Behavior\r\n\r\nThe mscorlib.dll from -api is used.\r\n\r\n### Actual Behavior\r\n\r\nThe mscorlib from `/Library/Frameworks/Mono.framework/Versions/6.0.0/lib/mono/4.5/mscorlib.dll` is used.\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/akoeplinger/2a617a289a7bd8db6c611d9be0a35d23"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":15,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":50,"FavoriteCount":17,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":145,"FavoriteCount":68,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":8,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":17,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":260,"FavoriteCount":129,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":60,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":21,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":14,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":51,"FavoriteCount":21,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":25,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null}]}},"RunOn":"2019-03-13T05:30:52.4058214Z","RunDurationInMilliseconds":2913}