{"Data":{"Blog":{"FeedItems":[{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7832559818","Type":"PullRequestEvent","CreatedAt":"2018-06-15T18:59:18","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1838","RelatedDescription":"Opened pull request \"[test] experiment to see if NUnit2 format is causing hang on Windows\" (#1838) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7832504547","Type":"PullRequestEvent","CreatedAt":"2018-06-15T18:46:31","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1837","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for android:name=\"$\" in manifest\" (#1837) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1698\r\n\r\nIn the project reproducing this issue, the Xamarin.Firebase.lid NuGet\r\nproduces an `AndroidManifest.xml` with the following line:\r\n\r\n    <permission android:name=\"${applicationId}.permission.C2D_MESSAGE\" android:protectionLevel=\"signature\" />\r\n\r\nUnfortunately our manifest merging code is throwing an exception and\r\nproducing a warning such as:\r\n\r\n    Xamarin.Android.Common.targets(1910,3): warning : Name cannot begin with the '$' character, hexadecimal value 0x24.\r\n\r\nWe also aren't getting the contents of this `AndroidManifest.xml`\r\nmerged, so this is definitely an issue!\r\n\r\nThe exception is coming from the following code:\r\n\r\n    var existing = (name != null) ?\r\n        doc.XPathSelectElement (string.Format (\"/manifest/{0}[@android:name='{1}']\", top.Name.LocalName, XmlConvert.VerifyNCName (name.Value)), nsResolver) :\r\n        doc.XPathSelectElement (string.Format (\"/manifest/{0}\", top.Name.LocalName));\r\n\r\nApparently `XmlConvert.VerifyNCName` throws an exception if the input\r\nvalue contains a `$`.\r\n\r\nIt appears it has been this way for quite some time, prior to becoming\r\nopen source:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blame/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Xamarin.Android.Build.Tasks/Utilities/ManifestDocument.cs#L444\r\n\r\nI suspect the original goal was to validate the XPath expression\r\nwouldn't throw an exception, but it seems to work fine to use the\r\nvalue as-is. Let's just not call `XmlConvert.VerifyNCName` at all.\r\n\r\nAfter the fix, I get additional lines in my\r\n`obj/Debug/android/AndroidManifest.xml`:\r\n\r\n    <permission android:name=\"com.companyname.DollarSignProb.permission.C2D_MESSAGE\" android:protectionLevel=\"signature\" />\r\n    <uses-permission android:name=\"com.companyname.DollarSignProb.permission.C2D_MESSAGE\" />\r\n\r\nSo it is now properly merging the `AndroidManifest.xml`.\r\n\r\nOther changes:\r\n- Updated `ManifestTest.MergeLibraryManifest` test so it also verifies\r\n  this fix\r\n- Added `XA4302` as part of the effort towards:\r\n  https://github.com/xamarin/xamarin-android/issues/1560"},{"Id":"7832208564","Type":"IssuesEvent","CreatedAt":"2018-06-15T17:39:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1816","RelatedDescription":"Closed issue \"No longer able to compile Mono.Android-Tests.csproj on macOS against d15-8\" (#1816) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. msbuild /t:SignAndroidPackage /p:Configuration=Release /p:AdbTarget=-s 709KPVH0047183 /p:AndroidNdkDirectory=$(AndroidNdk) /p:NdkBuildPath=$(AndroidNdk)/ndk-build xamarin-android/src/Mono.Android/Test/Mono.Android-Tests.csproj\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild succeeds.\r\n\r\n### Actual Behavior\r\nBuild fails with:\r\n```\r\n  CSC : error CS2001: Source file '/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/LayoutBinding.cs' could not be found. [/Users/xamarinqa/myagent/_work/r1/a/monodroid/external/xamarin-android/src/Mono.Android/Test/Mono.Android-Tests.csproj]\r\n```\r\n### Version Information\r\nMono version: 5.12.0.271 (6f9bef3bdb8)  (2018-06-07 21:09:48 -04:00)\r\nXA version: 8.4.0.1 (HEAD/a6ec739ce) \r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-a2b1d37218964b0384122ac3ba61d79d.txt\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#633426](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/633426)"},{"Id":"7832179034","Type":"PullRequestEvent","CreatedAt":"2018-06-15T17:32:55","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1836","RelatedDescription":"Opened pull request \"Bump to mono:2018-06\" (#1836) at xamarin/xamarin-android","RelatedBody":null},{"Id":"7831719680","Type":"IssuesEvent","CreatedAt":"2018-06-15T15:51:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1835","RelatedDescription":"Opened issue \"Exploration: Profiler & Strings & Sanity\" (#1835) at xamarin/xamarin-android","RelatedBody":"When recently profiling Xamarin.Android application startup, we observed that the profiler *thought* that strings were being allocated in locations that didn't make any sense.  Is this a Profiler bug? A Mono issue?  Cthulhu infecting our brains?\r\n\r\nTwo examples:\r\n\r\n## const variables are counted twice\r\n\r\nConsider this generated code for `Activity.OnCreate()`:\r\n\r\n```csharp\r\n\t\t[Register (\"onCreate\", \"(Landroid/os/Bundle;)V\", \"GetOnCreate_Landroid_os_Bundle_Handler\")]\r\n\t\tprotected virtual unsafe void OnCreate (Android.OS.Bundle savedInstanceState)\r\n\t\t{\r\n\t\t\tconst string __id = \"onCreate.(Landroid/os/Bundle;)V\";\r\n\t\t\ttry {\r\n\t\t\t\tJniArgumentValue* __args = stackalloc JniArgumentValue [1];\r\n\t\t\t\t__args [0] = new JniArgumentValue ((savedInstanceState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) savedInstanceState).Handle);\r\n\t\t\t\t_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);\r\n\t\t\t} finally {\r\n\t\t\t}\r\n\t\t}\r\n```\r\n\r\nThe profiler claims that two strings are allocated when this method is invoked.\r\n\r\n## Strings from nothing\r\n\r\nConsider this generated code for `Activity.n_OnCreate_Landroid_os_Bundle_()`:\r\n\r\n```csharp\r\n\t\tstatic void n_OnCreate_Landroid_os_Bundle_ (IntPtr jnienv, IntPtr native__this, IntPtr native_savedInstanceState)\r\n\t\t{\r\n\t\t\tAndroid.App.Activity __this = global::Java.Lang.Object.GetObject<Android.App.Activity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);\r\n\t\t\tAndroid.OS.Bundle savedInstanceState = global::Java.Lang.Object.GetObject<Android.OS.Bundle> (native_savedInstanceState, JniHandleOwnership.DoNotTransfer);\r\n\t\t\t__this.OnCreate (savedInstanceState);\r\n\t\t}\r\n```\r\n\r\nNotice that it doesn't allocate any strings itself, and in a \"hot path\" (invoked more than once with the same parameters) *no* strings should be allocated, as `__this` and `savedInstanceState` will already be registered.  (OK, perhaps `savedInstanceState` is new every time, but go with me here.)\r\n\r\nThe profiler reported that a string was being allocated in this method, and our interpretation of the profiler was that it was *this method **itself***, not something called by this method.\r\n\r\nWhat is the profiler talking about?"},{"Id":"7831697429","Type":"PullRequestEvent","CreatedAt":"2018-06-15T15:47:41","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1834","RelatedDescription":"Opened pull request \"[build] fix for monodroid.targets on Windows\" (#1834) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build?buildId=1778402\r\n\r\nSince d18c45a, the build has been failing on Windows with:\r\n\r\n    src\\monodroid\\monodroid.targets (162, 5)\r\n    src\\monodroid\\monodroid.targets(162,5): Error MSB4018: The \"ReplaceFileContents\" task failed unexpectedly.\r\n    System.IO.FileNotFoundException: Could not find file 'E:\\A\\_work\\2\\s\\external\\Java.Interop\\src\\Java.Runtime.Environment\\Java.Runtime.Environment.dll.config'.\r\n    File name: 'E:\\A\\_work\\2\\s\\external\\Java.Interop\\src\\Java.Runtime.Environment\\Java.Runtime.Environment.dll.config'\r\n    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n    at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n    at System.IO.StreamReader..ctor(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean checkHost)\r\n    at System.IO.StreamReader..ctor(String path)\r\n    at System.IO.File.OpenText(String path)\r\n    at Xamarin.Android.BuildTools.PrepTasks.ReplaceFileContents.Execute() in E:\\A\\_work\\2\\s\\build-tools\\xa-prep-tasks\\Xamarin.Android.BuildTools.PrepTasks\\ReplaceFileContents.cs:line 35\r\n    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nCurrently nothing on Windows creates this file, since it is generated\r\nby a Makefile:\r\n\r\nhttps://github.com/xamarin/java.interop/blob/5efe5c29a0f0e1b7e80bc0b51d847c339d438f9a/Makefile#L89\r\n\r\nFor now, we can just skip the `ReplaceFileContents` task if the file\r\ndoesn't exist."},{"Id":"7831685280","Type":"IssuesEvent","CreatedAt":"2018-06-15T15:45:32","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1833","RelatedDescription":"Opened issue \"Review `JNIEnv.RegisterJniNatives()` for allocations\" (#1833) at xamarin/xamarin-android","RelatedBody":"When recently profiling Xamarin.Android application startup, we observed that lots of values were being allocated within [`JNIEnv.RegisterJniNatives()`](https://github.com/xamarin/xamarin-android/blob/master/src/Mono.Android/Android.Runtime/JNIEnv.cs#L115-L149)\r\n\r\nWe should review this method and anything it calls to see if there's anything we can do differently.\r\n\r\n(Obvious \"do differently\" angle: https://github.com/xamarin/xamarin-android/projects/1)"},{"Id":"7831655998","Type":"IssuesEvent","CreatedAt":"2018-06-15T15:40:03","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1832","RelatedDescription":"Opened issue \"JNINativeWrapper shouldn't use Guids\" (#1832) at xamarin/xamarin-android","RelatedBody":"When recently profiling Xamarin.Android application startup, we observed that [`JNINativeWrapper`](https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Android.Runtime/JNINativeWrapper.cs) is using `Guid.NewGuid()`: https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Android.Runtime/JNINativeWrapper.cs#L51\r\n\r\n`Guid.NewGuid()` is ***SLOW***. (It pulls in the crypto stack!) It should not be used unless it is actually needed, and it is not needed here. (We just need \"unique\" values; `Interlocked.Increment()` would suffice.)"},{"Id":"7831638786","Type":"IssuesEvent","CreatedAt":"2018-06-15T15:36:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1831","RelatedDescription":"Opened issue \"TypeManager.RegisterType() doesn't use type mappings\" (#1831) at xamarin/xamarin-android","RelatedBody":"When recently profiling Xamarin.Android application startup, we observed that a callstack \"rooted\" in `TypeManager.RegisterType()` was using LINQ.\r\n\r\nHowever, the *real* problem is that `TypeManager.RegisterType()` doesn't use our type mapping files!\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Java.Interop/TypeManager.cs#L310-L326\r\n\r\nIt should *at minimum* be using [`JNIEnv.GetJniName(Type)`](https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Android.Runtime/JNIEnv.cs#L826-L837).  *Then*, we need to make sure that `monodroid_typemap_managed_to_java()` is actually returning values, so that we don't hit the (slow, LINQ-using) `JavaNativeTypeManager.ToJniName()` fallback path."},{"Id":"7831610935","Type":"IssuesEvent","CreatedAt":"2018-06-15T15:31:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1830","RelatedDescription":"Opened issue \"monodroid_typemap_java_to_managed is failing\" (#1830) at xamarin/xamarin-android","RelatedBody":"When recently profiling Xamarin.Android application startup, we observed lots of string allocations were being performed as part of a `Object.GetObject()` call:\r\n\r\n1. [`Object.GetObject()`](https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Java.Lang/Object.cs#L441-L468) >\r\n2. [`TypeManager.CreateInstance()`](https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Java.Interop/TypeManager.cs#L235-L294) >\r\n3. [`TypeManager.GetJavaToManagedType()`](https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Java.Interop/TypeManager.cs#L206-L228)\r\n4. [`JavaNativeTypeManager.ToCliType `](https://github.com/xamarin/java.interop/blob/8ad8e1205a29b22f4b353fa3f760e5f9959712a7/src/Java.Interop.Tools.TypeNameMappings/Java.Interop.Tools.TypeNameMappings/JavaNativeTypeManager.cs#L117-L126)\r\n5. ...\r\n\r\nThe problem is that (4) *should not have happened*; the only reason it happens is because the `monodroid_typemap_java_to_managed()` call is returning NULL, forcing us to hit a fallback path (slow! allocates many strings!):\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Java.Interop/TypeManager.cs#L208-L210\r\n\r\nWe need to determine why `monodroid_typemap_java_to_managed()` is failing."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7833711517","Type":"PullRequestEvent","CreatedAt":"2018-06-16T02:12:22","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3060","RelatedDescription":"Opened pull request \"[UWP] Remove use of TLI for Cells\" (#3060) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nReusing templated cells on UWP breaks the UWP listview in multiple ways. This change rolls back to just creating a new cell for each row.  I tested the memory implications of this and did not see any leaks caused by this changed.   At a later point we can further test and optimize the performance but ListView2 may trump that effort\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #2617\r\n- fixes #3053\r\n- fixes #2832\r\n\r\n### Platforms Affected ###\r\n- UWP\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7833534145","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:07","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2993","RelatedDescription":"Closed issue \"[Android] Bottom Tab Bar with a navigation page is hiding content\" (#2993) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThe tab bar overlaps the pages content when it's a NavigationPage\r\n\r\n### Steps to Reproduce\r\n\r\n```C#\r\nTabbedPage page = new TabbedPage();\r\n\r\n\t\t\tpage.On<Android>().SetToolbarPlacement(PlatformConfiguration.AndroidSpecific.ToolbarPlacement.Bottom);\r\n\t\t\tpage.BarBackgroundColor = Color.Transparent;\r\n\r\n\t\t\tFunc<ContentPage> createPage = () =>\r\n\t\t\t{\r\n\t\t\t\tGrid grid = new Grid();\r\n\t\t\t\tgrid.RowDefinitions.Add(new RowDefinition() { Height = GridLength.Star });\r\n\t\t\t\tgrid.RowDefinitions.Add(new RowDefinition() { Height = GridLength.Auto });\r\n\t\t\t\tgrid.Children.Add(new Label() { Text = \"candy\", BackgroundColor = Color.Purple });\r\n\r\n\t\t\t\tvar bottomLabel = new Label() { Text = \"Bottom\" };\r\n\t\t\t\tGrid.SetRow(bottomLabel, 1);\r\n\t\t\t\tgrid.Children.Add(bottomLabel);\r\n\r\n\t\t\t\tvar contentPage = new ContentPage()\r\n\t\t\t\t{\r\n\t\t\t\t\tContent = grid,\r\n\t\t\t\t\tIcon = \"coffee.png\"\r\n\t\t\t\t};\r\n\t\t\t\treturn contentPage;\r\n\r\n\t\t\t};\r\n\r\n\t\t\t \r\n\t\t\tpage.Children.Add(new NavigationPage(createPage()));\r\n\t\t\tpage.Children.Add((createPage()));\r\n\r\n\t\t\tpage.Children.Add(new ContentPage() { Icon = \"calculator.png\" });\r\n\r\n\t\t\treturn page;\r\n```\r\n\r\n### Expected Behavior\r\nThe content frame when the navigation bar is on the bottom should be measured correctly when the page has a navigation page\r\n\r\n### Actual Behavior\r\nThe content shows up below the navigation bar\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1\r\n"},{"Id":"7833534143","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:07","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2169","RelatedDescription":"Closed issue \"When a child is added to the relative layout in run time and its layout position is changed in run time, position is not updated\" (#2169) at xamarin/Xamarin.Forms","RelatedBody":"### When a child is added to the relative layout in run time and its layout position is changed in run time, position is not updated\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a label in the relative layout in run time at the specified position\r\n2. change the position of the label added in run time\r\n\r\n### Expected Behavior\r\nPosition of the label added to the relative layout should be updated when changed\r\n\r\n### Actual Behavior\r\nPosition of the label added to the relative layout is not updated when changed\r\n\r\n### Basic Information\r\nThe above case works fine in Xamarin.Forms.Version.2.3.3.180, the issue is reproduced in the version 2.4.0+\r\n\r\n- Version with issue: 2.4.0+\r\n- Last known good version:2.3.3.180\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload \r\n[Issue_Sample.zip](https://github.com/xamarin/Xamarin.Forms/files/1840662/Issue_Sample.zip)\r\nor provide a link to a reproduction case -->\r\n\r\nRun the sample attached, click the button, first time a label will be added to the relative layout at a position, second time position will be changed, but the layout position in the view, will not be updated.\r\n"},{"Id":"7833534139","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:07","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2837","RelatedDescription":"Closed issue \"Regression - Android - Exception thrown during NavigationPage.Navigation.PopAsync\" (#2837) at xamarin/Xamarin.Forms","RelatedBody":"I am seeing an `ArgumentOutOfRangeException` when executing PopAsync after inserting a page into the navigation stack, which seems to be a regression of [this issue](https://bugzilla.xamarin.com/show_bug.cgi?id=53179) and may be related to #2576 .\r\n\r\nThe issue can be reproduced by adding a single empty page to an empty template project and then including the following code in an async OnStart() implementation:\r\n\r\n```\r\n\tvar nav = (NavigationPage) MainPage;\r\n\tnav.Navigation.InsertPageBefore(new SecondPage(), nav.CurrentPage);\r\n\tawait nav.Navigation.PopAsync(false);\r\n```\r\n\r\nThis issue only affects Android projects using Material Design (FormsAppCompatActivity).\r\n\r\n- Version with issue: All Xamarin.Forms versions from v2.5.1.444934 onwards\r\n- Last known good version: v2.5.0.280555\r\n- IDE: VS2017 v15.7.1\r\n- Android Target Framework: 7.1, 8.0, 8.1\r\n- Android Support Library Version: v25.4.0.2 and v27.0.2\r\n\r\n[StackTrace.txt](https://github.com/xamarin/Xamarin.Forms/files/2041384/StackTrace.txt)\r\n[BugRepro.zip](https://github.com/xamarin/Xamarin.Forms/files/2041385/BugRepro.zip)\r\n"},{"Id":"7833534125","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:06","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2996","RelatedDescription":"Closed issue \"[UWP] Xamarin.Forms 3.1 ListView ItemTapped event issue for UWP. \" (#2996) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI am facing LIST VIEW related issues after upgrading to Xamarin Forms 3.1.0.550168 package.\r\nItemTapped event is not working for Newly added item into list.\r\n\r\nIf item is already added into the list its working fine, but if you add item dynamically then Tapped event is not executing for new items. It's working fine for ANDROID.\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Forms project.\r\n2. Select Platform UWP.\r\n3. Upgrade to Xamarin.Forms Nuget to 3.1.0.550168 \r\n4. Add  ListView with 2-3 items and one button.\r\n5. Bind ItemTapped event to listView using Xamarin.Forms.BehaviorsPack.\r\n6. Run Project. \r\n7. ItemTapped will work fine for 2-3 items. Now click on Button and Added Item into the list on each click dynamically.\r\n8. Item Tapped will not work for Newly added item.\r\n\r\n### Expected Behavior\r\n Item Tapped Event should work for newly added items too.\r\n\r\n### Actual Behavior\r\nItem Tapped Event working for Exiting item only not working for dynamically added item.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.1.0.550168 \r\n- Last known good version: XF 3.0.0.482510\r\n- IDE: Microsoft Visual Studio Community 2017\r\n- Platform Target Frameworks: \r\n  - UWP:  16299 \r\n\r\n- Affected Devices: UWP\r\n\r\n### Screenshots\r\n![1](https://user-images.githubusercontent.com/30036418/41190633-6fcdfb84-6c00-11e8-837b-b79c25d1e90d.png)\r\n![2](https://user-images.githubusercontent.com/30036418/41190634-70172c00-6c00-11e8-91ea-42a360cb2f9b.png)\r\n\r\n### Reproduction Link\r\n\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7833534117","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:06","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3019","RelatedDescription":"Closed issue \"[UWP] Grouped ListView Header empty\" (#3019) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nThe group header of a grouped ListView is empty, even a correct DataTemplate is provided.\r\n \r\n### Steps to Reproduce\r\n\r\n1. Compile and run the provided sample\r\n2. Click on the \"Fill\" button\r\n\r\n### Expected Behavior\r\n\r\nEach group should have a non empty header.\r\n\r\n### Actual Behavior\r\n\r\nThe header is empty.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.0.0.530893\r\n- Last known good version: Xamarin.Forms 3.0.0.482510\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  16299 \r\n- Nuget Packages:\r\nXamarin.Forms 3.0.0\r\n- Affected Devices:\r\nWindows 10\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n[GroupedListViewIssue.zip](https://github.com/xamarin/Xamarin.Forms/files/2094402/GroupedListViewIssue.zip)\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->"},{"Id":"7833534115","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:06","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3018","RelatedDescription":"Closed issue \"[UWP] Grouped ListView ArgummentOutOfRageException ItemTapped\" (#3018) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nTapping on an item in a grouped ListView causes an ArgumentOutOfRangeException.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Compile and start sample \r\n2. Click on the \"Fill\" Button.\r\n3. Tap on any item of the ListView\r\n\r\n### Expected Behavior\r\n\r\nInvoke the event handler.\r\n\r\n### Actual Behavior\r\n\r\nThrows an ArgumentOutOfRangeException.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.0.0.561731\r\n- Last known good version: Xamarin.Forms 3.0.0.446417\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  16299  \r\n- Nuget Packages: Xamarin.Froms \r\n\r\n- Affected Devices:\r\nWindows 10\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[GroupedListViewIssue.zip](https://github.com/xamarin/Xamarin.Forms/files/2094341/GroupedListViewIssue.zip)\r\n"},{"Id":"7833534114","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:06","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3009","RelatedDescription":"Closed issue \"[UWP] Clearing out Grouped Listview in certain layouts causes  System.Runtime.InteropServices.COMException\" (#3009) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n```\r\nSystem.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at Windows.UI.Xaml.UIElement.Measure(Size availableSize)\r\n   at Xamarin.Forms.Platform.UWP.ViewToRendererConverter.WrapperControl.MeasureOverride(Size availableSize)\r\n```\r\n\r\nCaused by\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/2976\r\n### Steps to Reproduce\r\n\r\n1.  Open Repro\r\n2.  Click Clear\r\n3. Crash\r\n\r\n### Expected Behavior\r\n\r\nListView should clear out with no crash\r\n\r\n### Actual Behavior\r\n\r\nUWP Crashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  3.0.0.561731 \r\n- Last known good version: 3.0.0.550146\r\n\r\n### Reproduction Link\r\n[UwpGroupedException.zip](https://github.com/xamarin/Xamarin.Forms/files/2091996/UwpGroupedException.zip)\r\n\r\n"},{"Id":"7833534108","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:06","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3008","RelatedDescription":"Closed issue \"[UWP] Setting ListView.ItemSource to null doesn't cause it clear out its contents\" (#3008) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nSetting the UWP ItemSource to null doesn't clear out the ListView on UWP\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Set the listview ItemSource to something with > 0 items\r\n2. Set the listview ItemSource to null\r\n3.  the items rendered from step 1 will still be present\r\n\r\n### Expected Behavior\r\nAll items renderered in the ListView should go away when ItemSource is set to null\r\n\r\n### Actual Behavior\r\nViewCells don't go away\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  3.0.0.561731\r\n- Last known good version:  3.0.0.530893\r\n\r\n### Reproduction Link\r\n[UwpToNull.zip](https://github.com/xamarin/Xamarin.Forms/files/2091722/UwpToNull.zip)\r\n\r\n\r\n### Work around\r\nSet the ItemSource to a non null list with zero elements \r\n"},{"Id":"7833534101","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:06","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3033","RelatedDescription":"Closed issue \"VisualStateGroupList.Validate is expensive\" (#3033) at xamarin/Xamarin.Forms","RelatedBody":"Benchmarks have this method regularly pop up into the hundreds of milliseconds."},{"Id":"7833534096","Type":"IssuesEvent","CreatedAt":"2018-06-16T00:01:06","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1799","RelatedDescription":"Closed issue \"[iOS] listView without data crash on ipad. \" (#1799) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\nOn ipad,when set listView isrefreshing state is true and without items, at this time tap to srcoll the listView, it will crash.  but it's normal on iphone.\r\n\r\n### Steps to Reproduce\r\n\r\n1. set listview is refreshing is true  and without items.\r\n2. tap to scroll the listview  (normal tap is ok)\r\n3. app on ipad will crash.\r\n\r\n\r\n- Version with issue:  Xamarin.Forms.2.3.4.247\r\n- Last known good version:\r\n- IDE:  VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/19897396/35839293-9a8d1bd4-0b2a-11e8-8f45-a3f98c06624d.png)\r\n\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7833485500","Type":"IssuesEvent","CreatedAt":"2018-06-15T23:36:00","Actor":"MaxHampton","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3059","RelatedDescription":"Opened issue \"Unexpected Behavior with CascadeInputTransparent and Nested Layouts\" (#3059) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI am building a custom control. The main layout is a RelativeLayout, that contains one View by default, and several Grids containing Views depending upon bound ItemsSource. I want to be able to click through the relative view in order to interact with the content behind it (scrolling). I also want to be able to interact with the Views within the Grids.\r\n\r\nI set the main RelativeLayout to use InputTransparent = true and CascadeInputTransparent = false. I set the Grids to the same. I set the View that I want to be clickable to InputTransparent = false. This View does not receive any touch events on Android. However, the View that is not nested within a Grid is clickable and responds to touch events.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create a RelativeLayout with InputTransparent = true and CascadeInputTransparent = false.\r\n2.  Create a Grid as child of this RelativeLayout with same InputTransparent settings.\r\n3.  Create a View that should respond to user input within the Grid with InputTransparent = false\r\n\r\n### Expected Behavior\r\n\r\nThe nested View will respond to user interaction.\r\n\r\n### Actual Behavior\r\n\r\nThe nested View does not receive touch events, verified through a custom renderer overriding OnDispatchTouchEvent (I think it was that method?)\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.0.0.550146\r\n- Last known good version: N/A\r\n- IDE: Visual Studio 2017 Enterprise\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  Xamarin.iOS 1.0\r\n  - Android: MonoAndroid 8.1\r\n  - UWP:  N/a\r\n- Android Support Library Version: 25.4.0.2\r\n- Nuget Packages::\r\n  - Required by Xamarin.Forms (Support Libraries)\r\n  - MSBuild.SDK.Extras\r\n- Affected Devices: Android Emulator API Level 23\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7833260079","Type":"IssuesEvent","CreatedAt":"2018-06-15T22:04:26","Actor":"Magendanz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3058","RelatedDescription":"Opened issue \"First page of CarouseView is blank on iOS\" (#3058) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe current implementation of CarouselView in the feature_carouselview branch shows a blank page on iOS for the first item selected.  It stays blank even after navigating away and returning to that page.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build NuGet package for feature_carousel branch and use it in your project\r\n2. Create a ContentPage with a CarouselView control\r\n3. In the page constructor, set the CarouselView control's ItemsSource and Position (SelectedItem doesn't work yet)\r\n\r\n### Expected Behavior\r\nItemTemplate should be displayed with bindings to SelectedItem.\r\n\r\n### Actual Behavior\r\nPage is entirely blank.\r\n\r\n### Basic Information\r\nWorks as expected on Android.\r\n\r\n- Version with issue: Xamarin.Forms feature_carouselview branch, View #1882\r\n- Last known good version: New feature\r\n- IDE: VS 2017 v15.7.3\r\n- Platform Target Frameworks:\r\n  - iOS:  11.12.0.4\r\n  - Android: 8.3.3.2\r\n- Android Support Library Version: N/A\r\n- Nuget Packages: N/A\r\n- Affected Devices: Android & iOS tested\r\n\r\n### Screenshots\r\nObserved:\r\n![observed](https://user-images.githubusercontent.com/2725343/41491330-4d592234-70ad-11e8-81c0-36abf7f4cb94.png)\r\n\r\nExpected:\r\n![expected](https://user-images.githubusercontent.com/2725343/41491335-5d40fc94-70ad-11e8-82cc-e7fde26f54cc.png)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7833682962","Type":"PullRequestEvent","CreatedAt":"2018-06-16T01:46:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4281","RelatedDescription":"Merged pull request \"[IdentityLookupUI] Add bindings for Xcode 10 Beta 1\" (#4281) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7833202856","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:47:18","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4279","RelatedDescription":"Merged pull request \"[Jenkins] Publish bundle.zip and msbuild.zip as GH statuses as well. (#4238)\" (#4279) at xamarin/xamarin-macios","RelatedBody":"This also requires a maccore bump.\n\nDiff: https://github.com/xamarin/maccore/compare/76ab6a58ff9061d35450f4bc75d075874a8489a8...347ba77a16159e911191587a49dd55c100117c84"},{"Id":"7833195777","Type":"IssuesEvent","CreatedAt":"2018-06-15T21:45:10","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4271","RelatedDescription":"Closed issue \"Make exception marshaling work with system mono\" (#4271) at xamarin/xamarin-macios","RelatedBody":"_Submitted by Rolf Bjarne Kvinge \\[MSFT\\] \\[MSFT\\] on 2017-10-09 17:11 UTC_\r\n\r\n[Spinoff from bug #[59979](https://bugzilla.xamarin.com/show_bug.cgi?id=59979), which ended up a confusing mess due to fixes from several teams included - this bug is about the problem in Xamarin.Mac]\r\n\r\nSlack:\r\n\r\n```\r\nAlan McGovern [12:53] 2017-10-05 11:52:49.733 MonoDevelop[46104:4956973] Xamarin.Mac: Could not load mono_set_pending_exception\r\nAlan McGovern [12:54] any idea why that's crashing my IDE?\r\nAlan McGovern [12:54] https://gist.github.com/alanmcgovern/b39f921c6cf14ab6f2e78abac2f74c94\r\n\r\nRolf Kvinge [12:56] let me look\r\n\r\nRolf Kvinge [12:57] https://github.com/xamarin/ios-sim-sharp/blob/7b7a174d398a3ccd2b82936619b3f74d8baa7e73/MonoTouch.Hosting/Bindings/Library64.cs#L39\r\nRolf Kvinge [12:57] it's the `[MarshalNativeExceptions]` attribute\r\n\r\nAlan McGovern [12:58] yeah - we want to marshal native exceptions\r\n\r\nRolf Kvinge [12:58] XM will catch the native exception, convert it to a managed exception, and call `mono_set_pending_exception`\r\n\r\nAlan McGovern [12:58] as we have for 5-6 years now 😛\r\n\r\nRolf Kvinge [12:58] but `mono_set_pending_exception` is a private symbol, so XM doesn't find it\r\nRolf Kvinge [12:58] and then aborts\r\n\r\nAlan McGovern [12:58] why is it private?\r\nAlan McGovern [12:58] that's an ABI breakage by the sounds of it\r\n\r\nRolf Kvinge [12:59] it's not public in the headers\r\n\r\nAlan McGovern [12:59] when did it become not-public?\r\n\r\nRolf Kvinge [12:59] which works as long as you link statically\r\nRolf Kvinge [12:59] but it breaks when using the system libmono.dylib\r\n\r\nAlan McGovern [12:59] this is the configuration we've been shipping for years now\r\n\r\nRolf Kvinge [13:00] it probably broke when I implemented better support for marshalling exceptions\r\n```\r\n\r\n\r\n<br />\r\n\r\nPR in progress which needs to be completed: <https://github.com/xamarin/xamarin-macios/pull/2853>\r\n\r\nWorkaround to call mono\\_raise\\_exception if mono\\_set\\_pending\\_exception isn't available:\r\n\r\nmaster: <https://github.com/xamarin/xamarin-macios/pull/2845> \r\nd15-5: <https://github.com/mono/mono/pull/4654>\r\n\r\n***\r\n\r\n_Xamarin Bugzilla comment 1 by Rolf Bjarne Kvinge [MSFT] [MSFT] on 2018-03-22 12:38 UTC_\r\n\r\nNew mono PR: <https://github.com/mono/mono/pull/7759>\r\n\r\n* * *\r\n\r\n_Reference: <https://bugzilla.xamarin.com/show_bug.cgi?id=60065>_"},{"Id":"7833195368","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:45:03","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4272","RelatedDescription":"Merged pull request \"[runtime] Use public mono API to set the pending exception. Fixes #4271.\" (#4272) at xamarin/xamarin-macios","RelatedBody":"This makes exception marshaling work with Xamarin.Mac apps that use the system\nmono (such as Visual Studio for Mac, and assuming at least a v5.12 system\nmono).\n\nhttps://github.com/xamarin/xamarin-macios/issues/4271"},{"Id":"7833166045","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:36:25","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4281","RelatedDescription":"Opened pull request \"[IdentityLookupUI] Add bindings for Xcode 10 Beta 1\" (#4281) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7832967749","Type":"PullRequestEvent","CreatedAt":"2018-06-15T20:43:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4275","RelatedDescription":"Merged pull request \"[videosubscriberaccount] Update for beta 1\" (#4275) at xamarin/xamarin-macios","RelatedBody":"This ended up enabling the framework for macOS."},{"Id":"7832963055","Type":"PullRequestEvent","CreatedAt":"2018-06-15T20:42:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4256","RelatedDescription":"Merged pull request \"[mapkit] Updates for beta1\" (#4256) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7832959755","Type":"PullRequestEvent","CreatedAt":"2018-06-15T20:41:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4258","RelatedDescription":"Merged pull request \"[macos][quartzcomposer] Update for beta 1\" (#4258) at xamarin/xamarin-macios","RelatedBody":"Nothing really new beside the OpenGL related deprecation and the fact\nthat 3 fields were removed, without deprecation, and this requires some\nadjustments in the intro tests (while running on 10.14) to ignore them.\n\n1) ApiFieldTest.FieldExists (Introspection.MacApiFieldTest.ApiFieldTest.FieldExists)\n     3 errors found in 5680 fields validated: QCCompositionInputRSSArticleDurationKey, QCCompositionInputRSSFeedURLKey, QCCompositionProtocolRSSVisualizer\n  Expected: 0\n  But was:  3\n\n  at Introspection.ApiFieldTest.FieldExists () [0x00127] in /Users/poupou/git/xcode10/xamarin-macios/tests/introspection/ApiFieldTest.cs:245\n  at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in /Users/poupou/git/xcode10/xamarin-macios/external/mono/mcs/class/corlib/System.Reflection/MonoMethod.cs:305\n\n2) ApiFieldTest.NonNullNSStringFields (Introspection.MacApiFieldTest.ApiFieldTest.NonNullNSStringFields)\n     3 errors found in 4904 fields validated: QuartzComposer.QCComposition.InputRSSArticleDurationKey, QuartzComposer.QCComposition.InputRSSFeedURLKey, QuartzComposer.QCComposition.ProtocolRSSVisualizer\n  Expected: 0\n  But was:  3\n\n  at Introspection.ApiFieldTest.NonNullNSStringFields () [0x0008d] in /Users/poupou/git/xcode10/xamarin-macios/tests/introspection/ApiFieldTest.cs:214\n  at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in /Users/poupou/git/xcode10/xamarin-macios/external/mono/mcs/class/corlib/System.Reflection/MonoMethod.cs:305\n\nThat issue is filed w/Apple https://bugreport.apple.com/web/?problemID=41125938"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":100,"FavoriteCount":55,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":17,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":59,"FavoriteCount":27,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":157,"FavoriteCount":84,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":81,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null},{"Id":"1003716129758629888","CreatedAt":"2018-06-04T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Introducing the https://t.co/3QxhuBuvHc Firebase Job Dispatcher—background scheduling for all Android devices: https://t.co/vZlLAkI925","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-06-16T05:30:59.2468593Z","RunDurationInMilliseconds":4068}