{"Data":{"Blog":{"FeedItems":[{"Title":"Fall .NET Core Survey","PublishedOn":"2019-10-17T20:24:19+00:00","CommentsCount":20,"FacebookCount":0,"Summary":"It’s been a busy time for .NET Core – we just shipped 3.0, and are currently working on a few updates for v3.1 (due in November.) As we turn our attention to .NET Core 5.0, we want to take a step back...","Href":"https://devblogs.microsoft.com/dotnet/fall-net-core-survey/","RawContent":null},{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10701690467","Type":"PullRequestEvent","CreatedAt":"2019-10-24T05:07:38","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27382","RelatedDescription":"Merged pull request \"LeadingZeroCount, LeadingSignCount, PopCount\" (#27382) at dotnet/coreclr","RelatedBody":"https://github.com/dotnet/corefx/issues/26182"},{"Id":"10701469916","Type":"PullRequestEvent","CreatedAt":"2019-10-24T04:10:20","Actor":"mikem8361","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27406","RelatedDescription":"Opened pull request \"Fix minidumps not loading in VS issue\" (#27406) at dotnet/coreclr","RelatedBody":"Fix a function that was ifdef'ed needed for the metadata locator callbacks to work.\r\n\r\nFix some not properly DAC'ized code in the type desc and server GC code. Caused an exception during dump generation."},{"Id":"10701405595","Type":"IssuesEvent","CreatedAt":"2019-10-24T03:53:36","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27405","RelatedDescription":"Opened issue \"Converting a Vector4 to a Vector3 using `ref` asserts\" (#27405) at dotnet/coreclr","RelatedBody":"The following code under Release mode:\r\n```csharp\r\nstatic void Main(string[] args)\r\n{\r\n    Console.WriteLine($\"Is64Bit: {Environment.Is64BitProcess}\");\r\n    var result = AsVector3(Vector4.One);\r\n    Console.WriteLine(result);\r\n}\r\n\r\n[MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.AggressiveOptimization)]\r\npublic static Vector3 AsVector3(Vector4 value)\r\n{\r\n    return Unsafe.As<Vector4, Vector3>(ref value);\r\n}\r\n```\r\n\r\nFires the following assert:\r\n```\r\nAssert failure(PID 66636 [0x0001044c], Thread: 69336 [0x10ed8]): Assertion failed 'varDsc->lvType == TYP_SIMD12' in 'ConsoleApp10.Program:AsVector3(struct):struct' (IL size 13)\r\n\r\n    File: C:\\Users\\tagoo\\repos\\coreclr_base\\src\\jit\\compiler.h Line: 3385\r\n    Image: C:\\Users\\tagoo\\repos\\coreclr_base\\bin\\tests\\Windows_NT.x86.Debug\\Tests\\Core_Root\\CoreRun.exe\r\n```"},{"Id":"10701178914","Type":"PullRequestEvent","CreatedAt":"2019-10-24T03:01:37","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27359","RelatedDescription":"Merged pull request \"Delete FEATURE_LAZY_COW_PAGES\" (#27359) at dotnet/coreclr","RelatedBody":""},{"Id":"10701054465","Type":"IssuesEvent","CreatedAt":"2019-10-24T02:34:03","Actor":"AriNuer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27404","RelatedDescription":"Opened issue \"Test failure:System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated\" (#27404) at dotnet/coreclr","RelatedBody":"**Job:**\r\ncoreclr-corefx-jitstress : [20191022.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=398269)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/505d09f1-5311-4557-bd86-ef485c3510a8/workitems/System.Runtime.Loader.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x64\r\n\r\n**Mode:**\r\nset COMPlus_TieredCompilation=0\r\nset COMPlus_JitStress=2\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\505d09f1-5311-4557-bd86-ef485c3510a8\\Work\\ba55b9bf-af6e-44ae-a0ab-4aa5a8ce419c\\Exec>\"C:\\dotnetbuild\\work\\505d09f1-5311-4557-bd86-ef485c3510a8\\Payload\\dotnet.exe\" exec --runtimeconfig System.Runtime.Loader.Tests.runtimeconfig.json xunit.console.dll System.Runtime.Loader.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\505d09f1-5311-4557-bd86-ef485c3510a8\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Runtime.Loader.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Loader.Tests (found 65 test cases)\r\n  Starting:    System.Runtime.Loader.Tests (parallel test collections = on, max threads = 2)\r\n    System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated [FAIL]\r\n      System.NullReferenceException : Object reference not set to an instance of an object.\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Loader/tests/ContextualReflection.cs(659,0): at System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeTestCase(Func`1 func, Assembly nullExpected, Assembly defaultExpected, Assembly isolatedExpected)\r\n        /_/src/System.Runtime.Loader/tests/ContextualReflection.cs(808,0): at System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated()\r\n  Finished:    System.Runtime.Loader.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Runtime.Loader.Tests  Total: 134, Errors: 0, Failed: 1, Skipped: 0, Time: 8.818s\r\n----- end Wed 10/23/2019  7:38:00.94 ----- exit code 1 ----------------------------------------------------------\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10701740067","Type":"PullRequestEvent","CreatedAt":"2019-10-24T05:20:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12975","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12975) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.11\r\n- **Date Produced**: 10/24/2019 4:13 AM\r\n- **Commit**: 925a7137c8d1387a3948ee36ffc90fc182b405a9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.11\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19523.16 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10701203524","Type":"PullRequestEvent","CreatedAt":"2019-10-24T03:06:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12973","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12973) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10700460102","Type":"PullRequestEvent","CreatedAt":"2019-10-24T00:05:09","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12974","RelatedDescription":"Opened pull request \"Merge release/3.0.1xx to release/3.1.1xx\" (#12974) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10700268239","Type":"PullRequestEvent","CreatedAt":"2019-10-23T23:20:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12973","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12973) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10700223095","Type":"PullRequestEvent","CreatedAt":"2019-10-23T23:10:32","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12970","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12970) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.4\r\n- **Date Produced**: 10/23/2019 7:49 PM\r\n- **Commit**: 5cde584f489b0b4c558255ea484c5606eb494b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"10699810325","Type":"IssuesEvent","CreatedAt":"2019-10-23T21:52:42","Actor":"bricelam","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/12963","RelatedDescription":"Closed issue \"Can't install tools targeting 3.1\" (#12963) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n```sh\r\ndotnet tool install dotnet-ef --version 3.1.0-preview1.19506.2\r\n```\r\n\r\n## Expected  behavior\r\n\r\n```\r\nTool 'dotnet-ef' (version '3.1.0-preview1.19506.2') was successfully installed.\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nerror NU1202: Package dotnet-ef 3.1.0-preview1.19506.2 is not compatible with netcoreapp3.1 (.NETCoreApp,Version=v3.1) / any. Package dotnet-ef 3.1.0-preview1.19506.2 supports: netcoreapp3.1 (.NETCoreApp,Version=v3.1)\r\nThe tool package could not be restored.\r\nTool 'dotnet-ef' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview2-014486\r\n Commit:    343b2cba36\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\sdk\\3.1.100-preview2-014486\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview2.19517.10\r\n  Commit:  3daa0867ab\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview2-014486 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0-preview2.19517.21 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview2.19517.10 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview2.19517.10 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\ncc @ajcvickers @Pilchie "},{"Id":"10699653018","Type":"PullRequestEvent","CreatedAt":"2019-10-23T21:27:45","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12972","RelatedDescription":"Opened pull request \"Fix typo\" (#12972) at dotnet/cli","RelatedBody":"Error made during 3.0.x servicing changes"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10699847279","Type":"IssuesEvent","CreatedAt":"2019-10-23T21:58:36","Actor":"devon94","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1624","RelatedDescription":"Opened issue \"Cannot serialize System.Globalization.NumberFormatInfo into binary stream\" (#1624) at dotnet/standard","RelatedBody":"Hey there,\r\n\r\nI was trying to serialize NumberFormatInfo into a binary stream using the following code:\r\n\r\n`\r\n\r\n            var locale = user?.Locale;\r\n            var cultureInfo = new System.Globalization.CultureInfo(locale);\r\n\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                new BinaryFormatter().Serialize(ms, cultureInfo.NumberFormat);\r\n                return ms.ToArray();\r\n            }\r\n`\r\n\r\nIt worked when we were using mscorlib 4.0.0 but not after migrating to dotnet standard. It looks like it used to have the Serialization attribute in for that class but in dotnet standard those attributes seems to be missing. \r\n\r\nWas it intentional to make the NumberFormatInfo not serializable? Thanks!"},{"Id":"10695173302","Type":"PullRequestEvent","CreatedAt":"2019-10-23T12:30:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1623) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10695092726","Type":"PullRequestEvent","CreatedAt":"2019-10-23T12:20:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1623) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10690406417","Type":"IssuesEvent","CreatedAt":"2019-10-22T22:41:17","Actor":"TomasMorton","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Opened issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622) at dotnet/standard","RelatedBody":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible."},{"Id":"10685362208","Type":"PullRequestEvent","CreatedAt":"2019-10-22T12:32:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1621) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10685279169","Type":"PullRequestEvent","CreatedAt":"2019-10-22T12:22:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1621) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10701735515","Type":"IssuesEvent","CreatedAt":"2019-10-24T05:19:09","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41032","RelatedDescription":"Closed issue \"Port to 3.1 - Use ThrowHelper in Utf8JsonReader.GetGuid so that the deserializer can catch the exception and re-throw JsonException\" (#41032) at dotnet/corefx","RelatedBody":"The PR is checked in to https://github.com/dotnet/corefx/pull/40938. As per offline discussion, the plan was to port this to 3.1."},{"Id":"10701685874","Type":"IssuesEvent","CreatedAt":"2019-10-24T05:06:20","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42077","RelatedDescription":"Opened issue \"Several System.Security.Cryptography.Pkcs tests fail with Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException\" (#42077) at dotnet/corefx","RelatedBody":"From https://github.com/dotnet/corefx/pull/41754\r\n\r\nFailing on `netcoreapp-Windows_NT-Release-x86-Windows.81.Amd64.Open` with `Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.`\r\n\r\nFor example:\r\n```text\r\nError message\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n\r\nStack trace\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(RecipientInfo recipientInfo, AsymmetricAlgorithm privateKey) in /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/EnvelopedCms.cs:line 208\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent) in /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs:line 845\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo) in /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs:line 826\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedDataWithNonPkcs7Oid() in /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs:line 777\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=398302&view=ms.vss-test-web.build-test-results-tab&runId=12432040&resultId=161534&paneView=debug\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/667c26e2-0953-4fe8-bf70-194af19c3683/workitems/System.Security.Cryptography.Pkcs.Tests/console\r\n\r\n```text\r\n  Starting:    System.Security.Cryptography.Pkcs.Tests (parallel test collections = on, max threads = 2)\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.KeyAgreeRecipientInfoTests.TestKeyAgreement_PlatformNotSupported [SKIP]\r\n      Condition(s) not met: \"DoesNotSupportDiffieHellman\"\r\n    System.Security.Cryptography.Pkcs.Tests.Pkcs8PrivateKeyInfoTests.ReencryptAndImport [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs(261,0): at System.Security.Cryptography.RSAImplementation.RSACng.EncryptOrDecrypt(SafeNCryptKeyHandle key, ReadOnlySpan`1 input, AsymmetricPaddingMode paddingMode, Void* paddingInfo, Boolean encrypt)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs(119,0): at System.Security.Cryptography.RSAImplementation.RSACng.EncryptOrDecrypt(Byte[] data, RSAEncryptionPadding padding, Boolean encrypt)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs(30,0): at System.Security.Cryptography.RSAImplementation.RSACng.Decrypt(Byte[] data, RSAEncryptionPadding padding)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Pkcs8PrivateKeyInfoTests.cs(310,0): at System.Security.Cryptography.Pkcs.Tests.Pkcs8PrivateKeyInfoTests.ReencryptAndImport()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.KeyTransRecipientInfoRsaOaepCertTests.TestKeyTransEncryptKey_RsaOaepCertificate_NoPlatformSupport_Throws [SKIP]\r\n      Condition(s) not met: \"DoesNotSupportRsaOaepCerts\"\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.SignCmsUsingDSACertWithNotMatchingKeyThrows [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.Security.Cryptography.CryptographicException)\r\n      Actual:   typeof(Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException): An internal consistency check failed.\r\n      ---- Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/CngKeyLite.cs(409,0): at System.Security.Cryptography.CngKeyLite.GenerateNewExportableKey(String algorithm, Int32 keySize)\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/DSACng.cs(49,0): at System.Security.Cryptography.DSAImplementation.DSACng.GetDuplicatedKeyHandle()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(118,0): at System.Security.Cryptography.DSAImplementation.DSACng.ComputeQLength()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(96,0): at System.Security.Cryptography.DSAImplementation.DSACng.AdjustHashSizeIfNecessary(ReadOnlySpan`1 hash, Span`1 stackBuf)\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(47,0): at System.Security.Cryptography.DSAImplementation.DSACng.TryCreateSignature(ReadOnlySpan`1 hash, Span`1 destination, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.DSA.cs(143,0): at System.Security.Cryptography.Pkcs.CmsSignature.DSACmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(220,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.<>c__DisplayClass77_0.<SignCmsUsingDSACertWithNotMatchingKeyThrows>b__0()\r\n        ----- Inner Stack Trace -----\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/CngKeyLite.cs(409,0): at System.Security.Cryptography.CngKeyLite.GenerateNewExportableKey(String algorithm, Int32 keySize)\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/DSACng.cs(49,0): at System.Security.Cryptography.DSAImplementation.DSACng.GetDuplicatedKeyHandle()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(118,0): at System.Security.Cryptography.DSAImplementation.DSACng.ComputeQLength()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(96,0): at System.Security.Cryptography.DSAImplementation.DSACng.AdjustHashSizeIfNecessary(ReadOnlySpan`1 hash, Span`1 stackBuf)\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(47,0): at System.Security.Cryptography.DSAImplementation.DSACng.TryCreateSignature(ReadOnlySpan`1 hash, Span`1 destination, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.DSA.cs(143,0): at System.Security.Cryptography.Pkcs.CmsSignature.DSACmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(220,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.<>c__DisplayClass77_0.<SignCmsUsingDSACertWithNotMatchingKeyThrows>b__0()\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.NoTsaEku(includeOption: None) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(699,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.NoTsaEku(X509IncludeOption includeOption)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(includeOption: WholeChain) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(258,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(X509IncludeOption includeOption)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSecondSigner_NoSignature_LoadUnsigned(detached: True) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(856,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSecondSigner_NoSignature_LoadUnsigned(Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(includeOption: None) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(258,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(X509IncludeOption includeOption)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV2(includeOption: None, v2Option: ValidHashWithInvalidName, identifierType: IssuerAndSerialNumber, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(411,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV2(X509IncludeOption includeOption, SigningCertificateOption v2Option, SubjectIdentifierType identifierType, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchV1OrV2(includeOption: WholeChain, v1Option: InvalidHashWithInvalidSerial, v2Option: ValidHashNoName, identifierType: IssuerAndSerialNumber, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(555,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchV1OrV2(X509IncludeOption includeOption, SigningCertificateOption v1Option, SigningCertificateOption v2Option, SubjectIdentifierType identifierType, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_RSA_EphemeralKey [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(399,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_RSA_EphemeralKey()\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV1(includeOption: None, v1Option: ValidHashWithInvalidName, identifierType: IssuerAndSerialNumber) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(288,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV1(X509IncludeOption includeOption, SigningCertificateOption v1Option, SubjectIdentifierType identifierType)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.TryDecode_Fails_MalformedToken [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(222,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.TryDecode_Fails_MalformedToken()\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(detached: False) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(1150,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(detached: True) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(1150,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(includeOption: None, v2Option: ValidHashWithName, hashAlgName: \"SHA1\") [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(716,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(335,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(X509IncludeOption includeOption, SigningCertificateOption v2Option, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(includeOption: WholeChain, v2Option: ValidHashWithName, hashAlgName: \"SHA384\") [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(716,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(335,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(X509IncludeOption includeOption, SigningCertificateOption v2Option, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.SignCmsUsingExplicitECDsaP521Key [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Invalid Signature.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(96,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.SignCmsUsingExplicitECDsaP521Key()\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(identifierType: IssuerAndSerialNumber, detached: False) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(464,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(SubjectIdentifierType identifierType, Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV1(includeOption: None, v1Option: ValidHashWithName) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(716,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(245,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV1(X509IncludeOption includeOption, SigningCertificateOption v1Option)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(identifierType: SubjectKeyIdentifier, detached: False) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(464,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(SubjectIdentifierType identifierType, Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(includeOption: WholeChain, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(355,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(X509IncludeOption includeOption, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(includeOption: None, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(355,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(X509IncludeOption includeOption, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(includeOption: WholeChain, hashAlgName: \"MD5\") [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(355,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(X509IncludeOption includeOption, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_ECDSA_EphemeralKey [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Invalid Signature.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(439,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_ECDSA_EphemeralKey()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTestsUsingExplicitPrivateKey.DecryptEnvelopedEmptyOctetString [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(834,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(826,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(754,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedEmptyOctetString()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTestsUsingExplicitPrivateKey.DecryptEnvelopedDataWithNonPkcs7Oid [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/EnvelopedCms.cs(208,0): at System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(RecipientInfo recipientInfo, AsymmetricAlgorithm privateKey)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(845,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(826,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(777,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedDataWithNonPkcs7Oid()\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.CounterSignCmsUsingExplicitRSAKeyForFirstSignerAndDSAForCounterSignature [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(526,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.VerifyCounterSignatureWithExplicitPrivateKey(X509Certificate2 cert, AsymmetricAlgorithm key, X509Certificate2 counterSignerCert, AsymmetricAlgorithm counterSignerKey)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(111,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.CounterSignCmsUsingExplicitRSAKeyForFirstSignerAndDSAForCounterSignature()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTestsUsingExplicitPrivateKey.DecryptEnvelopedEmptyArray [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(834,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(826,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(742,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedEmptyArray()\r\n  Finished:    System.Security.Cryptography.Pkcs.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Security.Cryptography.Pkcs.Tests  Total: 856, Errors: 0, Failed: 27, Skipped: 2, Time: 6.854s\r\n----- end Wed 10/23/2019  7:49:20.68 ----- exit code 1 ----------------------------------------------------------\r\n```"},{"Id":"10701505411","Type":"IssuesEvent","CreatedAt":"2019-10-24T04:19:38","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41158","RelatedDescription":"Closed issue \"CMS should support attributes for counter-signers\" (#41158) at dotnet/corefx","RelatedBody":"https://github.com/dotnet/corefx/issues/25449 has added support for adding unsigned attributes to signers. It has been noted though this feature should also work for counter-signers as user might want to add a timestamp to the counter signature. There are some questions which need to be investigated first:\r\n- unsigned attributes are also used for storing counter-signatures - currently counter signing counter signature is not supported - is this something we also need to directly support? (yes?)\r\n  - should counter-counter signature sign original content or content stored by the SignerInfo? (original?)\r\n- signed attributes are technically speaking allowed in the counter SignerInfo - I cannot think on how this would reasonably work at the moment though so presumably not support it?\r\n\r\ncc: @bartonjs @heng-liu "},{"Id":"10701378795","Type":"IssuesEvent","CreatedAt":"2019-10-24T03:46:43","Actor":"mriehm","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42076","RelatedDescription":"Opened issue \"Change in FileSystemInfo.Attributes permissions denied Exception\" (#42076) at dotnet/corefx","RelatedBody":"According to the [docs for FileSystemInfo.Attributes](https://docs.microsoft.com/en-us/dotnet/api/system.io.filesysteminfo.attributes?view=netcore-3.0), trying to set an attribute on a file that you do not have permissions to modify will throw ArgumentException. This is true on .NET Framework, but it does not appear to be true on .NET Core, which throws UnauthorizedAccessException instead. UnauthorizedAccessException does logically make more sense, but this change might be a mistake and considered a compatibility issue, so I'm opening this issue here on corefx.\r\n\r\nIf you decide to keep the current .NET Core behavior of UnauthorizedAccessException, then please move this issue to the docs repo so that the docs can be updated to reflect the .NET Core behavior.\r\n\r\nI noticed this discrepancy during maintenance of a .NET Framework product that specifically catches ArgumentException to suppress the access denied scenario."},{"Id":"10701377381","Type":"IssuesEvent","CreatedAt":"2019-10-24T03:46:20","Actor":"RussKie","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42074","RelatedDescription":"Closed issue \"[master] `System.Runtime.Serialization.SerializationException : Member 'SerializedString' was not found.`\" (#42074) at dotnet/corefx","RelatedBody":"After updating dependencies from https://github.com/dotnet/core-setup build 20191022.6 some of our tests started failing with the following error:\r\n```\r\nAssert.Throws() Failure\r\nExpected: typeof(System.Reflection.TargetInvocationException)\r\nActual: typeof(System.Runtime.Serialization.SerializationException): Invalid BinaryFormatter stream.\r\n---- System.Runtime.Serialization.SerializationException : Invalid BinaryFormatter stream.\r\n-------- System.Reflection.TargetInvocationException : Exception has been thrown by the target of an invocation.\r\n------------ System.Runtime.Serialization.SerializationException : Member 'SerializedString' was not found.\r\n```\r\n\r\nCommit: https://github.com/dotnet/winforms/pull/2159\r\nCI: https://dev.azure.com/dnceng/public/_build/results?buildId=398306&view=ms.vss-test-web.build-test-results-tab&runId=12432008&resultId=110198&paneView=debug\r\n\r\nIn the previous commit that didn't have the update these tests pass."},{"Id":"10701225184","Type":"IssuesEvent","CreatedAt":"2019-10-24T03:11:50","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42065","RelatedDescription":"Closed issue \"XmlBinaryWriterSession.TryAdd method always returns one and the same value of 'true' \" (#42065) at dotnet/corefx","RelatedBody":"[Documentation ](https://docs.microsoft.com/en-us/dotnet/api/system.xml.xmlbinarywritersession.tryadd?view=netcore-3.0)says:\r\n\r\n> Returns: true if the string could be added; otherwise, false.\r\n\r\nbut method always returns one and the same value of 'true'\r\nhttps://github.com/dotnet/corefx/blob/81a551c219041cacdb6c5f77ff1dd588e8bebd01/src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs#L29-L54\r\n\r\nShould it be fixed in docs or code?"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10701715010","Type":"PullRequestEvent","CreatedAt":"2019-10-24T05:14:13","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39488","RelatedDescription":"Merged pull request \"Merge 16.5-preview1 into master\" (#39488) at dotnet/roslyn","RelatedBody":""},{"Id":"10701504598","Type":"PullRequestEvent","CreatedAt":"2019-10-24T04:19:26","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39481","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#39481) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10701502299","Type":"PullRequestEvent","CreatedAt":"2019-10-24T04:18:51","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39482","RelatedDescription":"Merged pull request \"Merge master to features/local-function-attributes\" (#39482) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10701500069","Type":"PullRequestEvent","CreatedAt":"2019-10-24T04:18:16","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39483","RelatedDescription":"Merged pull request \"Merge master to features/static-lambdas\" (#39483) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10701478607","Type":"PullRequestEvent","CreatedAt":"2019-10-24T04:12:45","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39484","RelatedDescription":"Merged pull request \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39484) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10701472369","Type":"PullRequestEvent","CreatedAt":"2019-10-24T04:10:59","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39474","RelatedDescription":"Merged pull request \"Update configs for snap.\" (#39474) at dotnet/roslyn","RelatedBody":"WIP until the snap"},{"Id":"10701466249","Type":"PullRequestEvent","CreatedAt":"2019-10-24T04:09:20","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39487","RelatedDescription":"Merged pull request \"Backport editor config change to 16.4\" (#39487) at dotnet/roslyn","RelatedBody":""},{"Id":"10701132835","Type":"PullRequestEvent","CreatedAt":"2019-10-24T02:51:52","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39488","RelatedDescription":"Opened pull request \"Merge 16 5\" (#39488) at dotnet/roslyn","RelatedBody":""},{"Id":"10701020121","Type":"PullRequestEvent","CreatedAt":"2019-10-24T02:25:45","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39485","RelatedDescription":"Closed pull request \"Merge 16.5 Preview 1 back into master.\" (#39485) at dotnet/roslyn","RelatedBody":""},{"Id":"10700928463","Type":"PullRequestEvent","CreatedAt":"2019-10-24T02:03:26","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39487","RelatedDescription":"Opened pull request \"Backport editor config change to 16.4\" (#39487) at dotnet/roslyn","RelatedBody":""},{"Id":"10700894319","Type":"PullRequestEvent","CreatedAt":"2019-10-24T01:55:07","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39473","RelatedDescription":"Merged pull request \"Ensure that we show the gold bar for .editorconfig as solution item o…\" (#39473) at dotnet/roslyn","RelatedBody":"…nly once per solution\r\n\r\nFixes #39472"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10700607177","Type":"PullRequestEvent","CreatedAt":"2019-10-24T00:42:20","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7839","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7839) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10700219282","Type":"PullRequestEvent","CreatedAt":"2019-10-23T23:09:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7838) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @AaronRobinsonMSFT @marek-safar @tmds"},{"Id":"10698664351","Type":"PullRequestEvent","CreatedAt":"2019-10-23T19:11:33","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7838) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10697242445","Type":"PullRequestEvent","CreatedAt":"2019-10-23T16:07:27","Actor":"tannergooding","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#7837) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"10690503605","Type":"PullRequestEvent","CreatedAt":"2019-10-22T23:00:54","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7837) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10690204548","Type":"PullRequestEvent","CreatedAt":"2019-10-22T22:07:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7836) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT"},{"Id":"10690173026","Type":"PullRequestEvent","CreatedAt":"2019-10-22T22:02:31","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7836) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10688651461","Type":"PullRequestEvent","CreatedAt":"2019-10-22T18:41:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7834) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding"},{"Id":"10688309488","Type":"IssuesEvent","CreatedAt":"2019-10-22T17:57:40","Actor":"tiandian","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Opened issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835) at dotnet/corert","RelatedBody":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks."},{"Id":"10688138889","Type":"PullRequestEvent","CreatedAt":"2019-10-22T17:36:04","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7834) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10682428506","Type":"IssuesEvent","CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832) at dotnet/corert","RelatedBody":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10681798208","Type":"PullRequestEvent","CreatedAt":"2019-10-22T02:26:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7833) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding"},{"Id":"10680769818","Type":"PullRequestEvent","CreatedAt":"2019-10-21T22:18:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7833) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10701739856","Type":"PullRequestEvent","CreatedAt":"2019-10-24T05:20:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3781","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3781) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.11\r\n- **Date Produced**: 10/24/2019 4:13 AM\r\n- **Commit**: 925a7137c8d1387a3948ee36ffc90fc182b405a9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.11\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10701410649","Type":"PullRequestEvent","CreatedAt":"2019-10-24T03:54:54","Actor":"wtgodbe","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3779","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3779) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10700682668","Type":"PullRequestEvent","CreatedAt":"2019-10-24T01:01:28","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3780","RelatedDescription":"Opened pull request \"Remove BundledNETCoreAppTargetFrameworkVersion\" (#3780) at dotnet/sdk","RelatedBody":"It should be removed in https://github.com/dotnet/sdk/commit/0979dd3c53a8971a5434cf4bc68efd103fe5ea68\r\nsince it is no longer used"},{"Id":"10700336803","Type":"PullRequestEvent","CreatedAt":"2019-10-23T23:35:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3779","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3779) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10700335972","Type":"PullRequestEvent","CreatedAt":"2019-10-23T23:35:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3778","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3778) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.4\r\n- **Date Produced**: 10/23/2019 7:49 PM\r\n- **Commit**: 5cde584f489b0b4c558255ea484c5606eb494b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10699464176","Type":"PullRequestEvent","CreatedAt":"2019-10-23T21:00:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3778","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3778) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.4\r\n- **Date Produced**: 10/23/2019 7:49 PM\r\n- **Commit**: 5cde584f489b0b4c558255ea484c5606eb494b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"511038425","IsPullRequest":true,"CreatedAt":"2019-10-24T05:07:37","Actor":"echesakovMSFT","Number":"27382","RawContent":null,"Title":"LeadingZeroCount, LeadingSignCount, PopCount","State":"closed","Body":"https://github.com/dotnet/corefx/issues/26182","Url":"https://github.com/dotnet/coreclr/pull/27382","RelatedDescription":"Closed or merged PR \"LeadingZeroCount, LeadingSignCount, PopCount\" (#27382)"},{"Id":"511694500","IsPullRequest":true,"CreatedAt":"2019-10-24T04:10:17","Actor":"mikem8361","Number":"27406","RawContent":null,"Title":"Fix minidumps not loading in VS issue","State":"open","Body":"Fix a function that was ifdef'ed needed for the metadata locator callbacks to work.\r\n\r\nFix some not properly DAC'ized code in the type desc and server GC code. Caused an exception during dump generation.","Url":"https://github.com/dotnet/coreclr/pull/27406","RelatedDescription":"Open PR \"Fix minidumps not loading in VS issue\" (#27406)"},{"Id":"511690693","IsPullRequest":false,"CreatedAt":"2019-10-24T03:53:35","Actor":"tannergooding","Number":"27405","RawContent":null,"Title":"Converting a Vector4 to a Vector3 using `ref` asserts","State":"open","Body":"The following code under x86 Release mode:\r\n```csharp\r\nstatic void Main(string[] args)\r\n{\r\n    Console.WriteLine($\"Is64Bit: {Environment.Is64BitProcess}\");\r\n    var result = AsVector3(Vector4.One);\r\n    Console.WriteLine(result);\r\n}\r\n\r\n[MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.AggressiveOptimization)]\r\npublic static Vector3 AsVector3(Vector4 value)\r\n{\r\n    return Unsafe.As<Vector4, Vector3>(ref value);\r\n}\r\n```\r\n\r\nFires the following assert:\r\n```\r\nAssert failure(PID 66636 [0x0001044c], Thread: 69336 [0x10ed8]): Assertion failed 'varDsc->lvType == TYP_SIMD12' in 'ConsoleApp10.Program:AsVector3(struct):struct' (IL size 13)\r\n\r\n    File: C:\\Users\\tagoo\\repos\\coreclr_base\\src\\jit\\compiler.h Line: 3385\r\n    Image: C:\\Users\\tagoo\\repos\\coreclr_base\\bin\\tests\\Windows_NT.x86.Debug\\Tests\\Core_Root\\CoreRun.exe\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27405","RelatedDescription":"Open issue \"Converting a Vector4 to a Vector3 using `ref` asserts\" (#27405)"},{"Id":"511666913","IsPullRequest":false,"CreatedAt":"2019-10-24T02:34:02","Actor":"AriNuer","Number":"27404","RawContent":null,"Title":"Test failure:System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated","State":"open","Body":"**Job:**\r\ncoreclr-corefx-jitstress : [20191022.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=398269)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/505d09f1-5311-4557-bd86-ef485c3510a8/workitems/System.Runtime.Loader.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x64\r\n\r\n**Mode:**\r\nset COMPlus_TieredCompilation=0\r\nset COMPlus_JitStress=2\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\505d09f1-5311-4557-bd86-ef485c3510a8\\Work\\ba55b9bf-af6e-44ae-a0ab-4aa5a8ce419c\\Exec>\"C:\\dotnetbuild\\work\\505d09f1-5311-4557-bd86-ef485c3510a8\\Payload\\dotnet.exe\" exec --runtimeconfig System.Runtime.Loader.Tests.runtimeconfig.json xunit.console.dll System.Runtime.Loader.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\505d09f1-5311-4557-bd86-ef485c3510a8\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Runtime.Loader.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Loader.Tests (found 65 test cases)\r\n  Starting:    System.Runtime.Loader.Tests (parallel test collections = on, max threads = 2)\r\n    System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated [FAIL]\r\n      System.NullReferenceException : Object reference not set to an instance of an object.\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Loader/tests/ContextualReflection.cs(659,0): at System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeTestCase(Func`1 func, Assembly nullExpected, Assembly defaultExpected, Assembly isolatedExpected)\r\n        /_/src/System.Runtime.Loader/tests/ContextualReflection.cs(808,0): at System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated()\r\n  Finished:    System.Runtime.Loader.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Runtime.Loader.Tests  Total: 134, Errors: 0, Failed: 1, Skipped: 0, Time: 8.818s\r\n----- end Wed 10/23/2019  7:38:00.94 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27404","RelatedDescription":"Open issue \"Test failure:System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated\" (#27404)"},{"Id":"511651898","IsPullRequest":false,"CreatedAt":"2019-10-24T01:28:59","Actor":"stephentoub","Number":"27403","RawContent":null,"Title":"Determine what to do with \"async ValueTask\" caching","State":"open","Body":"PR https://github.com/dotnet/coreclr/pull/26310 added in an experimental feature, guarded by an environment variable feature flag, that uses cached objects behind the scenes to implement `async ValueTask` and `async ValueTask<T>` methods.  For .NET 5, we need to decide how to proceed with this feature:\r\n1. Delete it\r\n2. Keep it as opt-in\r\n3. Keep it as opt-out\r\n4. Always on (delete the fallback)\r\n\r\nWe need more data to decide how to proceed, and in particular:\r\n- Are there workloads where it yields a significant performance benefit when it's enabled?\r\n- Are there workloads where it measurably harms performance when it's enabled?\r\n- What kind of impact does it have on code size in a representative app?\r\n- What is a good strategy to use for the employed cache?\r\n\r\nIf we decide to keep it, and especially if we decide to keep it as opt-out or always-on, we also need to validate diagnostics, in particular tracing to ensure we're not regressing anything impactful.\r\n\r\nFunctionally, there's also a behavior change associated with it.  While `ValueTask`/`ValueTask<T>` are documented to only be used in very specific ways, the fact that instances produced by `async` methods before .NET 5 were backed by `Task` meant that you could get away with violating the contract.  This change generally ends up requiring that the contract be enforced.  We would want to ensure we had good analyzers in place to help catch any misuse: https://github.com/dotnet/corefx/issues/40739.\r\n\r\n### CALL TO ACTION:\r\n#### Please try out the bits with your app and share your results: throughput, memory load, etc.\r\n\r\nTo enable the feature, set the `DOTNET_SYSTEM_THREADING_POOLASYNCVALUETASKS` environment variable to either `1` or `true`.\r\n\r\nThis will only impact `async ValueTask` and `async ValueTask<T>` methods, so you may also want to look through your code to switch some internal and private `async Task`/`async Task<T>` methods to instead use `ValueTask`/`ValueTask<T>`... just make sure to only do so when the consumers abide by the rules, which is that an instance must only be consumed once: if callers are doing anything other than directly awaiting the result of the method, be careful.","Url":"https://github.com/dotnet/coreclr/issues/27403","RelatedDescription":"Open issue \"Determine what to do with \"async ValueTask\" caching\" (#27403)"},{"Id":"511647289","IsPullRequest":false,"CreatedAt":"2019-10-24T01:08:29","Actor":"tannergooding","Number":"27402","RawContent":null,"Title":"Make isInSIMDModule obsolete","State":"open","Body":"After https://github.com/dotnet/coreclr/pull/27401 is merged, all of the special-cased System.Numerics types will live in S.P.Corelib. This means that the JIT/EE interface method `isInSIMDModule` can be obsoleted and these types can be recognized via the same `IntrinsicAttribute` system that other types are using.\r\n\r\nAfter the type forwards get in place on the CoreFX side and that gets picked up by CoreCLR (this is to help ensure the changes can be properly tested), we should update `isInSIMDModule` to fail when called and we should update all consumers to use alternative functionality.\r\n\r\nhttps://github.com/dotnet/coreclr/pull/27401#discussion_r338334221 can be seen for more details.","Url":"https://github.com/dotnet/coreclr/issues/27402","RelatedDescription":"Open issue \"Make isInSIMDModule obsolete\" (#27402)"},{"Id":"510998269","IsPullRequest":true,"CreatedAt":"2019-10-23T23:52:09","Actor":"DrewScoggins","Number":"27378","RawContent":null,"Title":"Update build pools for perf runs","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27378","RelatedDescription":"Closed or merged PR \"Update build pools for perf runs\" (#27378)"},{"Id":"511619694","IsPullRequest":true,"CreatedAt":"2019-10-23T23:16:17","Actor":"tannergooding","Number":"27401","RawContent":null,"Title":"Move down S.N.Vector APIs and expose new conversion support","State":"open","Body":"This moves the S.N.Vector2/3/4 and supporting types down to S.P.Corelib. It additionally exposes the new conversion APIs approved in https://github.com/dotnet/corefx/issues/36379 to help reduce the turnaround time between CoreCLR and CoreFX (as S.N.Vector still needs type forwards exposed and the new APIs still need to be listed in the reference assembly after this change flows back).","Url":"https://github.com/dotnet/coreclr/pull/27401","RelatedDescription":"Open PR \"Move down S.N.Vector APIs and expose new conversion support\" (#27401)"},{"Id":"511517523","IsPullRequest":true,"CreatedAt":"2019-10-23T23:07:27","Actor":"Dotnet-GitSync-Bot","Number":"27398","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @tmds","Url":"https://github.com/dotnet/coreclr/pull/27398","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#27398)"},{"Id":"511603978","IsPullRequest":false,"CreatedAt":"2019-10-23T22:25:59","Actor":"erozenfeld","Number":"27400","RawContent":null,"Title":"R2R: add a bit that indicates whether IBC data was used when producing the code","State":"open","Body":"It's currently impossible to figure out reliably whether code in an R2R image was produced using IBC training data. This issue is to add a bit to allow that.\r\n\r\n@davidwrighton ","Url":"https://github.com/dotnet/coreclr/issues/27400","RelatedDescription":"Open issue \"R2R: add a bit that indicates whether IBC data was used when producing the code\" (#27400)"},{"Id":"511600770","IsPullRequest":false,"CreatedAt":"2019-10-23T22:17:48","Actor":"jkoritzinsky","Number":"27399","RawContent":null,"Title":"Clean up the argument list for MarshalInfo::MarshalInfo","State":"open","Body":"The constructor for MarshalInfo in `mlinfo.h` and `mlinfo.cpp` has a ton of arguments, many of which are booleans. We should clean up this argument list and create a structure/flags that describe the various settings to make calls to the constructor readable.","Url":"https://github.com/dotnet/coreclr/issues/27399","RelatedDescription":"Open issue \"Clean up the argument list for MarshalInfo::MarshalInfo\" (#27399)"},{"Id":"511487643","IsPullRequest":true,"CreatedAt":"2019-10-23T21:59:07","Actor":"AaronRobinsonMSFT","Number":"27394","RawContent":null,"Title":"Make the COM activation check for ProgID generation.","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/30927\r\n\r\n/cc @hughbe @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/pull/27394","RelatedDescription":"Closed or merged PR \"Make the COM activation check for ProgID generation.\" (#27394)"},{"Id":"511461680","IsPullRequest":true,"CreatedAt":"2019-10-23T21:54:40","Actor":"stephentoub","Number":"27391","RawContent":null,"Title":"Remove stale entries from corefx.issues.rsp","State":"closed","Body":"I believe these have all been fixed and just not removed from the .rsp file.  It's possible some of the fixes haven't flown back to coreclr; using CI to see.\r\n\r\ncc: @jkotas, @safern ","Url":"https://github.com/dotnet/coreclr/pull/27391","RelatedDescription":"Closed or merged PR \"Remove stale entries from corefx.issues.rsp\" (#27391)"},{"Id":"511445417","IsPullRequest":true,"CreatedAt":"2019-10-23T20:11:22","Actor":"tannergooding","Number":"27390","RawContent":null,"Title":"Ensure that `GenTreeIndir load` is used in a scope where it can't be optimized away.","State":"closed","Body":"This is part of #27371 and handles the remaining issue called out here: https://github.com/dotnet/coreclr/pull/27388#pullrequestreview-306022431\r\n\r\nCC. @CarolEidt, @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27390","RelatedDescription":"Closed or merged PR \"Ensure that `GenTreeIndir load` is used in a scope where it can't be optimized away.\" (#27390)"},{"Id":"511512525","IsPullRequest":true,"CreatedAt":"2019-10-23T19:00:16","Actor":"AndyAyersMS","Number":"27397","RawContent":null,"Title":"JIT: cleanup redundant exact type tests","State":"open","Body":"Generate exact type assertions from exact type tests in the IR. Look for these\r\nassertions and set the value number for RELOPs with known outcomes. Process\r\nJTRUE nodes in the main assertion prop optimization loop.\r\n\r\nThis combination of changes removes residual exact type tests from cast\r\nexpansions when they are anticipated by user inserted exact type tests, as in:\r\n\r\n```C#\r\n    if (b.GetType() == typeof(D))\r\n    {\r\n        return (D)b;\r\n    }\r\n```\r\n\r\nCloses #14471.","Url":"https://github.com/dotnet/coreclr/pull/27397","RelatedDescription":"Open PR \"JIT: cleanup redundant exact type tests\" (#27397)"},{"Id":"511355624","IsPullRequest":true,"CreatedAt":"2019-10-23T18:18:43","Actor":"tannergooding","Number":"27388","RawContent":null,"Title":"Ensure that `GenTreeIndir load` is used in a scope where it can't be optimized away.","State":"closed","Body":"This resolves https://github.com/dotnet/coreclr/issues/27371","Url":"https://github.com/dotnet/coreclr/pull/27388","RelatedDescription":"Closed or merged PR \"Ensure that `GenTreeIndir load` is used in a scope where it can't be optimized away.\" (#27388)"},{"Id":"511335284","IsPullRequest":false,"CreatedAt":"2019-10-23T18:14:17","Actor":"k15tfu","Number":"27386","RawContent":null,"Title":"LOCK_WRITE enum value (in pal/inc/rt/objidl.h) conflicts with fcntl.h on Linux","State":"closed","Body":"Hi!\r\n\r\nIs there anything we can do? @jkotas \r\n\r\n```\r\n.../pal/inc/rt/objidl.h:106:7: error: expected identifier\r\n    {   LOCK_WRITE      = 1,\r\n        ^\r\n/usr/include/x86_64-linux-gnu/bits/fcntl-linux.h:240:21: note: expanded from macro 'LOCK_WRITE'\r\n# define LOCK_WRITE     128     /* ... which allows concurrent write operations.  */\r\n                        ^\r\n1 error generated.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27386","RelatedDescription":"Closed issue \"LOCK_WRITE enum value (in pal/inc/rt/objidl.h) conflicts with fcntl.h on Linux\" (#27386)"},{"Id":"511496821","IsPullRequest":false,"CreatedAt":"2019-10-23T18:12:49","Actor":"adamsitnik","Number":"27395","RawContent":null,"Title":"`BenchmarksGame.SpectralNorm_3.RunBench` benchmark is much slower on Linux compared to Windows","State":"open","Body":"`BenchmarksGame.SpectralNorm_3.RunBench` benchmark is much slower on Linux compared to Windows\r\n\r\n| Slower                                  | diff/base | Windows Median (ns) | Linux Median (ns) | Modality  |\r\n| --------------------------------------- | ---------:| -------------------:| -----------------:| ---------- |\r\n| BenchmarksGame.SpectralNorm_3.RunBench  |     19.06 |           316871.27 |        6038454.91 | bimodal   |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/3941f11e000edd7a404599fc2e401129c25bc4ad/src/benchmarks/micro/coreclr/BenchmarksGame/spectralnorm-3.cs#L28) benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter BenchmarksGame.SpectralNorm_3.RunBench\r\n```\r\n\r\n2. Build CoreFX locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue\r\n\r\nThis issue is most probably not easy to solve.","Url":"https://github.com/dotnet/coreclr/issues/27395","RelatedDescription":"Open issue \"`BenchmarksGame.SpectralNorm_3.RunBench` benchmark is much slower on Linux compared to Windows\" (#27395)"},{"Id":"511473730","IsPullRequest":true,"CreatedAt":"2019-10-23T17:39:53","Actor":"MichalStrehovsky","Number":"27393","RawContent":null,"Title":"Add test coverage for unsupported marshal scenarios","State":"open","Body":"* Pointers to non-blittable structs are not supported\r\n* SizeParamIndex could be bogus","Url":"https://github.com/dotnet/coreclr/pull/27393","RelatedDescription":"Open PR \"Add test coverage for unsupported marshal scenarios\" (#27393)"},{"Id":"511467800","IsPullRequest":false,"CreatedAt":"2019-10-23T17:27:34","Actor":"adamsitnik","Number":"27392","RawContent":null,"Title":"Guid.NewGuid() is 10x slower on Linux compared to Windows","State":"open","Body":"`Guid.NewGuid()` is 10 times slower on Linux compared to Windows.\r\n\r\n| Slower                         | diff/base | Windows Median (ns) | Linux Median (ns) | Modality|\r\n| ------------------------------ | ---------:| -------------------:| -----------------:| --------:|\r\n| System.Tests.Perf_Guid.NewGuid |      9.52 |               77.99 |            742.10 |         |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/7d96fd3dea66b83a0b02222e44e02e762a990c32/src/benchmarks/micro/corefx/System.Runtime/Perf.Guid.cs#L27) simple benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.Tests.Perf_Guid.NewGuid\r\n```\r\n\r\n2. Build CoreCLR locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue","Url":"https://github.com/dotnet/coreclr/issues/27392","RelatedDescription":"Open issue \"Guid.NewGuid() is 10x slower on Linux compared to Windows\" (#27392)"},{"Id":"511407157","IsPullRequest":true,"CreatedAt":"2019-10-23T15:33:26","Actor":"MichalStrehovsky","Number":"27389","RawContent":null,"Title":"P/invoke pregeneration fixes","State":"open","Body":"Today I learned about `LCIDConversionAttribute`.\r\n\r\nThis makes us pass more of the interop tests, but there's still stuff to fix. See individual commits.","Url":"https://github.com/dotnet/coreclr/pull/27389","RelatedDescription":"Open PR \"P/invoke pregeneration fixes\" (#27389)"},{"Id":"511347204","IsPullRequest":false,"CreatedAt":"2019-10-23T14:04:55","Actor":"tannergooding","Number":"27387","RawContent":null,"Title":"Consider allow pointers as generic type arguments","State":"open","Body":"In .NET and the latest C# language versions, it is currently allowed to have `MyStruct<T>*` and `T*` (.NET allows this more generally, but C# allows it only for \"unmanaged\" types).\r\n\r\nHowever, it is not possible to have `MyStruct<T*>`. This can be \"problematic\" for certain types of generic code, such as being able to have a `Span<int*> x` or `Lazy<ID3D12Device*>` since you instead must instantiate it as `IntPtr` and cast at the relevant usage sites.\r\n\r\nGoing through ECMA-335, the rationale given in `II.9.4 Instantiating generic types` is:\r\n> [Rationale: Unmanaged pointers are disallowed because as currently specified unmanaged pointers are not technically subclasses of System.Object. This restriction can be lifted, but currently the runtime enforces this restriction and this spec reflects that. ]\r\n\r\nI would propose that this restriction be lifted and pointers be allowed as generic type arguments. If that is possible, I would open a corresponding proposal on dotnet/csharplang suggesting that the language allow the same.","Url":"https://github.com/dotnet/coreclr/issues/27387","RelatedDescription":"Open issue \"Consider allow pointers as generic type arguments\" (#27387)"},{"Id":"511280714","IsPullRequest":true,"CreatedAt":"2019-10-23T14:02:48","Actor":"dotnet-maestro[bot]","Number":"27385","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19523.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27385","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#27385)"},{"Id":"510971650","IsPullRequest":true,"CreatedAt":"2019-10-23T12:30:23","Actor":"jkotas","Number":"27375","RawContent":null,"Title":"Delete stale test exclusion files","State":"closed","Body":"The .txt exclusion files do not appear to be used and maintained anymore.","Url":"https://github.com/dotnet/coreclr/pull/27375","RelatedDescription":"Closed or merged PR \"Delete stale test exclusion files\" (#27375)"},{"Id":"511123463","IsPullRequest":true,"CreatedAt":"2019-10-23T07:11:31","Actor":"VSadov","Number":"27384","RawContent":null,"Title":"Use half-fences for volatile load/stores on Windows ARM64","State":"open","Body":"Needed for https://github.com/dotnet/coreclr/pull/23548","Url":"https://github.com/dotnet/coreclr/pull/27384","RelatedDescription":"Open PR \"Use half-fences for volatile load/stores on Windows ARM64\" (#27384)"},{"Id":"511114159","IsPullRequest":true,"CreatedAt":"2019-10-23T06:51:13","Actor":"elinor-fung","Number":"27383","RawContent":null,"Title":"[WIP] Basic infrastructure for binder tracing","State":"open","Body":"Add basic infrastructure for binder tracing\r\n- Helper class for firing start/stop event if tracing is enabled\r\n  - Call into managed activity tracker to start/stop activities (only if tracing is enabled, so perf hit should already be expected from enabling tracing)\r\n- New `AssemblyBindStart` and `AssemblyBindStop` events\r\n- Fire events in `AppDomain::BindAssemblySpec` and `AssemblyNative::LoadFromPEImage`\r\n- Binder tracing test project and event listener\r\n\r\nNotes:\r\n- Properties on the new events `AssemblyBindStart` and `AssemblyBindStop` events aren't properly populated yet.\r\n- This is completely ignoring binds for `System.Private.CoreLib.resources`. That load can be triggered by the creation of an `EventSource` (which can be triggered by `ActivityTracker`), so calling back into `ActivityTracker` could result in infinite recursion between the bind and tracing the bind. Potential options:\r\n  - Don't trace binds for `System.Private.CoreLib.resources` (this PR, no events at all)\r\n  - Add some param to `ActivityTracker` functions to indicate it should not use any `EventSource` during those calls\r\n  - Don't start/stop an activity for `System.Private.CoreLib.resources` binds (events, but without correlation)","Url":"https://github.com/dotnet/coreclr/pull/27383","RelatedDescription":"Open PR \"[WIP] Basic infrastructure for binder tracing\" (#27383)"},{"Id":"510997067","IsPullRequest":true,"CreatedAt":"2019-10-23T03:23:13","Actor":"tannergooding","Number":"27377","RawContent":null,"Title":"Adding SkipInit to Internal.Runtime.CompilerServices.Unsafe","State":"closed","Body":"This exposes `Internal.Runtime.CompilerServices.Unsafe.SkipInit` and consumes it in `Decimal.DecCalc`. There were no pmi diffs from doing so.","Url":"https://github.com/dotnet/coreclr/pull/27377","RelatedDescription":"Closed or merged PR \"Adding SkipInit to Internal.Runtime.CompilerServices.Unsafe\" (#27377)"},{"Id":"510975687","IsPullRequest":true,"CreatedAt":"2019-10-23T02:45:37","Actor":"Dotnet-GitSync-Bot","Number":"27376","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/coreclr/pull/27376","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#27376)"},{"Id":"511005881","IsPullRequest":true,"CreatedAt":"2019-10-23T00:45:53","Actor":"fadimounir","Number":"27381","RawContent":null,"Title":"Use v3.0.100 of the SDK (RTM version)","State":"open","Body":"No reason to use a preview7 version of the SDK now that we shipped.","Url":"https://github.com/dotnet/coreclr/pull/27381","RelatedDescription":"Open PR \"Use v3.0.100 of the SDK (RTM version)\" (#27381)"},{"Id":"511002156","IsPullRequest":false,"CreatedAt":"2015-11-30T22:16:41","Actor":"wtgodbe","Number":"27380","RawContent":null,"Title":"QueryThreadCycleTime & GetThreadTimes inconsistent on non-Windows platforms","State":"open","Body":"(From https://github.com/dotnet/coreclr/pull/1671)\n\nQueryThreadCycleTime and GetThreadTimes return inconsistent results on non-windows platforms when run in CI, causing their tests to fail intermittently, but I haven't been able to reproduce this locally. I've tried setting processor affinity in the tests to fix this, but the issue persists.\n","Url":"https://github.com/dotnet/coreclr/issues/27380","RelatedDescription":"Open issue \"QueryThreadCycleTime & GetThreadTimes inconsistent on non-Windows platforms\" (#27380)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"511712375","IsPullRequest":true,"CreatedAt":"2019-10-24T05:20:13","Actor":"dotnet-maestro[bot]","Number":"12975","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.11\r\n- **Date Produced**: 10/24/2019 4:13 AM\r\n- **Commit**: 925a7137c8d1387a3948ee36ffc90fc182b405a9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.11\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19523.16 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12975","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12975)"},{"Id":"511620808","IsPullRequest":true,"CreatedAt":"2019-10-24T03:06:54","Actor":"dotnet-maestro[bot]","Number":"12973","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12973","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12973)"},{"Id":"511632334","IsPullRequest":true,"CreatedAt":"2019-10-24T00:05:09","Actor":"dotnet-bot","Number":"12974","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12974","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#12974)"},{"Id":"511569396","IsPullRequest":true,"CreatedAt":"2019-10-23T23:10:32","Actor":"dotnet-maestro[bot]","Number":"12970","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.4\r\n- **Date Produced**: 10/23/2019 7:49 PM\r\n- **Commit**: 5cde584f489b0b4c558255ea484c5606eb494b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12970","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12970)"},{"Id":"510843124","IsPullRequest":false,"CreatedAt":"2019-10-23T21:52:41","Actor":"bricelam","Number":"12963","RawContent":null,"Title":"Can't install tools targeting 3.1","State":"closed","Body":"## Steps to reproduce\r\n\r\n```sh\r\ndotnet tool install dotnet-ef --version 3.1.0-preview1.19506.2\r\n```\r\n\r\n## Expected  behavior\r\n\r\n```\r\nTool 'dotnet-ef' (version '3.1.0-preview1.19506.2') was successfully installed.\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nerror NU1202: Package dotnet-ef 3.1.0-preview1.19506.2 is not compatible with netcoreapp3.1 (.NETCoreApp,Version=v3.1) / any. Package dotnet-ef 3.1.0-preview1.19506.2 supports: netcoreapp3.1 (.NETCoreApp,Version=v3.1)\r\nThe tool package could not be restored.\r\nTool 'dotnet-ef' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview2-014486\r\n Commit:    343b2cba36\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\sdk\\3.1.100-preview2-014486\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview2.19517.10\r\n  Commit:  3daa0867ab\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview2-014486 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0-preview2.19517.21 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview2.19517.10 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview2.19517.10 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\ncc @ajcvickers @Pilchie ","Url":"https://github.com/dotnet/cli/issues/12963","RelatedDescription":"Closed issue \"Can't install tools targeting 3.1\" (#12963)"},{"Id":"511581613","IsPullRequest":true,"CreatedAt":"2019-10-23T21:27:44","Actor":"nguerrera","Number":"12972","RawContent":null,"Title":"Fix typo","State":"open","Body":"Error made during 3.0.x servicing changes","Url":"https://github.com/dotnet/cli/pull/12972","RelatedDescription":"Open PR \"Fix typo\" (#12972)"},{"Id":"509816461","IsPullRequest":true,"CreatedAt":"2019-10-23T21:13:14","Actor":"dotnet-maestro[bot]","Number":"12950","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.3\r\n- **Date Produced**: 10/21/2019 3:12 PM\r\n- **Commit**: b6e04f97df5f62282cc7738a31ae697da43ab977\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19521.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12950","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12950)"},{"Id":"511572055","IsPullRequest":true,"CreatedAt":"2019-10-23T21:12:47","Actor":"zsd4yr","Number":"12971","RawContent":null,"Title":"fix typo in RuntimeFrameworkVersion under FrameworkReference","State":"closed","Body":"`MicrosoftNETCoreAppRuntimePackageVersion` is used by `RuntimeFrameworkVersion` under `FrameworkReference` in `Directory.Build.targets` as well as `global.json`'s tools.runtimes.dotnet. It is defined in Versions.props below\r\n\r\nhttps://github.com/dotnet/cli/blob/edb240070dbac6ca80122d06dad51bf9221df62f/eng/Versions.props#L21-L22\r\n\r\nHowever, it was incorrectly typed in `RuntimeFrameworkVersion` under `FrameworkReference` in `Directory.Build.targets`. This PR fixes that typo\r\n","Url":"https://github.com/dotnet/cli/pull/12971","RelatedDescription":"Closed or merged PR \"fix typo in RuntimeFrameworkVersion under FrameworkReference\" (#12971)"},{"Id":"511525175","IsPullRequest":false,"CreatedAt":"2019-10-23T19:27:27","Actor":"MichaelSimons","Number":"12969","RawContent":null,"Title":"Add test coverage for Nano Server ","State":"open","Body":"Add test coverage (CI/official builds) on Nano Server.  Nano Server is very different than other Windows SKUs and is very slimmed down.  The goal is to catch issues like https://github.com/dotnet/cli/issues/12915.","Url":"https://github.com/dotnet/cli/issues/12969","RelatedDescription":"Open issue \"Add test coverage for Nano Server \" (#12969)"},{"Id":"509843995","IsPullRequest":false,"CreatedAt":"2019-10-23T10:24:02","Actor":"ww898","Number":"12951","RawContent":null,"Title":"dotnet publush for .NET Core 3.x doesn't set execute flags for executables","State":"closed","Body":"## Steps to reproduce\r\n`dotnet publish --self-contained true -f netcoreapp3.0 -r linux-x64`\r\n`dotnet publish --self-contained true -f netcoreapp3.0 -r osx-x64`\r\n\r\n## Expected  behavior\r\nThe compiled executable should be ready to be executed after publishing.\r\n\r\n## Actual behavior\r\n.NET Core 3.0/3.1 doesn't set execute flags for executables during publishing. Previous version of .NET Core do it.\r\n\r\n## Environment data\r\n- Linux qqq 4.15.0-65-generic #74~16.04.1-Ubuntu SMP Wed Sep 18 09:51:44 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n- macOS Mojave version 10.14\r\n- macOS Catalina version 10.15\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12951","RelatedDescription":"Closed issue \"dotnet publush for .NET Core 3.x doesn't set execute flags for executables\" (#12951)"},{"Id":"511027176","IsPullRequest":true,"CreatedAt":"2019-10-23T06:17:02","Actor":"dotnet-maestro[bot]","Number":"12968","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.9\r\n- **Date Produced**: 10/23/2019 4:27 AM\r\n- **Commit**: 8dc60d0132c062a8258969cdec05df9a258ea5b6\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19522.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12968","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12968)"},{"Id":"510378149","IsPullRequest":true,"CreatedAt":"2019-10-23T03:04:57","Actor":"wli3","Number":"12955","RawContent":null,"Title":"Fix mark of the web","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/12955","RelatedDescription":"Closed or merged PR \"Fix mark of the web\" (#12955)"},{"Id":"511006923","IsPullRequest":false,"CreatedAt":"2019-10-23T00:50:01","Actor":"daniel-white","Number":"12967","RawContent":null,"Title":"VSSettings fails with DotNetCliToolReference in VS for Mac ","State":"open","Body":"## Steps to reproduce\r\n* VS for Mac 8.3.4\r\n* Have a `global.json` with\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"2.1.802\"\r\n  }\r\n}\r\n```\r\n* Have a csproj file with\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    \r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Swashbuckle.AspNetCore.Cli\" Version=\"4.0.1\" />\r\n  </ItemGroup>\r\n    \r\n  <Target Name=\"GenerateSwagger\" AfterTargets=\"AfterBuild\">\r\n    <Exec  Command=\"dotnet -d swagger\" />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n* Build with VS for Mac\r\n* Build from terminal (`dotnet build`)\r\n\r\n## Expected  behavior\r\nThe swagger tool is run as it does from the CLI.\r\n\r\n## Actual behavior\r\nFails to find tool in mac\r\n\r\n```\r\ndotnet -d swagger\r\nTelemetry is: Enabled\r\nprojectfactory: MSBUILD_EXE_PATH = /Users/daniel.white/Library/Caches/VisualStudio/8.0/MSBuild/88767_1/MonoDevelop.MSBuildBuilder.exe\r\nprojectfactory: MSBuild project path = /Users/daniel.white/Builds/foo/foo.csproj\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The SDK resolver type \"DotNetMSBuildSdkResolver\" failed to load. The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.VSSettings' threw an exception.  /Users/daniel.white/Builds/foo/foo.csproj ---> System.TypeInitializationException: The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.VSSettings' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.Interop' threw an exception. ---> System.TypeLoadException: Could not load type 'System.Runtime.InteropServices.OSPlatform' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.DotNet.MSBuildSdkResolver.VSSettings..ctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs:line 30\r\n   at Microsoft.DotNet.MSBuildSdkResolver.VSSettings..cctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs:line 25\r\nMicrosoft.DotNet.Cli.Utils.CommandUnknownException: No executable found matching command \"dotnet-swagger\"\r\n   at Microsoft.DotNet.Cli.Utils.Command.Create(ICommandResolverPolicy commandResolverPolicy, String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.Cli.Utils.Command.Create(String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver..ctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/MSBuildSdkResolver.cs:line 38\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.Build.Shared.ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(Boolean condition, String errorSubCategoryResourceName, BuildEventFileInfo projectFile, Exception innerException, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectFileErrorUtilities.ThrowInvalidProjectFile(BuildEventFileInfo projectFile, Exception innerException, String resourceName, Object[] args)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers(String resolverPath, LoggingContext loggingContext, ElementLocation location, List`1 resolvers)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers(LoggingContext loggingContext, ElementLocation location)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.Initialize(LoggingContext loggingContext, ElementLocation location)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive)\r\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.<>c__DisplayClass3_0.<ResolveSdk>b__0(String key)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion)\r\n   at Microsoft.DotNet.Cli.Utils.MSBuildProject..ctor(String msBuildProjectPath, NuGetFramework framework, String configuration, String outputPath, String msBuildExePath)\r\n   at Microsoft.DotNet.Cli.Utils.ProjectFactory.GetMSBuildProj(String projectDirectory, NuGetFramework framework, String configuration, String outputPath)\r\nprojecttoolscommandresolver: ProjectFactory did not find Project.\r\n/Users/daniel.white/Builds/foo/foo.csproj(12,5): error MSB3073: The command \"dotnet -d swagger\" exited with code 1.\r\nDone building project \"foo.csproj\" -- FAILED.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n(from inside VS for Mac)\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.802\r\n Commit:    177d0b2525\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.802/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.504 [/usr/local/share/dotnet/sdk]\r\n  2.1.802 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12967","RelatedDescription":"Open issue \"VSSettings fails with DotNetCliToolReference in VS for Mac \" (#12967)"},{"Id":"510970341","IsPullRequest":false,"CreatedAt":"2019-10-22T22:45:38","Actor":"wli3","Number":"12966","RawContent":null,"Title":"Port change to other branches","State":"open","Body":"- [ ] https://github.com/dotnet/cli/pull/12955\r\n- [ ] https://github.com/dotnet/cli/pull/12899\r\n","Url":"https://github.com/dotnet/cli/issues/12966","RelatedDescription":"Open issue \"Port change to other branches\" (#12966)"},{"Id":"510662012","IsPullRequest":false,"CreatedAt":"2019-10-22T21:58:54","Actor":"patearl","Number":"12960","RawContent":null,"Title":"dotnet test can't find included runtime","State":"closed","Body":"## Steps to reproduce\r\nCreate an nunit test project that targets netcoreapp3.0. As of today, it uses the latest microsoft test sdk package and the latest nunit adapter package.\r\n\r\nDownload the 3.0 SDK ZIP file and unzip it.\r\n\r\nRun dotnet test from the 3.0 SDK's folder against the solution.\r\n\r\nAs can be seen below, running dotnet --list-runtimes shows the 3.0 runtime included with the SDK. However, when dotnet test is running, it is unable to find the same runtime that it just found and only lists the pre-installed runtimes. We would prefer not to actually install the runtime and just have it run properly from the zip archive SDK. It should be able to use the runtime that it is clearly able to find with --list-runtimes instead of only being able to use the pre-installed runtimes that it later lists during test execution.\r\n\r\n## Expected  behavior\r\nRuns tests\r\n\r\n## Actual behavior\r\n[22:42:47][Exec] Test run for C:\\w\\99694c0b2afac045\\Source\\Pleasant.Tests\\bin\\Release\\netcoreapp3.0\\Pleasant.Tests.dll(.NETCoreApp,Version=v3.0)\r\n[22:42:47][Exec] Microsoft (R) Test Execution Command Line Tool Version 16.3.0\r\n[22:42:47][Exec] Copyright (c) Microsoft Corporation.  All rights reserved.\r\n[22:42:47][Exec] \r\n[22:42:47][Exec] Starting test execution, please wait...\r\n[22:42:48][Exec] \r\n[22:42:48][Exec] A total of 1 test files matched the specified pattern.\r\n[22:42:48][Exec] EXEC It was not possible to find any compatible framework version\r\n[22:42:48][Exec] The specified framework 'Microsoft.NETCore.App', version '3.0.0' was not found.\r\n[22:42:48][Exec]   - Check application dependencies and target a framework version installed at:\r\n[22:42:48][Exec]       C:\\Program Files\\dotnet\r\n[22:42:48][Exec]   - Installing .NET Core prerequisites might help resolve this problem:\r\n[22:42:48][Exec]       https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n[22:42:48][Exec]   - The .NET Core framework and SDK can be installed from:\r\n[22:42:48][Exec]       https://aka.ms/dotnet-download\r\n[22:42:48][Exec]   - The following versions are installed:\r\n[22:42:48][Exec]       1.0.1 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.5 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.7 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.9 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.3 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.5 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.9 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.11 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.12 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n## Environment data\r\nUsing 3.0.100 SDK.\r\n\r\n[22:42:25][TestSolution] Exec\r\n[22:42:25][Exec] \"C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\dotnet\" --list-sdks\r\n[22:42:25][Exec] 1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 3.0.100 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\sdk]\r\n[22:42:25][TestSolution] ............................................................\r\n[22:42:25][TestSolution] Exec\r\n[22:42:25][Exec] \"C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\dotnet\" --list-runtimes\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.WindowsDesktop.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/dotnet/cli/issues/12960","RelatedDescription":"Closed issue \"dotnet test can't find included runtime\" (#12960)"},{"Id":"510905320","IsPullRequest":true,"CreatedAt":"2019-10-22T21:53:11","Actor":"dotnet-maestro[bot]","Number":"12965","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.4.0.6271\r\n- **Date Produced**: 10/19/2019 4:24 AM\r\n- **Commit**: c1f6915918b82c096bbd666bd9c18528f1f70630\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.4.0-preview.3.6271\r\n\r\n[marker]: <> (End:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12965","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from nuget/nuget.client\" (#12965)"},{"Id":"510882484","IsPullRequest":true,"CreatedAt":"2019-10-22T20:50:30","Actor":"dotnet-maestro[bot]","Number":"12964","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191022.3\r\n- **Date Produced**: 10/22/2019 7:29 PM\r\n- **Commit**: 1ea47f119b25bd0c4c475ef444abf591d4b890f9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19522.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12964","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12964)"},{"Id":"510566549","IsPullRequest":false,"CreatedAt":"2019-10-22T18:29:15","Actor":"ichensky","Number":"12959","RawContent":null,"Title":"Telemetry in `dotnet new console` fully not disabled .net core 3.0","State":"closed","Body":"## Steps to reproduce\r\n1. Set environment variable:\r\n```\r\n    echo \"export DOTNET_CLI_TELEMETRY_OPTOUT=1\"\r\n```\r\n2. Execute \r\n```\r\n    dotnet new console\r\n```\r\n## Actual behavior\r\nIf there is internet, then \r\n`dotnet` util will make several HTTP requests.\r\n1. https://go.microsoft.com/fwlink/?linkid=2087906&clcid=0x409\r\n2. https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebpifeed.blob.core.windows.net%2Fwebpifeed%2FPartners%2FNuGetTemplateSearchInfo.json&data=02%7C***%7Cangelpe%40microsoft.com%7C***%7C***%7C***%7C***%7C***&sdata=***%3D&reserved=0\r\n3. https://webpifeed.blob.core.windows.net/webpifeed/Partners/NuGetTemplateSearchInfo.json\r\n\r\n`dotnet` util make 3 HTTP requests just to get `NuGetTemplateSearchInfo.json` file. \r\n\r\nSeems, `dotnet` util sends private data in the first request in the part of url:\r\n `clcid=0x409`\r\nand in the second request in this part of the url: \r\n `&data=02%7C***%7Cangelpe%40microsoft.com%7C***%7C***%7C***%7C***%7C***&sdata=***%3D&reserved=0`\r\n\r\n## Expected  behavior\r\nDo not make HTTP request at all or make direct HTTP request to the  `NuGetTemplateSearchInfo.json` file.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12959","RelatedDescription":"Closed issue \"Telemetry in `dotnet new console` fully not disabled .net core 3.0\" (#12959)"},{"Id":"510760785","IsPullRequest":false,"CreatedAt":"2019-10-22T16:10:35","Actor":"ForestEckhardt","Number":"12962","RawContent":null,"Title":"Unable to leverage new SDK with older runtimes","State":"open","Body":"## Steps to reproduce\r\nInstall 2.1.802 .Net SDK libraries and 2.1.12 .Net Runtime libraries onto your system.\r\n\r\n## Expected  behavior\r\nI expected to be able to use a newer version of the .Net SDK and an older version of the .Net Runtimes to build and publish my app as outlined in the following document: https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version\r\n\r\n## Actual behavior\r\n.Net apps cannot be generated or built as it throws errors saying that it cannot find the runtime that the SDK was released with.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.1.13' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /layers/dotnet/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n  - The following versions are installed:\r\n      2.1.12 at [/layers/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nHost (useful for support):\r\n  Version: 2.1.13\r\n  Commit:  1a165a1588\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [/layers/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [/layers/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [/layers/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/layers/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12962","RelatedDescription":"Open issue \"Unable to leverage new SDK with older runtimes\" (#12962)"},{"Id":"510727253","IsPullRequest":false,"CreatedAt":"2019-10-22T15:15:05","Actor":"ajmcateer","Number":"12961","RawContent":null,"Title":"dotnet publish won't publish self contained exe without a RuntimeIdentifier. I am passing -r in the command.","State":"open","Body":"## Steps to reproduce\r\nRun the following command\r\ndotnet publish --self-contained true -f netcoreapp3.0 -r linux-x64\r\n\r\n## Expected  behavior\r\nShould publish a single executable file for the given runtime\r\n\r\n## Actual behavior\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(127,5): error NETSDK1031: It is not supported to build or publish a self-contained application without specifying a RuntimeIdentifier.  Please either specify a RuntimeIdentifier or set SelfContained to false. [C:\\Users\\ardsafa\\Documents\\git\\fdere\\fdere\\fdere\\fdere.csproj]\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):                                                                              Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12961","RelatedDescription":"Open issue \"dotnet publish won't publish self contained exe without a RuntimeIdentifier. I am passing -r in the command.\" (#12961)"},{"Id":"510521984","IsPullRequest":true,"CreatedAt":"2019-10-22T12:11:39","Actor":"dotnet-maestro[bot]","Number":"12958","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.1\r\n- **Date Produced**: 10/22/2019 10:31 AM\r\n- **Commit**: 9354e1f42890a9deb5d52ca65b0313c707d89ed5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19522.1\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19521.18 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12958","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12958)"},{"Id":"510501415","IsPullRequest":false,"CreatedAt":"2019-10-22T08:23:37","Actor":"Tragetaschen","Number":"12957","RawContent":null,"Title":"Deadlock on Linux build machine","State":"open","Body":"## Description\r\n\r\nI run within my Yocto build three `dotnet publish` commands roughly at the same time. Usually those finish within 10s of seconds, but since yesterday, the commands have not finished for several hours. This has not happened before.\r\n\r\n## Expected  behavior\r\n\r\nNo deadlock. The build should finish as always\r\n\r\n## Actual behavior\r\n\r\nI'm now sitting on a little over 100 PIDs associated with the dotnet process (`ps -efL | grep dotnet`)\r\nThere are several groups of similar invocations:\r\n- About 14 processes are `…/2.2.401/MSBuild.dll … /nodeReuse:true`. Given the environment data below, I have double-checked that this is not a typo. I only have two SDKs (2.2.402, 3.0.100), and the 2.2.401 SDK isn't present in my file system anymore.\r\n- About 45 processes are `dotnet publish -c Release …`, about 15 for each of the three root publish commands\r\n- About 33 processes are `dotnet exec …/3.0.100/MSBuild.dll … -target:Restore …` for two of the root publish commands.\r\n- About 17 processes are `dotnet exec …/3.0.100/MSBuild.dll … -target:Publish …` for the other root publish command.\r\n\r\nI have attached strace to all the PIDs simultaneously (-p … -p … -p …) and the result is this:\r\n[the-trace.gz](https://github.com/dotnet/cli/files/3754358/the-trace.gz)\r\n\r\nI can keep the build machine as-is for the next few days to run more tests as requested. The Azure DevOps build doesn't have a timeout.\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12957","RelatedDescription":"Open issue \"Deadlock on Linux build machine\" (#12957)"},{"Id":"510441063","IsPullRequest":true,"CreatedAt":"2019-10-22T06:15:26","Actor":"dotnet-maestro[bot]","Number":"12956","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.15\r\n- **Date Produced**: 10/22/2019 4:35 AM\r\n- **Commit**: f830769364b45286b638a57176d4a7997dbc5237\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19521.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12956","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12956)"},{"Id":"510353136","IsPullRequest":true,"CreatedAt":"2019-10-22T04:27:30","Actor":"dotnet-maestro[bot]","Number":"12954","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.13\r\n- **Date Produced**: 10/22/2019 2:35 AM\r\n- **Commit**: 93b469074cd73445634feeb0032f7fcb75ef4bfb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19521.13\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19521.5 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12954","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12954)"},{"Id":"510258245","IsPullRequest":true,"CreatedAt":"2019-10-22T01:57:45","Actor":"dotnet-maestro[bot]","Number":"12952","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191021.6\r\n- **Date Produced**: 10/22/2019 12:34 AM\r\n- **Commit**: c1389d79af44fa1f05d9ef8345173db93b821fdb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19521.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12952","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12952)"},{"Id":"510295442","IsPullRequest":true,"CreatedAt":"2019-10-21T21:40:28","Actor":"dotnet-maestro[bot]","Number":"12953","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.7\r\n- **Date Produced**: 10/21/2019 7:58 PM\r\n- **Commit**: 763532fc5b6003b7aedc2d9b587411a6826e30e1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19521.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12953","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12953)"},{"Id":"509669957","IsPullRequest":true,"CreatedAt":"2019-10-21T00:10:23","Actor":"dotnet-maestro[bot]","Number":"12949","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.3\r\n- **Date Produced**: 10/20/2019 10:30 PM\r\n- **Commit**: 32228f2ae5e68394197859608c8c6afb94276481\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12949","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12949)"},{"Id":"509628488","IsPullRequest":true,"CreatedAt":"2019-10-20T17:58:34","Actor":"dsplaisted","Number":"12948","RawContent":null,"Title":"Delete code and update readme for repo merge","State":"open","Body":"The CLI repo [has been merged](https://github.com/dotnet/toolset/pull/2940) into the toolset repo.  So this PR removes the code from the master branch of the CLI repo, and updates the README and issue template to point to the dotnet/sdk repo.","Url":"https://github.com/dotnet/cli/pull/12948","RelatedDescription":"Open PR \"Delete code and update readme for repo merge\" (#12948)"},{"Id":"509561137","IsPullRequest":true,"CreatedAt":"2019-10-20T16:43:28","Actor":"dotnet-maestro[bot]","Number":"12947","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.1\r\n- **Date Produced**: 10/20/2019 3:01 PM\r\n- **Commit**: 07c1aa65a954ed0bb7a3804485422c577eac7167\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12947","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12947)"},{"Id":"509543324","IsPullRequest":true,"CreatedAt":"2019-10-20T04:45:24","Actor":"dotnet-maestro[bot]","Number":"12946","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191019.2\r\n- **Date Produced**: 10/20/2019 3:24 AM\r\n- **Commit**: 0de57914279da79eb7166588f67609c851e46179\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19519.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12946","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12946)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"511593656","IsPullRequest":false,"CreatedAt":"2019-10-23T21:58:36","Actor":"devon94","Number":"1624","RawContent":null,"Title":"Cannot serialize System.Globalization.NumberFormatInfo into binary stream","State":"open","Body":"Hey there,\r\n\r\nI was trying to serialize NumberFormatInfo into a binary stream using the following code:\r\n\r\n`\r\n\r\n            var locale = user?.Locale;\r\n            var cultureInfo = new System.Globalization.CultureInfo(locale);\r\n\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                new BinaryFormatter().Serialize(ms, cultureInfo.NumberFormat);\r\n                return ms.ToArray();\r\n            }\r\n`\r\n\r\nIt worked when we were using mscorlib 4.0.0 but not after migrating to dotnet standard. It looks like it used to have the Serialization attribute in for that class but in dotnet standard those attributes seems to be missing. \r\n\r\nWas it intentional to make the NumberFormatInfo not serializable? Thanks!","Url":"https://github.com/dotnet/standard/issues/1624","RelatedDescription":"Open issue \"Cannot serialize System.Globalization.NumberFormatInfo into binary stream\" (#1624)"},{"Id":"511285257","IsPullRequest":true,"CreatedAt":"2019-10-23T12:30:19","Actor":"dotnet-maestro[bot]","Number":"1623","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1623)"},{"Id":"510619350","IsPullRequest":true,"CreatedAt":"2019-10-22T12:32:26","Actor":"dotnet-maestro[bot]","Number":"1621","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1621)"},{"Id":"510968850","IsPullRequest":false,"CreatedAt":"2019-10-21T21:11:58","Actor":"TomasMorton","Number":"1622","RawContent":null,"Title":"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions","State":"open","Body":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible.","Url":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Open issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622)"},{"Id":"509922429","IsPullRequest":true,"CreatedAt":"2019-10-21T12:23:01","Actor":"dotnet-maestro[bot]","Number":"1620","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1620)"},{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-15T19:33:30","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"open","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Open PR \"Source-build improvements.\" (#1612)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191022.8\r\n- **Date Produced**: 10/22/2019 10:28 PM\r\n- **Commit**: b809e63d8ef475faaf6fecbe8bf77180f8e3550c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19522.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"},{"Id":"505819610","IsPullRequest":true,"CreatedAt":"2019-10-11T12:31:35","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191010.15\r\n- **Date Produced**: 10/11/2019 6:45 AM\r\n- **Commit**: 901c370c2379ad0885bcc5a1921c4164104586aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19510.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1605)"},{"Id":"505811013","IsPullRequest":true,"CreatedAt":"2019-10-11T12:11:39","Actor":"dotnet-maestro[bot]","Number":"1604","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191010.4\r\n- **Date Produced**: 10/10/2019 5:59 PM\r\n- **Commit**: 8cd48078f550fbcbd4f684b897b14db207397b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19510.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1604","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1604)"},{"Id":"505304835","IsPullRequest":false,"CreatedAt":"2019-10-10T14:21:00","Actor":"Sumeetkumawat","Number":"1603","RawContent":null,"Title":"Issue while Referencing iOS native library to .net standard library","State":"open","Body":"I have three projects in my solution. I have added .net standard library say 'A'. I have some code there. Then i added ios library 'B' and added project reference of 'A' here.\r\nNow I have another .net standard library 'C' and here I would like to add reference of 'A' & 'B' projects not dll's. Reference of 'A' is added successfully but while adding reference of 'B', I \r\nsee 'Incompatible Target Framework' message.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1603","RelatedDescription":"Open issue \"Issue while Referencing iOS native library to .net standard library\" (#1603)"},{"Id":"505235113","IsPullRequest":true,"CreatedAt":"2019-10-10T12:33:39","Actor":"dotnet-maestro[bot]","Number":"1602","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.26\r\n- **Date Produced**: 10/10/2019 3:16 AM\r\n- **Commit**: 30280e07adc3c1f0776ef9531b47a769e2b45420\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.26\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1602","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1602)"},{"Id":"505224197","IsPullRequest":true,"CreatedAt":"2019-10-10T12:11:42","Actor":"dotnet-maestro[bot]","Number":"1601","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191009.5\r\n- **Date Produced**: 10/9/2019 10:22 PM\r\n- **Commit**: 1acb4c3ce4c6497388752adad31825ae7cdb7e2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19509.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1601","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1601)"},{"Id":"505206761","IsPullRequest":false,"CreatedAt":"2019-10-10T11:24:37","Actor":"manijak","Number":"1600","RawContent":null,"Title":"The state of X509Certificate management with netstandard, xamarin, win & macOS","State":"open","Body":"First, my apologies if this is the wrong channel to post this. I've been digging and trying to understand for weeks where the issue/limitation is to our problem, figured this would be the most suitable place to ask. We are not sure if this is a limitation with the frameworks, or the platform, or due to our limited knowledge, or a combination of all. But things are very confusing right now, and we just need proper guidance on what direction to take.\r\n\r\nEDIT: Would appreciate if @bartonjs or @filipnavara could pitch in 👍 \r\n\r\n### **Background** 💡 \r\nWe are creating a small, cross-platform (win & macos), desktop application that will act as a websocket server running only on localhost (https). This application is a bridge between our web applications and the local machine hardware (e.g. printers). In order to provide a secure connection, `SslStream` requires a `X509Certificate2` class with a `PrivateKey`.\r\n\r\nThe idea is to let the app itself generate a self-signed certificate with private key and use that to start the secure websocket service. After the certificate has been generated for the first time, we store it in the local certificate store and reuse it when the app restarts. \r\n\r\n### **Project structure & frameworks** 📦 \r\nThis is how our solution is defined. `SharedProject` is a shared lib referenced by both `AppWin` & `AppMac`. The Win & Mac projects are startup-projects for their respective platform. \r\n```\r\nOurApp.sln\r\n  |---- SharedProject (netstandard2.1)\r\n        Creates & runs the websocket service, generates certificate (win), communicates with local hardware, ect\r\n\r\n  |---- AppWin (netcore3.0)\r\n        Startup project for Windows platform. Contains platform-specific code, if any.\r\n\r\n  |---- AppMac (Xamarin.Mac)\r\n        Startup project for macOS platform. Contains platform-specific code (generates certificate).\r\n```\r\n\r\n### **How it runs** 🏃 \r\nIn our `SharedProject` we have a class taking care of certificate generation and storing. The idea was that both the Win & Mac platforms could use this to manage the certificates. It uses the `X509Certificate2` & `CertificateRequest` provided by the framework. Plus the `X509Store` to save and retrieve the certificate.\r\n\r\n**Windows** ✔️ \r\nOn Windows there are no issues. With minimum amount of code we are able to generate a self-signed certificate with private-key, store it, and run the service with it. Also re-using the certificate when the app restarts by retrieving the certificate works very well. The `X509Store` returns the certificate with the _private key_, and we can easily use it with our `SslStream`. \r\n\r\n**macOS** ❌ \r\nThings are not so clear here... We could not use the above mentioned shared class to manage certificates (that works just fine on Windows):\r\n* First issue was that we got a `PlatformNotSupportedException` when the application was trying to use the `CertificateRequest`. \r\n* Second \"issue\" was that the `X509Store` did not store or retrieve certificates from the macOS keychain, but instead it uses some local mono certificate-store that the browsers do not see (at least in our tests). And it only stored the certificate (.cer) not the private-key that was included in the `X509Certificate2` object. Plus it seemed difficult to \"Trust\" the stored certificate.\r\n\r\nSo we created a separate class to take care of certificate management for macOS inside the `AppMac (Xamarin.Mac)` project. By using `BouncyCastle` we generated an identical self-signed certificate with private-key and used that to run our secure websocket service:\r\n\r\n* When launching our Secure Websocket service on macOS, the certificate used here is automatically added to the local macOS login keychain. For us this is great, since we could not use `X509Store` to add it there in the first place.\r\n* The only way we could retrieve the certificate from the keychain was to use the `SecKeyChain` class and query for it. Thankfully the `SecCertificate` object has a `ToX509Certificate2()` function. But that still left us without the `PrivateKey` that is needed by `SslStream`. \r\n* We also tried using `SecKeyChain.FindIdentity` to retrieve both, but even tho it is easy to convert `SecCertificate` to `X509Certificate2`, there seems to be no way to convert a `SecKey` to something useful like `RSA` or `RSACryptoServiceProvider` or something that can be embedded to the `X509Certificate2`\r\n\r\n### What to do? 😭 \r\nWe are pretty much stuck when it comes to the macOS platform. There seems to be no way for us to retrieve our own X509Certificate2 with the private-key embedded. Not sure if this is because we are using Xamarin.Mac & netstandard2.1, perhaps things are easier on netcore3? But still, Xamarin & mono have been around for a long time, there should be a way for us to do this today. Must be something we are missing here and would appreciate if someone could guide us. ","Url":"https://github.com/dotnet/standard/issues/1600","RelatedDescription":"Open issue \"The state of X509Certificate management with netstandard, xamarin, win & macOS\" (#1600)"},{"Id":"504399207","IsPullRequest":false,"CreatedAt":"2019-10-09T12:43:05","Actor":"2300070","Number":"1598","RawContent":null,"Title":"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.","State":"closed","Body":"    private class TestReadOnly\r\n    {\r\n        public static readonly int Field;\r\n    }\r\n    [TestMethod]\r\n    public void TestReadOnlyField()\r\n    {\r\n        FieldInfo field = typeof(TestReadOnly).GetField(nameof(TestReadOnly.Field));\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        field.SetValue(null, 0xFF);\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        Console.WriteLine(TestReadOnly.Field);\r\n    }\r\n\r\nOutput:\r\n\r\n0\r\n255\r\n255\r\n0\r\n","Url":"https://github.com/dotnet/standard/issues/1598","RelatedDescription":"Closed issue \"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.\" (#1598)"},{"Id":"504610278","IsPullRequest":true,"CreatedAt":"2019-10-09T12:21:49","Actor":"dotnet-maestro[bot]","Number":"1599","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.1\r\n- **Date Produced**: 10/9/2019 9:11 AM\r\n- **Commit**: a7ee8cdccce7d2607d58f9b93ce319209a238f7a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1599","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1599)"},{"Id":"504006427","IsPullRequest":true,"CreatedAt":"2019-10-08T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1597","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191008.1\r\n- **Date Produced**: 10/8/2019 8:59 AM\r\n- **Commit**: c1092870c306b8da256e455cec0814486255d0c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19508.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1597","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1597)"},{"Id":"503415647","IsPullRequest":true,"CreatedAt":"2019-10-07T12:29:27","Actor":"dotnet-maestro[bot]","Number":"1596","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191006.4\r\n- **Date Produced**: 10/7/2019 1:07 AM\r\n- **Commit**: 38aa9151607cb63bb569beb42880057ba2cd3da0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19506.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1596","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1596)"},{"Id":"503407217","IsPullRequest":true,"CreatedAt":"2019-10-07T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1595","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191006.1\r\n- **Date Produced**: 10/6/2019 12:59 PM\r\n- **Commit**: 7acc732c615d2c2326cd347c8c1841a300a632cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19506.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1595)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"511708991","IsPullRequest":false,"CreatedAt":"2019-10-24T05:06:20","Actor":"ahsonkhan","Number":"42077","RawContent":null,"Title":"Several System.Security.Cryptography.Pkcs tests fail with Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException","State":"open","Body":"From https://github.com/dotnet/corefx/pull/41754\r\n\r\nFailing on `netcoreapp-Windows_NT-Release-x86-Windows.81.Amd64.Open` with `Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.`\r\n\r\nFor example:\r\n```text\r\nError message\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n\r\nStack trace\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(RecipientInfo recipientInfo, AsymmetricAlgorithm privateKey) in /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/EnvelopedCms.cs:line 208\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent) in /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs:line 845\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo) in /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs:line 826\r\n   at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedDataWithNonPkcs7Oid() in /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs:line 777\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=398302&view=ms.vss-test-web.build-test-results-tab&runId=12432040&resultId=161534&paneView=debug\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/667c26e2-0953-4fe8-bf70-194af19c3683/workitems/System.Security.Cryptography.Pkcs.Tests/console\r\n\r\n```text\r\n  Starting:    System.Security.Cryptography.Pkcs.Tests (parallel test collections = on, max threads = 2)\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.KeyAgreeRecipientInfoTests.TestKeyAgreement_PlatformNotSupported [SKIP]\r\n      Condition(s) not met: \"DoesNotSupportDiffieHellman\"\r\n    System.Security.Cryptography.Pkcs.Tests.Pkcs8PrivateKeyInfoTests.ReencryptAndImport [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs(261,0): at System.Security.Cryptography.RSAImplementation.RSACng.EncryptOrDecrypt(SafeNCryptKeyHandle key, ReadOnlySpan`1 input, AsymmetricPaddingMode paddingMode, Void* paddingInfo, Boolean encrypt)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs(119,0): at System.Security.Cryptography.RSAImplementation.RSACng.EncryptOrDecrypt(Byte[] data, RSAEncryptionPadding padding, Boolean encrypt)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs(30,0): at System.Security.Cryptography.RSAImplementation.RSACng.Decrypt(Byte[] data, RSAEncryptionPadding padding)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Pkcs8PrivateKeyInfoTests.cs(310,0): at System.Security.Cryptography.Pkcs.Tests.Pkcs8PrivateKeyInfoTests.ReencryptAndImport()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.KeyTransRecipientInfoRsaOaepCertTests.TestKeyTransEncryptKey_RsaOaepCertificate_NoPlatformSupport_Throws [SKIP]\r\n      Condition(s) not met: \"DoesNotSupportRsaOaepCerts\"\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.SignCmsUsingDSACertWithNotMatchingKeyThrows [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.Security.Cryptography.CryptographicException)\r\n      Actual:   typeof(Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException): An internal consistency check failed.\r\n      ---- Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/CngKeyLite.cs(409,0): at System.Security.Cryptography.CngKeyLite.GenerateNewExportableKey(String algorithm, Int32 keySize)\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/DSACng.cs(49,0): at System.Security.Cryptography.DSAImplementation.DSACng.GetDuplicatedKeyHandle()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(118,0): at System.Security.Cryptography.DSAImplementation.DSACng.ComputeQLength()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(96,0): at System.Security.Cryptography.DSAImplementation.DSACng.AdjustHashSizeIfNecessary(ReadOnlySpan`1 hash, Span`1 stackBuf)\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(47,0): at System.Security.Cryptography.DSAImplementation.DSACng.TryCreateSignature(ReadOnlySpan`1 hash, Span`1 destination, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.DSA.cs(143,0): at System.Security.Cryptography.Pkcs.CmsSignature.DSACmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(220,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.<>c__DisplayClass77_0.<SignCmsUsingDSACertWithNotMatchingKeyThrows>b__0()\r\n        ----- Inner Stack Trace -----\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/CngKeyLite.cs(409,0): at System.Security.Cryptography.CngKeyLite.GenerateNewExportableKey(String algorithm, Int32 keySize)\r\n        /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/DSACng.cs(49,0): at System.Security.Cryptography.DSAImplementation.DSACng.GetDuplicatedKeyHandle()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(118,0): at System.Security.Cryptography.DSAImplementation.DSACng.ComputeQLength()\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(96,0): at System.Security.Cryptography.DSAImplementation.DSACng.AdjustHashSizeIfNecessary(ReadOnlySpan`1 hash, Span`1 stackBuf)\r\n        /_/src/Common/src/System/Security/Cryptography/DSACng.SignVerify.cs(47,0): at System.Security.Cryptography.DSAImplementation.DSACng.TryCreateSignature(ReadOnlySpan`1 hash, Span`1 destination, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.DSA.cs(143,0): at System.Security.Cryptography.Pkcs.CmsSignature.DSACmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(220,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.<>c__DisplayClass77_0.<SignCmsUsingDSACertWithNotMatchingKeyThrows>b__0()\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.NoTsaEku(includeOption: None) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(699,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.NoTsaEku(X509IncludeOption includeOption)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(includeOption: WholeChain) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(258,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(X509IncludeOption includeOption)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSecondSigner_NoSignature_LoadUnsigned(detached: True) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(856,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSecondSigner_NoSignature_LoadUnsigned(Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(includeOption: None) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(258,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV1(X509IncludeOption includeOption)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV2(includeOption: None, v2Option: ValidHashWithInvalidName, identifierType: IssuerAndSerialNumber, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(411,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV2(X509IncludeOption includeOption, SigningCertificateOption v2Option, SubjectIdentifierType identifierType, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchV1OrV2(includeOption: WholeChain, v1Option: InvalidHashWithInvalidSerial, v2Option: ValidHashNoName, identifierType: IssuerAndSerialNumber, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(555,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchV1OrV2(X509IncludeOption includeOption, SigningCertificateOption v1Option, SigningCertificateOption v2Option, SubjectIdentifierType identifierType, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_RSA_EphemeralKey [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(399,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_RSA_EphemeralKey()\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV1(includeOption: None, v1Option: ValidHashWithInvalidName, identifierType: IssuerAndSerialNumber) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(288,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertMismatchIssuerAndSerialV1(X509IncludeOption includeOption, SigningCertificateOption v1Option, SubjectIdentifierType identifierType)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.TryDecode_Fails_MalformedToken [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(222,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.TryDecode_Fails_MalformedToken()\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(detached: False) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(1150,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(detached: True) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(1150,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.EnsureDataIsolation_NewDocument(Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(includeOption: None, v2Option: ValidHashWithName, hashAlgName: \"SHA1\") [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(716,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(335,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(X509IncludeOption includeOption, SigningCertificateOption v2Option, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(includeOption: WholeChain, v2Option: ValidHashWithName, hashAlgName: \"SHA384\") [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(716,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(335,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV2(X509IncludeOption includeOption, SigningCertificateOption v2Option, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.SignCmsUsingExplicitECDsaP521Key [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Invalid Signature.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(96,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.SignCmsUsingExplicitECDsaP521Key()\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(identifierType: IssuerAndSerialNumber, detached: False) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(464,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(SubjectIdentifierType identifierType, Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV1(includeOption: None, v1Option: ValidHashWithName) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(716,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(245,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.MatchV1(X509IncludeOption includeOption, SigningCertificateOption v1Option)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(identifierType: SubjectKeyIdentifier, detached: False) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs(464,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddFirstSigner_RSA(SubjectIdentifierType identifierType, Boolean detached)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(includeOption: WholeChain, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(978,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(355,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(X509IncludeOption includeOption, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(includeOption: None, hashAlgName: null) [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(355,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(X509IncludeOption includeOption, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(includeOption: WholeChain, hashAlgName: \"MD5\") [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(846,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.BuildCustomToken(CertLoader cert, DateTimeOffset timestamp, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2DigestAlg, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(755,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CustomBuild_CertMismatch(CertLoader loader, DateTimeOffset referenceTime, SigningCertificateOption v1Option, SigningCertificateOption v2Option, HashAlgorithmName v2AlgorithmName, X509IncludeOption includeOption, SubjectIdentifierType identifierType)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/Rfc3161/TimestampTokenTests.cs(355,0): at System.Security.Cryptography.Pkcs.Tests.TimestampTokenTests.CertHashMismatchV2(X509IncludeOption includeOption, String hashAlgName)\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_ECDSA_EphemeralKey [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Invalid Signature.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(439,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.AddSigner_ECDSA_EphemeralKey()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTestsUsingExplicitPrivateKey.DecryptEnvelopedEmptyOctetString [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(834,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(826,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(754,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedEmptyOctetString()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTestsUsingExplicitPrivateKey.DecryptEnvelopedDataWithNonPkcs7Oid [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/EnvelopedCms.cs(208,0): at System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(RecipientInfo recipientInfo, AsymmetricAlgorithm privateKey)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(845,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(826,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(777,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedDataWithNonPkcs7Oid()\r\n    System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.CounterSignCmsUsingExplicitRSAKeyForFirstSignerAndDSAForCounterSignature [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/Common/src/Internal/Cryptography/CngCommon.SignVerify.cs(77,0): at Internal.Cryptography.CngCommon.TrySignHash(SafeNCryptKeyHandle keyHandle, ReadOnlySpan`1 hash, Span`1 signature, AsymmetricPaddingMode paddingMode, Void* pPaddingInfo, Int32& bytesWritten)\r\n        /_/src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs(126,0): at System.Security.Cryptography.RSACng.TrySignHash(ReadOnlySpan`1 hash, Span`1 destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.RSA.cs(157,0): at System.Security.Cryptography.Pkcs.CmsSignature.RSAPkcs1CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& signatureAlgorithm, Byte[]& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSignature.cs(95,0): at System.Security.Cryptography.Pkcs.CmsSignature.Sign(ReadOnlySpan`1 dataHash, HashAlgorithmName hashAlgorithmName, X509Certificate2 certificate, AsymmetricAlgorithm key, Boolean silent, Oid& oid, ReadOnlyMemory`1& signatureValue)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/CmsSigner.cs(233,0): at System.Security.Cryptography.Pkcs.CmsSigner.Sign(ReadOnlyMemory`1 data, String contentTypeOid, Boolean silent, X509Certificate2Collection& chainCerts)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(323,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer, Boolean silent)\r\n        /_/src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SignedCms.cs(274,0): at System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner signer)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(526,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.VerifyCounterSignatureWithExplicitPrivateKey(X509Certificate2 cert, AsymmetricAlgorithm key, X509Certificate2 counterSignerCert, AsymmetricAlgorithm counterSignerKey)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.netcoreapp.cs(111,0): at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.CounterSignCmsUsingExplicitRSAKeyForFirstSignerAndDSAForCounterSignature()\r\n    System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTestsUsingExplicitPrivateKey.DecryptEnvelopedEmptyArray [FAIL]\r\n      Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal consistency check failed.\r\n      Stack Trace:\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(204,0): at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(88,0): at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/Internal/Cryptography/Pal.Windows/CertificatePal.Import.cs(21,0): at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate.cs(83,0): at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs(62,0): at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs(86,0): at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(834,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.VerifySimpleDecrypt(Byte[] encodedMessage, CertLoader certLoader, ContentInfo expectedContent)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(826,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.TestSimpleDecrypt_RoundTrip(CertLoader certLoader, ContentInfo contentInfo, String algorithmOidValue, SubjectIdentifierType type, ContentInfo expectedContentInfo)\r\n        /_/src/System.Security.Cryptography.Pkcs/tests/EnvelopedCms/DecryptTests.cs(742,0): at System.Security.Cryptography.Pkcs.EnvelopedCmsTests.Tests.DecryptTests.DecryptEnvelopedEmptyArray()\r\n  Finished:    System.Security.Cryptography.Pkcs.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Security.Cryptography.Pkcs.Tests  Total: 856, Errors: 0, Failed: 27, Skipped: 2, Time: 6.854s\r\n----- end Wed 10/23/2019  7:49:20.68 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/corefx/issues/42077","RelatedDescription":"Open issue \"Several System.Security.Cryptography.Pkcs tests fail with Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException\" (#42077)"},{"Id":"511689090","IsPullRequest":false,"CreatedAt":"2019-10-24T03:46:43","Actor":"mriehm","Number":"42076","RawContent":null,"Title":"Change in FileSystemInfo.Attributes permissions denied Exception","State":"open","Body":"According to the [docs for FileSystemInfo.Attributes](https://docs.microsoft.com/en-us/dotnet/api/system.io.filesysteminfo.attributes?view=netcore-3.0), trying to set an attribute on a file that you do not have permissions to modify will throw ArgumentException. This is true on .NET Framework, but it does not appear to be true on .NET Core, which throws UnauthorizedAccessException instead. UnauthorizedAccessException does logically make more sense, but this change might be a mistake and considered a compatibility issue, so I'm opening this issue here on corefx.\r\n\r\nIf you decide to keep the current .NET Core behavior of UnauthorizedAccessException, then please move this issue to the docs repo so that the docs can be updated to reflect the .NET Core behavior.\r\n\r\nI noticed this discrepancy during maintenance of a .NET Framework product that specifically catches ArgumentException to suppress the access denied scenario.","Url":"https://github.com/dotnet/corefx/issues/42076","RelatedDescription":"Open issue \"Change in FileSystemInfo.Attributes permissions denied Exception\" (#42076)"},{"Id":"511632143","IsPullRequest":false,"CreatedAt":"2019-10-24T03:46:18","Actor":"RussKie","Number":"42074","RawContent":null,"Title":"[master] `System.Runtime.Serialization.SerializationException : Member 'SerializedString' was not found.`","State":"closed","Body":"After updating dependencies from https://github.com/dotnet/core-setup build 20191022.6 some of our tests started failing with the following error:\r\n```\r\nAssert.Throws() Failure\r\nExpected: typeof(System.Reflection.TargetInvocationException)\r\nActual: typeof(System.Runtime.Serialization.SerializationException): Invalid BinaryFormatter stream.\r\n---- System.Runtime.Serialization.SerializationException : Invalid BinaryFormatter stream.\r\n-------- System.Reflection.TargetInvocationException : Exception has been thrown by the target of an invocation.\r\n------------ System.Runtime.Serialization.SerializationException : Member 'SerializedString' was not found.\r\n```\r\n\r\nCommit: https://github.com/dotnet/winforms/pull/2159\r\nCI: https://dev.azure.com/dnceng/public/_build/results?buildId=398306&view=ms.vss-test-web.build-test-results-tab&runId=12432008&resultId=110198&paneView=debug\r\n\r\nIn the previous commit that didn't have the update these tests pass.","Url":"https://github.com/dotnet/corefx/issues/42074","RelatedDescription":"Closed issue \"[master] `System.Runtime.Serialization.SerializationException : Member 'SerializedString' was not found.`\" (#42074)"},{"Id":"511548008","IsPullRequest":false,"CreatedAt":"2019-10-24T03:11:49","Actor":"Marusyk","Number":"42065","RawContent":null,"Title":"XmlBinaryWriterSession.TryAdd method always returns one and the same value of 'true' ","State":"closed","Body":"[Documentation ](https://docs.microsoft.com/en-us/dotnet/api/system.xml.xmlbinarywritersession.tryadd?view=netcore-3.0)says:\r\n\r\n> Returns: true if the string could be added; otherwise, false.\r\n\r\nbut method always returns one and the same value of 'true'\r\nhttps://github.com/dotnet/corefx/blob/81a551c219041cacdb6c5f77ff1dd588e8bebd01/src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs#L29-L54\r\n\r\nShould it be fixed in docs or code?","Url":"https://github.com/dotnet/corefx/issues/42065","RelatedDescription":"Closed issue \"XmlBinaryWriterSession.TryAdd method always returns one and the same value of 'true' \" (#42065)"},{"Id":"511540117","IsPullRequest":true,"CreatedAt":"2019-10-24T01:32:12","Actor":"Marusyk","Number":"42063","RawContent":null,"Title":"Recombine files ProcessTests.cs and ProcessTests.netcoreapp.cs","State":"closed","Body":"Contributes #41821\r\n\r\nShould I consolidate other netcoreapp.cs files?\r\n\r\nPlease review\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/42063","RelatedDescription":"Closed or merged PR \"Recombine files ProcessTests.cs and ProcessTests.netcoreapp.cs\" (#42063)"},{"Id":"511635105","IsPullRequest":true,"CreatedAt":"2019-10-24T00:15:52","Actor":"echesakovMSFT","Number":"42075","RawContent":null,"Title":"Update ref/System.Runtime.Intrinsics.Experimental.cs (LeadingZeroCount, LeadingSignCount, PopCount)","State":"open","Body":"dotnet/coreclr part of the changes in https://github.com/dotnet/coreclr/pull/27382/\r\n\r\nSee also https://github.com/dotnet/corefx/issues/26182 ","Url":"https://github.com/dotnet/corefx/pull/42075","RelatedDescription":"Open PR \"Update ref/System.Runtime.Intrinsics.Experimental.cs (LeadingZeroCount, LeadingSignCount, PopCount)\" (#42075)"},{"Id":"511624881","IsPullRequest":true,"CreatedAt":"2019-10-23T23:34:47","Actor":"gfoidl","Number":"42073","RawContent":null,"Title":"Optimize FindFirstCharToEncode for JavaScriptEncoder.Default using Ssse3 intrinsics","State":"open","Body":"## Description\r\n\r\nFollow up to https://github.com/dotnet/corefx/pull/41933\r\n\r\n* For the vectorized char-path 2\\*8 chars are combined to one byte-vector (16 elements), then the byte-path for finding the first element, that needs to be escaped is taken. If there are less than 2*8 chars, a dummy char-vector is used, that is known to be be valid, i.e. it must not be escaped (here `A` is chosen)\r\n(cf. https://github.com/dotnet/corefx/pull/41845#discussion_r336728111)\r\n\r\n* The \"escaping mask\" is created via bit-masks. For an outline of the algorithm see https://github.com/dotnet/corefx/pull/41845#discussion_r336745516 (and / or comments in the code).\r\nFor the shuffling SSSE3 is needed (for a comment on SSSE3 see also https://github.com/dotnet/corefx/pull/41845#discussion_r337580425).\r\n\r\nThese optimization are applied to `JavaScriptEncoder.Default` (= `DefaultJavaScriptEncoderBasicLatin`), as suggested by @ahsonkhan in https://github.com/dotnet/corefx/pull/41845#discussion_r337903046.\r\n\r\nFor the other two mentioned encoders, the bit-mask won't work (in a performant way), as some values above `0x7F` are valid. So to handle them properly, lots of overhead have to be introduced, that's why I left them out (in this PR, maybe later when I can think more about it).\r\n\r\nAs minor change, the ASCII-cache got optimized to be just the lookup (cf. https://github.com/dotnet/corefx/pull/41933#discussion_r337786828).\r\n\r\n## Benchmarks\r\n\r\nBenchmarks are based on the ones from https://github.com/dotnet/corefx/pull/41845\r\n\r\n<details>\r\n    <summary>Machine info</summary>\r\n\r\nA linux-vm was used.\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=ubuntu 18.04\r\nIntel Xeon CPU 2.00GHz, 1 CPU, 2 logical cores and 1 physical core\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n   <summary>Test_EscapingBenchmark</summary>\r\n\r\n```\r\n|    Method |        TestStringData |     Mean |     Error |    StdDev | Ratio | RatioSD |\r\n|---------- |---------------------- |---------:|----------:|----------:|------:|--------:|\r\n|   PR41845 |            (1, -1, r) | 10.27 ns | 0.2856 ns | 0.2932 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |            (1, -1, r) | 10.72 ns | 0.0356 ns | 0.0278 ns |  1.04 |    0.03 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |          (1, 0, &lt;) | 10.09 ns | 0.0173 ns | 0.0144 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |          (1, 0, &lt;) | 10.72 ns | 0.0390 ns | 0.0325 ns |  1.06 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 | (100,(...)kuwu) [111] | 67.87 ns | 0.6098 ns | 0.5092 ns |  1.00 |    0.00 |\r\n| PR_gfoidl | (100,(...)kuwu) [111] | 30.88 ns | 0.1003 ns | 0.0837 ns |  0.46 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |  (15, (...)dabu) [25] | 21.29 ns | 0.0262 ns | 0.0232 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |  (15, (...)dabu) [25] | 16.48 ns | 0.0410 ns | 0.0320 ns |  0.77 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |  (16, (...)sqfa) [26] | 17.69 ns | 0.0514 ns | 0.0456 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |  (16, (...)sqfa) [26] | 12.93 ns | 0.0355 ns | 0.0297 ns |  0.73 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |  (17, (...)aabr) [27] | 18.78 ns | 0.1336 ns | 0.1043 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |  (17, (...)aabr) [27] | 14.06 ns | 0.0718 ns | 0.0561 ns |  0.75 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |           (2, -1, dd) | 11.29 ns | 0.0655 ns | 0.0580 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |           (2, -1, dd) | 11.80 ns | 0.0108 ns | 0.0090 ns |  1.05 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |  (32, (...)dfpn) [42] | 26.69 ns | 0.4799 ns | 0.4255 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |  (32, (...)dfpn) [42] | 15.57 ns | 0.0094 ns | 0.0079 ns |  0.59 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |         (4, -1, negs) | 13.58 ns | 0.1612 ns | 0.1258 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |         (4, -1, negs) | 14.10 ns | 0.0854 ns | 0.0713 ns |  1.04 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |      (7, -1, netggni) | 17.41 ns | 0.8116 ns | 0.9967 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |      (7, -1, netggni) | 17.10 ns | 0.1280 ns | 0.1069 ns |  0.97 |    0.06 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (7, 0, &lt;etggni) | 10.09 ns | 0.0279 ns | 0.0218 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (7, 0, &lt;etggni) | 10.87 ns | 0.3553 ns | 0.3150 ns |  1.08 |    0.03 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (7, 1, n&lt;tggni) | 11.20 ns | 0.0074 ns | 0.0066 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (7, 1, n&lt;tggni) | 11.77 ns | 0.0090 ns | 0.0080 ns |  1.05 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (7, 2, ne&lt;ggni) | 12.33 ns | 0.0056 ns | 0.0044 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (7, 2, ne&lt;ggni) | 13.12 ns | 0.2086 ns | 0.1742 ns |  1.06 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (7, 3, net&lt;gni) | 13.54 ns | 0.0775 ns | 0.0605 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (7, 3, net&lt;gni) | 14.12 ns | 0.0358 ns | 0.0317 ns |  1.04 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (7, 4, netg&lt;ni) | 14.58 ns | 0.0362 ns | 0.0302 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (7, 4, netg&lt;ni) | 14.93 ns | 0.1211 ns | 0.1073 ns |  1.02 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (7, 5, netgg&lt;i) | 15.71 ns | 0.0557 ns | 0.0466 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (7, 5, netgg&lt;i) | 15.91 ns | 0.0175 ns | 0.0146 ns |  1.01 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (7, 6, netggn&lt;) | 16.80 ns | 0.0224 ns | 0.0187 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (7, 6, netggn&lt;) | 17.04 ns | 0.0207 ns | 0.0162 ns |  1.01 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |     (8, -1, jgnavpkd) | 13.49 ns | 0.0794 ns | 0.0704 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |     (8, -1, jgnavpkd) | 12.96 ns | 0.0376 ns | 0.0294 ns |  0.96 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 0, &lt;gnavpkd) | 13.46 ns | 0.0183 ns | 0.0172 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 0, &lt;gnavpkd) | 13.01 ns | 0.0340 ns | 0.0284 ns |  0.97 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 1, j&lt;navpkd) | 13.44 ns | 0.0112 ns | 0.0094 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 1, j&lt;navpkd) | 13.12 ns | 0.1508 ns | 0.1259 ns |  0.98 |    0.01 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 2, jg&lt;avpkd) | 13.45 ns | 0.0143 ns | 0.0119 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 2, jg&lt;avpkd) | 13.08 ns | 0.0652 ns | 0.0545 ns |  0.97 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 3, jgn&lt;vpkd) | 13.63 ns | 0.2922 ns | 0.2591 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 3, jgn&lt;vpkd) | 13.04 ns | 0.0669 ns | 0.0593 ns |  0.96 |    0.02 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 4, jgna&lt;pkd) | 13.45 ns | 0.0096 ns | 0.0075 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 4, jgna&lt;pkd) | 13.01 ns | 0.0253 ns | 0.0211 ns |  0.97 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 5, jgnav&lt;kd) | 13.45 ns | 0.0257 ns | 0.0215 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 5, jgnav&lt;kd) | 13.21 ns | 0.2856 ns | 0.2672 ns |  0.98 |    0.02 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 6, jgnavp&lt;d) | 13.55 ns | 0.0706 ns | 0.0660 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 6, jgnavp&lt;d) | 13.05 ns | 0.0240 ns | 0.0200 ns |  0.96 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |   (8, 7, jgnavpk&lt;) | 13.44 ns | 0.0218 ns | 0.0182 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |   (8, 7, jgnavpk&lt;) | 13.04 ns | 0.0773 ns | 0.0604 ns |  0.97 |    0.00 |\r\n|           |                       |          |           |           |       |         |\r\n|   PR41845 |    (9, -1, csvobsdxs) | 14.76 ns | 0.3127 ns | 0.2925 ns |  1.00 |    0.00 |\r\n| PR_gfoidl |    (9, -1, csvobsdxs) | 14.26 ns | 0.3254 ns | 0.2885 ns |  0.97 |    0.03 |\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>Perf.Basic</summary>\r\n\r\n#### Before\r\n\r\n```\r\n|          Method |     Mean |     Error |    StdDev |   Median |      Min |      Max |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------------- |---------:|----------:|----------:|---------:|---------:|---------:|-------:|------:|------:|----------:|\r\n| WriteBasicUtf16 | 1.335 us | 0.0058 us | 0.0049 us | 1.333 us | 1.329 us | 1.344 us | 0.0056 |     - |     - |     120 B |\r\n```\r\n\r\n#### After\r\n\r\n```\r\n|          Method |     Mean |     Error |    StdDev |   Median |      Min |      Max |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------------- |---------:|----------:|----------:|---------:|---------:|---------:|-------:|------:|------:|----------:|\r\n| WriteBasicUtf16 | 1.338 us | 0.0078 us | 0.0069 us | 1.338 us | 1.328 us | 1.349 us | 0.0054 |     - |     - |     120 B |\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>EscapingWriter</summary>\r\n\r\n#### Before\r\n\r\n```\r\n|               Method | DataLength | NegativeIndex |      Mean |    Error |   StdDev |    Median |       Min |       Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------------------- |----------- |-------------- |----------:|---------:|---------:|----------:|----------:|----------:|------:|------:|------:|----------:|\r\n| NeedsEscapingCurrent |         32 |            -1 |  89.05 us | 1.813 us | 1.862 us |  87.98 us |  87.59 us |  94.08 us |     - |     - |     - |         - |\r\n| NeedsEscapingCurrent |         32 |            12 | 209.51 us | 0.348 us | 0.272 us | 209.52 us | 209.10 us | 210.08 us |     - |     - |     - |         - |\r\n```\r\n\r\n#### After\r\n\r\n```\r\n|               Method | DataLength | NegativeIndex |      Mean |    Error |   StdDev |    Median |       Min |       Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------------------- |----------- |-------------- |----------:|---------:|---------:|----------:|----------:|----------:|------:|------:|------:|----------:|\r\n| NeedsEscapingCurrent |         32 |            -1 |  74.57 us | 1.115 us | 0.931 us |  74.07 us |  73.83 us |  77.10 us |     - |     - |     - |         - |\r\n| NeedsEscapingCurrent |         32 |            12 | 207.01 us | 1.042 us | 0.924 us | 206.58 us | 206.10 us | 208.95 us |     - |     - |     - |         - |\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>WriteJson</summary>\r\n\r\n#### Before\r\n\r\n```\r\n|                    Type |            Method |         Mean |       Error |      StdDev |       Median |          Min |          Max |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|------------------------ |------------------ |-------------:|------------:|------------:|-------------:|-------------:|-------------:|--------:|--------:|--------:|----------:|\r\n|          IndexViewModel | SerializeToString |  42,971.7 ns |   338.86 ns |   282.97 ns |  43,073.3 ns |  42,471.0 ns |  43,325.6 ns |  1.1921 |       - |       - |   25528 B |\r\n|                Location | SerializeToString |   1,767.0 ns |    24.61 ns |    21.82 ns |   1,761.1 ns |   1,748.9 ns |   1,812.8 ns |  0.0282 |       - |       - |     584 B |\r\n|          LoginViewModel | SerializeToString |     796.1 ns |     6.40 ns |     5.35 ns |     797.7 ns |     786.0 ns |     803.9 ns |  0.0159 |       - |       - |     344 B |\r\n| MyEventsListerViewModel | SerializeToString | 879,705.5 ns | 6,921.30 ns | 6,474.19 ns | 878,340.8 ns | 871,705.0 ns | 895,738.1 ns | 45.1389 | 45.1389 | 45.1389 |  324344 B |\r\n```\r\n\r\n#### After\r\n\r\n```\r\n|                    Type |            Method |         Mean |       Error |      StdDev |       Median |          Min |          Max |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|------------------------ |------------------ |-------------:|------------:|------------:|-------------:|-------------:|-------------:|--------:|--------:|--------:|----------:|\r\n|          IndexViewModel | SerializeToString |  40,948.3 ns |   574.01 ns |   479.33 ns |  40,925.0 ns |  40,326.5 ns |  42,065.6 ns |  1.1276 |       - |       - |   25608 B |\r\n|                Location | SerializeToString |   1,803.6 ns |    35.79 ns |    36.75 ns |   1,792.0 ns |   1,775.4 ns |   1,913.3 ns |  0.0287 |       - |       - |     584 B |\r\n|          LoginViewModel | SerializeToString |     769.2 ns |     5.26 ns |     4.39 ns |     768.4 ns |     763.1 ns |     776.1 ns |  0.0156 |       - |       - |     344 B |\r\n| MyEventsListerViewModel | SerializeToString | 874,725.6 ns | 6,730.17 ns | 5,620.00 ns | 874,758.3 ns | 863,732.0 ns | 884,561.2 ns | 45.1389 | 45.1389 | 45.1389 |  324704 B |\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>SerializingNuget</summary>\r\n\r\n#### Before\r\n\r\n```\r\n|            Method |    Mean |    Error |   StdDev |  Median |     Min |     Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------ |--------:|---------:|---------:|--------:|--------:|--------:|------:|------:|------:|----------:|\r\n| SerializeToString | 1.081 s | 0.0126 s | 0.0112 s | 1.081 s | 1.063 s | 1.103 s |     - |     - |     - |  787.3 MB |\r\n```\r\n\r\n#### After\r\n\r\n```\r\n|            Method |     Mean |   Error |  StdDev |   Median |      Min |      Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------ |---------:|--------:|--------:|---------:|---------:|---------:|------:|------:|------:|----------:|\r\n| SerializeToString | 972.9 ms | 5.86 ms | 4.89 ms | 971.6 ms | 966.5 ms | 983.7 ms |     - |     - |     - |  787.3 MB |\r\n```\r\n\r\n</details>","Url":"https://github.com/dotnet/corefx/pull/42073","RelatedDescription":"Open PR \"Optimize FindFirstCharToEncode for JavaScriptEncoder.Default using Ssse3 intrinsics\" (#42073)"},{"Id":"511620940","IsPullRequest":true,"CreatedAt":"2019-10-23T23:20:36","Actor":"VSadov","Number":"42072","RawContent":null,"Title":"Moving StopWatch to `src\\Common\\src\\Corelib`","State":"open","Body":"This is the first step of the following plan to move StopWatch to corlib.\r\n\r\n- [x] PR in corefx to move Stopwatch to src\\Common\\src\\Corelib.\r\n- [ ] Wait for mirror bot to open PR to bring changes to coreclr.\r\n- [ ] Update Corelib to include Stopwatch.\r\n- [ ] Wait for bot to open PR in corefx bringing updated build of corelib with Stopwatch\r\n- [ ] Add a commit to that PR which removes Stopwatch.*.cs from System.Runtime.Extensions build.\r\n\r\n\r\nSee motivation and discussion in: https://github.com/dotnet/coreclr/pull/27175","Url":"https://github.com/dotnet/corefx/pull/42072","RelatedDescription":"Open PR \"Moving StopWatch to `src\\Common\\src\\Corelib`\" (#42072)"},{"Id":"511617571","IsPullRequest":true,"CreatedAt":"2019-10-23T23:09:09","Actor":"layomia","Number":"42071","RawContent":null,"Title":"[release/3.1] Ensure serializer throws JsonException when deserializing incompatible JSON into collections","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41839 for 3.1.\r\n\r\n## Description\r\nThis PR changes the exception thrown by the serializer when an attempt to deserialize incompatible  JSON into a collection from `NullReferenceException` to `JsonException`.\r\n\r\n## Customer Impact\r\n\r\nInstead of leaking an uncaught null ref, the correct exception is thrown for this scenario.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/41839 for 3.1.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nThis PR introduces validation checks. This is unlikely to break current functionality. Relevant test cases added.","Url":"https://github.com/dotnet/corefx/pull/42071","RelatedDescription":"Open PR \"[release/3.1] Ensure serializer throws JsonException when deserializing incompatible JSON into collections\" (#42071)"},{"Id":"511616777","IsPullRequest":true,"CreatedAt":"2019-10-23T23:06:15","Actor":"Tratcher","Number":"42070","RawContent":null,"Title":"Setup HTTP/2 code for sharing","State":"open","Body":"This is the setup work to share HTTP/2 code between CoreFx and AspNetCore. See https://github.com/dotnet/corefx/issues/41787. We should be able to do the same thing for HTTP/3 later.\r\n- Moved shared code and tests to Common to isolate it.\r\n- Added copy scripts to manually sync code between repos.\r\n- Added Readme\r\n- Added code owners.\r\n\r\nI also have the code compiling in AspNetCore and am working through some test issues. I'll update https://github.com/aspnet/AspNetCore/pull/13931 when it's ready.","Url":"https://github.com/dotnet/corefx/pull/42070","RelatedDescription":"Open PR \"Setup HTTP/2 code for sharing\" (#42070)"},{"Id":"511595670","IsPullRequest":true,"CreatedAt":"2019-10-23T22:04:01","Actor":"ahsonkhan","Number":"42069","RawContent":null,"Title":"Update the S.T.E.W configurations to explicitly target a versioned TFM (nc3.0).","State":"open","Body":"The assets within the package on 3.0 were:\r\nns1.0, 2.0, 2.1\r\n\r\nWith this change (in master) we are adding a new asset:\r\nns1.0, 2.0, 2.1, **nc3.0**\r\n\r\nWithout this change, the new asset was targeting **nc5.0** which isn't what we want.\r\n\r\ncc @ericstj, @ViktorHofer, @Anipik ","Url":"https://github.com/dotnet/corefx/pull/42069","RelatedDescription":"Open PR \"Update the S.T.E.W configurations to explicitly target a versioned TFM (nc3.0).\" (#42069)"},{"Id":"511591447","IsPullRequest":true,"CreatedAt":"2019-10-23T22:00:52","Actor":"krwq","Number":"42068","RawContent":null,"Title":"[release/3.1] Make Add/Remove UnsignedAttribute work with counter signers","State":"closed","Body":"Fixes: https://github.com/dotnet/corefx/issues/41158\r\nPorts: https://github.com/dotnet/corefx/pull/41236\r\n\r\n### Description\r\n\r\nThis extends #25449 which has added support for adding unsigned attributes to signers to also work with counter-signers which is a valid scenario for i.e. people wanting to add a timestamp to their counter-signatures.\r\n\r\n### Customer Impact\r\n\r\nCustomers will be able to add unsigned attributes to counter signer which unblocks certain scenarios like attaching a timestamp to a counter signature.\r\n\r\n### Regression? \r\n\r\nNo\r\n\r\n### Risk\r\n\r\nSmall. Feature is relatively new and not a main scenario. There are multiple tests testing original change as well as the extended scenarios.\r\n\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42068","RelatedDescription":"Closed or merged PR \"[release/3.1] Make Add/Remove UnsignedAttribute work with counter signers\" (#42068)"},{"Id":"511590307","IsPullRequest":false,"CreatedAt":"2019-10-23T21:49:51","Actor":"ericjohannsen","Number":"42067","RawContent":null,"Title":"Non-support of PrincipalPermissionAttribute","State":"open","Body":"As best I can determine from my own test code (against 3.0.0) and as mentioned in #9641, PrincipalPermissionAttribute exists as a type but has no effect. MSDN also states \"This attribute has no effect in .NET Core.\"\r\n\r\nThis seems dangerous, as a user porting existing code might expect that, if the attribute compiles, that it also functions. Since the purpose of this attribute is security, the consequences of a false assumption could be significant.\r\n\r\nIs it a well-considered opinion that the attribute should exist yet be non-functional (not even a compiler warning...) or is this a decision warranting review?","Url":"https://github.com/dotnet/corefx/issues/42067","RelatedDescription":"Open issue \"Non-support of PrincipalPermissionAttribute\" (#42067)"},{"Id":"511536434","IsPullRequest":false,"CreatedAt":"2019-10-23T21:13:03","Actor":"87Alex","Number":"42062","RawContent":null,"Title":"The cultureInfo.EnglishName property returns different values for unknown cultures","State":"closed","Body":"In our code, we use the cultureInfo.EnglishName property to filter incorrect names as follows:\r\n\r\n```c#\r\nprivate string GetAspect(string cultureName) {\r\n            CultureInfo cultureInfo;\r\n            try {\r\n                cultureInfo = CultureInfo.GetCultureInfo(cultureName);\r\n            }\r\n            catch {\r\n                return \"\";\r\n            }\r\n            if(cultureInfo.EnglishName == string.Format(\"Unknown Locale ({0})\", cultureName)) {\r\n                return \"\";\r\n            }\r\n            return cultureInfo.Name;\r\n        }\r\n```\r\n\r\nFor the \"xx-XX\" cultureName value, the cultureInfo.EnglishName property returns \"Unknown Locale (xx-XX)\"\r\nOn a Linux machine, the cultureInfo.EnglishName returns \"xx (XX)\" that breaks our filter.","Url":"https://github.com/dotnet/corefx/issues/42062","RelatedDescription":"Closed issue \"The cultureInfo.EnglishName property returns different values for unknown cultures\" (#42062)"},{"Id":"511511507","IsPullRequest":true,"CreatedAt":"2019-10-23T21:01:54","Actor":"steveharter","Number":"42057","RawContent":null,"Title":"[release/3.1] Port cache polymorphic properties (#41753)","State":"closed","Body":"_note: this PR was created and made stand-alone since the [previous PR that included this fix](https://github.com/dotnet/corefx/pull/42008) takes a dependency on [collection PR](https://github.com/dotnet/corefx/pull/42009) that will likely not be accepted._ \r\n\r\nPorts https://github.com/dotnet/corefx/pull/41753\r\n\r\n## Issue\r\nWith the PR there is significant performance improvement when using polymorphic serialization. The issue was created and fixed by a community member by adding a dictionary-based cache and reports real-world gains of 68x.\r\n\r\n## Description\r\nWhen a property of type of System.Object is serialized, the serializer enters a polymorphic mode where it obtains the actual run-time type to serialize. Getting the appropriate infrastructure (including looking up a converter for that type and generating IL for the setter) is expensive and was not cached. This PR caches that information. \r\n\r\n## Customer Impact\r\n\r\n- Slow behavior when using polymorphic serialization.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nLow. \r\nThe performance issue is very specific to polymorphic serialization which was already tested. An additional test was added to verify the cache is properly keying.","Url":"https://github.com/dotnet/corefx/pull/42057","RelatedDescription":"Closed or merged PR \"[release/3.1] Port cache polymorphic properties (#41753)\" (#42057)"},{"Id":"511555212","IsPullRequest":true,"CreatedAt":"2019-10-23T20:31:43","Actor":"layomia","Number":"42066","RawContent":null,"Title":"Ensure serializer throws JsonException when deserializing incompatible JSON into collections","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41839 for 5.0. https://github.com/dotnet/corefx/pull/42071 fixes it for 3.1.","Url":"https://github.com/dotnet/corefx/pull/42066","RelatedDescription":"Open PR \"Ensure serializer throws JsonException when deserializing incompatible JSON into collections\" (#42066)"},{"Id":"511486919","IsPullRequest":true,"CreatedAt":"2019-10-23T20:29:43","Actor":"steveharter","Number":"42050","RawContent":null,"Title":"[release/3.1] Support dictionaries that don't implement non-generic IDictionary","State":"closed","Body":"_note: this PR was created and made stand-alone since the [previous PR that included this fix](https://github.com/dotnet/corefx/pull/42008) takes a dependency on [collection PR](https://github.com/dotnet/corefx/pull/42009) that will likely not be accepted._ \r\n\r\nPorts https://github.com/dotnet/corefx/pull/41903\r\n\r\n## Issue:\r\nSupport dictionaries that implement `IDictionary<TKey, TValue>` but do not implement the non-generic `IDictionary`\r\n\r\n## Description\r\nAn assumption was made during serialization that a call to a dictionary's `GetEnumerator()` (either through the `IEnumerable` or `IDictionary` interfaces) returns an `IDictionaryEnumerable` (which is required for types that implement `IDictionary`). However, there are certain \"newer\" generic collection types outside of the BCL that don't implement `IDictionary` or return `IDictionaryEnumerable` from their `IEnumerable.GetEnumerator()` method (note that `IDictionary<TKey, TValue>` does not implement `IDictionary`). This caused a `InvalidCastException` at runtime. The fix is to assume `IEnumerable<KeyValuePair<TKey, TValue>>` instead of `IDictionaryEnumerable` for generic dictionaries.\r\n\r\n## Customer Impact\r\n\r\nWithout this PR, there is no support for generic dictionaries that implement `IDictionary<TKey, TValue>` but don't support the older non-generic `IDictionary`. This is a community-reported issue and is blocking adoption.\r\n\r\n## Regression?\r\n\r\nNo. The `InvalidCastException` is no longer encountered.\r\n\r\n## Risk\r\n\r\nLow. Dictionaries have good coverage already and additional tests were added. A community member [verified ](https://github.com/dotnet/corefx/issues/41329#issuecomment-545501088) a fix based on the sames changes to master.\r\n","Url":"https://github.com/dotnet/corefx/pull/42050","RelatedDescription":"Closed or merged PR \"[release/3.1] Support dictionaries that don't implement non-generic IDictionary\" (#42050)"},{"Id":"511541816","IsPullRequest":true,"CreatedAt":"2019-10-23T20:03:15","Actor":"ahsonkhan","Number":"42064","RawContent":null,"Title":"Add tests for custom JavaScriptEncoder to cover the virtual code paths in TextEncoder","State":"open","Body":"Adding some of the new tests from https://github.com/dotnet/corefx/pull/42030 into master and fix some nits.\r\n\r\ncc @GrabYourPitchforks, @tarekgh ","Url":"https://github.com/dotnet/corefx/pull/42064","RelatedDescription":"Open PR \"Add tests for custom JavaScriptEncoder to cover the virtual code paths in TextEncoder\" (#42064)"},{"Id":"511535423","IsPullRequest":false,"CreatedAt":"2019-10-23T19:49:10","Actor":"ahsonkhan","Number":"42060","RawContent":null,"Title":"System.Net.Security.Tests.ClientAsyncAuthenticateTest.ClientAsyncAuthenticate_MismatchProtocols_Fails fails with ObjectDisposedException","State":"open","Body":"From https://github.com/dotnet/corefx/pull/42027\r\n\r\nTest failure on `Windows Build x64_Debug`, specifically netcoreapp-Windows_NT-Debug-x64-(Windows.Nano.1809.Amd64.Open)\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=398356\r\n\r\nSystem.Net.Security.Tests.ClientAsyncAuthenticateTest.ClientAsyncAuthenticate_MismatchProtocols_Fails(serverProtocol: Tls, clientProtocol: Tls11, expectedException: typeof(System.IO.IOException))\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/3dbb8c60-c089-470e-a02a-0c5f75146ef9/workitems/System.Net.Security.Tests/console\r\n```text\r\n System.Net.Security.Tests.ClientAsyncAuthenticateTest.ClientAsyncAuthenticate_MismatchProtocols_Fails(serverProtocol: Tls, clientProtocol: Tls11, expectedException: typeof(System.IO.IOException)) [FAIL]\r\n      Assert.IsAssignableFrom() Failure\r\n      Expected: typeof(System.IO.IOException)\r\n      Actual:   typeof(System.ObjectDisposedException)\r\n      Stack Trace:\r\n        /_/src/System.Net.Security/tests/FunctionalTests/ClientAsyncAuthenticateTest.cs(79,0): at System.Net.Security.Tests.ClientAsyncAuthenticateTest.ClientAsyncAuthenticate_MismatchProtocols_Fails(SslProtocols serverProtocol, SslProtocols clientProtocol, Type expectedException)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n  Finished:    System.Net.Security.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Net.Security.Tests  Total: 4397, Errors: 0, Failed: 1, Skipped: 20, Time: 26.038s\r\n----- end Wed 10/23/2019  9:03:05.68 ----- exit code 1 ----------------------------------------------------------\r\n\r\ncc @davidsh, @wfurt, @scalablecory, @eiriktsarpalis","Url":"https://github.com/dotnet/corefx/issues/42060","RelatedDescription":"Open issue \"System.Net.Security.Tests.ClientAsyncAuthenticateTest.ClientAsyncAuthenticate_MismatchProtocols_Fails fails with ObjectDisposedException\" (#42060)"},{"Id":"511517622","IsPullRequest":true,"CreatedAt":"2019-10-23T19:11:22","Actor":"Dotnet-GitSync-Bot","Number":"42059","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT @marek-safar","Url":"https://github.com/dotnet/corefx/pull/42059","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr,corert\" (#42059)"},{"Id":"511511961","IsPullRequest":false,"CreatedAt":"2019-10-23T18:59:10","Actor":"adamsitnik","Number":"42058","RawContent":null,"Title":"`Directory.GetCurrentDirectory` 7 times slower on Linux","State":"open","Body":"`Directory.GetCurrentDirectory` 7 times slower on Linux\r\n\r\n| Slower                                              | diff/base | Windows Median (ns) | Linux Median (ns) |\r\n| ----------------------------------------------------| ---------:| -------------------:| -----------------:|\r\n| System.IO.Tests.Perf_Directory.GetCurrentDirectory  |      7.11 |               93.43 |            664.02 |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/bbc30fce34506dc613b70b8dc9040aea3ad56426/src/benchmarks/micro/corefx/System.Runtime.Extensions/Perf.Path.cs#L52) simple benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.IO.Tests.Perf_Directory.GetCurrentDirectory\r\n```\r\n\r\n2. Build CoreCLR locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue","Url":"https://github.com/dotnet/corefx/issues/42058","RelatedDescription":"Open issue \"`Directory.GetCurrentDirectory` 7 times slower on Linux\" (#42058)"},{"Id":"511509414","IsPullRequest":false,"CreatedAt":"2019-10-23T18:53:38","Actor":"terrajobst","Number":"42056","RawContent":null,"Title":"We should be able serialize and serialize from DOM","State":"open","Body":"Consider this coding snippet of JSON.NET [outlined](https://medium.com/cloudnimble/switching-to-system-text-json-in-net-core-3-0-not-so-fast-4c577a21298b) by @robertmclaws:\r\n\r\n```C#\r\npublic async Task<bool> SomeMethod([FromBody] JObject data)\r\n{\r\n    var model = data.ToObject<SomeObject>();\r\n}\r\n```\r\n\r\nToday, you can't do this with `System.Text.Json`. I propose we add APIs so that you can write this:\r\n\r\n```C#\r\npublic async Task<bool> SomeMethod([FromBody] JsonElement data)\r\n{\r\n    var model = data.Deserialize<SomeObject>();\r\n}\r\n```\r\n\r\n### API Proosal\r\n\r\n```C#\r\nnamespace System.Text.Json\r\n{\r\nnamespace System.Text.Json\r\n{\r\n    public static partial class JsonSerializer\r\n    {\r\n        public static TValue Deserialize<TValue>(this JsonDocument document);\r\n        public static TValue Deserialize<TValue>(this JsonElement element);\r\n\r\n        public static JsonDocument SerializeToDocment<TValue>(TValue value);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/42056","RelatedDescription":"Open issue \"We should be able serialize and serialize from DOM\" (#42056)"},{"Id":"511508730","IsPullRequest":false,"CreatedAt":"2019-10-23T18:52:18","Actor":"adamsitnik","Number":"42055","RawContent":null,"Title":"DateTime.Parse for \"ja\" culture 9x times slower on Linux","State":"open","Body":"`DateTime.Parse` for \"ja\" culture (ONLY) is 10x times slower on Linux compared to Windows\r\n\r\n| Slower                                                                          | diff/base | Windows Median (ns) | Linux Median (ns) |\r\n| ------------------------------------------------------------------------------- | ---------:| -------------------:| -----------------:|\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.Parse(culturestring: ja)    |      8.87 |              454.24 |           4029.00 |\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.ToString(culturestring: da) |      1.08 |              236.39 |            254.59 |\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.ToString(culturestring: )   |      1.05 |              245.69 |            258.02 |\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.ToString(culturestring: ja) |      1.05 |              245.61 |            257.00 |\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.ToString(culturestring: fr) |      1.05 |              245.56 |            256.82 |\r\n\r\n| Faster                                                                       | Win/Lin | Windows Median (ns) | Linux Median (ns) |\r\n| ---------------------------------------------------------------------------- | -------:| -------------------:| -----------------:|\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.Parse(culturestring: da) |    1.24 |              531.21 |            428.73 |\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.Parse(culturestring: fr) |    1.05 |              450.44 |            428.87 |\r\n| System.Globalization.Tests.Perf_DateTimeCultureInfo.ToStringHebrewIsrael     |    1.04 |              509.37 |            488.81 |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/7d96fd3dea66b83a0b02222e44e02e762a990c32/src/benchmarks/micro/corefx/System.Globalization/Perf.DateTimeCultureInfo.cs#L36) simple benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.Globalization.Tests.Perf_DateTimeCultureInfo.Parse\r\n```\r\n\r\n2. Build CoreCLR locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue","Url":"https://github.com/dotnet/corefx/issues/42055","RelatedDescription":"Open issue \"DateTime.Parse for \"ja\" culture 9x times slower on Linux\" (#42055)"},{"Id":"511502100","IsPullRequest":true,"CreatedAt":"2019-10-23T18:39:34","Actor":"carlossanlop","Number":"42053","RawContent":null,"Title":"Revert commits accidentally pushed to release/3.1 directly","State":"closed","Body":"cc: @danmosemsft @safern","Url":"https://github.com/dotnet/corefx/pull/42053","RelatedDescription":"Closed or merged PR \"Revert commits accidentally pushed to release/3.1 directly\" (#42053)"},{"Id":"511501087","IsPullRequest":false,"CreatedAt":"2019-10-23T18:36:17","Actor":"adamsitnik","Number":"42052","RawContent":null,"Title":"`Path.GetRandomFileName()` is 7 times slower on Linux compared to Windows","State":"open","Body":"`Path.GetRandomFileName()` is 7 times slower on Linux compared to Windows.\r\n\r\n| Slower                                       | diff/base | Windows Median (ns) | Linux Median (ns) | Modality  |\r\n| -------------------------------------------- | ---------:| -------------------:| -----------------:| ---------- |\r\n| System.IO.Tests.Perf_Path.GetRandomFileName  |      7.48 |              100.47 |            751.86 |           |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/bbc30fce34506dc613b70b8dc9040aea3ad56426/src/benchmarks/micro/corefx/System.Runtime.Extensions/Perf.Path.cs#L52) simple benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.IO.Tests.Perf_Path.GetRandomFileName\r\n```\r\n\r\n2. Build CoreCLR locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue","Url":"https://github.com/dotnet/corefx/issues/42052","RelatedDescription":"Open issue \"`Path.GetRandomFileName()` is 7 times slower on Linux compared to Windows\" (#42052)"},{"Id":"511505860","IsPullRequest":false,"CreatedAt":"2019-10-23T18:27:40","Actor":"adamsitnik","Number":"42054","RawContent":null,"Title":"MemoryMappedFile.CreateNew is 12-4 times slower on Linux compared to Windows","State":"open","Body":"`MemoryMappedFile.CreateNew` is 12-4 times slower on Linux compared to Windows. `MemoryMappedFile.CreateFromFile` is 3x faster so there is a chance that we are doing something wrong.\r\n\r\n\r\n| Slower                                                                                | diff/base | Windows Median (ns) | Linux Median (ns) | Modality|\r\n| ------------------------------------------------------------------------------------- | ---------:| -------------------:| -----------------:| -------- |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateNew(capacity: 10000)    |     12.77 |             2321.27 |          29641.41 |         |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateNew(capacity: 100000)   |     12.12 |             2462.10 |          29849.96 |         |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateNew(capacity: 1000000)  |      8.53 |             3967.32 |          33824.88 | bimodal |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateNew(capacity: 10000000) |      4.83 |             6632.03 |          32033.40 | bimodal |\r\n\r\n| Faster                                                                                     | Win/Lin | Windows Median (ns) | Linux Median (ns) | Modality|\r\n| ------------------------------------------------------------------------------------------ | -------:| -------------------:| -----------------:| -------- |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateFromFile(capacity: 10000000) |    3.68 |           150431.05 |          40823.03 |         |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateFromFile(capacity: 1000000)  |    2.93 |           119037.20 |          40617.88 |         |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateFromFile(capacity: 10000)    |    2.75 |           112842.91 |          41088.96 |         |\r\n| System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateFromFile(capacity: 100000)   |    2.67 |           110914.50 |          41580.16 | several?|\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/0c626c0de72e9e018bb02d0f92b97117098f1fee/src/benchmarks/micro/corefx/System.IO.MemoryMappedFiles/Perf.MemoryMappedFile.cs#L25) simple benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.IO.MemoryMappedFiles.Tests.Perf_MemoryMappedFile.CreateNew\r\n```\r\n\r\n2. Build CoreFX locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42054","RelatedDescription":"Open issue \"MemoryMappedFile.CreateNew is 12-4 times slower on Linux compared to Windows\" (#42054)"},{"Id":"511476212","IsPullRequest":false,"CreatedAt":"2019-10-23T17:53:38","Actor":"adamsitnik","Number":"42049","RawContent":null,"Title":"`HandshakeAsync` benchmark is 70x slower on Linux compared to Windows","State":"closed","Body":"`HandshakeAsync` benchmark is much slower on Linux compared to Windows\r\n\r\n| Slower                                                  | diff/base | Windows Median (ns) | Linux Median (ns) | Modality  |\r\n| --------------------------------------------------------| ---------:| -------------------:| -----------------:| ---------- |\r\n| System.Net.Security.Tests.SslStreamTests.HandshakeAsync |     67.42 |           802607.06 |       54112652.00 |           |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/5c164470d7c340db07391f48e9c03dac45527701/src/benchmarks/micro/corefx/System.Net.Security/SslStreamTests.cs#L55-L68) benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.Net.Security.Tests.SslStreamTests.HandshakeAsync\r\n```\r\n\r\n2. Build CoreFX locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue\r\n\r\nThis issue is most probably not easy to solve.\r\n\r\n/cc @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/42049","RelatedDescription":"Closed issue \"`HandshakeAsync` benchmark is 70x slower on Linux compared to Windows\" (#42049)"},{"Id":"511473757","IsPullRequest":false,"CreatedAt":"2019-10-23T17:39:58","Actor":"adamsitnik","Number":"42048","RawContent":null,"Title":"Environment.GetLogicalDrives is an order of magnitude slower on Linux compared to Windows","State":"open","Body":"`Environment.GetLogicalDrives` is an order of magnitude slower on Linux compared to Windows\r\n\r\n| Slower                                         | diff/base | Windows Median (ns) | Linux Median (ns) | Modality  |\r\n| -----------------------------------------------| ---------:| -------------------:| -----------------:| ---------- |\r\n| System.Tests.Perf_Environment.GetLogicalDrives |    183.88 |              326.14 |          59971.81 |           |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/3941f11e000edd7a404599fc2e401129c25bc4ad/src/benchmarks/micro/corefx/System.Runtime.Extensions/Perf.Environment.cs#L38) simple benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.Tests.Perf_Environment.GetLogicalDrives\r\n```\r\n\r\n2. Build CoreFX locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue","Url":"https://github.com/dotnet/corefx/issues/42048","RelatedDescription":"Open issue \"Environment.GetLogicalDrives is an order of magnitude slower on Linux compared to Windows\" (#42048)"},{"Id":"511471537","IsPullRequest":false,"CreatedAt":"2019-10-23T17:35:12","Actor":"adamsitnik","Number":"42047","RawContent":null,"Title":"Image.FromStream is an order of magnitude slower on Linux (compared to Windows)","State":"open","Body":"`Image.FromStream(validateImageData: false)` is an order of magnitude slower on Linux compared to Windows\r\n\r\n| Slower                                                                           | diff/base | Windows Median (ns) | Linux Median (ns) | Modality|\r\n| -------------------------------------------------------------------------------- | ---------:| -------------------:| -----------------:| --------:|\r\n| System.Drawing.Tests.Perf_Image_Load.Image_FromStream_NoValidation(format: Jpeg) |    634.24 |             7338.32 |        4654224.94 |         |\r\n| System.Drawing.Tests.Perf_Image_Load.Image_FromStream_NoValidation(format: Png)  |    388.58 |            30367.22 |       11800065.20 |         |\r\n| System.Drawing.Tests.Perf_Image_Load.Image_FromStream_NoValidation(format: Bmp)  |    268.38 |             5093.34 |        1366925.82 |         |\r\n| System.Drawing.Tests.Perf_Image_Load.Image_FromStream_NoValidation(format: Gif)  |     53.76 |            70796.36 |        3806036.51 |         |\r\n\r\nThe contributor who wants to work on this issue should:\r\n\r\n1. Run [this](https://github.com/dotnet/performance/blob/d13b517422b40c2c4e0c78934a5e1c4b54420372/src/benchmarks/micro/corefx/System.Drawing/Perf_Image_Load.cs#L33-L38) simple benchmark from dotnet/performance repository and confirm the problem\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter System.Drawing.Tests.Perf_Image_Load.Image_FromStream_NoValidation\r\n```\r\n\r\n2. Build CoreFX locally: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#Build\r\n3. Create a small repro app: https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#repro\r\n4. Use PerfCollect to identify issue https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect\r\n5. Solve the issue","Url":"https://github.com/dotnet/corefx/issues/42047","RelatedDescription":"Open issue \"Image.FromStream is an order of magnitude slower on Linux (compared to Windows)\" (#42047)"},{"Id":"511535767","IsPullRequest":false,"CreatedAt":"2019-10-23T12:33:59","Actor":"LeonSebastianCoimbra","Number":"42061","RawContent":null,"Title":"Error (sudden death) for System.Drawing.Image.FromStream in docker for almost empty images","State":"open","Body":".Net Core version affected: 2.2\r\n\r\n\r\nI can reproduce the problem in my development environment; please see the following repository to have a working example:\r\n\r\nhttps://github.com/LeonSebastianCoimbra/ImageFromStreamError\r\n\r\nThe tools used are:\r\n\r\n- Windows 10\r\n- Docker Desktop CE (latest stable version: 2.1.0.4)\r\n- Visual Studio 2019 preview (but the same thing happens also with VS2017)\r\n\r\nFor the details of the execution, please see the Dockerfile on the project; as summary, i can say that it is a Linux Alpine (latest official microsoft/dotnet2.2-aspnetcore-runtime from dockerhub) plus the latest available version of libgdiplus.\r\n\r\nThe problem arise when we try to open a particular image with System.Drawing.Image.FromStream: if the image is nearly empty (see the example posted) a native exception is executed and the program end abruptly, without even giving the chance to manage the error. The same image opened with System.Drawing.Image.FromFile works fine (except that it is locked by the GDI+ engine).\r\n\r\n\r\nTo reproduce the problem:\r\n- download a copy or clone the project in the repository https://github.com/LeonSebastianCoimbra/ImageFromStreamError\r\n- open the solution in Visual Studio 2019\r\n- place some breakpoints at you will to follow step by step the flow of the program (it is all in the \"Program.cs\" file)\r\n- execute (in debug) the docker-compose\r\n\r\nYou'll see that the fist two attempts to open the file with \"FromFile\" will work, while the last one will fails.","Url":"https://github.com/dotnet/corefx/issues/42061","RelatedDescription":"Open issue \"Error (sudden death) for System.Drawing.Image.FromStream in docker for almost empty images\" (#42061)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"511671315","IsPullRequest":true,"CreatedAt":"2019-10-24T05:14:13","Actor":"dibarbet","Number":"39488","RawContent":null,"Title":"Merge 16.5-preview1 into master","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39488","RelatedDescription":"Closed or merged PR \"Merge 16.5-preview1 into master\" (#39488)"},{"Id":"511632006","IsPullRequest":true,"CreatedAt":"2019-10-24T04:19:25","Actor":"dotnet-bot","Number":"39481","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39481","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39481)"},{"Id":"511632037","IsPullRequest":true,"CreatedAt":"2019-10-24T04:18:49","Actor":"dotnet-bot","Number":"39482","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39482","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39482)"},{"Id":"511632073","IsPullRequest":true,"CreatedAt":"2019-10-24T04:18:15","Actor":"dotnet-bot","Number":"39483","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39483","RelatedDescription":"Closed or merged PR \"Merge master to features/static-lambdas\" (#39483)"},{"Id":"511645754","IsPullRequest":true,"CreatedAt":"2019-10-24T04:12:43","Actor":"dotnet-bot","Number":"39484","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39484","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39484)"},{"Id":"511597227","IsPullRequest":true,"CreatedAt":"2019-10-24T04:10:59","Actor":"dibarbet","Number":"39474","RawContent":null,"Title":"Update configs for snap.","State":"closed","Body":"WIP until the snap","Url":"https://github.com/dotnet/roslyn/pull/39474","RelatedDescription":"Closed or merged PR \"Update configs for snap.\" (#39474)"},{"Id":"511659667","IsPullRequest":true,"CreatedAt":"2019-10-24T04:09:18","Actor":"dibarbet","Number":"39487","RawContent":null,"Title":"Backport editor config change to 16.4","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39487","RelatedDescription":"Closed or merged PR \"Backport editor config change to 16.4\" (#39487)"},{"Id":"511646458","IsPullRequest":true,"CreatedAt":"2019-10-24T02:25:44","Actor":"dibarbet","Number":"39485","RawContent":null,"Title":"Merge 16.5 Preview 1 back into master.","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39485","RelatedDescription":"Closed or merged PR \"Merge 16.5 Preview 1 back into master.\" (#39485)"},{"Id":"511585120","IsPullRequest":true,"CreatedAt":"2019-10-24T01:55:06","Actor":"mavasani","Number":"39473","RawContent":null,"Title":"Ensure that we show the gold bar for .editorconfig as solution item o…","State":"closed","Body":"…nly once per solution\r\n\r\nFixes #39472","Url":"https://github.com/dotnet/roslyn/pull/39473","RelatedDescription":"Closed or merged PR \"Ensure that we show the gold bar for .editorconfig as solution item o…\" (#39473)"},{"Id":"511556835","IsPullRequest":false,"CreatedAt":"2019-10-24T01:55:05","Actor":"vsfeedback","Number":"39472","RawContent":null,"Title":"Too many info bars for \"A new .editorconfig file was detected...\"","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/787241/too-many-info-bars-for-a-new-editorconfig-file-was.html)._\n\n---\nI have a solution containing over 10 projects. I added an .editorconfig file and a whole bunch of info bars popped up--it seems like 1 per project. \n\nSteps to reproduce:\nCreate a solution with multiple projects inside a folder in VS (see attached)\nRight click on folder, &quot;Add-&gt;New EditorConfig (IntelliCode) which generates the .editorconfig\nAfter the file is generated, a whole bunch of info bars pop up asking to make .editoroconfig a solution item. \n\nExpected: I should only see 1 info bar.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/22/2019, 02:54 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39472","RelatedDescription":"Closed issue \"Too many info bars for \"A new .editorconfig file was detected...\"\" (#39472)"},{"Id":"511653173","IsPullRequest":true,"CreatedAt":"2019-10-24T01:34:59","Actor":"ryzngard","Number":"39486","RawContent":null,"Title":"Make sure to consume MaxLanguageVersion in legacy style projects as well","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39486","RelatedDescription":"Open PR \"Make sure to consume MaxLanguageVersion in legacy style projects as well\" (#39486)"},{"Id":"511631513","IsPullRequest":true,"CreatedAt":"2019-10-24T01:22:50","Actor":"dotnet-bot","Number":"39480","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39480","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.5-preview1\" (#39480)"},{"Id":"511486532","IsPullRequest":true,"CreatedAt":"2019-10-23T23:54:04","Actor":"jasonmalinowski","Number":"39463","RawContent":null,"Title":"Core changes to prep for inferred indentation","State":"closed","Body":"This pulls out of #39159 all the core workspace changes that don't actually involve the feature itself. This is to keep those changes in master rather than relegating them to our -vs-deps branches.","Url":"https://github.com/dotnet/roslyn/pull/39463","RelatedDescription":"Closed or merged PR \"Core changes to prep for inferred indentation\" (#39463)"},{"Id":"511627188","IsPullRequest":true,"CreatedAt":"2019-10-23T23:44:07","Actor":"ivanbasov","Number":"39479","RawContent":null,"Title":"Completion: provide all candidate symbols for overloads in lambda expressions","State":"open","Body":"Fixes: https://github.com/dotnet/roslyn/issues/39468","Url":"https://github.com/dotnet/roslyn/pull/39479","RelatedDescription":"Open PR \"Completion: provide all candidate symbols for overloads in lambda expressions\" (#39479)"},{"Id":"511510968","IsPullRequest":true,"CreatedAt":"2019-10-23T23:41:20","Actor":"ivanbasov","Number":"39467","RawContent":null,"Title":"WIP: Test for semantic info with multiple overloads","State":"closed","Body":"simulates a VB part of an issue described at https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1003663","Url":"https://github.com/dotnet/roslyn/pull/39467","RelatedDescription":"Closed or merged PR \"WIP: Test for semantic info with multiple overloads\" (#39467)"},{"Id":"511619324","IsPullRequest":true,"CreatedAt":"2019-10-23T23:15:14","Actor":"tiesmaster","Number":"39477","RawContent":null,"Title":"Handle lambda's inside tuple expressions: don't format on separate lines","State":"open","Body":"This fixes #39433\r\n\r\n/cc @sharwell ","Url":"https://github.com/dotnet/roslyn/pull/39477","RelatedDescription":"Open PR \"Handle lambda's inside tuple expressions: don't format on separate lines\" (#39477)"},{"Id":"511615792","IsPullRequest":false,"CreatedAt":"2019-10-23T23:03:15","Actor":"mavasani","Number":"39476","RawContent":null,"Title":"Add a test to ensure that WorkspaceChangeKind.SolutionAdded is raised every time we open a solution","State":"open","Body":"See https://github.com/dotnet/roslyn/pull/39473#discussion_r338313491. Tagging @jasonmalinowski ","Url":"https://github.com/dotnet/roslyn/issues/39476","RelatedDescription":"Open issue \"Add a test to ensure that WorkspaceChangeKind.SolutionAdded is raised every time we open a solution\" (#39476)"},{"Id":"511613208","IsPullRequest":false,"CreatedAt":"2019-10-23T22:54:55","Actor":"daytonellwanger","Number":"39475","RawContent":null,"Title":"Live Share - Support Empty -> Nonempty Workspace","State":"open","Body":"Live Share recently added a feature for empty workspace sharing. After sharing an empty workspace, the host may then open a solution/folder. Today, Roslyn will not update its remote workspace to reflect the added solution/folder, which results in the absence of many language feature, e.g. FAR and go to def. Roslyn should subscribe to a \"workspace roots changed event\" and update the remote workspace appropriately. \r\n","Url":"https://github.com/dotnet/roslyn/issues/39475","RelatedDescription":"Open issue \"Live Share - Support Empty -> Nonempty Workspace\" (#39475)"},{"Id":"511249236","IsPullRequest":false,"CreatedAt":"2019-10-23T20:38:12","Actor":"mwpowellhtx","Number":"39459","RawContent":null,"Title":"Error during Roslyn based builds [CS8021]: No value for RuntimeMetadataVersion found. No assembly containing System.Object was found nor was a value for RuntimeMetadataVersion specified through options.","State":"closed","Body":"All these snafus we have experienced appear to be on the heels of installing VS2019 side-by-side with VS2017. The same Roslyn compilation pipeline worked just fine for us prior to that.\r\n\r\nWe are not doing anything that exotic to resolve references. We do that using the conventional means via `PackageReference` in the appropriate version(s) for our needs. At this time I think that is `15.9.20`.\r\n\r\nIn our project specs:\r\n\r\n```Xml\r\n<PropertyGroup>\r\n  <MicrosoftBuildVersion>[15.9.20,16)</MicrosoftBuildVersion>\r\n  <MicrosoftCodeAnalysisCSharpVersion>[2.10,3)</MicrosoftCodeAnalysisCSharpVersion>\r\n</PropertyGroup>\r\n\r\n<ItemGroup>\r\n  <PackageReference Include=\"Microsoft.Build\" Version=\"$(MicrosoftBuildVersion)\" />\r\n  <PackageReference Include=\"Microsoft.Build.Framework\" Version=\"$(MicrosoftBuildVersion)\" />\r\n  <PackageReference Include=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" Version=\"$(MicrosoftCodeAnalysisCSharpVersion)\" />\r\n  <PackageReference Include=\"Microsoft.CodeAnalysis.Workspaces.MSBuild\" Version=\"$(MicrosoftCodeAnalysisCSharpVersion)\" />\r\n</ItemGroup>\r\n```\r\n\r\nWe are in the midst of refactoring some of our compilation services to a separate solution/project for easier tracking, to begin with. I could post a project for that when we are ready. In the meantime, there is nothing that unusual about doing the above. Apart from apparently the `CS8021` error.\r\n\r\nWe will try the `Microsoft.Build.Locator` route to see what we can do to help that issue.","Url":"https://github.com/dotnet/roslyn/issues/39459","RelatedDescription":"Closed issue \"Error during Roslyn based builds [CS8021]: No value for RuntimeMetadataVersion found. No assembly containing System.Object was found nor was a value for RuntimeMetadataVersion specified through options.\" (#39459)"},{"Id":"511538307","IsPullRequest":false,"CreatedAt":"2019-10-23T19:55:30","Actor":"mwpowellhtx","Number":"39471","RawContent":null,"Title":"Roslyn does not appear to emit any diagnostics","State":"open","Body":"In the 15.9 generation of build assemblies and so forth.\r\n\r\nWe think *Roslyn* should be emitting some diagnostics, but more than likely we are either not handling a `Solution` or `Project` correctly, or perhaps have not fed *Roslyn* with the correct options, properties, etc, along these lines.\r\n\r\nWe cooked up some unit tests here [for demonstration and verification purposes](/mwpowellhtx/Kingdom.Roslyn.Compilation.Services) if someone could take a look.\r\n\r\nUnit tests are appropriately named, one should be producing obvious errors. The other one may or may not, but in its current form we cannot know for certain.","Url":"https://github.com/dotnet/roslyn/issues/39471","RelatedDescription":"Open issue \"Roslyn does not appear to emit any diagnostics\" (#39471)"},{"Id":"511536193","IsPullRequest":false,"CreatedAt":"2019-10-23T19:50:53","Actor":"vsfeedback","Number":"39469","RawContent":null,"Title":"C# auto completion misses global scope resolution prefix","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/782559/c-auto-completion-misses-global-scope-resolution-p.html)._\n\n---\nPressing tab after an ``x = new`` statement, the C# auto completion does not prepend the `global::` keyword even though `x` is declared with it.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/17/2019, 10:42 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/21/2019, 03:52 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39469","RelatedDescription":"Open issue \"C# auto completion misses global scope resolution prefix\" (#39469)"},{"Id":"511511957","IsPullRequest":false,"CreatedAt":"2019-10-23T18:59:10","Actor":"vsfeedback","Number":"39468","RawContent":null,"Title":"Intellisense not suggest properties of type in Lambda Expression","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/782554/intellisense-not-suggest-properties-of-type-in-lam.html)._\n\n---\nThe scenario of the problem is as follows:\nI have 3 projects in one solution:\nProject 1. EFDAL (C #)\nProject 2. EFDAL. Test (C #)\nProject 3. EFDALVB (VB)\n\nIn the EFDAL project (C #) I have the classes: articulo, marca.\n\nFrom projects 2 and 3 reference to the EFDAL project.\n\nIn project 3 (VB), intellisense does not suggest the properties of the type of entity that is queried in the Lambda expression of the . Include method.\nInclude &lt;T, TProperty&gt; (IQueryable &lt;T&gt;, Expression &lt;Func &lt;T, TProperty &gt;&gt;)\n\nAccording to the tests I found that the problem occurs in projects of type Visual Basic. **In C#** if the intellisense works correctly.\n\nExample C #\n`var currentArticulo = (from m in DC.articulos.Include(t =&gt; t.marca) where m.codigo == &quot;6463&quot; select m). First();`\n\nThe property t.marca is suggested correctly\n\nExample VB\n`Dim currentArt = (From m In DC.articulos.Include(Function(t) t.marca) Where m.codigo = &quot;6463&quot; Select m)`\n\nThe property t.marca is **NOT** suggested\n\nI attached video (.gif) and SourceCode.zip with the evidence.\n\nThank you\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/17/2019, 10:59 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/21/2019, 10:17 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39468","RelatedDescription":"Open issue \"Intellisense not suggest properties of type in Lambda Expression\" (#39468)"},{"Id":"511505076","IsPullRequest":false,"CreatedAt":"2019-10-23T18:44:41","Actor":"jasonmalinowski","Number":"39466","RawContent":null,"Title":"CodeStyleOption .editorconfig configuration tests have broken baselines","State":"open","Body":"This was discovered as a part of #39463 and also #38675 in a different way.\r\n\r\nSome of these tests are trying to test that we can toggle a boolean in an .editorconfig from false to true and from true to false. The true -> false ones work by specifying dotnet_style_object_initializer as true, and then using the code fix to reconfigure it to false. This direction works fine.\r\n\r\nThe problem is the other direction: there are tests that start with it set to false, and are trying to turn it back to true. The tests work by setting dotnet_style_object_initializer to false, and then trying to invoke the code fix. But there is no diagnostic there to invoke this on -- if the value is false, the underlying analyzer simply flags nothing.\r\n\r\nThis was working by accident because there was a bug in our unit tests that meant that the analyzer was getting a \"true\" option regardless of what was running in the .editorconfig. Once that was fixed, the tests no longer have fixes anymore.","Url":"https://github.com/dotnet/roslyn/issues/39466","RelatedDescription":"Open issue \"CodeStyleOption .editorconfig configuration tests have broken baselines\" (#39466)"},{"Id":"511500983","IsPullRequest":true,"CreatedAt":"2019-10-23T18:36:04","Actor":"alrz","Number":"39465","RawContent":null,"Title":"Fix minor issue in IfToSwitch refactoring","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39465","RelatedDescription":"Open PR \"Fix minor issue in IfToSwitch refactoring\" (#39465)"},{"Id":"511500938","IsPullRequest":false,"CreatedAt":"2019-10-23T18:35:58","Actor":"vsfeedback","Number":"39464","RawContent":null,"Title":"Find All References on variable cannot show initialisation code and total reference count at same time","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/780519/find-all-references-on-variable-cannot-show-initia.html)._\n\n---\n[regression] [worked-in:12.0.40629.00 Update 5]\r\nThe results of a **Find All References for a variable** (local or global) in a C# Project **cannot show two bits of information at the same time** like VS2013 did:\n1) You **cannot view how many references were found** unless you turn on Group by: Definition* (Any option that starts with 'Definition' in the name). In VS2013 this information was included in the tool window's title - very convenient and would be great to bring back (why was it removed?).\n\n2) You **cannot view the variable's initialisation code** unless Group by: &quot;No Grouping&quot; is selected. When grouped by *anything* then the declaration of the variable is omitted (which can be convenient), however **it should never hide the reference where the variable was initialised** because this is a critical reference!\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/17/2019, 03:16 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/21/2019, 03:47 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39464","RelatedDescription":"Open issue \"Find All References on variable cannot show initialisation code and total reference count at same time\" (#39464)"},{"Id":"511276953","IsPullRequest":true,"CreatedAt":"2019-10-23T18:20:21","Actor":"dotnet-bot","Number":"39460","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39460","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39460)"},{"Id":"511469993","IsPullRequest":true,"CreatedAt":"2019-10-23T17:32:01","Actor":"AmadeusW","Number":"39462","RawContent":null,"Title":"Implement Editor symbol search APIs","State":"open","Body":"Implement Editor's Symbol Search APIs\r\nThis will allow Find All References, etc to combine results from Roslyn and other providers.\r\n\r\nOutstanding work:\r\n- [ ] Correctly relay reference\\definition information to the Editor\r\n- [ ] Use a preview flag to control whether Roslyn uses its own command handler or participates in the Editor API\r\n- [ ] Onboard Peek\r\n\r\nNote that this prototype is based on #39159 where Jason made necessary refactoring to allow Roslyn to consume 16.4 Editor bits.","Url":"https://github.com/dotnet/roslyn/pull/39462","RelatedDescription":"Open PR \"Implement Editor symbol search APIs\" (#39462)"},{"Id":"511457197","IsPullRequest":false,"CreatedAt":"2019-10-23T17:05:48","Actor":"vsfeedback","Number":"39461","RawContent":null,"Title":" FXCop Analyzers setting Severity causes an error and strange behaviour","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/751814/fxcop-analyzers-setting-severity-causes-an-error-a.html)._\n\n---\nThis problem started when i followed your message and installed the FXCop Analyzers into Visual Studio. \n\nI really like some warnings it gives but some specifying logging and naming conventions i want to ignore. So i tried to set the Severity of that issue to a certian level. No matter what level you will end up in an error (attached as PNG File).\n\nOnce Visual Studio encountered that error the spacebar, Backspace and Enter button on the keyboard sometimes do no longer work until you restarted Visual Studio. The rest of the Buttons functions as normal. \n\nThis is an ASP .NET Core 3.0 Project that started with Preview 2 and is now updated to the latest release. The Rosyln Analyzers are updated 2.9.5-beta1.final. \n\nVisual Studio is running Version 16.3.0 Preview 3.\n```\n  &lt;entry&gt;\n    &lt;record&gt;988&lt;/record&gt;\n    &lt;time&gt;2019/09/27 12:12:11.168&lt;/time&gt;\n    &lt;type&gt;Error&lt;/type&gt;\n    &lt;source&gt;Editor or Editor Extension&lt;/source&gt;\n    &lt;description&gt;System.NotSupportedException: Changing document &amp;apos;D:\\PROJECTNAME\\SOMEPATH\\SOMEPATH\\SOMEPATH\\Views\\SOMEVIEW\\SOMEVIEWSFILE.g.cs&amp;apos; is not supported.&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Workspace.CheckAllowedProjectChanges(ProjectChanges projectChanges)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Workspace.CheckAllowedSolutionChanges(SolutionChanges solutionChanges)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Solution newSolution, IProgressTracker progressTracker)&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution, IProgressTracker progressTracker)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace, IProgressTracker progressTracker, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ProcessOperations(Workspace workspace, ImmutableArray`1 operations, IProgressTracker progressTracker, CancellationToken cancellationToken)&amp;#x000D; &amp;#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.Apply(Workspace workspace, Document fromDocument, ImmutableArray`1 operations, String title, IProgressTracker progressTracker, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument, IProgressTracker progressTracker, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.&amp;lt;&amp;gt;c__DisplayClass20_0.&amp;lt;InvokeCore&amp;gt;b__0()&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager, Object extension, Action action)&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown --- &amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&lt;/description&gt;\n  &lt;/entry&gt;\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/28/2019, 06:23 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 9/30/2019, 00:33 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Manish Vasani [MSFT] on 10/16/2019, 04:45 PM: \n\n<p>Thank you for reporting the issue. I think this may have been fixed by <a target='_blank' href=\"https://github.com/dotnet/roslyn/pull/38200\">https://github.com/dotnet/roslyn/pull/38200</a>, which was fixed in VS2019 16.4 Preview1. Would you mind installing the latest preview from <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes-preview\">https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes-preview</a> and checking if it still repros?</p>\n\n#### Sebastian on 10/17/2019, 01:42 AM: \n\nHi, <br>yes it seems to work right now.<br><br>Only one small thing: Every second time i am setting a severity the recommendation window for the Roslyn anayzers pops up again on the top, even if they are installed. But this is not really annoying. <br><br>Thanks for fixing :)<br>\n#### Manish Vasani [MSFT] on 10/17/2019, 05:43 AM: \n\n<p>&gt; Only one small thing: Every second time i am setting a severity the recommendation window for the Roslyn anayzers pops up again on the top, even if they are installed. But this is not really annoying.</p><p><br></p><p>Ah, I have seen that prop up a few times as well. I will try to harden the detection. Thanks!</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39461","RelatedDescription":"Open issue \" FXCop Analyzers setting Severity causes an error and strange behaviour\" (#39461)"},{"Id":"511152930","IsPullRequest":false,"CreatedAt":"2019-10-23T08:11:19","Actor":"nefcanto","Number":"39458","RawContent":null,"Title":"Microsoft.CodeAnalysis.CSharp puts a lot of resource litters in the output folder","State":"open","Body":"I don't use CodeAnalysis at all. But I don't know why, my output folder contains a lot of folders related to cultural resources of `Microsoft.CodeAnalysis.CSharp`.\r\n\r\nI've asked it first [here](https://github.com/aspnet/AspNetCore/issues/15255).\r\n\r\nCan you create a clean output folder when there is no need for localization resources?","Url":"https://github.com/dotnet/roslyn/issues/39458","RelatedDescription":"Open issue \"Microsoft.CodeAnalysis.CSharp puts a lot of resource litters in the output folder\" (#39458)"},{"Id":"511537757","IsPullRequest":false,"CreatedAt":"2019-10-18T00:51:39","Actor":"lpeixotoo","Number":"39470","RawContent":null,"Title":"Bad IL format from Memory Stream","State":"open","Body":"# Bad IL format from Memory Stream\r\n\r\nHello guys,\r\n\r\nI'm trying to run a basic compilation sample by \r\n\r\n- Compiling a source code;\r\n- Emiting it into a memory stream;\r\n- Loading and Invoking;\r\n\r\nusing a docker environment with:\r\n\r\n- NET Core SDK (reflecting any global.json):\r\n  Version:   3.0.100\r\n Commit:    04339c3a26\r\n- Runtime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\n# General\r\n\r\nI've based myself in this [article](https://joshvarty.com/2016/01/16/learn-roslyn-now-part-16-the-emit-api/).\r\n\r\nA reproducible repository can be found [here](https://github.com/lpeixotoo/assembly-core).\r\n\r\n## Sample Code\r\n\r\nFor a quick follow up, here's my code\r\n\r\n```c#\r\nusing System;\r\nusing System.IO;                           \r\nusing System.Reflection;                   \r\nusing Microsoft.CodeAnalysis;              \r\nusing Microsoft.CodeAnalysis.CSharp;       \r\nusing Xunit;\r\n\r\nnamespace DotNetLib                        \r\n{                                          \r\n    public  class Lib                \r\n    {                                      \r\n                                           \r\n        [Fact]                                   \r\n        public int Compile()\r\n        {                                  \r\n\r\n           var tree = CSharpSyntaxTree.ParseText(@\"\r\n           using System;\r\n           public class MyClass\r\n           {\r\n               public static void Main()\r\n               {\r\n                   Console.WriteLine(\"\"Hello World!\"\");\r\n               }\r\n           }\");\r\n           \r\n           var mscorlib = MetadataReference.CreateFromFile(typeof(object).Assembly.Location);\r\n           var compilation = CSharpCompilation.Create(\"MyCompilation\",\r\n               syntaxTrees: new[] { tree }, references: new[] { mscorlib });\r\n           \r\n           //Emit to stream\r\n           var ms = new MemoryStream();\r\n           var emitResult = compilation.Emit(ms);\r\n\r\n           //Load into currently running assembly. Normally we'd probably\r\n           //want to do this in an AppDomain\r\n           var ourAssembly = Assembly.Load(ms.GetBuffer());\r\n           var type = ourAssembly.GetType(\"MyClass\");\r\n           \r\n           //Invokes our main method and writes \"Hello World\" :)\r\n           type.InvokeMember(\"Main\", BindingFlags.Default | BindingFlags.InvokeMethod, null, null, null);\r\n \t       return 0;                          \r\n        }\r\n    }                                      \r\n}\r\n\r\n```\r\n\r\nAm i doing something wrong?\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/39470","RelatedDescription":"Open issue \"Bad IL format from Memory Stream\" (#39470)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"511641265","IsPullRequest":true,"CreatedAt":"2019-10-24T00:42:20","Actor":"Dotnet-GitSync-Bot","Number":"7839","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7839","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7839)"},{"Id":"511517701","IsPullRequest":true,"CreatedAt":"2019-10-23T23:09:44","Actor":"Dotnet-GitSync-Bot","Number":"7838","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @AaronRobinsonMSFT @marek-safar @tmds","Url":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7838)"},{"Id":"510975732","IsPullRequest":true,"CreatedAt":"2019-10-23T16:07:26","Actor":"Dotnet-GitSync-Bot","Number":"7837","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7837)"},{"Id":"510948047","IsPullRequest":true,"CreatedAt":"2019-10-22T22:07:19","Actor":"Dotnet-GitSync-Bot","Number":"7836","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7836)"},{"Id":"510804057","IsPullRequest":true,"CreatedAt":"2019-10-22T18:41:16","Actor":"Dotnet-GitSync-Bot","Number":"7834","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding","Url":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7834)"},{"Id":"510815389","IsPullRequest":false,"CreatedAt":"2019-10-22T17:57:39","Actor":"tiandian","Number":"7835","RawContent":null,"Title":"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?","State":"open","Body":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Open issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835)"},{"Id":"509929616","IsPullRequest":false,"CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Number":"7832","RawContent":null,"Title":"Unable to compile on Ubuntu 18.04 (WSL)","State":"closed","Body":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832)"},{"Id":"510326059","IsPullRequest":true,"CreatedAt":"2019-10-22T02:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7833","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding","Url":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7833)"},{"Id":"509511071","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:45","Actor":"MichalStrehovsky","Number":"7830","RawContent":null,"Title":"Add AppContext switch to not throw for Type.Name","State":"closed","Body":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013","Url":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Closed or merged PR \"Add AppContext switch to not throw for Type.Name\" (#7830)"},{"Id":"509511141","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Number":"7831","RawContent":null,"Title":"Scan for Marshal.SizeOf in reflection-disabled mode","State":"closed","Body":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.).","Url":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Closed or merged PR \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831)"},{"Id":"509445042","IsPullRequest":true,"CreatedAt":"2019-10-20T02:03:38","Actor":"filipnavara","Number":"7828","RawContent":null,"Title":"Move portable thread pool to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Closed or merged PR \"Move portable thread pool to shared partition\" (#7828)"},{"Id":"509508420","IsPullRequest":false,"CreatedAt":"2019-10-19T20:52:49","Actor":"jkotas","Number":"7829","RawContent":null,"Title":"Compilation crashes with System.IndexOutOfRangeException","State":"open","Body":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Open issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829)"},{"Id":"508346108","IsPullRequest":true,"CreatedAt":"2019-10-17T18:57:35","Actor":"filipnavara","Number":"7825","RawContent":null,"Title":"Clean up portable thread pool for nullability and comment warnings","State":"closed","Body":"Also, use `EventWaitHandle.Set` instead of `WaitSubsystem.SetEvent`/`Interop.Kernel32.SetEvent` to make it easier to port.","Url":"https://github.com/dotnet/corert/pull/7825","RelatedDescription":"Closed or merged PR \"Clean up portable thread pool for nullability and comment warnings\" (#7825)"},{"Id":"508509256","IsPullRequest":false,"CreatedAt":"2019-10-17T14:18:24","Actor":"Const-me","Number":"7827","RawContent":null,"Title":"ARM32 Debug Info","State":"open","Body":"Unless ILC debug output is disabled in .csproj, CoreRT’s ilc program fails to compile stuff.\r\n\r\n[This assert fails.](https://github.com/dotnet/corert/blob/master/src/Native/ObjWriter/debugInfo/dwarf/dwarfGen.cpp#L436)\r\n\r\nI’ve added a bit more info and found out it’s VLT_FPSTK.\r\n\r\nUsing Debian 9.5, tried dotnet-sdk-2.1.802 and dotnet-sdk-2.2.402, same result.\r\n\r\nSteps to reproduce:\r\n\r\n`dotnet new console`\r\n\r\nPatch project file as [described there](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built) and also add `<DisableUnsupportedError>true</DisableUnsupportedError>`\r\n\r\nRun `dotnet publish --configuration Release --runtime linux-arm`\r\n\r\nNative stack at the time of failed assert. Stops at first managed frame ‘coz gdb can’t debug .NET, at least not by default.\r\n\r\n```\r\n#6  0xa352510c in EmitVarLocation(llvm::MCObjectStreamer*, ICorDebugInfo::NativeVarInfo const&, bool)\r\n#7  0xa3525ab2 in VarInfo::DumpLocsIfNeeded(llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCExpr const*)\r\n#8  0xa35260be in SubprogramInfo::DumpDebugLoc(llvm::MCObjectStreamer*, llvm::MCSection*)\r\n#9  0xa3525e3c in SubprogramInfo::Dump(UserDefinedDwarfTypesBuilder*, llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCSection*, llvm::MCSection*)\r\n#10 0xa3526b36 in DwarfGen::Finish()\r\n#11 0xa3501804 in ObjectWriter::EmitDebugModuleInfo()\r\n#12 0xa34fd5f0 in EmitDebugModuleInfo\r\ngdb can’t debug .net so the stack trace stops there.\r\n#13 0xa7bbe1ac in ?? ()\r\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\r\n```\r\n\r\nStrangely enough, comments in ObjectWriter.EmitObject method, there\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1044\r\nand a few other things\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1094-L1095\r\nsuggest that code was running on ARM32 at some point.\r\n\r\nIs something wrong on my side? If it’s just not supported, how easy it is to support?","Url":"https://github.com/dotnet/corert/issues/7827","RelatedDescription":"Open issue \"ARM32 Debug Info\" (#7827)"},{"Id":"508505637","IsPullRequest":false,"CreatedAt":"2019-10-17T14:13:06","Actor":"Const-me","Number":"7826","RawContent":null,"Title":"ARM32 crash at startup due to misalignment","State":"open","Body":"Here’s output from gdb:\r\n```\r\nThread 1 \"MyApp\" received signal SIGBUS, Bus error.\r\nRhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n47                cmp          r6, r4\r\n(gdb) bt\r\n#0  RhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n#1  0x0049c5ee in S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_PositionPointer ()\r\n```\r\ngdb probably has off by 1 bug, I think it’s the [previous instruction](https://github.com/dotnet/corert/blob/master/src/Native/Runtime/arm/Interlocked.S#L46) which crashed the app.\r\n\r\nThe failing line of C# code is probably this https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/IO/UnmanagedMemoryStream.cs#L329 but I’m not 100% sure, as there’s no debug information in the binary due to another CoreRT ARM32 bug.\r\n\r\nI wasn’t able to make minimal repro, when I wrote a class with a long field, Interlocked.Read(ref long) returned the value without crashing. Probably clang optimizes away.\r\n\r\nAny idea how to fix or workaround?","Url":"https://github.com/dotnet/corert/issues/7826","RelatedDescription":"Open issue \"ARM32 crash at startup due to misalignment\" (#7826)"},{"Id":"506685516","IsPullRequest":false,"CreatedAt":"2019-10-14T20:24:48","Actor":"imback82","Number":"7824","RawContent":null,"Title":"Debugger.Launch() on macOS","State":"closed","Body":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824)"},{"Id":"506047436","IsPullRequest":true,"CreatedAt":"2019-10-12T15:06:11","Actor":"Dotnet-GitSync-Bot","Number":"7823","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7823)"},{"Id":"505621245","IsPullRequest":true,"CreatedAt":"2019-10-11T08:45:30","Actor":"Dotnet-GitSync-Bot","Number":"7822","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7822)"},{"Id":"504527034","IsPullRequest":true,"CreatedAt":"2019-10-09T12:42:07","Actor":"MichalStrehovsky","Number":"7821","RawContent":null,"Title":"Delete unused method","State":"closed","Body":"Supplements #7819.","Url":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Closed or merged PR \"Delete unused method\" (#7821)"},{"Id":"504357120","IsPullRequest":true,"CreatedAt":"2019-10-09T09:28:10","Actor":"Dotnet-GitSync-Bot","Number":"7820","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7820","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7820)"},{"Id":"504158790","IsPullRequest":true,"CreatedAt":"2019-10-09T09:27:34","Actor":"am11","Number":"7818","RawContent":null,"Title":"Fix exit code of build-native.sh","State":"closed","Body":"I noticed it in the docker container, that the failed build was successfully committing the container (false positive).","Url":"https://github.com/dotnet/corert/pull/7818","RelatedDescription":"Closed or merged PR \"Fix exit code of build-native.sh\" (#7818)"},{"Id":"504330608","IsPullRequest":true,"CreatedAt":"2019-10-09T01:16:45","Actor":"Dotnet-GitSync-Bot","Number":"7819","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7819","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7819)"},{"Id":"503784732","IsPullRequest":false,"CreatedAt":"2019-10-08T02:17:07","Actor":"ZacharyJia","Number":"7817","RawContent":null,"Title":"Call generated dll from cpp crash","State":"open","Body":"I use a dll generated by corert in a cpp program, but it crashed when any statement runs.\r\nI'm using the `.net core 3.0` and the ilcompiler version is `1.0.0-alpha-28207-01`\r\n\r\nThe call stack is:\r\n```\r\ngenet.net.exe!S_P_CoreLib_System_Threading_LockHolder__Hold()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner_Cctor__GetCctor()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnGCStaticBase()\r\ngenet.net.exe!S_P_CoreLib_System_Text_Encoding__get_UTF8()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__GetModuleName()genet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__FixupModuleCell()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvokeSlow()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvoke()\r\ngenet.net.exe!genet_net_genet_net_Program__LoadLibrary()\r\ngenet.net.exe!genet_net_genet_net_Program__show()\r\ndlldemo-cpp.exe!main()  line 17\tC++\r\n```\r\n\r\nThe crash message is:\r\n```\r\n0x00007FF9C9416408 (genet.net.exe)处(位于 dlldemo-cpp.exe 中)引发的异常: 0xC0000005: 读取位置 0x0000000000000000 时发生访问冲突。\r\n```","Url":"https://github.com/dotnet/corert/issues/7817","RelatedDescription":"Open issue \"Call generated dll from cpp crash\" (#7817)"},{"Id":"503304688","IsPullRequest":false,"CreatedAt":"2019-10-07T08:30:51","Actor":"yunekit","Number":"7816","RawContent":null,"Title":"sched_yield infinite loop","State":"open","Body":"The sched_yield()==0 infinite loop occurred during the running of the application, causing the process to block and fail to work.","Url":"https://github.com/dotnet/corert/issues/7816","RelatedDescription":"Open issue \"sched_yield infinite loop\" (#7816)"},{"Id":"503145779","IsPullRequest":true,"CreatedAt":"2019-10-06T21:09:25","Actor":"Dotnet-GitSync-Bot","Number":"7815","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7815","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7815)"},{"Id":"503134823","IsPullRequest":true,"CreatedAt":"2019-10-06T19:30:50","Actor":"MichalStrehovsky","Number":"7814","RawContent":null,"Title":"Add support for multithreaded compilation to ILC","State":"closed","Body":"Improves native compilation throughput by about 33%.\r\n\r\nValidated that the output with multithreading enabled (the new default) is byte-by-byte identical with the output produced by `--singlethreaded` (new command line option to ILC that disables multithreading).\r\n\r\nWe still can do a lot more in terms of compilation throughput (virtual method resolution is really slow and runs in one of the single threaded phases, and the object writing phase is pretty slow too and is fully single threaded too).\r\n\r\nContributes to #3925 (what's left is the extra-credit stuff).","Url":"https://github.com/dotnet/corert/pull/7814","RelatedDescription":"Closed or merged PR \"Add support for multithreaded compilation to ILC\" (#7814)"},{"Id":"502963591","IsPullRequest":true,"CreatedAt":"2019-10-06T04:53:29","Actor":"MichalStrehovsky","Number":"7811","RawContent":null,"Title":"Port fixes from CoreCLR","State":"closed","Body":"Skipping dotnet/coreclr#26792 and dotnet/coreclr#26793.","Url":"https://github.com/dotnet/corert/pull/7811","RelatedDescription":"Closed or merged PR \"Port fixes from CoreCLR\" (#7811)"},{"Id":"502974204","IsPullRequest":true,"CreatedAt":"2019-10-05T16:06:41","Actor":"MichalStrehovsky","Number":"7812","RawContent":null,"Title":"Remove global state tracking in DynamicInvokeTemplateDataNode","State":"closed","Body":"DynamicInvokeTemplateDataNode populated _methodToTemplateIndex in `GetIdForMethod` which is pretty bad from multithreading perspective (non-concurrent dictionary + ID that depends on ordering).\r\n\r\nI've moved this tracking into a separate node so that this is more explicit and properly sortable.","Url":"https://github.com/dotnet/corert/pull/7812","RelatedDescription":"Closed or merged PR \"Remove global state tracking in DynamicInvokeTemplateDataNode\" (#7812)"},{"Id":"502974267","IsPullRequest":true,"CreatedAt":"2019-10-05T16:04:50","Actor":"MichalStrehovsky","Number":"7813","RawContent":null,"Title":"Cache helpers used in IL scanner","State":"closed","Body":"We have a cache for these in CorInfoImpl (when compiling), but there's no cache in the scanner. This means we're re-resolving various named helpers in CoreLib. It's a bit of a waste of CPU time. Noticed this when running the compiler under a profiler.","Url":"https://github.com/dotnet/corert/pull/7813","RelatedDescription":"Closed or merged PR \"Cache helpers used in IL scanner\" (#7813)"},{"Id":"502935521","IsPullRequest":true,"CreatedAt":"2019-10-05T12:47:51","Actor":"MichalStrehovsky","Number":"7810","RawContent":null,"Title":"Update ObjWriter","State":"closed","Body":"Picks up #7802.","Url":"https://github.com/dotnet/corert/pull/7810","RelatedDescription":"Closed or merged PR \"Update ObjWriter\" (#7810)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"511712363","IsPullRequest":true,"CreatedAt":"2019-10-24T05:20:11","Actor":"dotnet-maestro[bot]","Number":"3781","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.11\r\n- **Date Produced**: 10/24/2019 4:13 AM\r\n- **Commit**: 925a7137c8d1387a3948ee36ffc90fc182b405a9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.11\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3781","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3781)"},{"Id":"511625042","IsPullRequest":true,"CreatedAt":"2019-10-24T03:54:54","Actor":"dotnet-maestro[bot]","Number":"3779","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3779","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3779)"},{"Id":"511645668","IsPullRequest":true,"CreatedAt":"2019-10-24T01:01:27","Actor":"wli3","Number":"3780","RawContent":null,"Title":"Remove BundledNETCoreAppTargetFrameworkVersion","State":"open","Body":"It should be removed in https://github.com/dotnet/sdk/commit/0979dd3c53a8971a5434cf4bc68efd103fe5ea68\r\nsince it is no longer used","Url":"https://github.com/dotnet/sdk/pull/3780","RelatedDescription":"Open PR \"Remove BundledNETCoreAppTargetFrameworkVersion\" (#3780)"},{"Id":"511569379","IsPullRequest":true,"CreatedAt":"2019-10-23T23:35:10","Actor":"dotnet-maestro[bot]","Number":"3778","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.4\r\n- **Date Produced**: 10/23/2019 7:49 PM\r\n- **Commit**: 5cde584f489b0b4c558255ea484c5606eb494b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3778","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3778)"},{"Id":"511414721","IsPullRequest":false,"CreatedAt":"2019-10-23T15:44:21","Actor":"nefcanto","Number":"3777","RawContent":null,"Title":"DRYing <TargetFramework> sometimes works, sometimes breaks.","State":"open","Body":"As I write this, we have 2,497 `.csproj` files in our entire organization.\r\n\r\nWe have one policy, and that is \"mono-everything\". It means that for the sake of reducing costs, and increasing quality, we upgrade the whole organization. Everything should be upgraded when we decide to upgrade anything.\r\n\r\nNow, after upgrading to .NET Core 3.0 which was and is a painful process, we decided to DRY `<TargetFramework>` and remove `Debug\\netcoreapp3.0` from output folder. We want this policy to be applied to ALL of our projects. So we came up with this `ProjectDotNetCore.targets` file:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <OutputPath>.\\bin</OutputPath>\r\n    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>\r\n\t<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>\r\n    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>\r\n    <PublishWithAspNetCoreTargetManifest>false</PublishWithAspNetCoreTargetManifest>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd we use this `.targets` file in all of those 2500 `.csproj` files. This way, we can assure a single behavior across the entire organization. So a typical `.csproj` file would look like this:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup Label=\"Globals\">\r\n    <SccProjectName>SAK</SccProjectName>\r\n    <SccProvider>SAK</SccProvider>\r\n    <SccAuxPath>SAK</SccAuxPath>\r\n    <SccLocalPath>SAK</SccLocalPath>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <AssemblyName>HolismCommerce.Sammerce.AdminService</AssemblyName>\r\n    <RootNamespace>HolismCommerce.Sammerce.AdminService</RootNamespace>\r\n  </PropertyGroup>\r\n\r\n  <Import Project=\"$(OrganizationProjectsRoot)\\Framework\\ProjectDotNetCore.targets\" />\r\n\r\n</Project>\r\n```\r\n\r\nThe problem is that, sometimes it works, sometimes it doesn't work and we receive this error:\r\n\r\n> Error\tNETSDK1013\tThe TargetFramework value 'netcoreapp3.0' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\n\r\nWhy it has non-deterministic behavior? We want to be able to set `<TargetFramework>` of all projects from a central location. How can we debug it?","Url":"https://github.com/dotnet/sdk/issues/3777","RelatedDescription":"Open issue \"DRYing <TargetFramework> sometimes works, sometimes breaks.\" (#3777)"},{"Id":"509441010","IsPullRequest":true,"CreatedAt":"2019-10-23T14:36:57","Actor":"dotnet-bot","Number":"3767","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3767","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3767)"},{"Id":"508759665","IsPullRequest":true,"CreatedAt":"2019-10-23T07:22:38","Actor":"dotnet-maestro[bot]","Number":"3764","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.9\r\n- **Date Produced**: 10/23/2019 4:27 AM\r\n- **Commit**: 8dc60d0132c062a8258969cdec05df9a258ea5b6\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.9\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3764","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3764)"},{"Id":"511050667","IsPullRequest":false,"CreatedAt":"2019-10-23T03:36:12","Actor":"wli3","Number":"3776","RawContent":null,"Title":"Catch AppHostMachOFormatException in SDK","State":"open","Body":"corresponding to dotnet/core-setup#8543 ","Url":"https://github.com/dotnet/sdk/issues/3776","RelatedDescription":"Open issue \"Catch AppHostMachOFormatException in SDK\" (#3776)"},{"Id":"510995291","IsPullRequest":false,"CreatedAt":"2019-10-23T00:06:28","Actor":"ryanbrandenburg","Number":"3775","RawContent":null,"Title":"SDK does not handle folders with escaped special characters","State":"open","Body":"### How to reproduce\r\n1. `mkdir mvc%2b; cd mvc%2b; dotnet new mvc`\r\n3. `dotnet new sln`\r\n4. `dotnet sln add mvc%2b/mvc.csproj`\r\n5. `dotnet build`\r\n\r\nThis results in `C:\\Program Files\\dotnet\\sdk\\3.0.100\\NuGet.targets(268,5): error MSB3202: The project file \"~\\projects\\mvc+\\mvc.csproj\" was not found. [~\\projects\\projects.sln]`\r\n\r\nIt seems like somewhere along the way something is trying to decode the URL, and the result is that it can't find the given file.\r\n\r\nIs the answer here possibly that we just don't support the use of special characters in the folder/file structure at all?\r\n\r\nThis is a spin-off of https://github.com/aspnet/AspNetCore/issues/14501","Url":"https://github.com/dotnet/sdk/issues/3775","RelatedDescription":"Open issue \"SDK does not handle folders with escaped special characters\" (#3775)"},{"Id":"510994903","IsPullRequest":true,"CreatedAt":"2019-10-23T00:05:01","Actor":"dotnet-bot","Number":"3774","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3774","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3774)"},{"Id":"510968530","IsPullRequest":false,"CreatedAt":"2019-10-22T22:40:39","Actor":"wli3","Number":"3773","RawContent":null,"Title":"Port remove signature on MAC host to 2.x SDK","State":"open","Body":"https://github.com/dotnet/core-setup/pull/8543#event-2725838361\r\n\r\nget it in January train","Url":"https://github.com/dotnet/sdk/issues/3773","RelatedDescription":"Open issue \"Port remove signature on MAC host to 2.x SDK\" (#3773)"},{"Id":"510905227","IsPullRequest":true,"CreatedAt":"2019-10-22T20:52:34","Actor":"dotnet-maestro[bot]","Number":"3772","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a8f6ab0e-8160-45b8-5027-08d727dabd66)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.4.0.6271\r\n- **Date Produced**: 10/19/2019 4:24 AM\r\n- **Commit**: c1f6915918b82c096bbd666bd9c18528f1f70630\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.4.0-preview.3.6271\r\n\r\n[marker]: <> (End:a8f6ab0e-8160-45b8-5027-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3772","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from nuget/nuget.client\" (#3772)"},{"Id":"510810751","IsPullRequest":true,"CreatedAt":"2019-10-22T17:48:44","Actor":"sfoslund","Number":"3771","RawContent":null,"Title":"Fix .pp content files copy to output issue","State":"open","Body":"Addressing Issue #3719\r\n\r\nAdding test/ fix to ensure .pp content files in a package marked copy to output are properly copied into the output directory. ","Url":"https://github.com/dotnet/sdk/pull/3771","RelatedDescription":"Open PR \"Fix .pp content files copy to output issue\" (#3771)"},{"Id":"510688659","IsPullRequest":false,"CreatedAt":"2019-10-22T17:44:24","Actor":"RobBowman","Number":"3769","RawContent":null,"Title":"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized","State":"closed","Body":"I have VS2019 v16.3.5 installed along with the dotnet core 3 sdk. I can browse to _C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App_ and see lots of the versions of the shared framework in folders from 2.1.9 to 3.0.0\r\n\r\n- create new console app\r\n- edit project file to add:\r\n```\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n```\r\n\r\nAll is good :)\r\n\r\nChange target framework to 2.2\r\n\r\nAll is bad :( \r\n\r\nI get the build error: _The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized_\r\n\r\nShould it be possible to target 2.2 and still use the shared framework Microsoft.AspNetCore.App?\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3769","RelatedDescription":"Closed issue \"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3769)"},{"Id":"510746012","IsPullRequest":false,"CreatedAt":"2019-10-22T15:44:56","Actor":"ForNeVeR","Number":"3770","RawContent":null,"Title":"Error about System.Core when building a WPF app for .NET 4.5.2 with System.ValueTuple","State":"open","Body":"It looks like .NET 4.5.2 applications now cannot use `System.ValueTuple` package if they build with the new Windows Desktop SDK. Steps to reproduce:\r\n\r\n1. Install .NET Core 3.0 SDK (see the version info below)\r\n2. Create a new WPF app: `dotnet new wpf`\r\n3. Change the target framework to .NET 4.5.2, add the `System.ValueTuple` package to your `.csproj`:\r\n\r\n   ```xml\r\n   <Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n     <PropertyGroup>\r\n       <OutputType>WinExe</OutputType>\r\n       <TargetFramework>net452</TargetFramework>\r\n       <UseWPF>true</UseWPF>\r\n     </PropertyGroup>\r\n       <ItemGroup>\r\n         <PackageReference Include=\"System.ValueTuple\" Version=\"4.5.0\" />\r\n       </ItemGroup>\r\n   </Project>\r\n   ```\r\n4. Now, build the project:\r\n   ```console\r\n   $ dotnet build\r\n   Microsoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\n   Copyright (C) Microsoft Corporation. All rights reserved.\r\n   \r\n     Restore completed in 165,43 ms for T:\\Temp\\newproj2\\newproj2.csproj.\r\n   C:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets(243,9): error MC1000: Unknown build error, 'Could not find assembly 'System.Core, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e'. Either explicitly load this assembly using a method such as LoadFromAssemblyPath() or use a MetadataAssemblyResolver that returns a valid assembly.'  [T:\\Temp\\newproj2\\newproj2.csproj]\r\n   ```\r\n\r\n.NET Version info:\r\n\r\n```console\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n```","Url":"https://github.com/dotnet/sdk/issues/3770","RelatedDescription":"Open issue \"Error about System.Core when building a WPF app for .NET 4.5.2 with System.ValueTuple\" (#3770)"},{"Id":"510344503","IsPullRequest":false,"CreatedAt":"2019-10-21T23:08:32","Actor":"wli3","Number":"3768","RawContent":null,"Title":"Cannot build on ubuntu 18.04","State":"open","Body":"Should disable downloading 1.x runtime on later distros","Url":"https://github.com/dotnet/sdk/issues/3768","RelatedDescription":"Open issue \"Cannot build on ubuntu 18.04\" (#3768)"},{"Id":"509239619","IsPullRequest":false,"CreatedAt":"2019-10-21T21:17:54","Actor":"pinkfloydx33","Number":"3765","RawContent":null,"Title":"PublishSingleFile=true does not include Content files","State":"closed","Body":"I am working with a (non-web) .NET Core 3.0 console application and I am trying to use `PublishSingleFile=true`. While the single-file aspect does indeed work (I get one executable file), my application always crashes due to missing appsettings.json files. I've tried setting the files to Content/None, Copy Always/Newest. I also tried adding `<CopyToPublishDirectory>true</CopyToPublishDirectory>` and yet nothing seems to work.\r\n\r\nIf I create a brand new fresh _Web_-SDK project, the single file publish works and the content files are dropped right next to the published executable. I tried comparing the starter web project to my console application and I don't see a difference.  \r\n\r\nThe easiest reproduction I have is to create a blank console application project, add a text file to the project (as content or `none`) and then publish with the PublishSingleFile=true. The output does not contain the content files. \r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"MyContentFile.txt\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>Always</CopyToPublishDirectory>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIs this supposed to work for non-Web projects?\r\n\r\n> .NET Core SDK (reflecting any global.json):\r\n>  Version:   3.0.100\r\n>  Commit:    04339c3a26\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.18362\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 3.0.0\r\n>   Commit:  95a0a61858\r\n> \r\n> .NET Core SDKs installed:\r\n>   3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n>   3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/dotnet/sdk/issues/3765","RelatedDescription":"Closed issue \"PublishSingleFile=true does not include Content files\" (#3765)"},{"Id":"508725481","IsPullRequest":false,"CreatedAt":"2019-10-20T16:55:20","Actor":"pranavkm","Number":"3762","RawContent":null,"Title":"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized","State":"closed","Body":"_From @DataTables on Thursday, October 17, 2019 10:16:11 AM_\r\n\r\n### Describe the bug\r\n\r\nWhen adding .NET Core 3.0 to a multi-targeted project I'm getting the error:\r\n\r\n> error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nI've followed the [porting guide here](https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-2.2&tabs=visual-studio) but have been unable to resolve the issue. It looks like this also also been raised in [other issues](https://github.com/aspnet/AspNetCore/issues/4490), but the indications there are that this was an issue during the previews and should now be resolved.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1) Clone into [this repo](https://github.com/DataTables/Editor-NET) which is the one I'm trying to add .NET Core 3.0 build support to.\r\n2) Update the DataTables-Editor-Server.csproj file to target .NET Core 3.0:\r\n\r\n```\r\n<TargetFrameworks>netcoreapp2.1;netcoreapp3.0;net45;net46;net47</TargetFrameworks>\r\n```\r\n\r\nand add:\r\n\r\n```\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"Microsoft.CSharp\">\r\n      <Version>4.6.0</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n```\r\n\r\n3) Run `msbuild DataTables.sln` - observe errors for .NET Core 3.0 build.\r\n\r\nThe [documentation here](https://docs.microsoft.com/en-gb/dotnet/core/tools/csproj#implicit-package-references) notes that `Microsoft.AspNetCore.App\"` is implicit and doesn't need to be included, but the migration guide says it should if the SDK is `Microsoft.NET.Sdk` which I've been using.\r\n\r\n### Expected behavior\r\ndll targeting .NET Core 3.0 will be build along with the others.\r\n\r\n### Additional context\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  27\r\n OS Platform: Linux\r\n RID:         fedora.27-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nInstallation for .NET Core (and Framework via mono) build in Fedora was:\r\n\r\n```\r\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\r\nwget -q https://packages.microsoft.com/config/fedora/27/prod.repo\r\nsudo mv prod.repo /etc/yum.repos.d/microsoft-prod.repo\r\nsudo chown root:root /etc/yum.repos.d/microsoft-prod.repo\r\n\r\nsudo dnf install -y aspnetcore-runtime-2.1\r\nsudo dnf install -y dotnet-sdk-2.1-2.1.505\r\n\r\nsudo dnf install -y aspnetcore-runtime-3.0\r\nsudo dnf install -y dotnet-sdk-3.0\r\n\r\n# .NET Framework via Mono\r\nsudo rpm --import \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\"\r\nsudo curl https://download.mono-project.com/repo/centos7-stable.repo | sudo tee /etc/yum.repos.d/mono-centos7-stable.repo\r\nsudo dnf install -y mono-devel mono-complete xsp msbuild\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#15107_","Url":"https://github.com/dotnet/sdk/issues/3762","RelatedDescription":"Closed issue \"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3762)"},{"Id":"507542154","IsPullRequest":true,"CreatedAt":"2019-10-19T00:38:48","Actor":"dotnet-bot","Number":"3755","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3755","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3755)"},{"Id":"508065740","IsPullRequest":true,"CreatedAt":"2019-10-19T00:33:49","Actor":"swaroop-sridhar","Number":"3759","RawContent":null,"Title":"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`","State":"closed","Body":"Trying to publish a `.net core 2.1` app as a single file fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n\r\nPublishing apps as a single file is only supported in `.net core 3` and higher.\r\nSo, this change adds a version check in the SDK.\r\n\r\nSimilarly, the check is also added for the `PublishReadyToRun` and `PublishTrimmed` options.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728","Url":"https://github.com/dotnet/sdk/pull/3759","RelatedDescription":"Closed or merged PR \"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3759)"},{"Id":"509364106","IsPullRequest":true,"CreatedAt":"2019-10-19T00:32:13","Actor":"swaroop-sridhar","Number":"3766","RawContent":null,"Title":"[release/3.1.1xx] Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`","State":"open","Body":"The options `PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` are only supported when targetting netcoreapp3.0 or later.\r\n\r\nTrying to publish to a different target (say `.netcoreapp2.1`) today:\r\n* `PublishSingleFile` fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n* `PublishReadyToRun` and `PublishTrimmed` silently fail to turn on, but the `publish` itself suceeds.\r\n\r\nThis change adds an explicit TFM check to generate error/warnings for non-conforming targets.\r\n\r\n`PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` require the following conditions to be true:\r\n* `TargetFramework` is `netcoreapp`\r\n* `TargetFrameworkVersion` is at least `3.0`\r\n* The app is an executable (`OutputType=exe`)\r\n\r\nIf any of the conditions fail:\r\n* `PublishSingleFile` fails with an appropriate error\r\n* `PublishReadyToRun` and `PublishTrimmed` issue warnings, but publish itself succeeds.\r\n  This is because:\r\n    * The restriction against `classlibs` / `netstandard` frameworks may be relaxed in future releases\r\n    * The version check should ideally be a failure, but they are warnings for maximum compatibility with `3.0` release.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728","Url":"https://github.com/dotnet/sdk/pull/3766","RelatedDescription":"Open PR \"[release/3.1.1xx] Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3766)"},{"Id":"507479665","IsPullRequest":true,"CreatedAt":"2019-10-18T00:03:29","Actor":"vijayrkn","Number":"3752","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"closed","Body":"Issue:\r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk.\r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile.\r\n\r\nImpact:\r\nThis breaks the Sdk based WebJobs publish scenarios.\r\n\r\nThere are 2 parts to this fix:\r\n\r\nRemoving the default publish profile from Netsdk\r\nIf the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - aspnet/websdk#1006","Url":"https://github.com/dotnet/sdk/pull/3752","RelatedDescription":"Closed or merged PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3752)"},{"Id":"508207404","IsPullRequest":true,"CreatedAt":"2019-10-17T22:28:28","Actor":"dotnet-maestro[bot]","Number":"3761","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191017.4\r\n- **Date Produced**: 10/17/2019 6:49 PM\r\n- **Commit**: 78df3ddd8b40fbd93e10cea111b840c3ecfbb9fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19517.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3761","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3761)"},{"Id":"508734239","IsPullRequest":true,"CreatedAt":"2019-10-17T21:38:59","Actor":"dotnet-maestro[bot]","Number":"3763","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.1.6268\r\n- **Date Produced**: 10/16/2019 6:20 AM\r\n- **Commit**: f2c670b0b7cdc018dc708666b2d58699d9654e42\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.1-rtm.6268\r\n\r\n[marker]: <> (End:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3763","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#3763)"},{"Id":"507966389","IsPullRequest":true,"CreatedAt":"2019-10-17T04:25:09","Actor":"dotnet-maestro[bot]","Number":"3758","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.12\r\n- **Date Produced**: 10/17/2019 12:27 AM\r\n- **Commit**: 32085cbc728e1016c9d6a7bc105845f0f9eb6b47\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3758","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3758)"},{"Id":"507820459","IsPullRequest":true,"CreatedAt":"2019-10-17T01:38:16","Actor":"dotnet-maestro[bot]","Number":"3757","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.1\r\n- **Date Produced**: 10/16/2019 11:22 AM\r\n- **Commit**: f8aac40612d167c5beff554f569897177e786d3a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.1\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3757","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3757)"},{"Id":"508178879","IsPullRequest":false,"CreatedAt":"2019-10-17T01:21:45","Actor":"syndicatedshannon","Number":"3760","RawContent":null,"Title":"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade","State":"open","Body":"Downgrade TargetFramework from netcoreapp3.0 to netcoreapp2.2 causes the following upon build:\r\n\r\n> The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nClean/Rebuild All does not resolve. Deleting bin/obj folders in the specific projects reporting the FrameworkReference error does resolve. This causes unexpected failures when switching branches. Note the project also depends upon .NET Standard 2.1/2.0 projects, which have coincident upgrade/downgrades. However, cleaning those projects did not resolve.\r\n\r\nI can repro and try deleting something specific if it will help pin the problem down further.","Url":"https://github.com/dotnet/sdk/issues/3760","RelatedDescription":"Open issue \"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade\" (#3760)"},{"Id":"507542108","IsPullRequest":true,"CreatedAt":"2019-10-17T00:42:52","Actor":"dotnet-bot","Number":"3754","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3754","RelatedDescription":"Closed or merged PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#3754)"},{"Id":"507625049","IsPullRequest":true,"CreatedAt":"2019-10-16T08:11:16","Actor":"dotnet-maestro[bot]","Number":"3756","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.16\r\n- **Date Produced**: 10/16/2019 4:22 AM\r\n- **Commit**: 57ce1fec7a023a8e32cc64f8ce2637a0b3cdba35\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19515.16\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3756","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3756)"},{"Id":"507520224","IsPullRequest":true,"CreatedAt":"2019-10-15T23:32:25","Actor":"nguerrera","Number":"3753","RawContent":null,"Title":"Increase timeout and up ulimit -n","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3753","RelatedDescription":"Closed or merged PR \"Increase timeout and up ulimit -n\" (#3753)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1187041856305160192","CreatedAt":"2019-10-23T16:23:27+00:00","UserScreenname":"dotnet","Text":"Learn how to #GetStarted with #ASPNETCore in a few short video #tutorials!\" https://t.co/0jmYLkKUqn https://t.co/4BmZJZPlDX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"1186774324377575425","CreatedAt":"2019-10-22T22:40:22+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"1186380026763194368","CreatedAt":"2019-10-21T20:33:34+00:00","UserScreenname":"dotnet","Text":"Get started with #dotNET using these quick and fun 101 video #tutorials! https://t.co/QgXucetiFt https://t.co/FSFMHGIl7y","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":58,"FavoriteCount":22,"RawContent":null},{"Id":"1184928601394671616","CreatedAt":"2019-10-17T20:26:08+00:00","UserScreenname":"dotnet","Text":"Take the Fall .NET Core Survey https://t.co/QoL9pUXuID","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":53,"RawContent":null},{"Id":"1184876458621095936","CreatedAt":"2019-10-17T16:58:56+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"1184446392829386752","CreatedAt":"2019-10-16T12:30:00+00:00","UserScreenname":"dotnet","Text":"🚀 Coding F# in Visual Studio Code with Ionide 🚀\n\nIn this episode, @_cartermp sits down with @cecilphillip to talk a… https://t.co/5AJoiFdoeK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":30,"RawContent":null},{"Id":"1184165499212423168","CreatedAt":"2019-10-15T17:53:50+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 1 https://t.co/HAD1JAsf3j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":207,"FavoriteCount":110,"RawContent":null},{"Id":"1184165405574586368","CreatedAt":"2019-10-15T17:53:28+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.1 Preview 1 https://t.co/Dho82BhBu1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":39,"RawContent":null},{"Id":"1184151270635921408","CreatedAt":"2019-10-15T16:57:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-10-24T05:30:40.0551362Z","RunDurationInMilliseconds":16506}