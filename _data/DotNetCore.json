{"Data":{"Blog":{"FeedItems":[{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null},{"Title":".NET Core is the Future of .NET ","PublishedOn":"2019-05-06T22:22:54+00:00","CommentsCount":93,"FacebookCount":0,"Summary":"We introduced .NET Core 1.0 on November 2014. The goal with .NET Core was to take the learning from our experience building, shipping and servicing .NET Framework over the previous 12 years and build...","Href":"https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/","RawContent":null},{"Title":"Announcing ML.NET 1.0","PublishedOn":"2019-05-06T18:51:26+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We are excited to announce the release of ML.NET 1.0 today.  ML.NET is a free, cross-platform and open source machine learning framework designed to bring the power of machine learning (ML) into .NET...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 5","PublishedOn":"2019-05-06T16:01:05+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 5. It includes a new Json serializer, support for publishing single file executables, an update to runtime roll-forward, and changes in the BCL. If you...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-5/","RawContent":null},{"Title":"Introducing .NET 5","PublishedOn":"2019-05-06T16:00:50+00:00","CommentsCount":178,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing that the next release after .NET Core 3.0 will be .NET 5. This will be the next big release in the .NET family.\nThere will be just one .NET going forward, and you will be...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-5/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9341532248","Type":"PullRequestEvent","CreatedAt":"2019-03-29T14:44:24","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Merged pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9627947941","Type":"PullRequestEvent","CreatedAt":"2019-05-15T05:26:38","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24576","RelatedDescription":"Merged pull request \"Enable QuickJit by default\" (#24576) at dotnet/coreclr","RelatedBody":"- From a recent discussion, the consensus was to enable QuickJit by default for 3.0. In startup perf, this mode appears to be consistently better than with QuickJit disabled, and usually equal or better than with TieredCompilation disabled.\r\n- QuickJitForLoops remains disabled by default, so this enables QuickJit only for methods that don't contain loops"},{"Id":"9627932778","Type":"PullRequestEvent","CreatedAt":"2019-05-15T05:22:36","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24521","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#24521) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190509.10\r\n- **Date Produced**: 5/10/2019 5:16 AM\r\n- **Commit**: 441238d5a50ee3cb19179e93c2b94ec7b09ca214\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19259.10\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview6.19259.10\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190513.9\r\n- **Date Produced**: 5/14/2019 7:47 AM\r\n- **Commit**: f5be0283c5e00dd823a41f671f9c9a41170f0a85\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19263.9\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview6.19263.9\r\n\r\n"},{"Id":"9627880691","Type":"PullRequestEvent","CreatedAt":"2019-05-15T05:08:08","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24370","RelatedDescription":"Merged pull request \"Switch to zero-length array in otherwise empty class\" (#24370) at dotnet/coreclr","RelatedBody":"Flexible array is a feature of ISO C99, that ISO C++ has not ([yet](https://thephd.github.io/vendor/future_cxx/papers/d1039.html))\r\nincluded. Therefore clang and gcc with `-fpedantic` and msvc with\r\n`/Wall` warn about it, and are equally unhappy when flexible array is\r\nused in C++ code.\r\n\r\nThe exception in CoreCLR is `FastTable` class, where there is only one\r\nmember which is a flexible array. The length of array is written at a\r\nspecific offset of contents array.\r\n\r\ngcc 6+ does not like this particular case, and gives a fatal error that\r\ncannot be suppressed by regular means (`-Wno-XXX`):\r\n\r\n```\r\nerror: flexible array member FastTable::contents in an otherwise empty class FastTable\r\n    size_t contents[];\r\n                    ^\r\n```\r\n\r\nFix is to either not wrap this single field in concrete data structure\r\nor use a zero-length array instead, which produces same assembly code\r\nas the flexible array; tested with clang, gcc and msvc.\r\n\r\nRead about this fix here: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=69550"},{"Id":"9627525629","Type":"PullRequestEvent","CreatedAt":"2019-05-15T03:20:10","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24370","RelatedDescription":null,"RelatedBody":"Flexible array is a feature of ISO C99, that ISO C++ has not ([yet](https://thephd.github.io/vendor/future_cxx/papers/d1039.html))\r\nincluded. Therefore clang and gcc with `-fpedantic` and msvc with\r\n`/Wall` warn about it, and are equally unhappy when flexible array is\r\nused in C++ code.\r\n\r\nThe exception in CoreCLR is `FastTable` class, where there is only one\r\nmember which is a flexible array. The length of array is written at a\r\nspecific offset of contents array.\r\n\r\ngcc 6+ does not like this particular case, and gives a fatal error that\r\ncannot be suppressed by regular means (`-Wno-XXX`):\r\n\r\n```\r\nerror: flexible array member FastTable::contents in an otherwise empty class FastTable\r\n    size_t contents[];\r\n                    ^\r\n```\r\n\r\nFix is to either not wrap this single field in concrete data structure\r\nor use a zero-length array instead, which produces same assembly code\r\nas the flexible array; tested with clang, gcc and msvc.\r\n\r\nRead about this fix here: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=69550"},{"Id":"9627525362","Type":"PullRequestEvent","CreatedAt":"2019-05-15T03:20:05","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24370","RelatedDescription":"Closed pull request \"Switch to zero-length array in otherwise empty class\" (#24370) at dotnet/coreclr","RelatedBody":"Flexible array is a feature of ISO C99, that ISO C++ has not ([yet](https://thephd.github.io/vendor/future_cxx/papers/d1039.html))\r\nincluded. Therefore clang and gcc with `-fpedantic` and msvc with\r\n`/Wall` warn about it, and are equally unhappy when flexible array is\r\nused in C++ code.\r\n\r\nThe exception in CoreCLR is `FastTable` class, where there is only one\r\nmember which is a flexible array. The length of array is written at a\r\nspecific offset of contents array.\r\n\r\ngcc 6+ does not like this particular case, and gives a fatal error that\r\ncannot be suppressed by regular means (`-Wno-XXX`):\r\n\r\n```\r\nerror: flexible array member FastTable::contents in an otherwise empty class FastTable\r\n    size_t contents[];\r\n                    ^\r\n```\r\n\r\nFix is to either not wrap this single field in concrete data structure\r\nor use a zero-length array instead, which produces same assembly code\r\nas the flexible array; tested with clang, gcc and msvc.\r\n\r\nRead about this fix here: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=69550"},{"Id":"9627271016","Type":"PullRequestEvent","CreatedAt":"2019-05-15T02:07:54","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24577","RelatedDescription":"Merged pull request \"Fix issues reported by PREfast static analysis tool\" (#24577) at dotnet/coreclr","RelatedBody":""},{"Id":"9627257585","Type":"IssuesEvent","CreatedAt":"2019-05-15T02:04:03","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24583","RelatedDescription":"Opened issue \"Test failed: System.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte\" (#24583) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_minopts_tst/196/\r\n\r\n**Failed tests:**\r\nSystem.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte\r\n\r\n**Log:**\r\n```\r\nSystem.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 78\r\n      Actual:   79\r\n      Stack Trace:\r\n        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_minopts/_/fx/src/System.Memory/tests/ReadOnlySpan/LastIndexOfAny.byte.cs(391,0): at System.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte()\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9627831992","Type":"PullRequestEvent","CreatedAt":"2019-05-15T04:53:27","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11343","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.1.6xx\" (#11343) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9627727708","Type":"PullRequestEvent","CreatedAt":"2019-05-15T04:20:47","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11337","RelatedDescription":"Merged pull request \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#11337) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"9627725020","Type":"PullRequestEvent","CreatedAt":"2019-05-15T04:19:56","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11341","RelatedDescription":"Merged pull request \"Update aspnet, coresetup to rtm-35537, 2.1.0, respectively (release/2.2.1xx)\" (#11341) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"9627091246","Type":"PullRequestEvent","CreatedAt":"2019-05-15T01:16:17","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11333","RelatedDescription":"Merged pull request \"Merge rel/1.1.0-MSRC into rel/1.1.0\" (#11333) at dotnet/cli","RelatedBody":""},{"Id":"9626835439","Type":"PullRequestEvent","CreatedAt":"2019-05-15T00:01:36","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11344","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#11344) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9626835221","Type":"PullRequestEvent","CreatedAt":"2019-05-15T00:01:33","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11343","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.1.6xx\" (#11343) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9624551591","Type":"PullRequestEvent","CreatedAt":"2019-05-14T17:23:34","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1185","RelatedDescription":"Merged pull request \"Fail CI build if APICompat baseline files would change\" (#1185) at dotnet/standard","RelatedBody":"Currently, if a change in Arcade would cause changes in the APICompat baseline files, the baseline files are rewritten without throwing an error. If somebody makes such a change without checking in the changes to the APICompat baselines, the CI should fail. This change achieves that. Resolves https://github.com/dotnet/standard/issues/1184.\r\n\r\n@ericstj @terrajobst PTAL"},{"Id":"9624551564","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1184","RelatedDescription":"Closed issue \"Fail CI when APICompat Baseline files change\" (#1184) at dotnet/standard","RelatedBody":"Right now, when a change to Standard causes a change to the APICompat baseline(s), the build succeeds, and the baseline files are re-written with the change. In CI, we should fail the build on changes to the APICompat baseline files (rather than silently rewriting them).\r\n\r\nCC @ericstj @terrajobst "},{"Id":"9622250374","Type":"PullRequestEvent","CreatedAt":"2019-05-14T12:39:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1191","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1191) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19263.3\r\n\r\n"},{"Id":"9621999332","Type":"PullRequestEvent","CreatedAt":"2019-05-14T12:04:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1191","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1191) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19263.3\r\n\r\n"},{"Id":"9618368510","Type":"PullRequestEvent","CreatedAt":"2019-05-14T00:00:26","Actor":"JohnTortugo","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1189","RelatedDescription":"Merged pull request \"Update azure-pipelines.yml\" (#1189) at dotnet/standard","RelatedBody":"Related to: https://github.com/dotnet/core-eng/issues/6291"},{"Id":"9618065726","Type":"IssuesEvent","CreatedAt":"2019-05-13T22:41:57","Actor":"yangsong2828","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1190","RelatedDescription":"Opened issue \"HttpModule with Microsoft.AspNetCore.Http\" (#1190) at dotnet/standard","RelatedBody":"We have multiple projects depend on one common IIS module, say Logging module.\r\nHowever, we can't move all projects to asp.net core at one shot. But we want to move one at a time.\r\nIf I port it to middleware, it can't be used by legacy IIS projects any more.\r\nSo what is your recommendation to move those common piece to asp .net core? Thanks."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9627491636","Type":"IssuesEvent","CreatedAt":"2019-05-15T03:10:16","Actor":"zhongzepeng","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/37662","RelatedDescription":"Opened issue \"Application Crash\" (#37662) at dotnet/corefx","RelatedBody":"Environment: docker\r\nVersion: netcore 2.2\r\nDmesg log:\r\nDotnet [20498]: segfault at 80300e05 IP 00007fc0a8513863 sp 00007fc014e2e560 error 4 in libgdiplus.so.0.0.0[7fc0a84d3000+64000]\r\n\r\n\r\nHow to catch this Exception"},{"Id":"9627484442","Type":"PullRequestEvent","CreatedAt":"2019-05-15T03:08:17","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37637","RelatedDescription":"Merged pull request \"Fix System.Diagnostics.Process.[x]ProcessorTime on macOS\" (#37637) at dotnet/corefx","RelatedBody":"Fixes #37614\r\n\r\nAffects on macOS:\r\n- `Process.UserProcessorTime`\r\n- `Process.PrivilegedProcessorTime`\r\n- `Process.TotalProcessorTime`\r\n\r\nDiscussed with @stephentoub  in #37614, this PR implements the proposed fix.\r\n\r\nShort summary (more in #37614):\r\nThe `rusage_info_v3` mac API uses nanoseconds unit, which was passed without any conversion to `TimeSpan`’s Int64-based constructor, which expects a value with a 100-nanosecond unit. Therfore values reported on macOS were 100x of the correct value.\r\n\r\nFix: we simply convert the `rusage_info_v3` nanosec values to 100-nanosec unit.\r\n\r\nAlso added a test, which fails with the original code on my machine and passes with the code in this PR. Since the `TestProcessorTime` test is disabled for UWP (https://github.com/dotnet/corefx/issues/31908) I suspect we will have similar problems with the new test. Let's see... "},{"Id":"9627484428","Type":"IssuesEvent","CreatedAt":"2019-05-15T03:08:17","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37614","RelatedDescription":"Closed issue \"Process.GetCurrentProcess().TotalProcessorTime returns strange values on macOS\" (#37614) at dotnet/corefx","RelatedBody":"I'd like to gather CPU usage information and for this I use the `System.Diagnostics.Process` class. On macOS the `Process.TotalProcessorTime` property seems to return values that are higher than I'd expect. E.g. in a 5 sec timeframe with a 12 core CPU I see values higher than `12 * 5sec`.\r\n\r\nReproducer (This returns valid values both on Windows - compared to Task Manager - and Linux, but returns seemingly invalid values on macOS): \r\n\r\n```\r\nusing System;\r\nusing System.Timers;\r\n\r\nnamespace ProcessTimeRepro\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var t = new Timer(5000);\r\n\r\n            var process = System.Diagnostics.Process.GetCurrentProcess();\r\n\r\n            Console.WriteLine($\"Pid: {process.Id}\");\r\n            Console.WriteLine($\"ProcessorCount: {Environment.ProcessorCount}\");\r\n\r\n            var b = false;\r\n            var lastSample = DateTime.UtcNow;\r\n            var lastTotalProcessorTime = new TimeSpan();\r\n            \r\n            t.Elapsed += (sender, eventArgs) =>\r\n            {\r\n                var currentDateTime = DateTime.UtcNow;\r\n                var currentTotalProcessorTime = process.TotalProcessorTime;\r\n                if (b)\r\n                {\r\n                    var timeDiff = (currentDateTime - lastSample).TotalMilliseconds;\r\n                    var cpuUsage = (currentTotalProcessorTime - lastTotalProcessorTime).TotalMilliseconds;\r\n                    \r\n                    Console.WriteLine(\"=======timer elapsed=======\");\r\n                    Console.WriteLine($\"total: {currentTotalProcessorTime}\");\r\n                    Console.WriteLine($\"system: {process.UserProcessorTime}\");\r\n                    Console.WriteLine($\"user: {process.PrivilegedProcessorTime}\");\r\n                    Console.WriteLine();\r\n                    Console.WriteLine($\"timeDiff: {timeDiff} ms\");\r\n                    Console.WriteLine($\"cpuUsageDiff: {cpuUsage} ms\");\r\n                    Console.WriteLine($\"Cpu usage: {cpuUsage / (timeDiff * Environment.ProcessorCount) * 100}%\");\r\n                    Console.WriteLine(\"=======timer elapsed end=======\");\r\n                    Console.WriteLine();\r\n                }\r\n\r\n                lastTotalProcessorTime = currentTotalProcessorTime;\r\n                lastSample = currentDateTime;\r\n                b = true;\r\n\r\n\r\n            };\r\n\r\n            t.Start();\r\n\r\n            Console.WriteLine(\"Work starts\");\r\n            var rnd = new Random();\r\n            for (int i = 0; i < int.MaxValue; i++)\r\n            {\r\n                if (rnd.Next() < 0) //make sure real work is done, this is not optimized away\r\n                {\r\n                    Console.WriteLine(\"bla\");\r\n                }\r\n            }\r\n\r\n            Console.WriteLine(\"Work done\");\r\n\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIn short: we have 1 thread doing some work (generate random numbers) for a while and a timer that captures CPU usage.\r\n\r\n\r\nOutput on macOS (macOS Mojave 10.14.4, MacBook Pro 2018, 2.9 Ghz Intel Core i9):\r\n\r\n```\r\ndotnet run -c Release\r\nPid: 2989\r\nProcessorCount: 12\r\nWork starts\r\n=======timer elapsed=======\r\ntotal: 00:16:45.0497401\r\nsystem: 00:16:34.7100833\r\nuser: 00:00:10.3697294\r\n\r\ntimeDiff: 4992.206 ms\r\ncpuUsageDiff: 497341.0443 ms\r\nCpu usage: 830.195849790654%\r\n=======timer elapsed end=======\r\n\r\n=======timer elapsed=======\r\ntotal: 00:25:04.1338311\r\nsystem: 00:24:49.7922366\r\nuser: 00:00:14.3803124\r\n\r\ntimeDiff: 5004.88 ms\r\ncpuUsageDiff: 499084.091 ms\r\nCpu usage: 830.995766465263%\r\n=======timer elapsed end=======\r\n\r\nWork done\r\n=======timer elapsed=======\r\ntotal: 00:26:53.6510655\r\nsystem: 00:26:38.4277113\r\nuser: 00:00:15.2315355\r\n\r\ntimeDiff: 4997.881 ms\r\ncpuUsageDiff: 109517.2344 ms\r\nCpu usage: 182.606112470465%\r\n=======timer elapsed end=======\r\n\r\n=======timer elapsed=======\r\ntotal: 00:26:53.7347993\r\nsystem: 00:26:38.4790252\r\nuser: 00:00:15.2648931\r\n\r\ntimeDiff: 4996.953 ms\r\ncpuUsageDiff: 83.7338 ms\r\nCpu usage: 0.139641430821276%\r\n=======timer elapsed end=======\r\n``` \r\n\r\nE.g. when the timer fires the 2. time we have this output:\r\n```\r\ntimeDiff: 5004.88 ms\r\ncpuUsageDiff: 499084.091 ms\r\n```\r\nThis means in a `5004.88ms` time-slot this app consumed `499084.091 ms` CPU, which is I think impossible. As you can see this is a 12 core machine, so in case all 12 cores do 100% work on this process the CPU time would be `12*5004.88ms`, if I'm not mistaken, there is no way to have a higher CPU time in this time range. Also in the reproducer, the work is done on a single thread, so I'd expect to have a 100% CPU usage on 1 core and some minimal other work done by the timer (probably negligible), so for a `timeDiff: 5004.88 ms` the `cpuUsageDiff` should be also close to 5sec - and this is exactly what I see on Linux and Windows. \r\n\r\nSo either I do something wrong, or the value returned from `Process.TotalProcessorTime` is very inaccurate.\r\n\r\nAlso when I compare the increasing `total` value (that's the plain value of `Process.TotalProcessorTime` to Activity Monitor (for Windows people: that's the Task manager of macOS) or `top` I see very different numbers. `top` and Activity monitor report significantly lower numbers.\r\n\r\nAre we sure that `rusage_info_v3` returns `info.ri_system_time` and `info.ri_user_time` reported in 100-nanosecond units [here](https://github.com/dotnet/corefx/blob/6ca16758a5d454c1f1b04975bf55f259dd71fc49/src/System.Diagnostics.Process/src/System/Diagnostics/Process.OSX.cs#L79)?"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9627926216","Type":"IssuesEvent","CreatedAt":"2019-05-15T05:20:53","Actor":"sandreenko","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/35719","RelatedDescription":"Opened issue \"Unhandled Exception: System.NullReferenceException\" (#35719) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nMicrosoft (R) Visual C# Compiler version 2.10.0.0 (b9fb1610)\r\nor\r\nMicrosoft (R) Visual C# Compiler version 3.100.19.22309 (ce8ac3f7)\r\n**Steps to Reproduce**:\r\nrun `csc //langversion:?`.\r\n\r\n**Expected Behavior**:\r\n`error CS2006: Command-line syntax error:` \r\n**Actual Behavior**:\r\n```\r\nUnhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CommandLineParser.<ExpandFileNamePattern>d__46.MoveNext()\r\n   at Microsoft.CodeAnalysis.CommandLineParser.<ParseFileArgument>d__41.MoveNext()\r\n   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CommonCompiler..ctor(CommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompiler..ctor(CSharpCommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc.Run(String[] args, BuildPaths buildPaths, TextWriter textWriter, IAnalyzerAssemblyLoader analyzerLoader)\r\n   at Microsoft.CodeAnalysis.CommandLine.DesktopBuildClient.RunLocalCompilation(String[] arguments, BuildPaths buildPaths, TextWriter textWriter)\r\n   at Microsoft.CodeAnalysis.CommandLine.BuildClient.RunCompilation(IEnumerable`1 originalArguments, BuildPaths buildPaths, TextWriter textWriter)\r\n   at Microsoft.CodeAnalysis.CommandLine.DesktopBuildClient.Run(IEnumerable`1 arguments, RequestLanguage language, CompileFunc compileFunc, IAnalyzerAssemblyLoader analyzerAssemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Program.Main(String[] args)\r\n```"},{"Id":"9627186913","Type":"PullRequestEvent","CreatedAt":"2019-05-15T01:43:57","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35718","RelatedDescription":"Opened pull request \"Fix our readme badges\" (#35718) at dotnet/roslyn","RelatedBody":"- Fix the image URLs to point to the current configuration names\r\n- Reorder the Spanish/Linux with Mono columns, because the labels were wrong."},{"Id":"9627139993","Type":"PullRequestEvent","CreatedAt":"2019-05-15T01:30:22","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35711","RelatedDescription":"Merged pull request \"Merge release/dev16.1 to release/dev16.2-preview1\" (#35711) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.2-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.2-preview1\ngit reset --hard upstream/release/dev16.2-preview1\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.2-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9627139588","Type":"PullRequestEvent","CreatedAt":"2019-05-15T01:30:17","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35712","RelatedDescription":"Merged pull request \"Merge release/dev16.1 to release/dev16.1-vs-deps\" (#35712) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.1-vs-deps\ngit reset --hard upstream/release/dev16.1-vs-deps\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9627139283","Type":"PullRequestEvent","CreatedAt":"2019-05-15T01:30:12","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35713","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#35713) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9627138935","Type":"PullRequestEvent","CreatedAt":"2019-05-15T01:30:07","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35714","RelatedDescription":"Merged pull request \"Merge master to features/lspSupport\" (#35714) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9627102225","Type":"PullRequestEvent","CreatedAt":"2019-05-15T01:19:30","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35717","RelatedDescription":"Opened pull request \"Adjust logo tests to recognize official build versions\" (#35717) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/35696\r\n\r\nThe official build uses a version that has multiple `-xyz` parts. So the compiler version output can look like this: `3.1.0-10-19264-03 (<SHA>)`. We have a couple of tests that parse this and replace the first part with `A.B.C-d` and the second part with `(HASH)`. But the regex only recognized a single optional `-xyz` part."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9626685655","Type":"PullRequestEvent","CreatedAt":"2019-05-14T23:21:25","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7157","RelatedDescription":"Closed pull request \"[WIP] Temporary increase time out for the KnownGood set of CoreCLR tests\" (#7157) at dotnet/corert","RelatedBody":"Check how long it takes to run the KnowGood set of tests on Windows and\r\nLinux. In addition, find a list of all failing tests."},{"Id":"9626684919","Type":"PullRequestEvent","CreatedAt":"2019-05-14T23:21:14","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7124","RelatedDescription":"Closed pull request \"[WIP] Test performance of another CI machine pool\" (#7124) at dotnet/corert","RelatedBody":"This is just a test"},{"Id":"9626209504","Type":"PullRequestEvent","CreatedAt":"2019-05-14T21:39:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7424","RelatedDescription":"Opened pull request \"Update dependencies\" (#7424) at dotnet/corert","RelatedBody":""},{"Id":"9626056298","Type":"PullRequestEvent","CreatedAt":"2019-05-14T21:13:10","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7423","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7423) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @cshung @sywhang @tannergooding"},{"Id":"9625883051","Type":"PullRequestEvent","CreatedAt":"2019-05-14T20:45:38","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7370","RelatedDescription":"Closed pull request \"Experimental fix for infinite generic expansion in CPAOT\" (#7370) at dotnet/corert","RelatedBody":"As usual, writing the e-mail on this subject helped me clear my\r\nthoughts and I subsequently realized there's a rather elegant way\r\nto do this very cheaply (at least in some cases): we just add the\r\nnotion of a \"parent method\" to MethodWithGCInfo and, upon creation\r\nof a new MethodEntrypoint, we throw if the history linked list\r\ncontains the same generic method, just instantiated with a different\r\nparameter variants.\r\n\r\nI don't insist on merging this in if you think it's fundamentally\r\nflawed or incomplete; I just wanted to point it out as an easy option\r\nto fix some occurrences of this issue; it does fix compilation of\r\nthe test\r\n\r\nJIT\\Regression\\clr-x64-JIT\\v4.0\\devdiv374539\\DevDiv_374539\\DevDiv_374539.exe\r\n\r\nI mentioned in the e-mail. I'm looking forward to feedback.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9625834228","Type":"PullRequestEvent","CreatedAt":"2019-05-14T20:38:16","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7410","RelatedDescription":"Merged pull request \"SuperIlc support for the issues.targets file\" (#7410) at dotnet/corert","RelatedBody":"This change implements a new option --issues-path that can be used\r\nto specify the path to explicit CoreCLR test exclusion XML file.\r\nThis is useful when running CoreCLR test suites so that we filter\r\nout tests known to be failing or hanging and thus reduce noise in\r\nour CPAOT results.\r\n\r\nAs the issues.targets is technically an msbuild project file, I have\r\nleveraged MSBuild interface libraries to evaluate the conditional\r\nexpressions in the file much like we do in .NET Native when evaluating\r\nthe bugdata.ProjectN.xml file. For now I have set many of the project\r\nproperties to arbitrary values, that's up to further cleanup once\r\nwe start expanding our targeting matrix.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9624469136","Type":"PullRequestEvent","CreatedAt":"2019-05-14T17:11:16","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7423","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7423) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9624406112","Type":"PullRequestEvent","CreatedAt":"2019-05-14T17:01:53","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7415","RelatedDescription":"Merged pull request \"Move CanInline to CompilationModuleGroup\" (#7415) at dotnet/corert","RelatedBody":"As a preparatory change towards adding support for large version\r\nbubble to CPAOT I'm proposing to move CanInline from Compilation to\r\nCompilationModuleGroup in accordance with Simon's and Michal's\r\nfeedback - this refactoring will make it much easier to decouple\r\nthe set of assemblies being compiled from the set of assemblies\r\nwe can inline against (in large version bubble mode anything\r\ncan be inlined).\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9624190394","Type":"PullRequestEvent","CreatedAt":"2019-05-14T16:30:28","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7410","RelatedDescription":null,"RelatedBody":"This change implements a new option --issues-path that can be used\r\nto specify the path to explicit CoreCLR test exclusion XML file.\r\nThis is useful when running CoreCLR test suites so that we filter\r\nout tests known to be failing or hanging and thus reduce noise in\r\nour CPAOT results.\r\n\r\nAs the issues.targets is technically an msbuild project file, I have\r\nleveraged MSBuild interface libraries to evaluate the conditional\r\nexpressions in the file much like we do in .NET Native when evaluating\r\nthe bugdata.ProjectN.xml file. For now I have set many of the project\r\nproperties to arbitrary values, that's up to further cleanup once\r\nwe start expanding our targeting matrix.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9624151420","Type":"IssuesEvent","CreatedAt":"2019-05-14T16:25:04","Actor":"ctaggart","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7422","RelatedDescription":"Closed issue \"RhpETWLogLiveCom error on Debian 9 build\" (#7422) at dotnet/corert","RelatedBody":"I got `dotnet publish -r win-x64`  working on Windows for my project, but when I try to build from `mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch` docker image, I get an error about `RhpETWLogLiveCom` missing.\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.08 ms for /src/Shirley/Shirley.fsproj.\r\n  Shirley -> /src/Shirley/bin/release/netcoreapp2.2/linux-x64/Shirley.dll\r\n  /usr/bin/clang-3.9\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(ReadOnlySpan`1<char>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(System.ReadOnlySpan`1<Char>) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32,Encoding)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32, System.Text.Encoding) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[],int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[], Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[])` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[]) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `[S.P.CoreLib]System.Activator.CreateInstanceIntrinsic<__Canon>()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.__Canon System.Activator.CreateInstanceIntrinsic() [/src/Shirley/Shirley.fsproj]\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWShouldWalkCom':\r\n  (__managedcode+0x613573): undefined reference to `RhpETWShouldWalkCom'\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWLogLiveCom':\r\n  (__managedcode+0x61359b): undefined reference to `RhpETWLogLiveCom'\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/src/Shirley/Shirley.fsproj]\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.2/linux-x64/native/Shirley.o\" -o \"bin/release/netcoreapp2.2/linux-x64/native/Shirley\" /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libbootstrapper.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libRuntime.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.CoreLib.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.TypeLoader.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Globalization.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.IO.Compression.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Net.Security.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt\" exited with code 1. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nBased on https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md, I installed clang with:\r\n```\r\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\r\necho \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" | tee -a /etc/apt/sources.list\r\napt-get update\r\napt-get install cmake clang-3.9 libicu-dev uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev -y\r\n```\r\n\r\nThe CoreRT version is:\r\n```\r\n      \"Microsoft.DotNet.ILCompiler\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.0-alpha-*, )\",\r\n        \"resolved\": \"1.0.0-alpha-27714-01\",\r\n        \"contentHash\": \"Xa2TzZJKoyhMJF7rx+/WjXYOYfQEprdr6CGptdQ0ix4kVI2icYJQnbm+TALQHfb9okW0X3ebNrlPxXhJW461Qw==\"\r\n      },\r\n```\r\n\r\nI noticed this import here and noticed it hasn't been changed in a while.\r\nhttps://github.com/dotnet/corert/blame/master/src/System.Private.CoreLib/src/System/Runtime/RuntimeImports.cs#L724-L729\r\n\r\nAm I missing a dependency?\r\n\r\n"},{"Id":"9623897461","Type":"IssuesEvent","CreatedAt":"2019-05-14T15:51:52","Actor":"ctaggart","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7422","RelatedDescription":"Opened issue \"RhpETWLogLiveCom error on Debian 9 build\" (#7422) at dotnet/corert","RelatedBody":"I got `dotnet publish -r win-x64`  working on Windows for my project, but when I try to build from `mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch` docker image, I get an error about `RhpETWLogLiveCom` missing.\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.08 ms for /src/Shirley/Shirley.fsproj.\r\n  Shirley -> /src/Shirley/bin/release/netcoreapp2.2/linux-x64/Shirley.dll\r\n  /usr/bin/clang-3.9\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(ReadOnlySpan`1<char>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(System.ReadOnlySpan`1<Char>) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32,Encoding)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32, System.Text.Encoding) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[],int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[], Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[])` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[]) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `[S.P.CoreLib]System.Activator.CreateInstanceIntrinsic<__Canon>()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.__Canon System.Activator.CreateInstanceIntrinsic() [/src/Shirley/Shirley.fsproj]\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWShouldWalkCom':\r\n  (__managedcode+0x613573): undefined reference to `RhpETWShouldWalkCom'\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWLogLiveCom':\r\n  (__managedcode+0x61359b): undefined reference to `RhpETWLogLiveCom'\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/src/Shirley/Shirley.fsproj]\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.2/linux-x64/native/Shirley.o\" -o \"bin/release/netcoreapp2.2/linux-x64/native/Shirley\" /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libbootstrapper.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libRuntime.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.CoreLib.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.TypeLoader.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Globalization.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.IO.Compression.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Net.Security.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt\" exited with code 1. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nBased on https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md, I installed clang with:\r\n```\r\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\r\necho \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" | tee -a /etc/apt/sources.list\r\napt-get update\r\napt-get install cmake clang-3.9 libicu-dev uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev -y\r\n```\r\n\r\nThe CoreRT version is:\r\n```\r\n      \"Microsoft.DotNet.ILCompiler\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.0-alpha-*, )\",\r\n        \"resolved\": \"1.0.0-alpha-27714-01\",\r\n        \"contentHash\": \"Xa2TzZJKoyhMJF7rx+/WjXYOYfQEprdr6CGptdQ0ix4kVI2icYJQnbm+TALQHfb9okW0X3ebNrlPxXhJW461Qw==\"\r\n      },\r\n```\r\n\r\nI noticed this import here and noticed it hasn't been changed in a while.\r\nhttps://github.com/dotnet/corert/blame/master/src/System.Private.CoreLib/src/System/Runtime/RuntimeImports.cs#L724-L729\r\n\r\nAm I missing a dependency?\r\n\r\n"},{"Id":"9620318094","Type":"IssuesEvent","CreatedAt":"2019-05-14T08:04:14","Actor":"mariopasquali","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7421","RelatedDescription":"Opened issue \"Compiling ARM on x64\" (#7421) at dotnet/corert","RelatedBody":"Hi all,\r\n\r\nIt is a few weeks I am trying to set up an environment for compiling a Linux-ARM executable on a x64 machine, without much luck for now.  \r\n\r\nI have set up multiple machines including Debian 9, Ubuntu 16, Ubuntu 18, all 64-bits, even tried with 32-bits versions.  I am currently working on a Ubuntu 16 x64.  Probably an obvious question, but could someone confirm this is supported for compiling an ARM32 output?\r\n\r\nThere are a few possible typos in the following document that are possibly confusing:\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/cross-building.md\r\n\r\n- `\"In addition, to cross compile CoreCLR\"` should it be CoreRT?\r\n- `\"Cross compiling CoreCLR\"` should it be CoreRT?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/\"` should it be corert?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/arm ./build.sh\"` should it be corert?\r\n\r\nAnother aspect that I didn't get right is the section \"Using CoreRT for cross compiling under arm on x86 host\".  Is this the section applying to my case where I whish building an output for ARM32 on x86?  If yes, then when would the previous section \"Cross compiling CoreCLR\" apply?\r\n\r\nA few more remarks on the section \"Using CoreRT for cross compiling under arm on x86 host\":\r\n- The steps for \"Build CoreFX\" seems outdated.  Should probably by updated with https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md.  \r\n- `\"./build.sh x86 debug verbose cross crosstarget skiptests\"` There is no parameter crosstarget in build.sh as far as I can see.  Is this outdated?  I am running into various issues when trying to run this step without \"crosstarget\" parameter, like file not found of ConstrainedCallSupportHelpers.S, `\"GetUnwindProcInfo is not supported on this arch yet.\"`, etc.\r\n- Regarding step 4, it would be helpful to give examples of the variables.  What is supposed to be ${WORKING_DIR}?  The output of the application that should be compiled?\r\n\r\nThank you,\r\nMario "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9625475005","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:43:51","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3010","RelatedDescription":"Closed issue \"GenerateDepsFile no longer respects FilesToSkip from runtime packs\" (#3010) at dotnet/sdk","RelatedBody":"- Runtime pack dependencies in deps.json and in the DependencyContext model have a \"runtimepack.\" prefix prependend to the nuget package id (see https://github.com/dotnet/sdk/commit/16eddf3d635133c35f42974dcd491c8263066b37#diff-0723634e548f98293eebe3970b71e0ddR328).\r\n- The heuristic in `GetPackageParts` gets the package id from the name of a nuspec in a parent directory:\r\n https://github.com/dotnet/sdk/blob/ab2176b3447e3e7820b5a340408110b6d498f907/src/Tasks/Common/NuGetUtils.cs#L48-L52\r\n\r\n`GenerateDepsFile` uses `GetPackageParts` to build the list of packages with dependencies to remove. When it looks for files to trim from the dependency model, it doesn't match any of the dependencies that have the \"runtimepack.\" prefix, so those files don't get skipped.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"444124057","IsPullRequest":true,"CreatedAt":"2019-05-15T05:26:37","Actor":"kouvel","Number":"24576","RawContent":null,"Title":"Enable QuickJit by default","State":"closed","Body":"- From a recent discussion, the consensus was to enable QuickJit by default for 3.0. In startup perf, this mode appears to be consistently better than with QuickJit disabled, and usually equal or better than with TieredCompilation disabled.\r\n- QuickJitForLoops remains disabled by default, so this enables QuickJit only for methods that don't contain loops","Url":"https://github.com/dotnet/coreclr/pull/24576","RelatedDescription":"Closed or merged PR \"Enable QuickJit by default\" (#24576)"},{"Id":"444126650","IsPullRequest":true,"CreatedAt":"2019-05-15T02:07:54","Actor":"jkotas","Number":"24577","RawContent":null,"Title":"Fix issues reported by PREfast static analysis tool","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24577","RelatedDescription":"Closed or merged PR \"Fix issues reported by PREfast static analysis tool\" (#24577)"},{"Id":"444201762","IsPullRequest":false,"CreatedAt":"2019-05-15T02:04:02","Actor":"VincentBu","Number":"24583","RawContent":null,"Title":"Test failed: System.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_minopts_tst/196/\r\n\r\n**Failed tests:**\r\nSystem.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte\r\n\r\n**Log:**\r\n```\r\nSystem.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 78\r\n      Actual:   79\r\n      Stack Trace:\r\n        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_minopts/_/fx/src/System.Memory/tests/ReadOnlySpan/LastIndexOfAny.byte.cs(391,0): at System.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24583","RelatedDescription":"Open issue \"Test failed: System.SpanTests.ReadOnlySpanTests.TestMatchLastIndexOfAny_Byte_ManyByte\" (#24583)"},{"Id":"444190603","IsPullRequest":true,"CreatedAt":"2019-05-15T01:08:09","Actor":"josalem","Number":"24582","RawContent":null,"Title":"Diagnostics IPC","State":"open","Body":"CLR side of work to implement dotnet/diagnostics#198.\r\n\r\nFor a detailed description of the intended behavior of this change, please read the spec linked above.\r\n\r\n**NO MERGE** until corresponding work has been completed in the clients (see: dotnet/diagnostics) as these are *breaking changes*.\r\n\r\nThese changes will formalize an IPC protocol for the Diagnostics Server in the runtime.  The current main use of this server is EventPipe functionality.  This work will make it more predictable and uniform for internal and potentially external developers to interact with EventPipe and future diagnostics services offered on the Diagnostics Server.\r\n\r\nCC - @MarioHewardt @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/24582","RelatedDescription":"Open PR \"Diagnostics IPC\" (#24582)"},{"Id":"444188606","IsPullRequest":true,"CreatedAt":"2019-05-15T00:57:25","Actor":"MichalStrehovsky","Number":"24581","RawContent":null,"Title":"Delete unicode API emulator","State":"open","Body":"Per https://github.com/dotnet/coreclr/pull/21169#issuecomment-491899862.\r\n\r\nAlso deleting the UnicodeData.txt file that doesn't appear to be used anywhere. I thought it was used to generate unicode_data.cpp, but that was apparently generated [from Windows OS](https://github.com/lewischeng-ms/sscli/blob/master/tools/genpalunitable/genpalunitable.cpp) that the tool was executed on a decade ago.","Url":"https://github.com/dotnet/coreclr/pull/24581","RelatedDescription":"Open PR \"Delete unicode API emulator\" (#24581)"},{"Id":"444070664","IsPullRequest":true,"CreatedAt":"2019-05-15T00:10:12","Actor":"MattGal","Number":"24572","RawContent":null,"Title":"Use Helix Client docker feature for Nano runs","State":"closed","Body":"The old Nano queue is unreliable, stuck at version 1709, and will be deprecated; this change moves to running on a Server RS4 host with an 1803 version, and an 1809 version should be available soonish.\r\n\r\n@jkoritzinsky  - it seems like  https://github.com/dotnet/coreclr/issues/21693 is closed, should this also be on the open runs?\r\n\r\n(Weird \"\" and ` syntax is to work around the funkiness of Yaml / PS1)","Url":"https://github.com/dotnet/coreclr/pull/24572","RelatedDescription":"Closed or merged PR \"Use Helix Client docker feature for Nano runs\" (#24572)"},{"Id":"444119749","IsPullRequest":true,"CreatedAt":"2019-05-14T23:08:07","Actor":"jkoritzinsky","Number":"24575","RawContent":null,"Title":"Add explicit cmake dependency between clretwrc and eventing_headers.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24575","RelatedDescription":"Closed or merged PR \"Add explicit cmake dependency between clretwrc and eventing_headers.\" (#24575)"},{"Id":"444129665","IsPullRequest":true,"CreatedAt":"2019-05-14T22:40:37","Actor":"dotnet-maestro-bot","Number":"24578","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-27617-05, servicing-27618-01, respectively (release/2.2)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/24578","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-27617-05, servicing-27618-01, respectively (release/2.2)\" (#24578)"},{"Id":"444145246","IsPullRequest":false,"CreatedAt":"2019-05-14T22:02:53","Actor":"kouvel","Number":"24580","RawContent":null,"Title":"NullReferenceException in tests/src/GC/API/GC/GetTotalAllocatedBytes.cs","State":"open","Body":"See https://dev.azure.com/dnceng/public/_build/results?buildId=186486&view=ms.vss-test-web.build-test-results-tab\r\n\r\n```\r\nUnhandled Exception: System.TypeInitializationException: The type initializer for 'Test' threw an exception. ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\nat Test.Get_GetTotalAllocatedBytesDelegate() in /__w/1/s/tests/src/GC/API/GC/GetTotalAllocatedBytes.cs:line 26\r\nat Test..cctor() in /__w/1/s/tests/src/GC/API/GC/GetTotalAllocatedBytes.cs:line 15\r\n--- End of inner exception stack trace ---\r\nat Test.TestSingleThreaded() in /__w/1/s/tests/src/GC/API/GC/GetTotalAllocatedBytes.cs:line 70\r\nat Test.Main() in /__w/1/s/tests/src/GC/API/GC/GetTotalAllocatedBytes.cs:line 161\r\n/root/helix/work/workitem/GC/API/GC/GetTotalAllocatedBytes/GetTotalAllocatedBytes.sh: line 259: 589 Aborted (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code: 1\r\nRaw output file: /root/helix/work/workitem/GC/API/Reports/GC.API/GC/GetTotalAllocatedBytes/GetTotalAllocatedBytes.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun GetTotalAllocatedBytes.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/GC/API/GC/GetTotalAllocatedBytes/GetTotalAllocatedBytes.sh\r\nExpected: True\r\nActual: False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24580","RelatedDescription":"Open issue \"NullReferenceException in tests/src/GC/API/GC/GetTotalAllocatedBytes.cs\" (#24580)"},{"Id":"444143252","IsPullRequest":true,"CreatedAt":"2019-05-14T21:56:52","Actor":"dotnet-maestro-bot","Number":"24579","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @wtgodbe\n* @dotnet-maestro-bot\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/24579","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#24579)"},{"Id":"444099964","IsPullRequest":true,"CreatedAt":"2019-05-14T21:53:48","Actor":"dotnet-maestro-bot","Number":"24574","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-27617-04, servicing-27617-02, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/24574","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-27617-04, servicing-27617-02, respectively (release/2.1)\" (#24574)"},{"Id":"444034690","IsPullRequest":true,"CreatedAt":"2019-05-14T20:54:30","Actor":"jkoritzinsky","Number":"24570","RawContent":null,"Title":"Disable IJW tests on ARM32","State":"closed","Body":"Fixes #23358 ","Url":"https://github.com/dotnet/coreclr/pull/24570","RelatedDescription":"Closed or merged PR \"Disable IJW tests on ARM32\" (#24570)"},{"Id":"444084238","IsPullRequest":false,"CreatedAt":"2019-05-14T19:25:13","Actor":"mrlacey","Number":"24573","RawContent":null,"Title":"Proposal: Make local variables available upon exception at runtime","State":"open","Body":"**Summary**\r\nWhen executing through VisualStudio, having access to local variables can be invaluable for debugging exceptions.\r\nIt would be great if there was a way to also make this information available to runtime exceptions, even if that comes at a trade-off with performance.\r\n\r\n**Detail**\r\nException messages and stack traces are useful but often don't provide enough information to identify the root cause of an exception.\r\nHaving access to the variables assigned within a method and the variables passed to that method at the time of an exception would help identify the cause of more exceptions and in less time.\r\nIt's possible to manually track the values of individual variables but doing this for all variables, in all methods, requires writing lots of code and adds noise to the code. The desire behind this proposal is to be able to get this information without having developers write lots of extra code.\r\nI'd be willing to trade some performance for access to this information.\r\n\r\n**What the change may look like**\r\nIdeally, this information would be as a new property (`Locals`) on the `Exception` object and would be a `Dictionary<string, object>` where the key is the variable name and the value is the variable value.\r\nIf restrictions make this impossible, I'd settle for `Dictionary<string, string>` where the value is the serialized variable contents.\r\n\r\nI could then run code like this:\r\n\r\n```csharp\r\nprivate bool DoSomething(string name, int rank)\r\n{\r\n    var someValue = 42;\r\n    bool result = false;\r\n\r\n    try\r\n    {\r\n        var otherValue = new System.Text.StringBuilder();\r\n\r\n        for (int i = 0; i < rank; i++)\r\n        {\r\n            // Some other code that throws an error\r\n        }\r\n    }\r\n    catch (Exception exc)\r\n    {\r\n        foreach (var local in exc.Locals)\r\n        {\r\n            Console.WriteLine($\"{local.Key}: {local.Value}\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nDoSomething(\"matt\", 1);\r\n```\r\n\r\nand see console output like:\r\n\r\n```\r\nname: matt\r\nrank: 1\r\nsomeValue: 42\r\nresult: false\r\notherValue: \r\ni: 0\r\n```\r\n\r\n\r\n**Consequences of this change**\r\nMaking this possible will mean removing some performance/garbage collection optimizations that prevent access to the required information.\r\nRather than forcing a drop in performance on all applications, this new functionality should be made available only when enabled during compilation. (via a new switch?)--I imagine such a variation in behavior would be similar to what is done when debugging through VS.\r\nThis would enable enhanced debugging information for those applications willing (and able) to make the trade in performance.\r\nIf the change in behavior was not enabled, the new property would always be null.\r\n","Url":"https://github.com/dotnet/coreclr/issues/24573","RelatedDescription":"Open issue \"Proposal: Make local variables available upon exception at runtime\" (#24573)"},{"Id":"444061096","IsPullRequest":false,"CreatedAt":"2019-05-14T18:28:42","Actor":"marksmeltzer","Number":"24571","RawContent":null,"Title":"Proposal: use progressive JIT to remove init checks on static classes after static constructor is known to have run","State":"open","Body":"Currently the runtime takes a lock surrounding external access to a class that contains any static constructor (whether written explicitly or implicitly). Those locks add up to substantial runtime cost, especially on frequently accessed classes.\r\n\r\nSince we have progressive JIT in the CLR now, there is an opportunity to swap out the code that executes with more efficient code that removes the locking once the static constructor is known to have been initialized. (For example, the first pass JIT code containing the static lock could contain a final instruction to trigger the re-JIT to remove the init locks. So that way, when the static constructor runs, it could trigger the code generation + swap logic.)\r\n\r\nI would prefer to have that implemented in such a way that doesn't affect debugging -- we'll only hit the static constructor once in any case, so I suspect this would be safe to do even on CLI modules compiled without the optimization flag.\r\n\r\nI did a quick check of existing issues and I don't see anything obviously related... Please let me know if this has already been addressed or discussed.","Url":"https://github.com/dotnet/coreclr/issues/24571","RelatedDescription":"Open issue \"Proposal: use progressive JIT to remove init checks on static classes after static constructor is known to have run\" (#24571)"},{"Id":"443990181","IsPullRequest":true,"CreatedAt":"2019-05-14T15:43:56","Actor":"janvorli","Number":"24569","RawContent":null,"Title":"Remove obsolete DomainLocalModule::m_pADThunkTable","State":"open","Body":"The m_pADThunkTable is not used anywhere.\r\nThis change removes the member, its getter and setter and also updates\r\noffsets used by assembler helpers.","Url":"https://github.com/dotnet/coreclr/pull/24569","RelatedDescription":"Open PR \"Remove obsolete DomainLocalModule::m_pADThunkTable\" (#24569)"},{"Id":"443988725","IsPullRequest":false,"CreatedAt":"2019-05-14T15:41:14","Actor":"mthalman","Number":"24568","RawContent":null,"Title":"Update to use Alpine 3.9","State":"open","Body":"CoreCLR is currently being tested on Alpine 3.6 which is EOL. This should be updated to the latest, Alpine 3.9.  This should apply to both 2.x and 3.0.\r\n\r\nExample data showing 3.6 is being used: https://mc.dot.net/#/product/netcore/21msrc/source/prodcon~2Fcoreclr~2Frelease~2F2.1-msrc~2F/type/test~2Ffunctional~2Fcli~2F/build/20190417.03\r\n\r\nAlso, be sure to check that the CI build is using 3.9 as well.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24568","RelatedDescription":"Open issue \"Update to use Alpine 3.9\" (#24568)"},{"Id":"443963244","IsPullRequest":false,"CreatedAt":"2019-05-14T14:54:29","Actor":"jzabroski","Number":"24567","RawContent":null,"Title":"Unobtrusive/Extrospection API for JIT events?","State":"open","Body":"@jkotas Is there any way I can check whether the JIT has inlined something?\r\n\r\nFor example from some code I have written, how would I tell this has been inlined:\r\n\r\n```csharp\r\nstatic class Constructor<T>\r\n  where T : new()\r\n{\r\n  public static readonly Func<IScope, T> Empty = Expression.Lambda<Func<IScope, T>>(scope => scope.Exists<T>() ?? new T()).Compile();\r\n}\r\n```\r\n\r\nSimilarly, is there any \"Auditing Machine\" I can query inside the runtime to determine how far away the code is/was from being JIT'ed?\r\n\r\nAlternatively, is there a simple test harness where I can write some C#, verify it compiles down to specific IL, then verify that IL maps to specific hot path optimizations?  (Are there performance test case examples of how the CoreCLR team verifies code generation passes as being useful?)\r\n\r\nPossibly related: https://github.com/dotnet/coreclr/issues/18330 - this is not quite the same thing, because this related issue seems to be more about \"data warehouse\" facilities that dovetail off of such an \"auditing machine\".","Url":"https://github.com/dotnet/coreclr/issues/24567","RelatedDescription":"Open issue \"Unobtrusive/Extrospection API for JIT events?\" (#24567)"},{"Id":"443745168","IsPullRequest":false,"CreatedAt":"2019-05-14T07:07:18","Actor":"wieslawsoltes","Number":"24566","RawContent":null,"Title":"RUNREADYTORUNCOMPILER : warning : Could not load type 'Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan' from assembly 'Microsoft.CodeAnalysis.CSharp","State":"open","Body":"When using:\r\n```\r\n<PublishReadyToRun>True</PublishReadyToRun>\r\n```\r\nI get warnings:\r\n```\r\nRUNREADYTORUNCOMPILER : warning : Could not load type 'Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan' from assembly 'Microsoft.CodeAnalysis.CSharp, Version=1.3.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. while resolving 0x68000b72 - InvalidToken. [d:\\a\\1\\s\\src\\Draw2D\\Draw2D.csproj]\r\nRUNREADYTORUNCOMPILER : warning : Could not load type 'Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan' from assembly 'Microsoft.CodeAnalysis.CSharp, Version=1.3.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. while resolving 0x68000b73 - InvalidToken. [d:\\a\\1\\s\\src\\Draw2D\\Draw2D.csproj]\r\n```\r\n.NET Core version:\r\n```\r\n3.0.100-preview5-011568\r\n```\r\npublish command:\r\n```\r\ndotnet publish ./src/Draw2D/Draw2D.csproj -f netcoreapp3.0 -c Release -r win7-x64 -o Draw2D_netcoreapp3.0_win7-x64\r\n```\r\n\r\nbuild log:\r\nhttps://dev.azure.com/wieslawsoltes/GitHub/_build/results?buildId=1761&view=logs&jobId=275f1d19-1bd8-5591-b06b-07d489ea915a&taskId=37ff9366-b26f-54de-6861-3886e8f3e5fc&lineStart=37&lineEnd=38&colStart=1&colEnd=1","Url":"https://github.com/dotnet/coreclr/issues/24566","RelatedDescription":"Open issue \"RUNREADYTORUNCOMPILER : warning : Could not load type 'Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan' from assembly 'Microsoft.CodeAnalysis.CSharp\" (#24566)"},{"Id":"443737829","IsPullRequest":false,"CreatedAt":"2019-05-14T06:45:47","Actor":"wieslawsoltes","Number":"24565","RawContent":null,"Title":"When running published executable with PublishReadyToRun=True Unhandled Exception: System.BadImageFormatException: Could not load file or assembly","State":"open","Body":"Exception:\r\n```\r\nUnhandled Exception: System.BadImageFormatException: Could not load file or assembly '/home/wieslaw_soltes/projects/Draw2D/Draw2D_netcoreapp3.0_debian.8-x64/Draw2D.dll'. An attempt was made to load a program with an incorrect format.\r\n```\r\nOS:\r\n```\r\nPRETTY_NAME=\"Debian GNU/Linux 9 (stretch)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"9\"\r\nVERSION=\"9 (stretch)\"\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n```\r\n.NET Core version:\r\n```\r\n3.0.100-preview5-011568\r\n```\r\nPublish Command:\r\n```\r\ndotnet publish ./src/Draw2D/Draw2D.csproj -f netcoreapp3.0 -c Release -r debian.8-x64 -o Draw2D_netcoreapp3.0_debian.8-x64\r\n```\r\nto fix I had to change rid from `debian.8-x64` to `debian.9-x64`:\r\n```\r\ndotnet publish ./src/Draw2D/Draw2D.csproj -f netcoreapp3.0 -c Release -r debian.9-x64 -o Draw2D_netcoreapp3.0_debian.9-x64\r\n```\r\nthan it works.","Url":"https://github.com/dotnet/coreclr/issues/24565","RelatedDescription":"Open issue \"When running published executable with PublishReadyToRun=True Unhandled Exception: System.BadImageFormatException: Could not load file or assembly\" (#24565)"},{"Id":"443663560","IsPullRequest":true,"CreatedAt":"2019-05-14T03:59:33","Actor":"AaronRobinsonMSFT","Number":"24562","RawContent":null,"Title":"Miscellaneous build issues","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24562","RelatedDescription":"Closed or merged PR \"Miscellaneous build issues\" (#24562)"},{"Id":"443698336","IsPullRequest":false,"CreatedAt":"2019-05-14T03:55:29","Actor":"mhamri","Number":"24564","RawContent":null,"Title":"Debug.Fail is crashing the application in linux","State":"open","Body":"```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.203\r\n Commit:    e5bab63eca\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.203/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.4\r\n  Commit:  f95848e524\r\n\r\n.NET Core SDKs installed:\r\n  2.2.203 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nI am running an application that is published in release mode. still the Debug.Fail() is getting hit and it causes the application exit right away, even though the Debug.Fail() is in a try-catch module but it causes the application to exit immediately. even though the application is published and environment set to production and configuration is released still the problem exists, I saw the same error back to 2016-2018, but look like it's still not fixed \r\n\r\n\r\n```\r\npublic static IWebHost SeedConfigData(this IWebHost host)\r\n        {\r\n            using (var scope = host.Services.CreateScope())\r\n            {\r\n                var serviceProvider = scope.ServiceProvider;\r\n\r\n                try\r\n                {\r\n                    Task.Run(async () =>\r\n                    {\r\n                        var dataseed = serviceProvider.GetService<DbSeederConfigData>();\r\n                        await dataseed.ApplySeeds();\r\n                    }).Wait();\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    Debug.Fail(e.Message, e.StackTrace);\r\n                    var logger = serviceProvider.GetRequiredService<ILogger<DbSeederConfigData>>();\r\n                    logger.LogError(e, \"An error occurred seeding the DB.\");\r\n                }\r\n            }\r\n            return host;\r\n        }\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24564","RelatedDescription":"Open issue \"Debug.Fail is crashing the application in linux\" (#24564)"},{"Id":"443665591","IsPullRequest":true,"CreatedAt":"2019-05-14T01:10:51","Actor":"sdmaclea","Number":"24563","RawContent":null,"Title":"RemoveThrowMessage","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24563","RelatedDescription":"Closed or merged PR \"RemoveThrowMessage\" (#24563)"},{"Id":"443661734","IsPullRequest":true,"CreatedAt":"2019-05-14T00:50:33","Actor":"sywhang","Number":"24561","RawContent":null,"Title":"Add more runtime GC counters","State":"open","Body":"Part of https://github.com/dotnet/coreclr/issues/20372. \r\n\r\nThis adds these new runtime counters:\r\n- % time in GC counter\r\n- Gen 0 / 1 / 2 / LOH size counter\r\n- Allocation rate counter\r\n\r\nChanges in the GC side:\r\n- Added 4 new interfaces in IGCHeap:\r\n    - `int GetPercentTimeInGC()`\r\n    - `uint64_t GetGenerationSize(int gen)`\r\n    - `uint64_t GetLOHSize()`\r\n    - `uint64_t GetTotalAllocated()`\r\n- Add corresponding internal calls and internal only APIs in GC.cs that use these.\r\n- Added `GCCounterData` struct that keeps track of stats now that `GetPerfCounters()` is nonexistent. \r\n- I tried to leave `gcee.cpp` as it is as much as possible in case we want to add more counters (i.e. commited bytes, induced GCs, etc.) in the future due to customer needs. These are currently ifdef-ed out. \r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24561","RelatedDescription":"Open PR \"Add more runtime GC counters\" (#24561)"},{"Id":"443655244","IsPullRequest":true,"CreatedAt":"2019-05-14T00:16:31","Actor":"echesakovMSFT","Number":"24560","RawContent":null,"Title":"Enable JIT\\superpmi\\superpmicollect on Linux and macOS","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/22009.\r\n\r\nDepends on: https://github.com/dotnet/coreclr/pull/24537 https://github.com/dotnet/coreclr/pull/24508","Url":"https://github.com/dotnet/coreclr/pull/24560","RelatedDescription":"Open PR \"Enable JIT\\superpmi\\superpmicollect on Linux and macOS\" (#24560)"},{"Id":"443648091","IsPullRequest":true,"CreatedAt":"2019-05-13T23:48:26","Actor":"AaronRobinsonMSFT","Number":"24558","RawContent":null,"Title":"Was too aggressive with changes to PackageOutputPath property.","State":"closed","Body":"  - This represents this repo's generated packages rather than\r\n    packages it consumes.\r\n\r\ncc @RussKeldorph @sbomer ","Url":"https://github.com/dotnet/coreclr/pull/24558","RelatedDescription":"Closed or merged PR \"Was too aggressive with changes to PackageOutputPath property.\" (#24558)"},{"Id":"443649040","IsPullRequest":true,"CreatedAt":"2019-05-13T23:48:03","Actor":"fadimounir","Number":"24559","RawContent":null,"Title":"Fix bug where crossgen would throw OOM error","State":"open","Body":"Fix bug where crossgen would throw OOM when given an input with no dir-separator characters (arithmetic overflow bug).\r\nUsing crossgen from the SDK (dotnet publish) is not impacted by this issue.\r\n\r\nThe /CreatePerfMap codepath doesn't have this bug.\r\n\r\nFixes #24458 ","Url":"https://github.com/dotnet/coreclr/pull/24559","RelatedDescription":"Open PR \"Fix bug where crossgen would throw OOM error\" (#24559)"},{"Id":"443633562","IsPullRequest":true,"CreatedAt":"2019-05-13T22:44:38","Actor":"fadimounir","Number":"24557","RawContent":null,"Title":"Making crossgen throw when compiling with the PartialNgen flag and no IBC data","State":"open","Body":"Fixes #21495 ","Url":"https://github.com/dotnet/coreclr/pull/24557","RelatedDescription":"Open PR \"Making crossgen throw when compiling with the PartialNgen flag and no IBC data\" (#24557)"},{"Id":"443613211","IsPullRequest":true,"CreatedAt":"2019-05-13T22:34:32","Actor":"AaronRobinsonMSFT","Number":"24556","RawContent":null,"Title":"The PackagesDir property is used in places that expected a trailing s…","State":"closed","Body":"…lash.\r\n\r\ncc @RussKeldorph ","Url":"https://github.com/dotnet/coreclr/pull/24556","RelatedDescription":"Closed or merged PR \"The PackagesDir property is used in places that expected a trailing s…\" (#24556)"},{"Id":"443575463","IsPullRequest":true,"CreatedAt":"2019-05-13T20:01:02","Actor":"tannergooding","Number":"24555","RawContent":null,"Title":"Ensure the code size estimate for emitIns_R_S is correct for 4 byte SSE instruction.","State":"open","Body":"This resolves #24545 by applying a targeted fix. The code size logic really needs to be updated to have this stuff centralized...","Url":"https://github.com/dotnet/coreclr/pull/24555","RelatedDescription":"Open PR \"Ensure the code size estimate for emitIns_R_S is correct for 4 byte SSE instruction.\" (#24555)"},{"Id":"443562490","IsPullRequest":true,"CreatedAt":"2019-05-13T19:26:15","Actor":"echesakovMSFT","Number":"24554","RawContent":null,"Title":"Unconditionally capture output of xUnit tests","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24554","RelatedDescription":"Open PR \"Unconditionally capture output of xUnit tests\" (#24554)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"444177493","IsPullRequest":true,"CreatedAt":"2019-05-15T04:53:26","Actor":"dotnet-bot","Number":"11343","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11343","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#11343)"},{"Id":"444096476","IsPullRequest":true,"CreatedAt":"2019-05-15T04:20:46","Actor":"dotnet-maestro-bot","Number":"11337","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11337","RelatedDescription":"Closed or merged PR \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#11337)"},{"Id":"444126428","IsPullRequest":true,"CreatedAt":"2019-05-15T04:19:56","Actor":"dotnet-maestro-bot","Number":"11341","RawContent":null,"Title":"Update aspnet, coresetup to rtm-35537, 2.1.0, respectively (release/2.2.1xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11341","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to rtm-35537, 2.1.0, respectively (release/2.2.1xx)\" (#11341)"},{"Id":"444050915","IsPullRequest":true,"CreatedAt":"2019-05-15T01:16:17","Actor":"peterhuene","Number":"11333","RawContent":null,"Title":"Merge rel/1.1.0-MSRC into rel/1.1.0","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11333","RelatedDescription":"Closed or merged PR \"Merge rel/1.1.0-MSRC into rel/1.1.0\" (#11333)"},{"Id":"444177516","IsPullRequest":true,"CreatedAt":"2019-05-15T00:01:36","Actor":"dotnet-bot","Number":"11344","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11344","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#11344)"},{"Id":"444126479","IsPullRequest":true,"CreatedAt":"2019-05-14T21:09:18","Actor":"dotnet-maestro-bot","Number":"11342","RawContent":null,"Title":"Update aspnet, coresetup to rtm-35537, 2.1.0, respectively (release/2.2.2xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11342","RelatedDescription":"Open PR \"Update aspnet, coresetup to rtm-35537, 2.1.0, respectively (release/2.2.2xx)\" (#11342)"},{"Id":"444125885","IsPullRequest":true,"CreatedAt":"2019-05-14T21:07:47","Actor":"livarcocc","Number":"11340","RawContent":null,"Title":"Update Roslyn to 3.2.0-beta1-19263-09","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11340","RelatedDescription":"Open PR \"Update Roslyn to 3.2.0-beta1-19263-09\" (#11340)"},{"Id":"444125450","IsPullRequest":true,"CreatedAt":"2019-05-14T21:06:41","Actor":"livarcocc","Number":"11339","RawContent":null,"Title":"Update Roslyn to 3.2.0-beta1-19263-09","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11339","RelatedDescription":"Open PR \"Update Roslyn to 3.2.0-beta1-19263-09\" (#11339)"},{"Id":"444096519","IsPullRequest":true,"CreatedAt":"2019-05-14T20:59:07","Actor":"dotnet-maestro-bot","Number":"11338","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11338","RelatedDescription":"Closed or merged PR \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#11338)"},{"Id":"444092999","IsPullRequest":false,"CreatedAt":"2019-05-14T19:47:02","Actor":"Rick-Anderson","Number":"11336","RawContent":null,"Title":"Remove \"please\" in error messages.","State":"open","Body":"Per the MS Style guide\r\n\r\nAvoid please except in situations where the customer is asked to do something inconvenient or the application or site is to blame for the situation.\r\n\r\nA search yields 864 lines with please. In almost every case, please should be removed.\r\n\r\nExamples:\r\n\r\n* ` <source>Found more than one project in `{0}`. Please specify which one to use.</source>`\r\n*  `<source>Please specify at least one {0}.</source>`\r\n* ` <value>Please specify one package reference to add.</value>`\r\n*    Unable to generate a temporary file for project '{0}'. Cannot add package reference. **Please** clear the temp directory and try again.\r\n\r\nI'd be  willing to help remove these.\r\n","Url":"https://github.com/dotnet/cli/issues/11336","RelatedDescription":"Open issue \"Remove \"please\" in error messages.\" (#11336)"},{"Id":"444077126","IsPullRequest":true,"CreatedAt":"2019-05-14T19:07:43","Actor":"livarcocc","Number":"11335","RawContent":null,"Title":"Update Roslyn 3.1.0-beta4-19261-04","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11335","RelatedDescription":"Open PR \"Update Roslyn 3.1.0-beta4-19261-04\" (#11335)"},{"Id":"444076607","IsPullRequest":true,"CreatedAt":"2019-05-14T19:06:22","Actor":"livarcocc","Number":"11334","RawContent":null,"Title":"Update Roslyn 3.1.0-beta4-19261-04","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11334","RelatedDescription":"Open PR \"Update Roslyn 3.1.0-beta4-19261-04\" (#11334)"},{"Id":"444011401","IsPullRequest":true,"CreatedAt":"2019-05-14T18:04:01","Actor":"livarcocc","Number":"11327","RawContent":null,"Title":"Updating MSBuild to 16.1.76 for CLI 2.1.7xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11327","RelatedDescription":"Closed or merged PR \"Updating MSBuild to 16.1.76 for CLI 2.1.7xx\" (#11327)"},{"Id":"443877165","IsPullRequest":true,"CreatedAt":"2019-05-14T17:40:58","Actor":"dotnet-maestro[bot]","Number":"11325","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/14/2019 6:18 AM\r\n- **Commit**: a76e46b75ed94ba2ad6ee6497ef8d606599add4c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19263.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11325","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11325)"},{"Id":"444012122","IsPullRequest":true,"CreatedAt":"2019-05-14T17:39:26","Actor":"livarcocc","Number":"11328","RawContent":null,"Title":"Insert MSBuild 16.1.76","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11328","RelatedDescription":"Closed or merged PR \"Insert MSBuild 16.1.76\" (#11328)"},{"Id":"444030484","IsPullRequest":true,"CreatedAt":"2019-05-14T17:13:15","Actor":"livarcocc","Number":"11332","RawContent":null,"Title":"Update MSBuild 16.2.0-preview.19264.2","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11332","RelatedDescription":"Open PR \"Update MSBuild 16.2.0-preview.19264.2\" (#11332)"},{"Id":"444029986","IsPullRequest":true,"CreatedAt":"2019-05-14T17:12:04","Actor":"livarcocc","Number":"11331","RawContent":null,"Title":"Update MSBuild 16.2.0-preview.19264.2","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11331","RelatedDescription":"Open PR \"Update MSBuild 16.2.0-preview.19264.2\" (#11331)"},{"Id":"442929031","IsPullRequest":false,"CreatedAt":"2019-05-14T16:58:35","Actor":"brettrowberry","Number":"11316","RawContent":null,"Title":"Add `dotnet -v` in addition to `dotnet --version`","State":"closed","Body":"## Steps to reproduce\r\n`dotnet -v`\r\n\r\n## Expected  behavior\r\n`3.0.100-preview5-011568`\r\n\r\n## Actual behavior\r\n`Unknown option: -v`\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11316","RelatedDescription":"Closed issue \"Add `dotnet -v` in addition to `dotnet --version`\" (#11316)"},{"Id":"443223304","IsPullRequest":false,"CreatedAt":"2019-05-14T16:54:43","Actor":"gulshan","Number":"11320","RawContent":null,"Title":"Show project templates and file templates separately","State":"closed","Body":"Currently with `dotnet new` command, all available templates are listed. Some of them are project templates and some are file templates. Requesting to show them separately, for clarity.","Url":"https://github.com/dotnet/cli/issues/11320","RelatedDescription":"Closed issue \"Show project templates and file templates separately\" (#11320)"},{"Id":"444018010","IsPullRequest":true,"CreatedAt":"2019-05-14T16:43:44","Actor":"livarcocc","Number":"11330","RawContent":null,"Title":"Updating the branding to 2.2.4xx.","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11330","RelatedDescription":"Open PR \"Updating the branding to 2.2.4xx.\" (#11330)"},{"Id":"444015721","IsPullRequest":true,"CreatedAt":"2019-05-14T16:38:41","Actor":"livarcocc","Number":"11329","RawContent":null,"Title":"Updating the branding to 2.1.8xx.","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11329","RelatedDescription":"Open PR \"Updating the branding to 2.1.8xx.\" (#11329)"},{"Id":"443879858","IsPullRequest":true,"CreatedAt":"2019-05-14T13:28:39","Actor":"dotnet-maestro[bot]","Number":"11326","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190513.1\r\n- **Date Produced**: 5/13/2019 12:46 PM\r\n- **Commit**: d119ed5c72ad6792c1bdf6feaa2ba9bafaacccd8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19263.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11326","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11326)"},{"Id":"443629837","IsPullRequest":true,"CreatedAt":"2019-05-14T00:44:54","Actor":"JohnTortugo","Number":"11323","RawContent":null,"Title":"Update .vsts-ci.yml","State":"closed","Body":"Related to: https://github.com/dotnet/core-eng/issues/6291","Url":"https://github.com/dotnet/cli/pull/11323","RelatedDescription":"Closed or merged PR \"Update .vsts-ci.yml\" (#11323)"},{"Id":"443654716","IsPullRequest":false,"CreatedAt":"2019-05-14T00:14:01","Actor":"wli3","Number":"11324","RawContent":null,"Title":"Flaky test: TestPersistenceChannelConstructorAndDisposeOnDeadlock","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/11324","RelatedDescription":"Open issue \"Flaky test: TestPersistenceChannelConstructorAndDisposeOnDeadlock\" (#11324)"},{"Id":"442986286","IsPullRequest":true,"CreatedAt":"2019-05-13T23:59:24","Actor":"dotnet-maestro[bot]","Number":"11317","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 6:20 PM\r\n- **Commit**: 372e67d51167792db2fdaeebf48b6d8fb962e713\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19260.2\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 3:03 PM\r\n- **Commit**: 8ca875262a8c6565d2fefeb6356aa02df2c4ac86\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19261.1\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 3:12 PM\r\n- **Commit**: 3be65641f392ecd21f7245eb3463d034f8f39e5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19262.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11317","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11317)"},{"Id":"443548482","IsPullRequest":true,"CreatedAt":"2019-05-13T18:50:57","Actor":"KevinRansom","Number":"11322","RawContent":null,"Title":"Update nunit","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11322","RelatedDescription":"Open PR \"Update nunit\" (#11322)"},{"Id":"443548262","IsPullRequest":true,"CreatedAt":"2019-05-13T18:50:22","Actor":"KevinRansom","Number":"11321","RawContent":null,"Title":"Update nunit","State":"open","Body":"Update the templates for nunit.\r\n","Url":"https://github.com/dotnet/cli/pull/11321","RelatedDescription":"Open PR \"Update nunit\" (#11321)"},{"Id":"442986891","IsPullRequest":true,"CreatedAt":"2019-05-13T13:05:21","Actor":"dotnet-maestro[bot]","Number":"11318","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190510.1\r\n- **Date Produced**: 5/10/2019 12:57 PM\r\n- **Commit**: 9e805b1333b385f3e499edce81a0f2aa3efcbced\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19260.1\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 12:53 PM\r\n- **Commit**: 616a1409140bf49f90a791685d10df2764dba01f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19261.1\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:44 PM\r\n- **Commit**: 5649b1fe3b92032190fe5b24fc7bb3f16451ccdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19262.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11318","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11318)"},{"Id":"443161539","IsPullRequest":false,"CreatedAt":"2019-05-13T00:01:39","Actor":"orassr","Number":"11319","RawContent":null,"Title":"sdk mismatch","State":"open","Body":"Normally, when type `dotnet ef` the result is:\r\n\r\n                              _/\\__\r\n                  ---==/          \\\\\r\n         ___  ___        |.          \\|\\\r\n        | __|| __|        |         )   \\\\\\\r\n        | _| | _|          \\_/       |  //|\\\\\r\n        |___||_|                   /   \\\\\\/\\\\\r\n\r\n\r\nthis time all I'm getting is that error again and again no matter what command it is\r\nI tried to update database through Entity Framework when this error:\r\n\r\n```\r\nPM> dotnet ef database update\r\ndotnet : The application to execute does not exist: 'C:\\Users\\orass\\.dotnet\\tools\\.store\\dotnet-ef\\2.2.4-servicing-10062\\dotnet-ef\\2.2.4-servicing-10062\\tools\\netcoreapp2.2\\any\\dotnet-ef.dll'.\r\nAt line:1 char:1\r\n\r\n+ dotnet ef database update\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (The application...dotnet-ef.dll'.:String) [], RemoteException\r\n    + FullyQualifiedErrorId : NativeCommandError`\r\n \r\n\r\n> PM> dotnet ef --version\r\ndotnet : The application to execute does not exist: 'C:\\Users\\orass\\.dotnet\\tools\\.store\\dotnet-ef\\2.2.4-servicing-10062\\dotnet-ef\\2.2.4-servicing-10062\\tools\\netcoreapp2.2\\any\\dotnet-ef.dll'.\r\nAt line:1 char:1\r\n+ dotnet ef --version\r\n+ ~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (The application...dotnet-ef.dll'.:String) [], RemoteException\r\n    + FullyQualifiedErrorId : NativeCommandError\r\n \r\nPM> dotnet ef\r\ndotnet : The application to execute does not exist: 'C:\\Users\\orass\\.dotnet\\tools\\.store\\dotnet-ef\\2.2.4-servicing-10062\\dotnet-ef\\2.2.4-servicing-10062\\tools\\netcoreapp2.2\\any\\dotnet-ef.dll'.\r\nAt line:1 char:1\r\n+ dotnet ef\r\n+ ~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (The application...dotnet-ef.dll'.:String) [], RemoteException\r\n    + FullyQualifiedErrorId : NativeCommandError\r\n```\r\n***\r\nAccording to the `dotnet --info`, the Base Path use sdk/3...compare to the error that says it looking for \\tools\\netcoreapp2.2\r\n\r\n****I believe this mismatch happens because I recently installed Visual Studio 2019 Preview****\r\n```\r\nPM> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007474 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007517 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview2-008533 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\nI use VS 2019 Preview with the new SDK especially for Xamarin. My server side is .Net Core 2.x \r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11319","RelatedDescription":"Open issue \"sdk mismatch\" (#11319)"},{"Id":"442875504","IsPullRequest":false,"CreatedAt":"2019-05-10T21:25:02","Actor":"aschlick","Number":"11315","RawContent":null,"Title":"preview 5: dotnet ef not found","State":"closed","Body":"## Steps to reproduce\r\nRun a project with entity framework core\r\n`dotnet ef -h` should work\r\nupdate from dotnet core 3 preview 3 (3.0.100-preview3-010431) to either preview 4 or 5. \r\n`dotnet ef -h` \r\n\r\n## Expected  behavior\r\nentity framework help text\r\n\r\n## Actual behavior\r\n`Cannot find command 'dotnet ef', please run the following command to install`\r\n\r\n## Environment data\r\n<details><summary>`dotnet --info` output:</summary>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n</details>\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11315","RelatedDescription":"Closed issue \"preview 5: dotnet ef not found\" (#11315)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"442864446","IsPullRequest":true,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1185","RawContent":null,"Title":"Fail CI build if APICompat baseline files would change","State":"closed","Body":"Currently, if a change in Arcade would cause changes in the APICompat baseline files, the baseline files are rewritten without throwing an error. If somebody makes such a change without checking in the changes to the APICompat baselines, the CI should fail. This change achieves that. Resolves https://github.com/dotnet/standard/issues/1184.\r\n\r\n@ericstj @terrajobst PTAL","Url":"https://github.com/dotnet/standard/pull/1185","RelatedDescription":"Closed or merged PR \"Fail CI build if APICompat baseline files would change\" (#1185)"},{"Id":"442475952","IsPullRequest":false,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1184","RawContent":null,"Title":"Fail CI when APICompat Baseline files change","State":"closed","Body":"Right now, when a change to Standard causes a change to the APICompat baseline(s), the build succeeds, and the baseline files are re-written with the change. In CI, we should fail the build on changes to the APICompat baseline files (rather than silently rewriting them).\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1184","RelatedDescription":"Closed issue \"Fail CI when APICompat Baseline files change\" (#1184)"},{"Id":"443876288","IsPullRequest":true,"CreatedAt":"2019-05-14T12:39:27","Actor":"dotnet-maestro[bot]","Number":"1191","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19263.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1191","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1191)"},{"Id":"443629557","IsPullRequest":true,"CreatedAt":"2019-05-14T00:00:25","Actor":"JohnTortugo","Number":"1189","RawContent":null,"Title":"Update azure-pipelines.yml","State":"closed","Body":"Related to: https://github.com/dotnet/core-eng/issues/6291","Url":"https://github.com/dotnet/standard/pull/1189","RelatedDescription":"Closed or merged PR \"Update azure-pipelines.yml\" (#1189)"},{"Id":"443632814","IsPullRequest":false,"CreatedAt":"2019-05-13T22:41:56","Actor":"yangsong2828","Number":"1190","RawContent":null,"Title":"HttpModule with Microsoft.AspNetCore.Http","State":"open","Body":"We have multiple projects depend on one common IIS module, say Logging module.\r\nHowever, we can't move all projects to asp.net core at one shot. But we want to move one at a time.\r\nIf I port it to middleware, it can't be used by legacy IIS projects any more.\r\nSo what is your recommendation to move those common piece to asp .net core? Thanks.","Url":"https://github.com/dotnet/standard/issues/1190","RelatedDescription":"Open issue \"HttpModule with Microsoft.AspNetCore.Http\" (#1190)"},{"Id":"443361033","IsPullRequest":true,"CreatedAt":"2019-05-13T12:19:21","Actor":"dotnet-maestro[bot]","Number":"1188","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19262.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1188","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1188)"},{"Id":"443096722","IsPullRequest":true,"CreatedAt":"2019-05-12T12:18:57","Actor":"dotnet-maestro[bot]","Number":"1187","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19261.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1187","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1187)"},{"Id":"442986105","IsPullRequest":true,"CreatedAt":"2019-05-11T12:28:56","Actor":"dotnet-maestro[bot]","Number":"1186","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1186)"},{"Id":"439143422","IsPullRequest":true,"CreatedAt":"2019-05-10T20:25:17","Actor":"dotnet-maestro[bot]","Number":"1172","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190430.6\r\n- **Date Produced**: 4/30/2019 10:17 PM\r\n- **Commit**: ac8d88df02d246d3147338fcfb03b1b93dc84b53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19230.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190501.6\r\n- **Date Produced**: 5/2/2019 7:15 AM\r\n- **Commit**: ea9b2530a1559dd6426730aba52fca1924db2b65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19251.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190502.2\r\n- **Date Produced**: 5/2/2019 7:00 PM\r\n- **Commit**: ed63a7faf2d119829dd971be91bb46b6ebaa1dd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19252.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190503.8\r\n- **Date Produced**: 5/4/2019 2:00 AM\r\n- **Commit**: 4cacf7aa7b2cd8bdd042e721e6ad73d809dd5678\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19253.8\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190504.1\r\n- **Date Produced**: 5/4/2019 12:58 PM\r\n- **Commit**: 1b8589bbf53b9a5e819460798eff59830f39a3be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19254.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190505.2\r\n- **Date Produced**: 5/5/2019 2:25 PM\r\n- **Commit**: 6a34948f7bdbc3ceb2fb16441b49f7748a462646\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19255.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.1\r\n- **Date Produced**: 5/6/2019 5:27 PM\r\n- **Commit**: 917ed3ac79350e4072c724deb48404ee7d76ebef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19256.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.4\r\n- **Date Produced**: 5/6/2019 9:02 PM\r\n- **Commit**: fe003f91e82195c5657c79ffa8d2831c9f07c9dc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19256.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.12\r\n- **Date Produced**: 5/7/2019 5:12 AM\r\n- **Commit**: c31fac9f6899094226cb5cd77c85b8f60ecafa3d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19256.12\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190507.7\r\n- **Date Produced**: 5/8/2019 12:49 AM\r\n- **Commit**: bda52d7619f9420de46f2c39ffc972864bbcab63\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19257.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190508.5\r\n- **Date Produced**: 5/8/2019 10:17 PM\r\n- **Commit**: 9005cee9510d23535c09bd9b6be7c426e526c067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19258.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190509.9\r\n- **Date Produced**: 5/10/2019 12:31 AM\r\n- **Commit**: 155080ecb738e189db75f8f2461ebad75d955aa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19259.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1172","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1172)"},{"Id":"442461759","IsPullRequest":true,"CreatedAt":"2019-05-09T22:26:30","Actor":"terrajobst","Number":"1183","RawContent":null,"Title":"Seal types that cannot be inherited","State":"open","Body":"These changes are related to #1176 and address the same problem.\r\n\r\nFixes #1171.","Url":"https://github.com/dotnet/standard/pull/1183","RelatedDescription":"Open PR \"Seal types that cannot be inherited\" (#1183)"},{"Id":"439794677","IsPullRequest":true,"CreatedAt":"2019-05-09T21:46:08","Actor":"terrajobst","Number":"1175","RawContent":null,"Title":"Add bulk operations to Collection<T>","State":"closed","Body":"These APIs were [recently merged](https://github.com/dotnet/corefx/pull/35772) into CoreFx.\r\n\r\nThis fixes #1091.","Url":"https://github.com/dotnet/standard/pull/1175","RelatedDescription":"Closed or merged PR \"Add bulk operations to Collection<T>\" (#1175)"},{"Id":"442425601","IsPullRequest":true,"CreatedAt":"2019-05-09T21:41:45","Actor":"joperezr","Number":"1182","RawContent":null,"Title":"Fix official build which is failing when trying to publish the packages to BAR","State":"closed","Body":"cc: @wtgodbe \r\n\r\nOfficial builds are failing when trying to publish packages to BAR because the AssetsManifest file isn't being generated any longer. This was caused because of a breaking change in Arcade. These changes will fix this issue.","Url":"https://github.com/dotnet/standard/pull/1182","RelatedDescription":"Closed or merged PR \"Fix official build which is failing when trying to publish the packages to BAR\" (#1182)"},{"Id":"439815886","IsPullRequest":true,"CreatedAt":"2019-05-09T20:13:26","Actor":"terrajobst","Number":"1176","RawContent":null,"Title":"Prevent non-framework code from extending BaseNumberConverter","State":"closed","Body":"This fixes #1171.\r\n\r\nPlease note that this is technically an API breaking change (we shipped `BaseNumberConverter` in .NET Standard 2.0 with a protected constructor, which was mistake). But there is no way to derive and instantiate this class. An exception will get thrown if you try to instantiate the derived class. \r\n\r\nFor more details, see https://github.com/dotnet/corefx/pull/37278.\r\n\r\n/cc @ericstj ","Url":"https://github.com/dotnet/standard/pull/1176","RelatedDescription":"Closed or merged PR \"Prevent non-framework code from extending BaseNumberConverter\" (#1176)"},{"Id":"442368786","IsPullRequest":true,"CreatedAt":"2019-05-09T19:01:19","Actor":"joperezr","Number":"1181","RawContent":null,"Title":"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions","State":"closed","Body":"cc: @stephentoub @terrajobst \r\n\r\nResponding to changes made by https://github.com/dotnet/corefx/pull/37367 where the extnsion methods where moved to a new type. This is the first time I make a change like this so please do let me know if I missed anything.","Url":"https://github.com/dotnet/standard/pull/1181","RelatedDescription":"Closed or merged PR \"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions\" (#1181)"},{"Id":"441943870","IsPullRequest":true,"CreatedAt":"2019-05-08T21:39:57","Actor":"wtgodbe","Number":"1180","RawContent":null,"Title":"Add shims to netstandard2.1 for types that used to have OOB packages","State":"open","Body":"Resolves https://github.com/dotnet/corefx/issues/36719 & https://github.com/dotnet/standard/issues/1063. These TypeForward files were generated with `GenApi`, using the `netstandard2.0` assets from the packages I added to `netstandard.depproj`. \r\n\r\nStill to do:\r\n- Add a DARC subscription from CoreFx -> Standard\r\n- Add a placeholder file for `netstandard2.1` to the `System.Reflection.Emit*` packages in CoreFx - will be done by https://github.com/dotnet/corefx/pull/37532\r\n\r\n@ericstj @terrajobst PTAL\r\n\r\nCC @bartonjs ","Url":"https://github.com/dotnet/standard/pull/1180","RelatedDescription":"Open PR \"Add shims to netstandard2.1 for types that used to have OOB packages\" (#1180)"},{"Id":"439351218","IsPullRequest":true,"CreatedAt":"2019-05-08T17:55:44","Actor":"wtgodbe","Number":"1173","RawContent":null,"Title":"Update to the 3.0 SDK","State":"closed","Body":"CC @ViktorHofer @ericstj. This also contains a maestro update of Arcade dependencies.","Url":"https://github.com/dotnet/standard/pull/1173","RelatedDescription":"Closed or merged PR \"Update to the 3.0 SDK\" (#1173)"},{"Id":"441500740","IsPullRequest":false,"CreatedAt":"2019-05-08T00:36:05","Actor":"PHuhn","Number":"1179","RawContent":null,"Title":"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework","State":"open","Body":"Thanks for creating .Net Standard...\r\n\r\nI am attempting to migrate my .Net Framework libraries to .Net Standard, so my libraries will be available in .Net Framework and .Net Core. One of the libraries is using DataAnnotations as follows:\r\n```\r\npublic partial class LogData\r\n{\r\n    [Key, Column(Order = 1)]\r\n    [Required(ErrorMessage = \"Id is required.\")]\r\n    public long Id { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Date is required.\")]\r\n    public DateTime Date { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Application is required.\"), MaxLength(30, ErrorMessage = \"'Application' must be 30 or less characters.\")]\r\n    public string Application { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Method is required.\"), MaxLength(255, ErrorMessage = \"'Method' must be 255 or less characters.\")]\r\n    public string Method { get; set; }\r\n\r\n    [Required(ErrorMessage = \"LogLevel is required.\")]\r\n    [Range(typeof(byte), \"0\", \"4\", ErrorMessage = \"'LogLevel' must be between 0 and 4\")]\r\n    public byte LogLevel { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Level is required.\"), MaxLength(8, ErrorMessage = \"'Level' must be 8 or less characters.\")]\r\n    public string Level { get; set; }\r\n\r\n    [Required(ErrorMessage = \"UserAccount is required.\"), MaxLength(255, ErrorMessage = \"'UserAccount' must be 255 or less characters.\")]\r\n    public string UserAccount { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Message is required.\"), MaxLength(4000, ErrorMessage = \"'Message' must be 4000 or less characters.\")]\r\n    public string Message { get; set; }\r\n\r\n    [MaxLength(4000, ErrorMessage = \"'Exception' must be 4000 or less characters.\")]\r\n    public string Exception { get; set; }\r\n}\r\n```\r\nThe migration **up** method in the .Net Core console applications is as follows:\r\n```\r\nmigrationBuilder.CreateTable(\r\n    name: \"Logs\",\r\n    columns: table => new\r\n    {\r\n        Id = table.Column<long>(nullable: false)\r\n            .Annotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn),\r\n        Date = table.Column<DateTime>(nullable: false),\r\n        Application = table.Column<string>(maxLength: 30, nullable: false),\r\n        Method = table.Column<string>(maxLength: 255, nullable: false),\r\n        LogLevel = table.Column<byte>(nullable: false),\r\n        Level = table.Column<string>(maxLength: 8, nullable: false),\r\n        UserAccount = table.Column<string>(maxLength: 255, nullable: false),\r\n        Message = table.Column<string>(maxLength: 4000, nullable: false),\r\n        Exception = table.Column<string>(maxLength: 4000, nullable: true)\r\n    },\r\n    constraints: table =>\r\n    {\r\n        table.PrimaryKey(\"PK_Logs\", x => x.Id);\r\n    });\r\n```\r\nThis as I would expect it to be.\r\n\r\nThe migration **up** method in the .Net Framework console applications is as follows:\r\n```\r\nCreateTable(\r\n    \"dbo.Logs\",\r\n    c => new\r\n        {\r\n            Id = c.Long(nullable: false, identity: true),\r\n            Date = c.DateTime(nullable: false),\r\n            Application = c.String(),\r\n            Method = c.String(),\r\n            LogLevel = c.Byte(nullable: false),\r\n            Level = c.String(),\r\n            UserAccount = c.String(),\r\n            Message = c.String(),\r\n            Exception = c.String(),\r\n        })\r\n    .PrimaryKey(t => t.Id);\r\n```\r\nThis is lacking the various length constraints.  Is this the intended output?\r\n\r\nI have attached a test solution. It has three projects as follows:\r\n*\tNSG.LogData (.NetStandard library containing annotated-data class),\r\n*\tNSG.ConsoleCore (.Net Core console project, that includes NSG.LogData library, and creates a code-first database),\r\n*\tNSG.ConsoleNet (.Net Framework console project, that includes NSG.LogData library, and creates a code-first database).\r\n\r\nPackage installation for NSG.ConsoleCore:\r\n\r\n\tInstall-Package Microsoft.EntityFrameworkCore.SqlServer\r\n\tInstall-Package Microsoft.EntityFrameworkCore.Tools\r\n\r\nMigration command for NSG.ConsoleCore:\r\n\r\n\tEntityFrameworkCore\\Add-Migration -name InitialCreate -Project NSG.ConsoleCore -StartupProject NSG.ConsoleCore\r\n\r\nMigration command for NSG.ConsoleNet:\r\n\r\n\tEntityFramework\\Add-Migration -name InitialCreate -Project NSG.ConsoleNet -StartupProject NSG.ConsoleNet\r\n\r\n\r\n\r\n\r\n[NSG.DataAnnotations.zip](https://github.com/dotnet/standard/files/3154973/NSG.DataAnnotations.zip)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1179","RelatedDescription":"Open issue \"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework\" (#1179)"},{"Id":"440265255","IsPullRequest":false,"CreatedAt":"2019-05-04T00:25:58","Actor":"bartonjs","Number":"1178","RawContent":null,"Title":"Consider asymmetric key import/export API for NS2.1","State":"open","Body":"https://github.com/dotnet/corefx/issues/20414 significantly helps .NET applications work with asymmetric keys \"the Linux way\", as well as other generally useful in hybrid environments scenarios.\r\n\r\nTypes to diff against corefx/3.0:\r\n* System.Security.Cryptography.AsymmetricAlgorithm\r\n* System.Security.Cryptography.RSA\r\n* System.Security.Cryptography.ECDsa\r\n* System.Security.Cryptography.ECDiffieHellman\r\n\r\n(and potentially the deriving types, for their `override`s)","Url":"https://github.com/dotnet/standard/issues/1178","RelatedDescription":"Open issue \"Consider asymmetric key import/export API for NS2.1\" (#1178)"},{"Id":"439822079","IsPullRequest":true,"CreatedAt":"2019-05-03T16:58:36","Actor":"mmitche","Number":"1177","RawContent":null,"Title":"Move to Azure DevOps for public CI","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1177","RelatedDescription":"Closed or merged PR \"Move to Azure DevOps for public CI\" (#1177)"},{"Id":"439780558","IsPullRequest":false,"CreatedAt":"2019-05-02T23:09:49","Actor":"yangsong2828","Number":"1174","RawContent":null,"Title":"Support on System.Web.HttpRequest APIs","State":"closed","Body":"System.Web.HttpRequest APIs are not supported in .net standard. So I take the alternative is to use what's in Microsoft.AspNetCore.Http.Abstractions. But inside it, it doesn't have APIs such as \"Brower\", \"UserAgent\" etc. So what's the reason they are not supported?","Url":"https://github.com/dotnet/standard/issues/1174","RelatedDescription":"Closed issue \"Support on System.Web.HttpRequest APIs\" (#1174)"},{"Id":"438892784","IsPullRequest":false,"CreatedAt":"2019-04-30T17:32:25","Actor":"ericstj","Number":"1171","RawContent":null,"Title":"BaseNumberConverter should be effectively sealed","State":"open","Body":"See https://github.com/dotnet/corefx/pull/37278\r\n\r\nBaseNumberConverter shouldn't be derivable.  On desktop it's a compile error.  Since netstandard.dll doesn't include internal members it permits compile, but fails at runtime for most frameworks since internal abstract members are not overridden.\r\n\r\n/cc @Anipik ","Url":"https://github.com/dotnet/standard/issues/1171","RelatedDescription":"Open issue \"BaseNumberConverter should be effectively sealed\" (#1171)"},{"Id":"438281734","IsPullRequest":true,"CreatedAt":"2019-04-30T12:14:14","Actor":"dotnet-maestro[bot]","Number":"1170","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190426.3\r\n- **Date Produced**: 4/26/2019 5:53 PM\r\n- **Commit**: 7bec23ce3da545d97f53f99abce457a2e252aa58\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19226.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190429.8\r\n- **Date Produced**: 4/30/2019 5:30 AM\r\n- **Commit**: a7a250e9c13147134543c35fef2fb81f19592edf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19229.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1170","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1170)"},{"Id":"437640571","IsPullRequest":true,"CreatedAt":"2019-04-26T12:09:00","Actor":"dotnet-maestro[bot]","Number":"1169","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190425.5\r\n- **Date Produced**: 4/25/2019 6:25 PM\r\n- **Commit**: d37270268a65592cae630f1b979b70f74d4614dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19225.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1169","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1169)"},{"Id":"437162539","IsPullRequest":true,"CreatedAt":"2019-04-25T12:14:10","Actor":"dotnet-maestro[bot]","Number":"1168","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190424.9\r\n- **Date Produced**: 4/25/2019 12:59 AM\r\n- **Commit**: e02c88fca482f1141a9bb310c97be20b0ebd0465\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19224.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1168","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1168)"},{"Id":"436223894","IsPullRequest":false,"CreatedAt":"2019-04-25T05:53:17","Actor":"ststeiger","Number":"1166","RawContent":null,"Title":"Referenced NetStandard-project does not get local-copied in .NET Core application ","State":"closed","Body":"I've created a project called \r\n`System.ServiceProcess`\r\nas netstandard 2.0 library. \r\n\r\nI've referenced project `System.ServiceProcess` in project `LdapService`. \r\nThe two projects are in the same solution. \r\n\r\nLdapService references project `System.ServiceProcess`. \r\nLdapService also references project `IniParser`. \r\nIniParser is a netstandard 2.0 library. \r\n\r\nIniParser gets localcopied to LdapService. \r\nSystem.ServiceProcess does not. \r\n\r\nI added <RestoreProjectStyle>PackageReference</RestoreProjectStyle> which once helped in a .NET Framework 4.6.1 project. \r\nBut that doesn't work .\r\nI tried setting localCopy to true, also no effect. \r\n\r\nIt looks like it's wrongly identifying System.ServiceProcess as a SharedFramework-DLL, and thus ignores local-copying. \r\n\r\nBUG.\r\n\r\nVersion Information:\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.5\r\nVisualStudio.15.Release/15.9.5+28307.280\r\nNetCore 2.1\r\n```\r\n\r\nIf I rename the project to System.ServiceProcess**1**, then it works as expected.","Url":"https://github.com/dotnet/standard/issues/1166","RelatedDescription":"Closed issue \"Referenced NetStandard-project does not get local-copied in .NET Core application \" (#1166)"},{"Id":"436657831","IsPullRequest":true,"CreatedAt":"2019-04-24T12:24:23","Actor":"dotnet-maestro[bot]","Number":"1167","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190423.2\r\n- **Date Produced**: 4/24/2019 12:38 AM\r\n- **Commit**: e3919d0c158716ef4685c8e057cc58640af1af83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19223.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1167","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1167)"},{"Id":"436150323","IsPullRequest":true,"CreatedAt":"2019-04-23T12:23:39","Actor":"dotnet-maestro[bot]","Number":"1165","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19222.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1165","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1165)"},{"Id":"435956019","IsPullRequest":true,"CreatedAt":"2019-04-23T01:29:21","Actor":"mmitche","Number":"1164","RawContent":null,"Title":"Update branding on master","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1164","RelatedDescription":"Closed or merged PR \"Update branding on master\" (#1164)"},{"Id":"435955846","IsPullRequest":true,"CreatedAt":"2019-04-23T01:29:14","Actor":"mmitche","Number":"1163","RawContent":null,"Title":"Merge from master","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1163","RelatedDescription":"Closed or merged PR \"Merge from master\" (#1163)"},{"Id":"435913700","IsPullRequest":false,"CreatedAt":"2019-04-22T22:26:07","Actor":"CalvinFengDatacom","Number":"1162","RawContent":null,"Title":"Multiple assemblies with equivalent identity have been imported","State":"closed","Body":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks","Url":"https://github.com/dotnet/standard/issues/1162","RelatedDescription":"Closed issue \"Multiple assemblies with equivalent identity have been imported\" (#1162)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"444215264","IsPullRequest":false,"CreatedAt":"2019-05-15T03:10:16","Actor":"zhongzepeng","Number":"37662","RawContent":null,"Title":"Application Crash","State":"open","Body":"Environment: docker\r\nVersion: netcore 2.2\r\nDmesg log:\r\nDotnet [20498]: segfault at 80300e05 IP 00007fc0a8513863 sp 00007fc014e2e560 error 4 in libgdiplus.so.0.0.0[7fc0a84d3000+64000]\r\n\r\n\r\nHow to catch this Exception","Url":"https://github.com/dotnet/corefx/issues/37662","RelatedDescription":"Open issue \"Application Crash\" (#37662)"},{"Id":"443665464","IsPullRequest":true,"CreatedAt":"2019-05-15T03:08:16","Actor":"gregkalapos","Number":"37637","RawContent":null,"Title":"Fix System.Diagnostics.Process.[x]ProcessorTime on macOS","State":"closed","Body":"Fixes #37614\r\n\r\nAffects on macOS:\r\n- `Process.UserProcessorTime`\r\n- `Process.PrivilegedProcessorTime`\r\n- `Process.TotalProcessorTime`\r\n\r\nDiscussed with @stephentoub  in #37614, this PR implements the proposed fix.\r\n\r\nShort summary (more in #37614):\r\nThe `rusage_info_v3` mac API uses nanoseconds unit, which was passed without any conversion to `TimeSpan`’s Int64-based constructor, which expects a value with a 100-nanosecond unit. Therfore values reported on macOS were 100x of the correct value.\r\n\r\nFix: we simply convert the `rusage_info_v3` nanosec values to 100-nanosec unit.\r\n\r\nAlso added a test, which fails with the original code on my machine and passes with the code in this PR. Since the `TestProcessorTime` test is disabled for UWP (https://github.com/dotnet/corefx/issues/31908) I suspect we will have similar problems with the new test. Let's see... ","Url":"https://github.com/dotnet/corefx/pull/37637","RelatedDescription":"Closed or merged PR \"Fix System.Diagnostics.Process.[x]ProcessorTime on macOS\" (#37637)"},{"Id":"444079715","IsPullRequest":true,"CreatedAt":"2019-05-15T01:29:57","Actor":"layomia","Number":"37654","RawContent":null,"Title":"Move colon debug assert to where it is needed","State":"closed","Body":"This addresses https://github.com/dotnet/corefx/pull/37159#discussion_r279108249. cc @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/37654","RelatedDescription":"Closed or merged PR \"Move colon debug assert to where it is needed\" (#37654)"},{"Id":"444126784","IsPullRequest":true,"CreatedAt":"2019-05-15T01:28:17","Actor":"ViktorHofer","Number":"37658","RawContent":null,"Title":"Harden PerfCounter tests","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/37658","RelatedDescription":"Closed or merged PR \"Harden PerfCounter tests\" (#37658)"},{"Id":"444131021","IsPullRequest":true,"CreatedAt":"2019-05-14T23:13:51","Actor":"ericstj","Number":"37660","RawContent":null,"Title":"Don't reference netstandard.dll by wildcard","State":"closed","Body":"NetStandard.dll is built during the same phase as the other generated shims.\r\nWe use a ProjectReference to correctly sequence it before other generated\r\nshims.  Make sure that building a generated shim after building\r\nnetstandard.csproj doesn't result in 2 netstandard.dll's being passed to\r\nthe compiler.","Url":"https://github.com/dotnet/corefx/pull/37660","RelatedDescription":"Closed or merged PR \"Don't reference netstandard.dll by wildcard\" (#37660)"},{"Id":"444147939","IsPullRequest":true,"CreatedAt":"2019-05-14T22:11:20","Actor":"adamsitnik","Number":"37661","RawContent":null,"Title":"writing with to empty buffer should throw an exception ","State":"open","Body":"fixes #35231","Url":"https://github.com/dotnet/corefx/pull/37661","RelatedDescription":"Open PR \"writing with to empty buffer should throw an exception \" (#37661)"},{"Id":"444129124","IsPullRequest":true,"CreatedAt":"2019-05-14T21:54:02","Actor":"dotnet-maestro-bot","Number":"37659","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-27617-05, servicing-27618-01, stable, respectively (release/2.2)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/37659","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-27617-05, servicing-27618-01, stable, respectively (release/2.2)\" (#37659)"},{"Id":"444126153","IsPullRequest":true,"CreatedAt":"2019-05-14T21:40:30","Actor":"dotnet-maestro[bot]","Number":"37657","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190514.3\r\n- **Date Produced**: 5/14/2019 6:43 PM\r\n- **Commit**: 7053cdf764a6e08a356573bd447b44c85190de0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19264.3\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37657","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#37657)"},{"Id":"444099277","IsPullRequest":true,"CreatedAt":"2019-05-14T20:57:25","Actor":"dotnet-maestro-bot","Number":"37655","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-27617-04, servicing-27617-02, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/37655","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-27617-04, servicing-27617-02, stable, respectively (release/2.1)\" (#37655)"},{"Id":"443658451","IsPullRequest":true,"CreatedAt":"2019-05-14T20:46:06","Actor":"dotnet-maestro[bot]","Number":"37636","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190513.2\r\n- **Date Produced**: 5/14/2019 12:22 AM\r\n- **Commit**: 557c5ecb9d6b77c3163edc2cda4108347dfe6ba2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19263.2\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190514.1\r\n- **Date Produced**: 5/14/2019 12:55 PM\r\n- **Commit**: 97438d0f60cb6916145fc6c053c9531dbaf5b78a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19264.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190514.2\r\n- **Date Produced**: 5/14/2019 5:43 PM\r\n- **Commit**: 5f041c267883fe142b109a92bb48ce65653f7efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19264.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37636","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#37636)"},{"Id":"443886571","IsPullRequest":true,"CreatedAt":"2019-05-14T20:44:53","Actor":"dotnet-maestro[bot]","Number":"37641","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190513.9\r\n- **Date Produced**: 5/14/2019 7:47 AM\r\n- **Commit**: f5be0283c5e00dd823a41f671f9c9a41170f0a85\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19263.9\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview6.19263.9\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37641","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#37641)"},{"Id":"444099318","IsPullRequest":true,"CreatedAt":"2019-05-14T20:02:58","Actor":"dotnet-maestro-bot","Number":"37656","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @dotnet-bot\n* @wtgodbe\n* @rmkerr\n* @davidsh\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/37656","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#37656)"},{"Id":"443891198","IsPullRequest":false,"CreatedAt":"2019-05-14T18:46:18","Actor":"warrenbuckley","Number":"37642","RawContent":null,"Title":"Using Kestrel in Electron App for Mac App Store","State":"closed","Body":"## Background\r\nI am building a cross platform desktop app that uses Electron with a cross platform .NET Core self contained application. That is using Kestrel for the WebServer in order for the NodeJS/Electron application to communicate and manipulate what is needed with certain C# 3rd party libraries.\r\n\r\n## Oddity\r\nThis application works perfectly fine on a Mac and the NodeJS code will successfully boot up our Kestrel webserver app without issues. \r\n\r\nHowever as soon as the application is packaged to be submitted for the Mac App Store (By code signing it), it will throw an error when trying to boot/run the .NET Core executable/binary for our Kestrel Server\r\n\r\n✔️ Mac Electron Application\r\n❌ Mac Electron Application built & signed for Mac App Store submission & gives the following error when it attempts to boot/call the server\r\n\r\n## Error\r\n```\r\nserver-error-data Error: Command failed: /Users/warrenbuckley/Projects/LogViewer/output/mas-dev/Compact Log Viewer.app/Contents/Resources/LogViewer.Server/bin/dist/osx/LogViewer.Server\r\n\r\nUnhandled Exception: System.Net.Sockets.SocketException: Unknown error: -1\r\n   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n   at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token, String shutdownMessage)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at LogViewer.Server.Program.Main(String[] args) in /Users/warrenbuckley/Projects/LogViewer/LogViewer.Server/Program.cs:line 14\r\n\r\n    at ChildProcess.exithandler (child_process.js:299:12)\r\n    at ChildProcess.emit (events.js:187:15)\r\n    at maybeClose (internal/child_process.js:962:16)\r\n    at Socket.stream.socket.on (internal/child_process.js:381:11)\r\n    at Socket.emit (events.js:182:13)\r\n    at Pipe._handle.close (net.js:606:12)\r\n```\r\n\r\nMy code for configuring the Kestrel webserver looks like so\r\nhttps://github.com/warrenbuckley/Compact-Log-Format-Viewer/blob/master/LogViewer.Server/Program.cs#L17-L41\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37642","RelatedDescription":"Closed issue \"Using Kestrel in Electron App for Mac App Store\" (#37642)"},{"Id":"444031841","IsPullRequest":true,"CreatedAt":"2019-05-14T17:41:02","Actor":"wfurt","Number":"37652","RawContent":null,"Title":"disable UDS tests on Nano","State":"closed","Body":"Currently we exclude Nano via !PlatformDetection.IsWindows10Version1803OrGreater\r\nHowever new Nano images do pass that check and fail with \r\n```\r\nSystem.Net.Sockets.SocketException : An address incompatible with the requested protocol was used.\r\n```\r\n","Url":"https://github.com/dotnet/corefx/pull/37652","RelatedDescription":"Closed or merged PR \"disable UDS tests on Nano\" (#37652)"},{"Id":"444036295","IsPullRequest":false,"CreatedAt":"2019-05-14T17:26:59","Actor":"joeyj-msft","Number":"37653","RawContent":null,"Title":"HttpClient unpredictable IDisposable pattern","State":"open","Body":"HttpClient seems to have a unpredictable IDisposable pattern. When should a consumer dispose of it? When shouldn't they? Why is HttpClient IDisposable when it's not always expected to be \"Disposed\"? This non-standard usage of IDisposable creates confusion for new users of our tooling/frameworks.\r\n\r\nSome more context here: https://github.com/aspnet/Extensions/issues/1710","Url":"https://github.com/dotnet/corefx/issues/37653","RelatedDescription":"Open issue \"HttpClient unpredictable IDisposable pattern\" (#37653)"},{"Id":"444028038","IsPullRequest":false,"CreatedAt":"2019-05-14T17:07:15","Actor":"blowdart","Number":"37651","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/113\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/corefx/issues/37651","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#37651)"},{"Id":"444027293","IsPullRequest":false,"CreatedAt":"2019-05-14T17:05:26","Actor":"blowdart","Number":"37650","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/112\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/corefx/issues/37650","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#37650)"},{"Id":"444026583","IsPullRequest":false,"CreatedAt":"2019-05-14T17:03:42","Actor":"blowdart","Number":"37649","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/111\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https:// dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/corefx/issues/37649","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#37649)"},{"Id":"443716946","IsPullRequest":true,"CreatedAt":"2019-05-14T16:30:02","Actor":"dotnet-maestro-bot","Number":"37638","RawContent":null,"Title":"Update ProjectNTfs, ProjectNTfsTestILC to beta-27714-00, beta-27714-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/37638","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27714-00, beta-27714-00, respectively (master)\" (#37638)"},{"Id":"444004446","IsPullRequest":false,"CreatedAt":"2019-05-14T16:12:43","Actor":"joelverhagen","Number":"37648","RawContent":null,"Title":"SqlConnection waits \"Connection Timeout\" seconds before failing from bad DNS","State":"open","Body":"When the `Data Source` (server DNS) in a SQL Server connection string is a DNS name that can't resolve, opening the `SqlConnection` takes the entire `Connection Timeout` to throw an exception.\r\n\r\nThis contrasts with the behavior of `HttpClient` which fails almost immediately when trying to send an HTTP request to a bad DNS name.\r\n\r\nI noticed this problem during the Azure DNS outage on May 2, 2019. My web application started to queue requests (something we almost never see) due to so many requests taking 30 seconds to fail opening a connection. 30 seconds is the value we set for `Connection Timeout` in our connection string. Note that we use the non-async APIs on `SqlConnection` so this could perhaps be improved by switching to, say, `OpenAsync` (haven't tested). We could also mitigate this with a circuit breaker pattern.\r\n\r\nHowever, this seems like a bad behavior to wait so long for a problem that is unlikely to repair itself in a relatively short time (order of seconds).\r\n\r\nIt's also not clear to me that this even gives you resiliency to DNS issues... is the DNS cache being flushed and is resolution being reattempted? I don't know enough about how DNS queries are cached by the various OSes to make an educated guess here.\r\n\r\nThis behavior is consistent with both `Open` and `OpenAsync`.\r\n\r\nWhen the exception is thrown, the innermost message is:\r\n\r\n- Windows: No such host is known\r\n- Ubuntu: No such device or address\r\n\r\nI've tried this on .NET Framework 4.7.2, .NET Core 2.2 on Windows 10, and .NET Core 2.2 on Ubuntu.\r\n\r\n<details>\r\n<summary>Windows .NET Framework Exception</summary>\r\n<pre>\r\nSystem.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.) ---> System.ComponentModel.Win32Exception (0x80004005): No such host is known\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, DbConnectionPool pool, String accessToken, Boolean applyTransientFaultHandling, SqlAuthenticationProviderManager sqlAuthProviderManager)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at ConsoleApp1.Program.<MainAsync>d__1.MoveNext() in D:\\trash\\2019-05-14\\ConsoleApp1\\ConsoleApp2\\Program.cs:line 25\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:11001,State:0,Class:20\r\n</pre>\r\n</details>\r\n\r\n<details>\r\n<summary>Windows .NET Core Exception</summary>\r\n<pre>\r\nSystem.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.) ---> System.ComponentModel.Win32Exception (11001): No such host is known\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at ConsoleApp1.Program.MainAsync() in D:\\trash\\2019-05-14\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 25\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:11001,State:0,Class:20\r\n</pre>\r\n</details>\r\n\r\n<details>\r\n<summary>Windows dotnet --info</summary>\r\n<pre>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4-preview-007237 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400-preview-009088 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400-preview-009171 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009297 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009324 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009398 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009404 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5-servicing-26911-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</pre>\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>Ubuntu Exception</summary>\r\n<pre>\r\nSystem.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught) ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (00000005, 6): No such device or address\r\n   at System.Net.Dns.InternalGetHostByName(String hostName)\r\n   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress)\r\n   at System.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout)\r\n   at System.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Object callbackObject, Boolean parallel)\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at ConsoleApp1.Program.MainAsync() in /home/joel/test/Program.cs:line 25\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\n</pre>\r\n</details>\r\n\r\n<details>\r\n<summary>Ubuntu dotnet --info</summary>\r\n<pre>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.103/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</pre>\r\n</details>\r\n\r\nRepro code:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Data.SqlClient;\r\nusing System.Diagnostics;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            MainAsync().GetAwaiter().GetResult();\r\n        }\r\n\r\n        static async Task MainAsync()\r\n        {\r\n            Console.WriteLine(\"Opening connection...\");\r\n            var sw = Stopwatch.StartNew();\r\n            var connectionString = \"Encrypt=True; Data Source=thisisnotarealserver.database.windows.net; Initial Catalog=db; User ID=user; Password=password\";\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                Console.WriteLine($\"Connection Timeout: {connection.ConnectionTimeout} seconds\");\r\n                try\r\n                {\r\n                    await connection.OpenAsync();\r\n                    Console.WriteLine(\"Success.\");\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(ex);\r\n                }\r\n                finally\r\n                {\r\n                    Console.WriteLine($\"Duration: {sw.Elapsed}\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37648","RelatedDescription":"Open issue \"SqlConnection waits \"Connection Timeout\" seconds before failing from bad DNS\" (#37648)"},{"Id":"443997331","IsPullRequest":true,"CreatedAt":"2019-05-14T15:57:41","Actor":"ViktorHofer","Number":"37647","RawContent":null,"Title":"Use Arcade DotNetTool and NuGetPackageRoot","State":"open","Body":"Depends on https://github.com/dotnet/arcade/pull/2753\r\n\r\n- Use global dotnet if applicable\r\n- Remove dead dependency code\r\n- Use Arcade props","Url":"https://github.com/dotnet/corefx/pull/37647","RelatedDescription":"Open PR \"Use Arcade DotNetTool and NuGetPackageRoot\" (#37647)"},{"Id":"443985821","IsPullRequest":false,"CreatedAt":"2019-05-14T15:35:51","Actor":"mthalman","Number":"37646","RawContent":null,"Title":"Update to test on Alpine 3.9","State":"open","Body":"CoreFX is currently being tested on Alpine 3.6 which is EOL.  This should be updated to the latest, Alpine 3.9.  This should apply to both 2.x and 3.0.\r\n\r\nExample data showing 3.6 is being used: https://mc.dot.net/#/product/netcore/21msrc/source/prodcon~2Fcorefx~2Frelease~2F2.1-msrc~2F/type/test~2Ffunctional~2Fcli~2F/build/20190412.01\r\n\r\nAlso, the CI build seems to be using 3.8 and should also be updated to 3.9.","Url":"https://github.com/dotnet/corefx/issues/37646","RelatedDescription":"Open issue \"Update to test on Alpine 3.9\" (#37646)"},{"Id":"443976355","IsPullRequest":false,"CreatedAt":"2019-05-14T15:18:19","Actor":"Lohnegrim","Number":"37645","RawContent":null,"Title":"gdpicture_ needs System.Drawing.Bitmap.FromGDIplus","State":"open","Body":"NET Core Version: 3.0 Preview5\r\nHave you experienced this same bug with .NET Framework?: No\r\n\r\nHi, when I tryed to convert a App from classic .Net FW  to .Net Core, I encountered that when you try to create a GdViewer from GDPicture (https://www.gdpicture.com/) then the creation fails because of the missing Method System.Drawing.Bitmap.FromGDIplus:\r\nSystem.MissingMethodException: Method 'System.Drawing.Bitmap.FromGDIplus' not found.\r\n","Url":"https://github.com/dotnet/corefx/issues/37645","RelatedDescription":"Open issue \"gdpicture_ needs System.Drawing.Bitmap.FromGDIplus\" (#37645)"},{"Id":"443966332","IsPullRequest":false,"CreatedAt":"2019-05-14T14:59:40","Actor":"jeremyVignelles","Number":"37644","RawContent":null,"Title":"Provide a way to load a CertificateRequest from a byte[]","State":"open","Body":"# Rationale\r\n\r\nI am using the `CertificateRequest.CreateSigningRequest()` to get a CSR byte array that I can send to the Certificate Authority.\r\n\r\nAs far as I know, there is currently no way, on the CA side, to \"deserialize\" this byte array into a `CertificateRequest`.\r\n\r\n# Use case\r\n\r\nI am currently building a CA in .NET, that can sign certificate for .net client applications.\r\n\r\nThe .net client generates a PKCS 10 CSR, and send it over HTTPS to the CA, which will sign it.\r\n\r\n# Proposed API\r\n\r\nAdd a new constructor to the `CertificateRequest` class to be able to build an instance from the byte array:\r\n\r\n```\r\npublic CertificateRequest(byte[] derEncodedCSR)\r\n```","Url":"https://github.com/dotnet/corefx/issues/37644","RelatedDescription":"Open issue \"Provide a way to load a CertificateRequest from a byte[]\" (#37644)"},{"Id":"443923420","IsPullRequest":false,"CreatedAt":"2019-05-14T13:43:06","Actor":"BilalIqbal0926","Number":"37643","RawContent":null,"Title":"XML Signature generated in Java failed Validation in C#.net using SignedXML","State":"open","Body":"I am working on an assignment where i will receive an XML request in REST service (Built using C#.Net).\r\n\r\nI am suing System.Security.Cryptography.Xml version 4.5.0 with target .Net Framework 4.7.\r\n\r\nSender is using Java to generate XML signature and public key is provided separately in certificate form. \r\n\r\nMy C# code is getting failed on provided sample files, always give false for valid / in valid files.\r\n\r\nI tried same sample in Java application and it works fine.\r\n\r\n\r\n X509Certificate2 objCertificate = new X509Certificate2(@\"D:\\Signing_testing.crt\");\r\n            XmlDocument validFile = new XmlDocument();\r\n\r\n            validFile.Load(@\"D:\\sample_file.xml\");\r\n            validFile.PreserveWhitespace = true;\r\n\r\n            \r\n            SignedXml validSigned = new SignedXml(validFile);\r\n\r\n\r\n            XmlNodeList nl = validFile.GetElementsByTagName(\"Signature\");\r\n            XmlElement validSign = (XmlElement)nl[0];\r\n\r\n\r\n            validSigned.LoadXml(validSign);\r\n\r\n            Console.WriteLine(\"Valid file result \" + validSigned.CheckSignature(objCertificate, true));\r\n\r\n\r\nCan anyone help on this issue?","Url":"https://github.com/dotnet/corefx/issues/37643","RelatedDescription":"Open issue \"XML Signature generated in Java failed Validation in C#.net using SignedXML\" (#37643)"},{"Id":"443883886","IsPullRequest":true,"CreatedAt":"2019-05-14T13:12:29","Actor":"dotnet-maestro[bot]","Number":"37640","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190513.13\r\n- **Date Produced**: 5/14/2019 8:02 AM\r\n- **Commit**: 91a4df0883082c784b0826874874d65b3fcf79ba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27713-13\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview6-27713-13\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview6-27713-13\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37640","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#37640)"},{"Id":"443769869","IsPullRequest":false,"CreatedAt":"2019-05-14T08:10:04","Actor":"alkampfergit","Number":"37639","RawContent":null,"Title":"System.Buffers nuget package 4.5.0 miss full framework package","State":"open","Body":"Hi, I got a little problem with latest version of system buffers:\r\n\r\nI have a project targeting full framework (ex 4.6.1) and if I reference nuget package system.buffers 4.5.0, even if the package tells me that there is the 4.5 version, I got netstandard version referenced.\r\n\r\nThis is what I see in nuget\r\n![image](https://user-images.githubusercontent.com/358545/57681509-1edfc500-7630-11e9-97cb-fdce2f8edfa0.png)\r\n\r\nThis is the reference to the project after I added reference to the packages, as you can see it will reference netstandard\r\n\r\n![image](https://user-images.githubusercontent.com/358545/57681556-374fdf80-7630-11e9-82d0-b680c9b10948.png)\r\n\r\nActually uncompressing the nuget package, full framework version is not present.\r\n\r\n![image](https://user-images.githubusercontent.com/358545/57681590-45056500-7630-11e9-9d5d-41f5ca808bf2.png)\r\n\r\nI'd like it to have correct .NET 4.5 version that does not forces me to have a reference to a netstandard dll.\r\n","Url":"https://github.com/dotnet/corefx/issues/37639","RelatedDescription":"Open issue \"System.Buffers nuget package 4.5.0 miss full framework package\" (#37639)"},{"Id":"443653227","IsPullRequest":true,"CreatedAt":"2019-05-14T00:06:18","Actor":"VSadov","Number":"37635","RawContent":null,"Title":"Added System.GC.GetTotalAllocatedBytes to the ref assembly","State":"open","Body":"CoreFx part for https://github.com/dotnet/coreclr/pull/23852\r\n","Url":"https://github.com/dotnet/corefx/pull/37635","RelatedDescription":"Open PR \"Added System.GC.GetTotalAllocatedBytes to the ref assembly\" (#37635)"},{"Id":"443651525","IsPullRequest":false,"CreatedAt":"2019-05-13T23:59:20","Actor":"ahsonkhan","Number":"37634","RawContent":null,"Title":"JsonSerializerOptions doesn't work well with JsonCommentHandling.Allow and JsonDocument","State":"open","Body":"See https://github.com/dotnet/corefx/pull/37549#discussion_r282884005 for context.\r\n\r\n> If you nest complex documents, JsonSerializer uses JsonDocument which throws:\r\n```\r\nSystem.Text.Json.Serialization.Tests.ObjectTests.ReadClassIgnoresLeadingOrTrailingTrivia(leadingTrivia: \"/* Multi\\nLine\\nComment */ \", trailingTrivia: \"\\t// trailing comment\\n \") [FAIL]\r\n      System.ArgumentException : Comments cannot be stored in a JsonDocument, only the Skip and Disallow comment handling modes are supported.\r\n      Parameter name: reader\r\n```\r\n\r\nJsonSerializerOptions should either support `JsonCommentHandling.Allow` in all cases (by transforming it to `JsonCommentHandling.Skip` before passing it to the `JsonDocument`), or just like `JsonDocument`, throw if the options is set to `Allow`. This comes up whenever a user has a `System.Object` property (which is where `JsonDocument` gets used).\r\n\r\nI don't really see much benefit of `Allow` outside of `JsonReader`.\r\n\r\ncc @steveharter, @bartonjs, @JamesNK, @rynowak, @JeremyKuhne, @watfordgnf","Url":"https://github.com/dotnet/corefx/issues/37634","RelatedDescription":"Open issue \"JsonSerializerOptions doesn't work well with JsonCommentHandling.Allow and JsonDocument\" (#37634)"},{"Id":"443596370","IsPullRequest":false,"CreatedAt":"2019-05-13T21:18:01","Actor":"StephenBonikowsky","Number":"37633","RawContent":null,"Title":"NullRef thrown by Internal.Cryptography.Pal.OpenSslX509ChainProcessor","State":"closed","Body":"In WCF we have [a test case](https://github.com/dotnet/wcf/blob/master/src/System.Private.ServiceModel/tests/Scenarios/Client/ExpectedExceptions/ExpectedExceptionTests.4.1.0.cs#L424) that deliberately tries to use a service cert that is only valid for client authentication. We expect to get a 'SecurityNegotiationException'.\r\n\r\nStarting recently we've been getting a NullRefException instead. This is only occurring on Linux (Centos.7) and I see that there has been some churn in 'System.Security.Cryptography.X509Certificates' under Pal.Unix and wondering if it could be related.\r\n\r\nHere is the invalid certificate we used.\r\n[InvalidEKUCert.zip](https://github.com/dotnet/corefx/files/3174762/InvalidEKUCert.zip)\r\n\r\n\r\n```\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\n   at Internal.Cryptography.Pal.OpenSslX509ChainProcessor.AddUniqueStatus(IList`1 list, X509ChainStatus& status)\r\n   at Internal.Cryptography.Pal.OpenSslX509ChainProcessor.ProcessPolicy(X509ChainElement[] elements, List`1 overallStatus, OidCollection applicationPolicy, OidCollection certificatePolicy)\r\n   at Internal.Cryptography.Pal.OpenSslX509ChainProcessor.Finish(OidCollection applicationPolicy, OidCollection certificatePolicy)\r\n   at Internal.Cryptography.Pal.ChainPal.BuildChain(Boolean useMachineContext, ICertificatePal cert, X509Certificate2Collection extraStore, OidCollection applicationPolicy, OidCollection certificatePolicy, X509RevocationMode revocationMode, X509RevocationFlag revocationFlag, DateTime verificationTime, TimeSpan timeout)\r\n   at System.Security.Cryptography.X509Certificates.X509Chain.Build(X509Certificate2 certificate, Boolean throwOnException)\r\n   at System.Security.Cryptography.X509Certificates.X509Chain.Build(X509Certificate2 certificate)\r\n   at System.Net.Security.CertificateValidation.BuildChainAndVerifyProperties(X509Chain chain, X509Certificate2 remoteCertificate, Boolean checkCertName, String hostName)\r\n   at System.Net.Security.SecureChannel.VerifyRemoteCertificate(RemoteCertValidationCallback remoteCertValidationCallback, ProtocolToken& alertToken)\r\n   at System.Net.Security.SslStream.CompleteHandshake(ProtocolToken& alertToken)\r\n```\r\n\r\nCurrently the \"get repro environment\" system via MissionControl is broken so I haven't been able to get a repro machine for this.\r\nThe test result in MC is [here](https://mc.dot.net/#/user/dotnet-mc-bot-2/official~2Fdotnet~2Fwcf~2Frefs~2Fheads~2Fmaster/build~2Ftest~2F/20190510.1/workItem/Client.ExpectedExceptions.IntegrationTests.dll/analysis/xunit/ExpectedExceptionTests~2FTCP_ServiceCertInvalidEKU_Throw_SecurityNegotiationException).\r\n","Url":"https://github.com/dotnet/corefx/issues/37633","RelatedDescription":"Closed issue \"NullRef thrown by Internal.Cryptography.Pal.OpenSslX509ChainProcessor\" (#37633)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"444241503","IsPullRequest":false,"CreatedAt":"2019-05-15T05:20:52","Actor":"sandreenko","Number":"35719","RawContent":null,"Title":"Unhandled Exception: System.NullReferenceException","State":"open","Body":"**Version Used**: \r\nMicrosoft (R) Visual C# Compiler version 2.10.0.0 (b9fb1610)\r\nor\r\nMicrosoft (R) Visual C# Compiler version 3.100.19.22309 (ce8ac3f7)\r\n**Steps to Reproduce**:\r\nrun `csc //langversion:?`.\r\n\r\n**Expected Behavior**:\r\n`error CS2006: Command-line syntax error:` \r\n**Actual Behavior**:\r\n```\r\nUnhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CommandLineParser.<ExpandFileNamePattern>d__46.MoveNext()\r\n   at Microsoft.CodeAnalysis.CommandLineParser.<ParseFileArgument>d__41.MoveNext()\r\n   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CommonCompiler..ctor(CommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompiler..ctor(CSharpCommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc.Run(String[] args, BuildPaths buildPaths, TextWriter textWriter, IAnalyzerAssemblyLoader analyzerLoader)\r\n   at Microsoft.CodeAnalysis.CommandLine.DesktopBuildClient.RunLocalCompilation(String[] arguments, BuildPaths buildPaths, TextWriter textWriter)\r\n   at Microsoft.CodeAnalysis.CommandLine.BuildClient.RunCompilation(IEnumerable`1 originalArguments, BuildPaths buildPaths, TextWriter textWriter)\r\n   at Microsoft.CodeAnalysis.CommandLine.DesktopBuildClient.Run(IEnumerable`1 arguments, RequestLanguage language, CompileFunc compileFunc, IAnalyzerAssemblyLoader analyzerAssemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Program.Main(String[] args)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35719","RelatedDescription":"Open issue \"Unhandled Exception: System.NullReferenceException\" (#35719)"},{"Id":"444197757","IsPullRequest":true,"CreatedAt":"2019-05-15T01:43:57","Actor":"jasonmalinowski","Number":"35718","RawContent":null,"Title":"Fix our readme badges","State":"open","Body":"- Fix the image URLs to point to the current configuration names\r\n- Reorder the Spanish/Linux with Mono columns, because the labels were wrong.","Url":"https://github.com/dotnet/roslyn/pull/35718","RelatedDescription":"Open PR \"Fix our readme badges\" (#35718)"},{"Id":"444177133","IsPullRequest":true,"CreatedAt":"2019-05-15T01:30:22","Actor":"dotnet-bot","Number":"35711","RawContent":null,"Title":"Merge release/dev16.1 to release/dev16.2-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.2-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.2-preview1\ngit reset --hard upstream/release/dev16.2-preview1\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.2-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35711","RelatedDescription":"Closed or merged PR \"Merge release/dev16.1 to release/dev16.2-preview1\" (#35711)"},{"Id":"444177290","IsPullRequest":true,"CreatedAt":"2019-05-15T01:30:17","Actor":"dotnet-bot","Number":"35712","RawContent":null,"Title":"Merge release/dev16.1 to release/dev16.1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.1-vs-deps\ngit reset --hard upstream/release/dev16.1-vs-deps\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35712","RelatedDescription":"Closed or merged PR \"Merge release/dev16.1 to release/dev16.1-vs-deps\" (#35712)"},{"Id":"444177321","IsPullRequest":true,"CreatedAt":"2019-05-15T01:30:12","Actor":"dotnet-bot","Number":"35713","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35713","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35713)"},{"Id":"444177365","IsPullRequest":true,"CreatedAt":"2019-05-15T01:30:07","Actor":"dotnet-bot","Number":"35714","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35714","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#35714)"},{"Id":"444192821","IsPullRequest":true,"CreatedAt":"2019-05-15T01:19:30","Actor":"jcouv","Number":"35717","RawContent":null,"Title":"Adjust logo tests to recognize official build versions","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/35696\r\n\r\nThe official build uses a version that has multiple `-xyz` parts. So the compiler version output can look like this: `3.1.0-10-19264-03 (<SHA>)`. We have a couple of tests that parse this and replace the first part with `A.B.C-d` and the second part with `(HASH)`. But the regex only recognized a single optional `-xyz` part.","Url":"https://github.com/dotnet/roslyn/pull/35717","RelatedDescription":"Open PR \"Adjust logo tests to recognize official build versions\" (#35717)"},{"Id":"444188629","IsPullRequest":true,"CreatedAt":"2019-05-15T00:57:33","Actor":"jcouv","Number":"35716","RawContent":null,"Title":"Feed the NullableContextOptions msbuild property into Nullable","State":"open","Body":"Relates to https://github.com/aspnet/AspNetCore/issues/10218\r\n\r\nThe change from `NullableContextOptions` to `Nullable` broke Razor. \r\n\r\nUpdate: this fix is incorrect. I'm going to adjust based on Jared's feedback.","Url":"https://github.com/dotnet/roslyn/pull/35716","RelatedDescription":"Open PR \"Feed the NullableContextOptions msbuild property into Nullable\" (#35716)"},{"Id":"444182731","IsPullRequest":true,"CreatedAt":"2019-05-15T00:26:25","Actor":"heejaechang","Number":"35715","RawContent":null,"Title":"share solution info creation code.","State":"open","Body":"we had basically same code to create solution info from checksum in production and test. this shares same code now. ","Url":"https://github.com/dotnet/roslyn/pull/35715","RelatedDescription":"Open PR \"share solution info creation code.\" (#35715)"},{"Id":"444162570","IsPullRequest":true,"CreatedAt":"2019-05-14T23:02:01","Actor":"RikkiGibson","Number":"35710","RawContent":null,"Title":"Warn on implicit copies for event assignment within readonly members","State":"open","Body":"Resolves #35610","Url":"https://github.com/dotnet/roslyn/pull/35710","RelatedDescription":"Open PR \"Warn on implicit copies for event assignment within readonly members\" (#35710)"},{"Id":"444122607","IsPullRequest":false,"CreatedAt":"2019-05-14T21:35:55","Actor":"WenningQiu","Number":"35707","RawContent":null,"Title":"WithAttributeList() adds attributes before documentation comment trivia","State":"closed","Body":"**Version Used**: \r\nMicrosoft.CodeAnalysis.FxCopAnalyzers 2.9.1. 2.9.2 may have the same issue.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Find a  FieldDeclarationSyntax, PropertyDeclatationSyntax, or TypeDeclarationSyntax node that has no attribute but has documentation comment.\r\n2. Call WithAttributeList() to add attributes\r\n\r\n**Expected Behavior**:\r\nNew attributes appears after the documentation comment.\r\n\r\n**Actual Behavior**:\r\nNew attributes are added before the documentation comment trivia and results in compile error. WithAttributeList() works fine when the node already has attributes after documentation comment in which case new attributes are added right by the existing attributes.\r\n\r\nDevelopers have to take steps to position new attributes:\r\n\r\nhttps://codereview.stackexchange.com/questions/145231/adding-an-attribute-to-a-class-after-the-documentation-comment-trivia","Url":"https://github.com/dotnet/roslyn/issues/35707","RelatedDescription":"Closed issue \"WithAttributeList() adds attributes before documentation comment trivia\" (#35707)"},{"Id":"444127239","IsPullRequest":true,"CreatedAt":"2019-05-14T21:26:08","Actor":"jcouv","Number":"35709","RawContent":null,"Title":"Fix bug where pattern-matching treats a type parameter as if it is a reference (which it might not be) (16.2p1)","State":"closed","Body":"Dual-checkin of https://github.com/dotnet/roslyn/pull/35664\r\n\r\nFYI @gafter @RikkiGibson ","Url":"https://github.com/dotnet/roslyn/pull/35709","RelatedDescription":"Closed or merged PR \"Fix bug where pattern-matching treats a type parameter as if it is a reference (which it might not be) (16.2p1)\" (#35709)"},{"Id":"444123797","IsPullRequest":false,"CreatedAt":"2019-05-14T21:02:21","Actor":"vsfeedback","Number":"35708","RawContent":null,"Title":"Document Outline is empty","State":"open","Body":"VSF_TYPE_MARKDOWNWhen opening the Document Outline it shows &quot;There are no items to show for the selected document&quot;. This was in Roslyn codebase on AbstractMoveToNamespaceCodeAction.cs\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/565055/document-outline-is-empty.html\nVSTS ticketId: 891693_\n_These are the original issue comments:_\n\nAndrew Hall 🤘 [MSFT] on 5/10/2019, 05:59 PM (3 days ago): <p>I'm not sure what the document outline is supposed to show. You can find the source used at <a target='_blank' href=\"https://github.com/dotnet/roslyn/blob/master//src/Features/Core/Portable/MoveToNamespace/AbstractMoveToNamespaceCodeAction.cs\">https://github.com/dotnet/roslyn/blob/master//src/Features/Core/Portable/MoveToNamespace/AbstractMoveToNamespaceCodeAction.cs</a></p>\n\nVisual Studio Feedback System on 5/13/2019, 00:49 AM (37 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nDrew Noakes [MSFT] on 5/14/2019, 01:50 PM (12 min ago): <p>Hi Hari, thanks for your feedback. Are you able to try and reproduce the issue in VS2019 Community? We are focusing our efforts on fixing issues that exist in 2019. It would be great to know if this still happens for you there. If so, please use the technique described in the following link to report and issue and record data covering a period of time in which the problem occurs. Thank you.</p><p><br></p><p><a target=\"_blank\"> https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019#record-a-repro </a></p>\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35708","RelatedDescription":"Open issue \"Document Outline is empty\" (#35708)"},{"Id":"444114884","IsPullRequest":false,"CreatedAt":"2019-05-14T20:41:11","Actor":"cston","Number":"35706","RawContent":null,"Title":"Ambiguous references to Microsoft.VisualBasic.* compiling .NET Core 3.0 app with `-vbruntime:+`","State":"open","Body":"1. Create a VB Console App (.NET Core) using .NET Core 3.0 preview 6 SDK\r\n1. Add `<VBRuntime>default</VBRuntime>` to ConsoleApp1.vbproj\r\n1. Change Program.vb to:\r\n```VB\r\nModule Program\r\n    Sub Main()\r\n        Console.WriteLine(My.Application)\r\n    End Sub\r\nEnd Module\r\n```\r\n\r\nResult:\r\n```\r\nvbc : error BC30560: 'User' is ambiguous in the namespace\r\n    'Microsoft.VisualBasic.ApplicationServices'.\r\nvbc : error BC30560: 'Computer' is ambiguous in the namespace\r\n    'Microsoft.VisualBasic.Devices'.\r\n...\r\n```\r\n\r\nThe program compiles successfully with `<VBRuntime>none</VBRuntime>`.","Url":"https://github.com/dotnet/roslyn/issues/35706","RelatedDescription":"Open issue \"Ambiguous references to Microsoft.VisualBasic.* compiling .NET Core 3.0 app with `-vbruntime:+`\" (#35706)"},{"Id":"444078517","IsPullRequest":false,"CreatedAt":"2019-05-14T19:11:09","Actor":"HSyr","Number":"35705","RawContent":null,"Title":"KeywordCompletionProvider does not consider CultureInfo.CurrentUICulture","State":"open","Body":"Under Czech Windows 10 I do `CultureInfo.CurrentUICulture = new CultureInfo( \"en-US\" )`. When  I then call `CompletionService.GetDescriptionAsync` I got different language results (Czech or English) depending on the type of the language element.\r\n\r\n- For method `Console.Beep` it returns expected English result _\"+1 overload\"_ (provider is `Microsoft.CodeAnalysis.CSharp.Completion.Providers.SymbolCompletionProvider`)\r\n\r\n- But for C# keyword `while` it returns Czech result _\"klíčové slovo\"_ insted of expected English _\"keyword\"_ (provider is `Microsoft.CodeAnalysis.CSharp.Completion.Providers.KeywordCompletionProvider`)\r\n\r\nVersion: Microsoft.CodeAnalysis.Analyzers version 2.9.2\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35705","RelatedDescription":"Open issue \"KeywordCompletionProvider does not consider CultureInfo.CurrentUICulture\" (#35705)"},{"Id":"444078176","IsPullRequest":true,"CreatedAt":"2019-05-14T19:10:22","Actor":"ivanbasov","Number":"35704","RawContent":null,"Title":"Go to base","State":"open","Body":"Implementation of #20383\r\n\r\nThere is a need for more PRs to add the feature to the context menu: one for Roslyn and another for VS. Will send them separately after merging this.","Url":"https://github.com/dotnet/roslyn/pull/35704","RelatedDescription":"Open PR \"Go to base\" (#35704)"},{"Id":"444076834","IsPullRequest":true,"CreatedAt":"2019-05-14T19:06:54","Actor":"gafter","Number":"35703","RawContent":null,"Title":"Unskip working test","State":"open","Body":"Fixes #25997\r\n\r\n@dotnet/roslyn-compiler Please review this eensy test fix.","Url":"https://github.com/dotnet/roslyn/pull/35703","RelatedDescription":"Open PR \"Unskip working test\" (#35703)"},{"Id":"444076479","IsPullRequest":false,"CreatedAt":"2019-05-14T19:06:03","Actor":"vsfeedback","Number":"35702","RawContent":null,"Title":"C# foreach smart indent doesn't work correctly for the 'else' part without a '{ }' block","State":"open","Body":"VSF_TYPE_MARKDOWNTyping a 'foreach' having an 'if' structure without {} around it doesn't indent the 'else' part correctly. For example, if I type the following lines, the indentation comes out as follows (dots added to simulate the indenation size of 4 spaces):\r\n\r\n```\r\nforeach(string arg in args)\r\n....if (arg[0] == '-')\r\n........options.Add(arg)\r\nelse   <==== Wrong indentation.\r\n........commands.Add(arg)\r\n```\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/565314/c-foreach-smart-indent-doesnt-work-correctly-for-t.html\r\nVSTS ticketId: 891808_\r\n_These are the original issue comments:_\r\n\r\nVisual Studio Feedback System on 5/13/2019, 01:53 AM (34 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35702","RelatedDescription":"Open issue \"C# foreach smart indent doesn't work correctly for the 'else' part without a '{ }' block\" (#35702)"},{"Id":"444019086","IsPullRequest":true,"CreatedAt":"2019-05-14T18:24:52","Actor":"dotnet-bot","Number":"35699","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35699","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35699)"},{"Id":"444057236","IsPullRequest":false,"CreatedAt":"2019-05-14T18:19:06","Actor":"sharwell","Number":"35701","RawContent":null,"Title":"AccessViolationException in IVsPreviewChangesService.PreviewChanges","State":"open","Body":"**Version Used**: Integration test run for #35603 \r\n\r\n```\r\nEvent Time (UTC): 5/14/2019 5:47:31 PM\r\nEvent ID: 1026\r\nData: Application: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.AccessViolationException\r\n   at Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesService.PreviewChanges(Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.Preview.PreviewDialogService.PreviewChanges(System.String, System.String, System.String, System.String, Microsoft.CodeAnalysis.Glyph, Microsoft.CodeAnalysis.Solution, Microsoft.CodeAnalysis.Solution, Boolean)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.EncapsulateField.AbstractEncapsulateFieldCommandHandler.Execute(Microsoft.VisualStudio.Text.Editor.Commanding.Commands.EncapsulateFieldCommandArgs, Microsoft.VisualStudio.Utilities.IUIThreadOperationScope)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.EncapsulateField.AbstractEncapsulateFieldCommandHandler.ExecuteCommand(Microsoft.VisualStudio.Text.Editor.Commanding.Commands.EncapsulateFieldCommandArgs, Microsoft.VisualStudio.Commanding.CommandExecutionContext)\r\n   at Microsoft.VisualStudio.Commanding.CommandHandlerExtensions.ExecuteCommand[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Microsoft.VisualStudio.Commanding.ICommandHandler, System.__Canon, System.Action, Microsoft.VisualStudio.Commanding.CommandExecutionContext)\r\n   at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService+<>c__DisplayClass13_1`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<Execute>b__1()\r\n   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint(System.Object, System.Action, System.Predicate`1<System.Exception>)\r\n   at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService+<>c__DisplayClass13_1`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<Execute>b__0()\r\n   at Microsoft.VisualStudio.Commanding.CommandHandlerExtensions.ExecuteCommand[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Microsoft.VisualStudio.Commanding.ICommandHandler, System.__Canon, System.Action, Microsoft.VisualStudio.Commanding.CommandExecutionContext)\r\n   at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService+<>c__DisplayClass13_1`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<Execute>b__1()\r\n   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint(System.Object, System.Action, System.Predicate`1<System.Exception>)\r\n   at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService+<>c__DisplayClass13_1`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<Execute>b__0()\r\n   at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService.ExecuteCommandHandlerChain(Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerServiceState, System.Action, System.Action)\r\n   at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService.Execute[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Func`3<Microsoft.VisualStudio.Text.Editor.ITextView,Microsoft.VisualStudio.Text.ITextBuffer,System.__Canon>, System.Action)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandHandlerServiceAdapter.ExecuteEncapsulateFieldCommand(System.Action)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandHandlerServiceAdapter.ExecuteVisualStudio2000(UInt32, IntPtr, System.Action)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandHandlerServiceAdapter.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandHandlerServiceFilter.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.InnerExec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.AbstractOleCommandTarget+<>c__DisplayClass36_0.<ExecuteVisualStudio2000>g__executeNextCommandTarget|0()\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Commands.CommandHandlerService.ExecuteHandlers[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Generic.IList`1<Microsoft.CodeAnalysis.Editor.ICommandHandler`1<System.__Canon>>, System.__Canon, System.Action)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Commands.CommandHandlerService.Microsoft.CodeAnalysis.Editor.ICommandHandlerService.Execute[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Microsoft.VisualStudio.Utilities.IContentType, System.__Canon, System.Action)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.AbstractOleCommandTarget.ExecuteEncapsulateField(Microsoft.VisualStudio.Text.ITextBuffer, Microsoft.VisualStudio.Utilities.IContentType, System.Action)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.AbstractOleCommandTarget.ExecuteVisualStudio2000(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr, Microsoft.VisualStudio.Text.ITextBuffer, Microsoft.VisualStudio.Utilities.IContentType)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.AbstractOleCommandTarget.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.InnerExec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandFilterWrapper.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.InnerExec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandFilterWrapper.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.InnerExec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.Intellisense.MultiCaretPreemptingFilterProvider+MultiCaretPreemptingFilter.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.InnerExec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CommandChainNode.InnerExec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.SimpleTextViewWindow.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Editor.Implementation.CompoundTextViewWindow.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Platform.WindowManagement.DocumentObjectSite.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n   at Microsoft.VisualStudio.Platform.WindowManagement.WindowFrame.Exec(System.Guid ByRef, UInt32, UInt32, IntPtr, IntPtr)\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/35701","RelatedDescription":"Open issue \"AccessViolationException in IVsPreviewChangesService.PreviewChanges\" (#35701)"},{"Id":"444046544","IsPullRequest":true,"CreatedAt":"2019-05-14T17:52:41","Actor":"chsienki","Number":"35700","RawContent":null,"Title":"Filter optprof to specific tests","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35700","RelatedDescription":"Open PR \"Filter optprof to specific tests\" (#35700)"},{"Id":"443977588","IsPullRequest":true,"CreatedAt":"2019-05-14T16:45:00","Actor":"dpoeschl","Number":"35697","RawContent":null,"Title":"Skip failing compiler nologo tests","State":"closed","Body":"See https://github.com/dotnet/roslyn/issues/35696.","Url":"https://github.com/dotnet/roslyn/pull/35697","RelatedDescription":"Closed or merged PR \"Skip failing compiler nologo tests\" (#35697)"},{"Id":"444012581","IsPullRequest":true,"CreatedAt":"2019-05-14T16:31:08","Actor":"jasonmalinowski","Number":"35698","RawContent":null,"Title":"Show nullable annotations in the Change Signature dialog ","State":"open","Body":"The underlying refactoring worked just fine, so this is a trivial update to UI.","Url":"https://github.com/dotnet/roslyn/pull/35698","RelatedDescription":"Open PR \"Show nullable annotations in the Change Signature dialog \" (#35698)"},{"Id":"443970535","IsPullRequest":false,"CreatedAt":"2019-05-14T15:07:30","Actor":"dpoeschl","Number":"35696","RawContent":null,"Title":"Compiler nologo test failures","State":"open","Body":"These tests are failing master-vs-deps signed builds. Example build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2672552&view=ms.vss-test-web.test-result-details\r\n\r\n```\r\nAssert.Equal() Failure\\r\\n ↓ (pos 48)\r\nExpected: ···iler version A.B.C-d (HASH)\\\\r\\\\nCopyright (C) Microsoft Corporat···\r\nActual: ···iler version A.B.C-d-19264-03 (HASH)\\\\r\\\\nCopyright (C) Microsoft···\\r\\n ↑ (pos 48)\r\n\r\nat Microsoft.CodeAnalysis.CSharp.CommandLine.UnitTests.CommandLineTests.NoLogo_2() in /_/src/Compilers/CSharp/Test/CommandLine/CommandLineTests.cs:line 6247\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35696","RelatedDescription":"Open issue \"Compiler nologo test failures\" (#35696)"},{"Id":"443941513","IsPullRequest":false,"CreatedAt":"2019-05-14T14:16:20","Actor":"jcouv","Number":"35695","RawContent":null,"Title":"Should we analyze tuples element-wise?","State":"open","Body":"I will collect a few examples to show how we treat tuples element-wise in type inference and with regards to variance, but we don't do so for nullability analysis.\r\n\r\n```C#\r\n#nullable enable\r\nclass Program\r\n{\r\n    static void F((object?, int?) t)\r\n    {\r\n        _ = ((object, int?))t; // not great warning CS8619: Nullability of reference types in value of type '(object?, int?)' doesn't match target type '(object, int?)'.\r\n        _ = (object)t.Item1;\r\n\r\n        _ = ((string?, int))t; // not great warning CS8619: Nullability of reference types in value of type '(object?, int?)' doesn't match target type '(string?, int)'.\r\n        _ = (int)t.Item2;\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35695","RelatedDescription":"Open issue \"Should we analyze tuples element-wise?\" (#35695)"},{"Id":"443846261","IsPullRequest":false,"CreatedAt":"2019-05-14T10:52:31","Actor":"jods4","Number":"35694","RawContent":null,"Title":"Code navigation is broken in Peek window","State":"open","Body":"**Version Used**: VS 2019\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open a solution.\r\n2. Use Alt-F12 to peek the definition of a symbol found in another file.\r\n3. Try to use code navigation on symbols in peek window. For example: Shift-F12 (find all references) or F12 (go to definition).\r\n\r\n**Expected Behavior**: References are found.\r\n\r\n**Actual Behavior**: No references found if the file has not been opened before.\r\n![image](https://user-images.githubusercontent.com/3832820/57692124-4772b980-7646-11e9-97fb-9029acd6aa25.png)\r\n\r\n**Important note**: if you have the file opened in a normal tab, it works as expected. Proof:\r\n![image](https://user-images.githubusercontent.com/3832820/57692269-a89a8d00-7646-11e9-8ded-47c1c02f1ef8.png)\r\n\r\nThen:\r\n![image](https://user-images.githubusercontent.com/3832820/57692420-04fdac80-7647-11e9-9e97-bf26a6295229.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35694","RelatedDescription":"Open issue \"Code navigation is broken in Peek window\" (#35694)"},{"Id":"443645617","IsPullRequest":true,"CreatedAt":"2019-05-14T01:30:07","Actor":"dotnet-bot","Number":"35693","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35693","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35693)"},{"Id":"443637122","IsPullRequest":true,"CreatedAt":"2019-05-13T22:58:34","Actor":"sharwell","Number":"35692","RawContent":null,"Title":"Expose a CodeAction API for groups of nested code actions","State":"open","Body":"Closes #20049","Url":"https://github.com/dotnet/roslyn/pull/35692","RelatedDescription":"Open PR \"Expose a CodeAction API for groups of nested code actions\" (#35692)"},{"Id":"443620933","IsPullRequest":true,"CreatedAt":"2019-05-13T22:01:10","Actor":"mavasani","Number":"35691","RawContent":null,"Title":"Code action to configure severity with .editorconfig","State":"open","Body":"This PR revives the work done in https://github.com/dotnet/roslyn/pull/29332 to add a code action to configure severity of diagnostics. Unlike that PR, which relied on .editorconfig being marked as an additional file, this PR uses the newly added `AnalyzerConfigDocument` for .editorconfig files. Screenshots and a small working snippet is attached below:\r\n\r\n**Top level menu:** Now we nest all configure and suppress code actions into a sub-menu to avoid clutter in lightbulb\r\n![image](https://user-images.githubusercontent.com/10605811/57649500-3b6ef500-757d-11e9-848a-a44775458400.png)\r\n\r\n**Create new .editorconfig with configured severity:**\r\n![image](https://user-images.githubusercontent.com/10605811/57649651-a8828a80-757d-11e9-8e35-6b338489807c.png)\r\n\r\n**Update existing .editorconfig with new severity:**\r\n![image](https://user-images.githubusercontent.com/10605811/57649690-bb955a80-757d-11e9-8ff7-a73d5c0e9f25.png)\r\n\r\n**Supports different syntax for diagnostics that map to code style option:**\r\n![image](https://user-images.githubusercontent.com/10605811/57650312-64908500-757f-11e9-8b1b-7b4d98d63853.png)\r\n\r\n**Code action snippet:**\r\n![Configure_Severity_Screenshot](https://user-images.githubusercontent.com/10605811/57649539-5fcad180-757d-11e9-8076-8d9ba615153b.gif)\r\n\r\n**NOTE:** I also had to thread through AnalyzerConfigDocuments at bunch of places in the workspace layer to get the creating/updating of this new document kind via a code action to work as expected. I have added relevant tests.\r\n\r\n**Future enhancements:**\r\n1. Expose a code action to configure code style option values for corresponding diagnostics.\r\n2. Current code fix only adds/updates a single closest .editorconfig relative to the file with the diagnostic. In future, we might want to enable customization of this via options.","Url":"https://github.com/dotnet/roslyn/pull/35691","RelatedDescription":"Open PR \"Code action to configure severity with .editorconfig\" (#35691)"},{"Id":"443615687","IsPullRequest":false,"CreatedAt":"2019-05-13T21:44:55","Actor":"mavasani","Number":"35690","RawContent":null,"Title":"Different .editorconfig severity strings are used to specify IDE code style options and dotnet_diagnostic.severity","State":"open","Body":"**Version Used**: \r\nLatest master source\r\n\r\nI found out we use different editorconfig strings for severities specified through our code style options and the ones that the compiler looks for:\r\n\r\n| DiagnosticSeverity | IDE Code style term | Compiler dotnet_diagnostic.severity term |\r\n| ------- | ------- | ------- |\r\n| Error | \"error\" | \"error\" |\r\n| Warning | \"warning\" | \"warn\" |\r\n| Info | \"suggestion\" | \"info\" |\r\n| Hidden | \"silent\" or \"refactoring\" | \"hidden\" |\r\n| Suppress | \"none\" | \"suppress\" |\r\n\r\nSo, user needs to use different terms for specifying severies, which seems very confusing:\r\n```\r\n[*.cs]\r\n\r\n# CA1822: Mark members as static\r\ndotnet_diagnostic.CA1822.severity = warn\r\n\r\n# IDE0059: Unnecessary assignment of a value\r\ncsharp_style_unused_value_assignment_preference = discard_variable:warning\r\n```\r\n\r\nCompiler generates the following diagnostic if term `warning` is used for `dotnet_diagnostic.CA1822.severity`\r\n```\r\nCSC : warning InvalidSeverityInAnalyzerConfig: The diagnostic 'ca1822' was given an invalid severity 'warning' in the analyzer config file\r\n```\r\n\r\n**IDE code style:**\r\nDocumentation: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#language-code-styles\r\nImplementation: http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/NamingStyles/EditorConfig/EditorConfigSeverityStrings.cs,5\r\n\r\n**Compiler:**\r\nhttps://github.com/dotnet/roslyn/blob/2f57d11ecc36d11c06fc862dcb0de37c96d305d2/src/Compilers/Core/Portable/CommandLine/AnalyzerConfigSet.cs#L158\r\n\r\nI believe the compiler terms should be switched to follow the [already shipped terminology](https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#language-code-styles) or at least the compiler should allow the terms from both columns in the table above\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35690","RelatedDescription":"Open issue \"Different .editorconfig severity strings are used to specify IDE code style options and dotnet_diagnostic.severity\" (#35690)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"444137558","IsPullRequest":true,"CreatedAt":"2019-05-14T21:39:32","Actor":"jkotas","Number":"7424","RawContent":null,"Title":"Update dependencies","State":"open","Body":"","Url":"https://github.com/dotnet/corert/pull/7424","RelatedDescription":"Open PR \"Update dependencies\" (#7424)"},{"Id":"444029647","IsPullRequest":true,"CreatedAt":"2019-05-14T21:13:10","Actor":"Dotnet-GitSync-Bot","Number":"7423","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @cshung @sywhang @tannergooding","Url":"https://github.com/dotnet/corert/pull/7423","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7423)"},{"Id":"441935856","IsPullRequest":true,"CreatedAt":"2019-05-14T20:38:16","Actor":"trylek","Number":"7410","RawContent":null,"Title":"SuperIlc support for the issues.targets file","State":"closed","Body":"This change implements a new option --issues-path that can be used\r\nto specify the path to explicit CoreCLR test exclusion XML file.\r\nThis is useful when running CoreCLR test suites so that we filter\r\nout tests known to be failing or hanging and thus reduce noise in\r\nour CPAOT results.\r\n\r\nAs the issues.targets is technically an msbuild project file, I have\r\nleveraged MSBuild interface libraries to evaluate the conditional\r\nexpressions in the file much like we do in .NET Native when evaluating\r\nthe bugdata.ProjectN.xml file. For now I have set many of the project\r\nproperties to arbitrary values, that's up to further cleanup once\r\nwe start expanding our targeting matrix.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7410","RelatedDescription":"Closed or merged PR \"SuperIlc support for the issues.targets file\" (#7410)"},{"Id":"443016643","IsPullRequest":true,"CreatedAt":"2019-05-14T17:01:52","Actor":"trylek","Number":"7415","RawContent":null,"Title":"Move CanInline to CompilationModuleGroup","State":"closed","Body":"As a preparatory change towards adding support for large version\r\nbubble to CPAOT I'm proposing to move CanInline from Compilation to\r\nCompilationModuleGroup in accordance with Simon's and Michal's\r\nfeedback - this refactoring will make it much easier to decouple\r\nthe set of assemblies being compiled from the set of assemblies\r\nwe can inline against (in large version bubble mode anything\r\ncan be inlined).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7415","RelatedDescription":"Closed or merged PR \"Move CanInline to CompilationModuleGroup\" (#7415)"},{"Id":"443994361","IsPullRequest":false,"CreatedAt":"2019-05-14T16:25:03","Actor":"ctaggart","Number":"7422","RawContent":null,"Title":"RhpETWLogLiveCom error on Debian 9 build","State":"closed","Body":"I got `dotnet publish -r win-x64`  working on Windows for my project, but when I try to build from `mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch` docker image, I get an error about `RhpETWLogLiveCom` missing.\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.08 ms for /src/Shirley/Shirley.fsproj.\r\n  Shirley -> /src/Shirley/bin/release/netcoreapp2.2/linux-x64/Shirley.dll\r\n  /usr/bin/clang-3.9\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(ReadOnlySpan`1<char>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(System.ReadOnlySpan`1<Char>) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32,Encoding)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32, System.Text.Encoding) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[],int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[], Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[])` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[]) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `[S.P.CoreLib]System.Activator.CreateInstanceIntrinsic<__Canon>()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.__Canon System.Activator.CreateInstanceIntrinsic() [/src/Shirley/Shirley.fsproj]\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWShouldWalkCom':\r\n  (__managedcode+0x613573): undefined reference to `RhpETWShouldWalkCom'\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWLogLiveCom':\r\n  (__managedcode+0x61359b): undefined reference to `RhpETWLogLiveCom'\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/src/Shirley/Shirley.fsproj]\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.2/linux-x64/native/Shirley.o\" -o \"bin/release/netcoreapp2.2/linux-x64/native/Shirley\" /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libbootstrapper.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libRuntime.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.CoreLib.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.TypeLoader.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Globalization.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.IO.Compression.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Net.Security.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt\" exited with code 1. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nBased on https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md, I installed clang with:\r\n```\r\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\r\necho \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" | tee -a /etc/apt/sources.list\r\napt-get update\r\napt-get install cmake clang-3.9 libicu-dev uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev -y\r\n```\r\n\r\nThe CoreRT version is:\r\n```\r\n      \"Microsoft.DotNet.ILCompiler\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.0-alpha-*, )\",\r\n        \"resolved\": \"1.0.0-alpha-27714-01\",\r\n        \"contentHash\": \"Xa2TzZJKoyhMJF7rx+/WjXYOYfQEprdr6CGptdQ0ix4kVI2icYJQnbm+TALQHfb9okW0X3ebNrlPxXhJW461Qw==\"\r\n      },\r\n```\r\n\r\nI noticed this import here and noticed it hasn't been changed in a while.\r\nhttps://github.com/dotnet/corert/blame/master/src/System.Private.CoreLib/src/System/Runtime/RuntimeImports.cs#L724-L729\r\n\r\nAm I missing a dependency?\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7422","RelatedDescription":"Closed issue \"RhpETWLogLiveCom error on Debian 9 build\" (#7422)"},{"Id":"443767461","IsPullRequest":false,"CreatedAt":"2019-05-14T08:04:14","Actor":"mariopasquali","Number":"7421","RawContent":null,"Title":"Compiling ARM on x64","State":"open","Body":"Hi all,\r\n\r\nIt is a few weeks I am trying to set up an environment for compiling a Linux-ARM executable on a x64 machine, without much luck for now.  \r\n\r\nI have set up multiple machines including Debian 9, Ubuntu 16, Ubuntu 18, all 64-bits, even tried with 32-bits versions.  I am currently working on a Ubuntu 16 x64.  Probably an obvious question, but could someone confirm this is supported for compiling an ARM32 output?\r\n\r\nThere are a few possible typos in the following document that are possibly confusing:\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/cross-building.md\r\n\r\n- `\"In addition, to cross compile CoreCLR\"` should it be CoreRT?\r\n- `\"Cross compiling CoreCLR\"` should it be CoreRT?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/\"` should it be corert?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/arm ./build.sh\"` should it be corert?\r\n\r\nAnother aspect that I didn't get right is the section \"Using CoreRT for cross compiling under arm on x86 host\".  Is this the section applying to my case where I whish building an output for ARM32 on x86?  If yes, then when would the previous section \"Cross compiling CoreCLR\" apply?\r\n\r\nA few more remarks on the section \"Using CoreRT for cross compiling under arm on x86 host\":\r\n- The steps for \"Build CoreFX\" seems outdated.  Should probably by updated with https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md.  \r\n- `\"./build.sh x86 debug verbose cross crosstarget skiptests\"` There is no parameter crosstarget in build.sh as far as I can see.  Is this outdated?  I am running into various issues when trying to run this step without \"crosstarget\" parameter, like file not found of ConstrainedCallSupportHelpers.S, `\"GetUnwindProcInfo is not supported on this arch yet.\"`, etc.\r\n- Regarding step 4, it would be helpful to give examples of the variables.  What is supposed to be ${WORKING_DIR}?  The output of the application that should be compiled?\r\n\r\nThank you,\r\nMario ","Url":"https://github.com/dotnet/corert/issues/7421","RelatedDescription":"Open issue \"Compiling ARM on x64\" (#7421)"},{"Id":"442385927","IsPullRequest":true,"CreatedAt":"2019-05-14T05:35:48","Actor":"Dotnet-GitSync-Bot","Number":"7412","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7412","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7412)"},{"Id":"443568119","IsPullRequest":true,"CreatedAt":"2019-05-14T03:14:10","Actor":"jkotas","Number":"7418","RawContent":null,"Title":"Opt-in more Windows PInvokes into direct calls","State":"closed","Body":"Fixes intermittent infinited recursion inside lazy PInvoke resolver","Url":"https://github.com/dotnet/corert/pull/7418","RelatedDescription":"Closed or merged PR \"Opt-in more Windows PInvokes into direct calls\" (#7418)"},{"Id":"443634094","IsPullRequest":true,"CreatedAt":"2019-05-14T03:13:57","Actor":"JohnTortugo","Number":"7419","RawContent":null,"Title":"Update xplat-job.yml","State":"closed","Body":"Relates to: https://github.com/dotnet/core-eng/issues/6291\r\n\r\n/cc @MattGal ","Url":"https://github.com/dotnet/corert/pull/7419","RelatedDescription":"Closed or merged PR \"Update xplat-job.yml\" (#7419)"},{"Id":"443662831","IsPullRequest":true,"CreatedAt":"2019-05-14T03:02:47","Actor":"MichalStrehovsky","Number":"7420","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7420","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#7420)"},{"Id":"441964184","IsPullRequest":true,"CreatedAt":"2019-05-13T19:45:58","Actor":"nattress","Number":"7411","RawContent":null,"Title":"Add SuperIlc compile-nuget command","State":"closed","Body":"Add support for compiling assemblies from Nuget packages with Crossgen / CPAOT to validate them on real-world code. The compile-nuget command takes a list of Nuget packages and for each package creates an empty console app, adds the package to the app, publishes, and then runs Crossgen / CPAOT. This initial command does not run the app and is meant for gathering data on noisiness of compile logs, ensuring compilation regressions don't happen, tracking ready-to-run binary sizes, etc.\r\n\r\nTop100Nuget.txt is provided as an example, and contains the 100 most popular Nuget packages on nuget.org as of this commit.","Url":"https://github.com/dotnet/corert/pull/7411","RelatedDescription":"Closed or merged PR \"Add SuperIlc compile-nuget command\" (#7411)"},{"Id":"443059474","IsPullRequest":true,"CreatedAt":"2019-05-13T17:38:45","Actor":"Suchiman","Number":"7416","RawContent":null,"Title":"Port GC changes from coreclr - 8","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7389\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/1e11b32ca720f886adfa0cc2a6a46829feba78d0):**\r\n- https://github.com/dotnet/coreclr/commit/0ee3b5e64a98dc71aefed2304fe4bcf7f66ca9f5 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d23a2bc131eae32c473e39fcb3b640af1a95d244 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/dda6b6136e21901842758970d831f31687913a35 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/e7725a6ff986879f8ff2fd9e09ab636545ba7bca (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3a24095610ecaba62495740bf8319ad467af4997 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3bd82d1935806a87d668f4ea102de37077996005 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8b8231291ded137c49632ef808bbbdc9a500507b (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0372174871c1e27f483c9877c2c5181720be8722 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/df214e67d3cbccb42d2733f4cbe8097a378a731a (skipped)\r\n- https://github.com/dotnet/coreclr/commit/8415a8933844c9d92c435f6ac268612a9563eb3a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/5e82b75a22e9f1ee379beab45c2ddc6146132aab (gc only port)\r\n\r\n**Points of interest**:\r\nhttps://github.com/dotnet/coreclr/commit/d23a2bc131eae32c473e39fcb3b640af1a95d244 made some changes to volatile on the runtime side that i've only partially applied\r\nI've skipped the patch for `Add CGroup CFS CPU limit support` because cgroups support is missing","Url":"https://github.com/dotnet/corert/pull/7416","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 8\" (#7416)"},{"Id":"443513642","IsPullRequest":false,"CreatedAt":"2019-05-13T17:21:02","Actor":"ctaggart","Number":"7417","RawContent":null,"Title":"Please provide a .vsconfig","State":"open","Body":"Please provide a .vsconfig with the minimal required Visual Studio 2019 dependencies needed to build. For an example, see:\r\n\r\nhttps://github.com/microsoft/visualfsharp/blob/master/.vsconfig\r\n\r\nRight now the experience is:\r\n```\r\nPS C:\\Users\\taggac\\github\\corert> .\\build.cmd\r\nChecking pre-requisites...\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.1.0-pre.3.0\r\n** Copyright (c) 2019 Microsoft Corporation\r\n**********************************************************************\r\nCould not find Visual C++ under C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\. Visual C++ is a pre-requisite to build this repository.\r\nSee: https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md\r\n```\r\n\r\nI'd like to be able to open a solution and have Visual Studio prompt to install all the dependencies via Visual Studio Installer.","Url":"https://github.com/dotnet/corert/issues/7417","RelatedDescription":"Open issue \"Please provide a .vsconfig\" (#7417)"},{"Id":"442915094","IsPullRequest":true,"CreatedAt":"2019-05-11T21:57:05","Actor":"nattress","Number":"7414","RawContent":null,"Title":"Clean publish test output folders before run","State":"closed","Body":"Incremental build was hiding failures in our local enlistments that only CI would catch due to it always starting with a fresh enlistment.","Url":"https://github.com/dotnet/corert/pull/7414","RelatedDescription":"Closed or merged PR \"Clean publish test output folders before run\" (#7414)"},{"Id":"442866699","IsPullRequest":true,"CreatedAt":"2019-05-10T21:13:18","Actor":"trylek","Number":"7413","RawContent":null,"Title":"Revert \"Initial CPAOT support for large version bubble\"","State":"closed","Body":"Reverts dotnet/corert#7403","Url":"https://github.com/dotnet/corert/pull/7413","RelatedDescription":"Closed or merged PR \"Revert \"Initial CPAOT support for large version bubble\"\" (#7413)"},{"Id":"440872069","IsPullRequest":true,"CreatedAt":"2019-05-09T21:14:25","Actor":"trylek","Number":"7403","RawContent":null,"Title":"Initial CPAOT support for large version bubble","State":"closed","Body":"This change modifies the existing --inputbubble CPAOT option\r\nto work the same as Crossgen /largeversionbubble i.e. the main module\r\nand all reference assemblies are considered to belong to the same\r\nversion bubble.\r\n\r\nThe gist of the change deals with encoding module overrides in\r\nsignatures. I have implemented a new R2R header table\r\nManifestMetadataTableNode and added logic for composing and emitting\r\nthe extra AssemblyRef list.\r\n\r\nOne challenging bit was that we need to emit all the signatures before\r\nemitting the ManifestMetadataTableNode because only the emission\r\nof the signatures shakes out all the required AssemblyRef's. I have\r\nadded a simple loop to ImportSectionsTableNode / ImportSectionNode\r\nthat traverses and emits all registered import cell signatures.\r\n\r\nAfter I managed to make the basic signature emission work with module\r\noverride, I continued hitting issues with the two entrypoint tables.\r\nFor the (non-generic) method entrypoint table we need to filter out\r\nmethods outside of the current input module because the larger\r\ncompilation group representing the larger version bubble ends up\r\nexpanding the dependency graph to framework methods.\r\n\r\nWhile these \"external\" methods are not compiled into the output\r\nexecutable (except when they are occasionally inlined into a local\r\nmethod), we were still trying to emit them into the entrypoint\r\ntable and we were crashing compilation because we couldn't find\r\nsome of the necessary tokens.\r\n\r\nFor instance entrypoints, I didn't find any manner of encoding\r\na module override for their signatures in the native hashtable so\r\nfor now I added filtering that we're only storing those instance\r\nentrypoints that have the current input module as the reference\r\nmodule. One can theoretically imagine that a module may contain\r\narbitrary generic instantiations spanning other modules when\r\nlarger bubbles are on.\r\n\r\nWhile working on the change I also realized that the current way\r\nof basing signature contexts on input modules in CorInfoImpl.ReadyToRun\r\nwas incorrect - when a method gets inlined, we still need the original\r\nsignature context because that's what defines the ambient module\r\nused in the CoreCLR signature parser.\r\n\r\nI have deleted the field and instead I added a new method\r\nGetSignatureContext which currently returns\r\nReadyToRunCoregenNodeFactory.InputModuleContext. Once we start\r\nimplementing \"single-file\" (i.e. compiling multiple MSIL modules\r\ninto a single PE), we'll change this to something more fine-grained,\r\nmost likely based on some lookup on MethodBeingCompiled.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7403","RelatedDescription":"Closed or merged PR \"Initial CPAOT support for large version bubble\" (#7403)"},{"Id":"441809686","IsPullRequest":false,"CreatedAt":"2019-05-08T20:23:21","Actor":"danwalmsley","Number":"7408","RawContent":null,"Title":"UWP .net Native Internal Compiler Error.","State":"closed","Body":"Sorry if this is the wrong place for .net native and UWP compile errors.\r\n\r\nI have a UWP app, and we have been using debug mode during develop. We are trying to build in release mode with .net native toolchain (this is quite important for us to get the high performance.)\r\n\r\nHowever we get an internal compiler error:\r\n```\r\n8>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\AppxPackage\\Microsoft.AppXPackage.Targets(3164,5): warning : APPX4001: Build property AppxBundlePlatforms is not explicitly set and is calculated based on currently building architecture. Use 'Create App Package' wizard or edit project file to set it.\r\n8>  Processing application code\r\n8>  Computing application closure and generating interop code\r\n8>    Loading 121 modules...\r\n8>    Generating code...\r\n8>    Interop code generated.\r\n8>  Generating serialization code\r\n8>  Compiling interop code\r\n8>  Generating System.Reflection.DispatchProxy proxy code.\r\n8>  Cleaning up unreferenced code\r\n8>  Generating native code\r\n8>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.3\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.3\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\dev\\repos\\ILMD\\ILMD.App\\ILMD.App\\ILMD.App.UWP\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\ILMD.App.UWP.rsp\"' returned exit code 1\r\n========== Build: 7 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```\r\n\r\n\r\nI ran using msbuild and versbose and nutc_driver.exe gives internal compiler error but no more useful information.\r\n\r\n   I would be willing to send my source code for testing privately.\r\n\r\nThanks in advance\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7408","RelatedDescription":"Closed issue \"UWP .net Native Internal Compiler Error.\" (#7408)"},{"Id":"441867767","IsPullRequest":true,"CreatedAt":"2019-05-08T18:24:16","Actor":"MichalStrehovsky","Number":"7409","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7409","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7409)"},{"Id":"441270623","IsPullRequest":true,"CreatedAt":"2019-05-08T09:12:19","Actor":"MichalStrehovsky","Number":"7405","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7405","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#7405)"},{"Id":"441376921","IsPullRequest":true,"CreatedAt":"2019-05-08T01:12:00","Actor":"jkotas","Number":"7406","RawContent":null,"Title":"Port https://github.com/dotnet/coreclr/pull/24387 to CoreRT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7406","RelatedDescription":"Closed or merged PR \"Port https://github.com/dotnet/coreclr/pull/24387 to CoreRT\" (#7406)"},{"Id":"441426037","IsPullRequest":false,"CreatedAt":"2019-05-07T20:14:25","Actor":"Fabi","Number":"7407","RawContent":null,"Title":"Tls callbacks","State":"open","Body":"Hey!\r\n\r\nI know that I can create native exports etc, but my question is if it's possible to use own tls callbacks in the current state?","Url":"https://github.com/dotnet/corert/issues/7407","RelatedDescription":"Open issue \"Tls callbacks\" (#7407)"},{"Id":"441010437","IsPullRequest":true,"CreatedAt":"2019-05-07T04:17:53","Actor":"Dotnet-GitSync-Bot","Number":"7404","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Anipik","Url":"https://github.com/dotnet/corert/pull/7404","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7404)"},{"Id":"440801223","IsPullRequest":true,"CreatedAt":"2019-05-06T17:53:33","Actor":"Dotnet-GitSync-Bot","Number":"7402","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7402","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7402)"},{"Id":"440711963","IsPullRequest":true,"CreatedAt":"2019-05-06T15:18:44","Actor":"Dotnet-GitSync-Bot","Number":"7400","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @krwq","Url":"https://github.com/dotnet/corert/pull/7400","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7400)"},{"Id":"440731576","IsPullRequest":false,"CreatedAt":"2019-05-06T15:15:36","Actor":"vadash","Number":"7401","RawContent":null,"Title":"Q: .managed section in PE file. Can someone extract source code from it ?","State":"closed","Body":"and what does it contain ? \r\n![die_SlSWWwH5nM](https://user-images.githubusercontent.com/1397582/57232467-52659280-7025-11e9-948e-ed7f4d55c1fe.png)\r\nThanks for amazing CoreRT\r\n","Url":"https://github.com/dotnet/corert/issues/7401","RelatedDescription":"Closed issue \"Q: .managed section in PE file. Can someone extract source code from it ?\" (#7401)"},{"Id":"440697846","IsPullRequest":true,"CreatedAt":"2019-05-06T13:24:01","Actor":"MichalStrehovsky","Number":"7399","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7399","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7399)"},{"Id":"440666948","IsPullRequest":true,"CreatedAt":"2019-05-06T12:05:21","Actor":"MichalStrehovsky","Number":"7398","RawContent":null,"Title":"Fix nullable analysis errors in ProjectN","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7398","RelatedDescription":"Closed or merged PR \"Fix nullable analysis errors in ProjectN\" (#7398)"},{"Id":"440649625","IsPullRequest":true,"CreatedAt":"2019-05-06T11:16:11","Actor":"dotnet-bot","Number":"7397","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/7397","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#7397)"},{"Id":"440644215","IsPullRequest":true,"CreatedAt":"2019-05-06T10:58:31","Actor":"MichalStrehovsky","Number":"7396","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7396","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7396)"},{"Id":"440483855","IsPullRequest":true,"CreatedAt":"2019-05-05T22:22:44","Actor":"Dotnet-GitSync-Bot","Number":"7395","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7395","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7395)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"444061058","IsPullRequest":true,"CreatedAt":"2019-05-14T18:28:35","Actor":"kouvel","Number":"3232","RawContent":null,"Title":"Make QuickJitForLoops configurable","State":"open","Body":"- Enabling this option may improve startup time, may be useful in some scenarios\r\n- Enabling this option opens up the possibility that long-running hot loops remain for too long in code that is not optimized. Methods containing such hot loops may be attributed with `AggressiveOptimizationAttribute` to work around the issue on a case-by-case basis.","Url":"https://github.com/dotnet/sdk/pull/3232","RelatedDescription":"Open PR \"Make QuickJitForLoops configurable\" (#3232)"},{"Id":"443611004","IsPullRequest":true,"CreatedAt":"2019-05-14T18:10:31","Actor":"dsplaisted","Number":"3228","RawContent":null,"Title":"Add ability to use test config file to list tests to skip","State":"closed","Body":"Add support for passing a `-testConfigFile` parameter when running tests.  This allows individual tests to be skipped without having to modify the test source code.  This will be helpful to allow tests to be run on other repos, such as with https://github.com/dotnet/core-sdk/pull/1454.\r\n\r\nThe test config file looks like this\r\n\r\n```xml\r\n<Tests>\r\n  <Method Name=\"Microsoft.NET.Clean.Tests.GivenThatWeWantToCleanAHelloWorldProject.It_can_clean_and_build_without_using_rebuild\"\r\n          Skip=\"true\"\r\n          Issue=\"https://github.com/dotnet/sdk/issues/1234\"\r\n          Reason=\"Reason for skip\"/>\r\n</Tests>\r\n```\r\n\r\nThe `Issue` and `Reason` attributes aren't currently used, they are merely informational to help us keep such a list up-to-date.","Url":"https://github.com/dotnet/sdk/pull/3228","RelatedDescription":"Closed or merged PR \"Add ability to use test config file to list tests to skip\" (#3228)"},{"Id":"444047284","IsPullRequest":true,"CreatedAt":"2019-05-14T17:54:22","Actor":"sbomer","Number":"3231","RawContent":null,"Title":"Flow IsTrimmable from FrameworkReference to RuntimePack","State":"open","Body":"Follow-up to https://github.com/dotnet/core-sdk/pull/1992/files. The next step is to flow the metadata from `RuntimePack` to the resolved files.\r\n\r\nThis flows `IsTrimmable` metadata from `FrameworkReference` and `KnownFrameworkReference` (`FrameworkReference` has priority) to the `RuntimePack` ItemGroup produced by `ResolveFrameworkReferences`. The metadata will ultimately influence the default linker behavior.\r\n\r\n@dsplaisted @nguerrera PTAL.","Url":"https://github.com/dotnet/sdk/pull/3231","RelatedDescription":"Open PR \"Flow IsTrimmable from FrameworkReference to RuntimePack\" (#3231)"},{"Id":"443876478","IsPullRequest":true,"CreatedAt":"2019-05-14T14:10:53","Actor":"dotnet-maestro[bot]","Number":"3230","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19263.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3230","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3230)"},{"Id":"443634084","IsPullRequest":true,"CreatedAt":"2019-05-14T04:43:11","Actor":"JohnTortugo","Number":"3229","RawContent":null,"Title":"Update .vsts-ci.yml","State":"closed","Body":"Relates to: https://github.com/dotnet/core-eng/issues/6291\r\n\r\n/cc @mattgal","Url":"https://github.com/dotnet/sdk/pull/3229","RelatedDescription":"Closed or merged PR \"Update .vsts-ci.yml\" (#3229)"},{"Id":"442475750","IsPullRequest":true,"CreatedAt":"2019-05-14T01:08:18","Actor":"dsplaisted","Number":"3221","RawContent":null,"Title":"Add support for transitive framework references","State":"closed","Body":"Fixes dotnet/cli#10666","Url":"https://github.com/dotnet/sdk/pull/3221","RelatedDescription":"Closed or merged PR \"Add support for transitive framework references\" (#3221)"},{"Id":"443361175","IsPullRequest":true,"CreatedAt":"2019-05-13T13:35:29","Actor":"dotnet-maestro[bot]","Number":"3227","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19262.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3227","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3227)"},{"Id":"443096756","IsPullRequest":true,"CreatedAt":"2019-05-12T13:49:50","Actor":"dotnet-maestro[bot]","Number":"3226","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19261.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3226)"},{"Id":"442986145","IsPullRequest":true,"CreatedAt":"2019-05-11T13:34:45","Actor":"dotnet-maestro[bot]","Number":"3225","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3225)"},{"Id":"442909757","IsPullRequest":true,"CreatedAt":"2019-05-10T22:01:18","Actor":"wli3","Number":"3224","RawContent":null,"Title":"WIP test ci Add hello world winforms and wpf tests","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3224","RelatedDescription":"Open PR \"WIP test ci Add hello world winforms and wpf tests\" (#3224)"},{"Id":"442888741","IsPullRequest":false,"CreatedAt":"2019-05-10T20:47:19","Actor":"wli3","Number":"3223","RawContent":null,"Title":"Add performance test for WPF and Winform","State":"open","Body":"- [ ] Add hello world test for WPF and Winform for netcore and full framework, make sure infrastructure supports that.\r\n- [ ] Add large realistic project","Url":"https://github.com/dotnet/sdk/issues/3223","RelatedDescription":"Open issue \"Add performance test for WPF and Winform\" (#3223)"},{"Id":"441556194","IsPullRequest":true,"CreatedAt":"2019-05-10T16:50:53","Actor":"wli3","Number":"3212","RawContent":null,"Title":"Fix packasktool cannot run","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3212","RelatedDescription":"Closed or merged PR \"Fix packasktool cannot run\" (#3212)"},{"Id":"442684448","IsPullRequest":true,"CreatedAt":"2019-05-10T13:50:37","Actor":"dotnet-maestro[bot]","Number":"3222","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190509.9\r\n- **Date Produced**: 5/10/2019 12:31 AM\r\n- **Commit**: 155080ecb738e189db75f8f2461ebad75d955aa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19259.9\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3222","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3222)"},{"Id":"441924321","IsPullRequest":true,"CreatedAt":"2019-05-09T20:34:43","Actor":"nugetlurker","Number":"3218","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.6013 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.6013 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3218","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.6013 into sdk\" (#3218)"},{"Id":"441924290","IsPullRequest":true,"CreatedAt":"2019-05-09T19:27:43","Actor":"nugetlurker","Number":"3217","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.6013 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.6013 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3217","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.6013 into sdk\" (#3217)"},{"Id":"442353906","IsPullRequest":false,"CreatedAt":"2019-05-09T18:09:57","Actor":"jdavidbambrick","Number":"3220","RawContent":null,"Title":"Internal Error: new deps file generation logic did not produce the same result as the old logic.","State":"closed","Body":"Added an new publishing profile - a new folder, under the existing one ... and go this error asking me to post it back to git hub... so here ya go...\r\n\r\n[netcoreapp3.0.zip](https://github.com/dotnet/sdk/files/3163329/netcoreapp3.0.zip)\r\n","Url":"https://github.com/dotnet/sdk/issues/3220","RelatedDescription":"Closed issue \"Internal Error: new deps file generation logic did not produce the same result as the old logic.\" (#3220)"},{"Id":"441195943","IsPullRequest":true,"CreatedAt":"2019-05-09T18:07:17","Actor":"dotnet-maestro[bot]","Number":"3209","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.12\r\n- **Date Produced**: 5/7/2019 5:12 AM\r\n- **Commit**: c31fac9f6899094226cb5cd77c85b8f60ecafa3d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19256.12\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190507.7\r\n- **Date Produced**: 5/8/2019 12:49 AM\r\n- **Commit**: bda52d7619f9420de46f2c39ffc972864bbcab63\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19257.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190508.5\r\n- **Date Produced**: 5/8/2019 10:17 PM\r\n- **Commit**: 9005cee9510d23535c09bd9b6be7c426e526c067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19258.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3209","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3209)"},{"Id":"442001391","IsPullRequest":true,"CreatedAt":"2019-05-09T00:44:36","Actor":"fadimounir","Number":"3219","RawContent":null,"Title":"Enable ARM/ARM64 crossgen compilation on arm/arm64 hosted machines","State":"open","Body":"Also fixing a path issue with native PDB creation on Linux: creating file under the R2R subdir","Url":"https://github.com/dotnet/sdk/pull/3219","RelatedDescription":"Open PR \"Enable ARM/ARM64 crossgen compilation on arm/arm64 hosted machines\" (#3219)"},{"Id":"441753051","IsPullRequest":true,"CreatedAt":"2019-05-08T22:34:12","Actor":"dsplaisted","Number":"3214","RawContent":null,"Title":"Don't require NuGetPackageId metadata for classic projects","State":"closed","Body":"- Don't require NuGetPackageId metadata for classic projects\r\n- Allow SDK-style projects to opt out of requirement for NuGetPackageId metadata by setting `RequirePackageIdMetadata` to false\r\n\r\nRelated: https://github.com/dotnet/core-sdk/issues/1904\r\n\r\nIn this PR, I've opted to keep the error by default for SDK-style projects, with a property to opt-out.  This is because I think it should be rare that SDK-style projects directly reference a DLL from a NuGet package, and the error could help catch issues where we should be setting the metadata but aren't, and hence would not handle conflict resolution correctly.\r\n\r\nOn the other hand, perhaps the error has served its purpose by now, and we should instead just remove it entirely.\r\n\r\nThoughts? @nguerrera @ericstj ","Url":"https://github.com/dotnet/sdk/pull/3214","RelatedDescription":"Closed or merged PR \"Don't require NuGetPackageId metadata for classic projects\" (#3214)"},{"Id":"441891063","IsPullRequest":false,"CreatedAt":"2019-05-08T20:51:54","Actor":"genifycom","Number":"3216","RawContent":null,"Title":"Razor Component onClick with arguments","State":"closed","Body":"In the sample FetchData.razor how does one call the onclick event with an object.\r\n\r\ne.g.\r\n\r\n  <tbody>\r\n        @foreach (var forecast in forecasts)\r\n        {\r\n            <tr>\r\n                <td onclick=\"@EditForecast(forecast)\">@forecast.Date.ToShortDateString()</td>\r\n                <td>@forecast.TemperatureC</td>\r\n                <td>@forecast.TemperatureF</td>\r\n                <td>@forecast.Summary</td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n...\r\n\r\n@functions {\r\n  private void EditForecast(WeatherForecast forecast)\r\n  {\r\n    //Do something with forecast\r\n  }\r\n}","Url":"https://github.com/dotnet/sdk/issues/3216","RelatedDescription":"Closed issue \"Razor Component onClick with arguments\" (#3216)"},{"Id":"441889479","IsPullRequest":false,"CreatedAt":"2019-05-08T20:51:45","Actor":"genifycom","Number":"3215","RawContent":null,"Title":"Razor Component write to console.log","State":"closed","Body":"Is there or will there be a way to write to the Browser console log from a Razor component running on the server?\r\n\r\nThanks","Url":"https://github.com/dotnet/sdk/issues/3215","RelatedDescription":"Closed issue \"Razor Component write to console.log\" (#3215)"},{"Id":"441418877","IsPullRequest":false,"CreatedAt":"2019-05-08T20:15:24","Actor":"MSLukeWest","Number":"3210","RawContent":null,"Title":"Self contained Publish of .Net Core 3 app for win-x86 is missing files","State":"closed","Body":"1. Create a .NET Core 3 WPF app\r\n2. Publish to folder, change \"Deployment Mode\" to \"Self-Contained\" and \"Target Runtime\" to \"win-x86\"\r\n3. Copy the created folder to a completely clean win10 machine (no VS or anything else installed)\r\n4. Attempt to run the app\r\n\r\nResult: It immediately crashes.  Here's the exception from the event log (full stack below):\r\n\r\nException Info: System.TypeInitializationException: The type initializer for '<Module>' threw an exception. ---> System.TypeLoadException: Could not load type 'System.Runtime.InteropServices.Marshal' from assembly 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n\r\nWhen I debug this app on a machine with VS installed (where it works) I see two loaded assemblies that aren't present on the clean machine:\r\n\r\nWindows\\SysWOW64\\msvcp140.dll\r\nWindows\\SysWOW64\\vcruntime140.dll\r\n\r\nI'm guessing the vc runtime is required, if so these assemblies should be copied to the package folder when doing self-contained publishing.\r\n\r\nFull exception stack:\r\n\r\nApplication: WpfApp23.exe\r\nCoreCLR Version: 4.6.27622.75\r\n.NET Core Version: 3.0.0-preview5-27626-15\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.TypeInitializationException: The type initializer for '<Module>' threw an exception. ---> System.TypeLoadException: Could not load type 'System.Runtime.InteropServices.Marshal' from assembly 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n   at ___CxxCallUnwindDtor(IntPtr pDtor, Void* pThis)\r\n   at .cctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.ContextLayoutManager.UpdateLayout()\r\n   at System.Windows.UIElement.UpdateLayout()\r\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\r\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\r\n   at System.Windows.Interop.HwndSource.set_RootVisual(Visual value)\r\n   at System.Windows.Window.SetRootVisual()\r\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\r\n   at System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.CreateSourceWindowDuringShow()\r\n   at System.Windows.Window.SafeCreateWindowDuringShow()\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.Run()\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at System.Windows.Application.Run(Window window)\r\n   at WpfApp23.App.Main()\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3210","RelatedDescription":"Closed issue \"Self contained Publish of .Net Core 3 app for win-x86 is missing files\" (#3210)"},{"Id":"440503432","IsPullRequest":false,"CreatedAt":"2019-05-08T17:27:01","Actor":"imsmart-tech","Number":"3204","RawContent":null,"Title":"Internal error: new deps file generation did not produce the same result as the old logic","State":"closed","Body":"Got this error which said to file issue here. So here it goes.\r\n\r\n[ImSmart.deps.json.txt](https://github.com/dotnet/sdk/files/3146159/ImSmart.deps.json.txt)\r\n\r\n[ImSmart.deps.new.json.txt](https://github.com/dotnet/sdk/files/3146160/ImSmart.deps.new.json.txt)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3204","RelatedDescription":"Closed issue \"Internal error: new deps file generation did not produce the same result as the old logic\" (#3204)"},{"Id":"441429577","IsPullRequest":false,"CreatedAt":"2019-05-08T17:24:48","Actor":"dannyvv","Number":"3211","RawContent":null,"Title":"Internal error: new deps file generation logic did not produce the same result as the old logic.","State":"closed","Body":"The error message told me to file this issue:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tInternal error: new deps file generation logic did not produce the same result as the old logic.\r\n    Please file an issue for this at https://github.com/dotnet/sdk and include the following two files: \r\n    Deps file from old logic: d:\\src\\b6\\public\\src\\Services\\Agent\\bin\\Debug\\netcoreapp3.0\\Agent.deps.json\r\n    Deps file from new logic: d:\\src\\b6\\public\\src\\Services\\Agent\\bin\\Debug\\netcoreapp3.0\\Agent.deps.new.json\r\n    You can work around this by setting the DepsFileGenerationMode MSBuild property to 'old'\tAgent\tC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011223\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets\t145\t\r\n```\r\n\r\nRequested files:\r\n[depsfiles.zip](https://github.com/dotnet/sdk/files/3154414/depsfiles.zip)\r\n\r\nNote: This started happening after adding a few assembly references by file to the BuildXL netcoreapp2.2 output folder\r\n","Url":"https://github.com/dotnet/sdk/issues/3211","RelatedDescription":"Closed issue \"Internal error: new deps file generation logic did not produce the same result as the old logic.\" (#3211)"},{"Id":"441735831","IsPullRequest":false,"CreatedAt":"2019-05-08T13:29:16","Actor":"NinoFloris","Number":"3213","RawContent":null,"Title":"Restore doesn't warn when restoring older pre 3.0 aspnet dependencies on netcore 3.0 resulting in TypeLoadExceptions","State":"open","Body":"Running on dotnet core 3.0.100-preview5 sdk while firing off a first request to aspnetcore 3.0.\r\n\r\n`dotnet restore` issues zero warnings when you try to restore projects with dependencies that reference older AspNetCore (sdk backed PackageReference) versions. Ran across this while updating one of our solutions where we have a dependency on `FluentValidation.AspNetCore` which depends on `Microsoft.AspNetCore.Mvc 2.2.0`\r\n\r\nThis is what's referenced in the deps.json of a succesfully built preview5 project:\r\n```\r\n      \"FluentValidation.AspNetCore/8.3.0\": {\r\n        \"dependencies\": {\r\n          \"FluentValidation\": \"8.3.0\",\r\n          \"FluentValidation.DependencyInjectionExtensions\": \"8.3.0\",\r\n          \"Microsoft.AspNetCore.Mvc\": \"2.2.0\"\r\n        },\r\n```\r\n\r\nStacktrace snippet \r\n```\r\n      Connection id \"0HLMJBP255QDV\", Request id \"0HLMJBP255QDV:00000001\": An unhandled exception was thrown by the application.\r\nSystem.Reflection.ReflectionTypeLoadException: Unable to load one or more of the requested types.\r\nMethod 'GetValidationVisitor' in type 'FluentValidation.AspNetCore.FluentValidationObjectModelValidator' from assembly 'FluentValidation.AspNetCore, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7de548da2fbae0f0' does not have an implementation.\r\n   at System.Reflection.RuntimeModule.GetTypes(RuntimeModule module)\r\n   at System.Reflection.RuntimeAssembly.get_DefinedTypes()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.get_Types()\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFeatureProvider.PopulateFeature(IEnumerable`1 parts, ControllerFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerActionDescriptorProvider.GetControllerTypes()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerActionDescriptorProvider.GetDescriptors()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerActionDescriptorProvider.OnProvidersExecuting(ActionDescriptorProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider.UpdateCollection()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider.Initialize()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider.GetChangeToken()\r\n   at Microsoft.AspNetCore.Mvc.Routing.ActionEndpointDataSourceBase.<>c__DisplayClass11_0.<Subscribe>b__0()\r\n   at Microsoft.Extensions.Primitives.ChangeToken.ChangeTokenRegistration`1..ctor(Func`1 changeTokenProducer, Action`1 changeTokenConsumer, TState state)\r\n   at Microsoft.Extensions.Primitives.ChangeToken.OnChange(Func`1 changeTokenProducer, Action changeTokenConsumer)\r\n   at Microsoft.AspNetCore.Mvc.Routing.ActionEndpointDataSourceBase.Subscribe()\r\n   at Microsoft.AspNetCore.Mvc.Routing.ControllerActionEndpointDataSource..ctor(IActionDescriptorCollectionProvider actions, ActionEndpointFactory endpointFactory)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n```\r\n\r\nI don't think this is what you want to RTM with right?","Url":"https://github.com/dotnet/sdk/issues/3213","RelatedDescription":"Open issue \"Restore doesn't warn when restoring older pre 3.0 aspnet dependencies on netcore 3.0 resulting in TypeLoadExceptions\" (#3213)"},{"Id":"440823220","IsPullRequest":true,"CreatedAt":"2019-05-07T22:57:45","Actor":"nugetlurker","Number":"3207","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.6003 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.6003 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3207","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.6003 into sdk\" (#3207)"},{"Id":"440823183","IsPullRequest":true,"CreatedAt":"2019-05-07T22:57:32","Actor":"nugetlurker","Number":"3206","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.6003 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.6003 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3206","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.6003 into sdk\" (#3206)"},{"Id":"440938051","IsPullRequest":true,"CreatedAt":"2019-05-07T21:41:47","Actor":"nguerrera","Number":"3208","RawContent":null,"Title":"Extend default AssetTargetFallback up to net48","State":"closed","Body":"Before:\r\n```\r\nAssetTargetFallback=net461\r\n```\r\n\r\nAfter:\r\n```\r\nAssetTargetFallback=net461;net462;net47;net471;net472;net48\r\n```\r\n\r\nThis ensures that existing projects do not get different assets, and that the \"oldest\" available assets beyond net461 (deemed most compatible) are used.\r\n\r\nFix #2425 ","Url":"https://github.com/dotnet/sdk/pull/3208","RelatedDescription":"Closed or merged PR \"Extend default AssetTargetFallback up to net48\" (#3208)"},{"Id":"440666847","IsPullRequest":true,"CreatedAt":"2019-05-07T12:05:50","Actor":"dotnet-maestro[bot]","Number":"3205","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190505.2\r\n- **Date Produced**: 5/5/2019 2:25 PM\r\n- **Commit**: 6a34948f7bdbc3ceb2fb16441b49f7748a462646\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19255.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3205","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3205)"},{"Id":"440436970","IsPullRequest":true,"CreatedAt":"2019-05-05T13:39:55","Actor":"dotnet-maestro[bot]","Number":"3203","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190504.1\r\n- **Date Produced**: 5/4/2019 12:58 PM\r\n- **Commit**: 1b8589bbf53b9a5e819460798eff59830f39a3be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19254.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3203","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3203)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1128343453970993152","CreatedAt":"2019-05-14T16:56:57+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1128339508414410757","CreatedAt":"2019-05-14T16:41:16+00:00","UserScreenname":"dotnet","Text":"ML .NET  CLI: Learn how to automatically generate an ML .NET  machine learning model and C# related code with this… https://t.co/i8zHrBa1UM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":91,"FavoriteCount":37,"RawContent":null},{"Id":"1126254867708727296","CreatedAt":"2019-05-08T22:37:39+00:00","UserScreenname":"dotnet","Text":"Introducing the new https://t.co/YEWOJxOW2B.SqlClient #DOTNET #dotnetcore #build2019\nhttps://t.co/JhNYQ1GDni https://t.co/44c9wGLwsC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":137,"FavoriteCount":69,"RawContent":null},{"Id":"1126254256850231296","CreatedAt":"2019-05-08T22:35:14+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework 6.3 Preview with .NET Core Support #dotnetcore #entityframework #DOTNET… https://t.co/9jFIJBJRB4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":43,"RawContent":null},{"Id":"1125533180725907458","CreatedAt":"2019-05-06T22:49:56+00:00","UserScreenname":"dotnet","Text":".NET Core is the Future of .NET #dotnetcore #build2019\nhttps://t.co/43Zpcfa4Px https://t.co/496vlRtRSJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":221,"FavoriteCount":109,"RawContent":null},{"Id":"1125481613435949057","CreatedAt":"2019-05-06T19:25:01+00:00","UserScreenname":"dotnet","Text":"Announcing ML .NET 1.0 #machinelearning #dotnet https://t.co/bZa9t3UnNq #build2019 https://t.co/noiQ59ZcnO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":212,"FavoriteCount":133,"RawContent":null},{"Id":"1125434436114194432","CreatedAt":"2019-05-06T16:17:33+00:00","UserScreenname":"dotnet","Text":"Introducing .NET 5, the next step in our journey that unifies the #dotnet platform https://t.co/OT6A0KkL0i… https://t.co/2ldeFp5lHB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":866,"FavoriteCount":582,"RawContent":null},{"Id":"1125433519579119616","CreatedAt":"2019-05-06T16:13:55+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.0 Preview 5! https://t.co/9DB6M3rxNn #build2019 https://t.co/zLbcHvIN5P","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":72,"FavoriteCount":52,"RawContent":null},{"Id":"1125433224316899328","CreatedAt":"2019-05-06T16:12:44+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Preview 5 https://t.co/1lswthCaj1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":200,"FavoriteCount":101,"RawContent":null},{"Id":"1125433206289756160","CreatedAt":"2019-05-06T16:12:40+00:00","UserScreenname":"dotnet","Text":".NET Core 3.0 Preview 5 now available! This #dotnetcore preview release includes new features, stability and improv… https://t.co/EbXcvuDPYI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":134,"FavoriteCount":73,"RawContent":null}]}},"RunOn":"2019-05-15T05:30:35.0558405Z","RunDurationInMilliseconds":10277}