{"Data":{"Blog":{"FeedItems":[{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8649828860","Type":"PullRequestEvent","CreatedAt":"2018-11-26T20:37:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2453","RelatedDescription":"Merged pull request \"Bump Mono LLVM commit to include workaround for 32-bit mingw gcc compiler bug.\" (#2453) at xamarin/xamarin-android","RelatedBody":"Should fix https://github.com/xamarin/xamarin-android/issues/2290.\r\n\r\nFix for crash in 32-bit llc.exe should be fixed by https://github.com/mono/llvm/pull/19. PR bumps to that commit in Mono LLVM release_60 branch."},{"Id":"8649828848","Type":"IssuesEvent","CreatedAt":"2018-11-26T20:37:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2290","RelatedDescription":"Closed issue \"AOT compilation fails on Windows after the update to mono 2018-06\" (#2290) at xamarin/xamarin-android","RelatedBody":"https://github.com/xamarin/xamarin-android/commit/606675b59f52595e3030c529de4c856fb347edd8 appears to have broken AOT compilation in certain cases.\r\n\r\n### Steps to Reproduce\r\n\r\n1. msbuild TodoAzure.Droid.csproj /t:SignAndroidPackage /p:Configuration=Release /p:AotAssemblies=true /p:EnableLlvm=true\r\nhttps://github.com/xamarin/xamarin-forms-samples/tree/master/WebServices/TodoAzurePush\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n\r\n### Actual Behavior\r\n```\r\n[aot-compiler stdout] Mono Ahead of Time compiler - compiling assembly C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\obj\\Release\\81\\android\\assets\\PCLCrypto.dll (TaskId:288)\r\n  [aot-compiler stdout] AOTID 5E31DBA6-D7C4-378F-663E-D6E8726A1DF9 (TaskId:288)\r\n  [aot-compiler stdout] Executing opt: \"C:\\PROGRA~2\\MICROS~1\\2017\\ENTERP~1\\MSBuild\\Xamarin\\Android\\opt\" -f -O2 -disable-tail-calls -o \"C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\PCLCrypto.dll\\temp.opt.bc\" \"C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\PCLCrypto.dll\\temp.bc\" (TaskId:288)\r\n  [AOT] MONO_PATH=\"C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\obj\\Release\\81\\android\\assets\" MONO_ENV_OPTIONS=\"\" \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\cross-arm\" --llvm --aot=outfile=C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\libaot-Xamarin.Android.Support.Animated.Vector.Drawable.dll.so,asmwriter,mtriple=armv7-linux-gnueabi,tool-prefix=C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\TOOLCH~1\\ARM-LI~1.9\\prebuilt\\WINDOW~1\\bin\\arm-linux-androideabi-,ld-flags=C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\TOOLCH~1\\ARM-LI~1.9\\prebuilt\\WINDOW~1\\lib\\gcc\\ARM-LI~1\\49696B~1.X\\libgcc.a;C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\PLATFO~1\\ANDROI~2\\arch-arm\\usr\\lib\\libc.so;C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\PLATFO~1\\ANDROI~2\\arch-arm\\usr\\lib\\libm.so,llvm-path=C:\\PROGRA~2\\MICROS~1\\2017\\ENTERP~1\\MSBuild\\Xamarin\\Android,temp-path=C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\Xamarin.Android.Support.Animated.Vector.Drawable.dll C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\obj\\Release\\81\\android\\assets\\Xamarin.Android.Support.Animated.Vector.Drawable.dll (TaskId:288)\r\n  [aot-compiler stdout] Executing llc: \"C:\\PROGRA~2\\MICROS~1\\2017\\ENTERP~1\\MSBuild\\Xamarin\\Android\\llc\"  -mattr=+vfp2,-neon,+d16 -asm-verbose=false -mtriple=armv7-linux-gnueabi -disable-gnu-eh-frame -enable-mono-eh-frame -mono-eh-frame-symbol=mono_aot_PCLCrypto_eh_frame -disable-tail-calls -relocation-model=pic -o \"C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\PCLCrypto.dll\\temp-llvm.s\" \"C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\PCLCrypto.dll\\temp.opt.bc\" (TaskId:288)\r\n  [aot-compiler stderr] Wrote crash dump file \"C:\\Users\\XAMARI~1\\AppData\\Local\\Temp\\llc.exe-b94cbe.dmp\" (TaskId:288)\r\n  [aot-compiler stderr] AOT of image C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\obj\\Release\\81\\android\\assets\\PCLCrypto.dll failed. (TaskId:288)\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2725,3): error XA3001: Could not AOT the assembly: PCLCrypto.dll [C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\TodoAzure.Droid.csproj]\r\n\r\n  ...\r\n\r\n[AOT] MONO_PATH=\"C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\obj\\Release\\81\\android\\assets\" MONO_ENV_OPTIONS=\"\" \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\cross-arm\" --llvm --aot=outfile=C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\libaot-Xamarin.Android.Support.Annotations.dll.so,asmwriter,mtriple=armv7-linux-gnueabi,tool-prefix=C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\TOOLCH~1\\ARM-LI~1.9\\prebuilt\\WINDOW~1\\bin\\arm-linux-androideabi-,ld-flags=C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\TOOLCH~1\\ARM-LI~1.9\\prebuilt\\WINDOW~1\\lib\\gcc\\ARM-LI~1\\49696B~1.X\\libgcc.a;C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\PLATFO~1\\ANDROI~2\\arch-arm\\usr\\lib\\libc.so;C:\\PROGRA~2\\Android\\ANDROI~2\\NDK-BU~1\\PLATFO~1\\ANDROI~2\\arch-arm\\usr\\lib\\libm.so,llvm-path=C:\\PROGRA~2\\MICROS~1\\2017\\ENTERP~1\\MSBuild\\Xamarin\\Android,temp-path=C:\\agent\\_work\\r8\\a\\XAMARI~2\\WEBSER~1\\TO3284~1\\Droid\\obj\\Release\\81\\aot\\ARMEAB~1\\Xamarin.Android.Support.Annotations.dll C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\obj\\Release\\81\\android\\assets\\Xamarin.Android.Support.Annotations.dll (TaskId:288)\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2725,3): error XA3001: Could not AOT the assembly: Xamarin.Android.Arch.Lifecycle.Common.dll [C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\TodoAzure.Droid.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2725,3): error XA3001: Could not AOT the assembly: Xamarin.Android.Arch.Lifecycle.Runtime.dll [C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\TodoAzure.Droid.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2725,3): error XA3001: Could not AOT the assembly: Xamarin.Android.Support.Animated.Vector.Drawable.dll [C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\TodoAzure.Droid.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2725,3): error XA3001: Could not AOT the assembly: Xamarin.Android.Support.Annotations.dll [C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\TodoAzure.Droid.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2725,3): error XA3001: Could not AOT the assembly: Microsoft.Azure.Mobile.Client.dll [C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\TodoAzure.Droid.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2725,3): error XA3001: Could not AOT the assembly: Newtonsoft.Json.dll [C:\\agent\\_work\\r8\\a\\xamarin-forms-samples\\WebServices\\TodoAzurePush\\Droid\\TodoAzure.Droid.csproj]\r\nDone executing task \"Aot\" -- FAILED. (TaskId:288)\r\n```\r\n### Version Information\r\nXA version: 9.1.99.130 (xamarin-android/HEAD/a9183e5) \r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-fda8f67a562b4fa39ee13f6de4e8c1d1.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#703854](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/703854), VS bug [#723070](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/723070)"},{"Id":"8649798880","Type":"PullRequestEvent","CreatedAt":"2018-11-26T20:31:15","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2457","RelatedDescription":"Opened pull request \"[download-bundle] updated URL for Debug bundle\" (#2457) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-debug/\r\n\r\nTo speed up build times, Xamarin.Android now builds Debug and Release\r\nbuilds on different jobs on Jenkins.\r\n\r\nThe issue with this is that the Azure upload url will be of the form:\r\n\r\n    https://xamjenkinsartifact.azureedge.net/mono-jenkins/${JOB_NAME}/bin/\r\n\r\nSo we need to check for `Debug` `$(Configuration)` and use\r\n`xamarin-android-debug` in that case."},{"Id":"8649398278","Type":"PullRequestEvent","CreatedAt":"2018-11-26T19:17:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2450","RelatedDescription":"Merged pull request \"[mono-runtimes] Update @(MonoFacadeAssembly)\" (#2450) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1879\r\n\r\nAdd the following Facade assemblies to `@(MonoFacadeAssembly)`:\r\n\r\n  * `System.Buffers.dll`\r\n  * `System.Memory.dll`\r\n  * `System.Net.Http.Rtc.dll`\r\n  * `System.Threading.Tasks.Extensions.dll`\r\n\r\nNote: list was reordered to be sorted as per **sort**(1), and\r\ngenerated with the following shell code on macOS:\r\n\r\n\t$ cd external/mono/mcs/class/Facades\r\n\t$ for d in `find . -depth 1 -type d | grep -v 'netstandard\\|System.Drawing.Primitives' | sort -f` ; do\r\n\t  n=`basename \"$d\"`;\r\n\t  echo \"    <MonoFacadeAssembly Include=\\\"$n.dll\\\" />\";\r\n\tdone | pbcopy\r\n\r\nThe `netstandard` and `System.Drawing.Primitives` directory are\r\nexcluded so that the comment and following `@(MonoFacadeAssembly)`\r\nentries in `ProfileAssemblies.projitems` are still relevant."},{"Id":"8649398266","Type":"IssuesEvent","CreatedAt":"2018-11-26T19:17:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1879","RelatedDescription":"Closed issue \"Compiler error when referencing a NetStandard 2.0 library using ValueTask<T>\" (#1879) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build it\r\n\r\nRepro project: https://github.com/yinyue200/taskextest/tree/v2\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nBuild successful\r\n\r\n### Actual Behavior\r\n\r\nerror CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#639363](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/639363)"},{"Id":"8649393514","Type":"PullRequestEvent","CreatedAt":"2018-11-26T19:16:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2456","RelatedDescription":"Merged pull request \"Bump Java.Interop\" (#2456) at xamarin/xamarin-android","RelatedBody":"The primary reason is to get a logging API initialization\r\nchange (https://github.com/xamarin/java.interop/commit/6dd6f166238e59e59c987bc939e0ce5914003a59)\r\nin so that we can initialize logging earlier during the init process."},{"Id":"8648842679","Type":"IssuesEvent","CreatedAt":"2018-11-26T17:38:04","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2296","RelatedDescription":"Closed issue \"Case sensitivity issues on Linux builds\" (#2296) at xamarin/xamarin-android","RelatedBody":"### The issue\r\nBuild is failing on Linux without adjusting some file names to fix case issues.\r\n\r\nOn Xamarin.Forms the situation is even worse because the Resource.designer.cs is not generated til middle of the build, so you have to actually run the build twice and rename that file for the second go.  A new one gets generated again the second time with the wrong case, which I find hilarious.\r\n\r\n... I am wondering if this is an issue with the targets or the toolchain, and how easy it would be to address from either perspective?\r\n\r\n#### Affected Files\r\n\r\n- Strings.xml\r\n- Resource.Designer.cs"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8651395696","Type":"PullRequestEvent","CreatedAt":"2018-11-27T02:55:44","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4475","RelatedDescription":"Merged pull request \"[iOS,Android] Handle Appearing/Disappearing on CarouselPage\" (#4475) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nHandling appearing and dissapearing of CarouselPage\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #2951 \r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8651395684","Type":"IssuesEvent","CreatedAt":"2018-11-27T02:55:44","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2951","RelatedDescription":"Closed issue \"CarouselPage child pages don't fire OnAppearing after update to XF 3.0\" (#2951) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAfter updating to XF 3.0+  OnAppearing event of child pages added to CarouselPage is no longer fired when the page is changed.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create project to XF 2.5 add CarouselPage and in it add child pages of same type that populates data when OnAppearing event is fired\r\n2.  Update to XF 3.0 and observe how only initially loaded page will receive OnAppearing event when loaded and the rest of the pages will not receive the event when displayed on Android device.\r\n\r\n### Expected Behavior\r\nOnAppearing fired when current page in CarouselPage is changed.\r\n\r\n### Actual Behavior\r\nOnAppearing is not fired\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: 2.5.0.280555\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n- Nuget Packages: Xamarin.Forms 3.0.0.530893\r\n- Affected Devices: Xperia Z1, Xperia XA, Android_API-23_x86_Emulator\r\n"},{"Id":"8651162476","Type":"IssuesEvent","CreatedAt":"2018-11-27T01:47:33","Actor":"jgold6","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4537","RelatedDescription":"Opened issue \"Cannot bind to RowDefinitions or ColumnDefinitions of Grid\" (#4537) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIssue was filed on bugzilla on 2017-05-18: https://bugzilla.xamarin.com/show_bug.cgi?id=56618\r\n\r\n>Cannot create binding on RowDefinitions or ColumnDefinitions of Grid. \r\n>When adding Xaml definition like this:\r\n\r\n    <Grid RowDefinitions=\"{Binding Rows, Converter={StaticResource RowsConverter}}\"/>\r\n\r\n>or\r\n\r\n    <Grid ColumnDefinitions=\"{Binding Columns, Converter={StaticResource ColumnsConverter}}\"/>\r\n\r\n>it gives ArgumentException with additional information:\r\n\r\n    Value was an invalid value for RowDefinitions\r\n>or\r\n    \r\n    Value was an invalid value for ColumnDefinitions\r\n\r\n>Directly it is caused by validating value of RowDefinitionsProperty or ColumnDefinitionsProperty. Validating is checking against null value. And value is null because default value of these properties are set to null. Converter is not even fired.\"\r\n\r\n### Steps to Reproduce\r\n\r\nThere is a repro project in bugzilla, but in essence just:\r\n\r\n1. Set up a Grid in XAML or Code\r\n2. Set the binding for the RowDefinitions and/or ColumnDefinitions property\r\n3. Build and run the app\r\n\r\n### Expected Behavior\r\nApp will deploy and the grid will be laid out according to the bound RowDefinitions and/or ColumnDefinitions properties\r\n\r\n### Actual Behavior\r\nException is thrown:\r\n\r\n    System.ArgumentException: Value was an invalid value for RowDefinitions\r\n\r\nor\r\n    \r\n    System.ArgumentException: Value was an invalid value for ColumnDefinitions\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1008975\r\n- Last known good version: none\r\n- IDE: VS for Mac\r\n- Platform Target Frameworks: \r\n  - iOS:  12.1\r\n  - Android: 8.1\r\n  - UWP:  not tested\r\n\r\n\r\n"},{"Id":"8651110284","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:32:31","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4468","RelatedDescription":"Merged pull request \"[iOS, macOS] Fix WebViews using HtmlWebViewSource switching to UrlWebViewSource\" (#4468) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAccidentally discovered #2952 on my own while fixing #4254.\r\n\r\nOn a succesful load, all `WebView`s set the Source property to a new `UrlWebViewSource` with the current url, presumably to keep the Url property of the `UrlWebViewSource` in sync in the case that the provided url resulted in a redirect. On all platform besides iOS/macOS, this behavior is skipped if the value of the current url indicates that the WebView has loaded local html instead of content from a remote server. On iOS/macOS, the source will be converted to a `UrlWebViewSource` even if a `HtmlWebViewSource` is what was used to the load the content.\r\n\r\nThis fix aligns macOS and iOS with the behavior of the other platforms.\r\n\r\n### Issues Resolved ### \r\n- fixes #2952\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n- macOS\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\nA webview that is using `HtmlWebViewSource` that is bound to an element and then removed and re-added to that element will now correctly have its content load and display *both* times. Previously the content would load correctly only the first time before switching to use `UrlWebViewSource`.\r\nAdditionally, the `Navigated` event will no longer fire when `HtmlWebViewSource` is used on iOS or macOS as a result of this change, as is the case on the other platforms.\r\n\r\n### Testing Procedure ###\r\nRun the repro project in #2952, or perhaps even more simply:\r\n1. Run the Gallery Project.\r\n2. Select the WebView Gallery.\r\n3. Choose the HtmlWebViewSourceView, LoadHtmlView, or JavaScriptAlertView. It should load correctly.\r\n4. Choose any other view in the list (doesn't matter if its one of the ones mentioned above or not).\r\n5. Return to the view you originally chose in step 3. It should load correctly again (previously was blank).\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8651110274","Type":"IssuesEvent","CreatedAt":"2018-11-27T01:32:31","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2952","RelatedDescription":"Closed issue \"[iOS] WebView not render/update HTML source after second call\" (#2952) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWebView does not render HTML content (except first time call) when BindingContext is changed at the page on iOS. The same example works fine on Android. The page is always the same and BindingContext changes before showing with navigation. For details see the attached gifs.\r\n\r\n### Steps to Reproduce\r\nRun the attached WebViewTest. (Actually the project name is UserDialogs, because of an other test.)\r\n\r\n1. Press Button \"HtmlWebView1\" -> HTML shows in WebView properly\r\n2. Press Back\r\n3. Press Button \"HtmlWebView2\" -> Empty WebView\r\n4. Press Back\r\n5. Select another HtmlWebView -> Always empty\r\n6. All further calls to WebViews will be empty\r\n\r\n### Implementation Details\r\n```XAML\r\n<WebView HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"FillAndExpand\"\r\n    <WebView.Source>\r\n        <HtmlWebViewSource Html=\"{Binding HtmlSource}\"></HtmlWebViewSource>\r\n    </WebView.Source>\r\n</WebView>\r\n```\r\n```C#\r\n// html source\r\nconst string HTML1 = \"<h1>PAGE 1</h1><p>This is Page 1</p>\";\r\n\r\n// page is always created\r\n_htmlWebView = (Page)Activator.CreateInstance(typeof(HtmlWebView));\r\n...\r\n// setting the binding context when pushing a new view (context will be removed on destroy)\r\n_htmlWebView.BindingContext = new HtmlViewModel(HTML1);\r\nawait Navigation.PushAsync(_htmlWebView);\r\n```\r\n\r\n### Expected Behavior\r\nIt should show the changed HTML source in the WebView. On Android the behaviour is correct. On iOS it works only the first time on a view call.\r\n\r\n### Actual Behavior\r\nAfter a BindingContext change it will never show any HTML content in the WebView on iOS after first call.\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms 3.0.0.482510\r\n- Last known good version: never\r\n- IDE: Microsoft Visual Studio Professional 2017 (15.7.3)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.4<!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 8.1<!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n- Nuget Packages: Xamarin Forms 3.0.0.482510\r\n- Affected Devices: iPhone\r\n\r\n### Screenshots / Videos\r\n![ios1](https://user-images.githubusercontent.com/6289764/41024974-f9067058-6970-11e8-8782-7b516ef8627a.gif)\r\n![ios2](https://user-images.githubusercontent.com/6289764/41024980-fdffe454-6970-11e8-911e-4c8171fa7b4d.gif)\r\n![android](https://user-images.githubusercontent.com/6289764/41024988-0149cb2a-6971-11e8-84b3-51934b030a13.gif)\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n### Reproduction Link\r\n[WebViewTest.zip](https://github.com/xamarin/Xamarin.Forms/files/2075244/WebViewTest.zip)\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/4254#issuecomment-438553622"},{"Id":"8651107742","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:31:47","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4528","RelatedDescription":"Merged pull request \"[UWP] Label MaxLines doesn't work\" (#4528) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIn `UpdateLineBreakMode` take into account that `MaxLines` can be set and we do need to allow wrapping then truncating.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #4458\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\n`MaxLines` together with `LineBreakMode` now work on UWP!\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\n<img width=\"1002\" alt=\"screenshot 2018-11-23 22 56 28\" src=\"https://user-images.githubusercontent.com/939291/48958906-0d680b00-ef73-11e8-99ef-41f7d1cd6da8.png\">\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8651107732","Type":"IssuesEvent","CreatedAt":"2018-11-27T01:31:47","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4458","RelatedDescription":"Closed issue \"[UWP] Label MaxLines doesn't work\" (#4458) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nLabel MaxLines should display 4 lines and then truncation, but it only shows one line. IF I remove the `LineBreakMode=\"TailTruncation\"` then I get 4 lines.\r\n\r\n### Steps to Reproduce\r\nRun this and use the 3.3 page.\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/blob/master/TheLittleThingsPlayground/Views/ThreeThreePage.xaml#L37\r\n\r\n```\r\n<Label x:Name=\"TruncatedLabel\" MaxLines=\"4\" LineBreakMode=\"TailTruncation\" Text=\"You should see 4 lines of text and truncation at the end. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam mattis quam non enim pellentesque, ut placerat purus finibus. Nulla quis tincidunt ante. Ut mauris lectus, aliquam a sagittis vitae, consequat eget elit. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque convallis nunc nisi, a imperdiet elit efficitur et. Duis in lectus mollis, interdum ipsum et, tincidunt orci. Fusce ipsum metus, imperdiet non lacus vitae, facilisis feugiat magna. Nulla volutpat nisl tortor, a consectetur felis consectetur non. Curabitur in enim vulputate sem volutpat bibendum id nec lorem. Mauris laoreet lacus ac volutpat tempus.\"/>\r\n```\r\n\r\n### Expected Behavior\r\nI should see 4 lines ending with truncation \"...\".\r\n\r\n### Actual Behavior\r\nI see 1 line ending with truncation \"...\".\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1008975\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/41873/48685016-f04dc980-eb79-11e8-8428-00fbae806887.png)\r\n\r\nAfter removing `LineBreakMode=\"TailTruncation\"`:\r\n\r\n![image](https://user-images.githubusercontent.com/41873/48685106-46bb0800-eb7a-11e8-844e-2281108d8cc8.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/blob/master/TheLittleThingsPlayground/Views/ThreeThreePage.xaml#L37\r\n"},{"Id":"8651080836","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:24:05","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4241","RelatedDescription":"Closed pull request \"[Stalled][Android] AppCompat version of EntryRenderer\" (#4241) at xamarin/Xamarin.Forms","RelatedBody":"Since there hasn't been any traction with #2151 since March, I wanted to redo this. The code added here is an exact copy of the previous renderer with the inclusion of `FormsAppCompatEditText` in addition. I ran the Entry Gallery and did not see any visible change compared to the previous renderer. Please run UI tests and let me know if this breaks anything.\r\n\r\ncloses #2151 "},{"Id":"8651032691","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:10:06","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4181","RelatedDescription":"Merged pull request \"[UWP] Changing IsPassword property changed InputScope\" (#4181) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRemoved touching the InputScope whenever the IsPassword property is toggled. This was done before to prevent dictionary suggestions, now it caused the keyboard to be reset to default while it should be numeric or similar.\r\n\r\n### Issues Resolved ### \r\n- fixes #4093\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8651032670","Type":"IssuesEvent","CreatedAt":"2018-11-27T01:10:06","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4093","RelatedDescription":"Closed issue \"When changing IsPassword property of an entry in runtime into true, the keyboard setting of entry is changed from numeric to default\" (#4093) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nMy requirement is to use Numeric keyboard for an entry which IsPassword property is changed into true at run time through a button click but when the button is clicked, the keyboard setting is changed to default only in UWP platform\r\n### Steps to Reproduce\r\n\r\n1. Set keyboard as numeric for an entry\r\n2. Through button click changes **IsPassword** property of entry into true\r\n3. The keyboard is changed into default in UWP\r\n\r\n### Expected Behavior\r\nThe Keyboard do not change from numeric after changing IsPassword into true\r\n### Actual Behavior\r\nThe Keyboard  changes from numeric into default after changing IsPassword into true\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/43738292/46998584-97d17980-d140-11e8-9645-64225ab8156f.png)\r\nAfter changing **IsPassword** into true\r\n![image](https://user-images.githubusercontent.com/43738292/46998605-a3bd3b80-d140-11e8-8d86-1b492ed45368.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n\r\n[DataForm_Entry.zip](https://github.com/xamarin/Xamarin.Forms/files/2481738/DataForm_Entry.zip)\r\n"},{"Id":"8650748285","Type":"PullRequestEvent","CreatedAt":"2018-11-26T23:48:25","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4536","RelatedDescription":"Opened pull request \"Modify Android and iOS adapters to handle null items sources\" (#4536) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe CollectionView on Android and iOS throws an exception if no `ItemsSource` is set before the renderers kick in. This change allows both platforms to handle a `null` `ItemsSource`.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4366 \r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nIn Control Gallery, navigate to CollectionViewGallery -> EmptyView Galleries -> EmptyView (null ItemsSource). Navigation should be successful and the application should not crash.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8650023469","Type":"PullRequestEvent","CreatedAt":"2018-11-26T21:13:04","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4535","RelatedDescription":"Opened pull request \"Add missing update of items source for iOS CollectionView\" (#4535) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCollectionView on iOS is not watching for changes to entire items source; this change adds the watch and updates the view accordingly.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4474\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nIn Control Gallery, navigate to CollectionView Gallery -> Snap Points Gallery and choose any option. In the \"Item Count\" Entry, change the number and hit the \"Update\" button. The number of items in the collection should change.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8651109698","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:32:21","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5182","RelatedDescription":"Opened pull request \"[XHarness] Add support for xunit and nunit tests on Mac OS X.\" (#5182) at xamarin/xamarin-macios","RelatedBody":"This branch adds support to execute the tests provided by mono as assemblies. The PR includes:\r\n\r\n1. App generation to run the bel tests on modern and full.\r\n2. Needed workaround to delay the compilation of the assemblies until we have them from the sDK.\r\n3. Some test fail. THIS IS ON PURPOSE. I want to show that we do catch errors."},{"Id":"8650372391","Type":"PullRequestEvent","CreatedAt":"2018-11-26T22:18:50","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5181","RelatedDescription":"Opened pull request \"[macos] Fix Constants.mac.cs.in for backward compatibility\" (#5181) at xamarin/xamarin-macios","RelatedBody":"On macOS the path changes are forward but not backward compatible.\n\nThis means we need to keep older values, as they will work on newer OS,\nwhile the new path won't work (on older OS).\n\nThe test are updated to add exceptions for such cases - in order to\ngive us a better chance to spot typos (since they were some).\n\nThis should fix\nhttps://github.com/xamarin/maccore/issues/1174\nhttps://github.com/xamarin/maccore/issues/1175\nhttps://github.com/xamarin/maccore/issues/1176\nhttps://github.com/xamarin/maccore/issues/1177"},{"Id":"8649886587","Type":"IssuesEvent","CreatedAt":"2018-11-26T20:47:37","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5180","RelatedDescription":"Opened issue \"Review usage of Fsharp.core.dll in our reference assemblies\" (#5180) at xamarin/xamarin-macios","RelatedBody":"From VSTS: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/704962\r\n\r\nWe are currently shipping 5 instances of fsharp.core.dll as part of the reference assemblies we ship for XI, they are different in versions and signing. \r\n\r\nWe should try to unify this and ship (if possible at all) one version and signed by Microsoft.\r\n\r\n_Note: XVS gets the reference assemblies from the Bundle.zip file shipped by XI/XM._\r\n\r\n```\r\n Directory of C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoTouch\\v1.0\r\n\r\n05/25/2018  01:54 AM         1,526,272 FSharp.Core.dll\r\n               1 File(s)      1,526,272 bytes\r\n\r\n Directory of C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\Xamarin.iOS\\v1.0\r\n\r\n05/25/2018  01:54 AM         1,526,272 FSharp.Core.dll\r\n               1 File(s)      1,526,272 bytes\r\n\r\n Directory of C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\Xamarin.Mac\\v2.0\r\n\r\n05/25/2018  01:54 AM         1,496,576 FSharp.Core.dll\r\n               1 File(s)      1,496,576 bytes\r\n\r\n Directory of C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\Xamarin.TVOS\\v1.0\r\n\r\n05/25/2018  01:54 AM         1,526,272 FSharp.Core.dll\r\n               1 File(s)      1,526,272 bytes\r\n\r\n Directory of C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\Xamarin.WatchOS\\v1.0\r\n\r\n05/25/2018  01:54 AM         1,526,272 FSharp.Core.dll\r\n               1 File(s)      1,526,272 bytes\r\n```"},{"Id":"8649744111","Type":"PullRequestEvent","CreatedAt":"2018-11-26T20:21:03","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5177","RelatedDescription":"Merged pull request \"Bump mono to head of 2018-06\" (#5177) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@b63e5378e38 [2018-06][ios] fix path for llvm invocation (#11737)\n\nDiff: https://github.com/mono/mono/compare/bb3ae37d71a0993a09abc59a0d8255c074dc885b...b63e5378e389f675640fba97999b82f3ca7a44c2"},{"Id":"8647832902","Type":"IssuesEvent","CreatedAt":"2018-11-26T15:11:31","Actor":"filipnavara","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5179","RelatedDescription":"Opened issue \"Missing stack trace in exception filter\" (#5179) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download the attached project\r\n2. Run \"TestException\"\r\n3. Observe that the exception filter has no access to stack trace, but the exception handler does\r\n4. Run the other project \"TestException2\" that is Xamarin-less. It reports the stack trace properly in both cases\r\n\r\n### Expected Behavior\r\n\r\nException filter should show a stack trace.\r\n\r\n### Actual Behavior\r\n\r\nException filter has empty stack trace.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Professional 2017 for Mac (Preview) ===\r\n\r\nVersion 7.7 Preview (7.7 build 1847)\r\nInstallation UUID: 1050c29d-a0cc-409d-8729-9d0eddcb04fb\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000220\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.220 (2018-06/bb3ae37d71a) (64-bit)\r\n\tPackage version: 516000220\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.7.0.5148\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.400/Sdks\r\nSDK Versions:\r\n\t2.1.400\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: ee948863\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.2.4)\r\nBuild 10L221o\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.10 (Visual Studio Professional)\r\nHash: f2a05edd\r\nBranch: \r\nBuild date: 2018-10-31 18:55:58-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.10 (Visual Studio Professional)\r\nHash: f2a05edd\r\nBranch: d15-9\r\nBuild date: 2018-10-31 18:55:57-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707001847\r\nGit revision: a4f34c7dfbae36e9c47c8118f1e30401073eadcc\r\nBuild date: 2018-11-15 12:09:05+00\r\nBuild branch: release-7.7\r\nXamarin extensions: c3263e338a76463acda5dc4cdf86f61bf062fbb2\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.2\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Mon Nov 12 20:24:31 PST 2018\r\n    root:xnu-4903.231.4~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n[TestException.zip](https://github.com/xamarin/xamarin-macios/files/2616105/TestException.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8647357002","Type":"IssuesEvent","CreatedAt":"2018-11-26T14:01:48","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5178","RelatedDescription":"Opened issue \"XM Extensions lack debugging support\" (#5178) at xamarin/xamarin-macios","RelatedBody":"Extensions from XM can not be debugged today. This was [documented](https://docs.microsoft.com/en-us/xamarin/mac/platform/extensions#limitations-and-known-issues) as a known issue when they were implemented.\r\n\r\nThey are a lower traffic feature, but for those who need them being unable to debug your code outside of [NSLog](https://gist.github.com/chamons/e2e409013a449cfbe1f2fbe5547f6554) is very painful\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":100,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":14,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":112,"FavoriteCount":57,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":27,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":36,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":31,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":46,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2018-11-27T05:30:51.0213322Z","RunDurationInMilliseconds":4118}