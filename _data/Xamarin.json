{"Data":{"Blog":{"FeedItems":[{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null},{"Title":"Updating Xamarin.iOS Apps for the iPhone X","PublishedOn":"2017-10-11T18:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>There&#8217;s no doubt that one of the biggest announcements from Apple this year was the iPhone X. The new Super Retina display is edge-to-edge on the device, creating an immersive experience we had yet to see on iPhones. With the new screen changes on the iPhone X, developers may be asking themselves, &#8220;What do I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/\">Updating Xamarin.iOS Apps for the iPhone X</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/","RawContent":null},{"Title":"Build and Release Five-Star Apps Faster","PublishedOn":"2017-10-10T17:49:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The first step in the life of a mobile app is build automation, which builds the app and runs required tests to make sure the app follows required rules. Build automation is also the first step towards shipping high quality, five-star mobile apps. When building iOS and Android mobile applications, one of the main challenges [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/\">Build and Release Five-Star Apps Faster</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/","RawContent":null},{"Title":"Developing Real-Time Communication Apps with WebSocket","PublishedOn":"2017-10-09T21:17:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>WebSockets is a two-way communication protocol, or persistence communication channel over TCP connection, an extremely powerful protocol leveraged by numerous games, apps with chat functionality, and real-time apps such as stock tickers. In this blog post, we&#8217;ll discuss how to build a simple Xamarin chat room application that will leverage and connect to an ASP.NET [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/developing-real-time-communication-apps-with-websocket/\">Developing Real-Time Communication Apps with WebSocket</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/developing-real-time-communication-apps-with-websocket/","RawContent":null},{"Title":"DataBinding Power Moves You May Not Be Using (Yet)","PublishedOn":"2017-10-05T21:05:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>DataBinding is a fantastic feature that cleanly decouples your UI from the backing data models while providing the plumbing to move data back and forth as you need. But, are you getting the most out of the Binding features in Xamarin.Forms? Building on our previous Introduction to DataBinding and Advanced Data Binding posts, I’ll show [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/databinding-power-moves-you-may-not-be-using-yet/\">DataBinding Power Moves You May Not Be Using (Yet)</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/databinding-power-moves-you-may-not-be-using-yet/","RawContent":null},{"Title":"The Solar System with ARKit and F#","PublishedOn":"2017-10-04T21:09:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>A few years ago, my colleague Joel Martinez and I wrote a F# program we called “Oculus Thrift” that demonstrated iOS SceneKit in a Google Cardboard stereoscopic viewer. With the recent release of iOS 11, I wanted to see if we could do something similar with ARKit, Apple’s augmented-reality framework. It took just 8 lines [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/the-solar-system-with-arkit-and-f/\">The Solar System with ARKit and F#</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/the-solar-system-with-arkit-and-f/","RawContent":null},{"Title":"Microcharts: Elegant Cross-Platform Charts for Every App","PublishedOn":"2017-10-03T19:13:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>This is a guest post from Alo&#239;s Deniel. Alo&#239;s works at Orange Applications for Business as a Xamarin consultant. You can find him on Twitter at @aloisdeniel and on Github at @aloisdeniel. Displaying charts in mobile apps has always been a great way to offer users a clear overview of numerical data. In my time [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/microcharts-elegant-cross-platform-charts-for-any-app/\">Microcharts: Elegant Cross-Platform Charts for Every App</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/microcharts-elegant-cross-platform-charts-for-any-app/","RawContent":null},{"Title":"Android Support Library v26 Overview","PublishedOn":"2017-10-02T19:25:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The Android Support Library v26 brings lots of new features to our Android apps, including fonts as resources, downloadable fonts, emoji support, an autosizing TextView, physics driven animations via Spring and Fling, backwards compatibility for animated vectors, and a slimmer library by increasing the minSdkVersion to 14. If it isn&#8217;t already, the minSdkVersion for all [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/android-support-library-v26-overview/\">Android Support Library v26 Overview</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/android-support-library-v26-overview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6730268585","Type":"PullRequestEvent","CreatedAt":"2017-10-17T23:48:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/155","RelatedDescription":"Closed pull request \"[Xamarin.Android.Build.Tasks] Improve error text\" (#155) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=43245\n\nI wouldn't be surprised if this download mechanism gets redesigned at\nsome point in the future.  That could make these suggested changes\nobsolete.  But I suspect the current download mechanism will be around\nfor at least a little while longer, so adding these corrections and\nimprovements will still be helpful.\n-   `ErrorMessage()`:\n  -   Check for `InstallInstructions` first.  If custom instructions\n    are available via that property, they should take precedence\n    over the more generic message for `PackageName`.\n  -   Rewrite the message for `PackageName`.  The old error was\n    incorrect.  (For example, there was no \"SDK installer\" that\n    would help resolve the error.)  Additionally the new `if`\n    statement in `AddAttributeValue()` removes some redundant\n    appearances of this error, so the message can now provide more\n    specific instructions.\n-   `AddAttributeValue()`:\n  -   Add `if (sourceUrl.Name == null)` to avoid logging unnecessary\n    additional errors.  `MakeSureLibraryIsInPlace()` now provides\n    appropriate errors for each possible failure when\n    `sourceUrl.Name != null`, so additional errors are only needed\n    if `sourceUrl.Name == null`.\n-   `ExtractArchive()`:\n  -   Update the error message to account for the MD5 file names and\n    the \"zips\" folder that were added in July 2015 (monodroid/master\n    e8737f15c5e6f71f01f566475865a2cb34bfdfc9).  Also remove the\n    phrase \"Please download\" because re-downloading will not\n    necessarily help with problems unzipping the file.\n-   `MakeSureLibraryIsInPlace()`:\n  -   Update the error message to account for the MD5 file names and\n    the \"zips\" folder that were added in July 2015 (monodroid/master\n    e8737f15c5e6f71f01f566475865a2cb34bfdfc9).\n  -   Add a new explicit error with code \"XA5217\" for the case where a\n    .zip file is extracted without error but is missing an expected\n    nested archive.  The old logic allowed the build process to\n    continue even if all 3 attempts failed, and that could lead to\n    some confusing error messages later in the build.\n-   `Execute()`:\n  -   Add parentheses and \"Details:\" to the second part of each error\n    message because the file name of the missing item is usually\n    much less important than the first part of the error message.\n"},{"Id":"6729182839","Type":"PullRequestEvent","CreatedAt":"2017-10-17T19:12:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/940","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Updates for xabuild.exe\" (#940) at xamarin/xamarin-android","RelatedBody":"This commit fixes a couple of issues which appeared when\r\nusing xabuild.exe on macos. Firstly if the symlink exists\r\nalready the SymbolicLink code will error out and fail the\r\nbuild completely. This happens because if you run two or\r\nmore xabuild.exe instances at the same time they trip over\r\neach other trying to create the symlink.\r\n\r\nSo rather than erroring completely we should only error if\r\nthe link does NOT exist. If it does exist after an attempted\r\ncreation we should ignore the exception.\r\n\r\nThe other is about where we look for extensions. Xamarin.Android\r\nis installed on mac into\r\n\r\n\t/Library/Frameworks/Mono.framework/External/xbuild\r\n\r\nthis was not included in the search path for MSbuild, so it never\r\nmanages to find the required .targets."},{"Id":"6727909884","Type":"PullRequestEvent","CreatedAt":"2017-10-17T15:15:39","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/939","RelatedDescription":"Merged pull request \"[xa-prep-tasks] Support single-digit versions\" (#939) at xamarin/xamarin-android","RelatedBody":"JDK 9 reports a single-digit version value:\r\n\r\n\t$ javac -version\r\n\tjavac 9\r\n\r\nUnfortunately, this means that the `<Which/>` task won't properly\r\nrecognize JDK 9's `javac` as passing the\r\n`%(RequiredProgram.MinimumVersion)` value of 1.8, because `<Which/>`\r\nrequires *at least* two digits, not one. (Because `System.Version`\r\nrequired at least two digits; one would throw `ArgumentException`.)\r\n\r\nUpdate the `<Which/>` task so that it supports single-digit version\r\nvalues, treating them as if they had a \"minor\" value of `0`."},{"Id":"6727906453","Type":"PullRequestEvent","CreatedAt":"2017-10-17T15:15:00","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/937","RelatedDescription":"Merged pull request \"[build] Fix `make prepare` ordering\" (#937) at xamarin/xamarin-android","RelatedBody":"@clancey was trying to build xamarin-android, which failed:\r\n\r\n\t$ make prepare\r\n\t./build-tools/scripts/generate-os-info Configuration.OperatingSystem.props\r\n\txbuild /p:Configuration=Debug  /p:_DebugFileExt=.pdb build-tools/dependencies/dependencies.mdproj\r\n\t...\r\n\twarning : Referenced Project ../../external/xamarin-android-tools/src/Xamarin.Android.Tools.AndroidSdk/Xamarin.Android.Tools.AndroidSdk.csproj not found, ignoring.\r\n\t...\r\n\tXamarin.Android.BuildTools.PrepTasks/JdkInfo.cs(9,23): error CS0234: The type or namespace name 'Tools' does not exist in the namespace 'Xamarin.Android' (are you missing an assembly reference?)\r\n\r\nThe problem is that `make prepare-deps`, which builds\r\n`build-tools/dependencies/dependencies.mdproj`, implicitly builds\r\n`build-tools/xa-prep-tasks/xa-prep-tasks.csproj`, which in turn\r\ndepends on\r\n`external/xamarin-android-tools/src/Xamarin.Android.Tools.AndroidSdk/Xamarin.Android.Tools.AndroidSdk.csproj`,\r\nwhich is only reliably created by `make prepare-external`s\r\n`git submodule update --init --recursive`.\r\n\r\nUnfortunately, `make prepare-external` wasn't invoked until *after*\r\n`make prepare-deps`, meaning there is no way for `make prepare` to\r\nactually work on a clean install!\r\n\r\n(This works on Jenkins because Jenkins automatically checks out all\r\nsubmodules, so it never encounters this \"clean checkout\" scenario.)\r\n\r\nReorder the targets that `make prepare` executes so that\r\n`make prepare-external` is run *before* `make prepare-deps`, ensuring\r\nthat git submodules exist before we attempt to use them."},{"Id":"6727897775","Type":"PullRequestEvent","CreatedAt":"2017-10-17T15:13:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/935","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add new Disabled Issue for MissingSuperCall\" (#935) at xamarin/xamarin-android","RelatedBody":"lint 26.1.1 added a new MissingSuperCall check to lint. This\r\nerrors out if a class does NOT call `super.OnCreate`. Because\r\nour generated code doesn't need to call `supoer.OnCreate`."},{"Id":"6726510264","Type":"PullRequestEvent","CreatedAt":"2017-10-17T10:07:04","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/941","RelatedDescription":"Opened pull request \"[performance measurements] Fix result files location\" (#941) at xamarin/xamarin-android","RelatedBody":"Do not use `TestApk.ResultsPath` as base for performance measurements\r\nanymore - it has changed recently by\r\nhttps://github.com/xamarin/xamarin-android/commit/385699a58635d87a1cc65b60995d3420995f21d7. Instead\r\npass own results filename to the ProcessLogcatTiming and\r\nProcessPlotInput tasks.\r\n\r\nAlso added LabelSuffix parameter to the task, so that it is easier to\r\ncreate merged measurements. It comes handy as more tests are run in\r\nmultiple configurations now. It also simplifies the use of definitions\r\nfiles as we don't need one per configuration anymore."},{"Id":"6726261491","Type":"PullRequestEvent","CreatedAt":"2017-10-17T09:15:49","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/940","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Updates for xabuild.exe\" (#940) at xamarin/xamarin-android","RelatedBody":"This commit fixes a couple of issues which appeared when\r\nusing xabuild.exe on macos. Firstly if the symlink exists\r\nalready the SymbolicLink code will error out and fail the\r\nbuild completely. This happens if we run a build repeatedly.\r\nBecause the target might change.. we need to remove the symlink\r\nand then allow it to be recreated.\r\n\r\nThe other is about where we look for extensions. Xamarin.Android\r\nis installed on mac into\r\n\r\n\t/Library/Frameworks/Mono.framework/External/xbuild\r\n\r\nthis was not included in the search path for MSbuild, so it never\r\nmanages to find the required .targets."},{"Id":"6725031874","Type":"PullRequestEvent","CreatedAt":"2017-10-17T02:29:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/939","RelatedDescription":"Opened pull request \"[xa-prep-tasks] Support single-digit versions\" (#939) at xamarin/xamarin-android","RelatedBody":"JDK 9 reports a single-digit version value:\r\n\r\n\t$ javac -version\r\n\tjavac 9\r\n\r\nUnfortunately, this means that the `<Which/>` task won't properly\r\nrecognize JDK 9's `javac` as passing the\r\n`%(RequiredProgram.MinimumVersion)` value of 1.8, because `<Which/>`\r\nrequires *at least* two digits, not one. (Because `System.Version`\r\nrequired at least two digits; one would throw `ArgumentException`.)\r\n\r\nUpdate the `<Which/>` task so that it supports single-digit version\r\nvalues, treating them as if they had a \"minor\" value of `0`."},{"Id":"6725028421","Type":"PullRequestEvent","CreatedAt":"2017-10-17T02:27:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/938","RelatedDescription":"Closed pull request \"[xa-prep-tasks] Support single-digit versions\" (#938) at xamarin/xamarin-android","RelatedBody":"JDK 9 reports a single-digit version value:\r\n\r\n\t$ javac -version\r\n\tjavac 9\r\n\r\nUnfortunately, this means that the `<Which/>` task won't properly\r\nrecognize JDK 9's `javac` as passing the\r\n`%(RequiredProgram.MinimumVersion)` value of 1.8, because `<Which/>`\r\nrequires *at least* two digits, not one. (Because `System.Version`\r\nrequired at least two digits; one would throw `ArgumentException`.)\r\n\r\nUpdate the `<Which/>` task so that it supports single-digit version\r\nvalues, treating them as if they had a \"minor\" value of `0`."},{"Id":"6725024874","Type":"PullRequestEvent","CreatedAt":"2017-10-17T02:26:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/938","RelatedDescription":"Opened pull request \"[xa-prep-tasks] Support single-digit versions\" (#938) at xamarin/xamarin-android","RelatedBody":"JDK 9 reports a single-digit version value:\r\n\r\n\t$ javac -version\r\n\tjavac 9\r\n\r\nUnfortunately, this means that the `<Which/>` task won't properly\r\nrecognize JDK 9's `javac` as passing the\r\n`%(RequiredProgram.MinimumVersion)` value of 1.8, because `<Which/>`\r\nrequires *at least* two digits, not one. (Because `System.Version`\r\nrequired at least two digits; one would throw `ArgumentException`.)\r\n\r\nUpdate the `<Which/>` task so that it supports single-digit version\r\nvalues, treating them as if they had a \"minor\" value of `0`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6730263313","Type":"PullRequestEvent","CreatedAt":"2017-10-17T23:45:59","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1205","RelatedDescription":"Merged pull request \"Why, why? Why 5.1.0, and not 5.0.0?\" (#1205) at xamarin/Xamarin.Forms","RelatedBody":"Build break"},{"Id":"6730261391","Type":"PullRequestEvent","CreatedAt":"2017-10-17T23:45:14","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1206","RelatedDescription":"Opened pull request \"Stop forcing FormsTextBox content to ForegroundFocusBrush on UWP\" (#1206) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe FormsTextboxStyle control template was applying the FocusForegroundBrush property to the textbox's ContentElement even when the textbox was not focused.  This caused the incorrect text color to be applied to the textbox when focus was lost. In \"Light\" mode, this is mostly okay because the two color values are the same, but in \"Dark\" mode the focus color matches the textbox background, so the text disappears.\r\n\r\nThis change removes the incorrect value from the style and adds some logic to fix the original problem the incorrect style attempted to address.\r\n\r\nNo automated tests, because we don't have a way to check for text color changes. To test manually, change `RequestedTheme=\"Light\"` to `RequestedTheme=\"Dark\"` in Control Gallery and run it, then browse to the Entry Gallery.\r\n\r\nBefore the change:\r\n\r\n<img src=\"https://www.dropbox.com/s/m2rt8msmpxoscys/entry_phone_dark_before.gif?raw=1\" width=200/>\r\n\r\n<img src=\"https://www.dropbox.com/s/lx3aka2b9p0cvkk/entry_desktop_dark_before.gif?raw=1\" width=200/>\r\n\r\nAfter the change:\r\n\r\n<img src=\"https://www.dropbox.com/s/85hfowpyew1gn5g/entry_phone_dark_after.gif?raw=1\" width=200/>\r\n\r\n<img src=\"https://www.dropbox.com/s/gxyb1ox2u405kp6/entry_desktop_dark_after.gif?raw=1\" width=200/>\r\n\r\n### Bugs Fixed ###\r\n\r\n- [58145 – [UWP] Entry text not visible when using dark theme](https://bugzilla.xamarin.com/show_bug.cgi?id=58145)\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6730049786","Type":"PullRequestEvent","CreatedAt":"2017-10-17T22:35:17","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1205","RelatedDescription":"Opened pull request \"Why, why? Why 5.1.0, and not 5.0.0?\" (#1205) at xamarin/Xamarin.Forms","RelatedBody":"Build break"},{"Id":"6728723773","Type":"PullRequestEvent","CreatedAt":"2017-10-17T17:36:29","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1204","RelatedDescription":"Opened pull request \"[UWP] Inherit from Panel on WrapperControl\" (#1204) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nPR #731 intended to resolve an issue where `Label` text inside a `ListView` could vanish in certain circumstances. A side effect occurred in the change whereby inheriting from `Canvas` (which [uses absolute positioning](https://docs.microsoft.com/en-us/uwp/api/Windows.UI.Xaml.Controls.Canvas#Remarks)) caused the outermost view to not respect margins given to it. Changing the inheritance of `WrapperControl` from `Canvas` to `Panel` appears to resolve this issue.\r\n\r\nBefore:\r\n![before](https://user-images.githubusercontent.com/1251024/31679724-00ae245a-b340-11e7-95a8-8a1b7ba51e07.JPG)\r\n\r\nAfter:\r\n![after](https://user-images.githubusercontent.com/1251024/31679732-0a825b2c-b340-11e7-81f9-d48b85a8ada6.JPG)\r\n\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60056\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6725867858","Type":"PullRequestEvent","CreatedAt":"2017-10-17T07:47:43","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1187","RelatedDescription":"Merged pull request \"[MacOS] make OnElementChanged and OnElementPropertyChanged protected virtual\" (#1187) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIn Xamarin.Forms.Platform.MacOS the PageRenderer and ScrollViewRenderer did not have the usual protected virtual methods OnElementChanged and OnElementPropertyChanged. They were private and partly wrong named. Therefore users could not inherit from those renderers and use them as every other renderer on every other platform.\r\n\r\n### API Changes ###\r\n\r\nChanged:\r\n - PageRenderer: void OnElementChanged => protected virtual void OnElementChanged\r\n - PageRenderer: void OnHandlePropertyChanged => protected virtual void OnElementPropertyChanged\r\n - ScrollViewRenderer: void OnElementChanged => protected virtual void OnElementChanged\r\n - ScrollViewRenderer: void HandlePropertyChanged => protected virtual void OnElementPropertyChanged\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6730653295","Type":"PullRequestEvent","CreatedAt":"2017-10-18T02:24:58","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2902","RelatedDescription":"Opened pull request \"[CoreViceo] Adds API bindings from Xcode 9 Beta 1 to stable\" (#2902) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6728853936","Type":"PullRequestEvent","CreatedAt":"2017-10-17T18:03:59","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2901","RelatedDescription":"Opened pull request \"[macos] Fix pdb mismatch when saving assemblies procssed by mmp\" (#2901) at xamarin/xamarin-macios","RelatedBody":"- Teach mmp's resolver to ask for symbol reading from Cecil\r\n- Customer reports XM > 3.0 had broken library behavior but not before, possibly new cecil version?"},{"Id":"6728765960","Type":"PullRequestEvent","CreatedAt":"2017-10-17T17:45:39","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2897","RelatedDescription":"Merged pull request \"Bump mono to get fix for #59436.\" (#2897) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@d092ad186ff [llvm] Map byref types to the same type as the this argument so they are called using the same signature if the this argument is passed explicitly. Fixes #59436. (#5572)\r\n* mono/mono@c6605763a36 Merge pull request #5783 from marek-safar/2017-06-fixes\r\n* mono/mono@0fb4040ef16 [corlib]: Fix race condition in ExceptionDispatchInfo. (#5279)\r\n* mono/mono@fea2566b12d Merge pull request #5772 from marek-safar/2017-06-fixes\r\n* mono/mono@f3c9015ec41 Brings CoreFX update which contains a fix for #59302\r\n* mono/mono@0429840e5b2 Bump branch to 5.4.1, in anticipation of next release (#5760)\r\n* mono/mono@28d71e97277 [msvc] Fix MONO_CORLIB_VERSION to match configure.ac (#5770)\r\n* mono/mono@f1bca3dc5ba Fix typo\r\n\r\nDiff: https://github.com/mono/mono/compare/fbc487ff424c479c25d0bbd24110d34890ffd793...d092ad186ffae768279b092bdab513f65af2f7b2\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59436"},{"Id":"6728406146","Type":"PullRequestEvent","CreatedAt":"2017-10-17T16:35:40","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2899","RelatedDescription":"Merged pull request \"[CoreText] Adds API bindings from Xcode 9 Beta 1 to stable\" (#2899) at xamarin/xamarin-macios","RelatedBody":"Adds what is new to Xcode 9\r\n\r\nAll 4CC codes were generated with this tool https://gist.github.com/dalexsoto/7f1bbab252672b14f819 as always :D"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"920320046701989894","CreatedAt":"2017-10-17T16:06:12+00:00","UserScreenname":"xamarinhq","Text":"Try out updates to Xamarin Live, a new Mac connection workflow, and more in the Visual Studio 2017 15.5 Preview:… https://t.co/iB8bIZkhW1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":21,"RawContent":null},{"Id":"920032724999725056","CreatedAt":"2017-10-16T21:04:29+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":49,"RawContent":null},{"Id":"919958111670165505","CreatedAt":"2017-10-16T16:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":12,"RawContent":null},{"Id":"919747480769712128","CreatedAt":"2017-10-16T02:11:02+00:00","UserScreenname":"xamarinhq","Text":"Add “mobile developer” to your resume with @XamarinU, starting with a 30-day free trial: https://t.co/bVpjALvmoy https://t.co/fiA4quVFQb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":15,"RawContent":null},{"Id":"919305335759953927","CreatedAt":"2017-10-14T20:54:06+00:00","UserScreenname":"xamarinhq","Text":"Weekend project: add some new features to your #Xamarin Android apps with our Android Support Library v26 overview:… https://t.co/49gaLayBhU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":21,"RawContent":null},{"Id":"918566588483342336","CreatedAt":"2017-10-12T19:58:35+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/j4LE7PWPMd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":33,"RawContent":null},{"Id":"918507552811487232","CreatedAt":"2017-10-12T16:04:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build better apps with @BritchDavid's eBook on \"Enterprise Application Patterns using #XamarinForms\": https://t.co/YryVqlrejk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":9,"RawContent":null},{"Id":"918186189634572288","CreatedAt":"2017-10-11T18:47:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/OmUwO59Fdx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":31,"RawContent":null},{"Id":"918142648204124160","CreatedAt":"2017-10-11T15:54:00+00:00","UserScreenname":"xamarinhq","Text":"#XamarinDevDays are a great way to learn how to build, test, &amp; connect native apps with #Xamarin! Find one near you: https://t.co/Ytw07Fr9eL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"917846344714391552","CreatedAt":"2017-10-10T20:16:35+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSMobileCenter: https://t.co/XHMCHeVNSB https://t.co/3hhv3CG6uh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"917779002781249539","CreatedAt":"2017-10-10T15:49:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to display data with #macOS Table Views: https://t.co/NHwCfrILH6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":12,"RawContent":null},{"Id":"917501676159893504","CreatedAt":"2017-10-09T21:27:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0FzGbu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":65,"RawContent":null},{"Id":"917416111804702720","CreatedAt":"2017-10-09T15:47:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample app that spans devices and mobile platforms using Microsoft's Project Rome: https://t.co/SLeQw6q4YO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":20,"RawContent":null},{"Id":"917203711692337152","CreatedAt":"2017-10-09T01:43:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @nishanil shows you how to add #facetracking and live recognition to your Android app: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":18,"RawContent":null},{"Id":"916789236879290370","CreatedAt":"2017-10-07T22:16:01+00:00","UserScreenname":"xamarinhq","Text":"Sign up for our FREE event in Denver (10/10) or McLean (10/12) where you'll learn how to build a #XamarinForms app:… https://t.co/frCmLy2kS5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"916409733246017536","CreatedAt":"2017-10-06T21:08:01+00:00","UserScreenname":"xamarinhq","Text":"Get excited! https://t.co/0m45zTRqFK","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":19,"RawContent":null},{"Id":"916329451205595137","CreatedAt":"2017-10-06T15:49:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample enterprise app with the Microsoft Authentication Library and #MicrosoftGraph APIs: https://t.co/d9Rlu92TWT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"916052505406197760","CreatedAt":"2017-10-05T21:28:31+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":29,"RawContent":null},{"Id":"915970088846659584","CreatedAt":"2017-10-05T16:01:01+00:00","UserScreenname":"xamarinhq","Text":"Upgrade to #XamarinForms Stable release 2.4.0 with .NET Standard 2.0 support today! Learn more about this release:… https://t.co/Ku71DbGybm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":98,"FavoriteCount":70,"RawContent":null},{"Id":"915688986986901504","CreatedAt":"2017-10-04T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/QclUHc5QGx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2017-10-18T05:30:48.9063248Z","RunDurationInMilliseconds":3970}