{"Data":{"Blog":{"FeedItems":[{"Title":"Troubleshooting ASP.NET Core Performance Problems","PublishedOn":"2018-05-23T14:26:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos I recently had an opportunity to help a developer with an ASP.NET Core app that was functionally correct but slow when under a heavy user load. We found a few...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/23/asp-net-core-performance-improvements/","RawContent":null},{"Title":"Announcing ASP.NET Providers Connected Service Visual Studio Extension","PublishedOn":"2018-05-22T17:43:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Provider pattern was introduced in ASP.NET 2.0 and it gives the developers the flexibility of where to store the state of ASP.NET features (e.g. Session State, Membership, Output Cache etc.). In...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/22/announcing-asp-net-providers-connected-service-visual-studio-extension/","RawContent":null},{"Title":"A Penny Saved is a Ton of Serverless Compute Earned","PublishedOn":"2018-05-21T20:08:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Scott Guthrie recently shared one of my favorite anecdotes on his Azure Red Shirt Tour. A Microsoft customer regularly invokes 1 billion (yes, that’s with a “B”) Azure Functions per day. The customer...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/21/a-penny-saved-is-a-ton-of-serverless-compute-earned/","RawContent":null},{"Title":"Exploring Azure App Service – Web Apps and SQL Azure","PublishedOn":"2018-05-18T19:40:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is a good chance that your web app uses a database. In my previous post introducing Azure App Service, I showed some of the benefits of hosting apps in Azure App Service, and how easy it is to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/18/exploring-azure-app-service-web-apps-and-sql-azure/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7739258580","Type":"IssuesEvent","CreatedAt":"2018-05-28T15:02:29","Actor":"shinpou","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3169","RelatedDescription":"Opened issue \"Request.EnableRewind() and UseStatusCodePagesWithReExecute disposes request body\" (#3169) at aspnet/Home","RelatedBody":"# General\r\n\r\n.NET Core 2.0, AspNetCore 2.0.2\r\n\r\n- Enable Request.EnableRewind()\r\n- Configure app.UseStatusCodePagesWithReExecute()\r\n\r\nAdd custom middleware that reads the request.Body stream and logs it into the console.\r\n\r\nWhenever a request gets re-executed, request.Body will appear as disposed inside the request logging middleware and cause an exception.\r\n\r\nIt would appear that ReExecute disposes the request.Body as a side effect, or the wrong instance of it is passed forward when re-executing."},{"Id":"7738751601","Type":"IssuesEvent","CreatedAt":"2018-05-28T13:14:31","Actor":"ndreisg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3070","RelatedDescription":"Closed issue \"WebSocket Server does not receive Close Frame from Chrome\" (#3070) at aspnet/Home","RelatedBody":"I have an ASP.net Core WebSocket Server, and a WebClient that is connecting to that Server with Javascript.\r\n\r\nChrome seems to be the only browser that doesn't (always) send a Close Frame when I close the tab/browser where the client is running. (Works when Server is running on localhost but not when it's running in Azure App Service, see the chromium issue below for more info)\r\n\r\nSome days ago I created an Issue: https://bugs.chromium.org/p/chromium/issues/detail?id=832582\r\n\r\nUnfortunately the Chromium Team isn't going to fix this issue.\r\n\r\n**Question:**\r\n\r\nWhen no Close Frame is sent to the Server but the socket is closed anyway, shouldn't the Server throw an Exception or something?\r\n\r\nHere my code:\r\n\r\n```\r\ntry\r\n{\r\n  WebSocketReceiveResult message = await webSocket.ReceiveAsync(new ArraySegment<byte>(buffer), CancellationToken.None);\r\n  while (!message.CloseStatus.HasValue)\r\n  {\r\n    // do something with the message here...\r\n    message = await webSocket.ReceiveAsync(new ArraySegment<byte>(buffer), CancellationToken.None);\r\n  }\r\n  Close(); // Function with some cleanup code\r\n}\r\ncatch (Exception e)\r\n{\r\n  Close(); // <-- I expect this to be called when the socket is closed without a Close Frame. But it is not :(\r\n}\r\n```\r\nUnfortunately when Chrome closes the Socket without a Close Frame, the ReceiveAsync keeps waiting forever. No exception is thrown.\r\n\r\nIs there any other way to find out if a socket has died without getting a Close Frame?"},{"Id":"7738237798","Type":"IssuesEvent","CreatedAt":"2018-05-28T11:14:08","Actor":"Udesh90","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3168","RelatedDescription":"Closed issue \"context.Database.EnsureCreated() - Doesn't create __EFMigrationsHistory table\" (#3168) at aspnet/Home","RelatedBody":"When I used context.Database.EnsureCreated() method to create my database, it doesn't create __EFMigrationsHistory in my DB. So next time I run my DB updates EF core give me a tables are already exist. But I use to create my DB using \"update-databse\" in Package manger  console it will create __EFMigrationsHistory table & my DB updates will run smoothly. Why their is a conflict with context.Database.EnsureCreated() & \"update-databse\" ? \r\n\r\nSorry for the inconveniences, or am in a wrong path. "},{"Id":"7737871332","Type":"IssuesEvent","CreatedAt":"2018-05-28T09:46:33","Actor":"Udesh90","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3168","RelatedDescription":"Opened issue \"context.Database.EnsureCreated() - Doesn't create __EFMigrationsHistory table\" (#3168) at aspnet/Home","RelatedBody":"When I used context.Database.EnsureCreated() method to create my database, it doesn't create __EFMigrationsHistory in my DB. So next time I run my DB updates EF core give me a tables are already exist. But I use to create my DB using \"update-databse\" in Package manger  console it will create __EFMigrationsHistory table & my DB updates will run smoothly. Why their is a conflict with context.Database.EnsureCreated() & \"update-databse\" ? \r\n\r\nSorry for the inconveniences, or am in a wrong path. "}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7740981312","Type":"PullRequestEvent","CreatedAt":"2018-05-29T02:26:51","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2397","RelatedDescription":"Opened pull request \"Remove scanning connections log messages\" (#2397) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2155"},{"Id":"7740397426","Type":"IssuesEvent","CreatedAt":"2018-05-28T21:24:48","Actor":"ranouf","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2396","RelatedDescription":"Closed issue \"@aspnet/signalr@1.0.0-rc1-update1 Corrupted\" (#2396) at aspnet/SignalR","RelatedBody":"This morning I tried to install the angular package, I got this error 3 times:\r\n\r\n> npm WARN tarball tarball data for @aspnet/signalr@1.0.0-rc1-update1 (sha1-Etuhpjuzyf00iEiJxjan5k/cHc4=) seems to be corrupted. Trying one more time.\r\n\r\npackage.json: \r\n\r\n>     \"@aspnet/signalr\": \"^1.0.0-rc1-update1\",\r\n\r\nJust to let you know.\r\n\r\nThanks to fix that\r\n"},{"Id":"7739746513","Type":"IssuesEvent","CreatedAt":"2018-05-28T17:20:25","Actor":"ranouf","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2396","RelatedDescription":"Opened issue \"Corrupted\" (#2396) at aspnet/SignalR","RelatedBody":"This morning I tried to install the package, I got this error 3 times:\r\nnpm WARN tarball tarball data for @aspnet/signalr@1.0.0-rc1-update1 (sha1-Etuhpjuzyf00iEiJxjan5k/cHc4=) seems to be corrupted. Trying one more time.\r\n\r\nJust to let you know.\r\n\r\nThanks to fix that\r\n"},{"Id":"7737676162","Type":"IssuesEvent","CreatedAt":"2018-05-28T09:06:32","Actor":"icistrate","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2395","RelatedDescription":"Opened issue \"How to get the groups based on connectionId?\" (#2395) at aspnet/SignalR","RelatedBody":"Hi, \r\nIt seems I have troubles to find a way to get a list of groups based on connectionId. \r\nIf there is a call `this.Groups.AddToGroupAsync(connectionId, groupName);` , why wouldn't exist such call I am looking for?\r\nThanks"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7737738675","Type":"IssuesEvent","CreatedAt":"2018-05-28T09:19:31","Actor":"smartcodinghub","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7830","RelatedDescription":"Opened issue \"IRazorViewEngine.FindView Precompiled Views and Non compiled views different behaviours\" (#7830) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\n1. Have a view in a non root path (/Views/Controller/View).\r\n2. Use FindView with a Path like: 'MyTemplates/MyView' which isn't in the default paths.\r\n3. When the view is not compile, it finds a View. When its compiled no.\r\n\r\n#### Description of the problem:\r\n\r\nThe reason is the path that it tests. When it isn't compiled, it test 'Views//MyTemplates/MyView.cshtml' and the File methods its uses can succesfully find the view. But when its compiled, it can't find it, as it isn't a correct Path.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n2.0.6\r\n\r\n#### Correction\r\n\r\nThey must behave the same, and probably the precompiled behaviour is the good one, as Views//Controller/View is not a correct path. Its pretty annoying to have different behaviours when publishing."},{"Id":"7735837781","Type":"IssuesEvent","CreatedAt":"2018-05-27T19:28:06","Actor":"Rudithus","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7829","RelatedDescription":"Opened issue \"Custom RouteConstraints are not resolved through IoC\" (#7829) at aspnet/Mvc","RelatedBody":"Given a custom RouteConstraint with dependencies, such as\r\n\r\n      \r\n\r\n        private readonly IPermanantCache<City> _cityCache;\r\n        public CityRouteConstraint(IRepository<City, int> cityCache) : IRouteConstraint\r\n        {\r\n            _cityCache= cityCache;\r\n        }\r\n\r\n        public bool Match(HttpContext httpContext,\r\n            IRouter route,\r\n            string routeKey,\r\n            RouteValueDictionary values,\r\n            RouteDirection routeDirection)\r\n        {\r\n          //check if the city is really a city using _cityCache\r\n            return false;\r\n        }`\r\n\r\nI would expect after registering this route constraint like below\r\n\r\n`            services.Configure<RouteOptions>(\r\n                options =>\r\n                {\r\n                    options.ConstraintMap\r\n                        .Add(\"city\", typeof(CityRouteConstraint));\r\n                });`\r\nthat the route constraint would be newed up using the services registered to IServiceCollection. However I'm getting a \"No parameterless constructor found\" error.\r\n\r\nIs there something I'm missing here? Is there something planned for route constraints in the future releases? Or do I need to manually new up the Route Constraint while registering it?\r\n\r\nThanks."},{"Id":"7734826606","Type":"IssuesEvent","CreatedAt":"2018-05-27T07:37:47","Actor":"zokiad","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7828","RelatedDescription":"Closed issue \"Exception when start kestrel with socket with RC1\" (#7828) at aspnet/Mvc","RelatedBody":"Hi,\r\n\r\nOn **debian9**, when i try to start kestrel with socket:\r\n`/usr/bin/dotnet WebSite.dll --server.urls http://unix:/var/run/dotnet/WebSite.socket`\r\n\r\nOn preview1, work fine.\r\nOn RC1, doesn't work. I have this exception:\r\n```\r\n\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.ArgumentException: Only ListenType.IPEndPoint is supported.\r\nParameter name: endPointInformation\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.Create(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n\r\nUnhandled Exception: System.ArgumentException: Only ListenType.IPEndPoint is supported.\r\nParameter name: endPointInformation\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.Create(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token, String shutdownMessage)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n```\r\n\r\n\r\n\r\n**dotnet --info**\r\n\r\n\r\n\r\n```\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1\r\n  Commit:  eb9bc92051\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n```\r\n\r\n\r\nLinux debian 9: 4.9.0-6-amd64\r\n\r\n\r\nSame issue when define socket in startup:\r\n\r\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                **.UseKestrel(options => options.ListenUnixSocket(\"/tmp/toto.socket\"))**\r\n                .UseStartup<Startup>();\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7736171459","Type":"PullRequestEvent","CreatedAt":"2018-05-27T23:26:20","Actor":"hikalkan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1805","RelatedDescription":"Opened pull request \"Allow to access internal methods of SignInManager from a derived class\" (#1805) at aspnet/Identity","RelatedBody":"For a multi-tenant application, I need to override these methods."},{"Id":"7720424047","Type":"IssuesEvent","CreatedAt":"2018-05-23T23:06:50","Actor":"MetalBreaker","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1804","RelatedDescription":"Opened issue \"Role being cached for too long\" (#1804) at aspnet/Identity","RelatedBody":"### Roles are cached for too long\r\nSo, I wanted to create an admin-only panel. That's all fine and dandy, and the mechanism ended up working. However, ASP.NET Core caches the role for too long (at first I thought it was my code), and if I add or remove the role, I have to either log out and then log back in or wait around ~10 minutes (don't quote me on that) for the admin-only panel to appear/disappear. It's very annoying.\r\n\r\n### Functional impact\r\nIf an admin gets demoted for abusing their powers, they will still have admin powers on the website until the cached role resets.\r\n\r\n### Minimal repro steps\r\n1. I'm using the current code:\r\n```\r\n@page\r\n@model App.Pages.Account.Manage.AdminPanelModel\r\n@{\r\n    ViewData[\"Title\"] = \"AdminPanel\";\r\n    var isAdmin = User.IsInRole(\"Admin\");\r\n}\r\n\r\n@if (isAdmin)\r\n{\r\n    <h2>Hello, fellow administrator.</h2>\r\n     //WIP\r\n}\r\nelse\r\n{\r\n    Response.StatusCode = (int)Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized;\r\n    <h2>You are not authorized.</h2>\r\n}\r\n``` \r\nand creating the Admin role in Startup using RoleManager.\r\n2. Try adding/removing the role to/from the user.\r\nIf it's added to the user, the admin panel should pop up immediately.\r\nIf it's removed from the user, the admin panel should disappear.\r\n\r\n### Expected result\r\nChanges should be effective almost immediately.\r\n\r\n### Actual result\r\nChanges take a lot of time to go into effect."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7741197799","Type":"PullRequestEvent","CreatedAt":"2018-05-29T04:01:17","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2618","RelatedDescription":"Opened pull request \"[2.1.1] Use correct TaskCompletionSource ctor\" (#2618) at aspnet/KestrelHttpServer","RelatedBody":"These are test only changes. It's the combination of the following PRs backported for release/2.1:\r\n\r\n- https://github.com/aspnet/KestrelHttpServer/pull/2531\r\n- https://github.com/aspnet/KestrelHttpServer/pull/2567\r\n- Parts of https://github.com/aspnet/KestrelHttpServer/pull/2526\r\n- Parts of https://github.com/aspnet/KestrelHttpServer/pull/2547"},{"Id":"7737411522","Type":"IssuesEvent","CreatedAt":"2018-05-28T08:09:57","Actor":"georgiosd","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2617","RelatedDescription":"Opened issue \"Doesn't seem to work with Azure Load Balancer\" (#2617) at aspnet/KestrelHttpServer","RelatedBody":"I am running a web app in Ubuntu using Kestrel and trying to set up a load balancer for it.\r\n\r\nI have set up a health probe that's excluded from HTTPS redirection, and the rest works as it should. (i.e. the site responds to HTTP with a redirect to HTTPS using the public URL and HTTPS responds fine when loading it on the box directly or through the local network).\r\n\r\nFor whatever reason, all the requests that I see from the load balancer are the probs (to which I return 200 of course). \r\n\r\nAny ideas??\r\n\r\nNote that I'm not using nginx to reverse proxy between the load balancer and Kestrel - this seems to be recommended but seems unnecessary nowadays."},{"Id":"7737171634","Type":"IssuesEvent","CreatedAt":"2018-05-28T07:13:23","Actor":"Tragetaschen","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2157","RelatedDescription":"Closed issue \"Frequent ODE during process shutdown\" (#2157) at aspnet/KestrelHttpServer","RelatedBody":"I'm running an ASP.NET Core 2.0.0 application on my embedded ARM platform and during shutdown, I frequently (about 30%-50% of the time) get the stack trace shown below.\r\n\r\nI'm building on Windows for `netstandard2.0` (the libraries) and `net47` (the actual application).\r\nMy single-core ARMv7 runs the application with Mono 5.2.0.224.\r\nThe application shuts down normally via SIGINT that calls `applicationLifetime.StopApplication()`.\r\nlibuv is version 1.11.0 and and mono picks it up via its `<dllmap>` capability.\r\n\r\n```\r\nUnhandled Exception:\r\nSystem.ObjectDisposedException: Safe handle has been closed\r\n  at (wrapper managed-to-native) Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions+NativeMethods:uv_walk (Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle,Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions/uv_walk_cb,intptr)\r\n  at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.walk (Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle loop, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions+uv_walk_cb walk_cb, System.IntPtr arg) [0x00007] in <43db436495024f22ae0ef2d91dcfcd5a>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.Walk (Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions+uv_walk_cb callback, System.IntPtr arg) [0x0000b] in <43db436495024f22ae0ef2d91dcfcd5a>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.Walk (System.Action`1[T] callback) [0x0000d] in <43db436495024f22ae0ef2d91dcfcd5a>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.ThreadStart (System.Object parameter) [0x000ae] in <43db436495024f22ae0ef2d91dcfcd5a>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread+<StopAsync>d__36.MoveNext () [0x00345] in <43db436495024f22ae0ef2d91dcfcd5a>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport+<StopAsync>d__19.MoveNext () [0x0009f] in <43db436495024f22ae0ef2d91dcfcd5a>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer+<StopAsync>d__22.MoveNext () [0x00279] in <c812b1c9c263455bb08762a12648ddc5>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Hosting.Internal.WebHost+<StopAsync>d__31.MoveNext () [0x00105] in <a766e84e73874716a71ec7d89a3081a4>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Hosting.WebHostExtensions+<WaitForTokenShutdownAsync>d__7.MoveNext () [0x00149] in <a766e84e73874716a71ec7d89a3081a4>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Hosting.WebHostExtensions+<RunAsync>d__5.MoveNext () [0x001a7] in <a766e84e73874716a71ec7d89a3081a4>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Hosting.WebHostExtensions+<RunAsync>d__4.MoveNext () [0x00122] in <a766e84e73874716a71ec7d89a3081a4>:0\r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in <e3ed3c7044074013bc436082021dfcc4>:0\r\n  at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run (Microsoft.AspNetCore.Hosting.IWebHost host) [0x00015] in <a766e84e73874716a71ec7d89a3081a4>:0\r\n  at …my main method… (System.String[] args) [0x00000] in <efa174c99eec41b08c6224f4c30da44c>:0\r\n```"},{"Id":"7735637982","Type":"IssuesEvent","CreatedAt":"2018-05-27T17:17:01","Actor":"sdb-dev","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2616","RelatedDescription":"Opened issue \"Kestrel ListenUnixSocket throws `Only ListenType.IPEndPoint is supported` as of 2.1 RC\" (#2616) at aspnet/KestrelHttpServer","RelatedBody":"# Issue\r\nKestrel ListenUnixSocket throws `Only ListenType.IPEndPoint is supported` as of 2.1 RC\r\n\r\n# General\r\n\r\nAfter upgrading to .NET Core 2.1 RC, I am no longer able to use kestrel's 'ListenUnixSocket' feature to use unix sockets instead of TCP sockets.\r\n\r\n## Stack Trace\r\n```\r\nUnhandled Exception: System.ArgumentException: Only ListenType.IPEndPoint is supported.\r\nParameter name: endPointInformation\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.Create(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token, String shutdownMessage)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at SampleNamespace.Website.Program.Main(String[] args) in C:\\BuildAgent.VSTS\\_work\\26\\s\\SampleNamespace.Website\\Program.cs:line 18\r\n```\r\n\r\n## Code\r\n```CSharp\r\n  WebHost.CreateDefaultBuilder(args)\r\n#if DEBUG\r\n                .UseEnvironment(\"Development\")\r\n#elif STAGING\r\n                .UseEnvironment(\"Staging\")\r\n#else\r\n                .UseEnvironment(\"Production\")\r\n                .UseApplicationInsights()\r\n#endif\r\n                .UseStartup<Startup>()\r\n                .UseKestrel(options =>\r\n                {\r\n                    if (Environment.OSVersion.Platform == PlatformID.Unix)\r\n                    {\r\n                        options.ListenUnixSocket(\"/tmp/kestrel.sock\");\r\n                    }\r\n                    //options.Listen(IPAddress.Loopback, 8080);\r\n                })\r\n                .Build();\r\n```\r\n\r\n## Extra Info\r\n**OS:** Ubuntu 16.04.4\r\n**.NET Core Version:** 2.1.300-rc1-008673\r\n**Project Packages:** All updated to v2.1.0-rc1-final\r\n\r\nWould this have anything to do with Kestrel's update in 2.1 where HTTPs is the default while debugging?\r\n"},{"Id":"7735497559","Type":"IssuesEvent","CreatedAt":"2018-05-27T15:44:36","Actor":"isualize","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2615","RelatedDescription":"Opened issue \"Connection id \"0HLE3SSIK0ULN\", Request id \"0HLE3SSIK0ULN:00000004\": An unhandled exception was thrown by the application. Error -4077 ECONNRESET connection reset by peer\" (#2615) at aspnet/KestrelHttpServer","RelatedBody":"Hi, we are hosting an asp.net core application using an Azurw app service. From time to time we're getting the following exception:\r\n\r\n\r\n`CategoryName: Microsoft.AspNetCore.Server.Kestrel`\r\n\r\n`Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed (Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult (Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult (Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody+<ReadAsync>d__22.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream+<ReadAsyncInternal>d__21.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.BufferedReadStream+<EnsureBufferedAsync>d__37.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReaderStream+<ReadAsync>d__36.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.FileBufferingReadStream+<ReadAsync>d__35.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions+<DrainAsync>d__3.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature+<InnerReadFormAsync>d__18.MoveNext (Microsoft.AspNetCore.Http, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProviderFactory+<AddValueProviderAsync>d__1.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider+<CreateAsync>d__3.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider+<CreateAsync>d__2.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider+<>c__DisplayClass0_0+<<CreateBinderDelegate>g__Bind|0>d.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeInnerFilterAsync>d__14.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext (Microsoft.AspNetCore.Routing, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware+<Invoke>d__7.MoveNext (Microsoft.AspNetCore.Cors, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at SaasKit.Multitenancy.Internal.TenantResolutionMiddleware`1+<Invoke>d__3.MoveNext (SaasKit.Multitenancy, Version=1.1.4.0, Culture=neutral, PublicKeyToken=null)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware+<Invoke>d__11.MoveNext (Microsoft.AspNetCore.Server.IISIntegration, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware+<Invoke>d__3.MoveNext (Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\nInner exception Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException handled at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed:`\r\n\r\nIs this a known issue and how do we solve it?\r\n\r\nRegards,\r\nRobin"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7732534184","Type":"PullRequestEvent","CreatedAt":"2018-05-25T23:30:11","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2372","RelatedDescription":"Opened pull request \"Override MicrosoftNETCoreApp22PackageVersion\" (#2372) at aspnet/Razor","RelatedBody":"In Universe, when the versions of MicrosoftNETCoreApp22PackageVersion are different between Universe and Razor, the samples get passed the Razor one, which is wrong. Here I'm attempting to prevent that from happening.\r\n\r\n@NTaylorMullen is my understanding of this correct?"},{"Id":"7731425355","Type":"PullRequestEvent","CreatedAt":"2018-05-25T18:13:28","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2368","RelatedDescription":"Merged pull request \"Allow publish to work when BuildProjectReferences=false\" (#2368) at aspnet/Razor","RelatedBody":"Fixes #2363"},{"Id":"7731425337","Type":"IssuesEvent","CreatedAt":"2018-05-25T18:13:28","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2363","RelatedDescription":"Closed issue \"[2.1 RC1] Can't publish website that has dependency on Razor Class Library which has using from another library dependency\" (#2363) at aspnet/Razor","RelatedBody":"![image](https://user-images.githubusercontent.com/5835044/40385020-947771d0-5e05-11e8-8169-44ccc9f4ec59.png)\r\n\r\n```\r\nSystem.AggregateException: One or more errors occurred. ---> System.Exception: Build failed. Check the Output window for more details.\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Web.Publish.PublishService.VsWebProjectPublish.<>c__DisplayClass41_0.<PublishAsync>b__2()\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ApplicationCapabilities.Publish.ViewModel.ProfileSelectorViewModel.<RunPublishTaskAsync>d__116.MoveNext()\r\n---> (Inner Exception #0) System.Exception: Build failed. Check the Output window for more details.<---\r\n```\r\n\r\nSteps to reproduce:\r\n---\r\n1. In latest Visual Studio 2017 (15.7.2) create new **Website** .NET Core 2.1 ASP.NET Core Web application > Razor Pages or MVC\r\n2. Add new project ASP.NET Core Web application > **Razor Class Library**\r\n3. Add new project **Class Library** (.NET Standard)\r\n4. Add project references: \r\n    **Razor Class Library** to reference **Class Library**\r\n    **Website** to reference **Razor Class Library**\r\n5. In **Razor Class Library** add new class and inside this class add using of the referenced **Class Library** `using ClassLibrary1;`\r\n6. Publish **Website** to a folder\r\n\r\nThis setup builds and works in development, but publish will throw mentioned error.\r\n"},{"Id":"7729829207","Type":"IssuesEvent","CreatedAt":"2018-05-25T13:01:37","Actor":"BachynskyiBohdan","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2371","RelatedDescription":"Opened issue \"Razor can't understand that @ symbol (even @@) in pattern attribute\" (#2371) at aspnet/Razor","RelatedBody":"Example:\r\n`<input pattern=\"\\w+(@)\\w+(.)\\w\"/>` or `<input pattern=\"\\w+(@@)\\w+(.)\\w\"/>`\r\n\r\nThis approach trigger parser error:\r\n\r\n> Description: An error occurred during the parsing of a resource required to service this request. Please review the following specific parse error details and modify your source file appropriately. \r\n\r\n> Parser Error Message: \")\" is not valid at the start of a code block.  Only identifiers, keywords, comments, \"(\" and \"{\" are valid.\r\n"},{"Id":"7725869525","Type":"PullRequestEvent","CreatedAt":"2018-05-24T19:20:59","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2370","RelatedDescription":"Merged pull request \"Don't police netcoreapp version\" (#2370) at aspnet/Razor","RelatedBody":"Some of the tests in this repo fail when we move to the new netcoreapp due to a new check, let's disable the check."},{"Id":"7725792534","Type":"PullRequestEvent","CreatedAt":"2018-05-24T19:05:15","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2370","RelatedDescription":"Opened pull request \"Don't police netcoreapp version\" (#2370) at aspnet/Razor","RelatedBody":"Some of the tests in this repo fail when we move to the new netcoreapp due to a new check, let's disable the check."},{"Id":"7725755335","Type":"IssuesEvent","CreatedAt":"2018-05-24T18:58:01","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2220","RelatedDescription":"Closed issue \"RazorSdk_UsesUseSharedCompilationToSetDefaultValueOfUseRazorBuildServer fails on OSX High Sierra containing VS for Mac.\" (#2220) at aspnet/Razor","RelatedBody":"```\r\nFailed   RazorSdk_UsesUseSharedCompilationToSetDefaultValueOfUseRazorBuildServer\r\nError Message:\r\n System.TimeoutException : command '$dotnet msbuild /restore /p:_RazorBuildServerPipeName=4ec0f162-6a02-42b0-ae53-2e14f9230925 /t:Build /p:Configuration=Debug /t:_IntrospectUseRazorBuildServer /p:UseSharedCompilation=false' timed out after 00:01:00.\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Razor.Design.IntegrationTests.MSBuildProcessManager.<>c__DisplayClass0_0.<RunProcessAsync>b__0(Task t) in /Users/ntaylormullen/Documents/GitHub/Razor/test/Microsoft.AspNetCore.Razor.Design.Test/IntegrationTests/MSBuildProcessManager.cs:line 80\r\n   at System.Threading.Tasks.ContinuationResultTaskFromTask`1.InnerInvoke()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Razor.Design.IntegrationTests.BuildIntrospectionTest.<RazorSdk_UsesUseSharedCompilationToSetDefaultValueOfUseRazorBuildServer>d__3.MoveNext() in /Users/ntaylormullen/Documents/GitHub/Razor/test/Microsoft.AspNetCore.Razor.Design.Test/IntegrationTests/BuildIntrospectionTest.cs:line 43\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7707144427","Type":"IssuesEvent","CreatedAt":"2018-05-21T21:26:33","Actor":"Fosol","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/146","RelatedDescription":"Closed issue \"How to nest files in a DNX project?\" (#146) at aspnet/Tooling","RelatedBody":"My search for answers has led me here.\n\nBy default a DNX project nest files like config.json -> config.debug.json\n\nI want to be able to nest files like config.json -> config.development.debug.json\n\nHow do I do this? I can no longer edit my project file to do this because someone has decided to extract all that functionality and hide it away in some black box. \n\nFeel free to point me to the right place to ask this question.\n\nThanks,\n Jeremy\n"},{"Id":"7687608828","Type":"IssuesEvent","CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n"},{"Id":"7686968343","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:31:07","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Opened issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40153549-85278454-59b4-11e8-9b07-621a5de873f8.png)\r\n"},{"Id":"7686951810","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":483,"FavoriteCount":273,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-29T05:30:12.926927Z","RunDurationInMilliseconds":8096}