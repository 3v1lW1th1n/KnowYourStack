{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7417999707","Type":"IssuesEvent","CreatedAt":"2018-03-22T09:31:38","Actor":"mudoo","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2121","RelatedDescription":"Opened issue \"dynamically params can't update\" (#2121) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/67xnq5to/](https://jsfiddle.net/67xnq5to/)\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\nid is 1\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7417978904","Type":"IssuesEvent","CreatedAt":"2018-03-22T09:27:40","Actor":"mudoo","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2120","RelatedDescription":"Opened issue \"dynamically params can't update\" (#2120) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nhttps://jsfiddle.net/67xnq5to/\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\nid is 1\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\ndynamically params can't update\r\n\r\nlike #1255"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"307796063","IsPullRequest":true,"CreatedAt":"2018-03-22T20:08:16","Actor":"yuriyalekseyev","Number":"7881","RawContent":null,"Title":"feat(warn): make the warning messages more explicit (close #7764)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nHere is my solution for #7764.\r\nI'm sure it's far from perfect, so I'll be happy to see any suggestion or advice üëç ","Url":"https://github.com/vuejs/vue/pull/7881","RelatedDescription":"Open PR \"feat(warn): make the warning messages more explicit (close #7764)\" (#7881)"},{"Id":"307674562","IsPullRequest":false,"CreatedAt":"2018-03-22T14:45:37","Actor":"salomvary","Number":"7880","RawContent":null,"Title":"@keydown.escape does not work in Edge","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/EEmBGm](https://codepen.io/anon/pen/EEmBGm)\r\n\r\n### Steps to reproduce\r\n- Open the  linked reproduction link in Microsoft Edge\r\n- Open F12 developer tools console section\r\n- Click inside the input field on the Codepen output\r\n- Hit escape on the keyboard\r\n\r\n### What is expected?\r\n@keydown.escape and @keydown.esc handlers should be triggered (should log 'esc' and 'escape').\r\n\r\n### What is actually happening?\r\n@keydown.escape and @keydown.esc handlers are not triggered. Only the unfiltered @keydown handler and @keydown.27 are triggered.\r\n\r\n---\r\nIssue tested in Microsoft Edge 41.16299.15.0. Verified to be working as expected on latest Safari, Chrome and Firefox on macOS.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7880","RelatedDescription":"Open issue \"@keydown.escape does not work in Edge\" (#7880)"},{"Id":"307479686","IsPullRequest":false,"CreatedAt":"2018-03-22T14:36:58","Actor":"seanmcoleman","Number":"7873","RawContent":null,"Title":"Incorrect \"invalid prop\" warning with prop of type Symbol","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/seanmcoleman/vuejs-bug](https://github.com/seanmcoleman/vuejs-bug)\r\n\r\n### Steps to reproduce\r\nCreate simple component with a required prop of type Symbol. Pass a Symbol to this component. \r\n\r\n### What is expected?\r\nNo warnings.\r\n\r\n### What is actually happening?\r\nA warning is given:\r\n\r\n[Vue warn]: Invalid prop: type check failed for prop \"symbolProp\". Expected , got Symbol.\r\n\r\n\r\n\r\n---\r\nThe warning message itself is wrong. In the message \"expected\" type is empty (space before comma).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7873","RelatedDescription":"Closed issue \"Incorrect \"invalid prop\" warning with prop of type Symbol\" (#7873)"},{"Id":"307656305","IsPullRequest":false,"CreatedAt":"2018-03-22T14:02:09","Actor":"chrisvfritz","Number":"7879","RawContent":null,"Title":"<transition-group> and v-show triggers move transition on enter","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/845Lee66/](https://jsfiddle.net/chrisvfritz/845Lee66/)\r\n\r\n### Steps to reproduce\r\n1. Open the fiddle\r\n2. Click the \"Toggle\" button\r\n3. Watch the `move` transition trigger on enter\r\n\r\n### What is expected?\r\nJust like with `v-if`, move transitions should not be triggered on enter (note that it is already _not_ triggered on leave). \r\n\r\n### What is actually happening?\r\nI haven't checked in the source yet, but I'm guessing that since elements with `display: none` still technically have coordinates:\r\n\r\n```\r\nDOMRect { x: 0, y: 0, width: 0, height: 0, top: 0, right: 0, bottom: 0, left: 0 }\r\n```\r\n\r\nThe `move` transition is triggered on enter. I'm not sure why it wouldn't also occur on leave though. \r\n\r\n---\r\nThis may be connected to [#5800](https://github.com/vuejs/vue/issues/5800). Also, special thanks to @rachelnabors for finding this bug!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7879","RelatedDescription":"Open issue \"<transition-group> and v-show triggers move transition on enter\" (#7879)"},{"Id":"307083206","IsPullRequest":true,"CreatedAt":"2018-03-22T13:58:04","Actor":"RyanCavanaugh","Number":"7868","RawContent":null,"Title":"Add UMD global declaration to index.d.ts","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nUsers using Vue from e.g. the CDN might be using the global `.Vue` without importing the module.\r\n\r\nSee https://www.typescriptlang.org/docs/handbook/modules.html for details on the syntax","Url":"https://github.com/vuejs/vue/pull/7868","RelatedDescription":"Closed or merged PR \"Add UMD global declaration to index.d.ts\" (#7868)"},{"Id":"307501603","IsPullRequest":true,"CreatedAt":"2018-03-22T13:56:06","Actor":"HcySunYang","Number":"7875","RawContent":null,"Title":"refactor: remove unnecessary checks","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThrough the processing of the `mergeOptions` function, the type of `vm.$options.data` is either a `function` or `undefined`. And in the `initState` function has filtered out the possibility of `undefined`, so in the `initData` function `vm.$options.data` must be a `function`","Url":"https://github.com/vuejs/vue/pull/7875","RelatedDescription":"Closed or merged PR \"refactor: remove unnecessary checks\" (#7875)"},{"Id":"307647269","IsPullRequest":true,"CreatedAt":"2018-03-22T13:53:29","Actor":"dcherman","Number":"7878","RawContent":null,"Title":"fix: correct the `has` implementation in the `_renderProxy`","State":"closed","Body":"It's feasible that someone might ask if something other than a string is\r\nin the proxy such as a `Symbol` that lacks a `charAt` method.  This aligns\r\nthe implementation with the `getHandler`.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis issue was discovered when using `vue-test-utils` and the associated test helpers it provides.  Ref: https://github.com/vuejs/vue-test-utils/issues/452\r\n","Url":"https://github.com/vuejs/vue/pull/7878","RelatedDescription":"Closed or merged PR \"fix: correct the `has` implementation in the `_renderProxy`\" (#7878)"},{"Id":"307551494","IsPullRequest":false,"CreatedAt":"2018-03-22T12:22:11","Actor":"akash-potdar7","Number":"7877","RawContent":null,"Title":"Usage of vue app in an iframe embedded in index.html of a website.","State":"closed","Body":"### What problem does this feature solve?\r\nI'm not sure if its a feature to meet my usecase, i think not. Let me propose it anyway.\r\nSo, my usecase is, my application is something like a chatbot. Starts from user embedding a async js call to my js file from his index.html and that js will do the chatbot work. Basically iframe is the best solution. But then I'm sourcing my iframe body's onload to get client.js sourced so that vue is mounted to index.html . The issue is it is not picking up the XYZ.vue styles.\r\n\r\n### What does the proposed API look like?\r\nThere's no api in the usecase yet\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7877","RelatedDescription":"Closed issue \"Usage of vue app in an iframe embedded in index.html of a website.\" (#7877)"},{"Id":"307540580","IsPullRequest":false,"CreatedAt":"2018-03-22T12:20:53","Actor":"likyh","Number":"7876","RawContent":null,"Title":"Â≠êÁªÑ‰ª∂‰πüÊÉ≥‰ΩøÁî®ÁªÑ‰ª∂ÁöÑkey","State":"closed","Body":"### What problem does this feature solve?\r\nÂ≠êÁªÑ‰ª∂‰πüÊÉ≥‰ΩøÁî®ÁªÑ‰ª∂ÁöÑkeyÔºåÊúâÊó∂ÂÄôÊØîÂ¶ÇÊàëÁöÑÁªÑ‰ª∂ÂÜÖÈÉ®Âú®Âæ™ÁéØ‰∫ßÁîüÂ§ö‰∏™ÁöÑÊó∂ÂÄôÔºå‰πüÊÉ≥Ë¶Å‰ΩøÁî®keyÔºå‰ΩÜÁé∞Âú®ÂÆö‰πâ‰∏Ä‰∏™ÂêçÂ≠ó‰∏∫keyÁöÑprop‰ºöÊä•ÈîôÔºåËÉΩÂê¶ÊääËøô‰∏™Êä•ÈîôÂèñÊ∂àÊéâÔºåËÆ©keyËÉΩÈ°∫Âà©‰º†ÂÖ•Â≠êÁªÑ‰ª∂Âë¢Ôºü\r\n\r\n### What does the proposed API look like?\r\nÂÆö‰πâÂêçÂ≠ó‰∏∫keyÁöÑpropÊó∂‰∏ç‰ºöÊä•ÈîôÔºåËÆ©keyËÉΩÈ°∫Âà©‰º†ÂÖ•Â≠êÁªÑ‰ª∂\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7876","RelatedDescription":"Closed issue \"Â≠êÁªÑ‰ª∂‰πüÊÉ≥‰ΩøÁî®ÁªÑ‰ª∂ÁöÑkey\" (#7876)"},{"Id":"307483844","IsPullRequest":false,"CreatedAt":"2018-03-22T02:28:31","Actor":"cwc845982120","Number":"7874","RawContent":null,"Title":"VUEÁöÑSSR‰∏∫‰ªÄ‰πàÊó¢Ë¶ÅÊâìÂåÖserver.bundleÂèàË¶ÅÊâìÂåÖclient.bundle‰∏§‰∏™Êñá‰ª∂Ôºü","State":"closed","Body":"‰∏çÊòØÂ∫îËØ•ÊúçÂä°Á´ØË∑ØÁî±ÂåπÈÖçÂêérender domString ÁÑ∂ÂêéÊ∏≤ÊüìÈ°µÈù¢ÔºåÈÇ£client.bundle.jsÁöÑ‰ΩúÁî®ÊòØ‰ªÄ‰πàÔºå‰∏∫‰ªÄ‰πàË¶ÅÊâìÂåÖclient.bundle.jsÊñá‰ª∂Ôºü","Url":"https://github.com/vuejs/vue/issues/7874","RelatedDescription":"Closed issue \"VUEÁöÑSSR‰∏∫‰ªÄ‰πàÊó¢Ë¶ÅÊâìÂåÖserver.bundleÂèàË¶ÅÊâìÂåÖclient.bundle‰∏§‰∏™Êñá‰ª∂Ôºü\" (#7874)"},{"Id":"307342818","IsPullRequest":false,"CreatedAt":"2018-03-21T17:50:16","Actor":"kangkang520","Number":"7872","RawContent":null,"Title":"ÂÖ≥‰∫étypescriptÂÆö‰πâÊñá‰ª∂ÁöÑ‰∏ÄÁÇπÂª∫ËÆÆ","State":"closed","Body":"### What problem does this feature solve?\r\nÂõ†‰∏∫È°πÁõÆ‰∏≠ÊòØÈÄöËøácndÊù•‰ΩøÁî®vueÁöÑÔºåËÄå‰∏îÈ°πÁõÆ‰ΩøÁî®ÁöÑÊòØtypescriptÔºåÂ∏åÊúõ.d.tsÊñá‰ª∂‰∏≠Â¢ûÂä†‰∏Ä‰∫õÂÖ®Â±ÄÁöÑÂÆö‰πâÔºå‰ª•Êñπ‰æøÁºñÁ†ÅÔºåËÄå‰∏çÊòØ‰∏ÄÂÆöË¶ÅimportËøõÊù•ÊâçËÉΩËøõË°å„ÄÇ\r\nÊúõÈááÁ∫≥ÔºåË∞¢Ë∞¢ÔºÅ\r\nÔºà>_<Ôºâ\r\n\r\n### What does the proposed API look like?\r\n\r\n```typescript\r\ndeclare interface Vue{\r\n    //...\r\n}\r\n//ÂÖ∂‰ªñ\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7872","RelatedDescription":"Closed issue \"ÂÖ≥‰∫étypescriptÂÆö‰πâÊñá‰ª∂ÁöÑ‰∏ÄÁÇπÂª∫ËÆÆ\" (#7872)"},{"Id":"307209362","IsPullRequest":false,"CreatedAt":"2018-03-21T13:14:46","Actor":"borodadada","Number":"7870","RawContent":null,"Title":"Not correct width from DOM object","State":"closed","Body":"### What problem does this feature solve?\r\n\tmounted: function () {\r\n\t\tthis.$nextTick(function () {\r\n\r\n\t\t\tthis.width.one = this.$refs.refList.$children[\"0\"].$el.children[1].clientWidth\r\n\t\t})\r\n\t},\r\n\r\nI have div object, in this div put text, parameter width = auto\r\nSize in browser inspector = 488px, in this.width.one = 356px\r\nMy clientWidth = offsetWidth\r\nIf i create static width for this div, all work correct!\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nthis.width.one = 488px\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7870","RelatedDescription":"Closed issue \"Not correct width from DOM object\" (#7870)"},{"Id":"307215524","IsPullRequest":false,"CreatedAt":"2018-03-21T11:57:13","Actor":"affanshahid","Number":"7871","RawContent":null,"Title":"Query - Preferred method of publishing","State":"closed","Body":"Is there a convention for when publishing reusable components to npm? Should I publish the `.vue` file or a compiled component? Pros and cons of either approach?","Url":"https://github.com/vuejs/vue/issues/7871","RelatedDescription":"Closed issue \"Query - Preferred method of publishing\" (#7871)"},{"Id":"307202908","IsPullRequest":false,"CreatedAt":"2018-03-21T11:13:43","Actor":"borodadada","Number":"7869","RawContent":null,"Title":"Not correct width from DOM object","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n‰∏≠ÊñáÁî®Êà∑ËØ∑Ê≥®ÊÑèÔºö\r\nËØ∑‰ΩøÁî®‰∏äÈù¢ÁöÑÈìæÊé•Êù•ÂàõÂª∫Êñ∞ÁöÑ issue„ÄÇÂ¶ÇÊûú‰∏çÊòØÁî®‰∏äËø∞Â∑•ÂÖ∑ÂàõÂª∫ÁöÑ issue ‰ºöË¢´Ëá™Âä®ÂÖ≥Èó≠„ÄÇ\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\nüëâ  https://www.patreon.com/evanyou\r\nüëâ  https://opencollective.com/vuejs/donate\r\n-->\r\n\t\tmounted: function () {\r\n\t\t\tthis.$nextTick(function () {\r\n\t\t\t\tconsole.log('mounted')\r\n\r\n\t\t\t\tthis.width.one = this.$refs.refList.$children[\"0\"].$el.children[1].clientWidth\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t},\r\nsize in browser inspector = 488px, in this.width.one = 356px (text row) WIDTH = AUTO\r\nMy clientWidth = offsetWidth\r\nIf i create static width, all work correct! ","Url":"https://github.com/vuejs/vue/issues/7869","RelatedDescription":"Closed issue \"Not correct width from DOM object\" (#7869)"},{"Id":"306775911","IsPullRequest":false,"CreatedAt":"2018-03-21T08:07:59","Actor":"SidKwok","Number":"7863","RawContent":null,"Title":"State will be saved when using two same components with v-if","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/208710/](https://jsfiddle.net/50wL7mdz/208710/)\r\n\r\n### Steps to reproduce\r\n1. A component with state\r\n2. Render two same components with v-if\r\n\r\n### What is expected?\r\nThe two components should be different.\r\n\r\n### What is actually happening?\r\nState will change.\r\n\r\n---\r\nv-show is ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7863","RelatedDescription":"Closed issue \"State will be saved when using two same components with v-if\" (#7863)"},{"Id":"307071117","IsPullRequest":false,"CreatedAt":"2018-03-20T23:15:44","Actor":"devistar","Number":"7867","RawContent":null,"Title":"[Suggestion] Custom proxy or prefix for component props","State":"closed","Body":"### What problem does this feature solve?\r\nWhen we define props in component, in general we give friendly and understandable props names. Given that they are proxied to this as well as data attributes, these friendly names can no longer be used. If I want to modify a prop, I will have to define a data attribute that can be modified but I can not use this friendly name that I gave to the prop.\r\n\r\nIt would be interesting to be able to proxy the props to an instance variable or to add a prefix without proxying to this. So we would have a public interface for props with friendly names that would be available for the data attributes in the component.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nVue.component('select', {\r\n  proxy: {\r\n    // Here we can define proxy rules\r\n  },\r\n  props: ['items'],\r\n  data: function() {\r\n    return {\r\n      items: [];\r\n    }\r\n  },\r\n  created() {\r\n    this.items = this.props.items;\r\n    // or\r\n    this.items = this.props_items;\r\n  }\r\n})\r\n```\r\n\r\nI think you understood the idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7867","RelatedDescription":"Closed issue \"[Suggestion] Custom proxy or prefix for component props\" (#7867)"},{"Id":"307033117","IsPullRequest":false,"CreatedAt":"2018-03-20T21:37:51","Actor":"Danonk","Number":"7866","RawContent":null,"Title":"Modifying input model resets caret position (also no way to handle this)","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/211543/](https://jsfiddle.net/50wL7mdz/211543/)\r\n\r\n### Steps to reproduce\r\nIf I modify the model of an input a caret resets.\r\n\r\nIn my example, If you place a cursor between \"Hello\" and \"World\", and remove the dot, the cursor will reset to the end.\r\n\r\nI know I could change a text from \"Hello.World\" to \"Something\", and then vue would have no idea where to put the caret after the modification, but apart from using pure, non-vue, plain-old-javascript way, there's no way to handle this caret position.\r\n\r\nMy final result is that I don't want to alow the user to type two dots one right after the other, so this \"Hello..World\" is forbidden, and it needs to be changed to this \"Hello.World\". Problem is, I can't control the caret using vue, can you guys help?\r\n\r\n### What is expected?\r\nWay to control the caret\r\n\r\n### What is actually happening?\r\nNo way to control the caret\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7866","RelatedDescription":"Closed issue \"Modifying input model resets caret position (also no way to handle this)\" (#7866)"},{"Id":"306829871","IsPullRequest":false,"CreatedAt":"2018-03-20T16:13:24","Actor":"ilife5","Number":"7864","RawContent":null,"Title":"Why Find the closest opened tag of the same type at html-parse.js#266","State":"closed","Body":"### What problem does this feature solve?\r\nAt html-parse.js#266\r\n\r\n```\r\n// Find the closest opened tag of the same type\r\nif (tagName) {\r\n      for (pos = stack.length - 1; pos >= 0; pos--) {\r\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\r\n          break\r\n        }\r\n      }\r\n    } else {\r\n      // If no tag name is provided, clean shop\r\n      pos = 0\r\n}    \r\n```\r\n\r\nI think the last tag in stack is the opened tag of this EndTag.\r\nSo why to find it in the stack?\r\n\r\nAs an evidence in compiler/parser/index.js#224\r\n\r\n```\r\nend () {\r\n      // remove trailing whitespace\r\n      const element = stack[stack.length - 1]\r\n      const lastNode = element.children[element.children.length - 1]\r\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\r\n        element.children.pop()\r\n      }\r\n      // pop stack\r\n      stack.length -= 1\r\n      currentParent = stack[stack.length - 1]\r\n      closeElement(element)\r\n}\r\n\r\n```\r\n\r\nThere is just a pop at line 231.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nCan just pop the last element in the stack at html-parser.js#parseEndTag?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7864","RelatedDescription":"Closed issue \"Why Find the closest opened tag of the same type at html-parse.js#266\" (#7864)"},{"Id":"306924506","IsPullRequest":false,"CreatedAt":"2018-03-20T15:47:26","Actor":"WingGao","Number":"7865","RawContent":null,"Title":"All declarations of 'ComponentOptions' must have identical type parameters","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://none](http://none)\r\n\r\n### Steps to reproduce\r\n```ts\r\nimport { Vue }from 'Vue'\r\nconsole.log('bug')\r\n```\r\ntsconfig:\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"target\": \"es5\",\r\n    \"strict\": true,\r\n    \"module\": \"es2015\",\r\n    \"moduleResolution\": \"node\",\r\n    \"baseUrl\": \"./\",\r\n    \"outDir\": \"./dist/\",\r\n    \"paths\": {\r\n      \"@/*\": [\r\n        \"src/*\"\r\n      ]\r\n    },\r\n    \"types\": [\r\n      \"tencent-wx-app\"\r\n    ],\r\n    \"allowJs\": true,\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"noImplicitAny\": false,\r\n    \"experimentalDecorators\": true\r\n  },\r\n  \"include\": [\r\n    \"./src/**/*\"\r\n  ],\r\n  \"exclude\": [\r\n    \"node_modules\"\r\n  ],\r\n  \"typeAcquisition\": {\r\n    \"enable\": true\r\n  }\r\n}\r\n\r\n```\r\nAnd you will get the error\r\n```\r\n[at-loader] ./node_modules/vue/types/options.d.ts:55:18 \r\n    TS2428: All declarations of 'ComponentOptions' must have identical type parameters.\r\n\r\n```\r\n\r\n### What is expected?\r\nsuccess\r\n\r\n### What is actually happening?\r\n[at-loader] ./node_modules/vue/types/options.d.ts:55:18 \r\n    TS2428: All declarations of 'ComponentOptions' must have identical type parameters.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7865","RelatedDescription":"Open issue \"All declarations of 'ComponentOptions' must have identical type parameters\" (#7865)"},{"Id":"306769290","IsPullRequest":false,"CreatedAt":"2018-03-20T08:29:42","Actor":"dmmikkel","Number":"7862","RawContent":null,"Title":"Subscribe to all custom events on a child component","State":"open","Body":"### What problem does this feature solve?\r\nWould make writing wrapper components easier\r\n\r\n### What does the proposed API look like?\r\nWhen v-on receives a function it should trigger on every custom event emitted by the child\r\n\r\n    <my-custom-component v-bind=\"$props\" v-on=\"onAnyEvent\"></my-custom-component>\r\n\r\nArgument one could be the name of the event\r\n\r\n    onAnyEvent(eventName, eventArgs) { // do something }\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7862","RelatedDescription":"Open issue \"Subscribe to all custom events on a child component\" (#7862)"},{"Id":"306760244","IsPullRequest":true,"CreatedAt":"2018-03-20T07:52:22","Actor":"luisatmaniak","Number":"7861","RawContent":null,"Title":"Adds missing `asyncMeta` during VNode cloning","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n- [x] Bugfix\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n\r\n**Other information:**\r\nThis fixes a crash during SSR, where a parent functional component is using an async component in the render function. If the prop is not copied, `renderAsyncComponent` crashes during rendering. Looks like this bug was introduced in 62a922e865f5e578f67b386cb614abfc173d7851","Url":"https://github.com/vuejs/vue/pull/7861","RelatedDescription":"Open PR \"Adds missing `asyncMeta` during VNode cloning\" (#7861)"},{"Id":"306531748","IsPullRequest":false,"CreatedAt":"2018-03-19T16:22:18","Actor":"rodrigopedra","Number":"7860","RawContent":null,"Title":"XSS when using HTML entities","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/s9783tq3/](https://jsfiddle.net/s9783tq3/)\r\n\r\n### Steps to reproduce\r\nVue parses an expression even when enclosed by curly-braces using HTML entitties, example:\r\n\r\n<div id=\"app\">\r\n  &amp;#123; &amp;#123; constructor.constructor(&amp;quot;alert(1)&amp;quot;)()  &amp;#125; &amp;#125;\r\n</div>\r\n\r\n\r\n### What is expected?\r\nThe expression rendered with HTML entities not to be parsed\r\n\r\n### What is actually happening?\r\nVue is parsing it instead\r\n\r\n---\r\nAfter reading about XSS in vue, I wrote a helper in my PHP template engine to replace curly-braces in unsafe expressions by their HTML entity equivalent. I expected Vue to render only expressions written with actual curly-braces. Unfortunately it is not feasible to add the v-pre directive in every place where the project I am working on renders unsafe user input.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7860","RelatedDescription":"Closed issue \"XSS when using HTML entities\" (#7860)"},{"Id":"306494003","IsPullRequest":false,"CreatedAt":"2018-03-19T14:47:36","Actor":"brophdawg11","Number":"7859","RawContent":null,"Title":"Vue SRR renders newline characters into class attributes","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[Gist](https://gist.github.com/brophdawg11/07aee0e6e20b911993e6dc1eaa6b2d04)\r\n\r\n### Steps to reproduce\r\n* Download the above gist to an `index.js` file\r\n* `npm install --save vue vue-server-renderer`\r\n* `node index.js`\r\n\r\n### What is expected?\r\nOnce rendered in the browser, all 6 `long-classname-*` class styles should be applied to the second element.\r\n\r\n### What is actually happening?\r\nBecause the class attribute is rendered with `long-classname-3\\n`, the styles for `long-classname-3` are not applied\r\n\r\n---\r\nThis can be worked around by adding a space before the mid-attribute line break, however this doesn't play nicely with the ESLint `no-trailing-spaces` rule and the settings for many common editors.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7859","RelatedDescription":"Open issue \"Vue SRR renders newline characters into class attributes\" (#7859)"},{"Id":"306490532","IsPullRequest":false,"CreatedAt":"2018-03-19T14:39:30","Actor":"brophdawg11","Number":"7858","RawContent":null,"Title":"v-show=\"true\" possibly incorrect during SSR","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[Gist](https://gist.github.com/brophdawg11/560ce5478ddebbb3a7f1aacc30fbbbc1)\r\n\r\n### Steps to reproduce\r\n* Download the above gist to an `index.js` file\r\n* `npm install --save vue vue-server-renderer`\r\n* `node index.js`\r\n\r\n### What is expected?\r\nI would expect an element rendered server side with `v-show=\"true\"` to render in the same fashion as one without a `v-show` directive.   \r\n\r\n### What is actually happening?\r\nElements with `v-show=\"true\"` are rendered during SSR with a seemingly invalid style attribute: `style=\"display:;`, while those without any `v-show` directive do not contain a `style` attribute at all\r\n\r\n---\r\nI don't know that this causes any specific rendering issues at the moment, but I noticed it because chrome dev tools was complaining about the styles on my element.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7858","RelatedDescription":"Open issue \"v-show=\"true\" possibly incorrect during SSR\" (#7858)"},{"Id":"306478733","IsPullRequest":true,"CreatedAt":"2018-03-19T14:11:02","Actor":"superMDguy","Number":"7857","RawContent":null,"Title":"feat(compiler): add warning when directives other than v-for and v-if used on template tag","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nAccording to the docs, the `v-show` directive [doesn't support](https://vuejs.org/v2/guide/conditional.html#v-show)  the `<template>` element. So, if a `v-show` is used on a template, it is essentially ignored. However, it currently does that without any warning. This pull request adds a warning when a `v-show` directive is used on a template tag.","Url":"https://github.com/vuejs/vue/pull/7857","RelatedDescription":"Open PR \"feat(compiler): add warning when directives other than v-for and v-if used on template tag\" (#7857)"},{"Id":"306448454","IsPullRequest":false,"CreatedAt":"2018-03-19T12:48:08","Actor":"dasdeck","Number":"7856","RawContent":null,"Title":"Evaluation of slot content's context is inconsistent with \"slot-scope\" behavior.","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/dasdeck/pen/LdbqLL?editors=0001](https://codepen.io/dasdeck/pen/LdbqLL?editors=0001)\r\n\r\n### Steps to reproduce\r\nWhen you open the pen, a message box will get opened because the full context of Consumer1 gets evaluated.\r\nSince the slot is not shown, this evaluation is unnecessary at this point and negates optimizations.\r\nWhen one declares a slot-scope, like in the Consumer2 components, Vue shows the \"correct\" behavior.\r\n\r\n### What is expected?\r\nThe slotted context should evaluate in a lazy manner\r\n\r\n### What is actually happening?\r\nThe slotted context gets evaluate right away.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7856","RelatedDescription":"Open issue \"Evaluation of slot content's context is inconsistent with \"slot-scope\" behavior.\" (#7856)"},{"Id":"306418883","IsPullRequest":false,"CreatedAt":"2018-03-19T12:24:15","Actor":"olton","Number":"7855","RawContent":null,"Title":"Vue + Metro 4","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/olton/pen/zWomRo](https://codepen.io/olton/pen/zWomRo)\r\n\r\n### Steps to reproduce\r\nIf I add Vue, initialization components initialized twice.\r\n\r\n### What is expected?\r\nSingle Component Initialization.\r\n\r\n### What is actually happening?\r\nThere is a double initialization of components.\r\n\r\n---\r\nMy name is Sergey Pimenov, I am an author of Metro 4. Help me understand why when using VueJS, the components are initialized twice. In Metro 4, the components are initialized using MuatationObserver if they appeared in the DOM after the Metro 4 subsystem was initialized.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7855","RelatedDescription":"Closed issue \"Vue + Metro 4\" (#7855)"},{"Id":"306281855","IsPullRequest":false,"CreatedAt":"2018-03-18T21:11:39","Actor":"WangHansen","Number":"7854","RawContent":null,"Title":"Content Security Policy from Helmet prevent loading js","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/y0jmvrkpmz](https://codesandbox.io/s/y0jmvrkpmz)\r\n\r\n### Steps to reproduce\r\nI can't get it to build in the sandbox, but I will describe what happens:\r\n\r\nI build the files and serve it with Expressjs static file serve function.\r\nAnd in server.js, I use helmet to try to apply the content security policy.\r\n\r\nThe code looks like this:\r\n```javascript\r\napp.use(helmet.contentSecurityPolicy({\r\n  directives: {\r\n    scriptSrc: [\"'self'\", 'https://use.fontawesome.com'],\r\n    fontSrc: [\"'self'\", 'https://use.fontawesome.com', 'data:'],\r\n    connectSrc: [\"'self'\"],\r\n    imgSrc: [\"'self'\", 'data:']\r\n  }\r\n}))\r\n```\r\nbut it didn't work, no error messages in console, jus that the scripts are not loaded.\r\nThen I tried this:\r\n```javascript\r\napp.use(helmet.contentSecurityPolicy({\r\n  directives: {\r\n    defaultSrc: ['*']\r\n  }\r\n}))\r\n```\r\nBut it still doesn't work, the scripts such as 0.js, 1.js are not loaded.\r\nAnd the web page is just blank\r\n\r\n### What is expected?\r\nThe page to display proper information\r\n\r\n### What is actually happening?\r\nThe page is blank\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7854","RelatedDescription":"Closed issue \"Content Security Policy from Helmet prevent loading js\" (#7854)"},{"Id":"306200664","IsPullRequest":false,"CreatedAt":"2018-03-18T10:40:15","Actor":"Azperin","Number":"7853","RawContent":null,"Title":"Different vision for global variables in development and minified version.","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/PRGvZy](https://codepen.io/anon/pen/PRGvZy)\r\n\r\n### Steps to reproduce\r\nJust change from vue.min.js to vue.js\r\n\r\n### What is expected?\r\nShowing global variable\r\n\r\n### What is actually happening?\r\nError that variable is not defining\r\n\r\n---\r\neasy to reproduce test, so nothing additional\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7853","RelatedDescription":"Closed issue \"Different vision for global variables in development and minified version.\" (#7853)"},{"Id":"306171367","IsPullRequest":false,"CreatedAt":"2018-03-17T16:59:48","Actor":"lansi951","Number":"7852","RawContent":null,"Title":"component inline template v-for variable undefined one","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/u3vy25gd/](https://jsfiddle.net/u3vy25gd/)\r\n\r\n### Steps to reproduce\r\n1. make component.\r\n2. make inline-template\r\n3. v-for component\r\n\r\n### What is expected?\r\nlast component created print prop is undefined.\r\n\r\n### What is actually happening?\r\n`Property or method \"v\" is not defined on the instance but referenced during render.` error excepted.\r\nbut, use template: `<div>{{ v }}</div>` or `<script type=\"text/x-template\" id=\"test-template\">` is work well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7852","RelatedDescription":"Closed issue \"component inline template v-for variable undefined one\" (#7852)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"307565235","IsPullRequest":false,"CreatedAt":"2018-03-22T09:31:38","Actor":"mudoo","Number":"2121","RawContent":null,"Title":"<router-link> dynamically params can't update","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/67xnq5to/](https://jsfiddle.net/67xnq5to/)\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\nid is 1\r\n\r\nlike #1255\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2121","RelatedDescription":"Open issue \"<router-link> dynamically params can't update\" (#2121)"},{"Id":"307563915","IsPullRequest":false,"CreatedAt":"2018-03-22T09:27:41","Actor":"mudoo","Number":"2120","RawContent":null,"Title":"dynamically params can't update","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nhttps://jsfiddle.net/67xnq5to/\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\nid is 1\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\ndynamically params can't update\r\n\r\nlike #1255","Url":"https://github.com/vuejs/vue-router/issues/2120","RelatedDescription":"Closed issue \"dynamically params can't update\" (#2120)"},{"Id":"307440673","IsPullRequest":false,"CreatedAt":"2018-03-21T22:29:00","Actor":"Alexsalicki91","Number":"2119","RawContent":null,"Title":"Problem with my Slider when i change the route ","State":"closed","Body":"Hi ,\r\nI‚Äôm beginner on JS . I‚Äôm creating my portfolio and I take this slider very nice from Codedrops : \" https://tympanus.net/Development/SliceRevealer/index2.html \"and I use on my portfolio for my Homepage . I create SPA with Vuejs and the slider work perfectly but when I change the router and i come back on my page with slider, the JS for slider doesn‚Äôt reload and my slider doesn‚Äôt work.\r\nI don‚Äôt understand ! Can you help me guys ?\r\nThis is GitHub link of my portfolio : https://github.com/Alexsalicki91/portfolio\r\n\r\nAlex Salicki","Url":"https://github.com/vuejs/vue-router/issues/2119","RelatedDescription":"Closed issue \"Problem with my Slider when i change the route \" (#2119)"},{"Id":"306799058","IsPullRequest":false,"CreatedAt":"2018-03-20T10:05:54","Actor":"tmcdos","Number":"2118","RawContent":null,"Title":"Providing the router instance as THIS for router guards \"beforeEach\" and \"beforeRouteEnter\"","State":"open","Body":"### What problem does this feature solve?\r\nIn the current version of the router (3.0.1) the global guard **beforeEach** and the component guard **beforeRouteEnter** do not provide a valid THIS value. Obviously for **beforeEach** if you want to access the **app** property of the router you need a valid THIS in the hook. And since the component is not yet instantiated in **beforeRouteEnter** you can not access the component as THIS - but at least you should be able to access the router instance (and its **app** property).\r\n\r\n### What does the proposed API look like?\r\nI am proposing the following 2 simple changes in the code (file **/src/history/base.js**):\r\n\r\n1) in function `confirmTransition()` - invoke the hook with the router instance as THIS\r\n```javascript\r\n    this.pending = route\r\n    const iterator = (hook: NavigationGuard, next) => {\r\n      if (this.pending !== route) {\r\n        return abort()\r\n      }\r\n      try {\r\n        hook.call(this, route, current, (to: any) => { /// <----- proposed change\r\n```\r\n2) in function `bindEnterGuard()` - invoke the hook with the router instance as THIS\r\n```javascript\r\n  return function routeEnterGuard (to, from, next) {\r\n    return guard.call(this, to, from, cb => { /// <---- proposed change\r\n      next(cb)\r\n      if (typeof cb === 'function') { \r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2118","RelatedDescription":"Open issue \"Providing the router instance as THIS for router guards \"beforeEach\" and \"beforeRouteEnter\"\" (#2118)"},{"Id":"306665000","IsPullRequest":false,"CreatedAt":"2018-03-19T22:44:00","Actor":"pythonxCat","Number":"2117","RawContent":null,"Title":"Can not find module for recursive function","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nMy vue-router's version is **^3.0.1**.\r\nI write a lazy recursive function like following:\r\n`function loadComponent(comppath, delay = 200, timeout = 3000, loadingComp = loadingComp, errorComp = ErrorComp) {\r\nreturn function () {\r\n    return {\r\n      component: import(compPath),\r\n      loading: loadingComp,\r\n      error: errorComp,\r\n      delay,\r\n      timeout\r\n    }\r\n  }\r\n}\r\n// load component in async way\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'index',\r\n      component: loadComponent('@/router/views/Index')\r\n    }\r\n ]\r\n})`\r\nVue devtool remind me errors, `vue-router.esm.js?fe87:1905 Error: Cannot find module '@/router/views/Index'.\r\n    at eval (eval at ./src/router lazy recursive (app.js:1143), <anonymous>:5:9)`\r\n","Url":"https://github.com/vuejs/vue-router/issues/2117","RelatedDescription":"Closed issue \"Can not find module for recursive function\" (#2117)"},{"Id":"306452134","IsPullRequest":false,"CreatedAt":"2018-03-19T12:59:52","Actor":"rjgotten","Number":"2116","RawContent":null,"Title":"Extend <router-link> to set an aria-current attribute for active links, instead of an active class","State":"open","Body":"### What problem does this feature solve?\r\nThis feature enables developers to mark up the active router link in an accessible manner for users of assistive technologies.\r\n\r\n### What does the proposed API look like?\r\nSimilar to the `active-class` property on `<router-link>` introduce an `aria-current` string property, defaulting to a `null` value. When set, use the `aria-current` DOM attribute in addition to the active class.\r\n\r\nCriteria for whether the DOM attribute should be set are the same  as for `active-class`. The attribute should be set on the DOM node itself -- or instead on the special nested `<a>` element that router-link can upgrade, should one exist.\r\n\r\nThe DOM attribute's value should be taken from the `aria-current` router-link property. Optionally, this could be validated against the list of valid options as per the ARIA 1.1 specification and console warnings could be provided on attempts to set invalid values.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2116","RelatedDescription":"Open issue \"Extend <router-link> to set an aria-current attribute for active links, instead of an active class\" (#2116)"},{"Id":"306318996","IsPullRequest":false,"CreatedAt":"2018-03-19T03:05:24","Actor":"liuqinqin","Number":"2115","RawContent":null,"Title":"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nVersion\r\n3.0.1\r\n\r\nReproduction link\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44\r\n\r\nSteps to reproduce\r\nRun application into iframe\r\n\r\nWhat is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\nWhat is actually happening?\r\nconst history = window.history\r\nis used\r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n","Url":"https://github.com/vuejs/vue-router/issues/2115","RelatedDescription":"Closed issue \"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate\" (#2115)"},{"Id":"306318842","IsPullRequest":false,"CreatedAt":"2018-03-19T03:04:10","Actor":"liuqinqin","Number":"2114","RawContent":null,"Title":"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nVersion\r\n3.0.1\r\n\r\nReproduction link\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44\r\n\r\nSteps to reproduce\r\nRun application into iframe\r\n\r\nWhat is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\nWhat is actually happening?\r\nconst history = window.history\r\nis used\r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n","Url":"https://github.com/vuejs/vue-router/issues/2114","RelatedDescription":"Closed issue \"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate\" (#2114)"},{"Id":"306317540","IsPullRequest":false,"CreatedAt":"2018-03-19T02:54:33","Actor":"liuqinqin","Number":"2113","RawContent":null,"Title":"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate","State":"closed","Body":"# Question Description\r\nData is requested in the beforeRouteEnter, but when the route is changed, the beforeRouteUpdate function will be triggered. At this point, the code in the two functions is almost the same. Before this method can't be read in the beforeRouteEnter, how should I optimize the extraction code?\r\n\r\n# Brief Code\r\n```\r\nbeforeRouteEnter(to, _from, next) {\r\n      axios.all([\r\n        axios.get(`/member?current=${to.query.page}`),\r\n        axios.get(`/axiosUrl1`),\r\n      ]).then(( data ) => {\r\n        next((vm) => {\r\n          vm.$set(vm, 'data', data.xxxx);\r\n          _...........(your code)_\r\n        });\r\n      });\r\n    }\r\n```\r\nAnd nowÔºå When the route changes\r\n ```\r\nbeforeRouteUpdate(to, _from, next) {\r\n      axios.all([\r\n        axios.get(`/member?current=${to.query.page}`),\r\n        axios.get(`/axiosUrl1`),\r\n      ]).then(( data ) => {\r\n        this.data = data.xxxx;\r\n        next();\r\n      });\r\n}\r\n\r\n```\r\n\r\nThe axios request is exactly the same, but the set value is different. You can't extract the promise function in methods because beforeRouteEnter needs to call the methods in the methods in vm, which loses the purpose of requesting data using the beforeRouteEnter hook function.\r\nWhat can I do to make the code achieve maximum reuse","Url":"https://github.com/vuejs/vue-router/issues/2113","RelatedDescription":"Closed issue \"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate\" (#2113)"},{"Id":"305853078","IsPullRequest":false,"CreatedAt":"2018-03-16T09:23:35","Actor":"lynzz","Number":"2112","RawContent":null,"Title":"Configured with routing function to generate lazy loading will not work","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/63ljm6z9k](https://codesandbox.io/s/63ljm6z9k)\r\n\r\n### Steps to reproduce\r\n1.  Routed to the User, view router-view content\r\n2. Routed to the Log, view router-view content\r\n\r\n### What is expected?\r\n1.  Routed to the User, router-view content for the user\r\n2. Routed to the Log, router-view content for the log\r\n\r\n### What is actually happening?\r\n1.  Routed to the User, router-view content remains at home\r\n2. Routed to the Log, router-view content remains at home\r\n\r\n---\r\nLazy loading can be defined directly on a home and not using a function to handle, is the import did not permit such treatment\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2112","RelatedDescription":"Closed issue \"Configured with routing function to generate lazy loading will not work\" (#2112)"},{"Id":"305816738","IsPullRequest":false,"CreatedAt":"2018-03-16T06:34:06","Actor":"jxxyyang","Number":"2111","RawContent":null,"Title":"ios‰∏ãË∑ØÁî±Ë∑≥ËΩ¨ÂêéÔºåÈ°µÈù¢Ë∑≥ËΩ¨‰∫ÜÔºå ‰ΩÜÊòØÂ§çÂà∂Âá∫Êù•ÁöÑÈìæÊé•Âú∞ÂùÄËøòÊòØÂâçÈù¢ÁöÑÂú∞ÂùÄÔºü","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2111","RelatedDescription":"Closed issue \"ios‰∏ãË∑ØÁî±Ë∑≥ËΩ¨ÂêéÔºåÈ°µÈù¢Ë∑≥ËΩ¨‰∫ÜÔºå ‰ΩÜÊòØÂ§çÂà∂Âá∫Êù•ÁöÑÈìæÊé•Âú∞ÂùÄËøòÊòØÂâçÈù¢ÁöÑÂú∞ÂùÄÔºü\" (#2111)"},{"Id":"305694715","IsPullRequest":false,"CreatedAt":"2018-03-15T19:45:47","Actor":"wrrrn","Number":"2110","RawContent":null,"Title":"Child route removing optional param in parent","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n~~[https://codepen.io/wrrrn/pen/GxqmOb](https://codepen.io/wrrrn/pen/GxqmOb)~~\r\nhttp://jsfiddle.net/7a31maev/1/\r\n\r\n### Steps to reproduce\r\nI've linked to what the current router code is. The issue is simple, so I hope I'm missing something obvious.\r\n\r\n### What is expected?\r\nWhen the :paramOptional is set, and child route is pushed to, the path will look as such - \r\n'/search/paramOne/paramOptional/paramTwo/show-modal'\r\n\r\n### What is actually happening?\r\nWhen navigated to, the child removes the paramOptional. The resulting url is - \r\n'/search/paramOne/paramTwo/show-modal'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2110","RelatedDescription":"Open issue \"Child route removing optional param in parent\" (#2110)"},{"Id":"305566943","IsPullRequest":false,"CreatedAt":"2018-03-15T14:17:03","Actor":"wangyi7099","Number":"2109","RawContent":null,"Title":"Can customize scroll element not just window by using scrollBehavior api.","State":"closed","Body":"### What problem does this feature solve?\r\nWhen using scrollBehavior api, it seems that only supports window scroll i.e.\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            x: 10,\r\n            y: 10\r\n        }\r\n    }\r\n})\r\n\r\n// window triggers scrolling\r\nwindow.scrollTo({x: 10, y: 10});\r\n\r\n```\r\n,  so, I hope add a param into the return object `element`, that the element triggers scrolling, not only window.  \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            return {\r\n                element: document.querySelector(\"#app\"),\r\n                x: 10,\r\n                y: 10\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n//\r\n// element triggers scrolling\r\nelement.scrollTo({x: 10, y: 10});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2109","RelatedDescription":"Closed issue \"Can customize scroll element not just window by using scrollBehavior api.\" (#2109)"},{"Id":"305550402","IsPullRequest":false,"CreatedAt":"2018-03-15T13:22:48","Actor":"AndreyVMarkelov","Number":"2108","RawContent":null,"Title":"If application works inside iframe when vue-router changes history of iframe only","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44)\r\n\r\n### Steps to reproduce\r\nRun application into iframe\r\n\r\n### What is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\n### What is actually happening?\r\nconst history = window.history\r\nis used \r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2108","RelatedDescription":"Open issue \"If application works inside iframe when vue-router changes history of iframe only\" (#2108)"},{"Id":"305421017","IsPullRequest":false,"CreatedAt":"2018-03-15T08:27:15","Actor":"lichenhao","Number":"2107","RawContent":null,"Title":"The router clicked but the url and view not updated follow","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/v3ox6n8xj0](https://codesandbox.io/s/v3ox6n8xj0)\r\n\r\n### Steps to reproduce\r\nRun with this code \r\n`<router-link :to=\"someroute.path\"></route-link>`\r\nand click more \r\nSometime the history or hash will not changed.\r\n\r\n### What is expected?\r\nThe page state should be switched.\r\n\r\n### What is actually happening?\r\nNothing happend\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2107","RelatedDescription":"Closed issue \"The router clicked but the url and view not updated follow\" (#2107)"},{"Id":"305386842","IsPullRequest":false,"CreatedAt":"2018-03-15T02:34:49","Actor":"code-artisan","Number":"2106","RawContent":null,"Title":"route not matched.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/code_artisan/L7hscd8h/5792/](https://jsfiddle.net/code_artisan/L7hscd8h/5792/)\r\n\r\n### Steps to reproduce\r\nclick user profile link, user profile is not matched.\r\n\r\n### What is expected?\r\nuser profile matched, not 404 page.\r\n\r\n### What is actually happening?\r\nuser profile route not matched.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2106","RelatedDescription":"Closed issue \"route not matched.\" (#2106)"},{"Id":"305234886","IsPullRequest":false,"CreatedAt":"2018-03-14T16:51:32","Actor":"rightaway","Number":"2105","RawContent":null,"Title":"Allow nested routes without parent component","State":"closed","Body":"### What problem does this feature solve?\r\nAllows the routes to be defined with a prefix that doesn't need to be repeated in each route.\r\n\r\n### What does the proposed API look like?\r\n\r\nCurrently this doesn't work because the parent route doesn't have a component specified. This feature isn't about nested routes but just about nested paths.\r\n\r\n```js\r\n{ path: '/prefix': children: [\r\n  { path: 'one', component: ... },\r\n  { path: 'two', component: ... },\r\n]}\r\n```\r\nCreates `/prefix/one` and `/prefix/two`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2105","RelatedDescription":"Closed issue \"Allow nested routes without parent component\" (#2105)"},{"Id":"305047490","IsPullRequest":false,"CreatedAt":"2018-03-14T07:33:26","Actor":"viruscamp","Number":"2104","RawContent":null,"Title":"In beforeEach hook , call next with a callback is invalid","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/viruscamp/z6j6yozx/3/](https://jsfiddle.net/viruscamp/z6j6yozx/3/)\r\n\r\n### Steps to reproduce\r\nRun this jsfiddle, open js console, and click \"Go to Foo \"\r\n\r\n### What is expected?\r\nJs console show:\r\n\r\n```\r\nrouter.beforeEach /foo  \r\nrouter.beforeEach.next /foo  \r\nrouteConfig.beforeEnter /foo  \r\nrouteConfig.beforeEnter.next /foo  \r\nrouter.beforeResolve /foo  \r\nrouter.beforeResolve.next /foo  \r\n```\r\n\r\n### What is actually happening?\r\nJs console show:\r\n\r\n```\r\nrouter.beforeEach /foo  \r\nrouteConfig.beforeEnter /foo  \r\nrouter.beforeResolve /foo  \r\n```\r\n\r\n---\r\nAs https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts show:  \r\nrouter.beforeEach, routeConfig.beforeEnter, router.beforeResolve use NavigationGuard  \r\nand next in NavigationGuard receive ((vm: Vue) => any) as argument  \r\nBut I cannot use this feature as the code show\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2104","RelatedDescription":"Closed issue \"In beforeEach hook , call next with a callback is invalid\" (#2104)"},{"Id":"304710005","IsPullRequest":false,"CreatedAt":"2018-03-13T10:38:16","Actor":"OwenCalvin","Number":"2103","RawContent":null,"Title":"scrollBehaviour after components are loaded","State":"closed","Body":"Hello,\r\nI load my components asynchronously with import('...') and i wan't to scroll to it when i'm redirected to a new page with the vue router redirection.\r\nExample:\r\nI'm redirected to 'home#page' but the components with the id 'page' aren't mounted when i'm redirected, so the scroll didn't work...\r\nCan you fix it ?","Url":"https://github.com/vuejs/vue-router/issues/2103","RelatedDescription":"Closed issue \"scrollBehaviour after components are loaded\" (#2103)"},{"Id":"304604243","IsPullRequest":true,"CreatedAt":"2018-03-13T08:35:30","Actor":"Jinjiang","Number":"2101","RawContent":null,"Title":"[docs][zh-cn] translated #2091","State":"closed","Body":"#2091 change example for apache-config\r\nand a newline between the new content and the code block.\r\n/ping @Justineo \r\nThanks.","Url":"https://github.com/vuejs/vue-router/pull/2101","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] translated #2091\" (#2101)"},{"Id":"304619946","IsPullRequest":false,"CreatedAt":"2018-03-13T03:59:22","Actor":"gzzhanghao","Number":"2102","RawContent":null,"Title":"`beforeRouteLeave` invoked twice when replacing path in target view","State":"open","Body":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Jason_Daurus/vv79u55j/](https://jsfiddle.net/Jason_Daurus/vv79u55j/)\r\n\r\n### Steps to reproduce\r\nClick at \"link-b\" in the fiddle, you'll have \"A:beforeRouteLeave\" logged twice in browser's console.\r\n\r\n### What is expected?\r\nA:beforeRouteLeave should not be invoked after B:beforeRouteEnter\r\n\r\n### What is actually happening?\r\nit does :-(\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2102","RelatedDescription":"Open issue \"`beforeRouteLeave` invoked twice when replacing path in target view\" (#2102)"},{"Id":"304311951","IsPullRequest":false,"CreatedAt":"2018-03-12T10:18:47","Actor":"konglinlin","Number":"2100","RawContent":null,"Title":"ucÊµèËßàÂô®‰∏äÊúâËøáÂ∫¶Âä®Êïàbug","State":"closed","Body":"\r\nÂú®UCÊµèËßàÂô®‰∏ä‰ΩøÁî®Âä®ÊïàÁöÑÊó∂ÂÄôË∑ØÁî±‰ºöÊõ¥ÊîπÔºå‰ΩÜÊòØÈ°µÈù¢ËßÜÂõæ‰∏ç‰ºöÊõ¥Êñ∞ÔºàÁâàÊú¨ÔºöUC V11.9.0.970Ôºâ","Url":"https://github.com/vuejs/vue-router/issues/2100","RelatedDescription":"Closed issue \"ucÊµèËßàÂô®‰∏äÊúâËøáÂ∫¶Âä®Êïàbug\" (#2100)"},{"Id":"303915363","IsPullRequest":false,"CreatedAt":"2018-03-09T17:17:06","Actor":"dotnetCarpenter","Number":"2099","RawContent":null,"Title":"Setting pushState title","State":"open","Body":"### What problem does this feature solve?\r\nIs there any objections against a PR that opens up for setting the `pushState()` title argument in [push-state.js](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L50).\r\n\r\nI'm porting an app to use vue-router and the app had this before. I realise that Firefox ignores the title, but other browsers do not. The app is using vue-router to enable deep linking. The app display PDFs with hundreds of pages. I got the back/forward buttons working pretty easily but the resulting list is completely unreadable, since it is just the `document.title` repeated 10-100 times. I would like to add the page number to each entry.\r\n\r\n### What does the proposed API look like?\r\nNot sure... Could be:\r\n```js\r\nthis.$router.push({\r\n  meta: { title: `page ${pageCurrent} - foobar` }\r\n})\r\n```\r\nBut I don't have any preferences other than the one the vue-router team + community prefer. :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2099","RelatedDescription":"Open issue \"Setting pushState title\" (#2099)"},{"Id":"303898094","IsPullRequest":true,"CreatedAt":"2018-03-09T16:26:27","Actor":"bmarkovic","Number":"2098","RawContent":null,"Title":"Add support for 'disabled' attribute to <router-link>, fixes #916","State":"open","Body":"During the discussion on #916 a solution was mentioned, where attribute `disabled` in `<router-link>` would prevent the link from working. This is useful for programmatically disabling router links based on application state. \r\n\r\nCompared to other solutions, both available and proposed, this is by far the cleanest and most idiomatic if you come from a HTML mindset, as it's available on form elements with the same purpose, and some CSS frameworks like Bootstrap promote its use for `<li><a>` navigation elements. \r\n\r\nFurthermore, binding to disabled attribute is a simple, easy to style and implement, and I honestly believe that for these reasons, it is also very idiomatic to Vue.js as well.\r\n\r\nThis pull request implements that proposal.","Url":"https://github.com/vuejs/vue-router/pull/2098","RelatedDescription":"Open PR \"Add support for 'disabled' attribute to <router-link>, fixes #916\" (#2098)"},{"Id":"303819954","IsPullRequest":false,"CreatedAt":"2018-03-09T12:05:18","Actor":"helixcg","Number":"2097","RawContent":null,"Title":".$route.query‰º†ÂèÇ‰∏≠  Êï∞ÂÄº+'/'+Êï∞ÂÄº ÂÅöÂèÇÊï∞ÔºåË∑ØÁî±È°µÈù¢ÂÄºÊîπÂèò","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n    onButtonClick (type) {\r\n      var all= this.$route.query.num+\"/\"+type\r\n     // this.$route.query.num=328   type=15712121212\r\n      this.$router.push({\r\n        path: 'abc',\r\n        name: 'abc',\r\n        query:{num:all}\r\n      });\r\n    },\r\n\r\nË∑ØÁî±È°µÈù¢url‰∏∫   ?num=328%**2F**15712121212\r\nÂéüÂõ†ÊòØ‰ªÄ‰πàÂë¢","Url":"https://github.com/vuejs/vue-router/issues/2097","RelatedDescription":"Closed issue \".$route.query‰º†ÂèÇ‰∏≠  Êï∞ÂÄº+'/'+Êï∞ÂÄº ÂÅöÂèÇÊï∞ÔºåË∑ØÁî±È°µÈù¢ÂÄºÊîπÂèò\" (#2097)"},{"Id":"303777784","IsPullRequest":true,"CreatedAt":"2018-03-09T09:33:47","Actor":"nurdism","Number":"2096","RawContent":null,"Title":"Implements issue #2069","State":"open","Body":"This is a PR for issue #2069\r\nAdds smooth scrolling option to scrollBehavior position.","Url":"https://github.com/vuejs/vue-router/pull/2096","RelatedDescription":"Open PR \"Implements issue #2069\" (#2096)"},{"Id":"303682614","IsPullRequest":false,"CreatedAt":"2018-03-09T00:30:59","Actor":"narusas","Number":"2095","RawContent":null,"Title":"scrollBehaviour should be executed before after hooks when pressing the back button","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/narusas/ektba5vj/8/](https://jsfiddle.net/narusas/ektba5vj/8/)\r\n\r\n### Steps to reproduce\r\nOpen https://jsfiddle.net/narusas/ektba5vj/8/ \r\nOpen Dev console\r\nClick '/hello1'\r\nClear console\r\n\r\nScroll some\r\nCheck console \r\n```javascript\r\n\tscroll 4\r\n \tscroll 8\r\n \tscroll 12\r\n```\r\n\r\nClick '/hello2'\r\nCheck console\r\n```javascript\r\n\tComponent1 beforeRouteLeave\r\n\tnext-beforeRouteLeave-Component1\r\n \tglobal router  beforeEach\r\n \t/hello2 route beforeEnter\r\n \tComponent2 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component2\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent2 beforeCreate\r\n\tComponent2 created\r\n\tComponent2 beforeMount\r\n\tComponent2 mounted\r\n\tscrollBehavior\r\n\tscrollBehavior - resolve\r\n\tscroll 0 \r\n ```\r\n\r\nCurrently It's ok\r\n\r\nNow press back-button\r\nCheck console\r\n```javascript\r\n\tComponent2 beforeRouteLeave\r\n\tscroll 12   <---- Why This Timing???? Why leaving component is  scrolled??  \r\n\tnext-beforeRouteLeave-Component2\r\n\tglobal router  beforeEach\r\n\t/hello1 route beforeEnter\r\n\tComponent1 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component1\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent1 beforeCreate\r\n\tComponent1 created\r\n\tComponent1 beforeMount\r\n\tComponent1 mounted\r\n\tscrollBehavior\r\n```\r\n\r\n### What is expected?\r\nWhen press back button, \r\nBefore router leave, no scrolling is executed.\r\n\r\n### What is actually happening?\r\nWhen press back button,\r\nLeave component is  scrolled strange position. \r\nAfter that scrolling, Entering Component is entered.  \r\nIt looks like flickering. \r\n\r\n\r\n\r\n\r\n\r\n---\r\nNow I creating some SPA web site. \r\nWhen user press back/foward button, leaving component is scrolled and after that show entering component. \r\nSO It is flickering!\r\nAlso, I use lazy image loading. So user press back/foward, this not-intented  scrolling will call unnecessary image loading , and progressive loading animation is showed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2095","RelatedDescription":"Open issue \"scrollBehaviour should be executed before after hooks when pressing the back button\" (#2095)"},{"Id":"303340809","IsPullRequest":true,"CreatedAt":"2018-03-08T09:51:10","Actor":"kazupon","Number":"2094","RawContent":null,"Title":"update ja docs","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n/ping @re-fort @potato4d @lmiller1990 @38elements\r\n„Å©„Å™„Åü„Åã„É¨„Éì„É•„Éº„Åó„Å¶„ÇÇ„Çâ„Åà„Çã„Å®Âä©„Åã„Çä„Åæ„ÅôÔºÅ üôè ","Url":"https://github.com/vuejs/vue-router/pull/2094","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2094)"},{"Id":"303107765","IsPullRequest":false,"CreatedAt":"2018-03-07T14:58:01","Actor":"maki10","Number":"2093","RawContent":null,"Title":"Vue Router not working properly in Component when url have some deep","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/43q4nsx9/2/](https://jsfiddle.net/43q4nsx9/2/)\r\nGo to second home, and click on an image (but you must have some deep's in URL, in order to see the issue) \r\n\r\n### Steps to reproduce\r\nWhen calling `route-link` form Component, they switch URL bad.\r\nFor example:\r\n- My domain is: `example.com/shop/shop-slug/`\r\n- Root Vue make a path: `example.com/shop/shop-slug#/`\r\n- And Bug occurred on `Product` Component when changing the path. Router link adds me: `example.com/#/product/{{ product.id }}`\r\n\r\nI try `$router.fullPath` and get `#/product/{{ product.id }}`.\r\nTry to match, replace `router-link` nothing work as I expected?\r\n\r\n\r\n### What is expected?\r\nTo match full URL.\r\n\r\n### What is actually happening?\r\nThe router doesn't catch good URL\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2093","RelatedDescription":"Closed issue \"Vue Router not working properly in Component when url have some deep\" (#2093)"},{"Id":"302588196","IsPullRequest":false,"CreatedAt":"2018-03-06T07:12:29","Actor":"cmzz","Number":"2092","RawContent":null,"Title":"Ë∑ØÁî±‰∏çËÉΩË∑≥ËΩ¨","State":"closed","Body":"![image](https://user-images.githubusercontent.com/6111715/37018782-9b014af4-2150-11e8-8033-f4f7f35c89d7.png)\r\n\r\n‰ª£Á†ÅÊòØ this.$router.push({path: '/'});\r\n\r\nÁªìÊûúÊó†Ê≥ïË∑≥ËΩ¨ÔºåÊéßÂà∂Âè∞Êó†ÈôêÁöÑËæìÂá∫‰∏äÈù¢ÂõæÁâáÁöÑÊ∂àÊÅØÔºåÂØºËá¥ÊµèËßàÂô®Âç°Ê≠ª„ÄÇ\r\n\r\nËØ∑ÈóÆËøôÊòØ‰ªÄ‰πàÈóÆÈ¢òÂë¢„ÄÇ","Url":"https://github.com/vuejs/vue-router/issues/2092","RelatedDescription":"Closed issue \"Ë∑ØÁî±‰∏çËÉΩË∑≥ËΩ¨\" (#2092)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"307247985","IsPullRequest":true,"CreatedAt":"2018-03-21T16:18:10","Actor":"Jinjiang","Number":"1197","RawContent":null,"Title":"[docs][zh-cn] synced updates to #e237803","State":"closed","Body":"Ref: https://github.com/Jinjiang/vuex/compare/dev...vuejs:dev\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1197","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced updates to #e237803\" (#1197)"},{"Id":"306712501","IsPullRequest":false,"CreatedAt":"2018-03-20T04:17:43","Actor":"fxxjdedd","Number":"1196","RawContent":null,"Title":"Find problem when changing state using Object.assign()","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsrun.net/QZZKp/edit](http://jsrun.net/QZZKp/edit)\r\n\r\n### Steps to reproduce\r\nuncomment the code in dependency.mutations.SET_STATUS\r\n\r\n```\r\n            /* doesn't work*/ \r\n            // state.status = Object.assign(state.status, status)\r\n            \r\n            /* work */\r\n            state.status = Object.assign({}, state.status, status)\r\n```\r\n\r\n\r\n### What is expected?\r\nloading status should change to 'false' after 500ms\r\n\r\n### What is actually happening?\r\nloading status is always 'true'\r\n\r\n---\r\nwhat is the diff between \r\n\r\nObject.assign({}, state.status, status) // work\r\n\r\nand \r\n\r\nObject.assign(state.status, status) // doesn't work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1196","RelatedDescription":"Closed issue \"Find problem when changing state using Object.assign()\" (#1196)"},{"Id":"301516650","IsPullRequest":true,"CreatedAt":"2018-03-19T15:01:02","Actor":"davestewart","Number":"1169","RawContent":null,"Title":"Made getter property vs method syntax more explicit","State":"closed","Body":"I've been using Vuex for about a year, and I never realised you could access store getters as methods.\r\n\r\nThis docs update makes the ability to do this explicit, as well as adding notes on caching.","Url":"https://github.com/vuejs/vuex/pull/1169","RelatedDescription":"Closed or merged PR \"Made getter property vs method syntax more explicit\" (#1169)"},{"Id":"304920407","IsPullRequest":true,"CreatedAt":"2018-03-19T14:56:45","Actor":"alexswiontek","Number":"1188","RawContent":null,"Title":"simplify getter","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1188","RelatedDescription":"Closed or merged PR \"simplify getter\" (#1188)"},{"Id":"305675539","IsPullRequest":true,"CreatedAt":"2018-03-19T14:55:04","Actor":"DannyFeliz","Number":"1191","RawContent":null,"Title":"Update object spread operator stage","State":"closed","Body":"Ref: https://github.com/tc39/proposal-object-rest-spread#status-of-this-proposal","Url":"https://github.com/vuejs/vuex/pull/1191","RelatedDescription":"Closed or merged PR \"Update object spread operator stage\" (#1191)"},{"Id":"306495716","IsPullRequest":true,"CreatedAt":"2018-03-19T14:51:41","Actor":"ktsn","Number":"1195","RawContent":null,"Title":"docs: improve API reference of watch and subscribe","State":"open","Body":"* Changed the wording of `store#watch`'s 1st argument. It was actually a getter function until v1.x but the current getter is not a simple function. (fix #1141)\r\n* Added descriptions how to unsubscribe from `subscribe` / `subscribeAction`. (fix #1194)","Url":"https://github.com/vuejs/vuex/pull/1195","RelatedDescription":"Open PR \"docs: improve API reference of watch and subscribe\" (#1195)"},{"Id":"306340386","IsPullRequest":false,"CreatedAt":"2018-03-19T05:49:03","Actor":"dhl","Number":"1194","RawContent":null,"Title":"The Vuex documentation does not document how to unsubscribe from subscribe and subscribeAction","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/en/api.html](https://vuex.vuejs.org/en/api.html)\r\n\r\n### Steps to reproduce\r\nRefer to documentation for `subscribe` and `subscribeAction`.\r\n\r\n\r\n\r\n### What is expected?\r\nThe API documentation (https://vuex.vuejs.org/en/api.html) references to the fact that both `subscribe` and `subscribeAction` returns a handler function that can be used to unsubscribe the listener passed into those functions.\r\n\r\n### What is actually happening?\r\nThere is no mentioning of anyway to unsubscribe from `subscribe` and `subscribeAction`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1194","RelatedDescription":"Open issue \"The Vuex documentation does not document how to unsubscribe from subscribe and subscribeAction\" (#1194)"},{"Id":"306150646","IsPullRequest":false,"CreatedAt":"2018-03-17T11:55:24","Actor":"DQvsRA","Number":"1193","RawContent":null,"Title":"module onRegister, onRemove methods","State":"open","Body":"### What problem does this feature solve?\r\nSetup module when registerModule has been called and remove dependencies when unregisterModule. For example register database listeners and then remove them\r\n\r\n### What does the proposed API look like?\r\nonRegister and onRemove in a module object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1193","RelatedDescription":"Open issue \"module onRegister, onRemove methods\" (#1193)"},{"Id":"306130533","IsPullRequest":true,"CreatedAt":"2018-03-17T05:41:30","Actor":"HerringtonDarkholme","Number":"1192","RawContent":null,"Title":"[feat] [WIP] Store augmentation","State":"open","Body":"Fix https://github.com/vuejs/vuex/issues/994\r\n\r\nBased on https://github.com/vuejs/vuex/pull/1121\r\n\r\nVuex has added `$store: Store<any>`  to Vue instance. This is suboptimal since it doesn't allow users to provide their own store type.\r\n\r\nBy utilizing TS2.8's conditional type, we can write a `PermissiveAny<T>` type which allows users to customize interface with `any` as fall-back. It can provide **opt-in** type safety for store.\r\n\r\nThe store type is parameterized by `State`. By introducing a global `RootState` interface, we can annotate `$store` as `Store<PermissiveAny<RootState>>`. If users don't augment `RootState`, the $store type is equivalent to `Store<any>`. On the other hand, if users do augment `RootState`, the store type will be changed to `Store<RootState>`.\r\n\r\nEffectively, this feature allows users to manual annotate store type, but without breaking existing code.\r\n\r\ncc @blake-newman @ktsn ","Url":"https://github.com/vuejs/vuex/pull/1192","RelatedDescription":"Open PR \"[feat] [WIP] Store augmentation\" (#1192)"},{"Id":"305255470","IsPullRequest":false,"CreatedAt":"2018-03-14T17:24:15","Actor":"corsarioll","Number":"1190","RawContent":null,"Title":"push element in to state ","State":"closed","Body":"I try to add an element to an array but it returns this error\r\n\r\nTypeError: Cannot add property 5, object is not extensible\r\n    at Array.push (<anonymous>)\r\n    at Store.addProjectsMutation (store.js?adc6:67)\r\n    at wrappedMutationHandler (vuex.esm.js?358c:697)\r\n    at commitIterator (vuex.esm.js?358c:389)\r\n    at Array.forEach (<anonymous>)\r\n    at eval (vuex.esm.js?358c:388)\r\n    at Store._withCommit (vuex.esm.js?358c:495)\r\n    at Store.commit (vuex.esm.js?358c:387)\r\n    at Object.boundCommit [as commit] (vuex.esm.js?358c:335)\r\n    at eval (store.js?adc6:120)\r\n\r\neste es mi codigo \r\n\r\n`addProjectsMutation (state,newValue){\r\n            var test = {\r\n                name : \"jeisson\",\r\n                email : \"test@email.com\",\r\n                logoImage : \"https://files.genial.guru/files/news/part_2/20205/1215060-4-1-650-a542d8629a-1501787353.jpg\",\r\n                description : \"test description con espacios y saltos de linea   asd  asd  das  dasd\"\r\n            }\r\n            console.log(state.projects)\r\n            state.projects.push(test)\r\n        },\r\n`","Url":"https://github.com/vuejs/vuex/issues/1190","RelatedDescription":"Closed issue \"push element in to state \" (#1190)"},{"Id":"305156527","IsPullRequest":true,"CreatedAt":"2018-03-14T13:24:40","Actor":"Jinjiang","Number":"1189","RawContent":null,"Title":"[docs] fixed text cut issue (close #1179)","State":"open","Body":"Ref: #1179 ","Url":"https://github.com/vuejs/vuex/pull/1189","RelatedDescription":"Open PR \"[docs] fixed text cut issue (close #1179)\" (#1189)"},{"Id":"304734995","IsPullRequest":false,"CreatedAt":"2018-03-13T14:25:14","Actor":"GMounir","Number":"1187","RawContent":null,"Title":"common state namespace","State":"closed","Body":"### Version\r\n3.0.0\r\n\r\nI have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n\r\n\r\n### What is expected?\r\nexpected: fill only the state that i'm woking in\r\n\r\n### What is actually happening?\r\nhappening: fill all states\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1187","RelatedDescription":"Closed issue \"common state namespace\" (#1187)"},{"Id":"304732374","IsPullRequest":false,"CreatedAt":"2018-03-13T11:49:06","Actor":"GMounir","Number":"1186","RawContent":null,"Title":"Common state namespace ","State":"closed","Body":"I have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n","Url":"https://github.com/vuejs/vuex/issues/1186","RelatedDescription":"Closed issue \"Common state namespace \" (#1186)"},{"Id":"304730031","IsPullRequest":false,"CreatedAt":"2018-03-13T11:41:26","Actor":"GMounir","Number":"1185","RawContent":null,"Title":"Common state with namespace ","State":"closed","Body":"I have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n","Url":"https://github.com/vuejs/vuex/issues/1185","RelatedDescription":"Closed issue \"Common state with namespace \" (#1185)"},{"Id":"304625771","IsPullRequest":false,"CreatedAt":"2018-03-13T04:38:45","Actor":"Shyam-Chen","Number":"1184","RawContent":null,"Title":"register a nested module","State":"closed","Body":"Replace arrays with dots.\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n});\r\n```\r\n\r\nto\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule('nested.myModule', {\r\n  // ...\r\n});\r\n```","Url":"https://github.com/vuejs/vuex/issues/1184","RelatedDescription":"Closed issue \"register a nested module\" (#1184)"},{"Id":"304608830","IsPullRequest":true,"CreatedAt":"2018-03-13T03:51:20","Actor":"Jinjiang","Number":"1183","RawContent":null,"Title":"[docs][zh-cn] translated #1173","State":"closed","Body":"#1173 Mention payload in action handler in API\r\n/ping @Justineo \r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1183","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] translated #1173\" (#1183)"},{"Id":"304302778","IsPullRequest":false,"CreatedAt":"2018-03-12T09:51:42","Actor":"1402310095","Number":"1182","RawContent":null,"Title":"Âä®ÊÄÅÊ≥®ÂÜåÂíåÂç∏ËΩΩmoduleÂØºËá¥È°µÈù¢‰∏äÊâÄÊúâÁöÑÁªÑ‰ª∂ÈÉΩÈîÄÊØÅÈáçÂª∫","State":"closed","Body":"  vuexÁâàÊú¨2.4.0Ôºå‰ΩøÁî®store.registerModuleÂíåstore.unregisterModule‰ºöÂØºËá¥È°µÈù¢‰∏äÈÉΩÁªÑ‰ª∂ÈîÄÊØÅÈáçÂª∫ÔºåÂèØ‰ª•ÁúãÂà∞ÂÖ∂‰ªñÁªÑ‰ª∂ÁöÑdestroyedÈí©Â≠êË¢´Ëß¶Âèë\r\nÊúâÊ≤°ÊúâËÉΩÂ§ü‰∏çËÆ©ÁªÑ‰ª∂Âà∑Êñ∞ÁöÑÂäûÊ≥ïÔºü","Url":"https://github.com/vuejs/vuex/issues/1182","RelatedDescription":"Closed issue \"Âä®ÊÄÅÊ≥®ÂÜåÂíåÂç∏ËΩΩmoduleÂØºËá¥È°µÈù¢‰∏äÊâÄÊúâÁöÑÁªÑ‰ª∂ÈÉΩÈîÄÊØÅÈáçÂª∫\" (#1182)"},{"Id":"304245734","IsPullRequest":false,"CreatedAt":"2018-03-12T05:32:08","Actor":"eeerrrttty","Number":"1181","RawContent":null,"Title":"Problem with load state","State":"closed","Body":"My load state is really crazy, i have a button that is disabled on loading content from firebase, but my vuex is showing as false.\r\n\r\nButton working as normally, but im not being able to track the changes.\r\n\r\n`import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as firebase from 'firebase'\r\nimport createPersistedState from 'vuex-persistedstate'\r\n\r\nVue.use(Vuex)\r\n\r\nexport const store = new Vuex.Store({\r\n  state: {\r\n    loadedPosts: [{\r\n      imageUrl: '',\r\n      id: '',\r\n      description: ''\r\n    }],\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n  },\r\n  plugins: [createPersistedState()],\r\n  mutations: {\r\n    setUser (state, payload) {\r\n      state.user = payload\r\n    },\r\n    createPost (state, payload) {\r\n      state.loadedPosts.push(payload)\r\n    },\r\n    setLoadedPosts (state, payload) {\r\n      state.loadedPosts = payload\r\n    },\r\n    setLoading (state, payload) {\r\n      state.loading = payload\r\n    },\r\n    setError (state, payload) {\r\n      state.error = payload\r\n    },\r\n    clearError (state) {\r\n      state.error = null\r\n    }\r\n  },\r\n  actions: {\r\n    loadPosts ({commit}) {\r\n      firebase.database().ref('posts').orderByKey().limitToLast(5).once('value')\r\n        .then((data) => {\r\n          const posts = []\r\n          const obj = data.val()\r\n          for (let key in obj) {\r\n            posts.push({\r\n              id: key,\r\n              description: obj[key].description,\r\n              imageUrl: obj[key].imageUrl,\r\n              date: obj[key].date,\r\n              creatorId: obj[key].creatorId\r\n            })\r\n          }\r\n          commit('setLoadedPosts', posts)\r\n          commit('setLoading', false)\r\n        })\r\n    },\r\n    createPost ({commit, getters}, payload) {\r\n      const post = {\r\n        description: payload.description,\r\n        date: payload.date.toISOString(),\r\n        creatorId: getters.user.id\r\n      }\r\n      let imageUrl\r\n      let key\r\n      firebase.database().ref('posts').push(post)\r\n        .then((data) => {\r\n          key = data.key\r\n          return key\r\n        })\r\n        .then(key => {\r\n          const filename = payload.image.name\r\n          const ext = filename.slice(filename.lastIndexOf('.'))\r\n          return firebase.storage().ref('posts/' + key + ext).put(payload.image)\r\n        })\r\n        .then(fileData => {\r\n          imageUrl = fileData.metadata.downloadURLs[0]\r\n          return firebase.database().ref('posts').child(key).update({imageUrl: imageUrl})\r\n        })\r\n        .then(() => {\r\n          commit('createPost', {\r\n            ...post,\r\n            imageUrl: imageUrl,\r\n            id: key\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    signUserIn ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    signUserUp ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n            firebase.auth().currentUser.sendEmailVerification()\r\n              .then(function () {\r\n                alert('Confirme sua conta. Verifique seu e-mail e caixa de spam!')\r\n              })\r\n              .catch(\r\n                error => {\r\n                  commit('setLoading', false)\r\n                  commit('setError', error)\r\n                  console.log(error)\r\n                }\r\n              )\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    autoSignIn ({commit}, payload) {\r\n      commit('setUser', {id: payload.uid, email: payload.email, emailVerified: payload.emailVerified})\r\n    },\r\n    logout ({commit}) {\r\n      firebase.auth().signOut()\r\n      commit('setUser', null)\r\n    },\r\n    clearError ({commit}, payload) {\r\n      commit('clearError')\r\n    }\r\n  },\r\n  getters: {\r\n    user (state) {\r\n      return state.user\r\n    },\r\n    loadedPosts (state) {\r\n      return state.loadedPosts\r\n    },\r\n    loadedPost (state) {\r\n      return (postId) => {\r\n        return state.loadedPosts.find((post) => {\r\n          return post.id === postId\r\n        })\r\n      }\r\n    },\r\n    loading (state) {\r\n      return state.loading\r\n    },\r\n    error (state) {\r\n      return state.error\r\n    }\r\n  }\r\n})\r\n`\r\n\r\nload just not getting updated!!!","Url":"https://github.com/vuejs/vuex/issues/1181","RelatedDescription":"Closed issue \"Problem with load state\" (#1181)"},{"Id":"304162962","IsPullRequest":false,"CreatedAt":"2018-03-11T15:34:19","Actor":"parzh","Number":"1180","RawContent":null,"Title":"Add support for ES5 native getters in state","State":"closed","Body":"### What problem does this feature solve?\r\nIt allows on-demand invocations of getters.\r\n\r\nSee example: https://codepen.io/parzh/pen/KowYJQ?editors=1010\r\n\r\nIn the given example Vuex store is used to store collection of newly created accounts. Every account is designed so it has a list of related `transactions` and getter `balance`, that returns sum of all the transactions.  \r\nEven in the case with a few accounts the amount of phantom invocations is off the limits.\r\n\r\n***\r\n\r\nAlthough on-demand invocations are currently possible (sort of) through usage of Vuex getters, nevertheless such solutions require iterations:\r\n- convertion of every single account to Vuex-compatible object;\r\n- some sort of identification, that iteratively finds the target account and returns its balance;\r\n- dynamic creation of a corresponding Vuex store for every single account in a collection (huh?);\r\n\r\nNeither of the solutions above seems reasonable:\r\n- Vuex-compatible object is one with `getBalance()` method, but balance is rather dynamic property;\r\n- iteration, obviously, - number of accounts may be arbitrarily large;\r\n- it is planned that accounts can be easily created and almost as easily deleted;\r\n\r\n### What does the proposed API look like?\r\n*no additional API is expected*\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1180","RelatedDescription":"Closed issue \"Add support for ES5 native getters in state\" (#1180)"},{"Id":"303551825","IsPullRequest":true,"CreatedAt":"2018-03-10T01:15:13","Actor":"kazupon","Number":"1177","RawContent":null,"Title":"update ja docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1177","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1177)"},{"Id":"303523876","IsPullRequest":false,"CreatedAt":"2018-03-09T11:34:22","Actor":"dotnetCarpenter","Number":"1176","RawContent":null,"Title":"Publisher/subscriber pattern in vuex ","State":"closed","Body":"### What problem does this feature solve?\r\n## To notify components in a long running task ##\r\n\r\nWhile porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nstore.subscribe('pages/loaded', (payload, state) => { /* do something useful */ })\r\n```\r\nNote that `mutation` is changed to `payload` because the type is now insignificant (the first argument to subscribe tells us what we're interested in).\r\n\r\nInside a mutation, getter or action:\r\n```js\r\nthis.nofity('event', { a: 'b', c: ['d'] })\r\n```\r\n\r\nFull list of API change:\r\n1. `store.subscribe`\r\n2. `store.nofity`\r\n3. `store.unsubscribe`\r\n4. `store.subscribeOnce`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1176","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex \" (#1176)"},{"Id":"303577490","IsPullRequest":false,"CreatedAt":"2018-03-08T18:16:53","Actor":"bichikim","Number":"1178","RawContent":null,"Title":"Is this safety way?","State":"closed","Body":"### What problem does this feature solve?\r\nUsing a custom property in vuex\r\n\r\n### What does the proposed API look like?\r\n    store.subscribeAction((action, state) => {\r\n      if(!state[sSymbol]){\r\n        state[sSymbol] = myToolForSomething\r\n      }\r\n    })\r\n\r\nin vuex plugin\r\n\r\nIt looks likes working well\r\n\r\nfor example\r\n```\r\nconst actions = {\r\n  a({state}, payload) {\r\n    state[sSymbol](gogogo)\r\n  },\r\n} //working\r\n```\r\n\r\n\r\nWhat do you guys think?\r\nIs it ok to use in production?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1178","RelatedDescription":"Closed issue \"Is this safety way?\" (#1178)"},{"Id":"303578776","IsPullRequest":false,"CreatedAt":"2018-03-08T18:12:43","Actor":"Toltar","Number":"1179","RawContent":null,"Title":"Found text cut off in API Documentation","State":"open","Body":"Wanted to report that in the [api documentation](https://vuex.vuejs.org/en/api.html), there is cut off where it shows the arguments of the capture and dispatch methods. See image below.\r\n\r\n![documentationcutsoff](https://user-images.githubusercontent.com/6003536/37168025-310ca088-22c9-11e8-9347-4956d4916da5.PNG)\r\n","Url":"https://github.com/vuejs/vuex/issues/1179","RelatedDescription":"Open issue \"Found text cut off in API Documentation\" (#1179)"},{"Id":"303518130","IsPullRequest":false,"CreatedAt":"2018-03-08T15:21:43","Actor":"dotnetCarpenter","Number":"1175","RawContent":null,"Title":"Publisher/subscriber pattern in vuex","State":"closed","Body":"While porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.","Url":"https://github.com/vuejs/vuex/issues/1175","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex\" (#1175)"},{"Id":"303303960","IsPullRequest":false,"CreatedAt":"2018-03-08T06:28:40","Actor":"rawbin-","Number":"1174","RawContent":null,"Title":"Error: [vuex] Do not mutate vuex store state outside mutation handlers.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/m391k2vm8p](https://codesandbox.io/s/m391k2vm8p)\r\n\r\n### Steps to reproduce\r\nchange the grid lines\r\n\r\n### What is expected?\r\nshow errors\r\n\r\n### What is actually happening?\r\nno errors\r\n<img width=\"1651\" alt=\"qq20180308-073512 2x\" src=\"https://user-images.githubusercontent.com/8169783/37125015-a0c59d5e-22a5-11e8-99c1-53e85970c4a1.png\">\r\n\r\n---\r\nany good idea to do with the editable grids with vue and vuex?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1174","RelatedDescription":"Closed issue \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\" (#1174)"},{"Id":"303010970","IsPullRequest":true,"CreatedAt":"2018-03-07T13:04:30","Actor":"st-sloth","Number":"1173","RawContent":null,"Title":"docs: Mention payload in action handler in API","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1173","RelatedDescription":"Closed or merged PR \"docs: Mention payload in action handler in API\" (#1173)"},{"Id":"302363093","IsPullRequest":false,"CreatedAt":"2018-03-06T07:54:08","Actor":"rawbin-","Number":"1171","RawContent":null,"Title":"any good idea for us to express editable list using vuex?","State":"closed","Body":"### Version\r\n2.3.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/38n8j41vzq](https://codesandbox.io/s/38n8j41vzq)\r\n\r\n### Steps to reproduce\r\njust open the page\r\n\r\n### What is expected?\r\nany good way to bind form using vuex especially when there are many form item to bind\r\n\r\n### What is actually happening?\r\nfor every form item we do like this \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  }\r\n}\r\n```\r\nin case that we use an module to express an data structure,it turns out \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  },\r\n phone: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.phone\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updatePhone', value)\r\n    }\r\n  }\r\n}\r\n}\r\n```\r\nit's boring to do this on every form item when there is much more to do\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1171","RelatedDescription":"Closed issue \"any good idea for us to express editable list using vuex?\" (#1171)"},{"Id":"302584175","IsPullRequest":false,"CreatedAt":"2018-03-06T06:52:52","Actor":"Vheissu","Number":"1172","RawContent":null,"Title":"Decoupling Vuex from Vue","State":"open","Body":"### What problem does this feature solve?\r\nI do not work with Vue.js as my primary day-to-day library of choice, however, when I have and have used the VueX state management library with it, it was fantastic. As someone who has worked with Redux before, I appreciated just how much more simple VueX was in comparison to the over-engineered and complicated Redux library.\r\n\r\nAs it currently stands, VueX is tightly coupled to Vue. This means VueX cannot be used with any other framework or library. Would it ever be a consideration to make VueX a standalone library and remove the Vue dependency?\r\n\r\nAt the end of the day, VueX allows the user to work with a bunch of data inside of a single object tree. I have not done the investigative work just yet to see how much VueX relies on Vue, but I would love to know if the team are open to making it a standalone state management solution? It's one of the best state management libraries I have ever used.\r\n\r\n### What does the proposed API look like?\r\nThe proposed API would resemble that of the current plugin. In-fact, the only thing I could see being different is that you do not register the plugin using `Vue.use(Vuex)` and just instantiate it directly and assign the result to a variable/constant called `store` or whatever.\r\n\r\nYou would then configure your state management using the same syntax.\r\n\r\n```\r\nimport Vuex from 'vuex'\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    counter: 0\r\n  },\r\n  getters: {\r\n    counter: state => state.counter * 2\r\n  },\r\n  mutations: {\r\n    increment: state => state.counter  \r\n  }\r\n});\r\n\r\n// Usage\r\n\r\nconsole.log(store.getters.counter);\r\nstore.commit('increment');\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1172","RelatedDescription":"Open issue \"Decoupling Vuex from Vue\" (#1172)"},{"Id":"302088037","IsPullRequest":true,"CreatedAt":"2018-03-04T14:01:52","Actor":"blackmiaool","Number":"1170","RawContent":null,"Title":"docs: mention mapState needs injected store","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1170","RelatedDescription":"Open PR \"docs: mention mapState needs injected store\" (#1170)"},{"Id":"301212285","IsPullRequest":false,"CreatedAt":"2018-02-28T22:42:39","Actor":"DusanMilko","Number":"1168","RawContent":null,"Title":"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'","State":"closed","Body":"All I'm doing is\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nWhen I compile my js with webpack I get \r\n`Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'`","Url":"https://github.com/vuejs/vuex/issues/1168","RelatedDescription":"Closed issue \"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'\" (#1168)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-03-23T05:30:34.9380543Z","RunDurationInMilliseconds":4069}