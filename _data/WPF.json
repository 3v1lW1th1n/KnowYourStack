{"Data":{"GitHub":{"Issues":[{"Id":"523593109","IsPullRequest":false,"CreatedAt":"2019-11-15T17:20:32","Actor":"rladuca","Number":"2196","RawContent":null,"Title":"Test fixups w.r.t WinForms type removal","State":"open","Body":"See: #2169 \r\n\r\nWe need to react to this change in our test repo and remove the type references in the following tests:\r\n\r\n\r\nFeature | Test   Case | Reproduced   OS | Main   Log | Detail   Log\r\n-- | -- | -- | -- | --\r\nElementServices | /Name=\"Var(MouseButtonApp_WpfApplication_WindowsFormSource)\"   /SubArea=\"Input\" | All   test OSes | Log:   ********* Starting Test:   Var(MouseButtonApp_WpfApplication_WindowsFormSource) *********   Repro Arguments:   /Name=Var(MouseButtonApp_WpfApplication_WindowsFormSource) /Are   a=ElementServices   /SubArea=Input   ********* Begin Variation:   InputApp *********   … …   Creating 'WindowsFormSource'   surface...   Creating a WindowsFormSource   object   Unhandled exception occurred in dispatcher.   System.MissingMethodException: Method not found: 'Void   System.Windows.Forms.Cont   rol.add_ContextMenuChanged(System.EventHandler)'.      at System.Windows.Forms.Integration.ElementHost.StartPropertyMapping()      at   System.Windows.Forms.Integration.ElementHost..ctor() in G:\\wpf_private\\src   \\Microsoft.DotNet.Wpf\\src\\WindowsFormsIntegration\\System\\Windows\\Integration\\Ele   mentHost.cs:line 85      at Microsoft.Test.WindowsForms.WindowsFormSource.InitializeComponent()   in /_/   src/Test/Common/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   152      at   Microsoft.Test.WindowsForms.WindowsFormSource..ctor() in /_/src/Test/Commo   n/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   59   … … | Var(MouseButtonApp_WpfApplication_WindowsFormSource)_3.1\r\nElementServices | /Name=\"Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-WpfApplication-WindowsFormSource)\"   /SubArea=\"InputSequence\" | All   test OSes | Log:   ********* Starting Test:   Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-   WpfApplication-WindowsFormSource)   *********   Repro Arguments:   /Name=Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-Wp   fApplication-WindowsFormSource)   /Area=ElementServices /SubArea=InputSequence   ********* Begin Variation:   InputSequenceApp *********   … …   QualityVault: Process: 3916 now   marked for tracking.   Variation loop beginning...   In CreateTestContainer...   In   ActionSequenceTestEngine.RunTestAction...   'TestContainer' is in storage.   Creating 'WindowsFormSource'   surface...   Creating a WindowsFormSource   object   Unhandled exception occurred in dispatcher.   System.MissingMethodException: Method not found: 'Void   System.Windows.Forms.Cont   rol.add_ContextMenuChanged(System.EventHandler)'.      at   System.Windows.Forms.Integration.ElementHost.StartPropertyMapping()      at System.Windows.Forms.Integration.ElementHost..ctor()   in G:\\wpf_private\\src   \\Microsoft.DotNet.Wpf\\src\\WindowsFormsIntegration\\System\\Windows\\Integration\\Ele   mentHost.cs:line 85      at   Microsoft.Test.WindowsForms.WindowsFormSource.InitializeComponent() in /_/   src/Test/Common/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   152      at   Microsoft.Test.WindowsForms.WindowsFormSource..ctor() in /_/src/Test/Commo   n/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   59      at   Avalon.Test.CoreUI.Trusted.SurfaceFramework.Initialize(String typeOfSurfac   e, Int32 left, Int32 top, Int32   width, Int32 height, Boolean visibleSurface)      at   Avalon.Test.CoreUI.Trusted.SurfaceFramework..ctor(String typeOfSurface, In   t32 left, Int32 top, Int32   width, Int32 height)      at   Avalon.Test.CoreUI.Common.StubTestContainer.DisplayObject(Object visual, I   nt32 x, Int32 y, Int32 w, Int32   h)   … … | Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-WpfApplication-WindowsFormSource)_3.1\r\n\r\n\r\nWindowsFormsIntegration | DrtWindowsFormsIntegration () | All test OSes | Log:   ********* Starting Test:   DrtWindowsFormsIntegration() *********   Repro Arguments:   /Name=DrtWindowsFormsIntegration() /Area=WindowsFormsIntegration   Clearing click once cache.   ********* Begin Variation:   DrtWindowsFormsIntegration() *********   QualityVault: Process: 2008 now   marked for tracking.   DrtWindowsFormsIntegration (owner:   )   >Suite   (owner:         ):   WindowsFormsHostTestSuite   >Suite   (owner:         ):   ElementHostTestSuite       Non-zero exit code: 1   ***************************************   Variation Result: Fail   ***************************************   ********* End Variation  :   DrtWindowsFormsIntegration() *********   Repro Arguments:   /Name=DrtWindowsFormsIntegration() /Area=WindowsFormsIntegration /SubArea=   ********* Ending Test: DrtWindowsFormsIntegration()   ********* | DrtWindowsFormsIntegration()\r\n-- | -- | -- | -- | --\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/2196","RelatedDescription":"Open issue \"Test fixups w.r.t WinForms type removal\" (#2196)"},{"Id":"523466385","IsPullRequest":true,"CreatedAt":"2019-11-15T14:21:22","Actor":"dotnet-maestro[bot]","Number":"2195","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191115.4\r\n- **Date Produced**: 11/15/2019 12:33 PM\r\n- **Commit**: 5e14088f5b1bfc53127fab7ac108c0bc25afa146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19565.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2195","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2195)"},{"Id":"523282474","IsPullRequest":true,"CreatedAt":"2019-11-15T07:57:05","Actor":"dotnet-maestro[bot]","Number":"2194","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191114.4\r\n- **Date Produced**: 11/15/2019 4:57 AM\r\n- **Commit**: 4bcd68c8b29476fc3c5ca1b496214584aadfdc84\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-rtm.19564.4\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2194","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2194)"},{"Id":"523217247","IsPullRequest":false,"CreatedAt":"2019-11-15T02:34:39","Actor":"StormStark","Number":"2193","RawContent":null,"Title":"MouseHover event not available","State":"open","Body":"I wanted change the default border color of the button and textbox when the mouse is hovering over the element.\r\nMany websites show there is a MouseHover event present. I noticed there is a lot of mouse events (moseOver, mouseEnter, mouseLeave ,etc. ) presrnt but MouseHover.\r\n\r\nIs there any other event that will do the trick?","Url":"https://github.com/dotnet/wpf/issues/2193","RelatedDescription":"Open issue \"MouseHover event not available\" (#2193)"},{"Id":"523202282","IsPullRequest":true,"CreatedAt":"2019-11-15T01:50:27","Actor":"dotnet-maestro[bot]","Number":"2192","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191114.3\r\n- **Date Produced**: 11/15/2019 12:17 AM\r\n- **Commit**: 9fb9388f954d929d9f6213096fca6abdd99716e5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-rtm.19564.3\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2192","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2192)"},{"Id":"523162303","IsPullRequest":true,"CreatedAt":"2019-11-14T23:39:09","Actor":"wtgodbe","Number":"2191","RawContent":null,"Title":"Update PreReleaseVersionLabel to RTM","State":"closed","Body":"Non-shipping packages should be labeled RTM for GA. We need to take this fix for 3.1 GA","Url":"https://github.com/dotnet/wpf/pull/2191","RelatedDescription":"Closed or merged PR \"Update PreReleaseVersionLabel to RTM\" (#2191)"},{"Id":"523100764","IsPullRequest":false,"CreatedAt":"2019-11-14T20:58:09","Actor":"rladuca","Number":"2190","RawContent":null,"Title":"Consider exposing an hwnd-scoped version of UpdateLayout","State":"open","Body":"Moved from [internal bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/781867).\r\n\r\nHwndTarget calls UpdateLayout while handling WM_RESIZE.  It needs the updated layout for its window, but UpdateLayout deals with all windows on the thread.  As we’ve seen, this can lead to undesirable re-entrancy.  Why should a resize for one hwnd need to touch anything belonging to an unrelated hwnd?\r\n\r\nConsider exposing an hwnd-scoped version of UpdateLayout.","Url":"https://github.com/dotnet/wpf/issues/2190","RelatedDescription":"Open issue \"Consider exposing an hwnd-scoped version of UpdateLayout\" (#2190)"},{"Id":"522414770","IsPullRequest":false,"CreatedAt":"2019-11-14T20:51:11","Actor":"faryu","Number":"2185","RawContent":null,"Title":"System.SystemException: Error at \"OleInitialize\" for \"-2147417850\"","State":"closed","Body":"Hi,\r\n\r\nI have recently migrated my WPF application from .net framework 4.6.2 to .net core 3.0.\r\nIt works great so far on my machine and at least 6 more, but now I have encountered a Notebook, which throws an error which I have not seen before while opening the MainWindow with the ShowDialog() method.\r\n\r\n```cs\r\nSystem.SystemException: Fehler bei \"OleInitialize\" für \"-2147417850\".\r\n   at System.Windows.OleServicesContext.SetDispatcherThread()\r\n   at System.Windows.OleServicesContext.get_CurrentOleServicesContext()\r\n   at System.Windows.DragDrop.RegisterDropTarget(IntPtr windowHandle)\r\n   at System.Windows.Interop.HwndSource.Initialize(HwndSourceParameters parameters)\r\n   at System.Windows.Interop.HwndSource..ctor(HwndSourceParameters parameters)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.CreateSourceWindowDuringShow()\r\n   at System.Windows.Window.SafeCreateWindowDuringShow()\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Window.Show()\r\n   at System.Windows.Window.ShowDialog()\r\n```\r\n\r\nWhich in english could mean: Error at \"OleInitialize\" for \"-2147417850\".\r\n\r\nThe notebook is using Windows 10 64-bit and is running the latest windows updates.\r\nMy application is a self-contained .net core 3.0 with WPF enabled, published for the win-x64 target platform. I do not know how to tell the exact version of which .net core 3.0 I'm using, so I'm posting the version of the PresentationCore.dll, which is file version 4.800.19.46214 and product version 4.8.0-rc2.19462.14+...\r\n\r\nAny idea what could cause this? ","Url":"https://github.com/dotnet/wpf/issues/2185","RelatedDescription":"Closed issue \"System.SystemException: Error at \"OleInitialize\" for \"-2147417850\"\" (#2185)"},{"Id":"523095551","IsPullRequest":false,"CreatedAt":"2019-11-14T20:46:42","Actor":"rladuca","Number":"2189","RawContent":null,"Title":"System.ArgumentException in PresentationFramework.dll!System.Windows.Controls.ToolBarTray.MeasureOverride","State":"open","Body":"This bug was ported over from an [internal bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/795027).\r\n\r\nCall Stack\r\nThe call stack provided below is only a SAMPLE. Please use the cab search link above to obtain latest cabs and call stacks.\r\nWindowsBase.ni!System.Windows.Size.set_Width\r\nat PresentationFramework.ni!System.Windows.Controls.ToolBarTray.MeasureOverride in ToolBarTray.cs\r\nat PresentationFramework.ni!System.Windows.FrameworkElement.MeasureCore\r\nat PresentationCore.ni!System.Windows.UIElement.Measure in UIElement.cs\r\nat PresentationFramework.ni!System.Windows.Controls.Border.MeasureOverride in Border.cs\r\nat PresentationFramework.ni!System.Windows.FrameworkElement.MeasureCore\r\nat PresentationCore.ni!System.Windows.UIElement.Measure in UIElement.cs\r\nat PresentationFramework.ni!System.Windows.Controls.DockPanel.MeasureOverride in DockPanel.cs\r\nat PresentationFramework.ni!System.Windows.FrameworkElement.MeasureCore\r\nat PresentationCore.ni!System.Windows.UIElement.Measure in UIElement.cs\r\nat PresentationCore.ni!System.Windows.ContextLayoutManager.UpdateLayout in LayoutManager.cs\r\nat PresentationCore.ni!System.Windows.ContextLayoutManager.UpdateLayoutCallback in LayoutManager.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext in MediaContext.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext.FireInvokeOnRenderCallbacks in MediaContext.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext.RenderMessageHandlerCore in MediaContext.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext.RenderMessageHandler in MediaContext.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.InternalRealCall in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.TryCatchWhen in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.DispatcherOperation.InvokeImpl in DispatcherOperation.cs\r\nat WindowsBase.ni!System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext in DispatcherOperation.cs\r\nat WindowsBase.ni!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper in CulturePreservingExecutionContext.cs\r\nat mscorlib.ni!System.Threading.ExecutionContext.RunInternal in executioncontext.cs\r\nat mscorlib.ni!System.Threading.ExecutionContext.Run in executioncontext.cs\r\nat mscorlib.ni!System.Threading.ExecutionContext.Run in executioncontext.cs\r\nat WindowsBase.ni!MS.Internal.CulturePreservingExecutionContext.Run in CulturePreservingExecutionContext.cs\r\nat WindowsBase.ni!System.Windows.Threading.DispatcherOperation.Invoke in DispatcherOperation.cs\r\nat WindowsBase.ni!System.Windows.Threading.Dispatcher.ProcessQueue in Dispatcher.cs\r\nat WindowsBase.ni!System.Windows.Threading.Dispatcher.WndProcHook in Dispatcher.cs\r\nat WindowsBase.ni!MS.Win32.HwndWrapper.WndProc in HwndWrapper.cs\r\nat WindowsBase.ni!MS.Win32.HwndSubclass.DispatcherCallbackOperation in HwndSubclass.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.InternalRealCall in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.TryCatchWhen in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.Dispatcher.LegacyInvokeImpl in Dispatcher.cs\r\nat WindowsBase.ni!MS.Win32.HwndSubclass.SubclassWndProc in HwndSubclass.cs\r\n\r\n\r\nAnonymized analysis comments:\r\n\r\n```\r\nThis is a dupe of a bug in the old tracking system.\r\n\r\nThe bug is and always has been in WPF, specifically this code inside ToolBarTray.MeasureOverride\r\n\r\n<snip>\r\nfor (toolBarIndex = 0; toolBarIndex < band.Count; toolBarIndex++)\r\n{\r\n    ToolBar toolBar = band[toolBarIndex];\r\n    remainingLength -= toolBar.MinLength;\r\n    if (DoubleUtil.LessThan(remainingLength, 0))\r\n    {\r\n        remainingLength = 0;\r\n        break;\r\n    }\r\n}\r\n// Measure all children passing the remainingLength as a constraint\r\nfor (toolBarIndex = 0; toolBarIndex < band.Count; toolBarIndex++)\r\n{\r\n    ToolBar toolBar = band[toolBarIndex];\r\n    remainingLength += toolBar.MinLength;\r\n    if (fHorizontal)\r\n        childConstraint.Width = remainingLength;\r\n    else\r\n        childConstraint.Height = remainingLength;\r\n    toolBar.Measure(childConstraint);\r\n<snip>\r\n\r\nThe first for loop gets it correct, in that it uses DoubleUtil.LessThan(remainingLength, 0) to ensure that if the remaningLength drops below 0 it is capped back to 0. The lower loop does not. In this crash after measuring the MinLength for 19 toolbars remainingLength has ended up as -0.0 (yes, doubles have a concept of negative 0), that is set as Width and the Size class throws saying that width cannot be negative.\r\n```\r\n\r\n```\r\nReopening this for WPF to investigate potentially fixing this. The real bug seems to be in DoubleUtil.LessThan(). If the value being checked is close to zero but slightly negative, it can slip through this check and result in setting the Width or Height of a Size object to a negative value resulting in the exception. One way to fix this could be to change the if check to something like this:\r\n\r\nif (remainingLength < double.Epsilon)\r\n    remainingLength = 0;\r\n```","Url":"https://github.com/dotnet/wpf/issues/2189","RelatedDescription":"Open issue \"System.ArgumentException in PresentationFramework.dll!System.Windows.Controls.ToolBarTray.MeasureOverride\" (#2189)"},{"Id":"521897111","IsPullRequest":false,"CreatedAt":"2019-11-14T20:10:57","Actor":"usernamedd","Number":"2183","RawContent":null,"Title":"disable to compile solution . no netcore5.0 installed","State":"closed","Body":"I donot know how to install net core 5.0 ,now just net core 3.1 can be downloaded from internet.","Url":"https://github.com/dotnet/wpf/issues/2183","RelatedDescription":"Closed issue \"disable to compile solution . no netcore5.0 installed\" (#2183)"},{"Id":"520508798","IsPullRequest":false,"CreatedAt":"2019-11-14T20:02:19","Actor":"TonyValenti","Number":"2178","RawContent":null,"Title":"Web Browser Control","State":"closed","Body":"Is one coming for WPF?  Perhaps one based on the chromium edge work?","Url":"https://github.com/dotnet/wpf/issues/2178","RelatedDescription":"Closed issue \"Web Browser Control\" (#2178)"},{"Id":"523067758","IsPullRequest":false,"CreatedAt":"2019-11-14T19:48:06","Actor":"vatsan-madhavan","Number":"2188","RawContent":null,"Title":"Fixup WPF to adapt to WinForms API removal","State":"open","Body":"https://github.com/dotnet/wpf/issues/2169#issue-519605686\r\n\r\nWinForms recently removed a bunch of API's - see dotnet/winforms#2157.\r\n\r\nFixup WPF to adapt to this change.","Url":"https://github.com/dotnet/wpf/issues/2188","RelatedDescription":"Open issue \"Fixup WPF to adapt to WinForms API removal\" (#2188)"},{"Id":"519605686","IsPullRequest":false,"CreatedAt":"2019-11-14T19:40:03","Actor":"vatsan-madhavan","Number":"2169","RawContent":null,"Title":"Fixup WPF to adapt to WinForms api removal","State":"closed","Body":"WinForms recently removed a bunch of API's - see https://github.com/dotnet/winforms/pull/2157. \r\n\r\nFixup WPF to adapt to this change. ","Url":"https://github.com/dotnet/wpf/issues/2169","RelatedDescription":"Closed issue \"Fixup WPF to adapt to WinForms api removal\" (#2169)"},{"Id":"523045583","IsPullRequest":false,"CreatedAt":"2019-11-14T19:01:49","Actor":"arpitmathur","Number":"2187","RawContent":null,"Title":".NET 5.0 - WPF Accessibility Bugs","State":"open","Body":"Epic to capture all MAS Related Bugs for .NET 5.0","Url":"https://github.com/dotnet/wpf/issues/2187","RelatedDescription":"Open issue \".NET 5.0 - WPF Accessibility Bugs\" (#2187)"},{"Id":"522855761","IsPullRequest":true,"CreatedAt":"2019-11-14T13:43:41","Actor":"dotnet-maestro[bot]","Number":"2186","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 2:08 AM\r\n- **Commit**: 4cf56ef4a8f8a620fe1d9354d7451ff59c903db8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2186)"},{"Id":"522222079","IsPullRequest":true,"CreatedAt":"2019-11-13T14:16:35","Actor":"dotnet-maestro[bot]","Number":"2184","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191112.8\r\n- **Date Produced**: 11/13/2019 3:40 AM\r\n- **Commit**: cc4e5bc1b9b600c5329e7cc553137a62480b36bd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19562.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2184","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2184)"},{"Id":"521488391","IsPullRequest":true,"CreatedAt":"2019-11-12T19:45:15","Actor":"drewnoakes","Number":"2181","RawContent":null,"Title":"Remove modification of MSBuildAllProjects property","State":"closed","Body":"Since 16.0, MSBuild automatically prepends the most recently modified import to this property, so there's no need to ensure all imports do this themselves. In fact, doing so actively harms performance as this property's value becomes very large and processing it is expensive.\r\n\r\nI assume this SDK does not need to support VS versions earlier than 16.0.","Url":"https://github.com/dotnet/wpf/pull/2181","RelatedDescription":"Closed or merged PR \"Remove modification of MSBuildAllProjects property\" (#2181)"},{"Id":"521548806","IsPullRequest":true,"CreatedAt":"2019-11-12T13:54:57","Actor":"dotnet-maestro[bot]","Number":"2182","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191111.4\r\n- **Date Produced**: 11/12/2019 2:59 AM\r\n- **Commit**: 72277a47d4be14e23d58e29405f3c6332a3622a3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19561.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2182","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2182)"},{"Id":"520954271","IsPullRequest":true,"CreatedAt":"2019-11-11T14:01:39","Actor":"dotnet-maestro[bot]","Number":"2180","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191110.4\r\n- **Date Produced**: 11/11/2019 12:58 AM\r\n- **Commit**: 82eaa4b38354b4ccce34a12b9050136b4599e915\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19560.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2180","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2180)"},{"Id":"520598947","IsPullRequest":true,"CreatedAt":"2019-11-10T13:57:31","Actor":"dotnet-maestro[bot]","Number":"2179","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191109.6\r\n- **Date Produced**: 11/10/2019 1:16 AM\r\n- **Commit**: 8eccf25eb8e28178a0fd247527d8a338533aa339\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19559.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2179","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2179)"},{"Id":"520487754","IsPullRequest":false,"CreatedAt":"2019-11-09T17:38:13","Actor":"broad-m","Number":"2177","RawContent":null,"Title":"I am using wpf inkCanvas on win10 tablet, eraser cursor hide after touch up,  how can I prevent this behavior?","State":"open","Body":".NET Framework 4.5\r\nwin10  tablet\r\n","Url":"https://github.com/dotnet/wpf/issues/2177","RelatedDescription":"Open issue \"I am using wpf inkCanvas on win10 tablet, eraser cursor hide after touch up,  how can I prevent this behavior?\" (#2177)"},{"Id":"520425143","IsPullRequest":true,"CreatedAt":"2019-11-09T14:18:45","Actor":"dotnet-maestro[bot]","Number":"2176","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191108.8\r\n- **Date Produced**: 11/9/2019 2:05 AM\r\n- **Commit**: 1bfda551f9a918649e9c5a3b1b16342a9ac9de7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19558.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2176","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2176)"},{"Id":"520421541","IsPullRequest":true,"CreatedAt":"2019-11-09T13:03:54","Actor":"dotnet-maestro[bot]","Number":"2175","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191114.6\r\n- **Date Produced**: 11/15/2019 2:39 AM\r\n- **Commit**: c1cd0349f7d29cf21d93d61cdea382aecc422e36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19564.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19564.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19564.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19564.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19564.6\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2175","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#2175)"},{"Id":"520371958","IsPullRequest":false,"CreatedAt":"2019-11-09T09:52:13","Actor":"bbougot","Number":"2174","RawContent":null,"Title":"Disable click sound on navigating from a System.Windows.Controls.Frame","State":"open","Body":"I'm running a .NET Core 3.0 WPF in which a Frame is embedded into my main Window.\r\nEvery time I navigate in this frame, using its NavigationService, a disturbing click sound (the same one that is played while navigating in Internet Explorer or WebBrowser Control) occur and I considerate it as a *very bad* user experience.\r\nAs far as I know, there is no way to disable it, according to [this](https://stackoverflow.com/questions/4254026/turn-off-navigation-page-sound-in-wpf-frame-control) and [this](https://social.msdn.microsoft.com/Forums/vstudio/en-us/843677f4-8f0b-46cb-986c-92e8042d0707/stupid-problem-with-webbrowser-control?forum=vbgeneral).\r\n\r\nI do not consider writing a registry value is a working solution here (as suggested in the link).","Url":"https://github.com/dotnet/wpf/issues/2174","RelatedDescription":"Open issue \"Disable click sound on navigating from a System.Windows.Controls.Frame\" (#2174)"},{"Id":"520117814","IsPullRequest":true,"CreatedAt":"2019-11-08T16:45:30","Actor":"mmitche","Number":"2173","RawContent":null,"Title":"Add dotnet-eng and remove some other feeds","State":"open","Body":"The dotnet-tools feed is being moved to dotnet-eng so that dotnet-tools can be used for actual tools.\r\n\r\nhttps://github.com/dotnet/arcade/issues/4197\r\n\r\nAlso remove some feeds that I don't think are necessary any longer.","Url":"https://github.com/dotnet/wpf/pull/2173","RelatedDescription":"Open PR \"Add dotnet-eng and remove some other feeds\" (#2173)"},{"Id":"520104062","IsPullRequest":false,"CreatedAt":"2019-11-08T16:18:52","Actor":"Rand-Random","Number":"2172","RawContent":null,"Title":"ContextMenu loses DataContext when DpiAwareness is activated","State":"open","Body":"XAML:\r\n\r\n```\r\n<Window x:Class=\"WpfApp1.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        DataContext=\"{Binding RelativeSource={RelativeSource Self}}\">\r\n    <Window.ContextMenu>\r\n        <ContextMenu>\r\n            <MenuItem Header=\"{Binding HelloWorld}\" />\r\n        </ContextMenu>\r\n    </Window.ContextMenu>\r\n</Window>\r\n```\r\nCode behind:\r\n\r\n```\r\nusing System.Windows;\r\n\r\nnamespace WpfApp1\r\n{\r\n    public partial class MainWindow : Window\r\n    {\r\n        public string HelloWorld { get; set; } = \"Hello World\";\r\n\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\napp.manifest\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<assembly manifestVersion=\"1.0\" xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n\r\n  <application xmlns=\"urn:schemas-microsoft-com:asm.v3\">\r\n    <windowsSettings>\r\n      <dpiAwareness xmlns=\"http://schemas.microsoft.com/SMI/2016/WindowsSettings\">PerMonitorV2</dpiAwareness>\r\n      <dpiAware xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">true</dpiAware>\r\n    </windowsSettings>\r\n  </application>\r\n\r\n</assembly>\r\n```\r\n\r\nRight mouse click on the window and you will see a context menu with the header \"Hello World\".\r\n![image](https://user-images.githubusercontent.com/9868626/68491473-38fb0880-024b-11ea-8256-ad1cfcd784d2.png)\r\n\r\nRight mouse click again on the window and you will see a blank menu item.\r\n![image](https://user-images.githubusercontent.com/9868626/68491416-1d8ffd80-024b-11ea-884d-0217c8bedd66.png)\r\n\r\nYou can endlessly repeat the right click, and the context menu will stay blank. The important part is that you don't force close the contextmenu, by left mouse click or a click on the menuitem it self, so you have to make sure to right click on an empty space while the context menu is open.\r\n\r\nIf you remove the app.manifest dpiAwareness settings you will always get the \"Hello World\", the error happens in both .net Core 3.0 and .net Framework 4.8. It is also present in earlier .net Framework Version the lowest we have tested is .net Framework 4.7.\r\n\r\nIt also only happens on our Windows 10 machines.\r\n\r\nYou can \"prevent\" the error from happening if you left mouse click in between the right mouse clicks.","Url":"https://github.com/dotnet/wpf/issues/2172","RelatedDescription":"Open issue \"ContextMenu loses DataContext when DpiAwareness is activated\" (#2172)"},{"Id":"520011119","IsPullRequest":true,"CreatedAt":"2019-11-08T13:46:04","Actor":"dotnet-maestro[bot]","Number":"2171","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191107.6\r\n- **Date Produced**: 11/8/2019 12:51 AM\r\n- **Commit**: 69785ae9e3df025b68ab266d87f673a4bd000055\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19557.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2171","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2171)"},{"Id":"520003319","IsPullRequest":true,"CreatedAt":"2019-11-08T13:38:16","Actor":"dotnet-maestro[bot]","Number":"2170","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191107.20\r\n- **Date Produced**: 11/8/2019 1:56 AM\r\n- **Commit**: b62f1617f2c453497fd55697c04dd8021a38dc17\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19557.20\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19557.20\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19557.20\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19557.20\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19557.20\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2170","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2170)"},{"Id":"519605164","IsPullRequest":true,"CreatedAt":"2019-11-08T03:07:25","Actor":"vatsan-madhavan","Number":"2168","RawContent":null,"Title":"Fixup to WPF to adapt to removal of legacy API's from WinForms","State":"closed","Body":"### Description \r\n\r\nFixes #2169 \r\n\r\nThis is a fixup to WPF to adapt to legacy api removal in WinForms (see https://github.com/dotnet/winforms/pull/2157). \r\n\r\n### Risk \r\nLow - minor changes to ElementHost. \r\n\r\n### Customer Impact. \r\n\r\nDoesn't seem like very much of an impact from WPF directly. Indirect impact from WinForms changes are off-topic here. \r\n\r\n### Testing \r\n\r\nNone - this builds. \r\n\r\nRelated: We need this to get https://github.com/dotnet/wpf/pull/2161 going. \r\n\r\n/cc @RussKie ","Url":"https://github.com/dotnet/wpf/pull/2168","RelatedDescription":"Closed or merged PR \"Fixup to WPF to adapt to removal of legacy API's from WinForms\" (#2168)"},{"Id":"519598347","IsPullRequest":true,"CreatedAt":"2019-11-08T01:00:31","Actor":"YoshihiroIto","Number":"2167","RawContent":null,"Title":"Fix NRE when tooltip closing(#381)","State":"open","Body":"Reproduction\r\nhttps://github.com/dotnet/wpf/issues/381#issuecomment-547206598","Url":"https://github.com/dotnet/wpf/pull/2167","RelatedDescription":"Open PR \"Fix NRE when tooltip closing(#381)\" (#2167)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-16T05:30:52.0539775Z","RunDurationInMilliseconds":637}