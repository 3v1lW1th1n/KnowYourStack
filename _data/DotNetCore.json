{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":234,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6998388625","Type":"PullRequestEvent","CreatedAt":"2017-12-17T04:10:44","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15471","RelatedDescription":"Merged pull request \"Fix method names of hardware intrinsic APIs\" (#15471) at dotnet/coreclr","RelatedBody":"Avoid language-specific type names in hardware intrinsic APIs. Discussed in https://github.com/dotnet/coreclr/pull/15341#issuecomment-348659762\r\n\r\n@tannergooding @jkotas "},{"Id":"6998205208","Type":"PullRequestEvent","CreatedAt":"2017-12-17T00:47:16","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15557","RelatedDescription":"Opened pull request \"Make DangerousGetPinnableReference internal and remove DangerousTryGetArray\" (#15557) at dotnet/coreclr","RelatedBody":"Fixes:\r\nhttps://github.com/dotnet/corefx/issues/25412\r\nhttps://github.com/dotnet/corefx/issues/25615\r\n\r\n**Blocked until all uses of DangerousGetPinnableReference and DangerousTryGetArray are replaced with MemoryMarshal APIs (in progress).**\r\n\r\nRelated corefx PR: \r\n\r\nFollowing the staging plan from here: https://github.com/dotnet/corefx/issues/23881#issuecomment-343767740\r\n\r\n- [x] Add MemoryExtensions.GetReference/TryGetArray\r\n- [x] Convert all uses of DangerousGetPinnableReference/DangerousTryGetArray in coreclr, corefx, corert, corefxlab, aspnet, ... to MemoryExtensions.GetReference\r\n- [ ] Change DangerousGetPinnableReference to whatever we like to make it fit the pinning pattern and remove DangerousTryGetArray.\r\n\r\nDoing it this way will avoid the need for complex staging or things being on the floor for extensive periods of time.\r\n\r\ncc @jkotas, @stephentoub, @KrzysztofCwalina, @davidfowl"},{"Id":"6998139563","Type":"PullRequestEvent","CreatedAt":"2017-12-16T23:42:26","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15556","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to preview1-26016-04, preview1-26016-06, respectively (master)\" (#15556) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"6998082176","Type":"PullRequestEvent","CreatedAt":"2017-12-16T22:50:11","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15512","RelatedDescription":"Merged pull request \"Respect STA/MTAThread attributes\" (#15512) at dotnet/coreclr","RelatedBody":"Fixes #13688 \r\nTests PR - https://github.com/dotnet/corefx/pull/25934\r\n"},{"Id":"6998082166","Type":"IssuesEvent","CreatedAt":"2017-12-16T22:50:11","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13688","RelatedDescription":"Closed issue \"STAThread attribute is not respected in netcoreapp\" (#13688) at dotnet/coreclr","RelatedBody":"Create a new `netcoreapp2.0` project and set the `Program.cs` file to:\r\n```csharp\r\nusing System;\r\nusing System.Threading;\r\n\r\nnamespace ConsoleApp4\r\n{\r\n    class Program\r\n    {\r\n        [STAThread]\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(Thread.CurrentThread.GetApartmentState());\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nExamine that the output from the application is:\r\n```\r\nMTA\r\n```\r\n\r\nNot respecting `STAThread` means that users who depend on it (even if it really only matters on Windows), have to manually spawn a thread to run their code.\r\n\r\nIn some cases, certain libraries actually check and enforce that the calling thread is STA, and will throw an exception if it is not."},{"Id":"6997844030","Type":"PullRequestEvent","CreatedAt":"2017-12-16T19:32:58","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15554","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26016-03, preview1-26016-05, respectively (master)\" (#15554) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"6997615713","Type":"PullRequestEvent","CreatedAt":"2017-12-16T16:49:55","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15555","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#15555) at dotnet/coreclr","RelatedBody":null},{"Id":"6997606505","Type":"PullRequestEvent","CreatedAt":"2017-12-16T16:43:34","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15553","RelatedDescription":"Merged pull request \"Remove executable bit from _typeinfo.h\" (#15553) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6998056792","Type":"IssuesEvent","CreatedAt":"2017-12-16T22:27:44","Actor":"dustinmoris","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8257","RelatedDescription":"Opened issue \"dotnet new giraffe fails after latest update\" (#8257) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n`dotnet new giraffe`\r\n\r\nor as @cartermp demo'd in [his blog post](https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/):\r\n\r\n`dotnet new giraffe -o GiraffeSample`\r\n\r\n## Expected  behavior\r\n\r\nThe CLI should identify that the `giraffe` template only supports F# as language and therefore successfully create an F# Giraffe application without asking the user to specify the additional `-lang` parameter.\r\n\r\n## Actual behavior\r\n\r\nThe command fails and shows help for `dotnet new`. This is a regression bug as it worked as expected in previous versions.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.3)\r\n\r\nProduct Information:\r\n Version:            2.0.3\r\n Commit SHA-1 hash:  eb1d5ee318\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.3/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"6996223838","Type":"PullRequestEvent","CreatedAt":"2017-12-15T23:05:00","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8248","RelatedDescription":"Merged pull request \"Fix windows keep adding tools path to env:PATH\" (#8248) at dotnet/cli","RelatedBody":"Environment.GetEnvironmentVariable(PathName) means\r\n\r\nEnvironment.GetEnvironmentVariable(PathName,\r\nEnvironmentVariableTarget.Process)\r\n\r\nHowever, I have added to .User. So the detection of path existence\r\nfailed. And it ends up adding the path again and again\r\n\r\nFix https://github.com/dotnet/cli/issues/8247\r\n\r\nwhy no tests: this is a place hard to test, since it depends on a Windows API. To test it, I would need to play around CI's env:PATH, which is the problem in the beginning. \r\n"},{"Id":"6993494863","Type":"IssuesEvent","CreatedAt":"2017-12-15T11:35:16","Actor":"muralidharand","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8256","RelatedDescription":"Opened issue \"Developer guide link redirects to 404 error\" (#8256) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nNavigate to https://github.com/dotnet/cli/blob/master/Documentation/general/intro-to-cli.md#guidance-on-how-to-write-a-command link and click **developer guide** link in the _Guidance on how to write a command_ section.\r\n\r\n![image](https://user-images.githubusercontent.com/2254197/34040490-ed777b4a-e1b9-11e7-8ce4-f06e2cdd265a.png)\r\n\r\n\r\n## Expected  behavior\r\nValid document/help should be displayed.\r\n\r\n## Actual behavior\r\nGetting 404 page.\r\n![image](https://user-images.githubusercontent.com/2254197/34040502-05875a5c-e1ba-11e7-9cb0-b85b0e375d2f.png)\r\n\r\n\r\n## Environment data\r\nN/A\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6992644342","Type":"PullRequestEvent","CreatedAt":"2017-12-15T08:00:42","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8255","RelatedDescription":"Opened pull request \"Merge release/2.1 to master\" (#8255) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20171215-080041\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20171215-080041 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6992644251","Type":"PullRequestEvent","CreatedAt":"2017-12-15T08:00:41","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8254","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to dev/release/2.0\" (#8254) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into dev/release/2.0.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-dev/release/2.0-20171215-080040\ngit reset --hard upstream/dev/release/2.0\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-dev/release/2.0-20171215-080040 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6992644180","Type":"PullRequestEvent","CreatedAt":"2017-12-15T08:00:39","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8253","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#8253) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20171215-080038\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20171215-080038 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6991681917","Type":"IssuesEvent","CreatedAt":"2017-12-15T01:27:14","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8252","RelatedDescription":"Opened issue \"Update dotnet-install to support installing aspnetcore\" (#8252) at dotnet/cli","RelatedBody":"We should update dotnet-install.ps1/sh to support installing the Microsoft.AspNetCore.All shared runtime. \r\n\r\nPossible usage syntax:\r\n\r\n**Option 1** \r\nOption with value: `-Runtime <name>`\r\n```\r\ndotnet-install.ps1 -Runtime dotnet\r\ndotnet-install.ps1 -Runtime aspnetcore\r\n\r\ndotnet-install.sh --runtime dotnet\r\ndotnet-install.sh --runtime aspnetcore\r\n```\r\nFor compatibility, `--shared-runtime` could just become sugar for `--runtime dotnet`\r\n\r\n**Option 2** \r\nNew switch: `-AspNetCoreRuntime`\r\n```\r\ndotnet-install.ps1 -AspNetCoreRuntime\r\ndotnet-install.sh --aspnetcore-runtime\r\n```\r\n\r\nInvalid usage: mixing -SharedRuntime and -AspNetCoreRuntime. This would be an error.\r\n\r\n@johnbeisner @livarcocc - what would be your usage preference? Is there another syntax that might be better?\r\n\r\ncc @JunTaoLuo "},{"Id":"6991579725","Type":"IssuesEvent","CreatedAt":"2017-12-15T00:48:26","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8250","RelatedDescription":"Closed issue \"Run build.sh on branch `v2.1.3` doesn't work on Linux\" (#8250) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n```\r\ndocker run  -it microsoft/dotnet bash\r\n\r\ngit clone https://github.com/dotnet/cli\r\ncd cli/\r\ngit checkout v2.1.3\r\nexport DropSuffix=true\r\n./build.sh /t:Compile\r\n```\r\n\r\n## Expected  behavior\r\nA built binary\r\n\r\n## Actual behavior\r\nReceives a 404 while downloading dotnet sdk, and does not recover. (Does not fallback to a new url)\r\n\r\n```\r\n\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/1.0.0-preview2-1-003177/dotnet-sdk-1.0.0-preview2-1-003177-linux-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/1.0.0-preview2-1-003177/dotnet-sdk-1.0.0-preview2-1-003177-linux-x64.tar.gz\r\n\r\ngzip: stdin: unexpected end of file\r\ntar: Child returned status 1\r\ntar: Error is not recoverable: exiting now\r\nroot@71cb5e91573c:/cli# \r\n```\r\n\r\n## Environment data\r\nVersion of docker image: aeb50eb9b533\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.3)\r\n\r\nProduct Information:\r\n Version:            2.1.3\r\n Commit SHA-1 hash:  a0ca411ca5\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.3/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.4\r\n  Build    : 7f262f453d8c8479b9af91d34c013b3aa05bc1ff\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6996389704","Type":"IssuesEvent","CreatedAt":"2017-12-16T00:15:25","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/505","RelatedDescription":"Closed issue \"Lots of conflicts when a project references both netstandard1.6 and netstandard2.0 projects\" (#505) at dotnet/standard","RelatedBody":"We have a classic WebApi .NET Framework project that references projects that is either netstandard1.6 and netstandard2.0.\r\n\r\nSome of our core projects uses EF Core 2.0 (which uses netstandard 2.0), while the Microsoft.AspNet.OData library references netstandard1.6. But this genereates lots of conflicts warnings on assemblies within these standards when building like these (there are more warnings than these):\r\n\r\n```\r\n1>          Encountered conflict between 'Reference:C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.0\\build\\netstandard2.0\\\\ref\\System.AppContext.dll' and 'Reference:C:\\Users\\<user>\\.nuget\\packages\\system.appcontext\\4.1.0\\ref\\netstandard1.6\\System.AppContext.dll'.  Choosing 'Reference:C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.0\\build\\netstandard2.0\\\\ref\\System.AppContext.dll' because AssemblyVersion '4.1.2.0' is greater than '4.1.0.0'.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\microsoft.win32.registry\\4.0.0\\runtimes\\unix\\lib\\netstandard1.3\\Microsoft.Win32.Registry.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\microsoft.win32.registry\\4.0.0\\runtimes\\win\\lib\\netstandard1.3\\Microsoft.Win32.Registry.dll'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.fedora.23-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\fedora.23-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.fedora.24-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\fedora.24-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.opensuse.13.2-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\opensuse.13.2-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.opensuse.42.1-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\opensuse.42.1-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.rhel.7-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\rhel.7-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.14.04-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.14.04-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.16.04-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.16.04-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.16.10-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.16.10-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\linux\\lib\\netstandard1.4\\System.Diagnostics.Process.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\osx\\lib\\netstandard1.4\\System.Diagnostics.Process.dll'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\linux\\lib\\netstandard1.4\\System.Diagnostics.Process.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\win\\lib\\netstandard1.4\\System.Diagnostics.Process.dll'.  Could not determine winner due to equal file and assembly versions.\r\n\r\n```\r\n\r\nWhat impact does these have? \r\n\r\nI thought that the idea with these standards was that they should be backward compatible? There shouldn't be any warnings for this at all. \r\n\r\nI find the whole standard thing very non-standard compatible, this is one of the problems I have mixing projects that uses different standards. So it is quite frustrating now."},{"Id":"6996373876","Type":"IssuesEvent","CreatedAt":"2017-12-16T00:08:09","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/607","RelatedDescription":"Closed issue \"DataRow does not contains a defination for Fields\" (#607) at dotnet/standard","RelatedBody":"I am using Dot Net Standard 2.0 and I am trying to get the code below but showing error Does not contain definition for Fields.\r\n\r\n     foreach (DataRow dr in dt.Rows)\r\n                {\r\n                   int i= dr.Field<Int32>(\"Id\");\r\n                }\r\n\r\nthen what to use for similar kind of requirement?\r\n"},{"Id":"6996312774","Type":"IssuesEvent","CreatedAt":"2017-12-15T23:40:59","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/591","RelatedDescription":"Closed issue \".NET Standard 2 Library missing assembly error\" (#591) at dotnet/standard","RelatedBody":"I'm currently working on migrating a PCL to a .NET Standard 2.0 Library. After I have readded all NuGet dependencies I get the following error:\r\n`The type 'IReflectableType' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Reflection, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nThe strange part about it is that i get this error on exactly four lines in the project. If I comment these lines out, the errors are gone and compilation is successful. Is there any fix for this problem?"},{"Id":"6995509985","Type":"IssuesEvent","CreatedAt":"2017-12-15T19:36:45","Actor":"aajmot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/607","RelatedDescription":"Opened issue \"DataRow does not contains a defination for Fields\" (#607) at dotnet/standard","RelatedBody":"I am using Dot Net Standard 2.0 and I am trying to get the code below but showing error Does not contain definition for Fields.\r\n\r\n     foreach (DataRow dr in dt.Rows)\r\n                {\r\n                   int i= dr.Field<Int32>(\"Id\");\r\n                }\r\n\r\nthen what to use for similar kind of requirement?\r\n"},{"Id":"6992027615","Type":"IssuesEvent","CreatedAt":"2017-12-15T03:46:39","Actor":"TylerBrinkley","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/606","RelatedDescription":"Closed issue \"NetStandard.Library Multi-Targeting Question\" (#606) at dotnet/standard","RelatedBody":"What is the recommended guidance for the NETStandard.Library version to target for libraries that multi-target .NET Standard 1.x and 2.x?\r\n\r\nIn my Enums.NET library I've set the implicit package version to 2.0.0 using `<NetStandardImplicitPackageVersion>2.0.0</NetStandardImplicitPackageVersion>` but now users are receiving package downgrade errors when targeting 1.x and pulling in Enums.NET. See [here](https://github.com/TylerBrinkley/Enums.NET/issues/18).\r\n\r\nThis problem is not unique to my library either as Json.NET also has this issue mentioned [here](https://github.com/JamesNK/Newtonsoft.Json/issues/1526)."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6998251317","Type":"PullRequestEvent","CreatedAt":"2017-12-17T01:37:22","Actor":"fiigii","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25965","RelatedDescription":"Opened pull request \"Fix method names of hardware intrinsic APIs\" (#25965) at dotnet/corefx","RelatedBody":"Matching the CoreCLR change https://github.com/dotnet/coreclr/pull/15471\r\n\r\ncc @jkotas @eerhardt @tannergooding "},{"Id":"6998205231","Type":"PullRequestEvent","CreatedAt":"2017-12-17T00:47:18","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25964","RelatedDescription":"Opened pull request \"Remove DangerousTryGetArray and hide DangerousGetPinnableReference\" (#25964) at dotnet/corefx","RelatedBody":"Fixes:\r\nhttps://github.com/dotnet/corefx/issues/25412\r\nhttps://github.com/dotnet/corefx/issues/25615\r\n\r\n**Depends on the following PR (hence blocked):**\r\n\r\nFollowing the staging plan from here: https://github.com/dotnet/corefx/issues/23881#issuecomment-343767740\r\n\r\n- [x] Add MemoryExtensions.GetReference/TryGetArray\r\n- [x] Convert all uses of DangerousGetPinnableReference/DangerousTryGetArray in coreclr, corefx, corert, corefxlab, aspnet, ... to MemoryExtensions.GetReference\r\n- [ ] Change DangerousGetPinnableReference to whatever we like to make it fit the pinning pattern and remove DangerousTryGetArray.\r\n\r\nDoing it this way will avoid the need for complex staging or things being on the floor for extensive periods of time.\r\n\r\ncc @jkotas, @stephentoub, @KrzysztofCwalina, @davidfowl"},{"Id":"6998196240","Type":"PullRequestEvent","CreatedAt":"2017-12-17T00:37:54","Actor":"kassemsandarusi","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25963","RelatedDescription":"Opened pull request \"TypeDefinition.IsNested Property\" (#25963) at dotnet/corefx","RelatedBody":"Closes #5377.\r\n\r\nFirst time PR, so here are some of the questions I wasn't sure of:\r\n\r\n* Property placement with struct definition for ref/ and src/.\r\n* Library version changes.\r\n* Need for tests for such a simple API addition. I wrote a few and put in a separate commit for easy reset.\r\n\r\nI tried reading contributing docs and applying anything relevant, as well as keeping codestyle consistent in the file."},{"Id":"6997863318","Type":"IssuesEvent","CreatedAt":"2017-12-16T19:48:18","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25962","RelatedDescription":"Opened issue \"Process pipes aren't garbage collected\" (#25962) at dotnet/corefx","RelatedBody":"@myrup commented on [Sat Dec 16 2017](https://github.com/dotnet/core/issues/1166)\n\n# Process pipes aren't garbage collected\r\n# General\r\nWhen using redirection for StandardOutput (and possibly StandardError, StandardInput as well) the pipes aren't garbage collected when the Process reference is collected.\r\n\r\nThe following silly piece of code lives (probably) forever in mono, but crashes in dotnet after 217 iterations on my machine:\r\n```\r\npublic static void Main() {\r\n            for (int i = 0; i < int.MaxValue; i++) {\r\n                Process.Start(new ProcessStartInfo {\r\n                    FileName = \"ls\",\r\n                    UseShellExecute = false,\r\n                    RedirectStandardOutput = true\r\n                });\r\n                Console.WriteLine(i);\r\n            }\r\n}\r\n```\r\nAdding a ```.StandardOutput.Close()``` extends lifetime 5 fold, indicating other things are not being collected.\r\n\r\n```.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.2/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d```\r\n\n\n"},{"Id":"6997846331","Type":"IssuesEvent","CreatedAt":"2017-12-16T19:34:44","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24712","RelatedDescription":"Reopened issue \"Test failure: System.Net.Http.Functional.Tests.ResponseStreamTest / ReadAsStreamAsync_InvalidServerResponse_ThrowsIOException\" (#24712) at dotnet/corefx","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `System.Net.Http.Functional.Tests.ResponseStreamTest/ReadAsStreamAsync_InvalidServerResponse_ThrowsIOException(transferType: ContentLength, transferError: ContentLengthTooLarge)` has failed.\n\nAssert.Throws() Failure\\r\n    Expected: typeof(System.IO.IOException)\\r\n    Actual:   typeof(System.Net.Http.HttpRequestException): An error occurred while sending the request.\n\n        Stack Trace:\n\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n       at System.Net.Http.HttpClient.<FinishSendAsyncUnbuffered>d__59.MoveNext()\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n       at System.Net.Http.Functional.Tests.ResponseStreamTest.<ReadAsStreamHelper>d__9.MoveNext()\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\nBuild : Master - 20171018.01 (Core Tests)\nFailing configurations:\n- Windows.7.Amd64-x86\n  - Release\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20171018.01/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.ResponseStreamTest~2FReadAsStreamAsync_InvalidServerResponse_ThrowsIOException(transferType:%20ContentLength,%20transferError:%20ContentLengthTooLarge)"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6998219397","Type":"IssuesEvent","CreatedAt":"2017-12-17T01:02:03","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22923","RelatedDescription":"Closed issue \"Symbol from xmldoc/cref is not constructed\" (#22923) at dotnet/roslyn","RelatedBody":"**Version Used**: VS Community 2017 15.4.1\r\n\r\n**Steps to Reproduce**:\r\n\r\nLet's say I have this code:\r\n```csharp\r\npublic class FooException<T> : Exception\r\n{\r\n    /// <exception cref=\"FooException{T}\"></exception>\r\n    private void Foo()\r\n    {\r\n        throw new FooException<T>();\r\n    }\r\n}\r\n```\r\n\r\nand I want to check symbols for equality:\r\n```csharp\r\nprivate static void Foo()\r\n{\r\n    SyntaxTree tree = CSharpSyntaxTree.ParseText(@\"\r\n        public class FooException<T> : Exception\r\n        {\r\n            /// <exception cref=\"\"FooException{T}\"\"></exception>\r\n            private void Foo()\r\n            {\r\n                throw new FooException<T>();\r\n            }\r\n\r\n        }\");\r\n\r\n    PortableExecutableReference reference = MetadataReference.CreateFromFile(typeof(object).Assembly.Location);\r\n    CSharpCompilation compilation = CSharpCompilation.Create(\"Compilation\", new SyntaxTree[] { tree }, new MetadataReference[] { reference });\r\n    SemanticModel semanticModel = compilation.GetSemanticModel(tree);\r\n    SyntaxNode root = tree.GetRoot();\r\n\r\n    CrefSyntax cref = root.DescendantNodes(descendIntoTrivia: true).OfType<CrefSyntax>().First();\r\n    ObjectCreationExpressionSyntax objectCreation = root.DescendantNodes().OfType<ObjectCreationExpressionSyntax>().First();\r\n\r\n    ITypeSymbol a = semanticModel.GetTypeSymbol(objectCreation);\r\n    ISymbol b = semanticModel.GetSymbol(cref);\r\n\r\n    Debug.WriteLine(a == b);\r\n    Debug.WriteLine(a == b.OriginalDefinition);\r\n    Debug.WriteLine(b == b.OriginalDefinition);\r\n    Debug.WriteLine(b.OriginalDefinition == b.OriginalDefinition.OriginalDefinition);\r\n}\r\n```\r\n\r\n**Output**: \r\n```\r\nFalse\r\nTrue\r\nFalse\r\nTrue\r\n```\r\n\r\n**Questions**:\r\n* Why `a == b` returns False?\r\n* Why `b == b.OriginalDefinition` returns False?\r\n* If this is correct behavior how can I compare these symbols for equality?\r\n"},{"Id":"6997283626","Type":"IssuesEvent","CreatedAt":"2017-12-16T12:51:06","Actor":"MkazemAkhgary","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23822","RelatedDescription":"Opened issue \"intellisense improvement: replace if-else with ternary operator\" (#23822) at dotnet/roslyn","RelatedBody":"like resharper, it would be nice to have suggestion to replace simple if-else assignments with ternary operators. \r\n\r\n    if(cond) x = i;\r\n    else x = j;\r\n\r\nwould be replaced by \r\n\r\n    x = cond ? i : j;\r\n\r\nits a cheap improvement for cheap but quite nice income."},{"Id":"6996907888","Type":"IssuesEvent","CreatedAt":"2017-12-16T07:27:41","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23670","RelatedDescription":"Closed issue \"Instance fields of value types should be allowed to be used inside local functions\" (#23670) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 15.5.0\r\n\r\n**Steps to Reproduce**:\r\nFollowing code:\r\n```C#\r\nstruct MyStruct\r\n{\r\n    private int value;\r\n\r\n    private void Foo()\r\n    {\r\n        FooLocal();\r\n\r\n        void FooLocal()\r\n        {\r\n            Console.WriteLine(value);\r\n        }\r\n    }\r\n}\r\n```\r\ndoes not compile with error:\r\nCS1673\tAnonymous methods, lambda expressions, and query expressions inside structs cannot access instance members of 'this'. Consider copying 'this' to a local variable outside the anonymous method, lambda expression or query expression and using the local instead.\r\n\r\nLocal functions can be (I believe) compiled as instance methods of containing type (same as for reference types - see also #23669) and therefore they can access instance fields.\r\n\r\n**Expected Behavior**:\r\nLocal functions in value types can access instance fields.\r\n\r\n**Actual Behavior**:\r\nLocal functions in value types cannot access instance fields."},{"Id":"6996775524","Type":"PullRequestEvent","CreatedAt":"2017-12-16T05:12:37","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23815","RelatedDescription":"Merged pull request \"Update Language Feature Status for C# 7.2 fixes\" (#23815) at dotnet/roslyn","RelatedBody":"Doc-only change, for @BillWagner to see the status of features to document.\r\n\r\nFYI @jaredpar "},{"Id":"6996703238","Type":"PullRequestEvent","CreatedAt":"2017-12-16T04:00:50","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23732","RelatedDescription":"Merged pull request \"Merge features/vs-for-mac-packages into master-vs-deps\" (#23732) at dotnet/roslyn","RelatedBody":"This merges the entirety of features/vs-for-mac-packages (which includes the contents of #23731) into vs-for-mac-packages.\r\n\r\nThe individual changes in here were largely reviewed, this is just to have the PR ready when we've completed validation."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6997746627","Type":"PullRequestEvent","CreatedAt":"2017-12-16T18:17:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5128","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5128) at dotnet/corert","RelatedBody":""},{"Id":"6997746267","Type":"PullRequestEvent","CreatedAt":"2017-12-16T18:16:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5128","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5128) at dotnet/corert","RelatedBody":""},{"Id":"6996912944","Type":"PullRequestEvent","CreatedAt":"2017-12-16T07:32:43","Actor":"ahsonkhan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5127","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5127) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6996857687","Type":"PullRequestEvent","CreatedAt":"2017-12-16T06:38:29","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5127","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5127) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6992644494","Type":"PullRequestEvent","CreatedAt":"2017-12-15T08:00:46","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1822","RelatedDescription":"Opened pull request \"Merge release/2.1 to master\" (#1822) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20171215-080045\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20171215-080045 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6992199981","Type":"PullRequestEvent","CreatedAt":"2017-12-15T05:07:19","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1821","RelatedDescription":"Opened pull request \" Suppress assets messages for Clean target.\" (#1821) at dotnet/sdk","RelatedBody":"Suppress assets messages for Clean target.\r\n\r\nThis commit ensures that messages from `project.assets.json` aren't logged for\r\nthe `Clean` target.  If a project is cleaned that has diagnostic messages\r\nstored from a previous restore operation, the Clean target would previously\r\nlog the messages via the `ReportAssetsLogMessages` target.\r\n\r\nSince a clean operation does not perform a restore, this is confusing to users.\r\nThe fix is to set the `EmitAssetsLogMessages` property to `false` for the\r\n`Clean` target.\r\n\r\nFixes dotnet/cli#8027."},{"Id":"6991568421","Type":"PullRequestEvent","CreatedAt":"2017-12-15T00:44:06","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1807","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.6.0-preview2-4706 into sdk\" (#1807) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.6.0-preview2-4706 into sdk master branch"},{"Id":"6991014302","Type":"PullRequestEvent","CreatedAt":"2017-12-14T21:54:54","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1820","RelatedDescription":"Opened pull request \"Fix dogfood script\" (#1820) at dotnet/sdk","RelatedBody":"There were two issues: \r\n\r\n1. The CustomAfterMicrosoftCommonTargets is no longer needed and causes duplicate import warning/errors.\r\n2. MicrosoftNETBuildExtensionsTargets was not being set to the correct file (it should not be the variant with -ver)."},{"Id":"6990915566","Type":"PullRequestEvent","CreatedAt":"2017-12-14T21:31:36","Actor":"joperezr","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1819","RelatedDescription":"Opened pull request \"Fixing the generation of binding redirects when targeting 4.7.1\" (#1819) at dotnet/sdk","RelatedBody":"cc: @livarcocc @weshaggard @AlexGhiondea\r\n\r\nInserting the new support package to the SDK that will fix the binding redirects for 4.7.1."},{"Id":"6990328796","Type":"PullRequestEvent","CreatedAt":"2017-12-14T19:15:46","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1818","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/2.1\" (#1818) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20171214-080045\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20171214-080045 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6988437962","Type":"IssuesEvent","CreatedAt":"2017-12-14T12:57:37","Actor":"luigiberrettini","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1555","RelatedDescription":"Closed issue \"AssemblyInfo generation results in less NuGet package info\" (#1555) at dotnet/sdk","RelatedBody":"With the help of [GenerateAssemblyInfo](https://github.com/dotnet/sdk/blob/979eed136b786b6e2d77f567eb5a368952982740/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.GenerateAssemblyInfo.targets) assembly information is generated starting from tags in the project file.\r\n\r\nUnfortunately, when using the `MsBuild pack` target, the generated NuGet package contains less information  with respect to the one created using `NuGet pack` and a `.nuspec` file:\r\n1. in the **Package metadata** section, `Summary` is not supported by the project file and missing\r\n2. in the **Package metadata** section, `Owners` is not supported by the project file and is set to the value of `Authors`\r\n3. in the **Package contents\\assembly information** section, only `Full Name` and `Strong Name` are present, whereas all `Assembly*` attributes are missing\r\n\r\nIt would be great if you could clarify if when creating NuGet packages with VS 2017+ and .NET core 2+:\r\n - `.nuspec` files are not to be used because they are going to be the deprecated way\r\n - `dotnet pack` or `msbuild /t:pack` should be used and the above (missing) information will be restored in future versions or will never be supported\r\n\r\nThanks!"},{"Id":"6987150708","Type":"PullRequestEvent","CreatedAt":"2017-12-14T08:00:46","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1818","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#1818) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20171214-080045\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20171214-080045 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6985966222","Type":"PullRequestEvent","CreatedAt":"2017-12-14T00:32:43","Actor":"eerhardt","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1805","RelatedDescription":"Merged pull request \"ResolvePackageFileConflicts performance enhancements\" (#1805) at dotnet/sdk","RelatedBody":"Speed up ResolvePackageFileConflicts by avoiding reading files for their AssemblyVersion.\r\nAllow for packages to override other packages by default.\r\n\r\nHere are my timings before and after my changes on my win-x64 machine. Each scenario was fully built, and then a single \"warm up\" command, followed by 3 captured executions of \r\n```\r\nC:\\temp\\dotnet\\dotnet\\dotnet.exe C:\\temp\\dotnet\\dotnet\\sdk\\2.2.0-preview1-007739\\MSBuild.dll /v:m /m /clp:PerformanceSummary\r\n```\r\n\r\n### Scenario 1 https://github.com/OrchardCMS/OrchardCore\r\n\r\n| Without changes | With changes |\r\n|--------------------|--------------------|\r\n| 2667 ms  ResolvePackageFileConflicts 129 calls | 609 ms  ResolvePackageFileConflicts 129 calls |\r\n| 2630 ms  ResolvePackageFileConflicts 129 calls | 585 ms  ResolvePackageFileConflicts 129 calls |\r\n| 2418 ms  ResolvePackageFileConflicts 129 calls | 598 ms  ResolvePackageFileConflicts 129 calls |\r\n\r\n### Scenario 2 https://github.com/mikeharder/dotnet-cli-perf/tree/8d7493b26fd3a1b3d1ba3fb85fc7e60b0c19618e/scenarios/classlib/core\r\n\r\n| Without changes | With changes |\r\n|--------------------|--------------------|\r\n| 45 ms  ResolvePackageFileConflicts 2 calls | 29 ms  ResolvePackageFileConflicts 2 calls |\r\n| 46 ms  ResolvePackageFileConflicts 2 calls | 29 ms  ResolvePackageFileConflicts 2 calls |\r\n| 45 ms  ResolvePackageFileConflicts 2 calls | 31 ms  ResolvePackageFileConflicts 2 calls |\r\n\r\n### Scenario 3 https://github.com/mikeharder/dotnet-cli-perf/tree/8d7493b26fd3a1b3d1ba3fb85fc7e60b0c19618e/scenarios/web/core\r\n\r\n| Without changes | With changes |\r\n|--------------------|--------------------|\r\n| 78 ms  ResolvePackageFileConflicts 1 calls | 21 ms  ResolvePackageFileConflicts 1 calls |\r\n| 74 ms  ResolvePackageFileConflicts 1 calls | 21 ms  ResolvePackageFileConflicts 1 calls |\r\n| 56 ms  ResolvePackageFileConflicts 1 calls | 21 ms  ResolvePackageFileConflicts 1 calls |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"942039735144452097","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/UjBOoFqFp5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":13,"RawContent":null},{"Id":"941295101212549121","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/qJHWFDaUGf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":14,"RawContent":null},{"Id":"935927507911524352","CreatedAt":"2017-11-29T17:44:41+00:00","UserScreenname":"dotnet","Text":"Who doesn’t? Purple. All. The. Things. https://t.co/65KzPWuvbK","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":30,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2017-12-17T05:30:22.5295365Z","RunDurationInMilliseconds":7696}