{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11382066649","Type":"PullRequestEvent","CreatedAt":"2020-01-29T00:23:34","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7826","RelatedDescription":"Opened pull request \"[ReleasePrep] RI dev to master\" (#7826) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11381008683","Type":"IssuesEvent","CreatedAt":"2020-01-28T21:46:53","Actor":"jonsequitur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7825","RelatedDescription":"Opened issue \"Package type is not apparent in search results\" (#7825) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nWhen searching for packages, it's not discernible from the search results what types of packages I've found. In this screenshot, for example, the first result is a library while the second is a tool:\r\n\r\n![image](https://user-images.githubusercontent.com/547415/73307732-a7f55700-41d3-11ea-9046-c91c29c3263b.png)\r\n\r\n### Describe the solution you'd like\r\n\r\nIdeally, the different package types would be visually distinct from one another. \r\n"},{"Id":"11379925185","Type":"IssuesEvent","CreatedAt":"2020-01-28T19:29:49","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7764","RelatedDescription":"Closed issue \"A/B test prefix matching on nuget.org\" (#7764) at NuGet/NuGetGallery","RelatedBody":"⚠️ Do not copy this issue! This used a special A/B test process. For correct instructions, follow this process in the OneNote: [Rebuild the Azure Search Index](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FRebuild%20the%20Azure%20Search%20Index%7CC705999F-85D9-4A93-8CFB-161C393C56FE%2F%29).\r\n\r\n1. Determine the live instance of the Azure Search jobs\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. ~~Determine the new instance to be used~~\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. Update the job and service configuration\r\n    - [ ] ~~NuGetDeployment PR:~~\r\n    - [ ] ~~Infrastructure build:~~\r\n    - [ ] ~~NuGet.Jobs Config build:~~\r\n    - [x] AzureSearchService build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3385062\r\n1. ~~Deploy Azure Search infrastructure to provision the resources and secrets~~\r\n1. ~~Deploy Db2AzureSearch to initialize the new indexes~~\r\n1. ~~Deploy alternative instances of the Azure Search jobs~~\r\n1. ~~Monitor the new Catalog2AzureSearch cursors~~\r\n1. ~~Deploy V3 monitoring to start monitoring the new indexes. If you are not rebuilding for an A/B test all this really will do is add an additional cursor to wait on.~~\r\n1. Deploy AzureSearchService\r\n    - ⚠️ The Azure Search Service must be deployed after all other jobs.\r\n    - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=552548\r\n    - DEV\r\n       - [x] USNC\r\n       - [x] USSC\r\n       - [x] EA\r\n       - [x] SEA\r\n    - INT\r\n       - [x] USNC\r\n       - [x] USSC\r\n    - PROD\r\n       - [ ] USNC\r\n       - [ ] USSC\r\n       - [ ] EA\r\n       - [ ] SEA\r\n1. ~~Change the default Instance name for job release pipelines~~\r\n1. Wait a week.\r\n1. ~~Clean up~~\r\n   - ~~Stop monitoring the old cursors~~\r\n   - ~~Stop monitoring the old indexes by deploying V3 monitoring~~\r\n   - ~~Stop old job instances~~\r\n   - ~~Update the [Secret Rotation excel](https://microsoft.sharepoint.com/teams/NuGet/Team/Engineering/NuGet_Secret_Rototation_Status.xlsx?web=1) to make sure new secrets are there and old secrets are gone~~"},{"Id":"11379360522","Type":"IssuesEvent","CreatedAt":"2020-01-28T18:20:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7824","RelatedDescription":"Opened issue \"Surface Microsoft Application Inspector information on nuget.org\" (#7824) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nMicrosoft has released a tool called [Microsoft Application Inspector](https://github.com/Microsoft/ApplicationInspector) to perform static analysis of source code to identify what categories of APIs are used. For example: networking APIs, file access, cryptography.\r\n\r\nNuGet.org could use this tool to automatically surface such information about packages in the web UI. \r\n\r\nThe output of the tool looks like this:\r\n![image](https://user-images.githubusercontent.com/94054/73292749-74a4cf00-41b7-11ea-97c6-4ec56a3cb491.png)\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nFor every package uploaded to nuget.org, run Microsoft Application Inspector on the source code (potentially gathered via decompilation or via the GitHub repository URL) and show the report _per version_ on the display packages page.\r\n\r\nAs a stretch goal, allow comparison of two versions so you can see leveraged APIs getting added or removed.\r\n\r\nNuGet client could also show this information for an arbitrary package upgrade (and transitive packages pulled in) but this is harder since the analysis process may be slow.\r\n\r\n### Additional context\r\n\r\nThanks to members of the Hacker News community for connecting the dots:\r\nhttps://news.ycombinator.com/item?id=22170705\r\nhttps://news.ycombinator.com/item?id=22171263"},{"Id":"11377246862","Type":"IssuesEvent","CreatedAt":"2020-01-28T14:38:43","Actor":"devlead","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7823","RelatedDescription":"Opened issue \"NuGet.org package statistics lagging\" (#7823) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nNuGet package download statistics seem to lag a bit.\r\n\r\n### To Reproduce\r\n\r\nJust happen to observe a package before ( https://www.nuget.org/packages/Cake.Tool/ ) an event and it's been at 944,870 downloads for little over 3 days, normally it increases at least a couple thousand per day.\r\n\r\n### Expected behavior\r\nNumber to go up over time.\r\n\r\n### Screenshots\r\nLooking at details it does seem indicate numbers are since last Saturday (Jan 25th).\r\n![image](https://user-images.githubusercontent.com/1647294/73272603-efcfaa80-41e2-11ea-9a52-056db0d530ac.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1647294/73273378-2954e580-41e4-11ea-90dc-5d4e47358364.png)\r\n\r\n"},{"Id":"11372272146","Type":"PullRequestEvent","CreatedAt":"2020-01-28T01:14:05","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7813","RelatedDescription":"Merged pull request \"Update owin 3.x->4.x\" (#7813) at NuGet/NuGetGallery","RelatedBody":"Updating to accommodate upcoming chrome change for SameSite cookie."},{"Id":"11371593119","Type":"IssuesEvent","CreatedAt":"2020-01-27T23:01:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7822","RelatedDescription":"Opened issue \"Delete legacy search code\" (#7822) at NuGet/NuGetGallery","RelatedBody":"- [ ] Legacy search service\r\n- [ ] Db2Lucene\r\n- [ ] Catalog2Lucene\r\n- [ ] Configuration\r\n- [ ] Build definitions"},{"Id":"11371479963","Type":"PullRequestEvent","CreatedAt":"2020-01-27T22:43:06","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7818","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.01.21]RI dev to master\" (#7818) at NuGet/NuGetGallery","RelatedBody":"Pulling in display package page performance improvements."},{"Id":"11359155518","Type":"IssuesEvent","CreatedAt":"2020-01-25T19:22:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7810","RelatedDescription":"Closed issue \"[2020-01-16] Deployment\" (#7810) at NuGet/NuGetGallery","RelatedBody":"## NuGetGallery\r\n\r\n- [x] Merge dev to master\r\n  - https://github.com/NuGet/NuGetGallery/pull/7808\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n## CopyAzureContainer\r\n\r\nThis is a config only change. The config is already merged to NuGetDeployment:\r\nhttps://nuget.visualstudio.com/NuGetMicrosoft/_git/NuGetDeployment/pullrequest/1277\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=556399\r\n\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD"},{"Id":"11354757947","Type":"IssuesEvent","CreatedAt":"2020-01-24T18:23:22","Actor":"xavierdecoster","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7773","RelatedDescription":"Closed issue \"dev branch of NuGetGallery is not emitting request or dependency telemetry in AI\" (#7773) at NuGet/NuGetGallery","RelatedBody":"customMetrics\r\n| where timestamp > ago(7d)\r\n| extend cloudDeploymentId = tostring(customDimensions.CloudDeploymentId)\r\n| where isnotempty(cloudDeploymentId)\r\n| summarize count() by bin(timestamp, 3h), cloudDeploymentId\r\n| render columnchart \r\n\r\n## requests\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948780-1067ea80-2011-11ea-98e5-5f7210427723.png)\r\n\r\n## dependencies\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948796-1b227f80-2011-11ea-8f01-59d2668cb9a2.png)\r\n\r\n## traces\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948811-207fca00-2011-11ea-8a5e-694240189135.png)\r\n\r\n## customMetrics\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948822-25447e00-2011-11ea-9179-45bb19bd21e6.png)\r\n\r\n"},{"Id":"11354745329","Type":"IssuesEvent","CreatedAt":"2020-01-24T18:21:36","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7821","RelatedDescription":"Opened issue \"[2020-01-27] Deployment\" (#7821) at NuGet/NuGetGallery","RelatedBody":"# NuGetGallery\r\n\r\n* [ ] Merge dev to master https://github.com/NuGet/NuGetGallery/pull/7818\r\n* [ ] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"11350075759","Type":"IssuesEvent","CreatedAt":"2020-01-24T07:39:36","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7764","RelatedDescription":"Reopened issue \"A/B test prefix matching on nuget.org\" (#7764) at NuGet/NuGetGallery","RelatedBody":"⚠️ Do not copy this issue! This used a special A/B test process. For correct instructions, follow this process in the OneNote: [Rebuild the Azure Search Index](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FRebuild%20the%20Azure%20Search%20Index%7CC705999F-85D9-4A93-8CFB-161C393C56FE%2F%29).\r\n\r\n1. Determine the live instance of the Azure Search jobs\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. ~~Determine the new instance to be used~~\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. Update the job and service configuration\r\n    - [ ] ~~NuGetDeployment PR:~~\r\n    - [ ] ~~Infrastructure build:~~\r\n    - [ ] ~~NuGet.Jobs Config build:~~\r\n    - [x] AzureSearchService build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3385062\r\n1. ~~Deploy Azure Search infrastructure to provision the resources and secrets~~\r\n1. ~~Deploy Db2AzureSearch to initialize the new indexes~~\r\n1. ~~Deploy alternative instances of the Azure Search jobs~~\r\n1. ~~Monitor the new Catalog2AzureSearch cursors~~\r\n1. ~~Deploy V3 monitoring to start monitoring the new indexes. If you are not rebuilding for an A/B test all this really will do is add an additional cursor to wait on.~~\r\n1. Deploy AzureSearchService\r\n    - ⚠️ The Azure Search Service must be deployed after all other jobs.\r\n    - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=552548\r\n    - DEV\r\n       - [x] USNC\r\n       - [x] USSC\r\n       - [x] EA\r\n       - [x] SEA\r\n    - INT\r\n       - [x] USNC\r\n       - [x] USSC\r\n    - PROD\r\n       - [ ] USNC\r\n       - [ ] USSC\r\n       - [ ] EA\r\n       - [ ] SEA\r\n1. ~~Change the default Instance name for job release pipelines~~\r\n1. Wait a week.\r\n1. ~~Clean up~~\r\n   - ~~Stop monitoring the old cursors~~\r\n   - ~~Stop monitoring the old indexes by deploying V3 monitoring~~\r\n   - ~~Stop old job instances~~\r\n   - ~~Update the [Secret Rotation excel](https://microsoft.sharepoint.com/teams/NuGet/Team/Engineering/NuGet_Secret_Rototation_Status.xlsx?web=1) to make sure new secrets are there and old secrets are gone~~"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11382238181","Type":"IssuesEvent","CreatedAt":"2020-01-29T01:01:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9112","RelatedDescription":"Opened issue \"FireAndForget PM UI startup\" (#9112) at NuGet/Home","RelatedBody":"The menu command builds the PM UI by calling JTF.Run blocking the UI thread. \r\n\r\nThis is unnecessary. \r\nThat can be made async. While that won't fix all issues with the PM UI startup performance, it will make it a bit better simply because now the UI thread is an async flow.\r\n\r\nRelated to [438211](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/438211/)"},{"Id":"11382171703","Type":"IssuesEvent","CreatedAt":"2020-01-29T00:45:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9111","RelatedDescription":"Opened issue \"Stable part numeric floating behaves different from prerelease part numeric floating\" (#9111) at NuGet/Home","RelatedBody":"The prerelease part seems to be treated as a alphanumeric. \r\n\r\nRelated: \r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/1601\r\nhttps://github.com/NuGet/Home/issues/4513\r\n\r\nSpecifically for [1.1.1*](https://nugettoolsdev.azurewebsites.net/5.4.0/find-best-version-match?versionRange=1.1.1*&versions=1.1.9%0D%0A1.1.10%0D%0A1.1.11%0D%0A1.1.20%0D%0A1.2.0) with \r\n\r\n```console\r\n1.1.9\r\n1.1.10\r\n1.1.11\r\n1.1.20\r\n1.2.0\r\n````\r\n\r\n`1.1.20` is selected. \r\n\r\n\r\nFor [1.1.1-beta.1*](https://nugettoolsdev.azurewebsites.net/5.4.0/find-best-version-match?versionRange=1.1.1-beta.1*&versions=1.1.1-beta.9%0D%0A1.1.1-beta.10%0D%0A1.1.1-beta.11%0D%0A1.1.1-beta.20%0D%0A1.2.1-beta.20)\r\n\r\nwith \r\n\r\n```console\r\n1.1.1-beta.9\r\n1.1.1-beta.10\r\n1.1.1-beta.11\r\n1.1.1-beta.20\r\n1.2.1-beta.20\r\n```\r\n\r\n`1.1.1-beta.11` is selected\r\n\r\n\r\nNote that for \r\n\r\n`1.1.1-beta.*`\r\n\r\nwith \r\n\r\n```console\r\n1.1.1-beta.9\r\n1.1.1-beta.10\r\n1.1.1-beta.11\r\n1.1.1-beta.20\r\n1.2.1-beta.20\r\n```\r\n\r\n`1.1.1-beta.20` is selected. \r\n\r\n/cc @joelverhagen "},{"Id":"11381753600","Type":"IssuesEvent","CreatedAt":"2020-01-28T23:22:59","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8868","RelatedDescription":"Closed issue \"VisualStudio ToolBox is not populated from a NuGet package if a project is placed in a solution folder\" (#8868) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n**NuGet product used:** VS UI\r\n\r\n**NuGet version:** 5.4.0.6292\r\n\r\n**VS version:** 16.4\r\n\r\n**OS version:** 10.0.18362.0\r\n\r\n**Worked before?:** No\r\n\r\nVisual Studio doesn’t add toolbox items from a NuGet package if a project is placed into a solution folder. A VS customer created a small sample (WPF, .NET Core3) to demonstrate the issue: https://github.com/pavelovcharov/netcore3_toolbox_solutionfolders.\r\n\r\nThis is a bug in VsPathContextProvider.CreateNuGetProjectAsync. DTE.Solution.Projects doesn't include projects within solution folders. See https://www.wwwlicious.com/envdte-getting-all-projects-html/ for an explanation.\r\n\r\n## Repro steps\r\n\r\n1. git clone git://github.com/pavelovcharov/netcore3_toolbox_solutionfolders.git\r\n2. open and build TestControl.sln. The TestControl.1.0.0.nupkg package will be created\r\n3. open and build TestApp.sln, then open MainWindow.xaml. The TestControl item will be added to VisualStudio Toolbox\r\n4. open and build TestApp.With.Solution.Folders.sln. This solution contains the same project, but it is placed into a solution folder. Open MainWindow.xaml. The TestControl item is not shown in the Toolbox."},{"Id":"11381398364","Type":"IssuesEvent","CreatedAt":"2020-01-28T22:34:58","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9110","RelatedDescription":"Opened issue \"Package Manager UI arch redesign\" (#9110) at NuGet/Home","RelatedBody":"Investigate and estimate a PM UI redesign. "},{"Id":"11381306560","Type":"PullRequestEvent","CreatedAt":"2020-01-28T22:23:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9109","RelatedDescription":"Opened pull request \"Extensibility services doc\" (#9109) at NuGet/Home","RelatedBody":"A separate PR for the already reviewed extensibility services doc. "},{"Id":"11379542315","Type":"IssuesEvent","CreatedAt":"2020-01-28T18:42:40","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9108","RelatedDescription":"Opened issue \"Install-Package provides no means to skip sources\" (#9108) at NuGet/Home","RelatedBody":"When running Install-Package there is no means to skip failed sources like other CLI commands (or is not documented).  Looking for a way to emulate `--ignore-failed-sources` from similar CLI entry points."},{"Id":"11379410064","Type":"IssuesEvent","CreatedAt":"2020-01-28T18:26:22","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9107","RelatedDescription":"Opened issue \"Fix Linux disabled Linux agent\" (#9107) at NuGet/Home","RelatedBody":""},{"Id":"11379373125","Type":"IssuesEvent","CreatedAt":"2020-01-28T18:21:52","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9072","RelatedDescription":"Closed issue \"Icon missing after package install in VS PM UI\" (#9072) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nNuGet version: 39963d7775d6ba22e2e5c1373a7cb027ce9bdaa7\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n0. Specify a NuGet source with a local folder. The packages must have embedded icons. Add it to nuget.config ($APPDATA\\NuGet\\NuGet.Config)\r\n1. Open VS, with any project and open NuGet (Manage NuGet packages...)\r\n2. Install a package with an embedded Icon\r\n3. Go to the Installed Tab\r\n"},{"Id":"11379073189","Type":"IssuesEvent","CreatedAt":"2020-01-28T17:44:53","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9069","RelatedDescription":"Closed issue \"Missing Embedded Icons in VS PM UI after cache expires\" (#9069) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nNuGet version: 39963d7775d6ba22e2e5c1373a7cb027ce9bdaa7\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n0. Specify a NuGet source with a local folder. The packages must have embedded icons. Add it to nuget.config ($APPDATA\\NuGet\\NuGet.Config)\r\n1. Open VS, with any project and open NuGet (Manage NuGet packages...)\r\n2. Leave it open for 20 minutes\r\n3. Scroll the package list up an down\r\n\r\nThere's a possibility that the icons disappear because the PackageArchiveReader (PAR) are closed and, because the PAR instances are lazy loaded and memoized, those are not created anymore."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-29T05:30:45.6780887Z","RunDurationInMilliseconds":1979}