{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":59,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":40,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0","PublishedOn":"2019-09-23T16:00:29+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Announcing .NET Core 3.0\nWe’re excited to announce the release of .NET Core 3.0. It includes many improvements, including adding Windows Forms and WPF, adding new JSON APIs, support for ARM64 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/","RawContent":null},{"Title":"Release Candidate builds of Entity Framework Core 3.0 and Entity Framework 6.3 are now available","PublishedOn":"2019-09-16T21:47:32+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We previously said that preview 9 would be your last chance to test EF Core 3.0 and EF 6.3 before general availability. But it turns out that we made enough improvements to our libraries and across...","Href":"https://devblogs.microsoft.com/dotnet/release-candidate-builds-of-entity-framework-core-3-0-and-entity-framework-6-3-are-now-available/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Release Candidate 1","PublishedOn":"2019-09-16T18:45:09+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.0 Release Candidate 1. Just like with Preview 9, we&#8217;ve focused on polishing .NET Core 3.0 for a final release. We are now getting very, very close. We...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/","RawContent":null},{"Title":"Finalization implementation details","PublishedOn":"2019-09-16T17:43:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Years ago I wrote a document on making finalization scanning concurrent. At the time there was an internal team that was using finalization as a way to resurrect objects and putting them back in their...","Href":"https://devblogs.microsoft.com/dotnet/finalization-implementation-details/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10552065128","Type":"IssuesEvent","CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Opened issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125) at dotnet/announcements","RelatedBody":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n"},{"Id":"10486020433","Type":"IssuesEvent","CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Opened issue \".NET Core `latest` Docker tags updated to 3.0\" (#124) at dotnet/announcements","RelatedBody":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n"},{"Id":"10427072993","Type":"IssuesEvent","CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Opened issue \".NET Core 3.0 RC 1\" (#123) at dotnet/announcements","RelatedBody":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10387173702","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:23:27","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Opened issue \"September 2019 .NET Updates\" (#122) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10387041341","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:04:51","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32971\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.7\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.8, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n"},{"Id":"10348207363","Type":"IssuesEvent","CreatedAt":"2019-09-04T19:14:06","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Opened issue \".NET Core 3.0 Preview 9\" (#120) at dotnet/announcements","RelatedBody":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n[EF Core](https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-9-and-entity-framework-6-3-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10564132431","Type":"PullRequestEvent","CreatedAt":"2019-10-04T23:39:49","Actor":"omajid","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27048","RelatedDescription":"Opened pull request \"Handle glibc sys/sysctl.h deprecation\" (#27048) at dotnet/coreclr","RelatedBody":"glibc has deprecated sys/sysctl.h:\r\n\r\n    In file included from /coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n    1 error generated.\r\n\r\nFix that by preferring sysconf and only including sys/sysctl.h if HAVE_SYSCONF is not true. This mirrors the order of the implementation code in this file (sysinfo.cpp) which checks for HAVE_SYSCONF before HAVE_SYSCTL.\r\n\r\nFixes #27008"},{"Id":"10564058333","Type":"PullRequestEvent","CreatedAt":"2019-10-04T23:16:28","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18901","RelatedDescription":"Closed pull request \"WIP Fix bit-rot when '#define MEASURE_CLRAPI_CALLS' is used\" (#18901) at dotnet/coreclr","RelatedBody":"When I was writing [.NET JIT and CLR - Joined at the Hip](http://mattwarren.org/2018/07/05/.NET-JIT-and-CLR-Joined-at-the-Hip/) I noticed that the JIT wrapper apis had got out of sync, although it's only noticeable with `#define MEASURE_CLRAPI_CALLS 1`. (BTW thanks to @pkukol for writing [this comment](https://github.com/dotnet/coreclr/blob/b89e2305a2c953272c997242d01b66b1bb1e661e/src/jit/compiler.cpp#L6563-L6566), it did its job)\r\n\r\nI plan to revert my changes to `jit.h`, I just wanted to make sure all the builds passed first (hence WIP)."},{"Id":"10564018558","Type":"IssuesEvent","CreatedAt":"2019-10-04T23:04:32","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27047","RelatedDescription":"Opened issue \"add `compilationNumber` field to `Compiler*` and use it for dumps.\" (#27047) at dotnet/coreclr","RelatedBody":"We should create a Compiler member that captures this once and then use that for all output, and use InterlockedIncrement to update this static.\r\n\r\n_Originally posted by @BruceForstall in https://github.com/dotnet/coreclr/pull/27017_"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10564790596","Type":"PullRequestEvent","CreatedAt":"2019-10-05T05:25:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12818","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12818) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.16\r\n- **Date Produced**: 10/5/2019 3:32 AM\r\n- **Commit**: 96ed7d1ffb1a3662751bc650a8d6bd09511f11e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19504.16\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10564742967","Type":"PullRequestEvent","CreatedAt":"2019-10-05T04:55:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12818","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12818) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.16\r\n- **Date Produced**: 10/5/2019 3:32 AM\r\n- **Commit**: 96ed7d1ffb1a3662751bc650a8d6bd09511f11e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19504.16\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10564704777","Type":"PullRequestEvent","CreatedAt":"2019-10-05T04:30:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12817","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12817) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191004.8\r\n- **Date Produced**: 10/5/2019 4:09 AM\r\n- **Commit**: 683f7f7102131ec623409c9fae4c17bcc261d986\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19504.8\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10564700704","Type":"PullRequestEvent","CreatedAt":"2019-10-05T04:27:34","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12816","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12816) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.15\r\n- **Date Produced**: 10/5/2019 2:41 AM\r\n- **Commit**: ea8a25eb0679dc4d940623688189885086286adc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview1.19504.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview1.19504.6 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10564647714","Type":"PullRequestEvent","CreatedAt":"2019-10-05T03:55:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12816","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12816) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.15\r\n- **Date Produced**: 10/5/2019 2:41 AM\r\n- **Commit**: ea8a25eb0679dc4d940623688189885086286adc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview1.19504.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview1.19504.6 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10564580755","Type":"PullRequestEvent","CreatedAt":"2019-10-05T03:15:06","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12815","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12815) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/5/2019 1:35 AM\r\n- **Commit**: a92f8ffa177a5f4d1189f211049f094fe09e76c5\r\n- **Branch**: refs/heads/release/3.1-preview1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview1.19504.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10564531647","Type":"PullRequestEvent","CreatedAt":"2019-10-05T02:45:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12814","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12814) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.14\r\n- **Date Produced**: 10/5/2019 12:31 AM\r\n- **Commit**: b903a6e815dbcec7acfeef39db1e9189fef7ed69\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19504.14\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10564505694","Type":"PullRequestEvent","CreatedAt":"2019-10-05T02:30:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12813","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12813) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.13\r\n- **Date Produced**: 10/5/2019 12:20 AM\r\n- **Commit**: fd1162d3db7db9c79bf01d32604862f4bee25b96\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview1.19504.13\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"10564505234","Type":"PullRequestEvent","CreatedAt":"2019-10-05T02:30:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12815","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12815) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/5/2019 1:35 AM\r\n- **Commit**: a92f8ffa177a5f4d1189f211049f094fe09e76c5\r\n- **Branch**: refs/heads/release/3.1-preview1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview1.19504.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10559771096","Type":"PullRequestEvent","CreatedAt":"2019-10-04T12:26:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1589","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1589) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191003.5\r\n- **Date Produced**: 10/4/2019 1:12 AM\r\n- **Commit**: eff9fbf446468ca411bf5e0475916f316eea7223\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19503.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10559668591","Type":"PullRequestEvent","CreatedAt":"2019-10-04T12:11:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1589","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1589) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191003.5\r\n- **Date Produced**: 10/4/2019 1:12 AM\r\n- **Commit**: eff9fbf446468ca411bf5e0475916f316eea7223\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19503.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10554091357","Type":"IssuesEvent","CreatedAt":"2019-10-03T18:40:35","Actor":"lucbueno54","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1588","RelatedDescription":"Opened issue \"When referring to a net462 project in NETStandard of ProjectReference, it is supplied with AssemblyName in nuget generation\" (#1588) at dotnet/standard","RelatedBody":"Create references to two net462 projects in NETStandard and enable automatic nuget generation (GeneratePackageOnBuild = true). \r\n\r\nAn important detail that is AssemblyName is different from the csproj file. \r\n\r\nExample: \r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>Nuget.NetStandardClassLibrary</id>\r\n    <version>19.9.0</version>\r\n    <authors>Nuget.NetStandardClassLibrary</authors>\r\n    <owners>Nuget.NetStandardClassLibrary</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Package Description</description>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"nuget.AnotherStandardClassLibrary\" version=\"198.0.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"FrameworkClassLibrary\" version=\"1.0.0\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n\r\n\r\n\r\nhttps://github.com/lucbueno54/dotnetStandardReferencesTest "},{"Id":"10551025309","Type":"PullRequestEvent","CreatedAt":"2019-10-03T12:29:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1587","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1587) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191002.6\r\n- **Date Produced**: 10/3/2019 2:33 AM\r\n- **Commit**: c8c2917540a568869ba761afa6e4dba6edeb433b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19502.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10550951743","Type":"PullRequestEvent","CreatedAt":"2019-10-03T12:19:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1587","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1587) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191002.6\r\n- **Date Produced**: 10/3/2019 2:33 AM\r\n- **Commit**: c8c2917540a568869ba761afa6e4dba6edeb433b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19502.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10550895104","Type":"PullRequestEvent","CreatedAt":"2019-10-03T12:11:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1586","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1586) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191002.11\r\n- **Date Produced**: 10/2/2019 11:34 PM\r\n- **Commit**: da75c6547c64a91eb8a9cecf8c503331c2cc394a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19502.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10550824370","Type":"PullRequestEvent","CreatedAt":"2019-10-03T12:01:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1586","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1586) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191002.11\r\n- **Date Produced**: 10/2/2019 11:34 PM\r\n- **Commit**: da75c6547c64a91eb8a9cecf8c503331c2cc394a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19502.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10564727903","Type":"IssuesEvent","CreatedAt":"2019-10-05T04:45:29","Actor":"kbetmp001","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41570","RelatedDescription":"Opened issue \"mistakes on WebUtility.HtmlEncode\" (#41570) at dotnet/corefx","RelatedBody":"https://github.com/dotnet/corefx/blob/99ea2b5aebf7361a5baa638c978cb6214fca5217/src/System.Runtime.Extensions/src/System/Net/WebUtility.cs#L651\r\n\r\nshould be \r\n`char leadingSurrogate = input[index];`"},{"Id":"10564575274","Type":"PullRequestEvent","CreatedAt":"2019-10-05T03:11:38","Actor":"wtgodbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41565","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41565) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191004.3\r\n- **Date Produced**: 10/4/2019 10:28 PM\r\n- **Commit**: 28f54a4013e85774e2a2793c5c7ca2b36948f996\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview1.19504.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview1.19504.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview1.19504.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"},{"Id":"10564472307","Type":"PullRequestEvent","CreatedAt":"2019-10-05T02:11:16","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41569","RelatedDescription":"Opened pull request \"Replace Stack with Stack<T> in XmlDataLoader\" (#41569) at dotnet/corefx","RelatedBody":"This looks like the only remaining uses of the non-generic Stack in a trimmed web api app."},{"Id":"10564455318","Type":"PullRequestEvent","CreatedAt":"2019-10-05T02:01:38","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41568","RelatedDescription":"Opened pull request \"Remove unused usings from System.Security.Cryptography.Xml\" (#41568) at dotnet/corefx","RelatedBody":"I was looking for uses of \"using System.Linq;\".  One file had it, but it turned out to be unused/unnecessary, so as long as I was removing it, I ran VS' \"remove unused usings\" on the project."},{"Id":"10564437363","Type":"PullRequestEvent","CreatedAt":"2019-10-05T01:52:12","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41567","RelatedDescription":"Opened pull request \"Remove System.Linq dependency from System.Security.Cryptography.Encoding\" (#41567) at dotnet/corefx","RelatedBody":""},{"Id":"10564416450","Type":"PullRequestEvent","CreatedAt":"2019-10-05T01:40:33","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41566","RelatedDescription":"Opened pull request \"Remove System.Linq dependency from System.Net.NetworkInformation\" (#41566) at dotnet/corefx","RelatedBody":"It was only being used on Unix, and the uses are all easily replaced with more efficient implementations."},{"Id":"10564397445","Type":"PullRequestEvent","CreatedAt":"2019-10-05T01:30:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41565","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41565) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191004.3\r\n- **Date Produced**: 10/4/2019 10:28 PM\r\n- **Commit**: 28f54a4013e85774e2a2793c5c7ca2b36948f996\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview1.19504.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview1.19504.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview1.19504.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"},{"Id":"10564354670","Type":"PullRequestEvent","CreatedAt":"2019-10-05T01:08:43","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41564","RelatedDescription":"Opened pull request \"Remove System.Linq dependency from System.Security.Cryptography.X509Certificates\" (#41564) at dotnet/corefx","RelatedBody":"System.Linq was only being used in two places:\r\n- In Pkcs10CertificateRequestInfo, it was using Collection<>.Select(...).ToArray().  We can replace it with a simple for loop, which is both faster (e.g. fewer delegate invocations) and fewer generic instantiations (no one else is going to have an instantiation with AttributeAsn).\r\n- In LoadMachineStores on Linux, it was using Prepend.  We can avoid the need for Prepend (and the associated allocations) entirely by slightly reorganizing the method and using a local function."},{"Id":"10564352587","Type":"IssuesEvent","CreatedAt":"2019-10-05T01:07:39","Actor":"tracker1","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41563","RelatedDescription":"Opened issue \"RSA.ImportRSAPublicKey not working\" (#41563) at dotnet/corefx","RelatedBody":"I'm trying to initialize an RSA instance via `ImportRSAPublicKey` and I'm getting an `ASN1 corrupted data.` error.\r\n\r\nSimple case:\r\n```\r\nvar r1 = RSA.Create();\r\nvar base = new RSACryptoServiceProvider(4096);\r\n\r\n// throws\r\nr1.ImportRSAPublicKey(base.ExportSubjectPublicKeyInfo(), out _);\r\n\r\n// what I want/need\r\nreturn new RsaSecurityKey(r1);\r\n```\r\n\r\nDo I need to do some other conversion first?"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10564217202","Type":"IssuesEvent","CreatedAt":"2019-10-05T00:09:45","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38909","RelatedDescription":"Closed issue \"CS8509 is not trigged when null is missing as a pattern when matching a nullable value type\" (#38909) at dotnet/roslyn","RelatedBody":"Dear Sir/Madam,\r\n\r\n**Version Used**: \r\nVisual Studio 2019 16.3.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Use a switch expression on a nullable value type\r\n2. Do not use the `null` pattern\r\n```\r\nbool? input = null;\r\ninput switch // No warning\r\n{\r\n    true => \"true\",\r\n    false => \"false\"\r\n};\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe expected behaviour is a warning forunexhaustive patterns, CS8509.\r\nJust as in the following cases\r\n```\r\ndouble? input = null;\r\ninput switch // Warning\tCS8509 The switch expression does not handle all possible inputs (it is not exhaustive).\r\n{\r\n    true => \"true\",\r\n    null => \"null\"\r\n};\r\n\r\n#nullable enable\r\nstring? input = null;\r\ninput switch // Warning\tCS8509 The switch expression does not handle all possible inputs (it is not exhaustive).\r\n{\r\n    { } => \"not null\",\r\n};\r\n```\r\n\r\n**Actual Behavior**:\r\nNo warning while there is an unexhaustive pattern.\r\n\r\nThank you in advance.\r\n\r\nRegards,\r\nNiekGr"},{"Id":"10564196890","Type":"PullRequestEvent","CreatedAt":"2019-10-05T00:02:41","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39081","RelatedDescription":"Opened pull request \"Merge master to features/local-function-attributes\" (#39081) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10564196382","Type":"PullRequestEvent","CreatedAt":"2019-10-05T00:02:29","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39080","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#39080) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10562489501","Type":"PullRequestEvent","CreatedAt":"2019-10-04T18:27:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7809","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7809) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10559777614","Type":"IssuesEvent","CreatedAt":"2019-10-04T12:27:50","Actor":"kstreichergb","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7808","RelatedDescription":"Closed issue \"dotnet.exe hangs during shutdown\" (#7808) at dotnet/corert","RelatedBody":"A hosted application using `BackgroundService` is hanging infinetly on shutdown, in particular when the console application is killed with ctrl+z.\r\n\r\nThe \"finish\" log in the finally in Main will be seen, but the dotnet.exe process keeps running\r\n\r\n```\r\npublic class BaseBackgroundService: BackgroundService{\r\n  private readonly IHostLifetime _hostLifetime;\r\n  private readonly IHostApplicationLifetime _iHostApplicationLifetime;\r\n  \r\n  public BaseBackgroundService(IHostLifetime hostLifetime,\r\n\t\t                             IHostApplicationLifetime iHostApplicationLifetime){\r\n    _hostLifetime = hostLifetime;\r\n    _iHostApplicationLifetime = iHostApplicationLifetime;\r\n }\r\n\r\n  protected override async Task ExecuteAsync(CancellationToken ct)\r\n  {\r\n  try{\r\n        await DoSomething();\r\n  }catch(OperationCanceledException ex)\r\n{\r\n /** ... Reached on CTRL+Z .... **/\r\n}\r\nfinally{\r\n       _iHostApplicationLifetime.StopApplication();\r\n        await _hostLifetime.StopAsync(ct); // clean exit\r\n  \tConsole.WriteLine(\"Completes as expected\");    \r\n  }\r\n/*...*/\r\n}\r\n\r\n```\r\n\tProgram.cs \r\n\tpublic static async Task Main(string[] args){\r\n\ttry\r\n\t{\r\n\t\tIHostBuilder hostBuilder = CreateHostBuilder(args);\r\n\r\n\t\tusing (IHost host = hostBuilder.UseConsoleLifetime().Build())\r\n\t\t{\r\n\t\t\tawait host.RunAsync();\r\n\t\t}\r\n\t}\r\n\t}finally{\r\n\t\tConsole.WriteLine(\"Finished - will be seen. Therefore main exits, but dotnet.exe keeps running\");\r\n\t}\r\n\t}\r\n```\r\n\r\nThe hosted BackgroundService will finish (OperationCanceledException) but the host.RunAsync() will never finish.\r\n\r\nUsing visual and break all\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66196903-9ecb0200-e699-11e9-812f-d3773be75aa4.png)\r\n\r\nAnd repeating it shows the Task ID changes, but the structure remains the same\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66197013-cf12a080-e699-11e9-8529-6ee9df7266ee.png)"},{"Id":"10558559960","Type":"IssuesEvent","CreatedAt":"2019-10-04T09:23:01","Actor":"kstreichergb","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7808","RelatedDescription":"Opened issue \"dotnet.exe hangs during shutdown\" (#7808) at dotnet/corert","RelatedBody":"A hosted application using `BackgroundService` is hanging infinetly on shutdown, in particular when the console application is killed with ctrl+z.\r\n\r\n```\r\npublic class BaseBackgroundService: BackgroundService{\r\n  private readonly IHostLifetime _hostLifetime;\r\n  private readonly IHostApplicationLifetime _iHostApplicationLifetime;\r\n  \r\n  public BaseBackgroundService(IHostLifetime hostLifetime,\r\n\t\t                             IHostApplicationLifetime iHostApplicationLifetime){\r\n    _hostLifetime = hostLifetime;\r\n    _iHostApplicationLifetime = iHostApplicationLifetime;\r\n }\r\n\r\n  protected override async Task ExecuteAsync(CancellationToken ct)\r\n  {\r\n  try{\r\n        await DoSomething();\r\n  }finally{\r\n  \tConsole.WriteLine(\"Completes as expected\");    \r\n  }\r\n/*...*/\r\n}\r\n\r\n```\r\n/* Program.cs */\r\npublic static async Task Main(string[] args){\r\ntry\r\n{\r\n\tIHostBuilder hostBuilder = CreateHostBuilder(args);\r\n\r\n\tusing (IHost host = hostBuilder.UseConsoleLifetime().Build())\r\n\t{\r\n\t\tawait host.RunAsync();\r\n\t}\r\n}\r\n}finally{\r\n\tConsole.WriteLine(\"Complete -- never reached\");\r\n}\r\n}\r\n```\r\n\r\nThe hosted BackgroundService will finish (OperationCanceledException) but the host.RunAsync() will never finish."},{"Id":"10545294245","Type":"IssuesEvent","CreatedAt":"2019-10-02T18:48:53","Actor":"RalfKornmannEnvision","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7807","RelatedDescription":"Opened issue \"GC thread suspension\" (#7807) at dotnet/corert","RelatedBody":"Maybe I just got something wrong here and I am looking at the wrong place.\r\n\r\nMy somewhat bigger test code finally runs stable for hours on my ARM64 system without trashing the heap or consuming all the physical memory. But so far it was only a single thread console application. For my use case I would need some threads.\r\n\r\nAs expected the GC need to suspend all managed threads to do a collection. For Windows there is some hijack code but the function for unix only contains a todo. I assume the reason for this is that the necessary os functions are missing. My target system has the same issue as I cannot suspend and resume threads there. As .net core should have the same issue on other posix systems I checked there and noticed that the jit engine has an option to inject gc probes. I assume that this is the only way to get the GC working in a multi thread environment were hijacking is not possible. Or did I missed something?\r\n\r\nIn the case I am right a short check showed me that the ilcompiler doesn't support the flags and callbacks for this yet?\r\n\r\nDo I need to add this to get the GC working with multiple threads or have I looked at the wrong place?\r\n\r\nIf this the right place does it make any sense to aim for the inline version of the gc probe or can this never work with corert and the call variant is the only solution? I already checked the code and noticed that even if the inline variant can work the call needs still be implemented as it is used in more complicated cases."},{"Id":"10536464864","Type":"PullRequestEvent","CreatedAt":"2019-10-01T18:56:38","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7806","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7806) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"10535375779","Type":"PullRequestEvent","CreatedAt":"2019-10-01T16:34:32","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7806","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7806) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10534787799","Type":"PullRequestEvent","CreatedAt":"2019-10-01T15:25:51","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7805) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik"},{"Id":"10530160563","Type":"PullRequestEvent","CreatedAt":"2019-10-01T04:31:35","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7805) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10530126394","Type":"PullRequestEvent","CreatedAt":"2019-10-01T04:22:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7804) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @Youssef1313 @safern"},{"Id":"10526521641","Type":"PullRequestEvent","CreatedAt":"2019-09-30T17:16:45","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7804) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10564647639","Type":"PullRequestEvent","CreatedAt":"2019-10-05T03:55:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3716","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3716) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.15\r\n- **Date Produced**: 10/5/2019 2:41 AM\r\n- **Commit**: ea8a25eb0679dc4d940623688189885086286adc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10564632630","Type":"PullRequestEvent","CreatedAt":"2019-10-05T03:46:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3715","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3715) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.13\r\n- **Date Produced**: 10/5/2019 12:20 AM\r\n- **Commit**: fd1162d3db7db9c79bf01d32604862f4bee25b96\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.13\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10564443024","Type":"PullRequestEvent","CreatedAt":"2019-10-05T01:55:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3715","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3715) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.13\r\n- **Date Produced**: 10/5/2019 12:20 AM\r\n- **Commit**: fd1162d3db7db9c79bf01d32604862f4bee25b96\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.13\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"502885161","IsPullRequest":true,"CreatedAt":"2019-10-04T23:39:48","Actor":"omajid","Number":"27048","RawContent":null,"Title":"Handle glibc sys/sysctl.h deprecation","State":"open","Body":"glibc has deprecated sys/sysctl.h:\r\n\r\n    In file included from /coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n    1 error generated.\r\n\r\nFix that by preferring sysconf and only including sys/sysctl.h if HAVE_SYSCONF is not true. This mirrors the order of the implementation code in this file (sysinfo.cpp) which checks for HAVE_SYSCONF before HAVE_SYSCTL.\r\n\r\nFixes #27008","Url":"https://github.com/dotnet/coreclr/pull/27048","RelatedDescription":"Open PR \"Handle glibc sys/sysctl.h deprecation\" (#27048)"},{"Id":"502877762","IsPullRequest":false,"CreatedAt":"2019-10-04T23:04:32","Actor":"sandreenko","Number":"27047","RawContent":null,"Title":"add `compilationNumber` field to `Compiler*` and use it for dumps.","State":"open","Body":"We should create a Compiler member that captures this once and then use that for all output, and use InterlockedIncrement to update this static.\r\n\r\n_Originally posted by @BruceForstall in https://github.com/dotnet/coreclr/pull/27017_","Url":"https://github.com/dotnet/coreclr/issues/27047","RelatedDescription":"Open issue \"add `compilationNumber` field to `Compiler*` and use it for dumps.\" (#27047)"},{"Id":"502872547","IsPullRequest":true,"CreatedAt":"2019-10-04T22:40:58","Actor":"GrabYourPitchforks","Number":"27046","RawContent":null,"Title":"Update Utf8String to match latest prototype","State":"open","Body":"See https://github.com/dotnet/coreclr/pull/26711 for further context, where similar changes were made for `Utf8Span`. The big change for this type is that its constructors are now validating and will throw if they see ill-formed UTF-8 input. There are also _Create_ / _TryCreate_ methods that are non-throwing or allow suppressing validation entirely if the caller knows the input to be well-formed. This brings the API surface of `Utf8String` to parity with `Utf8Span`. (And it has a very similar API surface to `string`, with some behavioral differences called out in comments.)\r\n\r\nThere are still some perf optimizations that need to be done, and the API is not yet approved. This PR concerns itself only with proper functionality of `Utf8String` and related types. We can perform an API surface pass during API review.\r\n\r\nUnit tests at https://github.com/dotnet/corefx/pull/41557.","Url":"https://github.com/dotnet/coreclr/pull/27046","RelatedDescription":"Open PR \"Update Utf8String to match latest prototype\" (#27046)"},{"Id":"502862631","IsPullRequest":true,"CreatedAt":"2019-10-04T22:02:25","Actor":"Chrisboh","Number":"27045","RawContent":null,"Title":"Switching to the new OSX pool","State":"open","Body":"Switching to the pool mac pool","Url":"https://github.com/dotnet/coreclr/pull/27045","RelatedDescription":"Open PR \"Switching to the new OSX pool\" (#27045)"},{"Id":"502859355","IsPullRequest":true,"CreatedAt":"2019-10-04T21:51:30","Actor":"Chrisboh","Number":"27044","RawContent":null,"Title":"Switching to the new OSX pool","State":"open","Body":"We moved the OSX machines to a new pool.  Updating the json file to use the new pool.","Url":"https://github.com/dotnet/coreclr/pull/27044","RelatedDescription":"Open PR \"Switching to the new OSX pool\" (#27044)"},{"Id":"502852771","IsPullRequest":true,"CreatedAt":"2019-10-04T21:30:30","Actor":"davidwrighton","Number":"27043","RawContent":null,"Title":"[WIP] Implement instantiating and unboxing through portable stublinker code","State":"open","Body":"- Handle only the cases with register to register moves\r\n- Followon work to remove the old instantiating/unboxing stub infra (except for x86, x86 will remain special)\r\n- Shares abi processing logic with delegate shuffle thunk creation\r\n- Architecture specific logic is relatively simple","Url":"https://github.com/dotnet/coreclr/pull/27043","RelatedDescription":"Open PR \"[WIP] Implement instantiating and unboxing through portable stublinker code\" (#27043)"},{"Id":"502846063","IsPullRequest":true,"CreatedAt":"2019-10-04T21:10:40","Actor":"jkoritzinsky","Number":"27042","RawContent":null,"Title":"Explicitly make our minimum ICU version be the version available in Alpine 3.6","State":"open","Body":"Fixes #27018 \r\n\r\ncc: @janvorli @wfurt ","Url":"https://github.com/dotnet/coreclr/pull/27042","RelatedDescription":"Open PR \"Explicitly make our minimum ICU version be the version available in Alpine 3.6\" (#27042)"},{"Id":"502828384","IsPullRequest":true,"CreatedAt":"2019-10-04T20:23:33","Actor":"k15tfu","Number":"27041","RawContent":null,"Title":"Use a new COR_PRF_SUSPEND_FOR_PROFILER in ICorProfilerCallback::Runti…","State":"open","Body":"Use a new COR_PRF_SUSPEND_FOR_PROFILER in ICorProfilerCallback::RuntimeThreadSuspended() when requested by profiler\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/26576","Url":"https://github.com/dotnet/coreclr/pull/27041","RelatedDescription":"Open PR \"Use a new COR_PRF_SUSPEND_FOR_PROFILER in ICorProfilerCallback::Runti…\" (#27041)"},{"Id":"502827335","IsPullRequest":false,"CreatedAt":"2019-10-04T20:20:50","Actor":"lostmsu","Number":"27040","RawContent":null,"Title":"Spans supporting pointer-sized sizes (e.g. 64 bit on 64 bit OS)","State":"open","Body":"This is very related to https://github.com/dotnet/coreclr/issues/23132 (but not the same).\r\n\r\nCurrently `Span` `Length` is limited to just under `Int32.MaxValue`.\r\n\r\nThis is problematic when working on relatively large data, as we have to resort to working with raw pointers and unmanaged memory allocation to work with contiguous arrays of 2G+ elements.\r\n\r\nTo give a concrete example, from .NET I can't simply give TensorFlow 800_000 64x64 1-channel (channel==byte) images as a contiguous array.","Url":"https://github.com/dotnet/coreclr/issues/27040","RelatedDescription":"Open issue \"Spans supporting pointer-sized sizes (e.g. 64 bit on 64 bit OS)\" (#27040)"},{"Id":"502414338","IsPullRequest":true,"CreatedAt":"2019-10-04T19:23:40","Actor":"franksinankaya","Number":"27031","RawContent":null,"Title":"Rename lvOtherReg","State":"closed","Body":"@am11 @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27031","RelatedDescription":"Closed or merged PR \"Rename lvOtherReg\" (#27031)"},{"Id":"502798527","IsPullRequest":false,"CreatedAt":"2019-10-04T19:09:04","Actor":"sandreenko","Number":"27039","RawContent":null,"Title":"building of an individual test fails with sdk\\5.0","State":"open","Body":"If you install Core-SDK 5.0 from https://github.com/dotnet/core-sdk#installers-and-binaries (you need it if you want to run perfomance benchmarks from with current CoreCLR master)\r\nand then try to build an individual CoreCLR test with:\r\n`C:\\git\\coreclr\\tests\\src\\JIT\\Regression\\JitBlue\\DevDiv_150586>C:\\git\\coreclr\\.dotnet\\dotnet.exe msbuild /p:__BuildOS=Windows_NT /p:__BuildArch=x64 /p:__BuildType=Checked  DevDiv_150586.ilproj`\r\n\r\nyou will see:\r\n```\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19456-02+ee8294b55 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014826\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(262,5): error NETSDK1073: The FrameworkReference 'Microsoft.NETCore.App' was not recognized [C:\\git\\coreclr\\tests\\src\\JIT\\Regression\\JitBlue\\DevDiv_150586\\DevDiv_150586.ilproj]\r\n```\r\n\r\nA workaround that I found for it is to add `<GenerateErrorForMissingTargetingPacks>false</GenerateErrorForMissingTargetingPacks>` to the project file (into a <PropertyGroup>), then it will build fine:\r\n\r\n```\r\nC:\\git\\coreclr\\tests\\src\\JIT\\Regression\\JitBlue\\DevDiv_150586>C:\\git\\coreclr\\.dotnet\\dotnet.exe msbuild /p:__BuildOS=Windows_NT /p:__BuildArch=x64 /p:__BuildType=Checked  DevDiv_150586.ilproj\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19456-02+ee8294b55 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  DevDiv_150586 -> C:\\git\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\JIT\\Regression\\JitBlue\\DevDiv_150586\\DevDiv_150586\\DevDiv_150586.dll\r\n```\r\n\r\nThe full test build is not affected (via `build.cmd x64 checked`), if you delete 5.0 (and stay on 3.0/3.1) then it works fine again.","Url":"https://github.com/dotnet/coreclr/issues/27039","RelatedDescription":"Open issue \"building of an individual test fails with sdk\\5.0\" (#27039)"},{"Id":"502735418","IsPullRequest":true,"CreatedAt":"2019-10-04T18:58:24","Actor":"fadimounir","Number":"27034","RawContent":null,"Title":"Handle AV caused by invalid IBC data (#27029)","State":"closed","Body":"Bug Description:\r\n\r\nEX_TRY/EX_CATCH do not handle AVs (by choice/design) on Unix systems. This particular bug is caused by old/invalid IBC data on an assembly that requests to load a method on a certain type, but the method really doesn't exist on that type. This causes an AV that is handled on Windows systems and the IBC entry is ignored, but on Unix, it required some hardening of the code to make it throw a typeload exception instead of letting it AV. The exception is correctly handled by the EX_CATCH block, and the IBC entry is ignored. We now have the same behavior as on Windows, and crossgen no longer crashes.\r\n\r\nBug Impact:\r\nAny customer publishing R2R images from a Unix host, and referencing assemblies with invalid/old IBC will see crossgen crashes.\r\n\r\nPR Risks: None\r\n\r\nPorting #27029 from master for 3.1\r\nFixes #26799 for 3.1\r\n\r\ncc @MeiChin-Tsai @jkotas","Url":"https://github.com/dotnet/coreclr/pull/27034","RelatedDescription":"Closed or merged PR \"Handle AV caused by invalid IBC data (#27029)\" (#27034)"},{"Id":"502783024","IsPullRequest":true,"CreatedAt":"2019-10-04T18:32:51","Actor":"trylek","Number":"27038","RawContent":null,"Title":"Fix duplicate key failure in SuperIlc when using multiple runners","State":"open","Body":"Apologies about the inconvenience, it somehow slipped through\r\nthe cracks.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27038","RelatedDescription":"Open PR \"Fix duplicate key failure in SuperIlc when using multiple runners\" (#27038)"},{"Id":"502762762","IsPullRequest":true,"CreatedAt":"2019-10-04T17:45:00","Actor":"MichalStrehovsky","Number":"27037","RawContent":null,"Title":"Make it possible to compile apps that target WindowsDesktop SDK","State":"open","Body":"We were missing some p/invoke related stuff.","Url":"https://github.com/dotnet/coreclr/pull/27037","RelatedDescription":"Open PR \"Make it possible to compile apps that target WindowsDesktop SDK\" (#27037)"},{"Id":"502762453","IsPullRequest":true,"CreatedAt":"2019-10-04T17:44:12","Actor":"MichalStrehovsky","Number":"27036","RawContent":null,"Title":"Avoid assert if there's SafeArray marshalling","State":"open","Body":"VarType is deprecated so it's unlikely we would want to support pregenerating this, ever, but we don't want to assert the compiler.","Url":"https://github.com/dotnet/coreclr/pull/27036","RelatedDescription":"Open PR \"Avoid assert if there's SafeArray marshalling\" (#27036)"},{"Id":"502747642","IsPullRequest":true,"CreatedAt":"2019-10-04T17:08:17","Actor":"mikedn","Number":"27035","RawContent":null,"Title":"Refactor init/copy block codegen","State":"open","Body":"Extracted from #21711 for easier handling.\r\n\r\nA bunch of cleanup to make the init/copy block codegen code more consistent, readable and easier to change. One notable change is that `GenTreeAddrMode` is no longer a large node, it didn't need be. This simplifies things a bit because the original `ADD` node can be directly turned into a `LEA` node, instead of creating a new node and having to find the use and update it.","Url":"https://github.com/dotnet/coreclr/pull/27035","RelatedDescription":"Open PR \"Refactor init/copy block codegen\" (#27035)"},{"Id":"502393521","IsPullRequest":true,"CreatedAt":"2019-10-04T16:03:04","Actor":"fadimounir","Number":"27029","RawContent":null,"Title":"Handle AV caused by invalid IBC data","State":"closed","Body":"Make FindOrCreateAssociatedMethodDesc throw a type load exception instead of an AV, which can't be handled by EX_TRY/EX_CATCH on Unix systems.\r\n\r\nFixes crossgen failures reported in #26799 \r\n\r\nHandling of AVs on Unix systems seem to be unsupported by choice","Url":"https://github.com/dotnet/coreclr/pull/27029","RelatedDescription":"Closed or merged PR \"Handle AV caused by invalid IBC data\" (#27029)"},{"Id":"502682101","IsPullRequest":false,"CreatedAt":"2019-10-04T15:28:35","Actor":"IustinMicu","Number":"27033","RawContent":null,"Title":"Current executing assembly location is wrong for single file published project","State":"closed","Body":"# Current executing assembly location is wrong when the project is published as a single file\r\n\r\n# General\r\n\r\nI upgraded a .net core 2.2 application to 3.0 and I enabled the PublishSingleFile feature.\r\nUnfortunately the current executing assembly location is not the directory where the executable is located. It is something like this: \r\n\r\n> \\%AppData%\\Local\\Temp\\.net\\<project_name>\\q1upmq4v.zgw\r\n\r\n- This is how the single file publish feature is configured:\r\n    `<TargetFramework>netcoreapp3.0</TargetFramework>`\r\n    `<PublishSingleFile>true</PublishSingleFile>`\r\n    `<RuntimeIdentifier>win-x64</RuntimeIdentifier>`\r\n    `<PublishTrimmed>true</PublishTrimmed>`\r\n    `<OutputType>Exe</OutputType>`\r\n\r\n- This is how I get the location of the current executing assembly:\r\n   `var location = System.IO.Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);`\r\n","Url":"https://github.com/dotnet/coreclr/issues/27033","RelatedDescription":"Closed issue \"Current executing assembly location is wrong for single file published project\" (#27033)"},{"Id":"502361335","IsPullRequest":true,"CreatedAt":"2019-10-04T14:09:09","Actor":"janvorli","Number":"27026","RawContent":null,"Title":"Fix couple of generic context tests","State":"closed","Body":"This change fixes a couple of generic context related tests that were\r\ncrashing with access violation.\r\nThe tests include:\r\n* reflection\\DefaultInterfaceMethods\\InvokeConsumer\r\n* Regressions\\coreclr\\15241\\genericcontext\r\n* Regressions\\coreclr\\16355\\variance\r\n* Regressions\\coreclr\\16775\\sharedinterfacemethod\r\n* Regressions\\coreclr\\20452\\twopassvariance\r\n* Regressions\\coreclr\\22386\\debug3","Url":"https://github.com/dotnet/coreclr/pull/27026","RelatedDescription":"Closed or merged PR \"Fix couple of generic context tests\" (#27026)"},{"Id":"502291400","IsPullRequest":true,"CreatedAt":"2019-10-04T09:57:36","Actor":"trylek","Number":"27020","RawContent":null,"Title":"Make SuperIlc resilient towards JIT no-op compilation phase","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27020","RelatedDescription":"Closed or merged PR \"Make SuperIlc resilient towards JIT no-op compilation phase\" (#27020)"},{"Id":"502289986","IsPullRequest":true,"CreatedAt":"2019-10-04T09:13:30","Actor":"trylek","Number":"27019","RawContent":null,"Title":"Add two unsupported helpers to fail a method instead of the entire build","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27019","RelatedDescription":"Closed or merged PR \"Add two unsupported helpers to fail a method instead of the entire build\" (#27019)"},{"Id":"502331244","IsPullRequest":true,"CreatedAt":"2019-10-04T09:05:31","Actor":"janvorli","Number":"27022","RawContent":null,"Title":"Fix crossgen2 to fix several Loader tests","State":"closed","Body":"Six Loader\\classloader\\TypeGeneratorTests (Generated612, Generated613,\r\nGenerated614, Generated681, Generated682 and Generated683) were failing\r\nwith System.BadImageFormatException. While investigating the issue, I've\r\nfound that it was caused by a fix made few months ago. That fix fixed\r\nseveral hundreds of tests from the Loader category, but broken these\r\nsix. The fix was made in getCallInfo and it doesn't correspond to what\r\nwe have in the old crossgen.\r\nThis change reverts that fix and fixes all the issues by using proper\r\ntoken at some places and converting MemberRefs and MethodSpecs at few\r\nplaces to MethodDefs, exacty the same way like the old crossgen does.","Url":"https://github.com/dotnet/coreclr/pull/27022","RelatedDescription":"Closed or merged PR \"Fix crossgen2 to fix several Loader tests\" (#27022)"},{"Id":"502432930","IsPullRequest":true,"CreatedAt":"2019-10-04T05:25:04","Actor":"benaadams","Number":"27032","RawContent":null,"Title":"Use CollectionsMarshal avoid additional bounds checks","State":"open","Body":"From https://github.com/dotnet/corefx/pull/41306#issuecomment-538194107\r\n\r\nUsing the enumerator for `List<T>` of iterating in a `for` introduces extra bounds checks as the length of the list is not the same as the length of the underlying array.\r\n\r\nMarshalling to a Span first gives a fast enumerator with no additional bounds checks, and no additional bounds checks in a regular `for`; also can skip covarience checks.\r\n\r\nMostly just using it in a few places to demonstrate usage; this isn't an exhaustive or hot-path search by any means.\r\n\r\n/cc @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/27032","RelatedDescription":"Open PR \"Use CollectionsMarshal avoid additional bounds checks\" (#27032)"},{"Id":"502404411","IsPullRequest":true,"CreatedAt":"2019-10-04T03:26:49","Actor":"franksinankaya","Number":"27030","RawContent":null,"Title":"Rename genAlignLoops","State":"open","Body":"@am11 @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27030","RelatedDescription":"Open PR \"Rename genAlignLoops\" (#27030)"},{"Id":"502372518","IsPullRequest":true,"CreatedAt":"2019-10-04T01:07:57","Actor":"nattress","Number":"27028","RawContent":null,"Title":"Fix crossgen2 skipped methods NullReferenceException","State":"open","Body":"https://github.com/dotnet/coreclr/pull/26756 introduced skipping methods based on filtering criteria, publishing empty code for methods which are skipped.\r\n`ShouldSkipCompilation` reads properties on types and methods and can trigger type loads and thus throw `TypeLoadException`. Currently when that happens, we will not publish empty code for the method and hit the catch in `ComputeDependencyNodeDependencies`. Later when the node is scanned for dependencies, it is in a zombie state with `_methodCode` still null.\r\n\r\nMove the `ShouldSkipCompilation` check under the `CompileMethodInternal` try/catch which will appropriately call `PublishEmptyCode` if there's a `TypeSystemException`.","Url":"https://github.com/dotnet/coreclr/pull/27028","RelatedDescription":"Open PR \"Fix crossgen2 skipped methods NullReferenceException\" (#27028)"},{"Id":"502339136","IsPullRequest":true,"CreatedAt":"2019-10-04T00:50:32","Actor":"EgorBo","Number":"27023","RawContent":null,"Title":"Make Path.DirectorySeparatorChar intrinsic","State":"closed","Body":"`Path.DirectorySeparatorChar` is a static readonly field, this PR makes it basically a const. CoreFX has ~45 usages. We can also remove static cctor now I think.\r\n I also wanted to make `Environment.NewLine` an intrinsic (requires changes in the jit interface) - let me know if it looks useful.\r\n\r\n```csharp\r\ninternal static bool IsDirectorySeparator(char c)\r\n{\r\n    return c == Path.DirectorySeparatorChar;\r\n}\r\n```\r\nWas:\r\n```asm\r\nG_M30566_IG01:\r\n       push     rsi\r\n       sub      rsp, 32\r\nG_M30566_IG02:\r\n       movzx    rsi, cx\r\n       mov      rcx, 0xD1FFAB1E\r\n       mov      edx, 0x630\r\n       call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE\r\n       movzx    rax, word  ptr [reloc classVar[0xd1ffab1e]]\r\n       cmp      esi, eax\r\n       sete     al\r\n       movzx    rax, al\r\nG_M30566_IG03:\r\n       add      rsp, 32\r\n       pop      rsi\r\n       ret      \r\n; Total bytes of code: 49\r\n```\r\nNow:\r\n```asm\r\nG_M30566_IG01:\r\nG_M30566_IG02:\r\n       movzx    rax, cx\r\n       cmp      eax, 92\r\n       sete     al\r\n       movzx    rax, al\r\nG_M30566_IG03:\r\n       ret      \r\n; Total bytes of code: 13\r\n\r\n```","Url":"https://github.com/dotnet/coreclr/pull/27023","RelatedDescription":"Closed or merged PR \"Make Path.DirectorySeparatorChar intrinsic\" (#27023)"},{"Id":"502362886","IsPullRequest":false,"CreatedAt":"2019-10-04T00:25:38","Actor":"erozenfeld","Number":"27027","RawContent":null,"Title":"Incorrect exception thrown when evaluating addition operands","State":"open","Body":"This program below incorrectly throws `DivideByZeroException` because `Run` method throws  `DivideByZeroException` instead of `NullReferenceException`.\r\n\r\n```\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\n\r\npublic struct S\r\n{\r\n    public int i;\r\n    public int j;\r\n}\r\n\r\npublic class Test\r\n{\r\n    public S s;\r\n    public int i;    \r\n    public static int Main()\r\n    {\r\n        try {\r\n            Run(null, 0);\r\n        }\r\n        catch (System.NullReferenceException)\r\n        {\r\n            return 100;\r\n        }\r\n\r\n        return -1;\r\n    }\r\n \r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static int Run(Test test, int j)\r\n    {\r\n        int k = test.s.i + 1/j;        \r\n        return k;\r\n    }    \r\n}\r\n```\r\n\r\nThe test is similar to #22556 (which has been fixed) but here the field is nested (`test.s.i`).\r\n","Url":"https://github.com/dotnet/coreclr/issues/27027","RelatedDescription":"Open issue \"Incorrect exception thrown when evaluating addition operands\" (#27027)"},{"Id":"502357904","IsPullRequest":true,"CreatedAt":"2019-10-04T00:07:33","Actor":"janvorli","Number":"27025","RawContent":null,"Title":"Improve superilc test copying speed and cleanup","State":"open","Body":"The superilc is copying all files that are not found to be managed\r\nassemblies from the original test folder to the target folder.\r\nThis includes .pdb and .ilk files that are huge and slow down the\r\ncopying process significantly. And they are not needed anyways. So this\r\nchange filters these files out.\r\n\r\nDuring cleanup, superilc was removing all .out folders. But I've found\r\nthat in most cases, I want it to remove only these folders for crossgen or\r\ncrossgen2 based on the compiler types selected using command line\r\noptions. This allows me to keep crossgen results and keep comparing them\r\nwith new crossgen2 results as I work on fixing issues.\r\nSo I have added such a functionality.","Url":"https://github.com/dotnet/coreclr/pull/27025","RelatedDescription":"Open PR \"Improve superilc test copying speed and cleanup\" (#27025)"},{"Id":"502347151","IsPullRequest":false,"CreatedAt":"2019-10-03T23:27:03","Actor":"brianrob","Number":"27024","RawContent":null,"Title":"LTTng Produces No Events On Official Builds","State":"open","Body":"On the .NET Core 3.0 official build as well as the latest official builds from master, LTTng produces no events.\r\n\r\nI've tracked this down to the FireEtXplat* functions being emitted as (essentially) nops in the official build.\r\n\r\nOfficial .NET Core 3.0 version of FireEtXplatR2RGetEntryPoint:\r\n\r\n```\r\n(lldb) di -n FireEtXplatR2RGetEntryPoint\r\nlibcoreclr.so`::FireEtXplatR2RGetEntryPoint(const unsigned long, PCWSTR, PCWSTR, PCWSTR, const unsigned long, const unsigned short):\r\n    0x7ffff7382ec0 <+0>: xorl   %eax, %eax\r\n    0x7ffff7382ec2 <+2>: retq\r\n```\r\n\r\nPrivate build of .NET Core 3.0 (same commit hash) of FireEtXplatR2RGetEntryPoint:\r\n\r\n```\r\n(lldb) di -n FireEtXplatR2RGetEntryPoint\r\nlibcoreclr.so`::FireEtXplatR2RGetEntryPoint(const unsigned long, PCWSTR, PCWSTR, PCWSTR, const unsigned long, const unsigned short):\r\n    0x7ffff7366e80 <+0>:    pushq  %rbp\r\n    0x7ffff7366e81 <+1>:    movq   %rsp, %rbp\r\n    0x7ffff7366e84 <+4>:    pushq  %r15\r\n    0x7ffff7366e86 <+6>:    pushq  %r14\r\n    0x7ffff7366e88 <+8>:    pushq  %r13\r\n    0x7ffff7366e8a <+10>:   pushq  %r12\r\n    0x7ffff7366e8c <+12>:   pushq  %rbx\r\n    0x7ffff7366e8d <+13>:   subq   $0x3b8, %rsp              ; imm = 0x3B8\r\n    0x7ffff7366e94 <+20>:   movq   %rcx, -0x3b8(%rbp)\r\n    0x7ffff7366e9b <+27>:   movq   %rdx, -0x3c0(%rbp)\r\n    0x7ffff7366ea2 <+34>:   movq   %rdi, -0x3d0(%rbp)\r\n    0x7ffff7366ea9 <+41>:   movq   %fs:0x28, %rax\r\n    0x7ffff7366eb2 <+50>:   movq   %rax, -0x30(%rbp)\r\n    0x7ffff7366eb6 <+54>:   cmpl   $0x0, 0x25ebab(%rip)      ; __tracepoint_DotNETRuntime___R2RGetEntryPoint + 7\r\n    0x7ffff7366ebd <+61>:   je     0x7ffff7366f1c            ; <+156> at stackstring.hpp\r\n    0x7ffff7366ebf <+63>:   movl   %r9d, %r14d\r\n    0x7ffff7366ec2 <+66>:   movq   %r8, %r13\r\n    0x7ffff7366ec5 <+69>:   leaq   -0x150(%rbp), %r12\r\n    0x7ffff7366ecc <+76>:   movq   %r12, -0x48(%rbp)\r\n    0x7ffff7366ed0 <+80>:   movl   $0x105, %eax              ; imm = 0x105\r\n    0x7ffff7366ed5 <+85>:   movq   %rax, %xmm0\r\n    0x7ffff7366eda <+90>:   movdqu %xmm0, -0x40(%rbp)\r\n    0x7ffff7366edf <+95>:   movq   %rsi, -0x3c8(%rbp)\r\n    0x7ffff7366ee6 <+102>:  movq   %rsi, %rdi\r\n    0x7ffff7366ee9 <+105>:  callq  0x7ffff72e4da0            ; ::PAL_wcslen(const wchar_16 *) at wchar.cpp:664\r\n    0x7ffff7366eee <+110>:  leal   (%rax,%rax), %eax\r\n    0x7ffff7366ef1 <+113>:  addl   $0x2, %eax\r\n    0x7ffff7366ef4 <+116>:  movslq %eax, %r15\r\n    0x7ffff7366ef7 <+119>:  movq   -0x48(%rbp), %rbx\r\n    0x7ffff7366efb <+123>:  testq  %rbx, %rbx\r\n    0x7ffff7366efe <+126>:  je     0x7ffff7366f36            ; <+182> [inlined] StackString<260ul, char>::Resize(unsigned long) at stackstring.hpp:159\r\n    0x7ffff7366f00 <+128>:  cmpq   %r15, -0x40(%rbp)\r\n    0x7ffff7366f04 <+132>:  movl   %r14d, -0x3a8(%rbp)\r\n    0x7ffff7366f0b <+139>:  movl   %eax, -0x3b0(%rbp)\r\n    0x7ffff7366f11 <+145>:  jbe    0x7ffff7366f50            ; <+208> [inlined] StackString<260ul, char>::Resize(unsigned long) + 26 at stackstring.hpp:159\r\n    0x7ffff7366f13 <+147>:  movq   %r15, -0x38(%rbp)\r\n…snip…\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27024","RelatedDescription":"Open issue \"LTTng Produces No Events On Official Builds\" (#27024)"},{"Id":"502319419","IsPullRequest":false,"CreatedAt":"2019-10-03T21:57:57","Actor":"cshung","Number":"27021","RawContent":null,"Title":"[crossgen2] Produce the READYTORUN_SECTION_ATTRIBUTEPRESENCE section","State":"open","Body":"When compiling `System.Private.CoreLib.dll`, a section named `READYTORUN_SECTION_ATTRIBUTEPRESENCE ` is produced. Currently, it is not produced by `crossgen2`.\r\n\r\nThe issue is created to track the work of producing the section.\r\n\r\nThe section content can be inspected using \r\n\r\n```\r\ncd c:\\Dev\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\\r\ndotnet exec r2rdump.dll --sc --in C:\\Dev\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\System.Private.CoreLib.dll\r\n```\r\n\r\nSuccessful implementation of the feature should produce the same blob. [Followup - should they be bit-by-bit identical is unknown for now].","Url":"https://github.com/dotnet/coreclr/issues/27021","RelatedDescription":"Open issue \"[crossgen2] Produce the READYTORUN_SECTION_ATTRIBUTEPRESENCE section\" (#27021)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"502916432","IsPullRequest":true,"CreatedAt":"2019-10-05T05:25:25","Actor":"dotnet-maestro[bot]","Number":"12818","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.16\r\n- **Date Produced**: 10/5/2019 3:32 AM\r\n- **Commit**: 96ed7d1ffb1a3662751bc650a8d6bd09511f11e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19504.16\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19504.16\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12818","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12818)"},{"Id":"502914624","IsPullRequest":true,"CreatedAt":"2019-10-05T04:30:13","Actor":"dotnet-maestro[bot]","Number":"12817","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191004.8\r\n- **Date Produced**: 10/5/2019 4:09 AM\r\n- **Commit**: 683f7f7102131ec623409c9fae4c17bcc261d986\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19504.8\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12817","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12817)"},{"Id":"502911801","IsPullRequest":true,"CreatedAt":"2019-10-05T04:27:34","Actor":"dotnet-maestro[bot]","Number":"12816","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.15\r\n- **Date Produced**: 10/5/2019 2:41 AM\r\n- **Commit**: ea8a25eb0679dc4d940623688189885086286adc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19504.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview1.19504.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview1.19504.6 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12816","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12816)"},{"Id":"502905185","IsPullRequest":true,"CreatedAt":"2019-10-05T03:15:05","Actor":"dotnet-maestro[bot]","Number":"12815","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/5/2019 1:35 AM\r\n- **Commit**: a92f8ffa177a5f4d1189f211049f094fe09e76c5\r\n- **Branch**: refs/heads/release/3.1-preview1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview1.19504.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12815","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12815)"},{"Id":"502902943","IsPullRequest":true,"CreatedAt":"2019-10-05T02:45:29","Actor":"dotnet-maestro[bot]","Number":"12814","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.14\r\n- **Date Produced**: 10/5/2019 12:31 AM\r\n- **Commit**: b903a6e815dbcec7acfeef39db1e9189fef7ed69\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19504.14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19504.14\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12814","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12814)"},{"Id":"502901846","IsPullRequest":true,"CreatedAt":"2019-10-05T02:30:28","Actor":"dotnet-maestro[bot]","Number":"12813","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.13\r\n- **Date Produced**: 10/5/2019 12:20 AM\r\n- **Commit**: fd1162d3db7db9c79bf01d32604862f4bee25b96\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19504.13\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview1.19504.13\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12813","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12813)"},{"Id":"502763676","IsPullRequest":true,"CreatedAt":"2019-10-05T00:04:00","Actor":"nguerrera","Number":"12810","RawContent":null,"Title":"Pin reference assemblies to 3.0.0 and bump stage 0 to 3.0.100","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/12810","RelatedDescription":"Closed or merged PR \"Pin reference assemblies to 3.0.0 and bump stage 0 to 3.0.100\" (#12810)"},{"Id":"502815258","IsPullRequest":true,"CreatedAt":"2019-10-04T20:25:29","Actor":"dotnet-maestro[bot]","Number":"12812","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.7\r\n- **Date Produced**: 10/4/2019 6:25 PM\r\n- **Commit**: b31e800a7d2da49669972a5abdc6115e08f58e64\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19504.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19504.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19504.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19504.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19504.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12812","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12812)"},{"Id":"502767116","IsPullRequest":true,"CreatedAt":"2019-10-04T18:28:28","Actor":"dotnet-maestro[bot]","Number":"12811","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/4/2019 5:40 PM\r\n- **Commit**: 484317f665ca9fd05897f864639d639e7238cbbd\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19504.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12811","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12811)"},{"Id":"502753485","IsPullRequest":false,"CreatedAt":"2019-10-04T17:22:49","Actor":"MikhailArkhipov","Number":"12809","RawContent":null,"Title":"Failed to create CoreCLR, HRESULT: 0x80004005 when using VS Core Python in remote","State":"open","Body":"@phx-srankin \r\nhttps://github.com/microsoft/python-language-server/issues/1595\r\n\r\n## Steps to reproduce\r\n- VsCode + Python extension with [remote](https://code.visualstudio.com/docs/remote/remote-overview)\r\n- Set `python.jediEnabled = false` in settings to switch to Microsoft Python Language Server\r\nOpen Python project from code opened out of a Debian terminal running in WSL.\r\n\r\n### Notes:\r\nMicrosoft Python Language Server is .NET Core 3.0 https://github.com/microsoft/python-language-server, built self-contained.\r\nPython extension unzips it into `languageServer*` folder under the extension.\r\n\r\n## Expected  behavior\r\nWork normally\r\n\r\n## Actual behavior\r\nFailed to create CoreCLR, HRESULT: 0x80004005\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\nPython:\r\nExtension version: 2019.9.34911\r\nVS Code version: Code 1.38.1 (b37e54c98e1a74ba89e03073e5a3761284e3ffb0, 2019-09-11T13:35:15.005Z)\r\nOS version: Windows_NT x64 10.0.18362\r\nRemote OS version: Linux x64 4.4.0-18362-Microsoft\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12809","RelatedDescription":"Open issue \"Failed to create CoreCLR, HRESULT: 0x80004005 when using VS Core Python in remote\" (#12809)"},{"Id":"502431482","IsPullRequest":true,"CreatedAt":"2019-10-04T15:44:37","Actor":"dotnet-maestro[bot]","Number":"12801","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191003.31\r\n- **Date Produced**: 10/4/2019 4:30 AM\r\n- **Commit**: a7b739bab3b1d310eeec6aef551ce39650bdcf24\r\n- **Branch**: refs/heads/release/3.1-preview1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview1.19503.31\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12801","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12801)"},{"Id":"502640884","IsPullRequest":true,"CreatedAt":"2019-10-04T15:41:14","Actor":"dotnet-maestro[bot]","Number":"12807","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/4/2019 12:23 PM\r\n- **Commit**: 50de4c0d1f33599adc6d71ae6d5b8783140c0b83\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19504.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19504.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19504.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview1.19504.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview1.19504.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12807","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12807)"},{"Id":"502375696","IsPullRequest":false,"CreatedAt":"2019-10-04T15:35:19","Actor":"hlubovac","Number":"12799","RawContent":null,"Title":"\"The current .NET SDK does not support targeting .NET Core 3.0.\"","State":"closed","Body":"I can't make my system/VS recognize dotnet SDK 3.0, which I just installed today. Obviously, I rebooted, and googled, and checked all hints listed here: https://www.ryadel.com/en/current-net-sdk-not-support-net-core-3-0-fix/\r\n\r\nFor some reason, my system is using sdk 2.2 to compile a project targeting 3.0, while dotnet 3.0 sdk is installed and default. The error message that I'm getting is this:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\r\n```\r\nThis screenshot contains a lot of relevant info, I think - please let me know if I missed showing something:\r\n![image](https://user-images.githubusercontent.com/3127736/66174471-06d20780-e60a-11e9-8e7f-23d1011abd58.png)\r\n\r\nThank you!\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12799","RelatedDescription":"Closed issue \"\"The current .NET SDK does not support targeting .NET Core 3.0.\"\" (#12799)"},{"Id":"502703591","IsPullRequest":false,"CreatedAt":"2019-10-04T15:31:13","Actor":"luhis","Number":"12808","RawContent":null,"Title":"dotnet restore fails on Ubuntu 16.04","State":"open","Body":"I have updated my site to dotnet core 3.0, but it fails to restore the packages.  Dotnet restore just hangs.  Reverting back to my old core 2.2 version worked.  I tried using a brand new Ubuntu Server 16.04 image and it restored just fine.  It looks like a similar issue to this https://github.com/dotnet/cli/issues/11560 however setting MSBUILDDISABLENODEREUSE=1 made no difference\r\n\r\n## Steps to reproduce\r\ngit clone https://github.com/luhis/CodeGolf.git\r\ncd CodeGolf\r\ndotnet restore\r\n\r\n## Expected  behavior\r\nnuget packages would be restored\r\n\r\n## Actual behavior\r\nProcess hangs and never completes\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.                                                              App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download","Url":"https://github.com/dotnet/cli/issues/12808","RelatedDescription":"Open issue \"dotnet restore fails on Ubuntu 16.04\" (#12808)"},{"Id":"502234222","IsPullRequest":false,"CreatedAt":"2019-10-04T13:02:36","Actor":"los93sol","Number":"12795","RawContent":null,"Title":"dotnet tool install fails behind authenticated proxy on linux","State":"closed","Body":"## Steps to reproduce\r\nexport http_proxy=<proxy info here>\r\nexport https_proxy=<proxy info here>\r\ndotnet tool install --global dotnet-trace\r\n\r\n## Expected  behavior\r\nIt should install the dotnet-trace tool\r\n\r\n## Actual behavior\r\nIt fails with\r\n/dotnet/sdk/3.0.100/NuGet.targets(123,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/tmp/nmcypofv.dnl/restore.csproj]\r\n/dotnet/sdk/3.0.100/NuGet.targets(123,5): error :   Response status code does not indicate success: 407 (authenticationrequired). [/tmp/nmcypofv.dnl/restore.csproj]\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12795","RelatedDescription":"Closed issue \"dotnet tool install fails behind authenticated proxy on linux\" (#12795)"},{"Id":"502592404","IsPullRequest":true,"CreatedAt":"2019-10-04T12:20:35","Actor":"dotnet-maestro[bot]","Number":"12806","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191004.1\r\n- **Date Produced**: 10/4/2019 11:36 AM\r\n- **Commit**: 7def7a9c5adc9e4d52a4cf19eee2c3998e3f3b93\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19504.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12806","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12806)"},{"Id":"502577181","IsPullRequest":false,"CreatedAt":"2019-10-04T11:13:27","Actor":"am11","Number":"12805","RawContent":null,"Title":"Display template version with dotnet-new --list","State":"open","Body":"## Steps to reproduce\r\n\r\n```sh\r\ndotnet new --install giraffe-template::0.20.0\r\ndotnet new --list | grep 'Tem\\|----\\|gir'\r\n```\r\n\r\n## Expected  behavior\r\n```sh\r\nTemplates                          Version                 Short Name               Language          Tags                                 \r\n----------------------------------------------------------------------------------------------------------------------------------\r\nGiraffe Web App                    0.20.0                   giraffe                  F#                Web/Giraffe/ASP.NET  \r\n```\r\n\r\n## Actual behavior\r\n\r\n```sh\r\nTemplates                                         Short Name               Language          Tags                                 \r\n----------------------------------------------------------------------------------------------------------------------------------\r\nGiraffe Web App                                   giraffe                  F#                Web/Giraffe/ASP.NET  \r\n```\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12805","RelatedDescription":"Open issue \"Display template version with dotnet-new --list\" (#12805)"},{"Id":"502523602","IsPullRequest":true,"CreatedAt":"2019-10-04T09:50:32","Actor":"dotnet-maestro[bot]","Number":"12804","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.14\r\n- **Date Produced**: 10/4/2019 8:06 AM\r\n- **Commit**: 36e40e331b31d9c220fd2553a0a8784d59985c47\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19503.14\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19503.14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19503.14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19503.14\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview1.19503.14\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12804","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12804)"},{"Id":"502516674","IsPullRequest":true,"CreatedAt":"2019-10-04T09:35:32","Actor":"dotnet-maestro[bot]","Number":"12803","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.13\r\n- **Date Produced**: 10/4/2019 6:49 AM\r\n- **Commit**: 21049ddbb7aa7e3e46451aeedd74444a6c931058\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19503.13\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19503.13\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19503.13\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19503.13\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19503.13\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12803","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12803)"},{"Id":"502440619","IsPullRequest":true,"CreatedAt":"2019-10-04T06:25:29","Actor":"dotnet-maestro[bot]","Number":"12802","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.11\r\n- **Date Produced**: 10/4/2019 4:29 AM\r\n- **Commit**: fef0b65d2ca31f8217020764225a80e05acba8f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19503.11\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19503.11\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19503.11\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19503.11\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19503.11\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12802","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12802)"},{"Id":"502390045","IsPullRequest":true,"CreatedAt":"2019-10-04T05:31:26","Actor":"dotnet-maestro[bot]","Number":"12800","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.10\r\n- **Date Produced**: 10/4/2019 3:36 AM\r\n- **Commit**: b7f5e5baaad8db911cd570be55550728126014ad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19503.10\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19503.10\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19503.10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19503.10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19503.10\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12800","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12800)"},{"Id":"502341252","IsPullRequest":true,"CreatedAt":"2019-10-03T23:40:29","Actor":"dotnet-maestro[bot]","Number":"12798","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.8\r\n- **Date Produced**: 10/3/2019 9:41 PM\r\n- **Commit**: f6f74dbe9fa35fb0c17d8412d4415dbb44cb734a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19503.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19503.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19503.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19503.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19503.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12798","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12798)"},{"Id":"502310880","IsPullRequest":true,"CreatedAt":"2019-10-03T22:10:28","Actor":"dotnet-maestro[bot]","Number":"12797","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191003.9\r\n- **Date Produced**: 10/3/2019 8:46 PM\r\n- **Commit**: c36b12bd5f139bb6b363557efdd25a19651bf642\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19503.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12797","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12797)"},{"Id":"502283900","IsPullRequest":true,"CreatedAt":"2019-10-03T21:10:33","Actor":"dotnet-maestro[bot]","Number":"12796","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191003.1\r\n- **Date Produced**: 10/3/2019 7:58 PM\r\n- **Commit**: 9fa3ace9cfd9d9517618ce73dd41b522e24f749f\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19503.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12796","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12796)"},{"Id":"502000497","IsPullRequest":true,"CreatedAt":"2019-10-03T20:54:36","Actor":"dotnet-maestro[bot]","Number":"12793","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.6\r\n- **Date Produced**: 10/3/2019 6:28 PM\r\n- **Commit**: f2e7433d926d4067e779f85642b98c89506ecf27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19503.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19503.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19503.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19503.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19503.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12793","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12793)"},{"Id":"502124262","IsPullRequest":false,"CreatedAt":"2019-10-03T15:09:58","Actor":"brunomartinspro","Number":"12794","RawContent":null,"Title":"Have an Object output instead of string","State":"closed","Body":"Having a string as an output to dotnet list package is not machine friendly.. we need objects to be able to parse this and use it.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12794","RelatedDescription":"Closed issue \"Have an Object output instead of string\" (#12794)"},{"Id":"501817834","IsPullRequest":true,"CreatedAt":"2019-10-03T14:45:52","Actor":"dotnet-maestro[bot]","Number":"12790","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191002.23\r\n- **Date Produced**: 10/3/2019 1:52 AM\r\n- **Commit**: d34d1570bfdf669ed94b4c939b2f39a1650e2320\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.1\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.1\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12790","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12790)"},{"Id":"501865849","IsPullRequest":true,"CreatedAt":"2019-10-03T06:20:30","Actor":"dotnet-maestro[bot]","Number":"12792","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191002.25\r\n- **Date Produced**: 10/3/2019 4:37 AM\r\n- **Commit**: 58df33a9d497a5a68af81c33cdbcb31180613ea7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19502.25\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19502.25\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19502.25\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19502.25\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19502.25\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12792","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12792)"},{"Id":"501851017","IsPullRequest":true,"CreatedAt":"2019-10-03T05:25:28","Actor":"dotnet-maestro[bot]","Number":"12791","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191002.24\r\n- **Date Produced**: 10/3/2019 3:42 AM\r\n- **Commit**: 58df33a9d497a5a68af81c33cdbcb31180613ea7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19502.24\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19502.24\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19502.24\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19502.24\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19502.24\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12791","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12791)"},{"Id":"501817771","IsPullRequest":true,"CreatedAt":"2019-10-03T03:05:30","Actor":"dotnet-maestro[bot]","Number":"12789","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191002.20\r\n- **Date Produced**: 10/3/2019 1:11 AM\r\n- **Commit**: b3218cd12e968f539c95447da90608357ebda318\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19502.20\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19502.20\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19502.20\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19502.20\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19502.20\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12789","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12789)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"502601357","IsPullRequest":true,"CreatedAt":"2019-10-04T12:26:51","Actor":"dotnet-maestro[bot]","Number":"1589","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191003.5\r\n- **Date Produced**: 10/4/2019 1:12 AM\r\n- **Commit**: eff9fbf446468ca411bf5e0475916f316eea7223\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19503.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1589","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1589)"},{"Id":"502231307","IsPullRequest":false,"CreatedAt":"2019-10-03T18:40:35","Actor":"lucbueno54","Number":"1588","RawContent":null,"Title":"When referring to a net462 project in NETStandard of ProjectReference, it is supplied with AssemblyName in nuget generation","State":"open","Body":"Create references to two net462 projects in NETStandard and enable automatic nuget generation (GeneratePackageOnBuild = true). \r\n\r\nAn important detail that is AssemblyName is different from the csproj file. \r\n\r\nExample: \r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>Nuget.NetStandardClassLibrary</id>\r\n    <version>19.9.0</version>\r\n    <authors>Nuget.NetStandardClassLibrary</authors>\r\n    <owners>Nuget.NetStandardClassLibrary</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Package Description</description>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"nuget.AnotherStandardClassLibrary\" version=\"198.0.0\" exclude=\"Build,Analyzers\" />    <= NETStandard\r\n        <dependency id=\"FrameworkClassLibrary\" version=\"1.0.0\" exclude=\"Build,Analyzers\" /> <= net462 \r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n\r\n\r\nhttps://github.com/lucbueno54/dotnetStandardReferencesTest ","Url":"https://github.com/dotnet/standard/issues/1588","RelatedDescription":"Open issue \"When referring to a net462 project in NETStandard of ProjectReference, it is supplied with AssemblyName in nuget generation\" (#1588)"},{"Id":"502031073","IsPullRequest":true,"CreatedAt":"2019-10-03T12:29:49","Actor":"dotnet-maestro[bot]","Number":"1587","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191002.6\r\n- **Date Produced**: 10/3/2019 2:33 AM\r\n- **Commit**: c8c2917540a568869ba761afa6e4dba6edeb433b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19502.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1587","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1587)"},{"Id":"502022842","IsPullRequest":true,"CreatedAt":"2019-10-03T12:11:49","Actor":"dotnet-maestro[bot]","Number":"1586","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191002.11\r\n- **Date Produced**: 10/2/2019 11:34 PM\r\n- **Commit**: da75c6547c64a91eb8a9cecf8c503331c2cc394a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19502.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1586","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1586)"},{"Id":"501454733","IsPullRequest":true,"CreatedAt":"2019-10-02T12:30:46","Actor":"dotnet-maestro[bot]","Number":"1585","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191001.13\r\n- **Date Produced**: 10/2/2019 4:05 AM\r\n- **Commit**: dcc9f626eeb0751d4ba4499f623aac42d2e95c10\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19501.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19501.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19501.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1585","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1585)"},{"Id":"501445824","IsPullRequest":true,"CreatedAt":"2019-10-02T12:11:47","Actor":"dotnet-maestro[bot]","Number":"1584","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191001.4\r\n- **Date Produced**: 10/1/2019 10:24 PM\r\n- **Commit**: c21a409f11386d22c6083198176868d3974de832\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19501.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1584)"},{"Id":"500858343","IsPullRequest":true,"CreatedAt":"2019-10-01T12:30:06","Actor":"dotnet-maestro[bot]","Number":"1583","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190930.12\r\n- **Date Produced**: 10/1/2019 3:39 AM\r\n- **Commit**: 969ce665afee70b2d591e5c271525c927a8834d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19480.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19480.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19480.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1583","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1583)"},{"Id":"500849552","IsPullRequest":true,"CreatedAt":"2019-10-01T12:11:41","Actor":"dotnet-maestro[bot]","Number":"1582","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190930.3\r\n- **Date Produced**: 9/30/2019 8:25 PM\r\n- **Commit**: 238f1bbb23ba67616818d0b242c5b55a18edec55\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19480.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1582","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1582)"},{"Id":"499857194","IsPullRequest":false,"CreatedAt":"2019-09-29T04:57:44","Actor":"B16180339","Number":"1581","RawContent":null,"Title":"Dotnet","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1581","RelatedDescription":"Closed issue \"Dotnet\" (#1581)"},{"Id":"499764886","IsPullRequest":true,"CreatedAt":"2019-09-28T12:28:37","Actor":"dotnet-maestro[bot]","Number":"1580","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190927.7\r\n- **Date Produced**: 9/28/2019 1:48 AM\r\n- **Commit**: 7e9a177824cbefaee8985a9b517ebb0ea2e17a81\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19477.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1580","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1580)"},{"Id":"499762811","IsPullRequest":true,"CreatedAt":"2019-09-28T12:11:24","Actor":"dotnet-maestro[bot]","Number":"1579","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190927.2\r\n- **Date Produced**: 9/27/2019 6:33 PM\r\n- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19477.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1579","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1579)"},{"Id":"499412533","IsPullRequest":true,"CreatedAt":"2019-09-27T12:28:38","Actor":"dotnet-maestro[bot]","Number":"1578","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190926.10\r\n- **Date Produced**: 9/27/2019 5:59 AM\r\n- **Commit**: 296c0e71ddcc4885d30af18dea829c1923cfdc5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19476.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1578","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1578)"},{"Id":"499405308","IsPullRequest":true,"CreatedAt":"2019-09-27T12:11:32","Actor":"dotnet-maestro[bot]","Number":"1577","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190926.6\r\n- **Date Produced**: 9/27/2019 1:21 AM\r\n- **Commit**: b449f372df1a3374ebdc85f42ff137dcda08776b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19476.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1577","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1577)"},{"Id":"498397654","IsPullRequest":true,"CreatedAt":"2019-09-26T15:09:19","Actor":"dotnet-maestro[bot]","Number":"1574","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1574","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1574)"},{"Id":"498433598","IsPullRequest":true,"CreatedAt":"2019-09-26T15:08:53","Actor":"mmitche","Number":"1575","RawContent":null,"Title":"Update to non prerelease","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1575","RelatedDescription":"Closed or merged PR \"Update to non prerelease\" (#1575)"},{"Id":"498844948","IsPullRequest":true,"CreatedAt":"2019-09-26T12:22:45","Actor":"dotnet-maestro[bot]","Number":"1576","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190926.1\r\n- **Date Produced**: 9/26/2019 9:11 AM\r\n- **Commit**: 0a1850cc370986c7348e09bcd1c1adcf522d6db3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19476.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19476.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19476.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1576","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1576)"},{"Id":"498249739","IsPullRequest":true,"CreatedAt":"2019-09-25T12:30:34","Actor":"dotnet-maestro[bot]","Number":"1573","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 7:06 PM\r\n- **Commit**: da147ece700c2502b91e57d99213feadcfb9c1f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19474.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1573","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1573)"},{"Id":"498239365","IsPullRequest":true,"CreatedAt":"2019-09-25T12:10:59","Actor":"dotnet-maestro[bot]","Number":"1572","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:15 AM\r\n- **Commit**: ef4b288de587f0b86e65b3950e9095f714808ade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19473.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1572","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1572)"},{"Id":"498151562","IsPullRequest":false,"CreatedAt":"2019-09-25T09:07:45","Actor":"NicolasDorier","Number":"1571","RawContent":null,"Title":"Github does not render the diff files of netstandard2.1 correctly","State":"open","Body":"In the [diff for netstandard2.1](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.1_diff.md), Github is showing `(Sorry about that, but we can’t show files that are this big right now.)` instead of a nicely formatted diff.\r\n\r\nProposed workaround:\r\n\r\n* Ping the github team to increase the limit\r\n* Send the dotnet team in holiday during the development of netstandard2.2 so the diff file get smaller.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1571","RelatedDescription":"Open issue \"Github does not render the diff files of netstandard2.1 correctly\" (#1571)"},{"Id":"497649559","IsPullRequest":true,"CreatedAt":"2019-09-24T12:24:38","Actor":"dotnet-maestro[bot]","Number":"1570","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/23/2019 10:04 PM\r\n- **Commit**: 485441f79ead7878af206a6af61a300e1458616a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1570","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1570)"},{"Id":"497622081","IsPullRequest":false,"CreatedAt":"2019-09-24T11:15:45","Actor":"GammaFour","Number":"1569","RawContent":null,"Title":"Massive problems with no support of UWP in .NET Standard 2.1","State":"open","Body":"How can you release .NET Standard 2.1 and not support UWP? I made the mistake of upgrading my NuGet packages yesterday to the recommended versions and I've been untangling this mess ever since. My server code wants to be .NET Standard 2.1. So I go through and retarget all my common libraries only to find that I've screwed the pooch on my UWP client. This is seriously a big miss.","Url":"https://github.com/dotnet/standard/issues/1569","RelatedDescription":"Open issue \"Massive problems with no support of UWP in .NET Standard 2.1\" (#1569)"},{"Id":"497566465","IsPullRequest":false,"CreatedAt":"2019-09-24T09:24:09","Actor":"nikolay-dimitrov","Number":"1568","RawContent":null,"Title":"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found","State":"open","Body":"I have custom method over DbContext(EF 6.3) with class library targeting .NET Framework 4.7.1\r\nIm trying to migrate to .NET Standart 2.1 but into the both cases i got this error when im calling the method above from any places(the example is calling from .NET Standart 2.1 library with installed EF 6.3)\r\n\r\n    public static async Task<IList<T>> SqlQueryAsync<T>(this DbContext db, CommandType type, string sql, List<SqlParameter> parameters) where T : new()\r\n        {\r\n            var conn = db.Database.Connection.State;\r\n\r\n            if (conn == ConnectionState.Closed)\r\n                await db.Database.Connection.OpenAsync();\r\n            using (var command =  db.Database.Connection.CreateCommand())\r\n            {\r\n                command.CommandText = sql;\r\n                command.CommandType = type;\r\n                if (parameters != null && parameters.Count() > 0)\r\n                {\r\n                    foreach (var item in parameters)\r\n                    {\r\n                        DbParameter p = command.CreateParameter();\r\n                        p.DbType = item.DbType;\r\n                        p.ParameterName = item.ParameterName;\r\n                        p.Value = item.Value;\r\n                        command.Parameters.Add(p);\r\n                    }\r\n                }\r\n                var propts = typeof(T).GetProperties();\r\n                var rtnList = new List<T>();\r\n                T model;\r\n                object val;\r\n                using (var reader = await command.ExecuteReaderAsync())\r\n                {\r\n                    while (await reader.ReadAsync())\r\n                    {\r\n                        model = new T();\r\n                        foreach (var l in propts)\r\n                        {\r\n\r\n                            if (Enumerable.Range(0, reader.FieldCount).Any(i => string.Equals(reader.GetName(i), l.Name, StringComparison.OrdinalIgnoreCase)))\r\n                            {\r\n                                val = reader[l.Name];\r\n                                if (val == DBNull.Value)\r\n                                    l.SetValue(model, null);\r\n                                else\r\n                                    l.SetValue(model, val);\r\n                            }\r\n                            \r\n                        }\r\n                        rtnList.Add(model);\r\n                    }\r\n                }\r\n                return rtnList;\r\n            }\r\n        }\r\n\r\nI found simular issue https://github.com/dotnet/corefx/issues/27247# but the proposals there do not resolve the error","Url":"https://github.com/dotnet/standard/issues/1568","RelatedDescription":"Open issue \"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found\" (#1568)"},{"Id":"497516549","IsPullRequest":false,"CreatedAt":"2019-09-24T07:46:11","Actor":"YZahringer","Number":"1567","RawContent":null,"Title":".NET Standard 2.1 support on Universal Windows Platform","State":"open","Body":"Regarding the support of `.NET Standard 2.1` in UWP projects, it is written that it will be supported in the upcoming version.\r\n\r\nThis means that there will be the same problem as with the `.NET Standard 2.0` version and that we will not be able to target older versions of Windows 10? `.NET Standard 2.0` requires as min target version Windows 10 Fall Creators Update `16299`.\r\n\r\nThis is a big problem for my projects and backward compatibility. I can't remove support for older versions of Windows 10, especially `LTSC` editions. This means that my projects are blocked in `.NET Standard 1.4` and it also blocks any dependency updates:\r\n- `Xamarin.Forms 2.5` because version `>=3.0` requires `.NET Standard 2.0`\r\n- `Microsoft.EntityFrameworkCore 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n- `.NET Core 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n\r\nI can't ask my users to have the latest version installed, especially in business applications and Windows `LTSC` editions. I have to wait several years before removing the support of an old version.\r\n\r\nIs it planned to continue support the min target version `16299` of UWP projects with `.NET Standard 2.1`? I understand the constraints, but with Xcode I can still min target `iOS 7` and with Android I can still min target `4.4 KitKat`, still with the latest version of frameworks. And with Windows I can only support the latest version? That doesn't make much sense.","Url":"https://github.com/dotnet/standard/issues/1567","RelatedDescription":"Open issue \".NET Standard 2.1 support on Universal Windows Platform\" (#1567)"},{"Id":"497453537","IsPullRequest":false,"CreatedAt":"2019-09-24T04:51:49","Actor":"shyamutty","Number":"1566","RawContent":null,"Title":"Grpc .net client issue with .NET Core and .NET standard (2.0)","State":"closed","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Closed issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566)"},{"Id":"497424795","IsPullRequest":false,"CreatedAt":"2019-09-24T02:51:23","Actor":"goldmannyc","Number":"1565","RawContent":null,"Title":"Where to download the netstandard.dll 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1565","RelatedDescription":"Open issue \"Where to download the netstandard.dll 2.1?\" (#1565)"},{"Id":"497309683","IsPullRequest":true,"CreatedAt":"2019-09-23T20:25:00","Actor":"terrajobst","Number":"1564","RawContent":null,"Title":"Ns21 summary","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Closed or merged PR \"Ns21 summary\" (#1564)"},{"Id":"497303937","IsPullRequest":true,"CreatedAt":"2019-09-23T20:15:45","Actor":"terrajobst","Number":"1563","RawContent":null,"Title":"Update diffs to final product","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1563","RelatedDescription":"Closed or merged PR \"Update diffs to final product\" (#1563)"},{"Id":"497024033","IsPullRequest":false,"CreatedAt":"2019-09-23T10:49:00","Actor":"yb199478","Number":"1562","RawContent":null,"Title":"Is it possible to add a method that kills the process tree?","State":"open","Body":".Net standard does not provide any method to kill a process tree.","Url":"https://github.com/dotnet/standard/issues/1562","RelatedDescription":"Open issue \"Is it possible to add a method that kills the process tree?\" (#1562)"},{"Id":"496771346","IsPullRequest":true,"CreatedAt":"2019-09-22T12:23:49","Actor":"dotnet-maestro[bot]","Number":"1561","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190921.2\r\n- **Date Produced**: 9/21/2019 6:26 PM\r\n- **Commit**: 4c074ae47660448eae66a362076124177709640a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19471.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1561","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1561)"},{"Id":"496650404","IsPullRequest":true,"CreatedAt":"2019-09-21T12:33:22","Actor":"dotnet-maestro[bot]","Number":"1560","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 4:58 PM\r\n- **Commit**: 0286bce5fd360207ca707fe7024248be428cf0e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1560","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1560)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"502915689","IsPullRequest":false,"CreatedAt":"2019-10-05T04:45:29","Actor":"kbetmp001","Number":"41570","RawContent":null,"Title":"mistakes on WebUtility.HtmlEncode","State":"open","Body":"https://github.com/dotnet/corefx/blob/99ea2b5aebf7361a5baa638c978cb6214fca5217/src/System.Runtime.Extensions/src/System/Net/WebUtility.cs#L651\r\n\r\nshould be \r\n`char leadingSurrogate = input[index];`","Url":"https://github.com/dotnet/corefx/issues/41570","RelatedDescription":"Open issue \"mistakes on WebUtility.HtmlEncode\" (#41570)"},{"Id":"502899623","IsPullRequest":true,"CreatedAt":"2019-10-05T03:11:37","Actor":"dotnet-maestro[bot]","Number":"41565","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191004.3\r\n- **Date Produced**: 10/4/2019 10:28 PM\r\n- **Commit**: 28f54a4013e85774e2a2793c5c7ca2b36948f996\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview1.19504.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview1.19504.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview1.19504.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41565","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41565)"},{"Id":"502903467","IsPullRequest":true,"CreatedAt":"2019-10-05T02:11:15","Actor":"stephentoub","Number":"41569","RawContent":null,"Title":"Replace Stack with Stack<T> in XmlDataLoader","State":"open","Body":"This looks like the only remaining uses of the non-generic Stack in a trimmed web api app.","Url":"https://github.com/dotnet/corefx/pull/41569","RelatedDescription":"Open PR \"Replace Stack with Stack<T> in XmlDataLoader\" (#41569)"},{"Id":"502902579","IsPullRequest":true,"CreatedAt":"2019-10-05T02:01:37","Actor":"stephentoub","Number":"41568","RawContent":null,"Title":"Remove unused usings from System.Security.Cryptography.Xml","State":"open","Body":"I was looking for uses of \"using System.Linq;\".  One file had it, but it turned out to be unused/unnecessary, so as long as I was removing it, I ran VS' \"remove unused usings\" on the project.","Url":"https://github.com/dotnet/corefx/pull/41568","RelatedDescription":"Open PR \"Remove unused usings from System.Security.Cryptography.Xml\" (#41568)"},{"Id":"502901517","IsPullRequest":true,"CreatedAt":"2019-10-05T01:52:12","Actor":"stephentoub","Number":"41567","RawContent":null,"Title":"Remove System.Linq dependency from System.Security.Cryptography.Encoding","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/41567","RelatedDescription":"Open PR \"Remove System.Linq dependency from System.Security.Cryptography.Encoding\" (#41567)"},{"Id":"502900503","IsPullRequest":true,"CreatedAt":"2019-10-05T01:40:33","Actor":"stephentoub","Number":"41566","RawContent":null,"Title":"Remove System.Linq dependency from System.Net.NetworkInformation","State":"open","Body":"It was only being used on Unix, and the uses are all easily replaced with more efficient implementations.","Url":"https://github.com/dotnet/corefx/pull/41566","RelatedDescription":"Open PR \"Remove System.Linq dependency from System.Net.NetworkInformation\" (#41566)"},{"Id":"502897590","IsPullRequest":true,"CreatedAt":"2019-10-05T01:08:42","Actor":"stephentoub","Number":"41564","RawContent":null,"Title":"Remove System.Linq dependency from System.Security.Cryptography.X509Certificates","State":"open","Body":"System.Linq was only being used in two places:\r\n- In Pkcs10CertificateRequestInfo, it was using Collection<>.Select(...).ToArray().  We can replace it with a simple for loop, which is both faster (e.g. fewer delegate invocations) and fewer generic instantiations (no one else is going to have an instantiation with AttributeAsn).\r\n- In LoadMachineStores on Linux, it was using Prepend.  We can avoid the need for Prepend (and the associated allocations) entirely by slightly reorganizing the method and using a local function.","Url":"https://github.com/dotnet/corefx/pull/41564","RelatedDescription":"Open PR \"Remove System.Linq dependency from System.Security.Cryptography.X509Certificates\" (#41564)"},{"Id":"502897488","IsPullRequest":false,"CreatedAt":"2019-10-05T01:07:39","Actor":"tracker1","Number":"41563","RawContent":null,"Title":"RSA.ImportRSAPublicKey in .Net Core 3 not working","State":"open","Body":"I'm trying to initialize an RSA instance via `ImportRSAPublicKey` and I'm getting an `ASN1 corrupted data.` error.\r\n\r\nSimple case:\r\n```\r\nvar r1 = RSA.Create();\r\nvar base = new RSACryptoServiceProvider(4096);\r\n\r\n// throws\r\nr1.ImportRSAPublicKey(base.ExportSubjectPublicKeyInfo(), out _);\r\n\r\n// what I want/need\r\nreturn new RsaSecurityKey(r1);\r\n```\r\n\r\nVersion Info reference:\r\n```\r\n#region Assembly System.Security.Cryptography.Algorithms, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n// C:\\Program Files (x86)\\dotnet\\packs\\Microsoft.NETCore.App.Ref\\3.0.0\\ref\\netcoreapp3.0\\System.Security.Cryptography.Algorithms.dll\r\n#endregion\r\n```\r\n\r\nDo I need to do some other conversion first?","Url":"https://github.com/dotnet/corefx/issues/41563","RelatedDescription":"Open issue \"RSA.ImportRSAPublicKey in .Net Core 3 not working\" (#41563)"},{"Id":"502885996","IsPullRequest":true,"CreatedAt":"2019-10-04T23:44:39","Actor":"FyiurAmron","Number":"41562","RawContent":null,"Title":"Fix naming of the relevant methods to Deserialize/Serialize in docs","State":"open","Body":"Needed after https://github.com/dotnet/corefx/pull/38933\r\n\r\ncc @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/41562","RelatedDescription":"Open PR \"Fix naming of the relevant methods to Deserialize/Serialize in docs\" (#41562)"},{"Id":"502864780","IsPullRequest":true,"CreatedAt":"2019-10-04T23:30:58","Actor":"dotnet-maestro[bot]","Number":"41556","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/4/2019 6:50 PM\r\n- **Commit**: 5fcd92cd8e44172b4bdd266fba9ce8938418540e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview1.19504.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview1.19504.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview1.19504.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41556","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41556)"},{"Id":"502881893","IsPullRequest":true,"CreatedAt":"2019-10-04T23:23:29","Actor":"zappyzhao","Number":"41561","RawContent":null,"Title":"Update the hex value for DarkSeaGreen color","State":"open","Body":"Update the hex value for DarkSeaGreen color to 0xFF8FBC8F.\r\n\r\nBased on W3 definition, the hex value for DarkSeaGreen color needs to be fixed:\r\nhttps://www.w3.org/wiki/CSS/Properties/color/keywords\r\n\r\nNo issues were created for this problem but one comment has been made previously:\r\nhttps://github.com/dotnet/corefx/commit/97c736e09f2e119d6ec3d3ebebb7234dee48145d#r35239355\r\n","Url":"https://github.com/dotnet/corefx/pull/41561","RelatedDescription":"Open PR \"Update the hex value for DarkSeaGreen color\" (#41561)"},{"Id":"502881310","IsPullRequest":false,"CreatedAt":"2019-10-04T23:20:42","Actor":"JRawlins737","Number":"41560","RawContent":null,"Title":"Xamarin app is throwing System.NotImplementedException: byref delegate","State":"open","Body":"Looking at the code reference below the exception is getting thrown where a return used to exist..(commented out)\r\n\r\nAre there plans to update and return a valid value? causes multiple exceptions per day per user\r\n\r\nhttps://github.com/dotnet/corefx/blob/09698dd91c53e123d3a0f1240b5f611b3c14639c/src/System.Linq.Expressions/src/System/Linq/Expressions/Interpreter/LightLambda.cs#L352\r\n\r\nException thrown is:\r\nSystem.NotImplementedException: byref delegate\r\n  at System.Linq.Expressions.Interpreter.LightLambda.CreateCustomDelegate (System.Type delegateType) <0x1052b3620 + 0x00738> in <b17c8f8ec0e94e6aa946d54abe0cfd86#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate (System.Type delegateType) <0x1052b3da0 + 0x0005f> in <b17c8f8ec0e94e6aa946d54abe0cfd86#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate (System.Runtime.CompilerServices.IStrongBox[] closure) <0x1052ac220 + 0x0006f> in <b17c8f8ec0e94e6aa946d54abe0cfd86#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate () <0x1052ac1e0 + 0x0002f> in <b17c8f8ec0e94e6aa946d54abe0cfd86#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at System.Linq.Expressions.Expression`1[TDelegate].Compile (System.Boolean preferInterpretation) <0x105274ea0 + 0x0005f> in <b17c8f8ec0e94e6aa946d54abe0cfd86#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at System.Linq.Expressions.Expression`1[TDelegate].Compile () <0x105274e60 + 0x0002f> in <b17c8f8ec0e94e6aa946d54abe0cfd86#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at Unity.UnityContainer+<>c__DisplayClass111_0.<OptimizingFactory>b__1 () <0x106163780 + 0x003a3> in <f5d5eaafc5e641898d8fba8b91c55f8c#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at System.Threading.Tasks.Task.InnerInvoke () <0x104c02870 + 0x00077> in <939d99b14d934342858948926287beba#d5047ea47da6b88a294b7510b13ff6ef>:0 \r\n  at System.Threading.Tasks.Task.Execute () <0x104c02550 + 0x0003b> in <939d99b14d934342858948926287beba#d5047ea47da6b88a294b7510b13ff6ef>:0","Url":"https://github.com/dotnet/corefx/issues/41560","RelatedDescription":"Open issue \"Xamarin app is throwing System.NotImplementedException: byref delegate\" (#41560)"},{"Id":"502840467","IsPullRequest":true,"CreatedAt":"2019-10-04T23:14:31","Actor":"stephentoub","Number":"41554","RawContent":null,"Title":"Remove System.Linq dependency from System.Security.Cryptography.Algorithms","State":"closed","Body":"It's not being used.  Remove it.","Url":"https://github.com/dotnet/corefx/pull/41554","RelatedDescription":"Closed or merged PR \"Remove System.Linq dependency from System.Security.Cryptography.Algorithms\" (#41554)"},{"Id":"502877197","IsPullRequest":true,"CreatedAt":"2019-10-04T23:02:19","Actor":"maryamariyan","Number":"41559","RawContent":null,"Title":"Support For Getting base-64 String as Byte Array","State":"closed","Body":"Reimplementation to solve problems from #41464. Only added one test where the method returns false as suggested:\r\n\r\n> This needs a lot more tests... whitespace-containing, two trailing =, zero trailing =, something that returns false (including zero, one, and two trailing = in the false-returning inputs)\r\n\r\nbut the rest of these cases should with this reimplementation be covered by [Convert.FromBase64.cs](https://github.com/dotnet/corefx/blob/master/src/System.Runtime.Extensions/tests/System/Convert.FromBase64.cs).\r\n\r\nSolves #41132. Implemented support for getting JsonString encoded in base-64 as an equivalent byte array.","Url":"https://github.com/dotnet/corefx/pull/41559","RelatedDescription":"Closed or merged PR \"Support For Getting base-64 String as Byte Array\" (#41559)"},{"Id":"502875538","IsPullRequest":false,"CreatedAt":"2019-10-04T22:55:41","Actor":"maryamariyan","Number":"41558","RawContent":null,"Title":"Simple vanilla WebAPI causes problems in containers - inotify limits","State":"closed","Body":"Hi,\r\n\r\nWe have the following setup:\r\n- Docker version 18.09.6-dev, build 95c7371304f9cef494efe93f0a8ffd53a75eac21\r\n- .NET Core 2.2 \r\n- Unix system (based on Yocto OS)\r\n\r\nWe measured the number of notify instances with:\r\n```for foo in /proc/*/fd/*; do readlink -f $foo; done | grep inotify | sort | uniq -c | sort -nr```\r\n\r\nOnce we hit the configured number of inotify instances we see the following errors:\r\n```\r\nUnhandled Exception: System.IO.IOException: The configured user limit (128) on the number of inotify instances has been reached.\r\n   at System.IO.FileSystemWatcher.StartRaisingEvents()\r\n   at System.IO.FileSystemWatcher.StartRaisingEventsIfNotDisposed()\r\n   at System.IO.FileSystemWatcher.set_EnableRaisingEvents(Boolean value)\r\n   at Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.TryEnableFileSystemWatcher()\r\n   at Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(String filter)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(String filter)\r\n   at Microsoft.Extensions.Configuration.FileConfigurationProvider.<.ctor>b__0_0()\r\n   at Microsoft.Extensions.Primitives.ChangeToken.OnChange(Func`1 changeTokenProducer, Action changeTokenConsumer)\r\n   at Microsoft.Extensions.Configuration.FileConfigurationProvider..ctor(FileConfigurationSource source)\r\n   at Microsoft.Extensions.Configuration.Json.JsonConfigurationSource.Build(IConfigurationBuilder builder)\r\ngrabbing logs: error opening journald follow descriptor: \"Too many open files\"\r\ngrabbing logs: error opening journald follow descriptor: \"Too many open files\"\r\n```\r\n\r\nTemporary we fixed the error by configuring a larger number: ```sysctl -w fs.inotify.max_user_instances=512```. \r\n\r\nBut this is not ok having into account that containers can be restarted multiple times and we will still hit this limit after 10 restarts.\r\n\r\n\r\nWhat we tried:\r\n1. Disable reloadOnChange by using custom WebHostBuilder\r\n```\r\n  public static IWebHostBuilder DefaultWebHostBuilder(string[] args)\r\n        {\r\n            return new WebHostBuilder()\r\n                .UseKestrel()\r\n                .UseContentRoot(Directory.GetCurrentDirectory())\r\n                .ConfigureAppConfiguration((hostingContext, config) =>\r\n                {\r\n                    config.AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: false);\r\n                    config.AddEnvironmentVariables();\r\n                    if (args != null)\r\n                    {\r\n                        config.AddCommandLine(args);\r\n                    }\r\n                })\r\n                .ConfigureLogging((hostingContext, logging) =>\r\n                {\r\n                    logging.AddConfiguration(hostingContext.Configuration.GetSection(\"Logging\"));\r\n                    logging.AddConsole(options => options.IncludeScopes = true);\r\n                })\r\n                .UseDefaultServiceProvider((context, options) =>\r\n                {\r\n                    options.ValidateScopes = context.HostingEnvironment.IsDevelopment();\r\n                });\r\n      }\r\n```\r\nThis didn’t help. The number of inotify instances still increased after container restart.\r\n\r\n2. Configure ENV DOTNET_USE_POLLING_FILE_WATCHER=true in dockerfile.\r\n\r\nThis didn’t help either. The number of inotify objects increased after container restart.\r\n\r\nWe don't need any file watching, the file handle should be closed properly after the file has been read. How can we accomplish this? Updating to asp .netcore 3.0 isn't an option, a fix should be provided.\r\n\r\nAny info and update is welcome, we can provide more info if needed.\r\n\r\n\r\nThis is related to: https://github.com/dotnet/corefx/issues/32024 however this was closed without a proper fix to turn off the file watching.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41558","RelatedDescription":"Closed issue \"Simple vanilla WebAPI causes problems in containers - inotify limits\" (#41558)"},{"Id":"502872645","IsPullRequest":true,"CreatedAt":"2019-10-04T22:41:28","Actor":"GrabYourPitchforks","Number":"41557","RawContent":null,"Title":"Add Utf8String ref asms, react to API changes","State":"open","Body":"Ref assemblies and unit tests for https://github.com/dotnet/coreclr/pull/27046. This PR will not pass CI until the corresponding coreclr PR has merged and made its way over to corefx.","Url":"https://github.com/dotnet/corefx/pull/41557","RelatedDescription":"Open PR \"Add Utf8String ref asms, react to API changes\" (#41557)"},{"Id":"502857517","IsPullRequest":true,"CreatedAt":"2019-10-04T21:45:36","Actor":"danmosemsft","Number":"41555","RawContent":null,"Title":"Changing readme to point to the docs in the repo","State":"open","Body":"The wiki is old and crufty and will not be carried to the new repo. Changing readme to point to the docs in the repo, which should be up to date.","Url":"https://github.com/dotnet/corefx/pull/41555","RelatedDescription":"Open PR \"Changing readme to point to the docs in the repo\" (#41555)"},{"Id":"502810721","IsPullRequest":true,"CreatedAt":"2019-10-04T20:53:23","Actor":"stephentoub","Number":"41552","RawContent":null,"Title":"Remove unnecessary System.Linq usage from Microsoft.CSharp","State":"closed","Body":"Most of the usage was just as easily (if not more easily) done without LINQ.  In some cases the use was entirely superfluous (e.g. MethodReturningNewArray().ToArray()).","Url":"https://github.com/dotnet/corefx/pull/41552","RelatedDescription":"Closed or merged PR \"Remove unnecessary System.Linq usage from Microsoft.CSharp\" (#41552)"},{"Id":"502780774","IsPullRequest":true,"CreatedAt":"2019-10-04T20:25:40","Actor":"Dotnet-GitSync-Bot","Number":"41550","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @idlerboris @stephentoub","Url":"https://github.com/dotnet/corefx/pull/41550","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,coreclr\" (#41550)"},{"Id":"502828957","IsPullRequest":true,"CreatedAt":"2019-10-04T20:25:03","Actor":"stephentoub","Number":"41553","RawContent":null,"Title":"Remove unnecessary LINQ usage from System.Text.Json","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/41553","RelatedDescription":"Open PR \"Remove unnecessary LINQ usage from System.Text.Json\" (#41553)"},{"Id":"502784744","IsPullRequest":false,"CreatedAt":"2019-10-04T18:37:07","Actor":"stephentoub","Number":"41551","RawContent":null,"Title":"Consolidate SafeSocketHandle / InnerSocketCloseHandle","State":"open","Body":"Socket's safe handle is actually two layers of safe handles: SafeSocketHandle, which is the one exposed to the rest of the implementation (and publicly), and then InnerSocketCloseHandle, which actually owns the handle / file descriptor and which is wrapped by SafeSocketHandle.\r\n\r\nThis layering should no longer be necessary, adds a lot of complication to the implementation, and makes creating sockets more expensive (two SafeHandles for each instead of one).\r\n\r\nWe should look at merging InnerSocketCloseHandle back into SafeSocketHandle.","Url":"https://github.com/dotnet/corefx/issues/41551","RelatedDescription":"Open issue \"Consolidate SafeSocketHandle / InnerSocketCloseHandle\" (#41551)"},{"Id":"502745080","IsPullRequest":true,"CreatedAt":"2019-10-04T17:01:54","Actor":"omajid","Number":"41549","RawContent":null,"Title":"Add Fedora 32, and CentOS 8 runtime ids","State":"open","Body":"This is combined backport of:\r\n\r\n- PR #41397: commit 6f82bd59a05ea9556397596ae9e59f39b904b222\r\n- PR #40786: commit 86fc9e751c424278a9c4e163e0a71a9d7e30c8e7\r\n\r\nThis hasn't been releaesd yet; do I need to update project/build files like in https://github.com/dotnet/corefx/pull/35297 ?","Url":"https://github.com/dotnet/corefx/pull/41549","RelatedDescription":"Open PR \"Add Fedora 32, and CentOS 8 runtime ids\" (#41549)"},{"Id":"502731895","IsPullRequest":true,"CreatedAt":"2019-10-04T16:36:41","Actor":"Xela101","Number":"41548","RawContent":null,"Title":"The ReadOnlyIPAddress class does not do anything the property is alre…","State":"closed","Body":"…ady readonly for IPAddress. IPv4 is using it but not IPv6?\r\n\r\nThe ReadOnlyIPAddress class does not do anything the property is already readonly for IPAddress. IPv4 is using it but not IPv6?","Url":"https://github.com/dotnet/corefx/pull/41548","RelatedDescription":"Closed or merged PR \"The ReadOnlyIPAddress class does not do anything the property is alre…\" (#41548)"},{"Id":"502598925","IsPullRequest":true,"CreatedAt":"2019-10-04T15:22:28","Actor":"dotnet-maestro[bot]","Number":"41542","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.13\r\n- **Date Produced**: 10/4/2019 6:49 AM\r\n- **Commit**: 21049ddbb7aa7e3e46451aeedd74444a6c931058\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19503.13\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19503.13\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19503.13\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191003.5\r\n- **Date Produced**: 10/4/2019 1:12 AM\r\n- **Commit**: eff9fbf446468ca411bf5e0475916f316eea7223\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19503.5\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19503.5\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20191003.2\r\n- **Date Produced**: 10/3/2019 12:42 PM\r\n- **Commit**: 2b7a93c5bdddf2cb30097179d428d082d73a1b27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19503.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41542","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard\" (#41542)"},{"Id":"502694320","IsPullRequest":true,"CreatedAt":"2019-10-04T15:14:05","Actor":"alnikola","Number":"41547","RawContent":null,"Title":"TCPListener doesn't create a new socket on Stop","State":"open","Body":"TCPListener.Stop disposes the socket and resets the reference. New socket is created only on the next Start call.\r\nFixes #26170 ","Url":"https://github.com/dotnet/corefx/pull/41547","RelatedDescription":"Open PR \"TCPListener doesn't create a new socket on Stop\" (#41547)"},{"Id":"502600261","IsPullRequest":true,"CreatedAt":"2019-10-04T13:59:51","Actor":"dotnet-maestro[bot]","Number":"41543","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191003.3\r\n- **Date Produced**: 10/4/2019 1:19 AM\r\n- **Commit**: 073ad7ef1b6a7112eefc965aed362c7b5923682a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19503.3\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19503.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19503.3\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41543","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#41543)"},{"Id":"502624792","IsPullRequest":false,"CreatedAt":"2019-10-04T13:03:11","Actor":"madelson","Number":"41546","RawContent":null,"Title":"Regex failing to parse valid JS regular expression, even when RegexOptions.ECMAScript is specified","State":"open","Body":"The following regular expression works in JavaScript (at least in Chrome and IE): `/[^]/`.\r\n\r\nHowever, this same pattern causes an `ArgumentException` when passed to .NET's regex class in ECMAScript compliance mode:\r\n\r\n```\r\nvar regex = new Regex(\"[^]\", RegexOptions.ECMAScript);\r\n```\r\n\r\n> parsing \"[^]\" - Unterminated [] set.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41546","RelatedDescription":"Open issue \"Regex failing to parse valid JS regular expression, even when RegexOptions.ECMAScript is specified\" (#41546)"},{"Id":"502618907","IsPullRequest":false,"CreatedAt":"2019-10-04T12:51:17","Actor":"vpaulino","Number":"41545","RawContent":null,"Title":"Please allow injecting JsonSerializer instances as a dependency","State":"open","Body":"Could it be possible to have system.Text. serializers also available as instance types that could implement some interface ? that way I could inject serialization as a dependency. \r\nSomething similiar as this: https://github.com/vpaulino/Facades.Serialization","Url":"https://github.com/dotnet/corefx/issues/41545","RelatedDescription":"Open issue \"Please allow injecting JsonSerializer instances as a dependency\" (#41545)"},{"Id":"502600418","IsPullRequest":false,"CreatedAt":"2019-10-04T12:09:33","Actor":"Mrnikbobjeff","Number":"41544","RawContent":null,"Title":"Enumerating StringCollection via ForEach allocates redundantly.","State":"open","Body":"StringCollection uses ArrayList as a backing collection. The current stringlist enumerator is a reference type. By adopting a private version for the current state of StringCollection as is present in List<> we can cut enumeration times in half and avoid allocating by ignoring the ArrayList enumerator and use a variant of the List<> enumerator. Also, the ArrayList indexer can easily avoid one range check by using the optimization present in the List<> indexer:\r\n`if((uint)index >= (uint)_size) throw...`\r\nFinally, to the best of my knowledge methods which throw directly are not inlined. The ArrayList Indexer throws, unlike the List<> Indexer which uses a throw helper. We should also introduce a throwhelper for ArrayList","Url":"https://github.com/dotnet/corefx/issues/41544","RelatedDescription":"Open issue \"Enumerating StringCollection via ForEach allocates redundantly.\" (#41544)"},{"Id":"502573786","IsPullRequest":false,"CreatedAt":"2019-10-04T11:05:30","Actor":"Timovzl","Number":"41541","RawContent":null,"Title":"IAsyncDisposable TransactionScope","State":"open","Body":"`TransactionScope` is a disposable type that almost always has I/O work to do on disposal.\r\n\r\nAre there any plans for making `TransactionScope` implement `IAsyncDisposable`? (I am not aware of how readily the ADO.NET methods involved are available as async.)","Url":"https://github.com/dotnet/corefx/issues/41541","RelatedDescription":"Open issue \"IAsyncDisposable TransactionScope\" (#41541)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"502888929","IsPullRequest":true,"CreatedAt":"2019-10-05T00:02:38","Actor":"dotnet-bot","Number":"39081","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39081","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#39081)"},{"Id":"502888898","IsPullRequest":true,"CreatedAt":"2019-10-05T00:02:27","Actor":"dotnet-bot","Number":"39080","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39080","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#39080)"},{"Id":"502720472","IsPullRequest":false,"CreatedAt":"2019-10-04T22:57:18","Actor":"madelson","Number":"39062","RawContent":null,"Title":"Compilation allows method to return without assigning out variable of custom value type","State":"closed","Body":"**Version Used**: \r\nVS 15.9.11\r\n\r\n**Steps to Reproduce**:\r\nCompile the following program:\r\n```\r\npublic static class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n\tDoesNotAssign(out var x);\r\n    }\r\n\r\n    internal static IDisposable DoesNotAssign(out CancellationToken cancellationToken)\r\n    {\r\n\treturn null;\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nCompiles with error \"CS0177 The out parameter 'cancellationToken' must be assigned to before control leaves the current method\"\r\n\r\n**Actual Behavior**:\r\nCompiles with no errors. X is set to the default cancellation token value.\r\n\r\n**Notes**:\r\nFrom my experimentation, this happens for `CancellationToken` or other custom value types (e. g. `internal struct Foo { }`, but does not happen for reference types or primitive value types (e. g. `int`, `string`).","Url":"https://github.com/dotnet/roslyn/issues/39062","RelatedDescription":"Closed issue \"Compilation allows method to return without assigning out variable of custom value type\" (#39062)"},{"Id":"502876065","IsPullRequest":true,"CreatedAt":"2019-10-04T22:56:52","Actor":"jasonmalinowski","Number":"39079","RawContent":null,"Title":"Fix generate method type parameter nullability","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39079","RelatedDescription":"Open PR \"Fix generate method type parameter nullability\" (#39079)"},{"Id":"502870448","IsPullRequest":true,"CreatedAt":"2019-10-04T22:32:00","Actor":"CyrusNajmabadi","Number":"39078","RawContent":null,"Title":"WIP: personal review","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39078","RelatedDescription":"Open PR \"WIP: personal review\" (#39078)"},{"Id":"502848651","IsPullRequest":true,"CreatedAt":"2019-10-04T21:18:16","Actor":"CyrusNajmabadi","Number":"39077","RawContent":null,"Title":"Simplify C# syntax generators.","State":"open","Body":"It's probably a good idea to review this PR one commit at a time. \r\nThis PR should also be reviewed with whitespace changes **OFF**.  Entire commits will become \"only whitespace changed\" doing that.\r\n\r\nThis PR simplifies the implementation of our syntax generator by using the existing (but uncommonly used) functionality to indent/dedent/block pieces of code.  Instead, most of our writing code had to manually insert spaces, making it super annoying to keep track of current indent and emit the write amount of spaces.\r\n\r\nThis has been a pain every time i've edited SourceWriter so i thought i would finally clean it up.  While i was in there, I also updated how we emit a few constructs to:\r\n\r\n1. keep them formatted like we normally do in our codebase.\r\n2. Use more modern constructs for brevity (i.e. `=>`, `switch expressions` `conditional exprs`, and the like).\r\n","Url":"https://github.com/dotnet/roslyn/pull/39077","RelatedDescription":"Open PR \"Simplify C# syntax generators.\" (#39077)"},{"Id":"502845552","IsPullRequest":false,"CreatedAt":"2019-10-04T21:09:07","Actor":"jasonmalinowski","Number":"39076","RawContent":null,"Title":"Quick info doesn't show nullable type when mousing over var","State":"open","Body":"Paste the following into a C# 8 application:\r\n\r\n```csharp\r\n#nullable enable\r\n\r\nnamespace ConsoleApp65\r\n{\r\n    class C\r\n    {\r\n        void M()\r\n        {\r\n            object? o = null;\r\n            var s = (string?)o;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nMouse over \"var\".\r\n\r\n**Expected:** it shows System.String?\r\n**Actual:** it shows System.String","Url":"https://github.com/dotnet/roslyn/issues/39076","RelatedDescription":"Open issue \"Quick info doesn't show nullable type when mousing over var\" (#39076)"},{"Id":"502841359","IsPullRequest":false,"CreatedAt":"2019-10-04T20:57:53","Actor":"jasonmalinowski","Number":"39075","RawContent":null,"Title":"Extract method drops nullable annotation on explicit cast","State":"open","Body":"Copy into a C# 8.0 app:\r\n\r\n```\r\n#nullable enable\r\n\r\nnamespace ConsoleApp65\r\n{\r\n    class C\r\n    {\r\n        void M()\r\n        {\r\n            object? o = null;\r\n            var s = (string?)o;\r\n            Console.WriteLine(s);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nInvoke extract method on the \"o\" in the \"var s...\" line. Do *not* select the cast, just the o.\r\n\r\n**Expected:** the generated method returns string? because that's the explicit cast before it.\r\n**Actual:** it returns just string which breaks code.","Url":"https://github.com/dotnet/roslyn/issues/39075","RelatedDescription":"Open issue \"Extract method drops nullable annotation on explicit cast\" (#39075)"},{"Id":"502390929","IsPullRequest":true,"CreatedAt":"2019-10-04T20:52:47","Actor":"nnpcYvIVl","Number":"39056","RawContent":null,"Title":"Spelling fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39056","RelatedDescription":"Closed or merged PR \"Spelling fixes\" (#39056)"},{"Id":"502825697","IsPullRequest":false,"CreatedAt":"2019-10-04T20:16:41","Actor":"jasonmalinowski","Number":"39074","RawContent":null,"Title":"Generate method drops ? on class-constrained T","State":"open","Body":"Paste the following into a C# 8.0 app:\r\n\r\n```\r\n#nullable enable\r\n\r\nnamespace ConsoleApp65\r\n{\r\n    class C\r\n    {\r\n        public T? M<T>() where T : class\r\n        {\r\n            T? t = null;\r\n            return M2(t);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nInvoke Generate Method on M2.\r\n\r\n**Expected:** M2 is generated with a parameter accepting T?\r\n**Actual:** the parameter is just T so it doesn't work right","Url":"https://github.com/dotnet/roslyn/issues/39074","RelatedDescription":"Open issue \"Generate method drops ? on class-constrained T\" (#39074)"},{"Id":"502823822","IsPullRequest":true,"CreatedAt":"2019-10-04T20:11:45","Actor":"ivanbasov","Number":"39073","RawContent":null,"Title":"WIP Completion: save trigger location per item","State":"open","Body":"Attempt to fix https://github.com/dotnet/roslyn/issues/38596","Url":"https://github.com/dotnet/roslyn/pull/39073","RelatedDescription":"Open PR \"WIP Completion: save trigger location per item\" (#39073)"},{"Id":"502788212","IsPullRequest":false,"CreatedAt":"2019-10-04T18:45:24","Actor":"genlu","Number":"39072","RawContent":null,"Title":"OutOfMemoryException from parser while typing in VS","State":"open","Body":"typing the code blow reliably triggers the crash in dogfood build 16.4 preview2 29403.147master, [||] is where the cursor is.\r\n\r\n```cs\r\npublic class Foo\r\n{\r\n        public enum ReferenceType\r\n        {\r\n            None,\r\n            Project,\r\n            Metadata\r\n        }\r\n\r\n        public IEnumerable<object[]> GetSomething\r\n            => (new[] { ReferenceType.None, ReferenceType.Project, ReferenceType.Metadata }).Select(refType => new[] { ref[||] });\r\n}\r\n```\r\n\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at System.Runtime.CompilerServices.ConditionalWeakTable`2.Resize()\r\n   at System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateEntry(TKey key, TValue value)\r\n   at System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(TKey key, TValue value)\r\n   at Microsoft.CodeAnalysis.GreenNode..ctor(UInt16 kind, DiagnosticInfo[] diagnostics, SyntaxAnnotation[] annotations)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken.MissingTokenWithTrivia.SetDiagnostics(DiagnosticInfo[] diagnostics)\r\n   at Microsoft.CodeAnalysis.GreenNodeExtensions.WithDiagnosticsGreen[TNode](TNode node, DiagnosticInfo[] diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser.WithAdditionalDiagnostics[TNode](TNode node, DiagnosticInfo[] diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser.CreateMissingToken(SyntaxKind expected, SyntaxKind actual, Boolean reportError)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser.EatToken(SyntaxKind kind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArrayInitializer()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseImplicitlyTypedArrayCreation()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNewExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTerm(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpressionCore(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpression(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePossibleRefExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseLambdaBody()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseLambdaExpression(SyntaxToken asyncToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseLambdaExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTerm(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpressionCore(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpression(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArgumentExpression(Boolean isIndexer)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArgumentList(SyntaxToken& openToken, SeparatedSyntaxList`1& arguments, SyntaxToken& closeToken, SyntaxKind openKind, SyntaxKind closeKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseParenthesizedArgumentList()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePostFixExpression(ExpressionSyntax expr)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTerm(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpressionCore(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpression(Precedence precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePossibleRefExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArrowExpressionClause()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePropertyDeclaration(SyntaxListBuilder`1 attributes, SyntaxListBuilder modifiers, TypeSyntax type, ExplicitInterfaceSpecifierSyntax explicitInterfaceOpt, SyntaxToken identifier, TypeParameterListSyntax typeParameterList)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatementCore(SyntaxKind parentKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatement(SyntaxKind parentKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseClassOrStructOrInterfaceDeclaration(SyntaxListBuilder`1 attributes, SyntaxListBuilder modifiers)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTypeDeclaration(SyntaxListBuilder`1 attributes, SyntaxListBuilder modifiers)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatementCore(SyntaxKind parentKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatement(SyntaxKind parentKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceBody(SyntaxToken& openBrace, NamespaceBodyBuilder& body, SyntaxListBuilder& initialBadNodes, SyntaxKind parentKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceDeclarationCore(SyntaxListBuilder`1 attributeLists, SyntaxListBuilder modifiers)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceDeclaration(SyntaxListBuilder`1 attributeLists, SyntaxListBuilder modifiers)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceBody(SyntaxToken& openBrace, NamespaceBodyBuilder& body, SyntaxListBuilder& initialBadNodes, SyntaxKind parentKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseCompilationUnitCore()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseWithStackGuard[TNode](Func`1 parseFunc, Func`1 createEmptyNodeFunc)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseCompilationUnit()\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.WithChanges(SourceText newText, IReadOnlyList`1 changes)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.WithChangedText(SourceText newText)\r\n   at Microsoft.CodeAnalysis.DocumentState.IncrementallyParse(TextAndVersion newTextAndVersion, TreeAndVersion oldTreeAndVersion, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.DocumentState.<IncrementallyParseTreeAsync>d__15.MoveNext()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception, System.Action`1<System.Exception>)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.DocumentState+<IncrementallyParseTreeAsync>d__15.MoveNext()\r\n   at System.Runtime.CompilerServices.ConditionalWeakTable`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Resize()\r\n   at System.Runtime.CompilerServices.ConditionalWeakTable`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].CreateEntry(System.__Canon, System.__Canon)\r\n   at System.Runtime.CompilerServices.ConditionalWeakTable`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Add(System.__Canon, System.__Canon)\r\n   at Microsoft.CodeAnalysis.GreenNode..ctor(UInt16, Microsoft.CodeAnalysis.DiagnosticInfo[], Microsoft.CodeAnalysis.SyntaxAnnotation[])\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken+MissingTokenWithTrivia.SetDiagnostics(Microsoft.CodeAnalysis.DiagnosticInfo[])\r\n   at Microsoft.CodeAnalysis.GreenNodeExtensions.WithDiagnosticsGreen[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon, Microsoft.CodeAnalysis.DiagnosticInfo[])\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser.WithAdditionalDiagnostics[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon, Microsoft.CodeAnalysis.DiagnosticInfo[])\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser.CreateMissingToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind, Microsoft.CodeAnalysis.CSharp.SyntaxKind, Boolean)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser.EatToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArrayInitializer()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseImplicitlyTypedArrayCreation()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNewExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTerm(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpressionCore(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpression(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePossibleRefExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseLambdaBody()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseLambdaExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTerm(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpressionCore(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpression(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArgumentExpression(Boolean)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken ByRef, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SeparatedSyntaxList`1<Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax> ByRef, Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken ByRef, Microsoft.CodeAnalysis.CSharp.SyntaxKind, Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseParenthesizedArgumentList()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePostFixExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTerm(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpressionCore(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseSubExpression(Precedence)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePossibleRefExpression()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseArrowExpressionClause()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParsePropertyDeclaration(Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder`1<Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax>, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder, Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatementCore(Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseClassOrStructOrInterfaceDeclaration(Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder`1<Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax>, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseTypeDeclaration(Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder`1<Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax>, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatementCore(Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseMemberDeclarationOrStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceBody(Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken ByRef, NamespaceBodyBuilder ByRef, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder ByRef, Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceDeclarationCore(Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder`1<Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax>, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceDeclaration(Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder`1<Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax>, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseNamespaceBody(Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken ByRef, NamespaceBodyBuilder ByRef, Microsoft.CodeAnalysis.Syntax.InternalSyntax.SyntaxListBuilder ByRef, Microsoft.CodeAnalysis.CSharp.SyntaxKind)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseCompilationUnitCore()\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseWithStackGuard[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Func`1<System.__Canon>, System.Func`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser.ParseCompilationUnit()\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.WithChanges(Microsoft.CodeAnalysis.Text.SourceText, System.Collections.Generic.IReadOnlyList`1<Microsoft.CodeAnalysis.Text.TextChangeRange>)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.WithChangedText(Microsoft.CodeAnalysis.Text.SourceText)\r\n   at Microsoft.CodeAnalysis.DocumentState.IncrementallyParse(Microsoft.CodeAnalysis.TextAndVersion, Microsoft.CodeAnalysis.TreeAndVersion, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.DocumentState+<IncrementallyParseTreeAsync>d__15.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Start[[Microsoft.CodeAnalysis.DocumentState+<IncrementallyParseTreeAsync>d__15, Microsoft.CodeAnalysis.Workspaces, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<IncrementallyParseTreeAsync>d__15 ByRef)\r\n   at Microsoft.CodeAnalysis.DocumentState.IncrementallyParseTreeAsync(Roslyn.Utilities.ValueSource`1<Microsoft.CodeAnalysis.TreeAndVersion>, Roslyn.Utilities.ValueSource`1<Microsoft.CodeAnalysis.TextAndVersion>, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.DocumentState+<>c__DisplayClass14_0.<CreateLazyIncrementallyParsedTree>b__0(System.Threading.CancellationToken)\r\n   at Roslyn.Utilities.AsyncLazy`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].StartAsynchronousComputation(AsynchronousComputationToStart<System.__Canon>, Request<System.__Canon>, System.Threading.CancellationToken)\r\n   at Roslyn.Utilities.AsyncLazy`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].GetValueAsync(System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.DocumentState+<GetSyntaxTreeAsync>d__42.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Start[[Microsoft.CodeAnalysis.DocumentState+<GetSyntaxTreeAsync>d__42, Microsoft.CodeAnalysis.Workspaces, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<GetSyntaxTreeAsync>d__42 ByRef)\r\n   at Microsoft.CodeAnalysis.DocumentState.GetSyntaxTreeAsync(System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Document.GetSyntaxTreeAsync(System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Host.BackgroundParser+<>c__DisplayClass20_0.<ParseDocumentAsync>b__0()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.Tasks.Task.ExecutionContextCallback(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39072","RelatedDescription":"Open issue \"OutOfMemoryException from parser while typing in VS\" (#39072)"},{"Id":"502439964","IsPullRequest":true,"CreatedAt":"2019-10-04T18:31:03","Actor":"dotnet-bot","Number":"39058","RawContent":null,"Title":"Merge release/dev16.4-preview2-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview2-vs-deps into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.4-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39058","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-preview2-vs-deps to master-vs-deps\" (#39058)"},{"Id":"502440234","IsPullRequest":true,"CreatedAt":"2019-10-04T18:29:15","Actor":"dotnet-bot","Number":"39059","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39059","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39059)"},{"Id":"502440287","IsPullRequest":true,"CreatedAt":"2019-10-04T18:29:08","Actor":"dotnet-bot","Number":"39060","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39060","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39060)"},{"Id":"502777839","IsPullRequest":true,"CreatedAt":"2019-10-04T18:20:41","Actor":"RikkiGibson","Number":"39071","RawContent":null,"Title":"Skip TestExpanderWithImportCompletionDisabled","State":"open","Body":"related to #39070","Url":"https://github.com/dotnet/roslyn/pull/39071","RelatedDescription":"Open PR \"Skip TestExpanderWithImportCompletionDisabled\" (#39071)"},{"Id":"502776989","IsPullRequest":false,"CreatedAt":"2019-10-04T18:18:41","Actor":"RikkiGibson","Number":"39070","RawContent":null,"Title":"[Flaky Test] TestExpanderWithImportCompletionDisabled","State":"open","Body":"Tracking re-enabling this test.\r\n\r\nCI run with a failure (see attempt 1): https://dev.azure.com/dnceng/public/_build/results?buildId=375867\r\n\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException : Se canceló una tarea.\r\nen System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   en Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.TestState.VB$StateMachine_63_WaitForUIRenderedAsync.MoveNext() en /_/src/EditorFeatures/TestUtilities2/Intellisense/TestState.vb:línea 495\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   en Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.CSharpCompletionCommandHandlerTests.VB$StateMachine_209_TestExpanderWithImportCompletionDisabled.MoveNext() en /_/src/EditorFeatures/Test2/IntelliSense/CSharpCompletionCommandHandlerTests.vb:línea 5007\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en Xunit.Sdk.TestInvoker`1.<>c__DisplayClass48_1.<<InvokeTestMethodAsync>b__1>d.MoveNext() en C:\\projects\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestInvoker.cs:línea 264\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en Xunit.Sdk.ExecutionTimer.<AggregateAsync>d__4.MoveNext() en C:\\projects\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\ExecutionTimer.cs:línea 48\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en Xunit.Sdk.ExceptionAggregator.<RunAsync>d__9.MoveNext() en C:\\projects\\xunit\\src\\xunit.core\\Sdk\\ExceptionAggregator.cs:línea 90\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39070","RelatedDescription":"Open issue \"[Flaky Test] TestExpanderWithImportCompletionDisabled\" (#39070)"},{"Id":"502769642","IsPullRequest":true,"CreatedAt":"2019-10-04T18:00:58","Actor":"gafter","Number":"39069","RawContent":null,"Title":"Refactor merging types (dynamic, tuple names, nullability) into a single pass","State":"open","Body":"Fixes #30669","Url":"https://github.com/dotnet/roslyn/pull/39069","RelatedDescription":"Open PR \"Refactor merging types (dynamic, tuple names, nullability) into a single pass\" (#39069)"},{"Id":"502763940","IsPullRequest":false,"CreatedAt":"2019-10-04T17:47:50","Actor":"TessenR","Number":"39068","RawContent":null,"Title":"Roslyn doesn't process code analysis attributes on deconstruction methods called in switches","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\n#nullable enable\r\nusing System.Diagnostics.CodeAnalysis;\r\nclass C<T>\r\n{\r\n  void M1(C<string> c)\r\n  {\r\n    var (t1, t2) = c;\r\n    t1.ToString(); // CS8602, correct\r\n    t2.ToString();\r\n  }\r\n  \r\n  void M2(C<string> c)\r\n  {\r\n    switch (c)\r\n    {\r\n      case var (t1, t2):\r\n        t1.ToString(); // no warnings\r\n        t2.ToString();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public extern void Deconstruct([MaybeNull] out T t1, out T t2);\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n`t1.ToString()` has `CS8602 Dereference of a possibly null reference.` warning as it's a variable assigned with `[MaybeNull] out T t1` \r\n\r\n**Actual Behavior**:\r\nNo warnings for `M2`","Url":"https://github.com/dotnet/roslyn/issues/39068","RelatedDescription":"Open issue \"Roslyn doesn't process code analysis attributes on deconstruction methods called in switches\" (#39068)"},{"Id":"502757068","IsPullRequest":true,"CreatedAt":"2019-10-04T17:31:07","Actor":"AmadeusW","Number":"39067","RawContent":null,"Title":"updates Roslyn to consume 16.4 version of Editor","State":"open","Body":"Update Roslyn to consume 16.4 version of the Editor.\r\nThis is the first 16.4 version of Editor which works (there were issues with shell packages), and merging of this PR will allow Editor team to continue with feature work","Url":"https://github.com/dotnet/roslyn/pull/39067","RelatedDescription":"Open PR \"updates Roslyn to consume 16.4 version of Editor\" (#39067)"},{"Id":"502753745","IsPullRequest":true,"CreatedAt":"2019-10-04T17:30:03","Actor":"AmadeusW","Number":"39066","RawContent":null,"Title":"updates Roslyn to consume 16.4 version of Editor","State":"closed","Body":"Update Roslyn to consume 16.4 version of the Editor.\r\nThis is the first 16.4 version of Editor which works (there were issues with shell packages), and merging of this PR will allow Editor team to continue with feature work","Url":"https://github.com/dotnet/roslyn/pull/39066","RelatedDescription":"Closed or merged PR \"updates Roslyn to consume 16.4 version of Editor\" (#39066)"},{"Id":"502738059","IsPullRequest":true,"CreatedAt":"2019-10-04T16:55:41","Actor":"AmadeusW","Number":"39065","RawContent":null,"Title":"updates Roslyn to consume 16.4 version of Editor","State":"closed","Body":"Update Roslyn to consume 16.4 version of the Editor","Url":"https://github.com/dotnet/roslyn/pull/39065","RelatedDescription":"Closed or merged PR \"updates Roslyn to consume 16.4 version of Editor\" (#39065)"},{"Id":"502729103","IsPullRequest":false,"CreatedAt":"2019-10-04T16:23:55","Actor":"jaredpar","Number":"39064","RawContent":null,"Title":"VB compiler can't compile when using non-standard line endings on Windows","State":"open","Body":"Repro steps:\r\n\r\n```\r\nP:\\roslyn-bad> rm -re -fo *\r\nP:\\roslyn-bad> ii .\r\nP:\\roslyn-bad> git init\r\nInitialized empty Git repository in P:/roslyn-bad/.git/\r\nP:\\roslyn-bad> git config --local core.autocrlf input\r\nP:\\roslyn-bad> git config core.autocrlf\r\ninput\r\nP:\\roslyn-bad> git remote add origin https://github.com/dotnet/roslyn.git\r\nP:\\roslyn-bad> git fetch origin\r\nremote: Enumerating objects: 78, done.\r\n...\r\nP:\\roslyn-bad> git reset --hard origin/master\r\nP:\\roslyn-bad> .\\bulid.cmd -restore\r\n...\r\n    x = \"hi\" : X$ = \"hello\"   ' error : x is of type Object. [P:\\roslyn-bad\\src\\Compilers\\VisualBasic\\Portable\\Microsoft.CodeAnalysis.VisualBasic.vb proj]\r\n    3655 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:02:46.42\r\nBuild failed.\r\n```\r\n\r\nThe error appears to be coming while processing [this line](https://github.com/dotnet/roslyn/blob/master/src/Compilers/VisualBasic/Portable/Binding/ImplicitVariableBinder.vb#L29) in the VB compiler:\r\n\r\n```basic\r\n    '''     x = \"hi\": X$ = \"hello\"   ' error: x is of type Object.\r\n```\r\n\r\nOn one hand the Roslyn repository does not supporting being used with line endings other than CRLF on Windows. Our tests and infrastructure depend on that. If you use anything other than CRLF there will be problems running tests. \r\n\r\nAt the same time though the code should still compile. The compiler, SDK, etc ... should work fine across all line ending types. The fact this error is happening on a comment just makes the issue even more baffling. \r\n\r\nWant to understand why this is happening ... \r\n","Url":"https://github.com/dotnet/roslyn/issues/39064","RelatedDescription":"Open issue \"VB compiler can't compile when using non-standard line endings on Windows\" (#39064)"},{"Id":"502439717","IsPullRequest":true,"CreatedAt":"2019-10-04T16:21:00","Actor":"dotnet-bot","Number":"39057","RawContent":null,"Title":"Merge release/dev16.4-preview2 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview2 into master.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview2-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview2-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39057","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-preview2 to master\" (#39057)"},{"Id":"502720719","IsPullRequest":true,"CreatedAt":"2019-10-04T16:05:14","Actor":"zlatanov","Number":"39063","RawContent":null,"Title":"Fixed incorrect IDE0044 (Make field readonly) when the field is accessed by refeference.","State":"open","Body":"In OperationExtensions there is an extension method **GetValueUsageInfo** which should return whether a given operation performs any read, write, etc.\r\n\r\nThe **MakeFieldReadonlyDiagnosticAnalyzer** class uses this information to infer whether a field can be made readonly. GetValueUsageInfo doesn't perform any analysis when the operation's parent is variable initializer and in that case it always returns **ValueUsageInfo.Read** which causes the diagnostic analyzer to wrongly suggest to make a field readonly.\r\n\r\nHere is example where it fails:\r\n\r\n``` csharp\r\nclass Program\r\n{\r\n    int i;\r\n\r\n    void M()\r\n    {\r\n        ref var value = ref i;\r\n        value += 1;\r\n    }\r\n}\r\n```\r\n I've added a case inside GetValueUsageInfo to correctly handle this situation and also introduced 2 new unit tests to verify it is working. I am unsure however if somewhere there isn't something that depends on the method returning incorrectly ValueUsageInfo.Read for such cases.\r\n\r\nFixes #38995.","Url":"https://github.com/dotnet/roslyn/pull/39063","RelatedDescription":"Open PR \"Fixed incorrect IDE0044 (Make field readonly) when the field is accessed by refeference.\" (#39063)"},{"Id":"502631035","IsPullRequest":true,"CreatedAt":"2019-10-04T13:15:35","Actor":"nnpcYvIVl","Number":"39061","RawContent":null,"Title":"Spelling fixes","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39061","RelatedDescription":"Open PR \"Spelling fixes\" (#39061)"},{"Id":"502372397","IsPullRequest":true,"CreatedAt":"2019-10-04T01:07:20","Actor":"ivanbasov","Number":"39055","RawContent":null,"Title":"Go to base: support metadata references and bug fixes","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/38700\r\n\r\n1. Support Go to base in case with bases is in metadata.\r\n2. Removes interfaces implemented by hidden by new/Shadows members from the base hierarchy, if the interface is not implemented below the hide. For example:\r\n```\r\ninterface I { void M(); }\r\nclass C : I { public virtual void M(); }\r\nclass D : C { public new void M(); }\r\n```\r\nhere \r\n```\r\nI i = new D();\r\ni.M(); \r\n```\r\ncalls `C.M()` not `D.M()`. Therefore, `I.M()` is not a base for `D.M()`. Fixed this.\r\n3. Fixed a issue with overloads and interfaces.","Url":"https://github.com/dotnet/roslyn/pull/39055","RelatedDescription":"Open PR \"Go to base: support metadata references and bug fixes\" (#39055)"},{"Id":"502372341","IsPullRequest":true,"CreatedAt":"2019-10-04T01:07:07","Actor":"sharwell","Number":"39054","RawContent":null,"Title":"Add annotations for symbol-related types and interfaces","State":"open","Body":"🚧 Builds on #39053. After that one is merged, many files will drop out of this pull request.\r\n\r\nEach commit was verified to compile successfully without new warnings, so reviewers do have the option of going commit-by-commit.","Url":"https://github.com/dotnet/roslyn/pull/39054","RelatedDescription":"Open PR \"Add annotations for symbol-related types and interfaces\" (#39054)"},{"Id":"502370434","IsPullRequest":true,"CreatedAt":"2019-10-04T00:58:25","Actor":"sharwell","Number":"39053","RawContent":null,"Title":"Annotate more compiler internal types","State":"open","Body":"These are internal types. There may be some cases where an annotation was missed, but I used a working strategy of \"when it doubt, prefer a non-nullable type if it builds successfully\". This is a stepping stone for a follow-up pull request where I start to annotate `ISymbol` and derived types.","Url":"https://github.com/dotnet/roslyn/pull/39053","RelatedDescription":"Open PR \"Annotate more compiler internal types\" (#39053)"},{"Id":"502364539","IsPullRequest":false,"CreatedAt":"2019-10-04T00:32:35","Actor":"sharwell","Number":"39052","RawContent":null,"Title":"ArrayBuilderExtensions.FreeAll is wrapped with nullable disable","State":"open","Body":"https://github.com/dotnet/roslyn/blob/7bf43667a1658911e4091d9e60695fe15b3bd2e0/src/Compilers/Core/Portable/Collections/ArrayBuilderExtensions.cs#L191-L200\r\n\r\nAccording to https://github.com/dotnet/roslyn/pull/38882#discussion_r328916521, this is related to #38195.\r\n\r\n/cc @333fred ","Url":"https://github.com/dotnet/roslyn/issues/39052","RelatedDescription":"Open issue \"ArrayBuilderExtensions.FreeAll is wrapped with nullable disable\" (#39052)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"502780858","IsPullRequest":true,"CreatedAt":"2019-10-04T18:27:43","Actor":"Dotnet-GitSync-Bot","Number":"7809","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @idlerboris @stephentoub","Url":"https://github.com/dotnet/corert/pull/7809","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx,coreclr\" (#7809)"},{"Id":"502527358","IsPullRequest":false,"CreatedAt":"2019-10-04T12:27:49","Actor":"kstreichergb","Number":"7808","RawContent":null,"Title":"dotnet.exe hangs during shutdown","State":"closed","Body":"A hosted application using `BackgroundService` is hanging infinetly on shutdown, in particular when the console application is killed with ctrl+z.\r\n\r\nThe \"finish\" log in the finally in Main will be seen, but the dotnet.exe process keeps running\r\n\r\n```\r\npublic class BaseBackgroundService: BackgroundService{\r\n  private readonly IHostLifetime _hostLifetime;\r\n  private readonly IHostApplicationLifetime _iHostApplicationLifetime;\r\n  \r\n  public BaseBackgroundService(IHostLifetime hostLifetime,\r\n\t\t                             IHostApplicationLifetime iHostApplicationLifetime){\r\n    _hostLifetime = hostLifetime;\r\n    _iHostApplicationLifetime = iHostApplicationLifetime;\r\n }\r\n\r\n  protected override async Task ExecuteAsync(CancellationToken ct)\r\n  {\r\n  try{\r\n        await DoSomething();\r\n  }catch(OperationCanceledException ex)\r\n{\r\n /** ... Reached on CTRL+Z .... **/\r\n}\r\nfinally{\r\n       _iHostApplicationLifetime.StopApplication();\r\n        await _hostLifetime.StopAsync(ct); // clean exit\r\n  \tConsole.WriteLine(\"Completes as expected\");    \r\n  }\r\n/*...*/\r\n}\r\n\r\n```\r\n\tProgram.cs \r\n\tpublic static async Task Main(string[] args){\r\n\ttry\r\n\t{\r\n\t\tIHostBuilder hostBuilder = CreateHostBuilder(args);\r\n\r\n\t\tusing (IHost host = hostBuilder.UseConsoleLifetime().Build())\r\n\t\t{\r\n\t\t\tawait host.RunAsync();\r\n\t\t}\r\n\t}\r\n\t}finally{\r\n\t\tConsole.WriteLine(\"Finished - will be seen. Therefore main exits, but dotnet.exe keeps running\");\r\n\t}\r\n\t}\r\n```\r\n\r\nThe hosted BackgroundService will finish (OperationCanceledException) but the host.RunAsync() will never finish.\r\n\r\nUsing visual and break all\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66196903-9ecb0200-e699-11e9-812f-d3773be75aa4.png)\r\n\r\nAnd repeating it shows the Task ID changes, but the structure remains the same\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66197013-cf12a080-e699-11e9-8529-6ee9df7266ee.png)","Url":"https://github.com/dotnet/corert/issues/7808","RelatedDescription":"Closed issue \"dotnet.exe hangs during shutdown\" (#7808)"},{"Id":"501662946","IsPullRequest":false,"CreatedAt":"2019-10-02T18:48:52","Actor":"RalfKornmannEnvision","Number":"7807","RawContent":null,"Title":"GC thread suspension","State":"open","Body":"Maybe I just got something wrong here and I am looking at the wrong place.\r\n\r\nMy somewhat bigger test code finally runs stable for hours on my ARM64 system without trashing the heap or consuming all the physical memory. But so far it was only a single thread console application. For my use case I would need some threads.\r\n\r\nAs expected the GC need to suspend all managed threads to do a collection. For Windows there is some hijack code but the function for unix only contains a todo. I assume the reason for this is that the necessary os functions are missing. My target system has the same issue as I cannot suspend and resume threads there. As .net core should have the same issue on other posix systems I checked there and noticed that the jit engine has an option to inject gc probes. I assume that this is the only way to get the GC working in a multi thread environment were hijacking is not possible. Or did I missed something?\r\n\r\nIn the case I am right a short check showed me that the ilcompiler doesn't support the flags and callbacks for this yet?\r\n\r\nDo I need to add this to get the GC working with multiple threads or have I looked at the wrong place?\r\n\r\nIf this the right place does it make any sense to aim for the inline version of the gc probe or can this never work with corert and the call variant is the only solution? I already checked the code and noticed that even if the inline variant can work the call needs still be implemented as it is used in more complicated cases.","Url":"https://github.com/dotnet/corert/issues/7807","RelatedDescription":"Open issue \"GC thread suspension\" (#7807)"},{"Id":"501011867","IsPullRequest":true,"CreatedAt":"2019-10-01T18:56:37","Actor":"Dotnet-GitSync-Bot","Number":"7806","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7806","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7806)"},{"Id":"500653866","IsPullRequest":true,"CreatedAt":"2019-10-01T15:25:51","Actor":"Dotnet-GitSync-Bot","Number":"7805","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik","Url":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7805)"},{"Id":"500408911","IsPullRequest":true,"CreatedAt":"2019-10-01T04:22:31","Actor":"Dotnet-GitSync-Bot","Number":"7804","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @Youssef1313 @safern","Url":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7804)"},{"Id":"499907137","IsPullRequest":true,"CreatedAt":"2019-09-29T14:16:14","Actor":"MichalStrehovsky","Number":"7803","RawContent":null,"Title":"Delete ReadyToRun portions of the compiler and test tree","State":"closed","Body":"The development of the ReadyToRun compiler moved to the CoreCLR repo. Keeping the sources here is just making it harder to keep the repos in sync.\r\n\r\nDeleting the testing speeds up the CI considerably.","Url":"https://github.com/dotnet/corert/pull/7803","RelatedDescription":"Closed or merged PR \"Delete ReadyToRun portions of the compiler and test tree\" (#7803)"},{"Id":"499773007","IsPullRequest":true,"CreatedAt":"2019-09-29T11:58:37","Actor":"MichalStrehovsky","Number":"7802","RawContent":null,"Title":"Fix Windows debug information for classes","State":"closed","Body":"Fixes a longstanding issue where we were emitting erroneous vfptr debug entries and incorrectly mangling class names. One could only inspect things as they were statically typed in the source (so if a variable was typed as `object` in the sources, you wouldn't see any fields in the native debugger, no matter what was assigned to it).\r\n\r\nIt wasn't too terrible, so I sort of just lived with it, but this should work.\r\n\r\nWith this, casting to base classes in the debugger works.\r\n\r\n## Before\r\n\r\n![before](https://user-images.githubusercontent.com/13110571/65817093-98550a00-e203-11e9-88ce-efd8109ae303.gif)\r\n\r\n\r\n## After\r\n\r\n![after](https://user-images.githubusercontent.com/13110571/65817095-9d19be00-e203-11e9-9ec7-73ffe4587b62.gif)\r\n","Url":"https://github.com/dotnet/corert/pull/7802","RelatedDescription":"Closed or merged PR \"Fix Windows debug information for classes\" (#7802)"},{"Id":"499146410","IsPullRequest":true,"CreatedAt":"2019-09-27T23:17:06","Actor":"Dotnet-GitSync-Bot","Number":"7800","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams","Url":"https://github.com/dotnet/corert/pull/7800","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7800)"},{"Id":"499434828","IsPullRequest":true,"CreatedAt":"2019-09-27T15:09:03","Actor":"am11","Number":"7801","RawContent":null,"Title":"Remove duplicate enum SystemVClassificationType","State":"closed","Body":"Found the duplicate definition at: https://github.com/dotnet/corert/blob/a7ce92678876ba55a1c7a65c464363b51d777b4f/src/JitInterface/src/CorInfoTypes.cs#L1170","Url":"https://github.com/dotnet/corert/pull/7801","RelatedDescription":"Closed or merged PR \"Remove duplicate enum SystemVClassificationType\" (#7801)"},{"Id":"498529328","IsPullRequest":true,"CreatedAt":"2019-09-26T22:29:33","Actor":"Dotnet-GitSync-Bot","Number":"7798","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams @stephentoub","Url":"https://github.com/dotnet/corert/pull/7798","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7798)"},{"Id":"499086023","IsPullRequest":false,"CreatedAt":"2019-09-26T19:57:16","Actor":"jkotas","Number":"7799","RawContent":null,"Title":"CppCodeGen: Implement RVA-backed static fields","State":"open","Body":"E.g. `private static ReadOnlySpan<byte> CategoryForLatin1 => new byte[] { 1, 2, 3, ... };`. CppCodeGen allocates space for these, but does not initialize it.","Url":"https://github.com/dotnet/corert/issues/7799","RelatedDescription":"Open issue \"CppCodeGen: Implement RVA-backed static fields\" (#7799)"},{"Id":"497810701","IsPullRequest":true,"CreatedAt":"2019-09-25T21:17:24","Actor":"Dotnet-GitSync-Bot","Number":"7797","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7797)"},{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-24T00:16:58","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"closed","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"496830692","IsPullRequest":false,"CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Number":"7796","RawContent":null,"Title":"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure","State":"open","Body":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Open issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796)"},{"Id":"494589847","IsPullRequest":true,"CreatedAt":"2019-09-17T14:13:36","Actor":"Dotnet-GitSync-Bot","Number":"7794","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7794)"},{"Id":"494273259","IsPullRequest":true,"CreatedAt":"2019-09-16T23:13:23","Actor":"Dotnet-GitSync-Bot","Number":"7793","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7793)"},{"Id":"493430075","IsPullRequest":false,"CreatedAt":"2019-09-16T15:38:33","Actor":"RalfKornmannEnvision","Number":"7790","RawContent":null,"Title":"GC on ARM64 based \"kind of unix\" system","State":"closed","Body":"I am sorry to bother again. After fixing some more minor issues and brush up my ARM64 assembler knowledge I was finally able to run a simple hello world on my ARM64 system without crashing. Doing things like writing to the log (the system doesn't have a text based console at all), Thread.Sleep, Environment.TickCount, printing the command line arguments etc works fine. But than I made the \"mistake\" to trigger the GC. \r\n\r\nTo make a long story short after some more debugging I noticed that the unwind of the stack does not work. The reason was pretty obvious. Libunwind doesn't have any information about the function were the stack walk should be started. I am aware that there are some parts missing for ARM64 targets that I need to fill but there is one question I was not able to answer so far. Does the GC only need unwind information for the managed code part? Or do I need to provide information for the C/C++ parts and even the dynamic libs of the OS? I am aware that libunwind can fetch these information by it's own. Unfortunately the function that it uses for this is not supported by the OS my system is using.  I may be able to get the unwind sections from the runtime C/C++ code.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7790","RelatedDescription":"Closed issue \"GC on ARM64 based \"kind of unix\" system\" (#7790)"},{"Id":"493684541","IsPullRequest":true,"CreatedAt":"2019-09-15T07:35:11","Actor":"Dotnet-GitSync-Bot","Number":"7792","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7792","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7792)"},{"Id":"493500562","IsPullRequest":true,"CreatedAt":"2019-09-14T14:02:26","Actor":"MichalStrehovsky","Number":"7791","RawContent":null,"Title":"Fix casting to pointers","State":"closed","Body":"Porting a fix made for .NET Native.\r\n\r\nA popular game engine has a `castclass void*` IL instruction in one of the generated files it ships with. This construct is weird enough that it crashes the .NET Native compiler. It doesn't crash the CoreRT compiler, but we still want the runtime side of the fix.","Url":"https://github.com/dotnet/corert/pull/7791","RelatedDescription":"Closed or merged PR \"Fix casting to pointers\" (#7791)"},{"Id":"492984849","IsPullRequest":true,"CreatedAt":"2019-09-13T13:52:21","Actor":"Dotnet-GitSync-Bot","Number":"7789","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @NextTurn","Url":"https://github.com/dotnet/corert/pull/7789","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7789)"},{"Id":"492918947","IsPullRequest":true,"CreatedAt":"2019-09-12T19:11:42","Actor":"Dotnet-GitSync-Bot","Number":"7788","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @TylerBrinkley @tarekgh @obligaron @marek-safar @jkotas @sywhang","Url":"https://github.com/dotnet/corert/pull/7788","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7788)"},{"Id":"491162081","IsPullRequest":true,"CreatedAt":"2019-09-11T00:16:26","Actor":"Dotnet-GitSync-Bot","Number":"7786","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7786","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7786)"},{"Id":"491229182","IsPullRequest":false,"CreatedAt":"2019-09-09T17:33:38","Actor":"RalfKornmannEnvision","Number":"7787","RawContent":null,"Title":"finally funclets brocken for ARM64!?","State":"open","Body":"I am not sure if this is a corert or coreclr issue but as I am working on a corert port for an custom ARM64 system I start with posting it here.\r\n\r\nAfter adding code to the objectwriter and the ilcompiler I managed to get a simple hello world app running to the main method. But it than crashed during the shutdown. After some debugging i figured out that the static constructors are never called. After some more debugging I noticed that ClassConstructorRunner.GetCctor corrupts the stack frame,\r\n\r\nIt happens at the end of the method in an assembler block that i believe is the finally funclet for the using. It looks like this\r\n\r\n  28667c: a9be7bfd stp x29, x30, [sp, #-32]!\r\n  286680: f90013f3 str x19, [sp, #32]\r\n  286684: 9103a3a0 add x0, x29, #0xe8\r\n  286688: 97fc0d42 bl 189b90 <S_P_CoreLib_System_Threading_LockHolder__Dispose>\r\n  28668c: d503201f nop\r\n  286690: d503201f nop\r\n  286694: f94013f3 ldr x19, [sp, #32]\r\n  286698: a8c27bfd ldp x29, x30, [sp], #32\r\n  28669c: d65f03c0 ret\r\n\r\nThe fact that x19 is stored with an offset of 32 looks strange for me and it overwrites the already stored data. Based on other stackframes I would expect an offset of 16 here. Or the new stackframe for the funclet needs to be 16 bytes larger.\r\n\r\nDisclaimer: As the development system for the custom ARM64 system runs on windows I although use a ARM64 jit that is build to run on X64. Very simular to the protonojit but not as alt jit to get all the data needed to write the arm64 elf file that the linker for the custom ARM64 system needs. Unfortunately I don't have an ARM64 windows or linux system to check if a non cross jit generates the same code.\r\n\r\nI assume there is no ready to use jit for my use case and I need to build it anyway. In this case I could properly fix the issue but I would need a hint how the code is expected to look like.  ","Url":"https://github.com/dotnet/corert/issues/7787","RelatedDescription":"Open issue \"finally funclets brocken for ARM64!?\" (#7787)"},{"Id":"490799316","IsPullRequest":true,"CreatedAt":"2019-09-08T23:57:41","Actor":"MichalStrehovsky","Number":"7785","RawContent":null,"Title":"Mark unsafe intrinsics as reflection blocked","State":"closed","Body":"Keeping these reflection enabled pulls in quite a bit of junk (generic dictionaries, standalone method bodies, bookkeeping) that adds up to 1.5% of the size of Hello World...","Url":"https://github.com/dotnet/corert/pull/7785","RelatedDescription":"Closed or merged PR \"Mark unsafe intrinsics as reflection blocked\" (#7785)"},{"Id":"490775070","IsPullRequest":false,"CreatedAt":"2019-09-08T21:11:53","Actor":"mrzaxaryan","Number":"7784","RawContent":null,"Title":"Non-trivial marshalling is not yet supported by this compiler.","State":"closed","Body":"Can't save image to MemoryStream \r\n.NET Core v3.0.0-preview9\r\nVisual Studio 16.3.0 Preview 3.0\r\nException: `System.Exception: Method '[System.Drawing.Common]System.Drawing.SafeNativeMethods+Gdip.GdipSaveImageToStream(HandleRef,IStream,Guid&,HandleRef)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipSaveImageToStream(HandleRef, Interop.Ole32.IStream, Guid&, HandleRef) + 0x39\r\n   at System.Drawing.Image.Save(Stream, ImageCodecInfo, EncoderParameters) + 0x1af`\r\n","Url":"https://github.com/dotnet/corert/issues/7784","RelatedDescription":"Closed issue \"Non-trivial marshalling is not yet supported by this compiler.\" (#7784)"},{"Id":"490757817","IsPullRequest":true,"CreatedAt":"2019-09-08T20:09:59","Actor":"MichalStrehovsky","Number":"7782","RawContent":null,"Title":"Port GC changes from CoreCLR","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/commit/cd42ee8fe410f71026467ad2e90116115b85f68d\r\nPorts https://github.com/dotnet/coreclr/commit/740752c9d206a465e96a4d01e7dafb6adb6ded63","Url":"https://github.com/dotnet/corert/pull/7782","RelatedDescription":"Closed or merged PR \"Port GC changes from CoreCLR\" (#7782)"},{"Id":"490760342","IsPullRequest":true,"CreatedAt":"2019-09-08T20:08:39","Actor":"MichalStrehovsky","Number":"7783","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7783","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#7783)"},{"Id":"490704961","IsPullRequest":true,"CreatedAt":"2019-09-08T05:12:25","Actor":"Dotnet-GitSync-Bot","Number":"7781","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7781","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7781)"},{"Id":"490662770","IsPullRequest":false,"CreatedAt":"2019-09-07T17:55:27","Actor":"nexon33","Number":"7780","RawContent":null,"Title":"Implement GetInterfaceMap","State":"open","Body":"I want to be able to render a view in asp.net core, I need the controller inheritance to be able to call View();\r\nIs there any simple way of doing this or should I forget about it for now?","Url":"https://github.com/dotnet/corert/issues/7780","RelatedDescription":"Open issue \"Implement GetInterfaceMap\" (#7780)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"502911797","IsPullRequest":true,"CreatedAt":"2019-10-05T03:55:11","Actor":"dotnet-maestro[bot]","Number":"3716","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.15\r\n- **Date Produced**: 10/5/2019 2:41 AM\r\n- **Commit**: ea8a25eb0679dc4d940623688189885086286adc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3716","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3716)"},{"Id":"502901854","IsPullRequest":true,"CreatedAt":"2019-10-05T03:46:00","Actor":"dotnet-maestro[bot]","Number":"3715","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.13\r\n- **Date Produced**: 10/5/2019 12:20 AM\r\n- **Commit**: fd1162d3db7db9c79bf01d32604862f4bee25b96\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.13\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3715","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3715)"},{"Id":"502887934","IsPullRequest":true,"CreatedAt":"2019-10-04T23:56:34","Actor":"wli3","Number":"3714","RawContent":null,"Title":"Update stage0","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3714","RelatedDescription":"Open PR \"Update stage0\" (#3714)"},{"Id":"502887592","IsPullRequest":true,"CreatedAt":"2019-10-04T23:55:16","Actor":"wli3","Number":"3713","RawContent":null,"Title":"Update stage0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3713","RelatedDescription":"Closed or merged PR \"Update stage0\" (#3713)"},{"Id":"502640875","IsPullRequest":true,"CreatedAt":"2019-10-04T17:16:48","Actor":"dotnet-maestro[bot]","Number":"3712","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/4/2019 12:23 PM\r\n- **Commit**: 50de4c0d1f33599adc6d71ae6d5b8783140c0b83\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19504.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3712","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3712)"},{"Id":"502523605","IsPullRequest":true,"CreatedAt":"2019-10-04T11:16:08","Actor":"dotnet-maestro[bot]","Number":"3711","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191003.14\r\n- **Date Produced**: 10/4/2019 8:06 AM\r\n- **Commit**: 36e40e331b31d9c220fd2553a0a8784d59985c47\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19503.14\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3711","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3711)"},{"Id":"501147875","IsPullRequest":true,"CreatedAt":"2019-10-03T19:31:50","Actor":"dotnet-maestro[bot]","Number":"3702","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191001.24\r\n- **Date Produced**: 10/2/2019 8:04 AM\r\n- **Commit**: 0b3fcd7a02fd29017f01f01a36ea562c5fda1eec\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19501.24\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3702","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3702)"},{"Id":"502234506","IsPullRequest":false,"CreatedAt":"2019-10-03T18:47:32","Actor":"wli3","Number":"3710","RawContent":null,"Title":"Use Helix to distribute tests","State":"open","Body":"- [x] Use existing Helix xunit SDK runner to distribute tests\r\n- [ ] Run full framework tests.\r\n  - [ ] Use docker to run full framework tests https://github.com/microsoft/dotnet-framework-docker/issues/313\r\n  - [ ] Check in docker file and get a image \r\n  - [ ] Separate few tests that cannot run in docker. Like C++/CLI tests require VS \r\n- [ ] Run Linux and mac tests\r\n- [ ] Run test as tool tests\r\n- [ ] Split Build tests, there are too many tests in it\r\n","Url":"https://github.com/dotnet/sdk/issues/3710","RelatedDescription":"Open issue \"Use Helix to distribute tests\" (#3710)"},{"Id":"502188632","IsPullRequest":true,"CreatedAt":"2019-10-03T17:09:02","Actor":"crummel","Number":"3709","RawContent":null,"Title":"Use ref-only msbuild packages for tasks","State":"open","Body":"These MSBuild packages used to build tasks are used as references only, and don't need to pick up the versions produced by source-build.\r\n\r\ncc @NikolaMilosavljevic","Url":"https://github.com/dotnet/sdk/pull/3709","RelatedDescription":"Open PR \"Use ref-only msbuild packages for tasks\" (#3709)"},{"Id":"501864414","IsPullRequest":false,"CreatedAt":"2019-10-03T05:40:17","Actor":"christophwille","Number":"3708","RawContent":null,"Title":"Build Order Bug with app.config/BeforeBuild","State":"open","Body":"Please see https://github.com/icsharpcode/ILSpy/issues/1731\r\n\r\nEffectively, only Visual Studio gets the build order wrong, but both of our build servers don't (msbuild). The cause seems that app.config for ILSpy.csproj is built from a template.","Url":"https://github.com/dotnet/sdk/issues/3708","RelatedDescription":"Open issue \"Build Order Bug with app.config/BeforeBuild\" (#3708)"},{"Id":"501756629","IsPullRequest":false,"CreatedAt":"2019-10-02T22:23:15","Actor":"DamianEdwards","Number":"3706","RawContent":null,"Title":"Support ability for FrameworkReference to import analyzers","State":"open","Body":"Request came out of https://github.com/aspnet/AspNetCore/issues/14675\r\n\r\nASP.NET Core app projects today target the Web SDK which auto-imports a set of \"default\" analyzers. There are scenarios however where parts of an ASP.NET Core app are split into class libraries and then referenced from the main app project, but these class libraries use the base SDK, and manually add a `<FrameworkReference Include=\"Microsoft.AspNetCore.App\" />` to indicate their reliance on ASP.NET Core features. This, however, results in none of the default analyzers. And given the analyzers are only available via the Web SDK (they literally ship only as part of it) there is no first-class way to enable them.\r\n\r\nThe proposal here is to allow the base SDK to support a `FrameworkReference` declaring it also imports some analyzers, so that class libraries can use them.","Url":"https://github.com/dotnet/sdk/issues/3706","RelatedDescription":"Open issue \"Support ability for FrameworkReference to import analyzers\" (#3706)"},{"Id":"501750161","IsPullRequest":true,"CreatedAt":"2019-10-02T22:03:31","Actor":"tlakollo","Number":"3705","RawContent":null,"Title":"Improve Error Experience","State":"open","Body":"As part of the improve error experience linker issue (see issue https://github.com/mono/linker/issues/653) we find out that an additional flag was needed in order to print warning messages.\r\nThis change mades possible for the linker to print valuable information like warnings when an assembly is unresolved and is going to be skipped. Likely this feature could also work to warning the user when it's using patterns that could break their application.","Url":"https://github.com/dotnet/sdk/pull/3705","RelatedDescription":"Open PR \"Improve Error Experience\" (#3705)"},{"Id":"501446031","IsPullRequest":true,"CreatedAt":"2019-10-02T12:02:07","Actor":"dotnet-maestro[bot]","Number":"3704","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191002.11\r\n- **Date Produced**: 10/2/2019 11:34 PM\r\n- **Commit**: da75c6547c64a91eb8a9cecf8c503331c2cc394a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19502.11\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3704","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3704)"},{"Id":"501395765","IsPullRequest":true,"CreatedAt":"2019-10-02T10:05:15","Actor":"dotnet-maestro[bot]","Number":"3703","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191002.23\r\n- **Date Produced**: 10/3/2019 1:52 AM\r\n- **Commit**: d34d1570bfdf669ed94b4c939b2f39a1650e2320\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3703","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3703)"},{"Id":"500849733","IsPullRequest":true,"CreatedAt":"2019-10-01T13:32:38","Actor":"dotnet-maestro[bot]","Number":"3701","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190930.3\r\n- **Date Produced**: 9/30/2019 8:25 PM\r\n- **Commit**: 238f1bbb23ba67616818d0b242c5b55a18edec55\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19480.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3701","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3701)"},{"Id":"500702486","IsPullRequest":true,"CreatedAt":"2019-10-01T11:07:01","Actor":"dotnet-maestro[bot]","Number":"3699","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.27\r\n- **Date Produced**: 10/1/2019 8:05 AM\r\n- **Commit**: dfb28413477684834589b8b23492b48c43726e10\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19480.27\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3699","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3699)"},{"Id":"500712869","IsPullRequest":false,"CreatedAt":"2019-10-01T07:22:15","Actor":"iyhammad","Number":"3700","RawContent":null,"Title":"dotnet publish for sdk 3.x produces different output than sdk 2.x","State":"open","Body":"I've an application the uses .NET Core 2.2 and build against net472.\r\nI discovered that publishing the same app using .NET Core SDK 3.x produces different publish output than SDK 2.x. Below are sample of the different output of the 2 SDKs.\r\n![SDK 2.x](https://user-images.githubusercontent.com/5989020/65941989-03d1ee00-e435-11e9-9c6b-1c34336c86f3.png)\r\n![SDK 3.x](https://user-images.githubusercontent.com/5989020/65942012-0f251980-e435-11e9-8fb9-e9d9c937a7b7.png)\r\n\r\nIf this an intended behavior and not a bug, I believe we should warn people to explicitly specify the required SDK for building their application part of their solution using global.json Otherwise, specially if they are building using cloud tools, the system will be published with missing files.\r\nIf this is bug, I'me ready to share more insights about the application that packages that I'm using to reproduce the bug. \r\n","Url":"https://github.com/dotnet/sdk/issues/3700","RelatedDescription":"Open issue \"dotnet publish for sdk 3.x produces different output than sdk 2.x\" (#3700)"},{"Id":"499723055","IsPullRequest":true,"CreatedAt":"2019-10-01T05:49:02","Actor":"dotnet-maestro[bot]","Number":"3692","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.22\r\n- **Date Produced**: 10/1/2019 2:48 AM\r\n- **Commit**: dd532f6e9fa24c13246b944616f066f42ebe957a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19480.22\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3692","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3692)"},{"Id":"501830295","IsPullRequest":false,"CreatedAt":"2019-10-01T05:41:13","Actor":"EatonZ","Number":"3707","RawContent":null,"Title":"PreBuild event/target runs twice - during Build and Publish","State":"open","Body":"**Visual Studio Version**: 16.3.1\r\n\r\n**Summary / Steps to Reproduce / Behavior**:\r\nI have a .NET Core 3.0 WinForms application and I have added a prebuild event to my project. It gets added to the csproj like this:\r\n```\r\n<Target Name=\"PreBuild\" BeforeTargets=\"PreBuildEvent\">\r\n  <Exec Command=\"$(ProjectDir)PreBuildTasks.exe\" />\r\n</Target>\r\n```\r\nIt basically launches my prebuild exe, which does a few things, like increment the version in AssemblyInfo. This has always worked fine until I started experimenting with .NET Core and publishing.\r\n\r\nFor context, I am going to add this right before the `Exec Command`:\r\n`<Message Importance=\"high\" Text=\"This is a message\" />`\r\n\r\nWhen I publish the project (right click project, Publish), this is what I see:\r\n![2019-10-01_1-25-35](https://user-images.githubusercontent.com/3020941/65936781-cac15b80-e3eb-11e9-93cf-d41efb6adc93.png)\r\n\r\nIt's clear the prebuild task is running twice. I spent a while researching a way to resolve this problem. The closest solution I found was [this](https://developercommunity.visualstudio.com/content/problem/30395/aspnet-publish-process-runs-build-3-times.html). I added `Condition=\"'$(DeployOnBuild)' != 'true'\"` as directed, but unfortunately it did not do anything. The other solution in that thread says the issue is fixed, so what is happening here?\r\n\r\nThis behavior may be by design, but I decided to open this issue in case it is not, and because I'd like some guidance on the correct way to solve this problem if I am going at this the wrong way. I only want my prebuild task to run on **Build**, not **Publish**.","Url":"https://github.com/dotnet/sdk/issues/3707","RelatedDescription":"Open issue \"PreBuild event/target runs twice - during Build and Publish\" (#3707)"},{"Id":"499679772","IsPullRequest":true,"CreatedAt":"2019-09-30T20:02:05","Actor":"wli3","Number":"3689","RawContent":null,"Title":"Better error message when c++ targeting TFM lower than 3.1","State":"closed","Body":"fix https://github.com/dotnet/sdk/issues/3626","Url":"https://github.com/dotnet/sdk/pull/3689","RelatedDescription":"Closed or merged PR \"Better error message when c++ targeting TFM lower than 3.1\" (#3689)"},{"Id":"500442644","IsPullRequest":false,"CreatedAt":"2019-09-30T18:26:00","Actor":"ghosttie","Number":"3698","RawContent":null,"Title":"publishing appears to succeed but dependencies are missing if child project has space in package id","State":"open","Body":"I had a problem that manifested as an [HTTP Error 500.31 - ANCM Failed to Find Native Dependencies](https://github.com/aspnet/AspNetCore/issues/14443) error which was misleading.\r\n\r\nThe problem turned out to be that the main project had references to other projects that had spaces in their package ids, which somehow kept them from being published correctly, even though there was no error at publish time.\r\n\r\nThis was working in .NET Core 2.2 but is not working in 3.0.\r\n\r\nAlthough there's a simple workaround (remove the spaces) I think this should be fixed, because it worked in previous versions, the error message doesn't lead to a solution, and the package id was set automatically when the project was created so it should have been set to a valid value.\r\n\r\nAn ASP.NET Core maintainer said that it wasn't a bug in their code and to try reporting it here.","Url":"https://github.com/dotnet/sdk/issues/3698","RelatedDescription":"Open issue \"publishing appears to succeed but dependencies are missing if child project has space in package id\" (#3698)"},{"Id":"500287421","IsPullRequest":true,"CreatedAt":"2019-09-30T13:44:40","Actor":"vitek-karas","Number":"3697","RawContent":null,"Title":"Implement writing includedFrameworks references for self-contained apps","State":"open","Body":"For self-contained apps which are of the right version (to maintain backward compat), write the framework references to a new `includedFrameworks` property in `.runtimeconfig.json`.\r\n\r\nWhen the native hosting APIs are used to load a managed component into a process which is running a .NET Core app, the hosting layer should validate that the new component framework requirements are met by the frameworks loaded into the process already. This is to allow the new component to communicate with the app (same FX types), but also to overcome the fact that we don't want to load frameworks twice ever.\r\n\r\nIn order to validate the framework references declared by the new component, the host must know what frameworks are loaded into the process. For framework dependent apps this works fine as the host knows which frameworks it resolved during the app startup. But for self-contained apps, the host doesn't know as everything looks like an app to it.\r\n\r\nThis change adds he new `includedFrameworks` property to the `.runtimeconfig.json` which will be used for self-contained apps (only, it should not occur when `framework` or `frameworks` properties are used). It will contain the list of frameworks which were used to build the self-contained apps. The format is the same as `frameworks` property content.\r\n\r\nTo maintain strict backward compatibility, this change will only write the new property to projects targeting `netcoreapp3.1` or higher.\r\n\r\nAs coded this assumes the change will be approved for 3.1. If it's rejected, I will follow up with a change which will make the new property occur only for 5.0 and above.\r\n\r\n#3541 - master (5.0) version","Url":"https://github.com/dotnet/sdk/pull/3697","RelatedDescription":"Open PR \"Implement writing includedFrameworks references for self-contained apps\" (#3697)"},{"Id":"499924954","IsPullRequest":false,"CreatedAt":"2019-09-29T14:25:25","Actor":"alexandrehtrb","Number":"3696","RawContent":null,"Title":"Make multilanguage project builds","State":"open","Body":"I propose that dotnet build allows multilanguage .NET projects.\r\n\r\nCurrently, a .NET project needs to be language exclusive, that is, only F#, or only C#, or only VB.NET.\r\n\r\nBut, this could change to allow .fs, .cs and .vb files to be compiled together in a same project.\r\n\r\nThe existing way of approaching this problem in F# is separate F# files in F# projects, C# files in C# projects, and VB.NET files in VB.NET projects.\r\n\r\nI originally created a discussion [here](https://github.com/fsharp/fslang-suggestions/issues/788).","Url":"https://github.com/dotnet/sdk/issues/3696","RelatedDescription":"Open issue \"Make multilanguage project builds\" (#3696)"},{"Id":"499762840","IsPullRequest":true,"CreatedAt":"2019-09-28T14:22:33","Actor":"dotnet-maestro[bot]","Number":"3693","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190927.2\r\n- **Date Produced**: 9/27/2019 6:33 PM\r\n- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19477.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3693)"},{"Id":"499763174","IsPullRequest":true,"CreatedAt":"2019-09-28T12:05:23","Actor":"dotnet-bot","Number":"3695","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3695","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3695)"},{"Id":"499763157","IsPullRequest":true,"CreatedAt":"2019-09-28T12:05:16","Actor":"dotnet-bot","Number":"3694","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3694","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3694)"},{"Id":"499678524","IsPullRequest":true,"CreatedAt":"2019-09-28T02:53:41","Actor":"dotnet-bot","Number":"3688","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3688","RelatedDescription":"Closed or merged PR \"Merge release/3.1.1xx to master\" (#3688)"},{"Id":"499678501","IsPullRequest":true,"CreatedAt":"2019-09-28T02:50:08","Actor":"dotnet-bot","Number":"3687","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3687","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3687)"},{"Id":"499697830","IsPullRequest":true,"CreatedAt":"2019-09-28T00:05:15","Actor":"dotnet-bot","Number":"3691","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3691","RelatedDescription":"Open PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3691)"},{"Id":"499697806","IsPullRequest":true,"CreatedAt":"2019-09-28T00:05:08","Actor":"dotnet-bot","Number":"3690","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.100-preview9","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.100-preview9.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.100-preview9\ngit reset --hard upstream/release/3.0.100-preview9\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.100-preview9 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3690","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.100-preview9\" (#3690)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1179886895251148801","CreatedAt":"2019-10-03T22:32:11+00:00","UserScreenname":"dotnet","Text":"Thank you to all who participated in #dotNETConf! Please help us improve the event next year by providing your feed… https://t.co/pik2pOve9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":21,"RawContent":null},{"Id":"1179802961238585344","CreatedAt":"2019-10-03T16:58:40+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1179116521290960902","CreatedAt":"2019-10-01T19:31:00+00:00","UserScreenname":"dotnet","Text":"ICYMI: @nopCommerce published a step-by-step guide on migrating to https://t.co/iOiV9r53NV Core. Check it out: https://t.co/oAy68vNBJw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":45,"FavoriteCount":25,"RawContent":null},{"Id":"1178341418064138245","CreatedAt":"2019-09-29T16:11:01+00:00","UserScreenname":"dotnet","Text":"#dotNETConf is now available on demand!\n👍 83 speakers\n👍 77 sessions\n👍 40+ hours\n👍 200+ local events around the glob… https://t.co/c5lz2EkS4C","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":304,"FavoriteCount":166,"RawContent":null},{"Id":"1178059427242377217","CreatedAt":"2019-09-28T21:30:29+00:00","UserScreenname":"dotnet","Text":"Hi 👋 @timheuer. Welcome back in @dotnet land. 😀 https://t.co/85GRHHLARg","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":87,"FavoriteCount":8,"RawContent":null},{"Id":"1177599991445106695","CreatedAt":"2019-09-27T15:04:51+00:00","UserScreenname":"dotnet","Text":"The #dotNETConf live event may be over, but that just means that all the sessions are now available to watch whenev… https://t.co/iwCcdYUvJ3","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":7986,"FavoriteCount":704,"RawContent":null},{"Id":"1177009895125737478","CreatedAt":"2019-09-26T00:00:01+00:00","UserScreenname":"dotnet","Text":"…and that's a wrap!!! THANK YOU!!! from all of us at #dotNETconf! 👏 👏 👏 \n\nWatch for our on demand sessions - we'll… https://t.co/h1k6wRrSLg","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":106,"FavoriteCount":15,"RawContent":null},{"Id":"1177001086831538184","CreatedAt":"2019-09-25T23:25:01+00:00","UserScreenname":"dotnet","Text":"Be an A11Y. Build Accessible Web Sites for Everyone is streaming live @ #dotNETConf with @rachelappel The last sess… https://t.co/Cqy7FgAB9Z","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":21,"FavoriteCount":3,"RawContent":null},{"Id":"1176993538233516032","CreatedAt":"2019-09-25T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Mixed Reality with Xamarin and Azure Spatial Anchors with @SweekritiS. Tune in:… https://t.co/VtnLnD72W9","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1176985986494021632","CreatedAt":"2019-09-25T22:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: How containerized #SQLServer makes development easier with @michaeljolley. Watch here:… https://t.co/9sHXsLEbvX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":27,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2019-10-05T05:30:35.5083536Z","RunDurationInMilliseconds":14382}