{"Data":{"Blog":{"FeedItems":[{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8261952847","Type":"PullRequestEvent","CreatedAt":"2018-09-13T19:37:32","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2174","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] combine CheckTargetFrameworks/ResolveAssemblies\" (#2174) at xamarin/xamarin-android","RelatedBody":"Context: https://gist.github.com/jonathanpeppers/a207a8828317460239a12a8b0cc918d7\r\n\r\nWhen reviewing how many times we are using Mono.Cecil to open every\r\nassembly, it was happening 9 times!\r\n\r\nUnfortunately it is not as easy as just \"caching\" something, the\r\nsimplest approach for now is to start combining functionality that are\r\nin multiple tasks right now.\r\n\r\nA simple first example is the `CheckTargetFrameworks` MSBuild task,\r\nwhich runs after the `Compile` and `ResolveAssemblies` MSBuild tasks.\r\n`CheckTargetFrameworks` has the job of emitting warnings about\r\n`[assembly: System.Runtime.Versioning.TargetFramework]`. We can easily\r\ndo this work in `ResolveAssemblies` as it is already looping over all\r\nthe assemblies' custom attributes for other reasons.\r\n\r\nChanges to make this happen:\r\n- Removed `CheckTargetFrameworks` and the `_CheckTargetFrameworks`\r\n  target, adding the required `TargetFrameworkVersion` and\r\n  `ProjectFile` properties to `ResolveAssemblies`.\r\n- Added a new `CheckAssemblyAttributes` where we can add to a `switch`\r\n  statement for new attribute types in the future as needed.\r\n- Added a dictionary of `api_levels`, and copied over the logic from\r\n  `CheckTargetFrameworks`\r\n\r\nBefore:\r\n\r\n    105 ms  CheckTargetFrameworks                      1 calls\r\n    188 ms  ResolveAssemblies                          1 calls\r\n\r\nAfter:\r\n\r\n    216 ms  ResolveAssemblies                          1 calls\r\n\r\nI timed the `tests/Xamarin.Forms-Performance-Integration` project in\r\nthis repository: a build with no changes.\r\n\r\nSince `CheckTargetFrameworks` is removed completely, we can avoid the\r\ntime it was taking to open every assembly again.\r\n\r\nThis saves around 77ms."},{"Id":"8261057976","Type":"PullRequestEvent","CreatedAt":"2018-09-13T16:51:49","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2184","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] skip _CleanIntermediateIfNuGetsChange on first build\" (#2184) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2183\r\nContext: https://github.com/xamarin/xamarin-android/issues/2177\r\nContext: https://github.com/xamarin/xamarin-android/pull/1878\r\nContext: http://work.devdiv.io/661455\r\n\r\nWe are seeing reports of issues related to VS for Mac displaying\r\n`Updating Android Resources...` in the title bar, and a build running\r\nat the same time.\r\n\r\nThis is effectively running two commands at the same time:\r\n\r\n    msbuild YourAndroid.csproj /t:UpdateAndroidResources\r\n    msbuild YourAndroid.csproj /t:Build\r\n\r\nIn the case such as #2183, we get the failure:\r\n\r\n    Task \"RemoveDirFixed\"\r\n        Xamarin.Android.Common.targets(3042,2): error : Directory /Users/builder/agent/_work/r1/a/XQA.VSMac/XQA.VisualStudioMac/TestResults/26ff4d25/TestAndroidEnableAOTEnterprise/Temp/DroidApp/DroidApp/obj/Release/lp/ is not empty\r\n\r\nIn this case, the error is coming from\r\n`_CleanIntermediateIfNuGetsChange`, which has an issue we can improve.\r\nThe target is *meant* to only run when NuGets change, but is currently\r\nrunning on a first build.\r\n\r\nIf we skip the call to `_CleanMonoAndroidIntermediateDir` if\r\n`$(_AndroidNuGetStampFile)` does not exist, then our\r\n`_CleanIntermediateIfNuGetsChange` target will only clean files in\r\nlater builds when NuGets change.\r\n\r\nI've not found anything we can do for the root cause of the VS for Mac\r\nissue, but this will at least help matters on the initial build."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8263439851","Type":"IssuesEvent","CreatedAt":"2018-09-14T02:22:01","Actor":"Chozarajan","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3784","RelatedDescription":"Opened issue \"EditText native object was not disposed in Android\" (#3784) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have created a simple custom control in Android. I have inherits the native EditText. I have hooked only TextChanged event in the source. In the disposing method, I have unhooked the TextChanged event. Unfortunately, the memory of the native control was not cleared. If I commented on the TextChanged event, the native memory was cleared in Android.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample \r\n2. Go to the Custom Control page and return back main page\r\n3. Check the Memory consumption on Android profiler\r\n4. The EditText object was not disposed in Android\r\n\r\n### Expected Behavior\r\nThe native EditText Object was disposed of if we return to the main page \r\n\r\n### Actual Behavior\r\nThe native EditText object was not disposed of if we hook the text changed event and retun back to the mainpage in Android\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms version 3.0\r\n- Last known good version:\r\n- IDE: VS 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> 7.0\r\n- Android Support Library Version: <!-- if applicable --> No\r\n- Nuget Packages: No\r\n- Affected Devices: Moto G4 plus\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/42271947/45525920-a00d6080-b7f2-11e8-80ff-3b74bd93bb21.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\nReproduction Sample link: \r\n[MemoryLeakSample.zip](https://github.com/xamarin/Xamarin.Forms/files/2381627/MemoryLeakSample.zip)\r\n"},{"Id":"8262950503","Type":"IssuesEvent","CreatedAt":"2018-09-13T23:25:08","Actor":"ianvink","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3783","RelatedDescription":"Opened issue \"Xamarin forms symbol server\" (#3783) at xamarin/Xamarin.Forms","RelatedBody":"Before I can submit my big I need to debug Xamarin.Forms to see where I’m the Code it’s failing.\r\n\r\nIn VS2017 how do I configure the ability to debug my app running Xamarin Forms 3.1"},{"Id":"8262816537","Type":"IssuesEvent","CreatedAt":"2018-09-13T22:43:30","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3782","RelatedDescription":"Opened issue \"[Android] Switch aligns inconsistently on Android vs iOS/UWP\" (#3782) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nOn android the following XAML aligns to the right whereas on ios/uwp it aligns to the left\r\n\r\n```XAML\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             x:Class=\"MarkupExtensions.TypeDemoPage\"\r\n             Title=\"x:Type Demo\">\r\n    \r\n    <StackLayout x:Name=\"stackLayout\"\r\n                 Padding=\"10, 0\" BackgroundColor=\"Pink\">\r\n\t\t<Switch BackgroundColor=\"Green\"></Switch>\r\n    </StackLayout>\r\n</ContentPage>\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n1.  run https://github.com/xamarin/xamarin-forms-samples/blob/master/XAML/MarkupExtensions/MarkupExtensions/MarkupExtensions/TypeDemoPage.xaml\r\n2.  Click add switch\r\n3.  on android it aligns all the way to the right of the screen whereas on ios/android the switch is all the way to the left\r\n\r\n### Expected Behavior\r\nThe switch should align consistently on all three platforms\r\n\r\n### Actual Behavior\r\nAndroid aligns differently \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1\r\n- Last known good version: don't know\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n\r\n### Screenshots\r\niOS\r\n![image](https://user-images.githubusercontent.com/5375137/45519770-dbb51580-b773-11e8-8ae4-1e6d16ccb9ab.png)\r\n\r\nAndroid\r\n![image](https://user-images.githubusercontent.com/5375137/45519831-17e87600-b774-11e8-9c3c-b5d0aa27ebab.png)\r\n\r\n\r\n\r\n### Reproduction Link\r\nhttps://github.com/xamarin/xamarin-forms-samples/blob/master/XAML/MarkupExtensions/MarkupExtensions/MarkupExtensions/TypeDemoPage.xaml\r\n"},{"Id":"8262505085","Type":"IssuesEvent","CreatedAt":"2018-09-13T21:25:43","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3781","RelatedDescription":"Opened issue \"[iOS] Scaling broken on Android\" (#3781) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nScaling isn't being applied correctly on Android\r\n\r\n### Steps to Reproduce\r\n\r\nRun the following sample\r\nhttps://github.com/xamarin/xamarin-forms-samples/blob/master/XamlSamples/XamlSamples/XamlSamples/StaticConstantsPage.xaml\r\n\r\n### Expected Behavior\r\nLook at screen shot below. Both of them should look like 3.1\r\n\r\n### Actual Behavior\r\n3.2 is scaling incorrectly\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2\r\n- Last known good version: 3.1\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n![image](https://user-images.githubusercontent.com/5375137/45516698-2ed59b00-b769-11e8-9b68-763784234279.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nRun the following sample\r\nhttps://github.com/xamarin/xamarin-forms-samples/blob/master/XamlSamples/XamlSamples/XamlSamples/StaticConstantsPage.xaml\r\n"},{"Id":"8262420026","Type":"PullRequestEvent","CreatedAt":"2018-09-13T21:07:44","Actor":"jcmanke","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3780","RelatedDescription":"Opened pull request \"[Android] Fix WebView.Navigating event, make WebViewClient inheritable\" (#3780) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n- Extracted WebViewRenderer.WebClient to FormsWebViewClient so that it can be inherited from and overwritten when custom renderers require a custom WebViewClient\r\n- Moved firing of WebView.Navigating event from ShouldOverrideUrlLoading to OnPageStarted in FormsWebViewClient so that it is consistently fired every time a URL is navigated to including initial load\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3778 \r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - public override void FormsWebViewClient.OnPageStarted(WebView view, string url, Bitmap favicon)\r\n - public const string WebViewRenderer.AssetBaseUrl = \"file:///android_asset/\"\r\n - protected virtual FormsWebViewClient WebViewRenderer.GetFormsWebViewClient()\r\n - FormsWebViewClient WebViewRenderer._webViewClient \r\n\r\nChanged:\r\n - class WebViewRenderer.WebClient => public class FormsWebViewClient\r\n - bool WebViewRenderer._ignoreSourceChanges => public bool WebViewRenderer.IgnoreSourceChanges { get; set; }\r\n - IWebViewController WebViewRenderer.ElementController => public IWebViewController WebViewRenderer.ElementController\r\n - void WebViewRenderer.UpdateCanGoBackForward() => public void WebViewRenderer.UpdateCanGoBackForward()  \r\n \r\n Removed:\r\n - WebClient.ShouldOverrideUrlLoading(WebView view, string url)\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nWebView.Navigating will be fired for the initial URL load in addition to redirects and subsequent navigations.\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nIn the WebViewCoreGalleryPage, add a listener to the element's Navigating event in InitializeElement(). Change the source URL from http://xamarin.com/ (which gets redirected to https://visualstudio.microsoft.com/xamarin/) to https://www.google.com (which will not be redirected). Run the ControlGallery and verify that the Navigating event is fired for https://www.google.com\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8262206018","Type":"IssuesEvent","CreatedAt":"2018-09-13T20:26:14","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3753","RelatedDescription":"Closed issue \"Release note links don't lead to release notes\" (#3753) at xamarin/Xamarin.Forms","RelatedBody":"I go to this page\r\nhttps://developer.xamarin.com/releases/\r\nScroll down, and find this link\r\nhttps://developer.xamarin.com/releases/xamarin-forms/xamarin-forms-3.2/\r\nWhich takes me to a page that says to go to this link\r\nhttps://developer.xamarin.com/guides/cross-platform/xamarin-forms/\r\nWhich has a link that goes here\r\nhttps://developer.xamarin.com/releases/xamarin-forms/\r\nWhich has a link that goes back to a page I've been to before\r\nhttps://developer.xamarin.com/releases/xamarin-forms/xamarin-forms-3.2/\r\n\r\nI end up in a loop, and none of the pages have release notes."},{"Id":"8261719299","Type":"IssuesEvent","CreatedAt":"2018-09-13T18:52:49","Actor":"ceblanda","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3779","RelatedDescription":"Opened issue \"Scrolling area not recalculated on Rotation for ScrollView or Listview in a ContentView \" (#3779) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have a page that contains a StackedLayout, one child of the StackedLayout is a ContentView, and the ContentView contains a ListView or a ScrollView.  If the page is created in Portrait Orientation, then the device is rotated to Landscape, the scrolling area does not increase so you can not scroll to the bottom items\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample program while holding the device in Portrait mode.  Look at the number of items in the listview.  \r\n2. Rotate the device to Landscape and attempt to scroll to the end of the list\r\n3. Rotate back to Portrait mode and open the menu (It is a Master/Detail page)\r\n4. Choose another page and repeat the steps above.\r\n5, Rotate the device to Landscape mode, open the menu, choose one of the pages.  Note that now you can scroll to the last element. \r\n\r\n### Expected Behavior\r\nUpon rotation to Landscape you should be able to scroll through the full page.\r\n\r\n### Actual Behavior\r\nThe scrolling is limited to the amount of scrolling that was variable in Portrait Orientation.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2 pre3 and 3.1\r\n- Last known good version: could not find one, only went back to 3.0\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n  - Android: 8.1 \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n[ContentView_Rotation_Scroll.zip](https://github.com/xamarin/Xamarin.Forms/files/2380608/ContentView_Rotation_Scroll.zip)\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8261594983","Type":"IssuesEvent","CreatedAt":"2018-09-13T18:30:38","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3275","RelatedDescription":"Closed issue \"[iOS] For ListView in Recycle mode ScrollTo causes cell leak and in some cases NRE\" (#3275) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen ListView uses Recycle mode and cells have MenuItem and a framework like Prism.Forms is used then ListView.ScrollTo causes NRE.\r\n\r\nRoot cause - ListView.ScrollTo leaks cells in Recycle mode. Leaked cells with MenuItem still listen to OnMenuItemPropertyChanged and after navigating away from the page Prism.Forms sets BindingContext to null which causes NRE in ContextActionsCell.SetupSelection as GestureRecognizers is already null.\r\n\r\n**Another way to get leaked cells is to scroll the list a bit then rotate device and scroll again, go back - crash.**\r\n\r\n### Steps to Reproduce\r\n\r\nRun App2.iOS project from this solution (can be tricky to build, but possible):\r\nhttps://github.com/VitalyKnyazev/Leaking-ListView\r\n\r\n1. Navigate to Transaction page\r\n2. Click 'Scroll to'\r\n3. Navigate back\r\n\r\n### Expected Behavior\r\nNo cells are leaked, like when for example UITableView.ScrollRectToVisible is used to implement ListView.ScrollTo instead of UITableView.ScrollToRow.\r\n\r\n### Actual Behavior\r\nRecycled cells are leaked when UITableView.ScrollToRow is used, looks like a bug in iOS.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.583944\r\n- Last known good version: N/A\r\n- IDE: Visual Studio 2017 15.7.5\r\n- Platform Target Frameworks: \r\n  - iOS:  11.4.1\r\n\r\n- Nuget Packages: Xamarin.Forms 3.1.0.583944\r\n- Affected Devices: iPhone/iPad\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/VitalyKnyazev/Leaking-ListView"},{"Id":"8261562208","Type":"PullRequestEvent","CreatedAt":"2018-09-13T18:25:18","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3714","RelatedDescription":"Merged pull request \"[iOS] Fix NRE on ContextCell\" (#3714) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix a NRE when ContextCell is being disposed\r\n\r\n### Issues Resolved ### \r\n- fixes #3275 \r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nGo to test 3275 and follow instructions \r\n \r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8261544639","Type":"IssuesEvent","CreatedAt":"2018-09-13T18:22:34","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3626","RelatedDescription":"Reopened issue \"ViewCellRenderer ignores the accessory (if any) when getting the width\" (#3626) at xamarin/Xamarin.Forms","RelatedBody":"https://github.com/xamarin/Xamarin.Forms/blob/a8eab7f46a394ee6e8f9824737684937bd0c7868/Xamarin.Forms.Platform.iOS/Cells/ViewCellRenderer.cs#L117\r\n\r\nIf an accessory is set then use size.Width - 20 (for example), otherwise use size.Width\r\n"},{"Id":"8261268557","Type":"IssuesEvent","CreatedAt":"2018-09-13T17:31:18","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3757","RelatedDescription":"Closed issue \"[iOS] SafeAreaInsets is difficult to use correctly - not knowing when it changes\" (#3757) at xamarin/Xamarin.Forms","RelatedBody":"The `UseSafeArea` platform specific is easy to use and works well. But for more advanced scenarios when you want to use `SafeAreaInsets`, there are problems.\r\n\r\nThere does not seem to be a way to know when it changes. This is a big problem for an app that supports rotation.\r\n\r\nAs a subset of this, I'm also not sure when it is first set. In the first call to a page's `OnSizeAllocated` method for instance it does not appear to be set.\r\n\r\nOn an app I worked on that didn't support rotation, it was easy to work around. We had a splash page (that didn't care about the safe area itself) that would grab the insets in `OnAppearing` and put them in the app resources. Other pages could then use them where appropriate. That's no longer a solution for an app supporting rotation.\r\n\r\nI'm not sure what the solution should be. One possibility would be to make the safe are a property on `ContentPage` instead of being a platform specific (especially since something will have to be done about Android P's display cutouts)."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8262288988","Type":"IssuesEvent","CreatedAt":"2018-09-13T20:42:08","Actor":"chkn","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4813","RelatedDescription":"Opened issue \"Missing binding: [NSMutableDictionary addEntriesFromDictionary:]\" (#4813) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\nhttps://developer.apple.com/documentation/foundation/nsmutabledictionary/1411035-addentriesfromdictionary?language=objc\r\n\r\n### Steps to Reproduce\r\n\r\n1. Try to use the API\r\n\r\n### Expected Behavior\r\n\r\nThere is a way to call it from C#\r\n\r\n### Actual Behavior\r\n\r\nThere appears to be no way to call it from C#\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.1 (build 7)\r\nInstallation UUID: bc5e4cf1-375a-48d4-b837-aea80fd6075a\r\nRuntime:\r\n\tMono 5.12.0.305 (2018-02/e0e035e3b14) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000305\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t2.0.0-preview2-25407-01\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t2.0.0-preview2-006497\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.24)\r\nBuild 10A254a\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.3.658 (Visual Studio Community)\r\nHash: 1eefd4e3\r\nBranch: \r\nBuild date: 2018-08-21 15:01:53-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.3.538 (Visual Studio Community)\r\nHash: 1eefd4e3\r\nBranch: HEAD\r\nBuild date: 2018-08-21 15:01:52-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.18 (Visual Studio Community)\r\nAndroid SDK: /Users/alcorra/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706010007\r\nGit revision: 7c9e755fe667840f2eed42b2e7910ec18ef51b82\r\nBuild date: 2018-08-24 02:25:33+00\r\nBuild branch: release-7.6-xcode10\r\nXamarin extensions: 1196f085605a84ce99f390a1aaee0bf257d31a50\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nAddinMaker 1.4.3\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8262222939","Type":"PullRequestEvent","CreatedAt":"2018-09-13T20:29:25","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4812","RelatedDescription":"Opened pull request \"[tests][introspection] Re-enable 'RPSystemBroadcastPickerView' in tests\" (#4812) at xamarin/xamarin-macios","RelatedBody":"The type was not available in the simulator(s) before GM\n\nref: https://github.com/xamarin/xamarin-macios/issues/4189"},{"Id":"8262074215","Type":"PullRequestEvent","CreatedAt":"2018-09-13T20:00:55","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4811","RelatedDescription":"Opened pull request \"[xtro] Cleanup non used .todo files\" (#4811) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":88,"FavoriteCount":53,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":86,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-14T05:30:55.2408813Z","RunDurationInMilliseconds":3873}