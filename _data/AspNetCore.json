{"Data":{"Blog":{"FeedItems":[{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7050203332","Type":"IssuesEvent","CreatedAt":"2018-01-03T03:58:24","Actor":"reduckted","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2738","RelatedDescription":"Opened issue \"Visual Basic .NET (VB.NET) support in ASP.NET Core\" (#2738) at aspnet/Home","RelatedBody":"There have been many questions asked about VB.NET support in ASP.NET Core over the past few years. If you follow them, they all lead to dead-ends - either closed with no real response, or they're moved to other repositories that are unrelated to ASP.NET Core (such as somewhere in the [dotnet organization](https://github.com/dotnet/)).\r\n\r\nOver that time, there's been talk of supporting VB. It's completely understandable that ASP.NET Core didn't support VB from the outset. The project was going through a lot of rapid change, so it made sense to focus on C# initially and add support for other languages later. But the idea of supporting VB seemed to get lost along the way.\r\n\r\nHere's a brief timeline:\r\n\r\n**Dec 16, 2014:**\r\n> We plan to have extensibility points so other languages like VB, F#, etc can be added via the form of a support package or such.\r\nhttps://github.com/aspnet/Home/issues/236#issuecomment-67046039\r\n\r\n**Apr 25, 2015:**\r\n> Hey everyone, good news! We've announced plans to support VB in ASP.NET 5 / DNX!\r\nhttps://github.com/aspnet/Home/issues/236#issuecomment-96003847\r\n\r\n> We are excited today to announce that ASP.NET 5 will have full support with Visual Basic (both tooling and runtime – including cross platform runtime support). \r\nhttps://blogs.msdn.microsoft.com/webdev/2015/04/24/making-it-better-asp-net-with-visual-basic-14/\r\n\r\n**Nov 19, 2016:**\r\nVB Support disappears from the roadmap:\r\n```diff\r\n |1.0.4|Feb 2017|\r\n |1.2|Q2 2017|\r\n \r\n-## Future Work\r\n-\r\n-Visual Basic support.\r\n-\r\n <em><sup>*</sup> References to yearly quarters (Q1, Q2, Q3, Q4) are calendar-based</em>\r\n```\r\nhttps://github.com/aspnet/Home/wiki/Roadmap/_compare/2138fe4ff8a437e8edefc333189aaa8d9b5afb6a...b49bda1f8f40975b39d14d199a9ddac0a2beb45e\r\n\r\n**Dec 12, 2017:**\r\n> there are no plans to add a VB template for ASP.NET Core\r\nhttps://github.com/aspnet/Home/issues/2305#issuecomment-351501913\r\n\r\nVB support seems to have gone from\r\n\r\n*\"It doesn't work yet, but we plan to allow VB\"*\r\n\r\nto\r\n\r\n*\"There will be full support for VB!\"*\r\n\r\nto\r\n\r\n*\"VB is not supported, but shhh, don't tell anyone\".*\r\n\r\nSo my first question is:\r\n\r\n### What happened and why was there no announcement or discussion with the community about this?\r\n\r\nIt seems strange to go from announcing support for VB.NET in ASP.NET Core in an official blog post, to not supporting it at all without any feedback. Was there any announcement about this? If there was, it certainly wasn't widely published.\r\n\r\nMy next, and _more important_ question is:\r\n\r\n### What can the VB community do to help add support for VB.NET to ASP.NET Core?\r\n\r\nAre there project templates that we can write?\r\nAre there code generators that we can implement?\r\nWhat can we do make ASP.NET Core as awesome for VB developers as it is for C# developers?\r\n\r\n---\r\n\r\nI've thrown together a [simple ASP.NET Core app](https://github.com/reduckted/aspnetvb) in VB by creating a .NET Core console application, editing the project file and copying the classes generated from the ASP.NET Core C# template. It works fine, and even though it's only very basic, I can't see any reason why VB.NET cannot be supported."},{"Id":"7049667999","Type":"IssuesEvent","CreatedAt":"2018-01-02T23:37:02","Actor":"HaoK","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2390","RelatedDescription":"Closed issue \"[Annoucement][Draft] IOptionsSnapshot is now a scoped service\" (#2390) at aspnet/Home","RelatedBody":"_From @Tratcher on Tuesday, July 18, 2017 3:35:23 PM_\r\n\r\nIn 1.x IOptionsSnapshot would only reload based on notified changes to its data source (e.g. config). In 2.0 the service is now scoped and reloaded per request instead.\r\n\r\nIOptionsMonitor is the replacement.\r\n\r\n_Copied from original issue: aspnet/Options#217_"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7050041945","Type":"IssuesEvent","CreatedAt":"2018-01-03T02:32:58","Actor":"dannyzhan","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1266","RelatedDescription":"Opened issue \"query string is too long with big bearer token attached in the URL\" (#1266) at aspnet/SignalR","RelatedBody":"Guys,\r\n   I am using JWT token in a asp.net core 2.0 project with signalr.\r\nTo attach the token in the query string works in my project.\r\nHowever, after the token gets bigger, the browser tells me the query string is too long.\r\nIs there another way to send token?\r\nCan we send the token with the sub protocol?\r\nThanks!"},{"Id":"7049910791","Type":"PullRequestEvent","CreatedAt":"2018-01-03T01:26:11","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1262","RelatedDescription":"Merged pull request \"Refactor HubContext\" (#1262) at aspnet/SignalR","RelatedBody":"Changing HubContext to not implement IHubClients. Instead we'll introduce another type that will be exposed through the `Clients` property.\r\nThis allows us to rename some of the IHubClients properties (`MultipleConnections` -> `Clients`, `MultipleGroups` -> `Groups` etc)."},{"Id":"7049846537","Type":"IssuesEvent","CreatedAt":"2018-01-03T00:55:48","Actor":"cooliodoc","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1265","RelatedDescription":"Opened issue \"HubConnection disconnects if it sends bad message\" (#1265) at aspnet/SignalR","RelatedBody":"When using the C# HubConnection, if I send a message such as:\r\n\r\n`await Connection.SendAsync(\"TestMethod\");`\r\n\r\nand I don't have TestMethod implemented on the Hub then it disconnects. Also, if the parameters don't match then it disconnects.\r\n\r\nI wouldn't expect it to disconnect, just to log an error."},{"Id":"7049831458","Type":"PullRequestEvent","CreatedAt":"2018-01-03T00:49:03","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1243","RelatedDescription":"Merged pull request \"Refactor HttpClient and use it in LongPollingTransport\" (#1243) at aspnet/SignalR","RelatedBody":"This refactors the HttpClient abstraction a bit and changes LongPollingTransport to use it. This will allow us to add better unit tests of the LongPolling transport. Next I'll look at a similar abstraction for WebSocket and EventSource so we can test all the transports.\r\n\r\nNote: I haven't actually added any new tests for LongPolling, but I added some tests for additional things.\r\n\r\nTo handle cancellation of Http requests, I whipped up my own version of [`AbortController` and friends](https://developer.mozilla.org/en-US/docs/Web/API/AbortController), an recently-specified JavaScript API that's similar to `CancellationTokenSource` and friends. Rather than doing it as a polyfill, since it's so simple, I don't even bother looking for the real one. It turns out that's a little tricky to do from within your own TypeScript module (since you have to mess with globals)."},{"Id":"7049591693","Type":"PullRequestEvent","CreatedAt":"2018-01-02T23:07:39","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1264","RelatedDescription":"Opened pull request \"Lock around heartbeat handler\" (#1264) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7050308424","Type":"IssuesEvent","CreatedAt":"2018-01-03T05:02:01","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7172","RelatedDescription":"Closed issue \"please keep CI green in 2018\" (#7172) at aspnet/Mvc","RelatedBody":"Last time the dev branch passed CI tests was December 10. That was 22 days ago. Projects that do not maintain CI are much more difficult to contribute to. Here is how far I have to zoom out at https://github.com/aspnet/Mvc/commits/dev to see the last green CI checks.\r\n\r\n![image](https://user-images.githubusercontent.com/80104/34469296-a834b04a-eefa-11e7-923b-2bfe08707b63.png)\r\n"},{"Id":"7050302255","Type":"PullRequestEvent","CreatedAt":"2018-01-03T04:58:41","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7184","RelatedDescription":"Merged pull request \"Add skips for dotnet/standard#567\" (#7184) at aspnet/Mvc","RelatedBody":"This issue causes problems with ValueTuple when used across assembly\r\nboundaries between netstandard and net4X when net471 is installed. These\r\ntests fail consistently in appveyor and will fail on any machine with\r\nnet471 installed."},{"Id":"7050270129","Type":"PullRequestEvent","CreatedAt":"2018-01-03T04:38:45","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7173","RelatedDescription":"Closed pull request \"disable the net461 tests\" (#7173) at aspnet/Mvc","RelatedBody":"Trying to get the CI to be green by temporarily disabling the net461 tests until someone fixes them.\r\n#7172"},{"Id":"7050268633","Type":"PullRequestEvent","CreatedAt":"2018-01-03T04:37:46","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7184","RelatedDescription":"Opened pull request \"Add skips for dotnet/standard#567\" (#7184) at aspnet/Mvc","RelatedBody":"This issue causes problems with ValueTuple when used across assembly\r\nboundaries between netstandard and net4X when net471 is installed. These\r\ntests fail consistently in appveyor and will fail on any machine with\r\nnet471 installed."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7049699194","Type":"PullRequestEvent","CreatedAt":"2018-01-02T23:49:46","Actor":"rynowak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1551","RelatedDescription":"Merged pull request \"React to breaking change in MVC\" (#1551) at aspnet/Identity","RelatedBody":"/cc @javiercn"},{"Id":"7049685857","Type":"PullRequestEvent","CreatedAt":"2018-01-02T23:44:13","Actor":"rynowak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1551","RelatedDescription":"Opened pull request \"React to breaking change in MVC\" (#1551) at aspnet/Identity","RelatedBody":"/cc @javiercn"},{"Id":"7048632997","Type":"IssuesEvent","CreatedAt":"2018-01-02T18:32:20","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1550","RelatedDescription":"Opened issue \"Productionize IEmailSender interface\" (#1550) at aspnet/Identity","RelatedBody":"We need to refactor the interface that we had on the template (now on the UI package) into a shape that we like, and find the right place for it. (probably the M.A.I package).\r\n\r\nMy proposal\r\n```csharp\r\npublic interface IEmailSender \r\n{\r\n    Task SendAsync(Email email);\r\n}\r\n\r\npublic class Email\r\n{\r\n    public IList<string> To { get; }\r\n    public string Subject { get; set; }\r\n    public string Body { get; set; }\r\n}\r\n```\r\n\r\nThe idea of using a class is to allow for adding new members if necessary in the future without causing breaking changes.\r\n\r\n/cc: @HaoK "},{"Id":"7043865312","Type":"IssuesEvent","CreatedAt":"2017-12-31T14:10:53","Actor":"aneequrrehman","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1549","RelatedDescription":"Opened issue \"Changing the primary key of IdentityUserClaim<> and IdentityRoleClaim<>\" (#1549) at aspnet/Identity","RelatedBody":"Well, I have updated everything necessary to change all the Identity tables' primary keys to be `Guid`s, but I couldn't find any way to change the primary keys' types for `IdentityUserClaim<>` and `IdentityRoleClaim<>` tables. \r\n\r\nI have added this line in `ApplicationUser.cs`\r\n\r\n    public virtual ICollection<IdentityUserClaim<Guid>> Claims { get; } = new List<IdentityUserClaim<Guid>>();\r\n\r\n\r\nThere should be some way to change the primary keys for `IdentityUserClaim<>` and `IdentityRoleClaim<>`?. \r\n\r\nPerhaps something like `IdentityUserClaim<TKey, TUserKey>` instead of `IdentityUserClaim<TKey>` (the name **TKey** is misleading as well unless one looks at the summary, IMHO)? Or am I missing something?"},{"Id":"7042938477","Type":"PullRequestEvent","CreatedAt":"2017-12-30T20:27:08","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1548","RelatedDescription":"Merged pull request \"Remove unnecessary dependencies\" (#1548) at aspnet/Identity","RelatedBody":""},{"Id":"7042722883","Type":"IssuesEvent","CreatedAt":"2017-12-30T17:15:05","Actor":"dpedrelli","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1540","RelatedDescription":"Closed issue \"An error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\" (#1540) at aspnet/Identity","RelatedBody":"With Entity Framework Core 2.0.0 libraries, I was able to add multiple Identity instances and create a migration.\r\n\r\n```\r\n            services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n            services.AddIdentity<DistributorApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<DistributorApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n            services.AddIdentity<SupplierApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<SupplierApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n```\r\n\r\nI added a library that used Entity Framework Core 2.0.1 and I upgraded all of my libraries to 2.0.1.  Now, the above codes produces\r\n\r\n```\r\nAn error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time\r\n```\r\n\r\nWhen I try to create a migration.\r\n\r\nI am using the format:\r\n\r\n```\r\npublic class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n    }\r\n```\r\n\r\nIf one package references 2.0.1 and the other packages reference 2.0.0, I get the following build error:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1705\tAssembly 'Microsoft.EntityFrameworkCore.Relational' with identity 'Microsoft.EntityFrameworkCore.Relational, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' uses 'Microsoft.EntityFrameworkCore, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.EntityFrameworkCore' with identity 'Microsoft.EntityFrameworkCore, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\tSM.DAL\tw:\\documents\\visual studio 2017\\Projects\\SelectMarketing\\SM.DAL\\CSC\t1\tActive\r\n```\r\n\r\nIf all projects reference 2.0.0, I get the following migration error:\r\n\r\n```\r\nAn error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time.\r\n```\r\n\r\nAt one point, I had three instances of Identity and was able to create three, separate migrations."},{"Id":"7042056112","Type":"IssuesEvent","CreatedAt":"2017-12-30T05:42:52","Actor":"embryologist","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1546","RelatedDescription":"Closed issue \"Optimistic concurrency failure upon using RoleManager DeleteAsync!\" (#1546) at aspnet/Identity","RelatedBody":"My implementation,\r\n\r\n**`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\nI keep receiving this error by calling `DeleteAsync`\r\n> Optimistic concurrency failure, object has been modified."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7049776399","Type":"IssuesEvent","CreatedAt":"2018-01-03T00:23:26","Actor":"zygimantas","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2242","RelatedDescription":"Closed issue \"UseHttps with dotnet run --project fails\" (#2242) at aspnet/KestrelHttpServer","RelatedBody":"**Actual results:**\r\n\r\n```\r\nApplication startup exception:\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException:\r\nThe system cannot find the path specified\r\n```\r\n\r\n**Reproduction steps**\r\n\r\nPass certificate file path to UseHttps method as string (tested with ../ prefix only):\r\n```\r\n../Certificate.pfx \r\n```\r\n\r\nLaunch project like this:\r\n\r\n```\r\ncd Content\r\ndotnet run --project ../Website.csproj\r\n```\r\n\r\nProject file structure:\r\n```\r\n- Project\r\n      Certificate.pfx\r\n      Website\r\n          Content\r\n          Website.csproj\r\n```\r\n\r\n**Expected results**\r\n\r\nThe same as without --project, application should start and certificate should be loaded.\r\n\r\n**Dotnet Info**\r\n\r\n.NET Command Line Tools (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df"},{"Id":"7049556443","Type":"IssuesEvent","CreatedAt":"2018-01-02T22:55:33","Actor":"zygimantas","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2242","RelatedDescription":"Opened issue \"UseHttps with dotnet run --project fails\" (#2242) at aspnet/KestrelHttpServer","RelatedBody":"**Actual results:**\r\n\r\n```\r\nApplication startup exception:\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException:\r\nThe system cannot find the path specified\r\n```\r\n\r\n**Reproduction steps**\r\n\r\nPass certificate file path to UseHttps method as string (tested with ../ prefix only):\r\n```\r\n../Certificate.pfx \r\n```\r\n\r\nLaunch project like this:\r\n\r\n```\r\ncd Content\r\ndotnet run --project ../Website.csproj\r\n```\r\n\r\nProject file structure:\r\n```\r\n- Project\r\n      Certificate.pfx\r\n      Website\r\n          Content\r\n          Website.csproj\r\n```\r\n\r\n**Expected results**\r\n\r\nThe same as without --project, application should start and certificate should be loaded.\r\n"},{"Id":"7049480525","Type":"IssuesEvent","CreatedAt":"2018-01-02T22:30:52","Actor":"rynowak","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2241","RelatedDescription":"Opened issue \"ConnectionResetException running on netcoreapp2.1\" (#2241) at aspnet/KestrelHttpServer","RelatedBody":"We hit this in issue in JitBench running on the ASP.NET Core 2.0.0 libraries against latest bits of CoreFx. See https://github.com/aspnet/JitBench/issues/80\r\n\r\nThe easiest way to repro is:\r\nClone aspnet/JitBench\r\nrun appveyor.ps1 (that will fail)\r\ndotnet run or launch VS from the same console.\r\n\r\nJitBench will throw trying to do an HTTP request as part of it's measurements, but the more interesting part is that that site is unreachable using a browser.\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n\r\n>\tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ref Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult result)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.ProcessRequestsAsync()\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.Threading.Tasks.VoidTaskResult>.AsyncStateMachineBox<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.<ProcessRequestsAsync>d__2>.MoveNext()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe..cctor.AnonymousMethod__67_3(object o)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.Schedule.AnonymousMethod__0()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.RunAction.AnonymousMethod__3_0(object o)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\tUnknown\r\n\r\n```"},{"Id":"7048365293","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:21:41","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2232","RelatedDescription":"Closed issue \"Build.cmd fails due to new BenchmarkDotNet RELEASE error\" (#2232) at aspnet/KestrelHttpServer","RelatedBody":"build.cmd now fails by default on dev machines because BenchmarkDotNet started issuing a fatal error if the project is not compiled as RELEASE.\r\n\r\nworkaround: `build /p:configuration=Release`\r\n\r\nProposals:\r\n- Disable BenchmarkDotNet for DEBUG?\r\n- Suppress the error?\r\n"},{"Id":"7048346167","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:16:47","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2240","RelatedDescription":"Closed issue \"Set-Cookie shouldn't return secure cookies on http request\" (#2240) at aspnet/KestrelHttpServer","RelatedBody":"When using ASP.Net Cookie auth and the `CookieSecure` property is set to `CookieSecurePolicy.Always` and a request is made via http to login the `Set-Cookie` header is returned with a `secure` suffix.  I don't think it should do this if the request is made via `http`, it should only return that header if made via `https`\r\n\r\nThere is nothing stopping a client taking and using the cookie value to issue a request which leads to the question for maybe https://github.com/aspnet/Security as to whether that should be allowed.\r\n\r\nAt the moment the onus is on the developer to not allow requests that are made over http when you have `CookieSecurePolicy.Always` set. I would expect the server and/or fwk to step in here.\r\n\r\ncc @PinpointTownes"},{"Id":"7048339725","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:15:10","Actor":"jchannon","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2240","RelatedDescription":"Opened issue \"Set-Cookie shouldn't return secure cookies on http request\" (#2240) at aspnet/KestrelHttpServer","RelatedBody":"When using ASP.Net Cookie auth and the `CookieSecure` property is set to `CookieSecurePolicy.Always` and a request is made via http to login the `Set-Cookie` header is returned with a `secure` suffix.  I don't think it should do this if the request is made via `http`, it should only return that header if made via `https`\r\n\r\nThere is nothing stopping a client taking and using the cookie value to issue a request which leads to the question for maybe https://github.com/aspnet/Security as to whether that should be allowed.\r\n\r\nAt the moment the onus is on the developer to not allow requests that are made over http when you have `CookieSecurePolicy.Always` set. I would expect the server and/or fwk to step in here.\r\n\r\ncc @pinpoint"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7049850168","Type":"PullRequestEvent","CreatedAt":"2018-01-03T00:57:36","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1901","RelatedDescription":"Opened pull request \"Fix tag helper discovery in our tool\" (#1901) at aspnet/Razor","RelatedBody":""},{"Id":"7049824315","Type":"PullRequestEvent","CreatedAt":"2018-01-03T00:45:33","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1900","RelatedDescription":"Merged pull request \"Attempt to fix travis again\" (#1900) at aspnet/Razor","RelatedBody":""},{"Id":"7049330599","Type":"PullRequestEvent","CreatedAt":"2018-01-02T21:46:45","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1900","RelatedDescription":"Opened pull request \"Attempt to fix travis again\" (#1900) at aspnet/Razor","RelatedBody":""},{"Id":"7049275027","Type":"PullRequestEvent","CreatedAt":"2018-01-02T21:30:51","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1894","RelatedDescription":"Merged pull request \"Add metadata to Razor\" (#1894) at aspnet/Razor","RelatedBody":"This PR introduces standard metadata to Razor. This change begins to\r\nformalize the contract between generated code produced by Razor and\r\nruntimes that want to load and interact with this code.\r\n\r\nThis is a step on making MVC a 'plugin' to Razor rather than the only\r\npossible implementation. Since we're doing MSBuild work - this is the\r\nright time to designate the current interaction between Razor and MVC as\r\n'legacy' and move forward.\r\n\r\nAdditionally, we need the source thumbprinting to make re-compilation of\r\nRazor a thing."},{"Id":"7048923012","Type":"IssuesEvent","CreatedAt":"2018-01-02T19:50:24","Actor":"JeanCollas","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1898","RelatedDescription":"Opened issue \"Consider adding HTML templates\" (#1898) at aspnet/Razor","RelatedBody":"Would adding custom local HTML templates not be a good option to consider?\r\nThis would be an option for the implementation:\r\n(The following code is written in this editor and is only intended to show the functionality.)\r\n\r\n```\r\n\r\n@functions{\r\n    IHtmlContent DispItem(string id, string name, string description)\r\n    {\r\n        <li>\r\n            <a href=\"/manage/@id\">@name</a>\r\n            <span>@description</span>\r\n        </li>\r\n    }\r\n}\r\n...\r\n<ul id=\"list1\">\r\n    @foreach(var item in items1)\r\n    {\r\n        DispItem(item.Id, item.Name, item.Description)\r\n    }\r\n</ul>\r\n\r\n<ul id=\"list2\">\r\n    @foreach(var item in items2)\r\n    {\r\n        DispItem(item.Id, item.Name, item.Description)\r\n    }\r\n</ul>\r\n\r\n\r\n```\r\n\r\nCreating a separate file and model for this kind of display is sometimes too much as compared as what it intends to do, simplifying this by allowing local templates would be helpful. Except if I missed it, it is not possible at this time (except by using html strings concat or external sub-pages/components)."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7048395292","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:35:05","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Opened issue \"Using the \"Home\" repo for issue management of other repos\" (#283) at aspnet/Announcements","RelatedBody":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n"},{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2018-01-03T05:30:09.6634894Z","RunDurationInMilliseconds":7881}