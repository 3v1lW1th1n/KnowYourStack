{"Data":{"Blog":{"FeedItems":[{"Title":"Are your Windows Forms and WPF applications ready for .NET Core 3.0?","PublishedOn":"2018-08-08T17:00:25+00:00","CommentsCount":78,"FacebookCount":0,"Summary":"Download Portability Analyzer (2.37 MB) At Build 2018 we announced that we are enabling Windows desktop applications (Windows Forms and Windows Presentation Framework (WPF)) with .NET Core 3.0. You...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/08/08/are-your-windows-forms-and-wpf-applications-ready-for-net-core-3-0/","RawContent":null},{"Title":"Announcing ML.NET 0.4","PublishedOn":"2018-08-07T21:23:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"A few months ago we released ML.NET 0.1 at //Build 2018., ML.NET is a cross-platform, open source machine learning framework for .NET developers. We’ve gotten great feedback so far and would like to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/08/07/announcing-ml-net-0-4/","RawContent":null},{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-08-06T17:00:13+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/08/06/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":"Tiered Compilation Preview in .NET Core 2.1","PublishedOn":"2018-08-02T22:22:13+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"If you are a fan of .NET performance there has been a lot great news lately such as Performance Improvements in .NET Core 2.1 and Announcing .NET Core 2.1, but we&#8217;ve got more. Tiered compilation...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/08/02/tiered-compilation-preview-in-net-core-2-1/","RawContent":null},{"Title":".NET Framework July 2018 Update","PublishedOn":"2018-07-30T23:17:45+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"Update: 8/03/2018 Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See dotnet/announcements #74. Today, we released the July 2018 Update that fixes an issue in .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/","RawContent":null},{"Title":"Announcing F# 4.5 Preview","PublishedOn":"2018-07-26T19:22:31+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We’re very excited to announce that we’ll be shipping a new language version of F# soon. The version will be F# 4.5. F# 4.5 has been developed entirely via an open RFC (requests for comments) process,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/26/announcing-f-4-5-preview/","RawContent":null},{"Title":"Advisory on July 2018 .NET Framework Updates","PublishedOn":"2018-07-21T00:55:00+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"Update as of 8/03/2018: Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See dotnet/announcements #74. Update as of 7/30/2018: A new .NET Framework July 2018 Update...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3632","PublishedOn":"2018-07-19T00:30:16+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"We released the first Early Access build for the .NET Framework 4.8 last month (June-2018) and are happy to announce the next build (3632) for your feedback. This is one of the in-development builds...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/","RawContent":null},{"Title":"IL Linker — Help us build the best experience!","PublishedOn":"2018-07-11T16:44:27+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We are currently working on the IL Linker and would love to get your feedback. Please fill out the brief survey below and help shape the future of the IL Linker by telling us about your current...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/11/il-linker-help-us-build-the-best-experience/","RawContent":null},{"Title":".NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog","PublishedOn":"2018-07-10T19:03:38+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.2 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This release includes...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7951838452","Type":"IssuesEvent","CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/107","RelatedDescription":"Opened issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107) at dotnet/home","RelatedBody":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS."},{"Id":"7948314683","Type":"IssuesEvent","CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/106","RelatedDescription":"Opened issue \"Updates are not requested from local WSUS\" (#106) at dotnet/home","RelatedBody":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?"},{"Id":"7939112505","Type":"PullRequestEvent","CreatedAt":"2018-07-09T17:43:55","Actor":"slide","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Opened pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"7896820874","Type":"IssuesEvent","CreatedAt":"2018-06-29T09:52:53","Actor":"tomkerkhove","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Opened issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8075229337","Type":"IssuesEvent","CreatedAt":"2018-08-07T04:18:02","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Opened issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78) at dotnet/announcements","RelatedBody":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)"},{"Id":"8025565746","Type":"IssuesEvent","CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Opened issue \"https://dot.net now using TLS 1.2-only\" (#77) at dotnet/announcements","RelatedBody":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689"},{"Id":"7999286881","Type":"IssuesEvent","CreatedAt":"2018-07-21T22:29:06","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Opened issue \"July 2018 .NET Updates\" (#76) at dotnet/announcements","RelatedBody":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Documents\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n"},{"Id":"7997769217","Type":"IssuesEvent","CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Opened issue \"Advisory on July 2018 .NET Framework Updates\" (#74) at dotnet/announcements","RelatedBody":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of applications that fail to start or don't run correctly after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\nDiscussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Workaround\r\n\r\nTemporarily uninstall the [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) to restore functionality until a new update has been released to correct this problem. \r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object\r\n"},{"Id":"7945147887","Type":"IssuesEvent","CreatedAt":"2018-07-10T17:00:38","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.3 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.3 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_\r\n"},{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8093962848","Type":"IssuesEvent","CreatedAt":"2018-08-10T04:23:05","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/19403","RelatedDescription":"Opened issue \"OSX CoreFX CI Leg is Consistently Failing\" (#19403) at dotnet/coreclr","RelatedBody":"It appears that all runs of this CI leg are failing due to tests timing out: https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_debug_osx10.12_corefx_innerloop_prtest/"},{"Id":"8093849616","Type":"IssuesEvent","CreatedAt":"2018-08-10T03:34:18","Actor":"alan1010ten","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/19402","RelatedDescription":"Opened issue \"Run DotNet Core App on X86 Without OS\" (#19402) at dotnet/coreclr","RelatedBody":"How to run DotNet Core app on X86, without OS?"},{"Id":"8093586412","Type":"PullRequestEvent","CreatedAt":"2018-08-10T01:51:07","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/19401","RelatedDescription":"Opened pull request \"update order of locks so jitstress is unblocked\" (#19401) at dotnet/coreclr","RelatedBody":""},{"Id":"8093574760","Type":"IssuesEvent","CreatedAt":"2018-08-10T01:46:20","Actor":"4creators","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/19400","RelatedDescription":"Opened issue \"Track conversion of Intel Hardware Intrinsics tests to generated format\" (#19400) at dotnet/coreclr","RelatedBody":"This is an umbrella issue to track progress of conversion of all tests as detailed in #19245 and #19246\r\n\r\n\r\n### Avx\r\n [ ]  Blend\r\n [ ]  BroadcastScalarToVector128\r\n [ ]  BroadcastScalarToVector256\r\n [ ]  BroadcastVector128ToVector256\r\n [ ]  CompareScalar\r\n [ ]  Compare\r\n [ ]  ConvertToSingle\r\n [ ]  ConvertToVector\r\n [ ]  DotProduct\r\n [ ]  HorizontalAdd\r\n [ ]  HorizontalSubtract\r\n [ ]  InsertExtractVector128\r\n [ ]  LoadAlignedVector256\r\n [ ]  LoadDquVector256\r\n [ ]  LoadVector256\r\n [ ]  MaskLoad\r\n [ ]  MoveMask\r\n [ ]  Permute2x128.Avx\r\n [ ]  SetAllVector256\r\n [ ]  SetVector256\r\n [ ]  SetZeroVector256\r\n [ ]  Sqrt\r\n [ ]  StaticCast\r\n [ ]  StoreAlignedNonTemporal\r\n [ ]  StoreAligned\r\n [ ]  Store\r\n [ ]  UnpackHigh\r\n [ ]  UnpackLow\r\n\r\n### Avx2\r\n [ ]  AddSaturate\r\n [ ]  BroadcastVector128ToVector256\r\n [ ]  ConvertToVector256\r\n [ ]  HorizontalAdd\r\n [ ]  HorizontalSubtract\r\n [ ]  LoadAlignedVector256NonTemporal\r\n [ ]  MoveMask\r\n [ ]  Multiply\r\n [ ]  ShiftLeftLogicalVariable\r\n [ ]  ShiftRightLogicalVariable\r\n [ ]  SubtractSaturate\r\n [ ]  UnpackHigh\r\n [ ]  UnpackLow\r\n\r\n### Sse\r\n [ ]  ConvertScalarToVector128Single\r\n [ ]  ConvertToInt32WithTruncation\r\n [ ]  ConvertToInt32\r\n [ ]  ConvertToInt64WithTruncation\r\n [ ]  ConvertToInt64\r\n [ ]  ConvertToSingle\r\n [ ]  LoadAlignedVector128\r\n [ ]  LoadHigh\r\n [ ]  LoadLow\r\n [ ]  LoadScalarVector128\r\n [ ]  LoadVector128\r\n [ ]  MoveHighToLow\r\n [ ]  MoveLowToHigh\r\n [ ]  MoveMask\r\n [ ]  MoveScalar\r\n [ ]  Prefetch\r\n [ ]  ReciprocalScalar\r\n [ ]  ReciprocalSqrtScalar\r\n [ ]  ReciprocalSqrt\r\n [ ]  Reciprocal\r\n [ ]  SetAllVector128\r\n [ ]  SetScalarVector128\r\n [ ]  SetVector128\r\n [ ]  SetZeroVector128\r\n [ ]  Shuffle\r\n [ ]  SqrtScalar\r\n [ ]  Sqrt\r\n [ ]  StaticCast\r\n [ ]  StoreAlignedNonTemporal\r\n [ ]  StoreAligned\r\n [ ]  StoreFence\r\n [ ]  StoreHigh\r\n [ ]  StoreLow\r\n [ ]  StoreScalar\r\n [ ]  Store\r\n [ ]  UnpackHigh\r\n [ ]  UnpackLow\r\n\r\n### Sse2\r\n [ ]  CompareEqualOrderedScalar\r\n [ ]  CompareEqualScalar\r\n [ ]  CompareEqualUnorderedScalar\r\n [ ]  CompareGreaterThanOrderedScalar\r\n [ ]  CompareGreaterThanOrEqualOrderedScalar\r\n [ ]  CompareGreaterThanOrEqualScalar\r\n [ ]  CompareGreaterThanOrEqualUnorderedScalar\r\n [ ]  CompareGreaterThanScalar\r\n [ ]  CompareGreaterThanUnorderedScalar\r\n [ ]  CompareLessThanOrderedScalar\r\n [ ]  CompareLessThanOrEqualOrderedScalar\r\n [ ]  CompareLessThanOrEqualScalar\r\n [ ]  CompareLessThanOrEqualUnorderedScalar\r\n [ ]  CompareLessThanScalar\r\n [ ]  CompareLessThanUnorderedScalar\r\n [ ]  CompareNotEqualOrderedScalar\r\n [ ]  CompareNotEqualScalar\r\n [ ]  CompareNotEqualUnorderedScalar\r\n [ ]  CompareNotGreaterThanOrEqualScalar\r\n [ ]  CompareNotGreaterThanScalar\r\n [ ]  CompareNotLessThanOrEqualScalar\r\n [ ]  CompareNotLessThanScalar\r\n [ ]  CompareOrderedScalar\r\n [ ]  CompareUnorderedScalar\r\n [ ]  ConvertScalarToVector128Double\r\n [ ]  ConvertScalarToVector128Int32\r\n [ ]  ConvertScalarToVector128Int64\r\n [ ]  ConvertScalarToVector128Single\r\n [ ]  ConvertScalarToVector128UInt32\r\n [ ]  ConvertScalarToVector128UInt64\r\n [ ]  ConvertToDouble\r\n [ ]  ConvertToInt32WithTruncation\r\n [ ]  ConvertToInt32\r\n [ ]  ConvertToInt64WithTruncation\r\n [ ]  ConvertToInt64\r\n [ ]  ConvertToUInt32\r\n [ ]  ConvertToUInt64\r\n [ ]  ConvertToVector128Double\r\n [ ]  ConvertToVector128Int32WithTruncation\r\n [ ]  ConvertToVector128Int32\r\n [ ]  ConvertToVector128Single\r\n [ ]  LoadAlignedVector128\r\n [ ]  LoadFence\r\n [ ]  LoadHigh\r\n [ ]  LoadLow\r\n [ ]  LoadScalarVector128\r\n [ ]  LoadVector128\r\n [ ]  MaskMove\r\n [ ]  MemoryFence\r\n [ ]  MoveMask\r\n [ ]  MoveScalar.Int64\r\n [ ]  MoveScalar.UInt64\r\n [ ]  MoveScalar\r\n [ ]  MultiplyHigh\r\n [ ]  MultiplyHorizontalAdd\r\n [ ]  MultiplyLow\r\n [ ]  Multiply\r\n [ ]  PackSignedSaturate\r\n [ ]  PackUnsignedSaturate\r\n [ ]  SetScalarVector128\r\n [ ]  SetVector128\r\n [ ]  SetZeroVector128\r\n [ ]  ShuffleHigh\r\n [ ]  ShuffleLow\r\n [ ]  Shuffle\r\n [ ]  SqrtScalar\r\n [ ]  Sqrt\r\n [ ]  StoreAlignedNonTemporal\r\n [ ]  StoreAligned\r\n [ ]  StoreHigh\r\n [ ]  StoreLow\r\n [ ]  StoreNonTemporal\r\n [ ]  StoreScalar\r\n [ ]  Store\r\n [ ]  SumAbsoluteDifferences\r\n [ ]  UnpackHigh\r\n [ ]  UnpackLow\r\n\r\n### Sse3\r\n [ ]  LoadAndDuplicateToVector128\r\n [ ]  LoadDquVector128\r\n [ ]  MoveAndDuplicate\r\n [ ]  MoveHighAndDuplicate\r\n [ ]  MoveLowAndDuplicate\r\n\r\n### Sse41\r\n [ ]  Blend\r\n [ ]  ConvertToVector128\r\n [ ]  DotProduct\r\n [ ]  LoadAlignedVector128NonTemporal\r\n [ ]  MinHorizontal\r\n [ ]  MultipleSumAbsoluteDifferences\r\n [ ]  Multiply\r\n\r\n### Sse42\r\n [ ]  Crc32\r\n\r\n### Ssse3\r\n [ ]  AlignRight\r\n"},{"Id":"8093511221","Type":"PullRequestEvent","CreatedAt":"2018-08-10T01:21:03","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/19399","RelatedDescription":"Opened pull request \"Moved ThreadLocal.cs to shared\" (#19399) at dotnet/coreclr","RelatedBody":"Related Corert PR :- https://github.com/dotnet/corert/pull/6201"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8093585236","Type":"PullRequestEvent","CreatedAt":"2018-08-10T01:50:40","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9810","RelatedDescription":"Opened pull request \"Update CLI branding to 2.1.203.\" (#9810) at dotnet/cli","RelatedBody":""},{"Id":"8093350291","Type":"IssuesEvent","CreatedAt":"2018-08-10T00:16:31","Actor":"richlander","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9809","RelatedDescription":"Opened issue \"Offer noun-first commands for existing verbs where noun isn't obvious \" (#9809) at dotnet/cli","RelatedBody":"Here is a sample (the first bit help) of CLI commands:\r\n\r\n``` console\r\nSDK commands:\r\n  add               Add a package or reference to a .NET project.\r\n  build             Build a .NET project.\r\n  build-server      Interact with servers started by a build.\r\n  clean             Clean build outputs of a .NET project.\r\n  help              Show command line help.\r\n  list              List project references of a .NET project.\r\n```\r\n\r\n- `build`, `build-server` and `clean` are obvious (to me) in terms of what they operate on\r\n- `add` and `list` are not obvious what they operate on.\r\n- `help` is a different case.\r\n\r\nPlease take a look at the rest of CLI commands to see where we should  add noun-first commands to improve clarity/usability and align with the more recent noun-first commands (like `tool`) that have been added."},{"Id":"8092930318","Type":"IssuesEvent","CreatedAt":"2018-08-09T22:02:39","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9806","RelatedDescription":"Closed issue \"Exclude default assemblies from nuget package\" (#9806) at dotnet/cli","RelatedBody":"Is it somehow possible to exclude the default assemblies, e.g. `<lib>/<framework>/SampleApp.dll`, from the final nuget package?\r\n\r\n\r\n"},{"Id":"8092923992","Type":"PullRequestEvent","CreatedAt":"2018-08-09T22:01:16","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9808","RelatedDescription":"Opened pull request \"Updating the CLI branding to 1.1.11.\" (#9808) at dotnet/cli","RelatedBody":""},{"Id":"8092236600","Type":"IssuesEvent","CreatedAt":"2018-08-09T19:34:34","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9288","RelatedDescription":"Closed issue \"PackAsTool generate shim in Build instead of Pack\" (#9288) at dotnet/cli","RelatedBody":"PackagedShimOutputDirectory currently set to temporary folder under IntermediateOutputPath. The producer (code gen in this case) need to unpack, sign and repack.\r\n\r\nThis ask is to generate shim during publish instead of pack so there is no repack required\r\n"},{"Id":"8092235275","Type":"IssuesEvent","CreatedAt":"2018-08-09T19:34:17","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9601","RelatedDescription":"Closed issue \"`dotnet clean` cannot remove shims generated under /obj folder\" (#9601) at dotnet/cli","RelatedBody":"\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8092165394","Type":"IssuesEvent","CreatedAt":"2018-08-09T19:19:35","Actor":"mrlife","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9807","RelatedDescription":"Opened issue \"\"dotnet\" commands have permission issues\" (#9807) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nrun `dotnet clean`, `dotnet restore`, `dotnet build`, or `dotnet publish`\r\n\r\n## Expected  behavior\r\nThe command should complete without error\r\n\r\n## Actual behavior\r\nHere is the (long) error sequence:\r\n\r\n> $ dotnet clean\r\n> \r\n> Configuring...\r\n> --------------\r\n> A command is running to populate your local package cache to improve restore speed and enable offline access. This command takes up to one minute to complete and only runs once.\r\n> Decompressing 100% 6734 ms\r\n> System.AggregateException: One or more errors occurred. (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.entityframeworkcore.tools/2.1.1/microsoft.entityframeworkcore.tools.nuspec' is denied.)) (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/newtonsoft.json/9.0.1/lib/net40/Newtonsoft.Json.dll' is denied.)) (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.security.cryptography.encoding/4.3.0/ref/netstandard1.3/System.Security.Cryptography.Encoding.xml' is denied.)) (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.xml.readerwriter/4.3.0/ref/netcore50/zh-hans/System.Xml.ReaderWriter.xml' is denied.)) (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/libuv/1.10.0/libuv.1.10.0.nupkg' is denied.)) (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.runtime.interopservices/4.1.0/ref/xamarinwatchos10/_._' is denied.)) (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.dynamic.runtime/4.0.11/ref/netstandard1.3/ja/System.Dynamic.Runtime.xml' is denied.)) (One or more errors occurred. (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.win32.primitives/4.3.0/ref/netstandard1.3/it/Microsoft.Win32.Primitives.xml' is denied.)) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.entityframeworkcore.tools/2.1.1/microsoft.entityframeworkcore.tools.nuspec' is denied.) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/newtonsoft.json/9.0.1/lib/net40/Newtonsoft.Json.dll' is denied.) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.security.cryptography.encoding/4.3.0/ref/netstandard1.3/System.Security.Cryptography.Encoding.xml' is denied.) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.xml.readerwriter/4.3.0/ref/netcore50/zh-hans/System.Xml.ReaderWriter.xml' is denied.) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/libuv/1.10.0/libuv.1.10.0.nupkg' is denied.) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.runtime.interopservices/4.1.0/ref/xamarinwatchos10/_._' is denied.) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.dynamic.runtime/4.0.11/ref/netstandard1.3/ja/System.Dynamic.Runtime.xml' is denied.) (Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.win32.primitives/4.3.0/ref/netstandard1.3/it/Microsoft.Win32.Primitives.xml' is denied.) ---> System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.entityframeworkcore.tools/2.1.1/microsoft.entityframeworkcore.tools.nuspec' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n>    --- End of inner exception stack trace ---\r\n>    at System.Linq.Parallel.QueryTaskGroupState.QueryEnd(Boolean userInitiatedDispose)\r\n>    at System.Linq.Parallel.SpoolingTask.SpoolForAll[TInputOutput,TIgnoreKey](QueryTaskGroupState groupState, PartitionedStream`2 partitions, TaskScheduler taskScheduler)\r\n>    at System.Linq.Parallel.MergeExecutor`1.Execute()\r\n>    at System.Linq.Parallel.MergeExecutor`1.Execute[TKey](PartitionedStream`2 partitions, Boolean ignoreOutput, ParallelMergeOptions options, TaskScheduler taskScheduler, Boolean isOrdered, CancellationState cancellationState, Int32 queryId)\r\n>    at System.Linq.Parallel.PartitionedStreamMerger`1.Receive[TKey](PartitionedStream`2 partitionedStream)\r\n>    at System.Linq.Parallel.ForAllOperator`1.WrapPartitionedStream[TKey](PartitionedStream`2 inputStream, IPartitionedStreamRecipient`1 recipient, Boolean preferStriping, QuerySettings settings)\r\n>    at System.Linq.Parallel.UnaryQueryOperator`2.UnaryQueryOperatorResults.ChildResultsRecipient.Receive[TKey](PartitionedStream`2 inputStream)\r\n>    at System.Linq.Parallel.ListQueryResults`1.GivePartitionedStream(IPartitionedStreamRecipient`1 recipient)\r\n>    at System.Linq.Parallel.UnaryQueryOperator`2.UnaryQueryOperatorResults.GivePartitionedStream(IPartitionedStreamRecipient`1 recipient)\r\n>    at System.Linq.Parallel.QueryOperator`1.GetOpenedEnumerator(Nullable`1 mergeOptions, Boolean suppressOrder, Boolean forEffect, QuerySettings querySettings)\r\n>    at System.Linq.Parallel.ForAllOperator`1.RunSynchronously()\r\n>    at System.Linq.ParallelEnumerable.ForAll[TSource](ParallelQuery`1 source, Action`1 action)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.Extract(String compressedArchivePath, String outputDirectory, IProgress`1 progress)\r\n>    at Microsoft.DotNet.Configurer.NuGetPackagesArchiver.ExtractArchive(String archiveDestination)\r\n>    at Microsoft.DotNet.Configurer.NuGetCachePrimer.PrimeCache()\r\n>    at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.Configure()\r\n>    at Microsoft.DotNet.Cli.Program.ConfigureDotNetForFirstTimeUse(INuGetCacheSentinel nugetCacheSentinel, IFirstTimeUseNoticeSentinel firstTimeUseNoticeSentinel, IAspNetCertificateSentinel aspNetCertificateSentinel, IFileSentinel toolPathSentinel, CliFolderPathCalculator cliFolderPathCalculator, Boolean hasSuperUserAccess)\r\n>    at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n>    at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n> ---> (Inner Exception #0) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.entityframeworkcore.tools/2.1.1/microsoft.entityframeworkcore.tools.nuspec' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n> \r\n> ---> (Inner Exception #1) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/newtonsoft.json/9.0.1/lib/net40/Newtonsoft.Json.dll' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n> \r\n> ---> (Inner Exception #2) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.security.cryptography.encoding/4.3.0/ref/netstandard1.3/System.Security.Cryptography.Encoding.xml' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n> \r\n> ---> (Inner Exception #3) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.xml.readerwriter/4.3.0/ref/netcore50/zh-hans/System.Xml.ReaderWriter.xml' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.RunTaskSynchronously(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n> \r\n> ---> (Inner Exception #4) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/libuv/1.10.0/libuv.1.10.0.nupkg' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ZipOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n> \r\n> ---> (Inner Exception #5) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.runtime.interopservices/4.1.0/ref/xamarinwatchos10/_._' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n> \r\n> ---> (Inner Exception #6) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/system.dynamic.runtime/4.0.11/ref/netstandard1.3/ja/System.Dynamic.Runtime.xml' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n> \r\n> ---> (Inner Exception #7) System.UnauthorizedAccessException: Access to the path '/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.win32.primitives/4.3.0/ref/netstandard1.3/it/Microsoft.Win32.Primitives.xml' is denied. ---> System.IO.IOException: Permission denied\r\n>    --- End of inner exception stack trace ---\r\n>    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n>    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n>    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n>    at System.IO.File.Create(String path)\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation()\r\n>    at Microsoft.DotNet.Archive.IndexedArchive.<>c__DisplayClass19_1.<Extract>b__0(ExtractOperation extractOperation)\r\n>    at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput& currentElement, Int32& currentKey)\r\n>    at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork()\r\n>    at System.Linq.Parallel.SpoolingTaskBase.Work()\r\n>    at System.Linq.Parallel.QueryTask.BaseWork(Object unused)\r\n>    at System.Linq.Parallel.QueryTask.<>c.<.cctor>b__10_0(Object o)\r\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n> .NET Core SDK (reflecting any global.json):\r\n>  Version:   2.1.302\r\n>  Commit:    9048955601\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Mac OS X\r\n>  OS Version:  10.13\r\n>  OS Platform: Darwin\r\n>  RID:         osx.10.13-x64\r\n>  Base Path:   /usr/local/share/dotnet/sdk/2.1.302/\r\n> \r\n> Host (useful for support):\r\n>   Version: 2.1.2\r\n>   Commit:  811c3ce6c0\r\n> \r\n> .NET Core SDKs installed:\r\n>   2.1.4 [/usr/local/share/dotnet/sdk]\r\n>   2.1.300-preview2-008533 [/usr/local/share/dotnet/sdk]\r\n>   2.1.300 [/usr/local/share/dotnet/sdk]\r\n>   2.1.301 [/usr/local/share/dotnet/sdk]\r\n>   2.1.302 [/usr/local/share/dotnet/sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8083412275","Type":"IssuesEvent","CreatedAt":"2018-08-08T11:46:07","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/849","RelatedDescription":"Opened issue \"Where does .net core search for certificates on linux platform\" (#849) at dotnet/standard","RelatedBody":"On Windows, for .NET Framework classes we can specify sslkeyrepository as *SYSTEM/*USER.On linux where does the .NET Core classes search for the certificates by default and what could be the values for sslkeyrepository."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8093937294","Type":"PullRequestEvent","CreatedAt":"2018-08-10T04:11:36","Actor":"brianrob","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/31691","RelatedDescription":"Opened pull request \"Add Microsoft-Windows-DotNETRuntime to the list of framework EventSources\" (#31691) at dotnet/corefx","RelatedBody":"```System.Diagnostics.Tracing.Tests``` has knowledge of the list of framework EventSources, and attempt to make sure that there are no non-framework EventSources in existence at the beginning of each test.\r\n\r\nhttps://github.com/dotnet/coreclr/pull/19393 adds a new framework ```EventSource``` that needs to be added to the list in ```System.Diagnostics.Tracing.Tests```."},{"Id":"8093913548","Type":"PullRequestEvent","CreatedAt":"2018-08-10T04:01:10","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/31641","RelatedDescription":"Merged pull request \"Prep key enums for binary serialization\" (#31641) at dotnet/corefx","RelatedBody":"Contributes to: https://github.com/dotnet/corefx/issues/31477\r\n\r\n@ViktorHofer any ideas on how to test this? "},{"Id":"8093864690","Type":"IssuesEvent","CreatedAt":"2018-08-10T03:40:41","Actor":"Zhujinyong","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31690","RelatedDescription":"Opened issue \"SQL Server 2008 R2 (SP3) X86 can not open on linux 7.4 with dotnet 2.0.5\" (#31690) at dotnet/corefx","RelatedBody":"I have updated to sp3,but I still can not open database.Is x86 not supported,how can I fix it??? Waiting for answer online ,thanks a lot!(It works fine on windows ,but bad in linux centos 7.4,dontet version 2.0.5 )\r\n\r\nmy database version is :\r\nMicrosoft SQL Server 2008 R2 (SP3) - 10.50.6000.34 (Intel X86)\r\nAug 19 2014 12:21:07\r\nCopyright (c) Microsoft Corporation\r\nEnterprise Edition on Windows NT 5.2 (Build : )\r\nError message is:\r\nSystem.InvalidOperationException: Timeout expired. The timeout period elapsed prior to obtaining a connection from the pool. This may have occurred because all pooled connections were in use and max pool size was reached.\r\nat System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection) at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource1 retry, DbConnectionOptions userOptions)\r\nat System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\nat System.Data.SqlClient.SqlConnection.Open()"},{"Id":"8093613071","Type":"PullRequestEvent","CreatedAt":"2018-08-10T02:01:07","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/31689","RelatedDescription":"Opened pull request \"ctor overloads and tests added for windows identity\" (#31689) at dotnet/corefx","RelatedBody":"Related to :- https://github.com/dotnet/corefx/issues/17164\r\n\r\n# Already Present \r\n- System.Security.Principal.WindowsIdentity..ctor(System.Security.Principal.WindowsIdentity)\r\n- System.Security.Principal.IdentityReferenceCollection.IsReadOnly.get()\r\n- System.Security.Principal.WindowsIdentity.UserClaims.get()\r\n- System.Security.Principal.WindowsPrincipal.DeviceClaims.get()\r\n- System.Security.Principal.WindowsPrincipal.UserClaims.get()\r\n- System.Security.Principal.WindowsIdentity.DeviceClaims.get()\r\n\r\n# Related to Impersonation\r\n- System.Security.Principal.WindowsIdentity.Impersonate()\r\n- System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)\r\n- System.Security.Principal.WindowsIdentity..ctor(System.String, System.String)\r\n- System.Security.Principal.WindowsImpersonationContext\r\n\r\n# Added\r\n- System.Security.Principal.WindowsIdentity..ctor(System.IntPtr, System.String, System.Security.Principal.WindowsAccountType)\r\n- System.Security.Principal.WindowsIdentity..ctor(System.IntPtr, System.String, System.Security.Principal.WindowsAccountType, System.Boolean)\r\n- System.Security.Principal.WindowsAccountType\r\n"},{"Id":"8093569672","Type":"IssuesEvent","CreatedAt":"2018-08-10T01:44:19","Actor":"pradeeppnt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/30776","RelatedDescription":"Closed issue \"ASP.Net Core 2.1 App not releasing the memory in Ubuntu\" (#30776) at dotnet/corefx","RelatedBody":"We are facing a memory issue with our ASP.Net Core MVC application developed in 2.1 framework and deployed in Ubuntu 16.04. The application will have around 100 to 200 hits concurrently and each of these hits require calling an external API (HttpClient is used for external API calls). As and when the number of requests come, the memory keep on increasing and resulting in out of memory after sometime. We noticed that garbage collection is not happening as we expect. Are we doing anything wrong?\r\n\r\nWe have set the `<ServerGarbageCollection>true</ServerGarbageCollection>` property to csproj. Still, there is no sign of garbage collection.\r\n\r\nI am ready to share if more information required to resolve this issue."},{"Id":"8093396650","Type":"IssuesEvent","CreatedAt":"2018-08-10T00:34:56","Actor":"alexperovich","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31687","RelatedDescription":"Opened issue \"System.Net.Http.DiagnosticsHandler.SendAsync throws if Activity.Current.Baggage contains values that can't be parsed by NameValueHeaderValue\" (#31687) at dotnet/corefx","RelatedBody":"See this line https://github.com/dotnet/corefx/blob/1a9aa57627a7d173adc1c7ccff6a9471aecc7235/src/System.Net.Http/src/System/Net/Http/DiagnosticsHandler.cs#L92\r\n\r\nRunning a basic github oauth authentication flow on netcoreapp2.1 causes the following exception\r\n```\r\nSystem.FormatException: The format of value '/signin/github' is invalid.\r\n   at System.Net.Http.Headers.NameValueHeaderValue.CheckValueFormat(String value)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(String code, String redirectUri)\r\n   at Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync()\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n```\r\nThis happens when the baggage item \"RequestPath\" with value \"/signin/github\" is processed.\r\n\r\nThis issue does not happen on net461."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8094102450","Type":"PullRequestEvent","CreatedAt":"2018-08-10T05:24:19","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/29193","RelatedDescription":"Opened pull request \"Support parameter initialization refactorings when teh parameter name is selected.\" (#29193) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/29190"},{"Id":"8093521102","Type":"PullRequestEvent","CreatedAt":"2018-08-10T01:25:04","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/29192","RelatedDescription":"Opened pull request \"Use UTC time in fallback build number\" (#29192) at dotnet/roslyn","RelatedBody":"The build number should not be dependent on local time zone."},{"Id":"8093469163","Type":"PullRequestEvent","CreatedAt":"2018-08-10T01:03:50","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/29181","RelatedDescription":"Merged pull request \"Register uses of ? annotation in constraints\" (#29181) at dotnet/roslyn","RelatedBody":"While working to change the default test options to C# 8, I removed some logic that would cause the NullableAttribute to always be synthesized. This affected some tests where a `?` annotation only appeared in a constraint, because there would be no call to `EnsureNullableAttributeExists` to register the need for that attribute.\r\n\r\nI'm splitting this fix to a separate PR for easier review."},{"Id":"8093436700","Type":"PullRequestEvent","CreatedAt":"2018-08-10T00:50:33","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/29191","RelatedDescription":"Opened pull request \"Use a `BoundDiscardPattern` to represent a discard designator in a `var` pattern\" (#29191) at dotnet/roslyn","RelatedBody":"No externally visible behavior change\r\nFixes #27751\r\n"},{"Id":"8093328438","Type":"IssuesEvent","CreatedAt":"2018-08-10T00:08:13","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/29190","RelatedDescription":"Opened issue \"Do not get any code fixes when you highlight a parameter\" (#29190) at dotnet/roslyn","RelatedBody":"1. Double-click on \"value\" to highlight it\r\n\r\n``` C#\r\n    class Program\r\n    {\r\n        public Program(string value)\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n```\r\n\r\n2. Ctrl+.\r\n\r\nExpected:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/43932028-2248014c-9c85-11e8-8956-e9e9603fd6ad.png)\r\n\r\nActual:\r\n\r\nNothing\r\n"},{"Id":"8093272517","Type":"IssuesEvent","CreatedAt":"2018-08-09T23:47:44","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/29189","RelatedDescription":"Opened issue \"Missing error for ! on value type\" (#29189) at dotnet/roslyn","RelatedBody":"```\r\npublic struct S<T> \r\n{\r\n    public void M() \r\n   \t{\r\n        _ = 1!; // error CS8624: The ! operator can only be applied to reference types.\r\n        _ = new S<object?>()!; // missing error\r\n    }\r\n}\r\n```"},{"Id":"8093264340","Type":"PullRequestEvent","CreatedAt":"2018-08-09T23:44:41","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/29188","RelatedDescription":"Opened pull request \"Compute val escape for recursive pattern-matching\" (#29188) at dotnet/roslyn","RelatedBody":"Fixes #28633 \r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8093592967","Type":"PullRequestEvent","CreatedAt":"2018-08-10T01:53:44","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6201","RelatedDescription":"Closed pull request \"[JustForView]Moved ThreadLocal.cs to shared\" (#6201) at dotnet/corert","RelatedBody":" LowLevelListWithIList<T> changed to List<T>\r\n un comment of Debugger.NotifyOfCrossThreadDependency(); \r\nusing lock instead of lockHolder\r\n\r\n\r\nRelated Coreclr PR:- https://github.com/dotnet/coreclr/pull/19399"},{"Id":"8093510880","Type":"PullRequestEvent","CreatedAt":"2018-08-10T01:20:55","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6201","RelatedDescription":"Opened pull request \"[JustForView]Moved ThreadLocal.cs to shared\" (#6201) at dotnet/corert","RelatedBody":" LowLevelListWithIList<T> changed to List<T>\r\n un comment of Debugger.NotifyOfCrossThreadDependency(); \r\nusing lock instead of lockHolder\r\n\r\n\r\nRelated Coreclr PR"},{"Id":"8093419924","Type":"PullRequestEvent","CreatedAt":"2018-08-10T00:43:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6197","RelatedDescription":"Merged pull request \"[armel tizen] Fixed unwinding support for ARM #5874\" (#6197) at dotnet/corert","RelatedBody":"@jkotas @BredPet @alpencolt @iarischenko \r\nplease review\r\n\r\nhttps://github.com/dotnet/corert/issues/5874"},{"Id":"8093403996","Type":"PullRequestEvent","CreatedAt":"2018-08-10T00:38:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6200","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#6200) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"8092967144","Type":"PullRequestEvent","CreatedAt":"2018-08-09T22:11:58","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6200","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#6200) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"8092828045","Type":"PullRequestEvent","CreatedAt":"2018-08-09T21:39:16","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6199","RelatedDescription":"Closed pull request \"[JustForView]Shared version of spinlock.cs\" (#6199) at dotnet/corert","RelatedBody":"Related Coreclr PR https://github.com/dotnet/coreclr/pull/19391\r\n\r\nthese performance https://github.com/Anipik/coreclr/commit/03bf95c8db9003a5925ca9383dca722a4c651e27#diff-ad4906f6671b58df9f8f4063744b0af3 were missed from being ported to corert \r\n"},{"Id":"8092786529","Type":"PullRequestEvent","CreatedAt":"2018-08-09T21:29:40","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6199","RelatedDescription":"Opened pull request \"[JustForView]Shared version of spinlock.cs\" (#6199) at dotnet/corert","RelatedBody":"Related Coreclr PR https://github.com/dotnet/coreclr/pull/19391\r\n\r\nthese performance https://github.com/Anipik/coreclr/commit/03bf95c8db9003a5925ca9383dca722a4c651e27#diff-ad4906f6671b58df9f8f4063744b0af3 were missed from being ported to corert \r\n"},{"Id":"8092467935","Type":"IssuesEvent","CreatedAt":"2018-08-09T20:23:16","Actor":"svick","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6198","RelatedDescription":"Opened issue \"How to run ILVerify?\" (#6198) at dotnet/corert","RelatedBody":"I got a confusing error message when running PEVerify on an assembly, so I wanted to see if ILVerify fared better but I didn't actually manage to run it and my experience along the way was fairly bad. Here's what I did:\r\n\r\n0. Consult [the readme](https://github.com/dotnet/corert/blob/4930875/src/ILVerify/README.md). This doesn't help, there is no information about building or running ILVerify there.\r\n1. Find the right project. Should I use the one in `src/ILVerify/src` or the one in `src/ILVerify/netcoreapp`? The one in `netcoreapp` seems to be Hello World, so it must be the one in `src`. Why is the Hello World even there?\r\n2. Attempt to open the solution in VS. This failed with the cryptic \"error  : Project file is incomplete. Expected imports are missing.\".\r\n3. Attempt to build the solution with `dotnet build`. Got an error that I should run `init-tools.cmd`.\r\n4. Run `init-tools.cmd` and then `dotnet build` again, both succeeded. Though `dotnet build` produced the following confusing warning:\r\n\r\n    > E:\\Users\\Svick\\git\\corert\\Tools\\packageresolve.targets(93,5): warning : Your project is not referencing the \".NETCoreApp,Version=v2.1\" framework. Add a reference to \".NETCoreApp,Version=v2.1\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore.\r\n\r\n5. Try to run the project with `dotnet run`. Got:\r\n\r\n    > System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Start()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n\r\n6. Try to directly run the built dll with `dotnet`. Got:\r\n\r\n    > A fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'E:\\Users\\Svick\\git\\corert\\bin\\Windows_NT.x64.Debug\\ILVerify\\'.\r\nFailed to run as a self-contained app. If this should be a framework-dependent app, specify the appropriate framework in E:\\Users\\Svick\\git\\corert\\bin\\Windows_NT.x64.Debug\\ILVerify\\ILVerify.runtimeconfig.json.\r\n\r\n6. Try to run the project in VS. Got:\r\n\r\n    ![](https://user-images.githubusercontent.com/287848/43923506-455effe0-9c22-11e8-9efe-a3ba89e97cbb.png)\r\n\r\n7. Try to rename the dll to exe and run it. Got:\r\n\r\n    > Unhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'System.Reflection.Metadata, Version=1.4.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\nThings that I think should be done:\r\n\r\n1. The build should be fixed (assuming it's actually broken).\r\n2. Readme should be updated with build steps.\r\n3. The Hello World project should be deleted."},{"Id":"8092087141","Type":"PullRequestEvent","CreatedAt":"2018-08-09T19:03:09","Actor":"sergign60","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6197","RelatedDescription":"Opened pull request \"[armel tizen] Fixed unwinding support for ARM #5874\" (#6197) at dotnet/corert","RelatedBody":"@jkotas @BredPet @alpencolt @iarischenko \r\nplease review\r\n\r\nhttps://github.com/dotnet/corert/issues/5874"},{"Id":"8091863241","Type":"PullRequestEvent","CreatedAt":"2018-08-09T18:18:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6195","RelatedDescription":"Merged pull request \"Update CoreFX dependencies\" (#6195) at dotnet/corert","RelatedBody":""},{"Id":"8091181043","Type":"PullRequestEvent","CreatedAt":"2018-08-09T16:04:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6196","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#6196) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"8091110414","Type":"PullRequestEvent","CreatedAt":"2018-08-09T15:52:00","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6196","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#6196) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"8090734490","Type":"PullRequestEvent","CreatedAt":"2018-08-09T14:52:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6195","RelatedDescription":"Opened pull request \"Update CoreFX dependencies\" (#6195) at dotnet/corert","RelatedBody":""},{"Id":"8090733586","Type":"PullRequestEvent","CreatedAt":"2018-08-09T14:52:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6193","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#6193) at dotnet/corert","RelatedBody":""},{"Id":"8089861569","Type":"PullRequestEvent","CreatedAt":"2018-08-09T12:27:31","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6194","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#6194) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"8089856527","Type":"PullRequestEvent","CreatedAt":"2018-08-09T12:26:31","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6194","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#6194) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"8089580646","Type":"IssuesEvent","CreatedAt":"2018-08-09T11:27:36","Actor":"rickge","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6187","RelatedDescription":"Closed issue \"NativeCallable Attribute could not be found\" (#6187) at dotnet/corert","RelatedBody":"I've created the HelloWorld example and successfully published using the ILCompiler alpha  version '1.0.0-alpha-26807-01', and created a win-x64 exe. I wanted to add a new class with a native callable method exposed and attempted to add the following test class into my HelloWorld namespace:\r\n```csharp\r\npublic class TestCallMe\r\n{\r\n\tTestCallMe()\r\n\t{\r\n\t}\r\n\r\n\t[NativeCallable]\r\n\tpublic static void CallMe(int a, int b)\r\n\t{\r\n\t\tConsole.WriteLine(string.Format(\"{0} plus {1} yields {2}.\", a, b, a + b));\r\n\t}\r\n}\r\n```\r\nHowever, I am not able to find where the NativeCallable attribute is defined. My project is a .Net Core 2.1 version and I've opened it with Visual Studio 15.7.6.\r\n\r\nThe error I get indicates the attribute isn't found. \r\nProgram.cs(21,4): error CS0246: The type or namespace name 'NativeCallableAttribute' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\208005772\\Documents\\Visual Studio 2017\\Projects\\SampleCoreRT\\SampleCoreRT\\SampleCoreRT.csproj]\r\nProgram.cs(21,4): error CS0246: The type or namespace name 'NativeCallable' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\208005772\\Documents\\Visual Studio 2017\\Projects\\SampleCoreRT\\SampleCoreRT\\SampleCoreRT.csproj]"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8087517870","Type":"IssuesEvent","CreatedAt":"2018-08-09T02:18:12","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2319","RelatedDescription":"Closed issue \"Generate app.config for .NET Framework projects that indicated a minimum framework\" (#2319) at dotnet/sdk","RelatedBody":"When targeting .NET Framework, we should generate an `app.config` file as part of build if the project doesn't specify one.  Otherwise, an app targeting 4.x will run on older 4.x machines, and fail at runtime with strange missing method exceptions.\r\n\r\n(It's probably okay to do this only for sdk-style projects, as traditional templates include an app.config)"},{"Id":"8086497630","Type":"PullRequestEvent","CreatedAt":"2018-08-08T21:02:24","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2447","RelatedDescription":"Merged pull request \"Generate appconfig for full framework project\" (#2447) at dotnet/sdk","RelatedBody":"Fix https://github.com/dotnet/sdk/issues/2319"},{"Id":"8084510638","Type":"IssuesEvent","CreatedAt":"2018-08-08T14:54:29","Actor":"kirschem","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2463","RelatedDescription":"Opened issue \"dot net publish does not generate runtimeconfig.json\" (#2463) at dotnet/sdk","RelatedBody":"Hello,\r\n\r\nI've been trying to publish a .net core 2.0 app targetting net461 to iis and I can't get it working.\r\nWhen I run the app in Visual Studio with IIS-Express it works flawlessly\r\nI've installed the latest .net core runtime on the Server running iis. I've restarted iis Services.\r\nWhen I publish the app, it won't generate a runtimeconfig.json. So I get the following error when trying to browse the app:\r\n\r\n```\r\nA fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'XXX'.\r\nFailed to run as a self-contained app. If this should be a framework-dependent app, add the XXX.runtimeconfig.json file specifying the appropriate framework.\r\n```\r\n\r\nI've tried with the Visual Studio Publishing Feature and with dotnet publish via command line. In both cases no runtimeconfig.json is generated.\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1026954979620282368","CreatedAt":"2018-08-07T22:15:21+00:00","UserScreenname":"dotnet","Text":"ML .NET 0.4 is now available! Improved support for #NLP scenarios with word embedding transform, improved speed for… https://t.co/K0WAJogGLW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":145,"RawContent":null},{"Id":"1025145757714640896","CreatedAt":"2018-08-02T22:26:09+00:00","UserScreenname":"dotnet","Text":"Tiered Compilation Preview in .NET Core 2.1 https://t.co/iDmpwcq86K by @noahsfalk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":241,"FavoriteCount":143,"RawContent":null}]}},"RunOn":"2018-08-10T05:30:37.5330736Z","RunDurationInMilliseconds":8727}