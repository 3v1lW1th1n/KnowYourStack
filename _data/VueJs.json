{"Data":{"Vue-Issues":{"Issues":[{"Id":"589269793","IsPullRequest":false,"CreatedAt":"2020-03-27T20:34:37","Actor":"benmandr","Number":"11257","RawContent":null,"Title":"Parent class style not getting applied on functional SFC child","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/quizzical-hooks-flxdp](https://codesandbox.io/s/quizzical-hooks-flxdp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNo steps. Just check out the reproduction.\r\n\r\n### What is expected?\r\nThe class styles in App.vue to be applied on the functional SFC.\r\n\r\n### What is actually happening?\r\nParent class is added to the classlist of child, but the css is not generated for the class.\r\n\r\n---\r\nIf you remove the 'scoped' keyword from functional component, then all the styles are applied. But the need is to use this with scoped styles, as with normal components is done.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11257","RelatedDescription":"Closed issue \"Parent class style not getting applied on functional SFC child\" (#11257)"},{"Id":"589339208","IsPullRequest":false,"CreatedAt":"2020-03-27T20:15:08","Actor":"atomanyih","Number":"11258","RawContent":null,"Title":"Functional components don't interpret empty boolean props as true","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/crazy-davinci-ckird](https://codesandbox.io/s/crazy-davinci-ckird)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nObserve the rendered output in the repro\r\n\r\n### What is expected?\r\nBoth components should show \"true\"\r\n\r\n### What is actually happening?\r\nStandard component shows \"true\", functional component shows nothing\r\n\r\n---\r\nhttps://vuejs.org/v2/guide/components-props.html#Passing-a-Boolean\r\n\r\nThere are obvious workarounds, but I would hope that a functional component would, from the outside, have the same interface as a non-functional component.\r\n\r\nThe number of undocumented caveats and limitations to functional components has, to me, made their usefulness fairly questionable\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11258","RelatedDescription":"Closed issue \"Functional components don't interpret empty boolean props as true\" (#11258)"},{"Id":"589160991","IsPullRequest":false,"CreatedAt":"2020-03-27T14:11:21","Actor":"eunjae-lee","Number":"11256","RawContent":null,"Title":"[vue-server-renderer] support for `context.rendered` which returns a promise","State":"open","Body":"### What problem does this feature solve?\r\nHi there,\r\n\r\nIn `vue-server-renderer`, there is a function `createRenderer`.\r\nInside it, it calls `context.rendered(context)`.\r\nWhat if we allow `context.rendered()` to return a promise and resolve it if it does?\r\n\r\nThat's the exact timing between components render and template render.\r\nI want to trigger an HTTP request at that point and include the response into the rendered template.\r\n\r\nTo rephrase it,\r\n1. I'd like to see the component tree(which components are there and which props they have, etc)\r\n2. accordingly fire an HTTP request to my server\r\n3. and put the response into `__INITIAL_STATE__`.\r\n\r\nDoes this make sense? I tried to think of something else, but `context.rendered` seems to be the most perfect place for this usage.\r\n\r\n`vue-server-renderer` already works fine with `serverPrefetch` and wait for all `serverPrefetch`s. Then later it can get vuex store or something to render the template.\r\nBut with my proposal, you can do something more than that, sort of in a centralized place which is `entry-server`.\r\nIt doesn't change the API at all, and I don't think it will introduce any confusion to developers.\r\n\r\n### What does the proposed API look like?\r\nIt doesn't require a new API.\r\n\r\nThe existing code is this:\r\n\r\nhttps://github.com/vuejs/vue/blob/a59e05c2ffe7d10dc55782baa41cb2c1cd605862/packages/vue-server-renderer/build.dev.js#L9187-L9189\r\n\r\nWe can, instead, have something like the following:\r\n\r\n```js\r\nnew Promise((resolve, reject) => {\r\n  if (context && context.rendered) {\r\n    const res = context.rendered(context);\r\n    if (isPromise(res)) {\r\n      return res.then(resolve).catch(reject);\r\n    }\r\n  }\r\n  resolve();\r\n}).then(\r\n  ...\r\n)\r\n```\r\n\r\nIt is totally compatible with previous usages.\r\nLet me know if you want me to open a PR for this, or if you have other opinions.\r\n\r\nThanks!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11256","RelatedDescription":"Open issue \"[vue-server-renderer] support for `context.rendered` which returns a promise\" (#11256)"},{"Id":"589077006","IsPullRequest":false,"CreatedAt":"2020-03-27T11:47:18","Actor":"filipbekic01","Number":"11255","RawContent":null,"Title":"Lodash causes errors when cloning objects","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry to clone object with lodash library and reassign it to root data object. For example `this.car = _.cloneDeep(carModel)`.\r\n\r\n### What is expected?\r\nWhen you use binding say `v-model=\"car.color\"` it should work.\r\n\r\n### What is actually happening?\r\nIt throws error that car is not defined at all. Feels like root data object lose reference to car object.\r\n\r\n---\r\nFunny thing is that sometimes it works perfectly and sometimes it just breaks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11255","RelatedDescription":"Closed issue \"Lodash causes errors when cloning objects\" (#11255)"},{"Id":"589069054","IsPullRequest":false,"CreatedAt":"2020-03-27T11:29:46","Actor":"filipbekic01","Number":"11254","RawContent":null,"Title":"Lodash cloning causes error","State":"closed","Body":"Cloning objects and reassigning them to root _data_ object with lodash library i often get error if i try to use v-model against it's properties. For example `this.test = _.cloneDeep(myObj)` will cause v-model to break throwing error \"test.some_attribute is undefined\".\r\n\r\nHowever, if i use `this.test = JSON.parse(JSON.stringify(myObj))` it works perfectly.  ","Url":"https://github.com/vuejs/vue/issues/11254","RelatedDescription":"Closed issue \"Lodash cloning causes error\" (#11254)"},{"Id":"589017358","IsPullRequest":false,"CreatedAt":"2020-03-27T10:15:38","Actor":"ElshadR","Number":"11253","RawContent":null,"Title":"How to convert base64to .pptx file in vuejs?","State":"closed","Body":"### What problem does this feature solve?\r\nI am using vue.js and I need to convert base64 to .pptx file. I receive base64 from API and I need to convert this to .pptx file and show it to the user. Please help. Any suggestions?\r\n\r\n### What does the proposed API look like?\r\nI am using vue.js and I need to convert base64 to .pptx file. I receive base64 from API and I need to convert this to .pptx file and show it to the user. Please help. Any suggestions?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11253","RelatedDescription":"Closed issue \"How to convert base64to .pptx file in vuejs?\" (#11253)"},{"Id":"589016496","IsPullRequest":false,"CreatedAt":"2020-03-27T09:57:20","Actor":"ElshadR","Number":"11252","RawContent":null,"Title":"How to convert base64 to .pptx file in vuejs?","State":"closed","Body":"I am using vue.js and I need to convert base64 to .pptx file. I receive base64 from API and I need to convert this to .pptx file and show it to the user. Please help. Any suggestions?","Url":"https://github.com/vuejs/vue/issues/11252","RelatedDescription":"Closed issue \"How to convert base64 to .pptx file in vuejs?\" (#11252)"},{"Id":"589015487","IsPullRequest":false,"CreatedAt":"2020-03-27T09:55:28","Actor":"ElshadR","Number":"11251","RawContent":null,"Title":"How to convert base64 to .pptx file in vuejs?","State":"closed","Body":"I am using vue.js and I need to convert base64 to .pptx file. I receive base64 from API and I need to convert this to .pptx file and show it to the user. Please help. Any suggestions?","Url":"https://github.com/vuejs/vue/issues/11251","RelatedDescription":"Closed issue \"How to convert base64 to .pptx file in vuejs?\" (#11251)"},{"Id":"588937902","IsPullRequest":true,"CreatedAt":"2020-03-27T07:37:16","Actor":"Ao-2","Number":"11250","RawContent":null,"Title":"Create main.yml","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11250","RelatedDescription":"Closed or merged PR \"Create main.yml\" (#11250)"},{"Id":"588558311","IsPullRequest":false,"CreatedAt":"2020-03-26T16:42:57","Actor":"kirillbunin","Number":"11249","RawContent":null,"Title":"Call blocking will prevent re-render","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fw89qnoc/](https://jsfiddle.net/fw89qnoc/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nLet's start with simple call blocking function:\r\nhttps://jsfiddle.net/yd6xr8ea/\r\n\r\nThe idea here is, that `counter` should update before `myVal `, so I thought `$forceUpdate` should do the trick:\r\nhttps://jsfiddle.net/0jdhy41g/\r\n\r\nBut it doesn't.\r\n\r\nSo according to docs, https://vuejs.org/v2/api/#updated I've put the code in the `$nextTick` of the `updated` function.\r\nhttps://jsfiddle.net/fw89qnoc/\r\n\r\nBut that still doesn't do the trick. Adding 1ms timeout works, but it feels hackish and doesn't really do justice the docs.\r\nhttps://jsfiddle.net/bwd9j3sq/\r\n\r\n### What is expected?\r\nBoth values should update a re-render independedly\r\n\r\n### What is actually happening?\r\nUnless timeout is involved, re-render is blocked, even when used recommendation from the docs.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11249","RelatedDescription":"Closed issue \"Call blocking will prevent re-render\" (#11249)"},{"Id":"588491505","IsPullRequest":false,"CreatedAt":"2020-03-26T15:05:43","Actor":"mernst-github","Number":"11248","RawContent":null,"Title":"\"refInFor\" searches upwards of inline-template boundary","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/b71adnym/2/](https://jsfiddle.net/b71adnym/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNest a component with an inline-template that has a ref in a v-for.\r\n\r\n\r\n### What is expected?\r\ncomponent.$ref.ref should point to the respective element.\r\n\r\n### What is actually happening?\r\ncomponent.$ref.ref is a singleton array with the element reference.\r\n\r\n\r\n---\r\ncheckInFor loops over the element ancestors up to the document root, so it believes that the ref is in a loop, but it actually isn't.\r\nThe check should stop at the component root.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11248","RelatedDescription":"Open issue \"\"refInFor\" searches upwards of inline-template boundary\" (#11248)"},{"Id":"588426241","IsPullRequest":true,"CreatedAt":"2020-03-26T13:35:36","Actor":"mydaoyuan","Number":"11247","RawContent":null,"Title":"fix(patch.js): fix functional component scope attribute update","State":"open","Body":"fix functional component update scope attribute when patch use same node\r\n\r\nfix #11171\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11247","RelatedDescription":"Open PR \"fix(patch.js): fix functional component scope attribute update\" (#11247)"},{"Id":"588328540","IsPullRequest":false,"CreatedAt":"2020-03-26T11:13:02","Actor":"KingSora","Number":"11246","RawContent":null,"Title":"Interaction with class and style properties","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently the user isn't able to control the class and style properties of a component.\r\n\r\nExample:\r\nAs a library author I want that my component has a static class and no style at all.\r\nThe component template looks like this:\r\n\r\n```html\r\n<span class=\"the-only-allowed-class\">Some content</span>\r\n```\r\n\r\nSomeone decided to use this component and does this:\r\n```html\r\n<component class=\"class-set-by-user\" style=\"background: red\"></component>\r\n```\r\n\r\nNow the component has two classes `class=\"the-only-allowed-class class-set-by-user\"` because vue does a merge behind the scenes. As a component author I have basically no control over the class (and also the style) property.\r\nI can't read the set `class` or `style` property, I can't prevent them to be set, I can't watch them so that I could somehow act after they were set. I can basically do nothing about it. \r\nThats what this feature request shall solve.\r\n\r\nIn comparison, libraries like `React` and `Angular` have such a feature.\r\n\r\n### What does the proposed API look like?\r\nDon't handle the `class` and `style` property like something special. Just handle them as normal properties. Make them watchable inside the `watch` object. Make them (somehow) readable with exposing them in the `$attrs` object. etc.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11246","RelatedDescription":"Closed issue \"Interaction with class and style properties\" (#11246)"},{"Id":"587904753","IsPullRequest":false,"CreatedAt":"2020-03-26T09:04:59","Actor":"KingSora","Number":"11244","RawContent":null,"Title":"Possibility to somehow read the \"passed\" class property","State":"closed","Body":"### What problem does this feature solve?\r\nGood day! I'm the author of the OverlayScrollbars Library.\r\nThe library is written in vanilla Javascript and I'm currently providing a Vue wrapper Component for it.\r\nI ran into a issue with the class attribute recently and I need some guidance of someone who has better understanding of the overall structure of Vue.\r\n\r\nThe setup (minimal example):\r\nIn Vue I'm rendering a div:\r\n<div class=\"my-host\"></div>\r\n\r\nThen I'm initializing the library in the mounted hook\r\n```js\r\nmounted() {\r\n    myLibrary(this.$el);\r\n}\r\n```\r\n\r\nThe library is adding internally classes to the already rendered div, so the virtual node still looks like this:\r\n```html\r\n<div class=\"my-host\"></div>\r\n```\r\nBut the real DOM element might look like this:\r\n```html\r\n<div class=\"my-host my-host-option-a my-host-option-b xyz\"></div>\r\n```\r\n\r\nThis leads to no problems, as long as the class attribute is set only once / is static, but as soon as you change it from the outside, vue overwrites the class names set by the library internally, because vue has no clue about it.\r\n\r\nMy question is now, how can I access the class string inside the virtual DOM node? I've written a method which is able to merge all class names correctly, but in order to do that, I need access to the class names which were set by vue. (e.g. which are inside the virtual DOM)\r\n\r\nAre there some best practices to do that? - Or is there a different way to handle my problem? I'm sure I'm not the first with this kind of issue, since this could be pretty common among authors of 3rd party libraries.\r\n\r\nI've also found out that I could access these values with:`$vnode.data.class` and `$vnode.data.staticClass`, but it feels like a hack.\r\n\r\n### What does the proposed API look like?\r\nThere are many possibilites to solve this issue, you could just expose the desired values inside the $attrs object, or make it observable inside the watch object. I know that in Vue3 it will be accessable in the $attrs object, but is there a workaround in the meantime for Vue2.x?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11244","RelatedDescription":"Closed issue \"Possibility to somehow read the \"passed\" class property\" (#11244)"},{"Id":"588027073","IsPullRequest":false,"CreatedAt":"2020-03-25T23:56:25","Actor":"fchu","Number":"11245","RawContent":null,"Title":"scoped css style bleeds from child component to root of that component when invoked by parent component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-y71xh](https://codesandbox.io/s/vue-template-y71xh)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNothing, just look at the codesandbox and observe how the root gets a red border from a style defined deep into the child component\r\n\r\n### What is expected?\r\nA scoped style of a child component should not 'callable' from outside that component (even if it's on the root element of that component). In this example, the root of child should not have a red border.\r\n\r\n### What is actually happening?\r\nBecause two scoped styles with the same names have been defined in the parent and root components, the root element in the child component get both \"data-v-*\" attributes, and thus has the unwanted inner style applied to it due to name collision\r\n\r\n---\r\nNot that this bug is *not* about whether one can style a child element by leaking css from the parent (which is debatable, but a different point altogether, see: https://github.com/vuejs/vue-loader/issues/957)\r\n\r\nIn this case, scoping isn't quite working and can result in unwanted behavior if a component author uses a style name that's too generic.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11245","RelatedDescription":"Closed issue \"scoped css style bleeds from child component to root of that component when invoked by parent component\" (#11245)"},{"Id":"587857468","IsPullRequest":false,"CreatedAt":"2020-03-25T17:16:08","Actor":"Philipp-M","Number":"11243","RawContent":null,"Title":"Customized built-in elements (Web Components) are not working in Single File Components","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/confident-robinson-nl2c5](https://codesandbox.io/s/confident-robinson-nl2c5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nDefine a customized built-in element and try to use it inside a template of a Single File Component.\r\n\r\nIt doesn't matter if `Vue.config.ignoredElements` defines the name of the component as it is just converted into the autonomous element syntax (which unfortunately doesn't work with browsers)\r\n\r\n### What is expected?\r\nWorking customized built-in component using the template syntax in Vue Single File Components.\r\n\r\n### What is actually happening?\r\nVue doesn't invoke the custom element constructor, and tries to render it as normal HTML element.\r\n\r\n---\r\nThere is an issue about this on Stack Overflow: https://stackoverflow.com/questions/56162647/how-to-use-customized-built-in-element-in-vuejs\r\nBut even the proposed solution using a custom directive doesn't invoke the Custom Element constructor, see reproduction example.\r\nI guess that is because previously the (non-customized) built-in constructor is invoked.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11243","RelatedDescription":"Open issue \"Customized built-in elements (Web Components) are not working in Single File Components\" (#11243)"},{"Id":"587764736","IsPullRequest":false,"CreatedAt":"2020-03-25T15:13:47","Actor":"joudinet","Number":"11242","RawContent":null,"Title":"min gzip version of vue.js in the github asset tarball","State":"closed","Body":"### What problem does this feature solve?\r\nSome distribution systems require to install a specific version from a source tarball (e.g. buildroot). Unfortunately, the current vue.js tarballs available on github do not contain the gziped version of vue.js. Thus, vue-2.6.11/dist/vue.min.js is three times bigger than https://vuejs.org/js/vue.min.js\r\n\r\n### What does the proposed API look like?\r\nEither gzip dist/vue.min.js before distributing the tarball or provide the min gzip version as an additional file inside the dist/ directory.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11242","RelatedDescription":"Closed issue \"min gzip version of vue.js in the github asset tarball\" (#11242)"},{"Id":"587367651","IsPullRequest":false,"CreatedAt":"2020-03-25T00:49:47","Actor":"hezedu","Number":"11241","RawContent":null,"Title":"Object with prototype of `null` cannot be displayed using text interpolation","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/hezedu/pen/GRJYXGR](https://codepen.io/hezedu/pen/GRJYXGR)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvue: 2.6.11\r\nhttps://github.com/vuejs/vue/blob/a59e05c2ffe7d10dc55782baa41cb2c1cd605862/dist/vue.runtime.js#L96-L102\r\n```js\r\ntoString(Object.create(null);\r\n```\r\nWill crash: \r\nTypeError: Cannot convert object to primitive value\r\n\r\n### What is expected?\r\nTypeError\r\n\r\n### What is actually happening?\r\nerror\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11241","RelatedDescription":"Open issue \"Object with prototype of `null` cannot be displayed using text interpolation\" (#11241)"},{"Id":"587363406","IsPullRequest":false,"CreatedAt":"2020-03-25T00:36:15","Actor":"hezedu","Number":"11240","RawContent":null,"Title":"TypeError: Cannot convert object to primitive value","State":"closed","Body":"vue: 2.6.11\r\nhttps://github.com/vuejs/vue/blob/a59e05c2ffe7d10dc55782baa41cb2c1cd605862/dist/vue.runtime.js#L96-L102\r\n```js\r\ntoString(Object.create(null);\r\n```\r\nWill crash: \r\nTypeError: Cannot convert object to primitive value","Url":"https://github.com/vuejs/vue/issues/11240","RelatedDescription":"Closed issue \"TypeError: Cannot convert object to primitive value\" (#11240)"},{"Id":"586975006","IsPullRequest":true,"CreatedAt":"2020-03-24T14:01:04","Actor":"nylltz","Number":"11239","RawContent":null,"Title":"PR test","State":"closed","Body":"PR test for Casework 6895031561\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11239","RelatedDescription":"Closed or merged PR \"PR test\" (#11239)"},{"Id":"586586760","IsPullRequest":false,"CreatedAt":"2020-03-24T00:43:05","Actor":"borisovg","Number":"11238","RawContent":null,"Title":"custom directive's \"unbind\" is not called in v-if / v-else","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/wukg1nbL/5/](https://jsfiddle.net/wukg1nbL/5/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith both \"v-if\" and \"v-else\" elements present \"this.text\" is only ever set to \"BIND\", but if you delete the \"v-else\" element then \"this.text\" will switch between \"BIND\" and \"UNBIND\".\r\n\r\n### What is expected?\r\nExpected for bind and unbind hooks to be called repeatedly as the v-if / v-else should be destroying the element the directive is bound to.\r\n\r\n### What is actually happening?\r\nUnbind is not called if v-if and v-else are both present.\r\n\r\n---\r\nSorry about the somewhat convoluted repro. :)\r\n\r\nReal-life use-case is a directive that operates on an array of data (passed in via binding) and this array needs to be switched out for another array depending on some condition.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11238","RelatedDescription":"Closed issue \"custom directive's \"unbind\" is not called in v-if / v-else\" (#11238)"},{"Id":"586215445","IsPullRequest":false,"CreatedAt":"2020-03-23T13:38:06","Actor":"hubSteve","Number":"11237","RawContent":null,"Title":"Problem with v-html tag","State":"closed","Body":"The problem with v-html tag using occurred in my Blog website project building. I saved a block of Java  code then try to present it in website to use v-html tag decoding it, but if Java code contains string as \"<Blog>\", the referred code will be decoded like \"<blog>....</blog>\".","Url":"https://github.com/vuejs/vue/issues/11237","RelatedDescription":"Closed issue \"Problem with v-html tag\" (#11237)"},{"Id":"586089811","IsPullRequest":false,"CreatedAt":"2020-03-23T10:18:35","Actor":"unikitty37","Number":"11236","RawContent":null,"Title":"Functions imported in <script> section of single-file component are not available in <template> section","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/wild-rain-oi9th](https://codesandbox.io/s/wild-rain-oi9th)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Observe the component does not render\r\n2. Delete the line `<HelloWorld msg=\"date-fns\" :datetime=\"parseJSON('2012-03-01T05:20:10 00:00')\"/>` from App.vue\r\n3. Observe the component renders\r\n\r\n### What is expected?\r\nThe imported `parseJSON` function is available to the template.\r\n\r\n### What is actually happening?\r\nThe imported `parseJSON` function is not available to the template. When running standalone, the message\r\n\r\n```\r\n[Vue warn]: Property or method \"parseJSON\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n```\r\n\r\nis logged to the console.\r\n\r\n---\r\nThe component is being called from a Rails view, which needs to pass a date in.\r\n\r\nhttps://vuejs.org/v2/guide/components-props.html#Passing-Static-or-Dynamic-Props documents how to pass in every supported data type *except* Date (if this could be added, that would be super-helpful). The `new Date('…')` method works, but documentation for Date says that this uses Date.parse, which should be avoided as it's highly browser-dependent.\r\n\r\nBypassing the type-checking by passing the dates as strings is ugly, as then other Vue components must convert *their* Dates into strings in order to pass them to this one.\r\n\r\nI would like to avoid this by parsing the date with date-fns, but the documentation is unclear on how to import functions for use in the template section. Importing parseJSON in main.js (before importing Vue or App) doesn't work, either. It doesn't look like this is possible — but it really should be.\r\n\r\nEither way, the documentation really needs to cover how to pass a Date in properly.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11236","RelatedDescription":"Closed issue \"Functions imported in <script> section of single-file component are not available in <template> section\" (#11236)"},{"Id":"586028987","IsPullRequest":true,"CreatedAt":"2020-03-23T08:41:08","Actor":"yoyo930021","Number":"11235","RawContent":null,"Title":"fix #8721,#9873: wrong type when computed return about this","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nFix vuejs/vetur#1707, vuejs/vetur#1509, #8721, #9873 \r\n\r\nWhen `computed` return about `this` property,\r\nThe `this` type is wrong.","Url":"https://github.com/vuejs/vue/pull/11235","RelatedDescription":"Open PR \"fix #8721,#9873: wrong type when computed return about this\" (#11235)"},{"Id":"586014732","IsPullRequest":false,"CreatedAt":"2020-03-23T08:15:37","Actor":"tangjinzhou","Number":"11234","RawContent":null,"Title":"can not get $scopedSlots.xxx   before render","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-antd-template-gn71z](https://codesandbox.io/s/vue-antd-template-gn71z)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI can get `$scopedSlots.xxx`  `$slots.xxx` before render in v2.5.x.\r\nBut v.2.6 is not same.\r\n\r\n### What is expected?\r\nlike 2.5.x\r\n\r\n### What is actually happening?\r\ncan not get $scopedSlots.xxx   before render\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11234","RelatedDescription":"Open issue \"can not get $scopedSlots.xxx   before render\" (#11234)"},{"Id":"585672253","IsPullRequest":false,"CreatedAt":"2020-03-22T11:21:42","Actor":"wuming123","Number":"11232","RawContent":null,"Title":"How to make eslint support Vue typescript decorator","State":"closed","Body":"### What problem does this feature solve?\r\nHow to make eslint support Vue typescript decorator\r\n\r\n### What does the proposed API look like?\r\nHow to make eslint support Vue typescript decorator\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11232","RelatedDescription":"Closed issue \"How to make eslint support Vue typescript decorator\" (#11232)"},{"Id":"585681271","IsPullRequest":false,"CreatedAt":"2020-03-22T10:36:52","Actor":"yamybl","Number":"11233","RawContent":null,"Title":"when use a method call as template-interpolation e.g. {{ getNum() }},  if some event handler be bound to a element tag that change some state in \"data\" option,  this will cause the method ( here is \"getNum\" ) be called again and again.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/yamybl/project/editor/AjVMVR#](https://codepen.io/yamybl/project/editor/AjVMVR#)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nmouseover or mouseout the button\r\n\r\n### What is expected?\r\nmouseover or mouseout event not cause the \"getNum\" method called\r\n\r\n### What is actually happening?\r\nevery time mouseover or mouseout the button will cause the \"getNum\" method called\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11233","RelatedDescription":"Closed issue \"when use a method call as template-interpolation e.g. {{ getNum() }},  if some event handler be bound to a element tag that change some state in \"data\" option,  this will cause the method ( here is \"getNum\" ) be called again and again.\" (#11233)"},{"Id":"585671770","IsPullRequest":false,"CreatedAt":"2020-03-22T08:48:39","Actor":"wuming123","Number":"11231","RawContent":null,"Title":"How eslint supports decorators in Vue scripts","State":"closed","Body":"How eslint supports decorators in Vue scripts","Url":"https://github.com/vuejs/vue/issues/11231","RelatedDescription":"Closed issue \"How eslint supports decorators in Vue scripts\" (#11231)"},{"Id":"585653108","IsPullRequest":false,"CreatedAt":"2020-03-22T07:40:34","Actor":"AleynHe","Number":"11230","RawContent":null,"Title":"Memory leak on IE 11","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsbin.com/goyuniyigu/edit?html,output](https://jsbin.com/goyuniyigu/edit?html,output)\r\n\r\n#11227 \r\n\r\n\r\n### Steps to reproduce\r\n1. Open the above JSBin test page through IE 11.\r\n2. Open IE11 F12 developer tools memory panel， Capture Memory snapshot \r\n3. Click the Toggle button. Rendering Vue instances.\r\n4. Click the Toggle button. Destroy Vue instance.\r\n5. Capture Memory snapshot . Memory is recycled. But windows task manager does not see less memory.\r\n\r\n### What is expected?\r\nMemory recovery over 90%\r\n\r\n### What is actually happening?\r\nMemory recycle less than 30%\r\n\r\n---\r\nThe tags in the template do not use v-for, v-on, v-bind. You can copy more than 1000   basic tags (DIV or span) manually. You can also reproduce this problem .\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11230","RelatedDescription":"Closed issue \"Memory leak on IE 11\" (#11230)"},{"Id":"585646750","IsPullRequest":true,"CreatedAt":"2020-03-22T05:05:36","Actor":"abrahamguo","Number":"11229","RawContent":null,"Title":"feat(core): observe array changes from fill and copywithin methods (re #10973)","State":"open","Body":"re #10973. `fill` and `copyWithin` are methods that, at this point, have good browser support and are standardized, so this PR adds support for Vue to observe mutating changes from those methods.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11229","RelatedDescription":"Open PR \"feat(core): observe array changes from fill and copywithin methods (re #10973)\" (#11229)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"589214905","IsPullRequest":false,"CreatedAt":"2020-03-27T15:30:49","Actor":"bponomarenko","Number":"3157","RawContent":null,"Title":"Add possibility to handle aborted navigations globally","State":"open","Body":"### What problem does this feature solve?\r\nAdds possibility to handle aborted navigations globally.\r\n\r\nInitiated vue-router navigation could have different outcomes:\r\n* successful navigation\r\n* errored navigation (in case there is non-internal js error in one of the guards or hooks)\r\n* aborted navigation\r\n\r\nIn cases, when application logic depends on these navigation results, `vue-router` has very limited support to catch aborted navigations, and no support to do it globally.\r\n\r\nSuccessful navigation can be catched in global `afterEach` hook or in `beforeResolve` guard (however error still can be thrown there). Also there is optional `onComplete` callback for `router.push`, but there is no way to set it from `<router-link>`.\r\nNavigation with error (because of JS error in one of the guards or hooks) can be catched in global `onError` hook. Also there is optional `onAbort` callback for `router.push` (which will be called for both navigation with error and aborted navigation), but there is no way to set it from `<router-link>`.\r\nWhen it comes to aborted navigations, the only place where it can be catched – `onAbort` callback for `router.push`. However, as mentioned before, it is not possible to set it from `<router-link>`. Moreover, there is no global hook to catch aborted navigations at all.\r\n\r\n### Use case\r\n\r\nIn our application we would like to simply display loading indicator in the root App component while navigation is in progress. Also, we would like to have this functionality be generic, so it can be applied to different applications. The easiest way to achieve it is by creating separate ES module like this `navigation-state-plugin.js`:\r\n``` js\r\nimport Vue from 'vue';\r\n\r\nexport const state = Vue.observable({ navigating: false });\r\n\r\nexport default router => {\r\n  // When navigation initiated – update state and proceed\r\n  router.beforeEach((to, from, next) {\r\n    state.navigating = true;\r\n    next();\r\n  });\r\n\r\n  // When navigation successfully finished – update state accordingly\r\n  router.afterEach(() => {\r\n    state.navigating = false;\r\n  });\r\n\r\n  // When navigation failed –also update state\r\n  router.onError(error => {\r\n    state.navigating = false;\r\n  });\r\n};\r\n```\r\n\r\nIn this way in can be applied in the `main.js`:\r\n```js\r\nimport VueRouter from 'vue-router';\r\nimport applyPlugin from './navigation-state-plugin.js`;\r\n\r\n// do other initializations\r\n\r\nconst router = new VueRouter(...);\r\napplyPlugin(router);\r\n\r\n// init application\r\n```\r\n\r\nAlso state from this file can be imported in App.vue and used to display loading indicator when `state.navigating` is `true`.\r\n\r\nHowever, when navigation is aborted there is no way to track it in a global manner, which leads to loading indicator to stay visible on a screen.\r\n\r\nAs possible solution, [it was suggested](https://github.com/vuejs/vue-router/issues/3027#issuecomment-599474646) to _\"use `router.push` or the v-slot api and get the promise returned from `navigate`\"_ (which is currently not available because #3042 has no PR). However this solution would require to create wrappers around vue-router API, which should always be used throughout entire application instead of native `vue-router` api. Even though it is easy to do for `router.push`, it is cumbersome to do for `<router-link>` because wrapper should be able to support the same rendering scenarios (without slot content, with slot content, with scoped slot content, etc.)\r\nIt is also not suitable for us, because we have shared set of router components, which are re-used in different vue applications. And not all applications will have `navigation-state-plugin.js`. So we need to have possibility to use native `router.push` and `<router-link>` with an option to globally manage navigation state.\r\n\r\n### What does the proposed API look like?\r\nMost obvious would be to introduce global `onAbort` hook:\r\n```js\r\n  router.onAbort(function callback(abortedRoute, reason) { ... });\r\n```\r\nwhere `reason` can be one of the errors from #3047\r\n\r\nIt may be possible to call existing `onError` or `afterEach` hooks also for aborted navigations, but that would be a breaking change, and probably would make API more confusing.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3157","RelatedDescription":"Open issue \"Add possibility to handle aborted navigations globally\" (#3157)"},{"Id":"586168513","IsPullRequest":false,"CreatedAt":"2020-03-25T08:50:13","Actor":"Mafii","Number":"3154","RawContent":null,"Title":"Using Router with Office.js: router tries using push state even tho it's reset manually by the office js script","State":"closed","Body":"### What problem does this feature solve?\r\nWhen using Microsofts Offic.js (e.g. in Word: https://docs.microsoft.com/en-us/javascript/api/word?view=word-js-preview), and using Vue with vue router, the router tries using push state, but the office js script deletes the push state since the excel web pane is not supporting the push state. The check in push state wheter push state can be used, checks for `window.history && 'pushState' in window.history`, but office.js resets the fields on window.history, not window.history itself (see https://stackoverflow.com/a/42703406/). I propose we check if Office.js is available in the context, and if so, we disable the push state.\r\n\r\n### What does the proposed API look like?\r\nWe would add a check at this position:\r\n\r\nhttps://github.com/vuejs/vue-router/blob/c0d3376f4e3527bd761bd325873366ed74f5736b/src/util/push-state.js#L17\r\n\r\nThe additional check could look like this:\r\n\r\n```const officeJsLoaded = window.Office && window.Office.context;```\r\n\r\nso the whole function might look like this:\r\n\r\n```\r\nexport const supportsPushState =\r\n  inBrowser &&\r\n  (function () {\r\n    const ua = window.navigator.userAgent\r\n    const officeJsLoaded = window.Office && window.Office.context\r\n\r\n    if (\r\n      officeJsLoaded ||\r\n      ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\r\n      ua.indexOf('Mobile Safari') !== -1 &&\r\n      ua.indexOf('Chrome') === -1 &&\r\n      ua.indexOf('Windows Phone') === -1)\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    return window.history && 'pushState' in window.history\r\n  })()\r\n```\r\n\r\n\r\n\r\nAlternatively, we could check if `window.history.pushState` is null, but I am not sure of the implications of this. Maybe someone who knows the expected state in the browsers can shed a light wheter that would make sense.\r\n\r\nThis would result in this return statement, the rest of the function not being changed:\r\n```\r\nreturn window.history && 'pushState' in window.history && window.history.pushState !== null\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3154","RelatedDescription":"Closed issue \"Using Router with Office.js: router tries using push state even tho it's reset manually by the office js script\" (#3154)"},{"Id":"586418841","IsPullRequest":false,"CreatedAt":"2020-03-23T18:18:19","Actor":"rfftrifork","Number":"3156","RawContent":null,"Title":"Allow nested routes without parent component","State":"open","Body":"### What problem does this feature solve?\r\nThis issue already exist, but was closed: https://github.com/vuejs/vue-router/issues/2105 I do believe it shouldn't have been.\r\n\r\nThe `PassThrough` solution will most likely do it, but it is a workaround. I do not want to specify every view as a pass through.\r\n\r\nThis should imo. be supported by vue-router directly, making it easier to design ones system as small sub components, allowing each component to know it's own navigation and be loosely coupled.\r\n\r\n\r\nAlso, I don't know if it's the same or another issue, but `name` hierarchies would make this feature quite powerful\r\n\r\n### What does the proposed API look like?\r\nInterface wise I would say it makes sense to simply default to this behavior if `component` isn't specified.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3156","RelatedDescription":"Open issue \"Allow nested routes without parent component\" (#3156)"},{"Id":"586418167","IsPullRequest":false,"CreatedAt":"2020-03-23T18:17:10","Actor":"rfftrifork","Number":"3155","RawContent":null,"Title":"Allow nested routes without parent component","State":"closed","Body":"This issue already exist, but was closed: https://github.com/vuejs/vue-router/issues/2105 I do believe it shouldn't have been.\r\n\r\nThe `PassThrough` solution will most likely do it, but it is a workaround. I do not want to specify every view as a pass through.\r\n\r\nThis should imo. be supported by vue-router directly, making it easier to design ones system as small sub components, allowing each component to know it's own navigation and be loosely coupled.\r\n\r\nInterface wise I would say it makes sense to simply default to this behavior if `component` isn't specified.\r\n\r\nAlso, I don't know if it's the same or another issue, but `name` hierarchies would make this feature quite powerful","Url":"https://github.com/vuejs/vue-router/issues/3155","RelatedDescription":"Closed issue \"Allow nested routes without parent component\" (#3155)"},{"Id":"586001267","IsPullRequest":false,"CreatedAt":"2020-03-23T08:58:46","Actor":"snowtreetree","Number":"3153","RawContent":null,"Title":"router back not work when loading","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/snowtreetree/router-back](https://github.com/snowtreetree/router-back)\r\n\r\n**[youtube video](https://www.youtube.com/watch?v=dxpUgt-fCSo) ,  I upload my video to youtube , you can watch it in 15 second.**\r\n\r\n### Description\r\n**It's not js, just image**\r\n** in my  [app](https://github.com/snowtreetree/router-back), you can change network to slow3g，**when browser top left conrner show loading**,  click `to button`, the page show correctly,  then click browser back, the router params have changed, but the page show no change.**\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/30932683/77144357-a142dc00-6ac0-11ea-8740-ef99a6b34770.png)\r\n\r\n### What is expected?\r\nrouter back immediately.\r\n\r\n### What is actually happening?\r\nwhen something is loading，i want to let router go back, but the page does not change immediately,  when browser loading end,  the page show correctly.\r\n\r\n---\r\nIn my app , I need to do something in router change(log my page path, title), but when the internet speed is slow,  use the function of back or go(-1), I can not back 🤷‍♀️。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3153","RelatedDescription":"Closed issue \"router back not work when loading\" (#3153)"},{"Id":"585778650","IsPullRequest":false,"CreatedAt":"2020-03-22T18:12:46","Actor":"joeldenning","Number":"3152","RawContent":null,"Title":"Ability to detach and reattach popstate listeners","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\nhttps://codesandbox.io/s/nostalgic-mahavira-y0m7q\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n#### Memory leak\r\n\r\nCall `new VueRouter()` multiple times. It is impossible to clean up its popstate listener.\r\n\r\n#### Basepath bug\r\n\r\nIf you have multiple vue applications, each using vue-router, they must all share the same base path, even if you ensure only one of them is active at a time by destroying / remounting when navigating between them. Otherwise they will all attempt to ensure that every route starts with their base path.\r\n\r\nSame goes for if you have one vue-router and one react-router. The vue-router will force all urls to start with its base path within the react-owned pages, even if you have destroyed the vue application before navigating to the react application.\r\n\r\n### What is expected?\r\nI think the best solution is to call `window.addEventListener('popstate', handler)` when `const intance = new Vue({router})` is called, instead of when `new VueRouter()` is called. And then call `window.removeEventListener('popstate', handler)` when `instance.$destroy()` is called.\r\n\r\nAlternatively, it could be cleaned up like so:\r\n\r\n```js\r\n// Alternative solution (not my preferred one, but works)\r\n\r\nconst router = new VueRouter({...})\r\n// later, to clean up event listeners:\r\nrouter.detach()\r\n// later, to reattach event listeners\r\nrouter.attach()\r\n```\r\n\r\n### What is actually happening?\r\nwindow.addEventListener is called during `new VueRouter()`, and there is no way to ever remove that event listener.\r\n\r\n---\r\nSee related https://github.com/single-spa/single-spa/issues/488. I am a maintainer of single-spa, which has dozens of organizations using one or more instances of vue-router. For us, cleaning up the event listener when the application is unmounted is important to being able to have isolated apps on the same page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3152","RelatedDescription":"Open issue \"Ability to detach and reattach popstate listeners\" (#3152)"},{"Id":"585149522","IsPullRequest":false,"CreatedAt":"2020-03-21T11:22:13","Actor":"Mister-Hope","Number":"3151","RawContent":null,"Title":"Types: Missing options on instance.$router","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Steps to reproduce\r\n```\r\nthis.$router.options // should be the options that user passed to vue-rotuer\r\n```\r\n\r\n## Solution\r\n\r\nI think we should change \r\n\r\n```ts\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $router: VueRouter\r\n    $route: Route\r\n  }\r\n}\r\n```\r\nto \r\n\r\n\r\n```ts\r\nimport { RouterOptions } from './router'\r\n\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $router: VueRouter & { options: RouterOptions }\r\n    $route: Route\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3151","RelatedDescription":"Closed issue \"Types: Missing options on instance.$router\" (#3151)"},{"Id":"584909405","IsPullRequest":false,"CreatedAt":"2020-03-20T08:25:15","Actor":"snowtreetree","Number":"3150","RawContent":null,"Title":"router back not work when loading","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/snowtreetree/router-back](https://github.com/snowtreetree/router-back)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/30932683/77144357-a142dc00-6ac0-11ea-8740-ef99a6b34770.png)\r\n\r\n### What is expected?\r\nrouter back immediately.\r\n\r\n### What is actually happening?\r\nwhen something is loading，i want to let router go back, but the page does not change immediately,  when browser loading end,  the page show correctly.\r\n\r\n---\r\nIn my app , I need to do something in router change(log my page path, title), but when the internet speed is slow,  use the function of back or go(-1), I can not back 🤷‍♀️。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3150","RelatedDescription":"Closed issue \"router back not work when loading\" (#3150)"},{"Id":"584372607","IsPullRequest":false,"CreatedAt":"2020-03-19T12:47:24","Actor":"krystof-k","Number":"3149","RawContent":null,"Title":"<router-link> doesn't blur","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/xenodochial-murdock-xssfp](https://codesandbox.io/s/xenodochial-murdock-xssfp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nYou can set up a new project `vue create .` & `vue add router`, then add\r\n\r\n```css\r\na:focus {\r\nborder: 5px solid red;\r\n}\r\n```\r\n\r\nand try to click any of the navigation links.\r\n\r\n### What is expected?\r\nIt should blur after route changed.\r\n\r\n### What is actually happening?\r\nIt doesn't blur.\r\n\r\n---\r\nI tried googling for a long time but found no issues mentioning this. So either I'm missing something or it nobody styles focus state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3149","RelatedDescription":"Closed issue \"<router-link> doesn't blur\" (#3149)"},{"Id":"583448353","IsPullRequest":false,"CreatedAt":"2020-03-18T09:09:44","Actor":"M0j1","Number":"3148","RawContent":null,"Title":"Cannot get symbol type value in params","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/wandering-shape-utn95](https://codesandbox.io/s/wandering-shape-utn95)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJumping from the HOME page to the User page, the params carry a value of symbol type key, but the params obtained on the user page do not contain a value of type symbol\r\n\r\n### What is expected?\r\nI can get the key of symbol type and use it\r\n\r\n### What is actually happening?\r\nIn the params passed, the symbol type key cannot be obtained, and the Google console cannot see it\r\n\r\n---\r\nv3.1.3 can get it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3148","RelatedDescription":"Closed issue \"Cannot get symbol type value in params\" (#3148)"},{"Id":"583412666","IsPullRequest":false,"CreatedAt":"2020-03-18T02:11:51","Actor":"fellowT","Number":"3147","RawContent":null,"Title":"路由切换报错","State":"closed","Body":"Identifier 'pleaseLetJsLoaded' has already been declared\r\n![image](https://user-images.githubusercontent.com/37097875/76918253-ddc7d980-6900-11ea-88aa-5b4c4ce02803.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3147","RelatedDescription":"Closed issue \"路由切换报错\" (#3147)"},{"Id":"582192010","IsPullRequest":false,"CreatedAt":"2020-03-16T10:55:45","Actor":"deefeloper","Number":"3146","RawContent":null,"Title":"Home view created twice","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://none.needed](https://none.needed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a boilerplate vue app, add console.log() in created() in Home.\r\n\r\n### What is expected?\r\nOnly one log\r\n\r\n### What is actually happening?\r\ntwo logs\r\n\r\n---\r\nOnly the Home view is created twice on initial load & refresh, all other views are fine. I double checked that the mount div is not in there twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3146","RelatedDescription":"Closed issue \"Home view created twice\" (#3146)"},{"Id":"581212425","IsPullRequest":false,"CreatedAt":"2020-03-14T13:35:45","Actor":"bailihua93","Number":"3145","RawContent":null,"Title":"router.go won't work when the page is Pending","State":"closed","Body":"when the page is been Pending because of  some api   pending, after this.$router.push ,the  $router.go(-1)  won't work","Url":"https://github.com/vuejs/vue-router/issues/3145","RelatedDescription":"Closed issue \"router.go won't work when the page is Pending\" (#3145)"},{"Id":"580620420","IsPullRequest":false,"CreatedAt":"2020-03-13T14:08:36","Actor":"phiter","Number":"3144","RawContent":null,"Title":"Add aria-current=\"page\" to the active link","State":"closed","Body":"### What problem does this feature solve?\r\nUsers that can see the page can have a nice experience of knowing which link is currently active just by looking at a styled active link with the `activeClass`.\r\n\r\nBut visually impaired users, those who rely on screen readers, currently have no way of knowing that the currently selected link is the active link.\r\n\r\nTo fix this, `aria-current=\"page\"` adds an extra information to the screen reader that the currently focused link is the same as the current page, so if we add that together with `activeClass` we'll be aiding both sighted and blind users.\r\n\r\n### What does the proposed API look like?\r\nBasically, when we add `activeClass` also pass `aria-current=\"page\"` to the generated anchor.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3144","RelatedDescription":"Closed issue \"Add aria-current=\"page\" to the active link\" (#3144)"},{"Id":"580374482","IsPullRequest":false,"CreatedAt":"2020-03-13T05:07:27","Actor":"lovetingyuan","Number":"3143","RawContent":null,"Title":"Error: Cannot read property 'apply' of undefined","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/stupefied-river-6pyng](https://codesandbox.io/s/stupefied-river-6pyng)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nuse component route guard before vue-router installed.\r\n```javascript\r\nVue.mixin({\r\n  beforeRouteUpdate(to, from, next) {\r\n    next();\r\n  }\r\n});\r\n\r\nVue.use(Router)\r\n\r\n```\r\n\r\n### What is expected?\r\nJust no error or the document should indicate that user should not use component route guard mixins before vue-router is installed.\r\n\r\n### What is actually happening?\r\n```bash\r\nTypeError: Cannot read property 'apply' of undefined\r\n    at boundRouteGuard (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2297:20)\r\n\r\n    at iterator (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2160:7)\r\n\r\n    at step (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:1886:9)\r\n\r\n    at runQueue (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:1894:3)\r\n\r\n    at HTML5History.confirmTransition (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2187:3)\r\n\r\n    at HTML5History.transitionTo (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2074:8)\r\n\r\n    at HTML5History.push (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2405:10)\r\n\r\n    at VueRouter.push (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2820:18)\r\n\r\n    at handler (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:1100:18)\r\n\r\n    at invokeWithErrorHandling (eval at Qr (https://codesandbox.io/static/js/sandbox.37b4bff87.js:1:178758), <anonymous>:1859:26)\r\n\r\n    at HTMLAnchorElement.invoker (eval at Qr (https://codesandbox.io/static/js/sandbox.37b4bff87.js:1:178758), <anonymous>:2184:14)\r\n\r\n    at HTMLAnchorElement.original._wrapper (eval at Qr (https://codesandbox.io/static/js/sandbox.37b4bff87.js:1:178758), <anonymous>:7543:25)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3143","RelatedDescription":"Open issue \"Error: Cannot read property 'apply' of undefined\" (#3143)"},{"Id":"579759620","IsPullRequest":false,"CreatedAt":"2020-03-12T08:16:36","Actor":"Evertvdw","Number":"3142","RawContent":null,"Title":"Async child components are created after App.vue mounted() on client but not on SSR","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/fervent-dream-5upjy](https://codesandbox.io/s/fervent-dream-5upjy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the code and check the console output of the SSR and the Client hydration.\r\n\r\n\r\n### What is expected?\r\nI'm using Quasar with SSR mode, but we have trouble there with async components. We run into some errors because at the SSR side some components are created, which on the client side are created after the initial mount. This in turn causes hydration errors. In the provided example I have a MainLayout (which is async loaded in the router), which in turn  loads (also async) an EssentialLink component. In order to solve our issue this EssentialLink component should be created on the client side before the App.vue mounted hook. \r\n\r\n### What is actually happening?\r\nCurrently only the component loaded async in the route itself is created before App.vue mounted(). Child components that are also async are created after the App.vue mounted() hook which causes issues for us. \r\n\r\n---\r\nServer and client side are waiting for router.onReady() which in the documentation says that async components are resolved before this hook is called: https://router.vuejs.org/api/#router-onready. \r\n\r\nIt seems to me that the router.onReady() should only be fired when all async child components are also resolved and created.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3142","RelatedDescription":"Closed issue \"Async child components are created after App.vue mounted() on client but not on SSR\" (#3142)"},{"Id":"576676381","IsPullRequest":false,"CreatedAt":"2020-03-06T03:38:31","Actor":"rashadrivera","Number":"3141","RawContent":null,"Title":"VueRouter Silently Fails","State":"closed","Body":"When configuring vue-router, it can fail without any explanation.  In my case, I placed a '<router-view></router-view>' tag in my app.  However, when the app renders the UI, there is nothing shown.  The Chrome debug tool shows the router-view node, but nothing is inside.  \r\n\r\nThe expected behavior is for the router to throw an error or show a console message explaining why it did not render anything instead of silently failing.  ","Url":"https://github.com/vuejs/vue-router/issues/3141","RelatedDescription":"Closed issue \"VueRouter Silently Fails\" (#3141)"},{"Id":"575935320","IsPullRequest":false,"CreatedAt":"2020-03-05T15:26:46","Actor":"vallemar","Number":"3140","RawContent":null,"Title":"Overwrite Props to Route Components does not work","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/vallemar/rfwo5m3v/74/](https://jsfiddle.net/vallemar/rfwo5m3v/74/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the text.\r\n\r\n### What is expected?\r\nI hope that the properties that are passed to the view are the ones that I have configured in my data link with <router-link>.\r\n\r\n### What is actually happening?\r\nThe property that is passed is the default that is put on the router and is not overwritten by the one that is passed at that time from the <router-link>.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3140","RelatedDescription":"Closed issue \"Overwrite Props to Route Components does not work\" (#3140)"},{"Id":"575525594","IsPullRequest":false,"CreatedAt":"2020-03-04T16:25:51","Actor":"victortwc","Number":"3139","RawContent":null,"Title":"[typescript] Incompatible Route and Location types","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[http://shorturl.at/ixJQ5](http://shorturl.at/ixJQ5)\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nthis.$router.push({\r\n    ...this.$route, \r\n    params: {\r\n        newParam: true\r\n    }\r\n})\r\n```\r\n\r\nWith typescript, it breaks.\r\n\r\n### What is expected?\r\nRoute and Location types are compatible.\r\n\r\n### What is actually happening?\r\nAs Route now have the name parameter with `string | null | undefined` it breaks the navigation, as `Location` will only accept `string | undefined` as name.\r\n\r\n---\r\nCommit causing the issue:\r\nhttps://github.com/vuejs/vue-router/commit/8f831f28f33bb766d5baaabc8b2daff259f3d45b\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3139","RelatedDescription":"Closed issue \"[typescript] Incompatible Route and Location types\" (#3139)"},{"Id":"574247911","IsPullRequest":true,"CreatedAt":"2020-03-03T17:10:44","Actor":"Alex-Sokolov","Number":"3136","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3136","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#3136)"},{"Id":"574702045","IsPullRequest":false,"CreatedAt":"2020-03-03T16:55:47","Actor":"davNazaryan","Number":"3137","RawContent":null,"Title":"Option to merge meta with parent route meta","State":"closed","Body":"### What problem does this feature solve?\r\nAdd an option `mergeParentMeta: [Boolean]` to give the ability to merge route meta with its parent route meta directly in routes.js\r\n`mergeParentMeta`-s default value is `false`. The priority of the child must be higher than the parent.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```js\r\n{\r\n        path: '/report',\r\n        name: 'report',\r\n        redirect: { name: 'report/workspace' },\r\n        component: { render(c) { return c('router-view'); } },\r\n        meta: {\r\n          breadcrumbs: {\r\n            name: 'Reports',\r\n          },\r\n          layout: {\r\n            headerMenu: true,\r\n          },\r\n          menuItems: [\r\n            { name: 'Banners', to: 'report/banner' },\r\n            { name: 'Campaigns', to: 'report/campaign' },\r\n            { name: 'Workspaces', to: 'report/workspace' },\r\n          ],\r\n        },\r\n        children: [\r\n          {\r\n            path: '/report/workspace',\r\n            ...component('report/list/List', 'report/workspace'),\r\n            mergeParentMeta: true,\r\n            meta: {\r\n              breadcrumbs: {\r\n                crumbs: [\r\n                  { name: 'Reports', route: 'report', title: 'Reports' },\r\n                ],\r\n                name: 'Workspaces',\r\n              },\r\n            },\r\n          },\r\n          {\r\n            path: '/report/campaign',\r\n            ...component('report/list/List', 'report/campaign'),\r\n            mergeParentMeta: true,\r\n            meta: {\r\n              breadcrumbs: {\r\n                crumbs: [\r\n                  { name: 'Reports', route: 'report', title: 'Reports' },\r\n                ],\r\n                name: 'Campaigns',\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n```\r\n\r\nIn this case, the `menuItems` meta can be used inside `report\\workspace` and `report\\campaign` routes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3137","RelatedDescription":"Closed issue \"Option to merge meta with parent route meta\" (#3137)"},{"Id":"574768719","IsPullRequest":false,"CreatedAt":"2020-03-03T15:58:30","Actor":"lyaskovec","Number":"3138","RawContent":null,"Title":"Double decoding of url params","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://lyaskovec.github.io/tests/](https://lyaskovec.github.io/tests/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere are two cases where you can see issue with double decoding of URL:\r\ncase 1:\r\n- Go to the example page\r\n- Click on link  /%25\r\n- Click on link /home\r\n- Try to use browsers navigation buttons\r\n\r\ncase2:\r\n- Go to the example page\r\n- Click on link  /%25\r\n- reload the browser page\r\n\r\n\r\n### What is expected?\r\nIt should show a correct page\r\n\r\n### What is actually happening?\r\nI got \"URIError: URI malformed\" error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3138","RelatedDescription":"Open issue \"Double decoding of url params\" (#3138)"},{"Id":"573201562","IsPullRequest":true,"CreatedAt":"2020-02-29T06:07:22","Actor":"iliyaZelenko","Number":"3135","RawContent":null,"Title":"fix(types): interface Route, the query property","State":"open","Body":"Maybe it can also be null (see the `query` property in the `Location`)\r\n\r\n","Url":"https://github.com/vuejs/vue-router/pull/3135","RelatedDescription":"Open PR \"fix(types): interface Route, the query property\" (#3135)"},{"Id":"572931434","IsPullRequest":false,"CreatedAt":"2020-02-28T18:35:07","Actor":"jsamayoap","Number":"3134","RawContent":null,"Title":"Change router params to a generic/any type instead of Dictionary<string>","State":"closed","Body":"Expected behavior, to push params of any type, like:\r\n\r\nthis.$router.push({\r\n                name: 'piloto',\r\n                params: {\r\n                    id: item.id.toString(),\r\n                    isThisTrue: (this.opN === 1),\r\n                    isThisFalse: (this.opN === 2)\r\n                }\r\n            })\r\n\r\nCurrently this code on typescript would produce the following error:\r\nNo overload matches this call\r\n\r\nhttps://github.com/vuejs/vue-router/blob/39d46b254bd8130464626539e7b73b4cc760241b/types/router.d.ts#L140\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3134","RelatedDescription":"Closed issue \"Change router params to a generic/any type instead of Dictionary<string>\" (#3134)"},{"Id":"570336117","IsPullRequest":false,"CreatedAt":"2020-02-25T06:10:00","Actor":"luxaritas","Number":"3133","RawContent":null,"Title":"Redirection away from and back to route fails to cancel navigation","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/luxaritas/pen/WNvRagw?editors=1010](https://codepen.io/luxaritas/pen/WNvRagw?editors=1010)\r\n\r\n### Steps to reproduce\r\n* Run a long async function within a route guard\r\n* Start at route A, navigate to route B, and then back to A again before the guard for B resolves\r\n\r\n### What is expected?\r\nNavigation to route B is cancelled, or at least completed and re-routed to route A\r\n\r\n### What is actually happening?\r\nNavigationDuplicated is thrown, and the page navigates to and stays on route B\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3133","RelatedDescription":"Open issue \"Redirection away from and back to route fails to cancel navigation\" (#3133)"},{"Id":"569698372","IsPullRequest":false,"CreatedAt":"2020-02-24T08:17:54","Actor":"namoosalishah","Number":"3132","RawContent":null,"Title":"Nested named route with parameter is redirected to the route name on refresh","State":"closed","Body":"Hi,\r\n\r\nI am having this issue with the nested routes having parameter, when I refresh the page, the route loses the parameter and redirects to the route name instead. Please check the following code.\r\nBefore refreshing the page\r\nhttp://localhost:8080/pos/tickets/1\r\nand after refreshing\r\nhttp://localhost:8080/pos/ticketDetail\r\n<pre>\r\n{\r\n   path: \"/pos\",\r\n   name: \"pos\",\r\n   component: Pos,\r\n   meta: {\r\n      requiresAuth: true\r\n   },\r\n   children: [\r\n      ...... other child routes,\r\n     {\r\n       path: \"tickets/:ticket_id\",\r\n       name: \"ticketDetail\",\r\n       component: TicketDetail\r\n      }\r\n   ]\r\n}\r\n</pre>\r\n\"vue\": \"^2.6.8\",\r\n\"vue-router\": \"^3.0.1\"\r\n\r\nPlease advise?","Url":"https://github.com/vuejs/vue-router/issues/3132","RelatedDescription":"Closed issue \"Nested named route with parameter is redirected to the route name on refresh\" (#3132)"},{"Id":"568791080","IsPullRequest":true,"CreatedAt":"2020-02-23T21:52:36","Actor":"NoelDeMartin","Number":"3129","RawContent":null,"Title":"Documentation: Update guard example to avoid stack overflow","State":"closed","Body":"I am surprised that this hasn't been brought up before, so maybe I am doing something wrong. But I am getting a \"too much recursion\" error with the sample code in the documentation.\r\n\r\nLooking at the code, it seems to me like getting a stack overflow *is* the expected behaviour. May this be a [schrödinbug](http://www.catb.org/jargon/html/S/schroedinbug.html)?","Url":"https://github.com/vuejs/vue-router/pull/3129","RelatedDescription":"Closed or merged PR \"Documentation: Update guard example to avoid stack overflow\" (#3129)"},{"Id":"569344783","IsPullRequest":false,"CreatedAt":"2020-02-23T21:24:42","Actor":"zhouyanggodking","Number":"3130","RawContent":null,"Title":"router.go() will not free previous page data causing memory leak issue","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.  first land on /home page, then navigate to /about page.    (at this page, it produces a large array)\r\n2. on about page, click back button (calling router.go(-1))\r\n3. at the memory panel of chrome devtool,  click \"garbage collect\" button to force garbage collection.\r\n4. take a snapshot\r\n\r\nyou can see the created array is not freed.\r\n\r\n### What is expected?\r\nArray created on about page should be freed.\r\n\r\n\r\n### What is actually happening?\r\nArray created on about page stays in memory\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n![image](https://user-images.githubusercontent.com/6425541/75094433-fd9c0400-55c5-11ea-9a7b-9ac17321bdd9.png)\r\n\r\nNote:  if I click the back button of chrome browser, no issue at all. Weird\r\nYou can also monitor the memory usage of each page. (Please remember to force garbage collection before you look at the stats)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3130","RelatedDescription":"Closed issue \"router.go() will not free previous page data causing memory leak issue\" (#3130)"},{"Id":"569352079","IsPullRequest":true,"CreatedAt":"2020-02-22T20:50:43","Actor":"rongzedong","Number":"3131","RawContent":null,"Title":"增加个 methods 中 redirect 的方法","State":"closed","Body":"不知道这么写对不对，哪里不对，请修正并实现这个方法，因为比如登录 或者其他某些时候是需要这样做的。而比如我就需要这样的教程（例子）。\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3131","RelatedDescription":"Closed or merged PR \"增加个 methods 中 redirect 的方法\" (#3131)"},{"Id":"568732576","IsPullRequest":false,"CreatedAt":"2020-02-22T14:35:01","Actor":"alphatr","Number":"3128","RawContent":null,"Title":"beforeRouteLeave don't prevent router.back()","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/alphatr/eawpdvb6/](https://jsfiddle.net/AlphaTr/eawpdvb6/)\r\n\r\n### Steps to reproduce\r\nopen https://jsfiddle.net/alphatr/eawpdvb6/ and click `Go to Page` then click `back`;\r\n\r\n### What is expected?\r\nNeither `location.hash` nor `$route` change\r\n\r\n### What is actually happening?\r\nlocation.hash is changed\r\n\r\n---\r\nif beforeRouteLeave used next in synchronize, the location.hash is not change;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3128","RelatedDescription":"Closed issue \"beforeRouteLeave don't prevent router.back()\" (#3128)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"589214433","IsPullRequest":true,"CreatedAt":"2020-03-27T15:30:05","Actor":"brycehipp","Number":"1703","RawContent":null,"Title":"Correcting typo in README","State":"open","Body":"I was reading through the changes coming to v4 and noticed a minor typo.","Url":"https://github.com/vuejs/vuex/pull/1703","RelatedDescription":"Open PR \"Correcting typo in README\" (#1703)"},{"Id":"586791755","IsPullRequest":true,"CreatedAt":"2020-03-24T14:40:47","Actor":"sunnyke","Number":"1702","RawContent":null,"Title":"modify test description","State":"closed","Body":"spell error:\r\nfile path:  /vuex/test/unit/util.spec.js \r\ndiff: change nornal to normal","Url":"https://github.com/vuejs/vuex/pull/1702","RelatedDescription":"Closed or merged PR \"modify test description\" (#1702)"},{"Id":"585149548","IsPullRequest":true,"CreatedAt":"2020-03-24T14:36:24","Actor":"kootoopas","Number":"1701","RawContent":null,"Title":"Fix getter type optional params","State":"closed","Body":"Fix getter type to match implementation by marking optional params.","Url":"https://github.com/vuejs/vuex/pull/1701","RelatedDescription":"Closed or merged PR \"Fix getter type optional params\" (#1701)"},{"Id":"583179440","IsPullRequest":false,"CreatedAt":"2020-03-23T21:03:34","Actor":"kossa","Number":"1698","RawContent":null,"Title":"Doc got empty page","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[http://localhost:8080/](http://localhost:8080/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone repo\r\nrun : npm i\r\nrun : npm run docs\r\n\r\nin browser open : http://localhost:8080/\r\n\r\n### What is expected?\r\nSee the documentation\r\n\r\n### What is actually happening?\r\nBlank page\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1698","RelatedDescription":"Closed issue \"Doc got empty page\" (#1698)"},{"Id":"584889928","IsPullRequest":false,"CreatedAt":"2020-03-20T07:30:21","Actor":"sunlulu8","Number":"1700","RawContent":null,"Title":"老项目vuex不能共享","State":"closed","Body":"老项目，在每个模块都有一个入口文件会创建vue实例然后注入store，这种写法vuex好像不能共享啊，应该怎么修改才可以在一个模块修改state之后另一个模块getters可以自己获取","Url":"https://github.com/vuejs/vuex/issues/1700","RelatedDescription":"Closed issue \"老项目vuex不能共享\" (#1700)"},{"Id":"584741692","IsPullRequest":true,"CreatedAt":"2020-03-19T22:42:16","Actor":"andrewminer","Number":"1699","RawContent":null,"Title":"Throw an error when an unknown mutation is requested","State":"open","Body":"I noticed when I was running my unit tests that I got a number of `[vuex] unknown mutation type` errors in the log, but without any tests actually failing.  This was due to my having (deliberately) removed a store which provided those mutations.  This also removed those tests which were explicitly exercising that mutation, so there were no longer any tests which actually checked that the mutation worked.  So, that all checks out.\r\n\r\nHowever...  there still were all the the places which were calling the now unknown mutation without triggering any errors of their own in _their_ tests.  This pull request changes the reaction to not finding a mutation to thow an error instead of swallowing the problem.  This will (correctly, to my mind) cause upstream code which erroneously commits a non-existant mutation to fail.","Url":"https://github.com/vuejs/vuex/pull/1699","RelatedDescription":"Open PR \"Throw an error when an unknown mutation is requested\" (#1699)"},{"Id":"583168608","IsPullRequest":true,"CreatedAt":"2020-03-19T15:14:49","Actor":"atilacamurca","Number":"1696","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1696","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1696)"},{"Id":"583173233","IsPullRequest":false,"CreatedAt":"2020-03-17T17:20:44","Actor":"kossa","Number":"1697","RawContent":null,"Title":"Doc got empty page","State":"closed","Body":"Hello,\r\n\r\nI try to run : `npm run docs` after cloning and npm install command\r\n\r\nConsole :\r\n![image](https://user-images.githubusercontent.com/1175584/76883229-15d90900-687c-11ea-88e7-7ffbdd9db559.png)\r\n\r\nBrowser :\r\n![image](https://user-images.githubusercontent.com/1175584/76883027-c7c40580-687b-11ea-87a0-77705e94de50.png)\r\n ","Url":"https://github.com/vuejs/vuex/issues/1697","RelatedDescription":"Closed issue \"Doc got empty page\" (#1697)"},{"Id":"581694787","IsPullRequest":false,"CreatedAt":"2020-03-15T14:25:10","Actor":"h311x","Number":"1695","RawContent":null,"Title":"Add useStoreModule","State":"open","Body":"### What problem does this feature solve?\r\nWhile I was looking through the examples of the 4.0 alpha version, I thought that when you have a large store it can become a bit annoying to declare getters and actions locally in every component you need. So I think it would be nice to have a some sort of a helper function that returns only (hopefully typed) store module you want to use. \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst myModule = useStoreModule(\"module namespace\")\r\n\r\nconsole.log(myModule.state) // returns state of a module etc.\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1695","RelatedDescription":"Open issue \"Add useStoreModule\" (#1695)"},{"Id":"574213968","IsPullRequest":true,"CreatedAt":"2020-03-11T10:05:11","Actor":"elevatebart","Number":"1687","RawContent":null,"Title":"docs: make obvious where to import store from","State":"closed","Body":"As we browse through the modules page, it is unclear where the `store` is imported from.\r\n\r\nSince it is a one liner, I thought it would clarify to have the import explicitly here.\r\n\r\nTell me what you think.","Url":"https://github.com/vuejs/vuex/pull/1687","RelatedDescription":"Closed or merged PR \"docs: make obvious where to import store from\" (#1687)"},{"Id":"579102344","IsPullRequest":false,"CreatedAt":"2020-03-11T08:54:30","Actor":"enjkvbej","Number":"1694","RawContent":null,"Title":"How to update item of deep array in mutation","State":"closed","Body":"````\r\nstate = {\r\n  list: [\r\n      {\r\n          config: {\r\n              children: []\r\n          },\r\n      },\r\n  ]\r\n}\r\n\r\nmutation:\r\nconst copyRow = cloneDeep(state.list[0]) // lodash cloneDeep\r\ncopyRow.config.children.push({xxx: xxx})\r\nstate.list.splice(0, 1, copyRow)\r\n````\r\nexpect: add item in chlidren\r\nerror: [vuex] do not mutate vuex store state outside mutation handlers.\r\nPlease help me! Thanks!","Url":"https://github.com/vuejs/vuex/issues/1694","RelatedDescription":"Closed issue \"How to update item of deep array in mutation\" (#1694)"},{"Id":"579099587","IsPullRequest":false,"CreatedAt":"2020-03-11T08:49:34","Actor":"enjkvbej","Number":"1693","RawContent":null,"Title":"How to update item of a deep array in mutation","State":"closed","Body":"````\r\nstate = {\r\n  list: [\r\n      {\r\n          config: {\r\n              children: []\r\n          },\r\n      },\r\n  ]\r\n}\r\n\r\nmutation:\r\nconst copyRow = cloneDeep(state.list[0]) // lodash cloneDeep\r\ncopyRow.config.children.push({xxx: xxx})\r\nstate.list.splice(0, 1, copyRow)\r\n````\r\nexpect: add item in chlidren\r\nerror: [vuex] do not mutate vuex store state outside mutation handlers.\r\nPlease help me! Thanks!","Url":"https://github.com/vuejs/vuex/issues/1693","RelatedDescription":"Closed issue \"How to update item of a deep array in mutation\" (#1693)"},{"Id":"564092739","IsPullRequest":false,"CreatedAt":"2020-03-09T13:12:25","Actor":"AlexandreBonaventure","Number":"1681","RawContent":null,"Title":"Yarn v2 compat: add vue to peerDependencies","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Steps to reproduce\r\nWhen using Typescript, vuex export types like here: https://github.com/vuejs/vuex/blob/dev/types/index.d.ts#L1 But as you can see here, it imports Vue typings to make it work. As a matter of fact `vue` should be added to peerDependencies\r\n\r\n### What is expected?\r\n`vue` should be a peerDependency \r\n\r\n### What is actually happening?\r\nit is not, and it fails in a strict dependency-tree context\r\n\r\nRef: https://github.com/vuejs/vue-cli/issues/5135\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1681","RelatedDescription":"Closed issue \"Yarn v2 compat: add vue to peerDependencies\" (#1681)"},{"Id":"577861744","IsPullRequest":true,"CreatedAt":"2020-03-09T12:18:09","Actor":"kiaking","Number":"1692","RawContent":null,"Title":"build: add vue as a peer dependency (#1681)","State":"closed","Body":"Issue: #1681 \r\n\r\nThis PR adds Vue as a peer dependency. It should help using Vuex with Yarn 2 too.","Url":"https://github.com/vuejs/vuex/pull/1692","RelatedDescription":"Closed or merged PR \"build: add vue as a peer dependency (#1681)\" (#1692)"},{"Id":"574939504","IsPullRequest":false,"CreatedAt":"2020-03-09T11:57:54","Actor":"rodolphocastro","Number":"1689","RawContent":null,"Title":"ModuleTree<S, R>","State":"closed","Body":"### What problem does this feature solve?\r\nThis interface might help when dealing with nested modules on stores using Typescript.\r\n\r\nCurrently the `Module<S, R>` interface exposes a single `ModuleTree<R>´ which allows us to create one level of nested modules. \r\n\r\nExposing a `ModuleTree<R>` or a `ModuleTree<S, R>` would be inline with the current `GetterTree<S, R>` and other Trees and allow us to deeper nest our Modules.\r\n\r\nI ran into this issue when attempting to create a nested module within a nested module using Typescript. The \"parent\" modules holds state for some supported features on the application and its children require to check those features in order to validate their `actions`. The root state (or parent of the parent, in this case) simply holds environment and version information.\r\n\r\n### What does the proposed API look like?\r\nI belive that a new interface `ModuleTree<S,R>` might solve the issue:\r\n\r\n```ts\r\nexport interface ModuleTree<S, R> {\r\n  [key: string]: Module<S, R>;\r\n}\r\n```\r\n\r\nWhich could be added to the Current `Module<S, R>` interface as an `or`:\r\n\r\n```ts\r\nexport interface Module<S, R> {\r\n  namespaced?: boolean;\r\n  state?: S | (() => S);\r\n  getters?: GetterTree<S, R>;\r\n  actions?: ActionTree<S, R>;\r\n  mutations?: MutationTree<S>;\r\n  modules?: ModuleTree<R> | ModuleTree<S, R>;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1689","RelatedDescription":"Closed issue \"ModuleTree<S, R>\" (#1689)"},{"Id":"574743323","IsPullRequest":true,"CreatedAt":"2020-03-05T09:00:02","Actor":"logicaltrojan","Number":"1688","RawContent":null,"Title":"Typo Fix : 돌연 변이 -> 변이","State":"closed","Body":"mutations can be translate to '변이' in Korean, but it makes completely non sense as '돌연변이'.\r\nThe '돌연 변이' is used as 'mutants'(in biological meaning).","Url":"https://github.com/vuejs/vuex/pull/1688","RelatedDescription":"Closed or merged PR \"Typo Fix : 돌연 변이 -> 변이\" (#1688)"},{"Id":"575792250","IsPullRequest":false,"CreatedAt":"2020-03-04T21:30:45","Actor":"DQvsRA","Number":"1691","RawContent":null,"Title":"Why getters functions executed even if they do not called","State":"closed","Body":"Strange behaviour all registered getter are called when Vuex initialized, even before first call of the getter it's executed automatically. Is it ok? I don't think so.\r\n```\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n  },\r\n  getters: {\r\n    helloGetter (store) {\r\n      console.log('What?!')\r\n    }\r\n  }\r\n})\r\n\r\nnew Vue({\r\n  store,\r\n  render: h => h(<div>App</div>)\r\n}).$mount('#app')\r\n```","Url":"https://github.com/vuejs/vuex/issues/1691","RelatedDescription":"Closed issue \"Why getters functions executed even if they do not called\" (#1691)"},{"Id":"575414643","IsPullRequest":false,"CreatedAt":"2020-03-04T13:47:39","Actor":"asoglovo","Number":"1690","RawContent":null,"Title":"Helper functions to subscribe a component to the commits/actions stream","State":"open","Body":"### What problem does this feature solve?\r\nAdd a \"mapping\" layer from the mutations/actions stream to the components that want to subscribe to them. \r\n\r\nSimilarly to the existing `mapActions` or `mapGetters` functions which decouple the Vuex store from the components using it, a new pair of functions could exist to allow the components get subscribed to the dispatched actions or committed mutations in a way such that direct usage of the store is not necessary.\r\n\r\n### What does the proposed API look like?\r\nIn the components, instead of directly accessing `$store` to subscribe to the actions stream:\r\n\r\n```js\r\ncreated() {\r\n  this.unsubscribe = this.$store.subscribeAction((action, state) => {\r\n    if (action.type === 'MY_ACTION_TYPE') { ... }\r\n  })\r\n},\r\n\r\ndestroyed() {\r\n  this.unsubscribe()\r\n}\r\n```\r\n\r\nWe'd have something like:\r\n\r\n```js\r\ncreated() {\r\n  this.unsubscribe = subscribeAction('MY_ACTION_TYPE', (payload, state) => { ... })\r\n},\r\n\r\ndestroyed() {\r\n  this.unsubscribe()\r\n}\r\n```\r\n\r\nThis function would not only decouple the usage of the store from the components, but also provide a filter to only respond to the given action type. Note that, since subscribing to actions is not a widespread idiom with Vuex, we could go without a plural version, such as `subscribeActions`.\r\n\r\nA similar function, `subscribeMutation` could do the same for mutations.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1690","RelatedDescription":"Open issue \"Helper functions to subscribe a component to the commits/actions stream\" (#1690)"},{"Id":"573354462","IsPullRequest":false,"CreatedAt":"2020-02-29T17:41:17","Actor":"zl7261","Number":"1686","RawContent":null,"Title":"How to typescript vuex getter function?","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[ https://github.com/zl7261/vuex_study]( https://github.com/zl7261/vuex_study)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe vuex getters functions can return an anonymous function that can operate state of vuex .\r\nbut how to typescript annotation function param type\r\nif I call vuex getters like this code style \r\n\r\n``` javascript\r\nconst getters = {\r\n    getStateValue(state) {\r\n        return (value) => {\r\n            console.log(value)\r\n            return state[value]\r\n        }\r\n    }\r\n}\r\n```\r\n```javascript \r\nthis.$store.getters.getStateValue('testMsg')\r\n```\r\nActually, 'textMsg' is type of the Inner anonymous function param,\r\nbut if I call the getters method like this, the IDE think state is String type.\r\n\r\n\r\n\r\n### What is expected?\r\nCan be typescript\r\n\r\n### What is actually happening?\r\nI don't know how to use type annotation in this case.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1686","RelatedDescription":"Open issue \"How to typescript vuex getter function?\" (#1686)"},{"Id":"562379417","IsPullRequest":true,"CreatedAt":"2020-02-27T14:07:35","Actor":"PeterChen1997","Number":"1679","RawContent":null,"Title":"fix docs description","State":"closed","Body":"I think this 'action' maybe is not the action in Vuex? Maybe using 'mutation' in docs is more specific\r\nI check the englinsh docs, and it's the same word 'action'...\r\nMaybe I misunderstand the mean","Url":"https://github.com/vuejs/vuex/pull/1679","RelatedDescription":"Closed or merged PR \"fix docs description\" (#1679)"},{"Id":"569116559","IsPullRequest":false,"CreatedAt":"2020-02-26T00:53:31","Actor":"davidmeirlevy","Number":"1684","RawContent":null,"Title":"`createNamespacedHelpers` return mappers that need `this`","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/davidmeirlevy/9hbqjmg2/34/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nget a mapper:\r\n`const { mapActions } = createNamespacedHelpers(MODULE_NAME)`\r\n\r\nmap some action:\r\n`const {action} = mapActions(['action'])`\r\n\r\nrun this action directly, without adding it to a component methods:\r\n`action()`\r\n\r\n### What is expected?\r\nthe action should be dispacthed\r\n\r\n### What is actually happening?\r\nThis line breaks because we didn't ran this function from a vue component context:\r\n`var dispatch = this.$store.dispatch;`\r\n\r\n---\r\nwhen we want to use the mappers from the `setup()` function of the composition-api, the component's `this` shouldn't be relevant, so you should probably find another way to map actions without expecting being executed as a vue component's method.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1684","RelatedDescription":"Closed issue \"`createNamespacedHelpers` return mappers that need `this`\" (#1684)"},{"Id":"569448568","IsPullRequest":true,"CreatedAt":"2020-02-25T16:56:03","Actor":"davidmeirlevy","Number":"1685","RawContent":null,"Title":"#1684 - wrap namespaced helpers with store ahead","State":"closed","Body":"related to #1684 ","Url":"https://github.com/vuejs/vuex/pull/1685","RelatedDescription":"Closed or merged PR \"#1684 - wrap namespaced helpers with store ahead\" (#1685)"},{"Id":"562476929","IsPullRequest":false,"CreatedAt":"2020-02-21T12:47:59","Actor":"davidpelayo","Number":"1680","RawContent":null,"Title":"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n\r\n- Non-working version, due not binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw](https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw).\r\n- Working version, due binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7](https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7).\r\n\r\n### Steps to reproduce\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `updated` or `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` doesn't get triggered.\r\n\r\nHowever: If you use the getter directly into the component template, it gets correctly reevaluated and the `beforeUpdate` gets triggered.\r\n\r\n### What is expected?\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` gets triggered.\r\n\r\n### What is actually happening?\r\nThe `beforeUpdate` lifecycle method does not get triggered due the reactivity doesn't seem to work correctly, unless you bind the getter directly to the component `<template />`.\r\n\r\n---\r\n#### Context\r\nDue a project's needs, I needed to monitor when the getter value got updated to update a component `data` property, accordingly, and then update the view.\r\n\r\nHowever, a restriction was set in place that the getter couldn't be directly used at the view, because the complexity of the component, the data should have been used instead.\r\n\r\nIt might be that this is actually a feature instead of a bug, requiring binding a getter to the vue to enjoy 100% reactivity from state down to the actual DOM out of the box; but, mentally, the documentation tells you reactivity works so that components can inject getters and get updated values magically; **but not explicitly saying those needs to be declared at the view** (template) - that's why I consider this a bug.\r\n\r\n#### The workaround\r\nWorkaround 1: A simple workaround would consist on setting a dynamic class name or DOM attribute bound to the getter; so that provokes the `updated` to get invoked, and works nicely.\r\n\r\nWorkaround 2: Watch the computed value incoming from the getter, and update your local component state based on the new value.\r\n\r\nHowever, it took me around an hour to debug the whole thing and figure out this topic. **It might be worth to update the documentation if this is actually intended.**\r\n\r\n#### What led me to confusion\r\nThe `beforeUpdate` and `updated` hooks are meant to be triggered only when the virtual DOM needs updates and patching, but not necessarily as a result of the single store being updated. That probably led me to a misleading conception.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1680","RelatedDescription":"Closed issue \"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)\" (#1680)"},{"Id":"567707440","IsPullRequest":false,"CreatedAt":"2020-02-19T17:11:26","Actor":"blacksonic","Number":"1683","RawContent":null,"Title":"Vuex breaks with Vue 3.x upgrade","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/blacksonic/todoapp-vue/tree/vue3](https://github.com/blacksonic/todoapp-vue/tree/vue3)\r\n\r\n### Steps to reproduce\r\nvue add vue-next\r\ntry to use the Vuex plugin on the instance returned from createApp\r\n\r\n### What is expected?\r\nVuex plugin added to the app instance\r\n\r\n### What is actually happening?\r\nThe app breaks with console error:\r\n\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n\r\n---\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\nvar version = Number(Vue.version.split('.')[0]);\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1683","RelatedDescription":"Open issue \"Vuex breaks with Vue 3.x upgrade\" (#1683)"},{"Id":"567702944","IsPullRequest":false,"CreatedAt":"2020-02-19T17:04:20","Actor":"blacksonic","Number":"1682","RawContent":null,"Title":"Vuex breaks with Vue 3.x","State":"closed","Body":"I've tried to run a Vue 3 application with Vuex, but when using it as a plugin I get the following error:\r\n\r\n```\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n```\r\n\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\n```javascript\r\nvar version = Number(Vue.version.split('.')[0]);\r\n```\r\n\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.","Url":"https://github.com/vuejs/vuex/issues/1682","RelatedDescription":"Closed issue \"Vuex breaks with Vue 3.x\" (#1682)"},{"Id":"562244423","IsPullRequest":true,"CreatedAt":"2020-02-14T00:15:32","Actor":"cjihrig","Number":"1678","RawContent":null,"Title":"refactor: remove extra loops in dispatch()","State":"closed","Body":"This commit replaces two chained `filter()`-`forEach()` sequences in `dispatch()` with single `forEach()`s.","Url":"https://github.com/vuejs/vuex/pull/1678","RelatedDescription":"Closed or merged PR \"refactor: remove extra loops in dispatch()\" (#1678)"},{"Id":"561614729","IsPullRequest":false,"CreatedAt":"2020-02-07T12:41:22","Actor":"XemaA","Number":"1677","RawContent":null,"Title":"Dispatching large data cause app craches","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/XemaA/pen/jOPEOqm?editors=0010](https://codepen.io/XemaA/pen/jOPEOqm?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am trying to mutate  a file content's in the state so I can use them in different modules of the app.\r\n```javascript\r\n// In the action : I read file content\r\nreadFile(context, payload) {\r\n    const readStream = fs.createReadStream(payload.filePath);\r\n    Papa.parse(readStream, { header: true }, complete(results) { // here I use papaparse (Papa) to parse file content\r\n        context.commit('testA', results.data); // in case of large file, when I comment this line the app doesn't stop\r\n    });\r\n}\r\n// mutation\r\ntestA(state, payload) {\r\n    state.structData = payload;\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\nfile content mutated to state\r\n\r\n### What is actually happening?\r\non case of 23MB size file the app craches without returning any errors or warning\r\n\r\n---\r\nWhen working with small files the process works as expected, the issue appears only with large files ( I am testing 23MB size file)\r\nI am working on electron/vue app\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1677","RelatedDescription":"Open issue \"Dispatching large data cause app craches\" (#1677)"},{"Id":"560738552","IsPullRequest":true,"CreatedAt":"2020-02-06T02:21:56","Actor":"miguelrincon","Number":"1676","RawContent":null,"Title":"fix(#1571): remove undefined payload from dispatch","State":"open","Body":"Fix for #1571\r\n\r\nRemoves unused payloads from the dispatch calls.\r\n\r\n- Original PR at https://github.com/vuejs/vuex/pull/1573.\r\n- Solution was proposed at https://github.com/vuejs/vuex/issues/1571#issuecomment-505838341","Url":"https://github.com/vuejs/vuex/pull/1676","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from dispatch\" (#1676)"},{"Id":"559587635","IsPullRequest":true,"CreatedAt":"2020-02-05T08:52:36","Actor":"kiaking","Number":"1674","RawContent":null,"Title":"ci: fix failing e2e test","State":"closed","Body":"This PR Tries to fix randomly failing e2e test.","Url":"https://github.com/vuejs/vuex/pull/1674","RelatedDescription":"Closed or merged PR \"ci: fix failing e2e test\" (#1674)"},{"Id":"560016091","IsPullRequest":false,"CreatedAt":"2020-02-04T22:25:41","Actor":"ashahbazFV","Number":"1675","RawContent":null,"Title":"Dynamic module state not created with hot loading (preserveState set to true)","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/compassionate-hermann-msyze](https://codesandbox.io/s/compassionate-hermann-msyze)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a module with _vuex-module-decorators_\r\n2. Set the `dynamic` and `preserveState` flags to `true`\r\n    ```ts\r\n    @Module({ dynamic: true, name: 'SomeModule', store, preserveState: true })\r\n    ```\r\n3.  Attempt to access a property of the module, retrieved with `getModule` function to initialise the module from vuex-module-decorators\r\n     ```js\r\n    const someModule = getModule(SomeModule);\r\n    someModule.someProperty;\r\n    ```\r\n4.  Note `someProperty` will be `undefined`\r\n\r\n### What is expected?\r\nWhen installing a dynamic module and there is no state present, a default state should be created\r\n\r\n### What is actually happening?\r\nWhen installing a dynamic module and there is no state present, the module is not registered causing reads to the state for that module to fail.\r\n\r\n---\r\nNOTE: Was unable to reproduce the issue cleanly in CodeSandbox so the reproduction is not working, but the key aspects are still there.\r\n\r\nUpon investigation, it was discovered the [_vuex-module-decorators_](https://github.com/championswimmer/vuex-module-decorators) lib [passes their `preserveState` flag down](https://github.com/championswimmer/vuex-module-decorators/pull/102) to the vuex layer.  When the dynamic module is installed with the `installModule` function and the `hot` option is enabled, the current implementation skips creating any state for the new module.  This introduces side effects, where the module is registered in the vuex store but the state can't be retrieved if there was no state previously present.\r\n\r\nThe [_vuex-persist_](https://github.com/championswimmer/vuex-persist) lib is in use, but it is used to hydrate any past state down to _vuex_.  The store, while using the _vuex-persist_ lib, has the data initialised in the following order.\r\n\r\n1. The store is created by _vuex_ and any known modules are initialised with their default values.\r\n2. If there are data in the local storage within the browser, it is loaded into the store state replacing the default state data.\r\n3. Dynamic modules are added as they are needed.\r\n\r\nUpon modifying the `installModule` function, to check if the state of the new dynamic module exists, the problem is resolved.  Essentially, if the state of the module doesn't currently exist in the `parentState` within the store, then the default module state is created and registered.\r\n\r\nOne set of changes that fix this case are as follows.\r\n\r\nIn [`src/store.js`](https://github.com/vuejs/vuex/blob/dev/src/store.js) the following code seems to be the offending code.\r\n\r\n```js\r\n// set state\r\nif (!isRoot && !hot) {\r\n  const parentState = getNestedState(rootState, path.slice(0, -1))\r\n  const moduleName = path[path.length - 1]\r\n  store._withCommit(() => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (moduleName in parentState) {\r\n        console.warn(\r\n          `[vuex] state field \"${moduleName}\" was overridden by a module with the same name at \"${path.join('.')}\"`\r\n        )\r\n      }\r\n    }\r\n    Vue.set(parentState, moduleName, module.state)\r\n  })\r\n}\r\n```\r\n\r\nWhen modified, the default state is created when the `moduleName` isn't found in the `parentState`.\r\n\r\n```js\r\n// set state\r\nvar parentState = getNestedState(rootState, path.slice(0, -1));\r\nvar moduleName = path[path.length - 1];\r\nvar moduleStateExists = moduleName in parentState\r\nif (!isRoot && (!hot || !moduleStateExists )) {\r\n store._withCommit(function () {\r\n   {\r\n     if (moduleStateExists) {\r\n       console.warn(\r\n         (\"[vuex] state field \\\"\"   moduleName   \"\\\" was overridden by a module with the same name at \\\"\"   (path.join('.'))   \"\\\"\")\r\n       );\r\n     }\r\n   }\r\n   Vue.set(parentState, moduleName, module.state);\r\n });\r\n}\r\n```\r\n\r\nThere may be other ways to fix this issue, this is one potential solution that was discovered after some investigation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1675","RelatedDescription":"Open issue \"Dynamic module state not created with hot loading (preserveState set to true)\" (#1675)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-28T05:30:46.6000668Z","RunDurationInMilliseconds":1954}