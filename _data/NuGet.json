{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10786260404","Type":"PullRequestEvent","CreatedAt":"2019-11-05T02:47:12","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7675","RelatedDescription":"Merged pull request \"Update minClientVersion to 5.3.0\" (#7675) at NuGet/NuGetGallery","RelatedBody":"Fixes https://github.com/NuGet/NuGetGallery/issues/7674"},{"Id":"10785990896","Type":"PullRequestEvent","CreatedAt":"2019-11-05T01:44:08","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7675","RelatedDescription":"Opened pull request \"Update minClientVersion to 5.3.0\" (#7675) at NuGet/NuGetGallery","RelatedBody":"Fixes https://github.com/NuGet/NuGetGallery/issues/7674"},{"Id":"10785607382","Type":"IssuesEvent","CreatedAt":"2019-11-05T00:18:44","Actor":"yukiwongky","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7674","RelatedDescription":"Opened issue \"NuGet.org gallery doesn't support packages with minClientVersion = 5.0.0\" (#7674) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nCannot push to nuget.org gallery when the minClientVersion is 5.0.0\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a package with \r\n```\r\n<metadata minClientVersion=\"5.0.0\">\r\n```\r\n2. Attempt to push package via NuGet.exe or upload on the nuget.org manually.\r\n\r\n### Expected behavior\r\nAble to push package to nuget.org gallery with no error.\r\n\r\n### Error\r\n```\r\n##[error]The nuget command failed with exit code(1) and error(Response status code does not indicate success: 400 (This package requires version '5.0' of NuGet, which this gallery does not currently support. Please contact us if you have questions.).\r\n```"},{"Id":"10785357665","Type":"IssuesEvent","CreatedAt":"2019-11-04T23:25:36","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7656","RelatedDescription":"Closed issue \"Display warning if package version in URL does not exist\" (#7656) at NuGet/NuGetGallery","RelatedBody":"From memory, when you view an unlisted package, there's a warning that it's unlisted. However, when the URL is for a version that does not exist, there is no warning, it just \"silently\" shows the highest version.  I think gallery should show a warning message."},{"Id":"10785343074","Type":"PullRequestEvent","CreatedAt":"2019-11-04T23:22:41","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7673","RelatedDescription":"Merged pull request \"Fix nuspec for GitHubVulnerabilities2Db\" (#7673) at NuGet/NuGetGallery","RelatedBody":"When I made it, I copied the nuspec from NuGet.Jobs instead of the nuspec from AccountDeleter, so it had the wrong `bin` path.\r\n\r\nSucceeded with this fix at https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3212606"},{"Id":"10785335950","Type":"IssuesEvent","CreatedAt":"2019-11-04T23:21:18","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7630","RelatedDescription":"Closed issue \"[Customer support] Error when relisting packages using nuget.exe\" (#7630) at NuGet/NuGetGallery","RelatedBody":"@Kannan1015 commented on [Tue Jan 01 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246)\n\nGetting unknown command POST when relisting the unlisted package from nuget.exe. \n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 6f5691c1-f008-bbbf-a086-d9e665b5c332\n* Version Independent ID: f255cc99-1041-ca5c-d2e5-5981e450a236\n* Content: [Push and Delete, NuGet API](https://docs.microsoft.com/en-us/nuget/api/package-publish-resource#relist-a-package)\n* Content Source: [docs/api/package-publish-resource.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/api/package-publish-resource.md)\n* Product: **nuget**\n* GitHub Login: @joelverhagen\n* Microsoft Alias: **jver**\n\n---\n\n@loic-sharma commented on [Thu Jan 10 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246#issuecomment-453262152)\n\nWhat is your package source? What version of nuget.exe are you on?\n\n---\n\n@Kannan1015 commented on [Wed Feb 06 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246#issuecomment-461005798)\n\nPlease find the details.\r\n\r\nVersion: 4.9.2.5706\r\nPackage Name: All packages which I have an owner. \n\n---\n\n@stale[bot] commented on [Tue Oct 15 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246#issuecomment-542436136)\n\nThis issue has been automatically marked as stale and closed because it has not had recent activity. Thank you for your contributions.\n\n\n"},{"Id":"10785334516","Type":"PullRequestEvent","CreatedAt":"2019-11-04T23:21:01","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7667","RelatedDescription":"Merged pull request \"Removes the height differences when switching to the organization page\" (#7667) at NuGet/NuGetGallery","RelatedBody":"I was browsing through the NuGet UI and notices a UI glitch on the organization page:\r\n\r\n![before](https://user-images.githubusercontent.com/756703/67987512-e2c80d00-fc2d-11e9-8a84-ad7dad5efcb4.gif)\r\n\r\nThe \"divider\" is using the \"ms-font-xxl\", which enlarges the complete navigation bread crumb area. With a smaller version it keeps the same size as similar pages. \r\n\r\n![after](https://user-images.githubusercontent.com/756703/67987637-36d2f180-fc2e-11e9-8d4c-3d64e158701d.gif)\r\n\r\nBe aware:\r\nThere are (at least) two other pages with this xxl dividers, but they have some other controls on the same line, so... it would be more complicated to fix those.\r\n\r\n![image](https://user-images.githubusercontent.com/756703/67987679-510ccf80-fc2e-11e9-87a8-45fb66eb57cc.png)\r\n\r\n![image](https://user-images.githubusercontent.com/756703/67987717-67b32680-fc2e-11e9-9bce-b65277d9cf6e.png)\r\n\r\nHope this helps :)\r\n\r\n"},{"Id":"10785294639","Type":"PullRequestEvent","CreatedAt":"2019-11-04T23:13:07","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7673","RelatedDescription":"Opened pull request \"Fix nuspec for GitHubVulnerabilities2Db\" (#7673) at NuGet/NuGetGallery","RelatedBody":"When I made it, I copied the nuspec from NuGet.Jobs instead of the nuspec from AccountDeleter, so it had the wrong `bin` path.\r\n\r\nSucceeded with this fix at https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3212606"},{"Id":"10784112907","Type":"IssuesEvent","CreatedAt":"2019-11-04T20:17:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7640","RelatedDescription":"Closed issue \"Investigate recent exceptions thrown in Azure Search Service\" (#7640) at NuGet/NuGetGallery","RelatedBody":"A gallery circuit breaker fired presumably due to a malformed request. This sort of case should not effect circuit breaker.\r\n\r\nInvestigate recent exceptions/non success status codes in Azure Search and see what kind of changes need to be done."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10785515540","Type":"IssuesEvent","CreatedAt":"2019-11-04T23:59:00","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8790","RelatedDescription":"Reopened issue \"Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.)\" (#8790) at NuGet/Home","RelatedBody":"Nuget 5.3.1\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe from console)\r\n\r\nNuGet version 5.3.1:\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? Don't know\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. From console with admin rights:\r\n\r\nC:\\Users\\xxx\\Source\\Repos\\ConsoleApp11\\ConsoleApp2\\bin\\Release>\"c:\\users\\xxx\\appdata\\local\\microsoft\\visualstudio\\16.0_f557710cexp\\extensions\\xxx\\vsixtesttehnolog\\1.0\\NuGet\\nuget.exe\" push \"C:\\Users\\xxx\\Source\\Repos\\ConsoleApp11\\ConsoleApp2\\bin\\Release\\ConsoleApp2.1.0.1.nupkg\" -Source https://api.nuget.org/\r\nPushing ConsoleApp2.1.0.1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\nPUT https://www.nuget.org/api/v2/package/\r\nForbidden https://www.nuget.org/api/v2/package/ 980ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\nKey is Valid was generate 2 minutes before the push command from console with admin right. Alto I set the key with nuget.exe setApiKey and the same error\r\n..\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPushing ConsoleApp2.1.0.1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  Forbidden https://www.nuget.org/api/v2/package/ 980ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n\r\n### Sample Project\r\nIn code:\r\nProject that try to push the package is a  VSIX propect type that use a async function to push packages\r\n\r\n----------------\r\n            await Task.Run(() =>\r\n            {\r\n                Process cmd = new Process();\r\n                cmd.StartInfo.FileName = commandToExecute;\r\n                cmd.StartInfo.Arguments = arguments;\r\n                cmd.StartInfo.Verb = verb;\r\n                cmd.StartInfo.RedirectStandardInput = true;\r\n                cmd.StartInfo.RedirectStandardOutput = true;\r\n                cmd.StartInfo.CreateNoWindow = true;\r\n                cmd.StartInfo.UseShellExecute = false;\r\n                cmd.OutputDataReceived += Cmd_OutputDataReceived;\r\n                cmd.Start();\r\n                cmd.BeginOutputReadLine();\r\n                cmd.StandardInput.Flush();\r\n                cmd.StandardInput.Close();\r\n                cmd.WaitForExit();\r\n            }).ConfigureAwait(false);\r\n-----------------"},{"Id":"10784498353","Type":"IssuesEvent","CreatedAt":"2019-11-04T21:10:24","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8661","RelatedDescription":"Closed issue \"HttpRequestMessage gets reused multiple times which is not supported with the SocketHttpHandler\" (#8661) at NuGet/Home","RelatedBody":"The [`SocketHttpHandler` does not support reusing HttpRequestMessages multiple times](https://github.com/dotnet/corefx/issues/25163). This can lead to issues with authentification if the user provides the wrong credentials the first time, because the `Authorization` header gets [added](https://github.com/dotnet/corefx/blob/eff9fbf446468ca411bf5e0475916f316eea7223/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/AuthenticationHelper.cs#L164-L174) by the `SocketHttpHandler` and is resend on the next try. In combination with some servers (e.g. the GitHub NuGet feed) this results in an loop where each time the same credentials are being passed in because this server does not send a `Www-Authenticate` header if an `Authorization` header is provided and so the [new credentials are never added](https://github.com/dotnet/corefx/blob/eff9fbf446468ca411bf5e0475916f316eea7223/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/AuthenticationHelper.cs#L242).\r\n\r\nTo prevent this issue it is currently possible to disable the `SocketHttpHandler` which I have done here https://github.com/NuGetPackageExplorer/NuGetPackageExplorer/pull/841\r\n\r\n\r\nSee also https://github.com/dotnet/corefx/issues/25163#issuecomment-538009706\r\n\r\n### Sample Project\r\n\r\n```c#\r\n[Fact]\r\npublic async Task GitHubFeedTest()\r\n{\r\n    // uncomment this to fix the issue\r\n    //AppContext.SetSwitch(\"System.Net.Http.UseSocketsHttpHandler\", false);\r\n\r\n    HttpHandlerResourceV3.CredentialService = new Lazy<ICredentialService>(() => new CredentialService(\r\n        new AsyncLazy<IEnumerable<ICredentialProvider>>(\r\n            () => Task.FromResult<IEnumerable<ICredentialProvider>>(new ICredentialProvider[] { new TestCredentialProvider()})\r\n        ),\r\n        nonInteractive: false,\r\n        handlesDefaultCredentials: true\r\n    ));\r\n    // change `username` in this url to your user\r\n    var source = Repository.Factory.GetCoreV3(\"https://nuget.pkg.github.com/username/index.json\");\r\n    var sourceProvider = await source.GetResourceAsync<PackageSearchResource>();\r\n\r\n    await sourceProvider.SearchAsync(\"\", new SearchFilter(false), 0, 10, NullLogger.Instance, CancellationToken.None);\r\n}\r\nprivate class TestCredentialProvider : ICredentialProvider\r\n{\r\n    public string Id => \"test\";\r\n    public Task<CredentialResponse> GetAsync(Uri uri, IWebProxy proxy, CredentialRequestType type, string message, bool isRetry, bool nonInteractive, CancellationToken cancellationToken)\r\n    {\r\n        if (!isRetry)\r\n        {\r\n            return Task.FromResult(new CredentialResponse(new NetworkCredential(\"a\", \"b\"))); // intentional wrong user and password\r\n        }\r\n        return Task.FromResult(new CredentialResponse(new NetworkCredential(\"username\", \"token\"))); // change `username` and `token` to your github user and [token](https://github.com/settings/tokens) with package access\r\n    }\r\n}\r\n```"},{"Id":"10782790477","Type":"IssuesEvent","CreatedAt":"2019-11-04T17:22:02","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8790","RelatedDescription":"Closed issue \"Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.)\" (#8790) at NuGet/Home","RelatedBody":"Nuget 5.3.1\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe from console)\r\n\r\nNuGet version 5.3.1:\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? Don't know\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. From console with admin rights:\r\n\r\nC:\\Users\\xxx\\Source\\Repos\\ConsoleApp11\\ConsoleApp2\\bin\\Release>\"c:\\users\\xxx\\appdata\\local\\microsoft\\visualstudio\\16.0_f557710cexp\\extensions\\xxx\\vsixtesttehnolog\\1.0\\NuGet\\nuget.exe\" push \"C:\\Users\\xxx\\Source\\Repos\\ConsoleApp11\\ConsoleApp2\\bin\\Release\\ConsoleApp2.1.0.1.nupkg\" -Source https://api.nuget.org/\r\nPushing ConsoleApp2.1.0.1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\nPUT https://www.nuget.org/api/v2/package/\r\nForbidden https://www.nuget.org/api/v2/package/ 980ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\nKey is Valid was generate 2 minutes before the push command from console with admin right. Alto I set the key with nuget.exe setApiKey and the same error\r\n..\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPushing ConsoleApp2.1.0.1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  Forbidden https://www.nuget.org/api/v2/package/ 980ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n\r\n### Sample Project\r\nIn code:\r\nProject that try to push the package is a  VSIX propect type that use a async function to push packages\r\n\r\n----------------\r\n            await Task.Run(() =>\r\n            {\r\n                Process cmd = new Process();\r\n                cmd.StartInfo.FileName = commandToExecute;\r\n                cmd.StartInfo.Arguments = arguments;\r\n                cmd.StartInfo.Verb = verb;\r\n                cmd.StartInfo.RedirectStandardInput = true;\r\n                cmd.StartInfo.RedirectStandardOutput = true;\r\n                cmd.StartInfo.CreateNoWindow = true;\r\n                cmd.StartInfo.UseShellExecute = false;\r\n                cmd.OutputDataReceived += Cmd_OutputDataReceived;\r\n                cmd.Start();\r\n                cmd.BeginOutputReadLine();\r\n                cmd.StandardInput.Flush();\r\n                cmd.StandardInput.Close();\r\n                cmd.WaitForExit();\r\n            }).ConfigureAwait(false);\r\n-----------------"},{"Id":"10781574117","Type":"IssuesEvent","CreatedAt":"2019-11-04T15:08:50","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8791","RelatedDescription":"Opened issue \"Adopt MSBuild Static Graph\" (#8791) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nIn MSBuild 16.0, a new [Static Graph API](https://github.com/Microsoft/msbuild/blob/master/documentation/specs/static-graph.md) was added for parsing project trees in a more efficient way.  This new API also can express dependencies so that callers can build a graph that represents the tree.  NuGet should adopt this new API to replace the way projects are being evaluated via target execution which would reduce command-line restores dramatically.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Any\r\n\r\nNuGet version (x.x.x.xxx): Any\r\n\r\ndotnet.exe --version (if appropriate): Any\r\n\r\nVS version (if appropriate): Any\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Any\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. From the command-line, restore a large tree of projects.\r\n\r\nThe restore takes around 30 seconds for 700 projects.  With Static Graph and other perf improvements, it takes less than 6 seconds.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10776023123","Type":"IssuesEvent","CreatedAt":"2019-11-03T18:01:45","Actor":"lnicolae","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8790","RelatedDescription":"Opened issue \"Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.)\" (#8790) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\nC:\\Users\\xxx\\Source\\Repos\\ConsoleApp11\\ConsoleApp2\\bin\\Release>\"c:\\users\\xxx\\appdata\\local\\microsoft\\visualstudio\\16.0_f557710cexp\\extensions\\xxx\\vsixtesttehnolog\\1.0\\NuGet\\nuget.exe\" push \"C:\\Users\\xxx\\Source\\Repos\\ConsoleApp11\\ConsoleApp2\\bin\\Release\\ConsoleApp2.1.0.1.nupkg\" -Source https://api.nuget.org/\r\nPushing ConsoleApp2.1.0.1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\nPUT https://www.nuget.org/api/v2/package/\r\nForbidden https://www.nuget.org/api/v2/package/ 980ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\nKey is Valid was generate 2 minutes before the push command from console with admin right. Alto I set the key with nuget.exe setApiKey and the same error\r\n..\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPushing ConsoleApp2.1.0.1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  Forbidden https://www.nuget.org/api/v2/package/ 980ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n\r\n### Sample Project\r\nProjct that try to push the package is a  VSIX propect type that use a async function to push packages\r\n\r\n----------------\r\n            await Task.Run(() =>\r\n            {\r\n                Process cmd = new Process();\r\n                cmd.StartInfo.FileName = commandToExecute;\r\n                cmd.StartInfo.Arguments = arguments;\r\n                cmd.StartInfo.Verb = verb;\r\n                cmd.StartInfo.RedirectStandardInput = true;\r\n                cmd.StartInfo.RedirectStandardOutput = true;\r\n                cmd.StartInfo.CreateNoWindow = true;\r\n                cmd.StartInfo.UseShellExecute = false;\r\n                cmd.OutputDataReceived += Cmd_OutputDataReceived;\r\n                cmd.Start();\r\n                cmd.BeginOutputReadLine();\r\n                cmd.StandardInput.Flush();\r\n                cmd.StandardInput.Close();\r\n                cmd.WaitForExit();\r\n            }).ConfigureAwait(false);\r\n-----------------\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10770305829","Type":"IssuesEvent","CreatedAt":"2019-11-01T23:42:42","Actor":"hugener","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8789","RelatedDescription":"Opened issue \"NuGet.Configuration dependency (System.Security.Cryptography.ProtectedData) is not copied to output directory\" (#8789) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.Configuration\r\n\r\nNuGet version (x.x.x.xxx): 5.3.1\r\n\r\ndotnet.exe --version: 3.0.100\r\n\r\nVS version: 16.3.1\r\n\r\nOS version: Win 10 1903\r\n\r\nWorked before? If so, with which NuGet version: Not that I know\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new .netstandard2.0 lib\r\n\r\n2. Reference NuGet.Configuration\r\n\r\n3. Add the following MsBuild properties to the csproj:\r\n<GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n<IsTool>True</IsTool>\r\n<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>\r\n\r\nSystem.Security.Cryptography.ProtectedData is not included in output directory, even if it is listed as a dependency. \r\nAs a result I get a FileNotFoundException when trying to load ApiKeys from NuGet.config.\r\n"},{"Id":"10769744636","Type":"IssuesEvent","CreatedAt":"2019-11-01T21:33:35","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8772","RelatedDescription":"Closed issue \"Icon won't show in Visual Studio\" (#8772) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.3.1.6268\r\n\r\nVS version: 16.3.6\r\n\r\nOS version: win10 v1903 (18362.449)\r\n\r\nWorked before?: Don't know. First time making NuGet-package.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Run `nuget spec`\r\n\r\n2. Add `<icon>icon.png</icon>` to the metadata tag in the nuspec.\r\n\r\n3. Add icon.png to the working folder. (icon taken from [PackageIconNuspecExample](https://github.com/NuGet/Samples/tree/master/PackageIconNuspecExample))\r\n\r\n4. Run `nuget pack`\r\n\r\n5. Add generated package to local repository\r\n\r\n6. Open **Visual Studio** => **NuGet Package Manager**\r\n\r\n7. Change **Package Source** to local repository.\r\n\r\n8. Package has the default, fallback icon - Not the packed icon.\r\n\r\n### Sample Project\r\n[SampleNuget.zip](https://github.com/NuGet/Home/files/3789085/SampleNuget.zip)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"},{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-11-05T05:30:46.2329918Z","RunDurationInMilliseconds":2991}