{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7455390801","Type":"IssuesEvent","CreatedAt":"2018-03-29T18:00:29","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2132","RelatedDescription":"Closed issue \"IOS Url Schemes not working on safari\" (#2132) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[prefs://root=General&path=ManagedConfigurationList](prefs://root=General&path=ManagedConfigurationList)\r\n\r\n### Steps to reproduce\r\n1. Put pref href prefs://root=General&path=ManagedConfigurationList\r\n2. a href=\"prefs://root=General&path=ManagedConfigurationList\"\r\n3. click anchor tag\r\n4. Safari invalid address \r\n\r\n### What is expected?\r\nMust open configuration manager / settings\r\n\r\n### What is actually happening?\r\nSafari invalid address\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7451919875","Type":"IssuesEvent","CreatedAt":"2018-03-29T06:07:11","Actor":"rodrigowbazevedo","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2133","RelatedDescription":"Opened issue \"Handle next(new Error)\" (#2133) at vuejs/vue-router","RelatedBody":"I have a `beforeRouteEnter` in my component that can return a `next(new Error)`, and I have two ways to access this route.\r\n\r\nThe first is from another component using: \r\n```javascript\r\nthis.$router.push(\r\n    `/route/${id}`,\r\n    complete => {\r\n        // Do somenthing\r\n    },\r\n    error => {\r\n        // Handle Error\r\n    }\r\n);\r\n```\r\n\r\nThe second is accessing the route direct from the browser, \r\n in this case I have only one way to handle the error, with the global `router.onError(error => {})`.\r\n\r\nAnd what I want is, if the error occurs coming from the other component I'll show a message error at the component, and if it occurs coming direct from the browser I want to redirect him to another route.\r\nBut the problem is, the global `router.onError(error => {})`  is called  first, so if I redirect him to another route I can't handle the error at my other component, and in the global `onError` I don't even receive at leat a `from` route object.\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7457024631","Type":"PullRequestEvent","CreatedAt":"2018-03-30T01:17:43","Actor":"bichikim","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1210","RelatedDescription":null,"RelatedBody":"  - all throwing error should be starting with lower case"},{"Id":"7457014084","Type":"PullRequestEvent","CreatedAt":"2018-03-30T01:13:09","Actor":"bichikim","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/pull/1210","RelatedDescription":"Closed pull request \"- fix throwing error style\" (#1210) at vuejs/vuex","RelatedBody":"  - all throwing error should be starting with lower case"},{"Id":"7457012393","Type":"PullRequestEvent","CreatedAt":"2018-03-30T01:12:21","Actor":"bichikim","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1210","RelatedDescription":"Opened pull request \"- fix throwing error style\" (#1210) at vuejs/vuex","RelatedBody":"  - all throwing error should be starting with lower case"},{"Id":"7456327734","Type":"PullRequestEvent","CreatedAt":"2018-03-29T21:33:06","Actor":"gitlab-winnie","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1209","RelatedDescription":"Opened pull request \"Add spies as an alternative to testAction helper\" (#1209) at vuejs/vuex","RelatedBody":""},{"Id":"7455798624","Type":"PullRequestEvent","CreatedAt":"2018-03-29T19:35:29","Actor":"iamphill","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1208","RelatedDescription":"Opened pull request \"docs: Update docs of testAction helper\" (#1208) at vuejs/vuex","RelatedBody":"This makes it read & produce the correct error messages\r\n\r\nIt now reads as `expect(actual).to.equal(expected)`"},{"Id":"7455047111","Type":"PullRequestEvent","CreatedAt":"2018-03-29T16:49:02","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/pull/1207","RelatedDescription":"Closed pull request \"for reading process.env in safe way\" (#1207) at vuejs/vuex","RelatedBody":"I cannot pass \"Store should not call root state function twice\"\r\nplease help me \r\nprocess have to be  protected by this way\r\nit is also for improving running speed slightly"}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"309882181","IsPullRequest":false,"CreatedAt":"2018-03-29T19:51:03","Actor":"shameleo","Number":"7928","RawContent":null,"Title":"<select> is broken when options values are bound to Dates","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/azpxdt3a/1/](https://jsfiddle.net/azpxdt3a/1/)\r\n\r\n### Steps to reproduce\r\nTry select any item except first one.\r\n\r\n### What is expected?\r\nItem selected.\r\n\r\n### What is actually happening?\r\n<select> always shows first item. Once any item except first is selected, it's no more possible to select first one (actually, it's possible, as <select> shows correct selected item after the same item was selected twice in a row)\r\n\r\n---\r\nIt seems the bug was introduced in ver 2.4.2. Does not reproduced with objects instead of dates: https://jsfiddle.net/pr847ek7/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7928","RelatedDescription":"Open issue \"<select> is broken when options values are bound to Dates\" (#7928)"},{"Id":"309756244","IsPullRequest":false,"CreatedAt":"2018-03-29T18:01:22","Actor":"xiaofengsha","Number":"7925","RawContent":null,"Title":"can vuejs support \"Fragments\" tag, just like react","State":"closed","Body":"### What problem does this feature solve?\r\ncan vuejs support \"Fragments\" tag, just like react\r\n\r\n### What does the proposed API look like?\r\n`\r\n<template>\r\n        <Fragment v-for=\"item in lst\"  key={item.id}>\r\n          <dt>{item.term}</dt>\r\n          <dd>{item.description}</dd>\r\n        <Fragment >\r\n<template>\r\n`\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7925","RelatedDescription":"Closed issue \"can vuejs support \"Fragments\" tag, just like react\" (#7925)"},{"Id":"309796085","IsPullRequest":true,"CreatedAt":"2018-03-29T15:16:30","Actor":"wangyi7099","Number":"7927","RawContent":null,"Title":"Update transition-group.js","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nOnly force removed pass when removed children's length > 0","Url":"https://github.com/vuejs/vue/pull/7927","RelatedDescription":"Open PR \"Update transition-group.js\" (#7927)"},{"Id":"309761493","IsPullRequest":true,"CreatedAt":"2018-03-29T13:47:41","Actor":"hirokiosame","Number":"7926","RawContent":null,"Title":"fix(provide): Merges symbol provides","State":"open","Body":"Fixes merging multiple provides using Symbols\r\n\r\nfix #7923\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThe test I added only passes in an environment with symbols (since it's handling a case that fails with symbols). This fails when the test is executed with Phantom, since it doesn't have Symbol support natively or with a polyfill, but passes in Chrome.\r\n\r\nI can add babel-polyfill but seemed excessive for one test. Wanted to know how to move forward with that one before making any drastic changes to making it work.","Url":"https://github.com/vuejs/vue/pull/7926","RelatedDescription":"Open PR \"fix(provide): Merges symbol provides\" (#7926)"},{"Id":"309701010","IsPullRequest":false,"CreatedAt":"2018-03-29T10:24:02","Actor":"SassNinja","Number":"7924","RawContent":null,"Title":"root opts attributes support","State":"open","Body":"### What problem does this feature solve?\r\nThe desired opts feature should offer the possibility to provide data from the markup (mostly from backend) to the vue instance.\r\nSo you can pass options/params from outside the vue scope. Example use case:\r\nhttps://forum.vuejs.org/t/passing-props-to-root-instances-in-2-0/244\r\n\r\nRight now this requires custom helpers/code to pipe the data through to the component.\r\nMuch better would be a more comfortable way similar the way riot does it with opts\r\nhttp://riotjs.com/api/#mounting\r\n\r\n\r\n### What does the proposed API look like?\r\nSince the instance root is not a custom tag (compared to riot) I can imagine using prefixed attributes e.g. `data-opt-[NAME]`\r\nSo the root may look like this:\r\n```html\r\n<div id=\"myRoot\" data-opt-firstname=\"John\" data-opt-lastname=\"Smith\"></div>\r\n```\r\nand within the template you can access it as\r\n```\r\n<template>\r\n    <span>Hello {{ opts.firstname }} {{ opts.lastname }}</span>\r\n</template>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7924","RelatedDescription":"Open issue \"root opts attributes support\" (#7924)"},{"Id":"309692022","IsPullRequest":false,"CreatedAt":"2018-03-29T09:55:36","Actor":"hirokiosame","Number":"7923","RawContent":null,"Title":"Mixin provide with Symbols don't get merged properly","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hirokiosame/38nzxq6c/26/](https://jsfiddle.net/hirokiosame/38nzxq6c/26/)\r\n\r\n### Steps to reproduce\r\nRun the code. The injected result will show `[undefined, \"bar\"]` in the console.\r\n\r\n### What is expected?\r\nFor the merging to work properly. The expected result is `['foo', 'bar']`, which is what you'll see when you convert `keyA` and `keyB` into strings.\r\n\r\n### What is actually happening?\r\nMerging fails:  `[undefined, \"bar\"]`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7923","RelatedDescription":"Open issue \"Mixin provide with Symbols don't get merged properly\" (#7923)"},{"Id":"309638032","IsPullRequest":false,"CreatedAt":"2018-03-29T08:31:46","Actor":"McKabue","Number":"7921","RawContent":null,"Title":"Vuejs deferred component misbehaves","State":"closed","Body":"### Version\r\n2.2.1\r\n\r\n### Reproduction link\r\n[https://stackoverflow.com/questions/49544809/vuejs-deferred-component-misbehaves](https://stackoverflow.com/questions/49544809/vuejs-deferred-component-misbehaves)\r\n\r\n### Steps to reproduce\r\nhere are two jsfiddles:\r\n\r\n## [working as expected][1]\r\n\r\n     Vue.component('create', Vue.extend({\r\n            template: '<h1>HEADER</h1>'\r\n        }));\r\n\r\n    Vue.component('component-loader', function (resolve) {\r\n            var model = Vue.extend({\r\n                props: ['name'],\r\n                watch: {\r\n                    name: function (newValue, oldValue) {\r\n                       alert(newValue);\r\n                    }\r\n                },\r\n                render: function (createElement) {\r\n                    var self = this;\r\n                    alert(self.name);\r\n                    var m = function (resolve) {\r\n                            resolve({\r\n                                template: '<component is=\"'   self.name   '\"></component>'\r\n                            });\r\n                    };\r\n\r\n                    return createElement(m);\r\n                }\r\n            });\r\n            resolve(model);\r\n        });\r\n        \r\n        \r\n        var viewModel = new Vue({});\r\n\r\n        viewModel.$mount('#app');\r\n\r\n\r\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/vue/2.2.1/vue.js\"></script>\r\n\r\n    <div id=\"app\">\r\n    <component-loader name=\"create\"></component-loader>\r\n    </div>\r\n\r\n\r\n\r\n## [Not working][2]\r\nthis fiddle will fire after every **5 seconds**. it does also not render the component as the first one\r\n\r\n     Vue.component('create', Vue.extend({\r\n            template: '<h1>HEADER</h1>'\r\n        }));\r\n\r\n    Vue.component('component-loader', function (loaderResolve) {\r\n            var model = Vue.extend({\r\n                props: ['name'],\r\n                watch: {\r\n                    name: function (newValue, oldValue) {\r\n                       alert(newValue);\r\n                    }\r\n                },\r\n                render: function (createElement) {\r\n                    var self = this;\r\n                    alert(self.name);\r\n                    var m = function (resolve) {\r\n                        setTimeout(function () {\r\n                            resolve({\r\n                                template: '<component is=\"'   self.name   '\"></component>'\r\n                            });\r\n                        }, 5000);\r\n                    };\r\n\r\n                    return createElement(m);\r\n                }\r\n            });\r\n            loaderResolve(model);\r\n        });\r\n        \r\n        \r\n        var viewModel = new Vue({});\r\n\r\n        viewModel.$mount('#app');\r\n\r\n\r\n\r\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/vue/2.2.1/vue.js\"></script>\r\n\r\n    <div id=\"app\">\r\n    <component-loader name=\"create\"></component-loader>\r\n    </div>\r\n\r\n\r\n\r\nwhat could be the problem?\r\n\r\n  [1]: https://jsfiddle.net/mckabue/L90p565e/7/\r\n  [2]: https://jsfiddle.net/dL4puszo/2/\r\n\r\n### What is expected?\r\nreturn a resolved component\r\n\r\n### What is actually happening?\r\nthis fires the main(parent) component infinitely  after resolving child component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7921","RelatedDescription":"Closed issue \"Vuejs deferred component misbehaves\" (#7921)"},{"Id":"309655880","IsPullRequest":false,"CreatedAt":"2018-03-29T08:07:31","Actor":"Loilo","Number":"7922","RawContent":null,"Title":"Feature Request: Pass Vue Instance as First Parameter to Computed Properties","State":"closed","Body":"### What problem does this feature solve?\r\nI absolutely cannot imagine that nobody has brought this up before, but search hasn't delivered anything, so here's my take on the topic:\r\n\r\nFirst of all, I love the concept of Computed Properties. So much. ❤️\r\n\r\nHowever, there's one implementation detail in them that bugs me from time to time:\r\n\r\nComputed Properties are often pretty simple calculations or string concatenations, and I find it tedious to have them always cover up three lines of code. (One for the property name, one for the implementation, one for the closing curly brace. You can of course put that in one line, but it usually makes the implementation looks less obvious / rather confusing.)\r\n\r\nArrow functions are an elegant solution to those simple mappings, but, as we all know, they're not applicable to Computed Properties because of their different `this` context.\r\n\r\n### What does the proposed API look like?\r\nSince Computed Properties currently don't take any arguments, it would be relatively cheap (regarding implementation effort and possible BC changes) to not only bind their `this` context to the according Vue instance, but also pass it as a parameter.\r\n\r\n#### Basic Example\r\nIt would allow for elegant solutions like this:\r\n```javascript\r\nnew Vue({\r\n  data: {\r\n    firstName: 'John',\r\n    lastName: 'Doe'\r\n  },\r\n  computed: {\r\n    fullName: vm => `${vm.firstName} ${vm.lastName}`\r\n  }\r\n})\r\n```\r\n\r\nOr even:\r\n```javascript\r\nfullName: ({ firstName, lastName }) => `${firstName} ${lastName}`\r\n```\r\n\r\n#### Getters / Setters\r\nThe only point where I could see this API getting slightly ugly are Computed Property setters, as they already receive a parameter and would have to take the `vm` as the second argument (to avoid breaking changes).\r\n\r\nGetters / setters could be omitted from this topic entirely (i.e. staying unchanged) as they are usually not that concise anyway. However, for consistency I'd propose to have them receive the Vue instance as well, in the setter as the second argument:\r\n\r\n```javascript\r\nfullName: {\r\n  get: vm => `${vm.firstName} ${vm.lastName}`,\r\n  set: (newValue, vm) => {\r\n    // Not of the greatest value here, we could just use a regular function and `this`\r\n    const names = newValue.split(' ')\r\n    vm.firstName = names[0]\r\n    vm.lastName = names[names.length - 1]\r\n  }\r\n}\r\n```\r\n\r\n#### Conclusion\r\nAs far as I can tell, this whole approach should not break any existing code. \r\n\r\nUnfortunately it's not a feature available for userland implementation, that's why I felt it would be appropriate for a feature request.\r\n\r\nI'd love to hear your thoughts about this. 🙂 \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7922","RelatedDescription":"Closed issue \"Feature Request: Pass Vue Instance as First Parameter to Computed Properties\" (#7922)"},{"Id":"309632853","IsPullRequest":false,"CreatedAt":"2018-03-29T06:21:13","Actor":"T-OneSoul","Number":"7920","RawContent":null,"Title":"TypeError: Cannot create property 'placement' on string 'popperOptions'","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\nhow do save this problem? can you help me and save this problem?\r\n\r\n- \r\n\r\n1. \r\n\r\n- \r\n\r\n- ","Url":"https://github.com/vuejs/vue/issues/7920","RelatedDescription":"Closed issue \"TypeError: Cannot create property 'placement' on string 'popperOptions'\" (#7920)"},{"Id":"309631615","IsPullRequest":false,"CreatedAt":"2018-03-29T06:14:18","Actor":"T-OneSoul","Number":"7919","RawContent":null,"Title":"TypeError: Cannot create property 'placement' on string 'popperOptions'","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/issuecommit\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\nhow do save this problem? can you help me and save this problem?","Url":"https://github.com/vuejs/vue/issues/7919","RelatedDescription":"Closed issue \"TypeError: Cannot create property 'placement' on string 'popperOptions'\" (#7919)"},{"Id":"309617386","IsPullRequest":true,"CreatedAt":"2018-03-29T04:39:29","Actor":"ktsn","Number":"7918","RawContent":null,"Title":"feat(types): add vue-template-compiler types","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nI just remembered I wrote `vue-template-compiler` typings for my own project when seeing [`component-compiler-utils` types](https://github.com/vuejs/component-compiler-utils/blob/master/lib/types.ts) 😄 \r\nIt would be convenient for anyone who writes static analysis / customized compiler / build tools in TypeScript.","Url":"https://github.com/vuejs/vue/pull/7918","RelatedDescription":"Open PR \"feat(types): add vue-template-compiler types\" (#7918)"},{"Id":"309598317","IsPullRequest":false,"CreatedAt":"2018-03-29T02:39:57","Actor":"vtejuf","Number":"7917","RawContent":null,"Title":"after emit a event registe via $once, _events property still keep that as a empty array","State":"open","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/vtejuf/project/editor/ZeYVKx](https://codepen.io/vtejuf/project/editor/ZeYVKx)\r\n\r\n### Steps to reproduce\r\nregiste 10 event via $once , then $emit those event\r\n\r\n### What is expected?\r\nthis._events property empty\r\n\r\n### What is actually happening?\r\nthis._events keep those events as empty array\r\n\r\n---\r\nis that deliberately? if it is & why? thx a lot\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7917","RelatedDescription":"Open issue \"after emit a event registe via $once, _events property still keep that as a empty array\" (#7917)"},{"Id":"309547358","IsPullRequest":false,"CreatedAt":"2018-03-28T21:59:51","Actor":"McKabue","Number":"7916","RawContent":null,"Title":"Vuejs deffered component misbehaves","State":"closed","Body":"i have created a component loader, between it gets a deferred component, it re-renders infinitely: here are two jsfiddles:\r\n\r\n## [working as expected][1]\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-js -->\r\n\r\n     Vue.component('create', Vue.extend({\r\n            template: '<h1>HEADER</h1>'\r\n        }));\r\n\r\n    Vue.component('component-loader', function (resolve) {\r\n            var model = Vue.extend({\r\n                props: ['name'],\r\n                watch: {\r\n                    name: function (newValue, oldValue) {\r\n                       alert(newValue);\r\n                    }\r\n                },\r\n                render: function (createElement) {\r\n                    var self = this;\r\n                    alert(self.name);\r\n                    var m = function (resolve) {\r\n                            resolve({\r\n                                template: '<component is=\"' + self.name + '\"></component>'\r\n                            });\r\n                    };\r\n\r\n                    return createElement(m);\r\n                }\r\n            });\r\n            resolve(model);\r\n        });\r\n        \r\n        \r\n        var viewModel = new Vue({});\r\n\r\n        viewModel.$mount('#app');\r\n\r\n<!-- language: lang-html -->\r\n\r\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/vue/2.2.1/vue.js\"></script>\r\n\r\n    <div id=\"app\">\r\n    <component-loader name=\"create\"></component-loader>\r\n    </div>\r\n\r\n<!-- end snippet -->\r\n\r\n## [Not working][2]\r\nthis fiddle will fire after every **5 seconds**. it does also not render the component as the first one\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-js -->\r\n\r\n     Vue.component('create', Vue.extend({\r\n            template: '<h1>HEADER</h1>'\r\n        }));\r\n\r\n    Vue.component('component-loader', function (resolve) {\r\n            var model = Vue.extend({\r\n                props: ['name'],\r\n                watch: {\r\n                    name: function (newValue, oldValue) {\r\n                       alert(newValue);\r\n                    }\r\n                },\r\n                render: function (createElement) {\r\n                    var self = this;\r\n                    alert(self.name);\r\n                    var m = function (resolve) {\r\n                        setTimeout(function () {\r\n                            resolve({\r\n                                template: '<component is=\"' + self.name + '\"></component>'\r\n                            });\r\n                        }, 5000);\r\n                    };\r\n\r\n                    return createElement(m);\r\n                }\r\n            });\r\n            resolve(model);\r\n        });\r\n        \r\n        \r\n        var viewModel = new Vue({});\r\n\r\n        viewModel.$mount('#app');\r\n\r\n<!-- language: lang-html -->\r\n\r\n\r\n    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/vue/2.2.1/vue.js\"></script>\r\n\r\n    <div id=\"app\">\r\n    <component-loader name=\"create\"></component-loader>\r\n    </div>\r\n\r\n<!-- end snippet -->\r\n\r\nwhat could be the problem? the component loader creates a dynamic component and renders it by name...\r\n\r\n  [1]: https://jsfiddle.net/mckabue/L90p565e/5/\r\n  [2]: https://jsfiddle.net/mckabue/L90p565e/6/","Url":"https://github.com/vuejs/vue/issues/7916","RelatedDescription":"Closed issue \"Vuejs deffered component misbehaves\" (#7916)"},{"Id":"309520605","IsPullRequest":false,"CreatedAt":"2018-03-28T20:31:58","Actor":"fenduru","Number":"7915","RawContent":null,"Title":"Prop changes do not always trigger $watch in IE11","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/242700/](https://jsfiddle.net/50wL7mdz/242700/)\r\n\r\n### Steps to reproduce\r\nOpen JSFiddle in IE11, and scroll the scrollbar up and down rapidly. Observe the console warns that occur when a prop update was missed\r\n\r\n### What is expected?\r\nThe `$watch` should be fired for every scroll event\r\n\r\n### What is actually happening?\r\nVue is handling subsequent scroll events before the watch is firing. In my use case we are integrating with another system, and it is important that we don't skip events.\r\n\r\n---\r\nThis change is reproducible in versions >= 2.4.3 (you can change the version to 2.4.2 in the reproducer to see the correct behavior). Looking at the change log, it seems like [this commit](https://github.com/vuejs/vue/commit/844a540c647dfa93dc714540953524830dd3475a) is a likely culprit.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7915","RelatedDescription":"Open issue \"Prop changes do not always trigger $watch in IE11\" (#7915)"},{"Id":"309464319","IsPullRequest":false,"CreatedAt":"2018-03-28T17:41:55","Actor":"pearofducks","Number":"7914","RawContent":null,"Title":"v-bind=\"$attrs\" and problems with \"value\" attribute for multi-checkboxes","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/aYqoYL?editors=1010](https://codepen.io/anon/pen/aYqoYL?editors=1010)\r\n\r\n### Steps to reproduce\r\n- Check the checkbox\r\n- See that the value is set to \"null\" even though the input element has its value (correctly) set to \"foo\"\r\n\r\n### What is expected?\r\n- The value passed through \"$attrs\" should be the checkbox's value used\r\n\r\n### What is actually happening?\r\n- Null is set\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7914","RelatedDescription":"Open issue \"v-bind=\"$attrs\" and problems with \"value\" attribute for multi-checkboxes\" (#7914)"},{"Id":"309132113","IsPullRequest":false,"CreatedAt":"2018-03-28T16:34:12","Actor":"alexgrozav","Number":"7908","RawContent":null,"Title":"Cannot use slots on component with name Textarea","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/238481/](https://jsfiddle.net/50wL7mdz/238481/)\r\n\r\n### Steps to reproduce\r\nName component `Textarea` and add slots.\r\n\r\n### What is expected?\r\nWould expect the component to be rendered normally, with the slots distributed properly.\r\n\r\n### What is actually happening?\r\nThe textarea itself is rendered without any slots other than the default one.\r\n\r\n---\r\nI'm building a Vue UI/UX framework at https://github.com/inkline/inkline and I've run into this bug. Can you guys let me know if you can fix it so I won't have to prefix my framework components? Thank you!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7908","RelatedDescription":"Closed issue \"Cannot use slots on component with name Textarea\" (#7908)"},{"Id":"309319335","IsPullRequest":false,"CreatedAt":"2018-03-28T14:57:04","Actor":"nathenchan","Number":"7911","RawContent":null,"Title":"关于vue-server-renderer进行混合clientManifest时出现错误，修改源码可以正常混合","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://](http://www.nathendev.com)\r\n\r\n### Steps to reproduce\r\nconst { createBundleRenderer } = require('vue-server-renderer')\r\nconst path = require('path')\r\nconst server = require('express')()\r\nconst serverBundle = path.join(__dirname,'./dist/vue-ssr-server-bundle.json')\r\n\r\n\r\nconst renderer = createBundleRenderer(serverBundle, {\r\n  runInNewContext: false, // 推荐\r\n  template: require('fs').readFileSync('./views/ssr2/index.html', 'utf-8'),\r\n  clientManifest: path.join(__dirname,'./dist/vue-ssr-client-manifest.json')\r\n})\r\n\r\n\r\n\r\nserver.get('*', (req, res) => {\r\n  const context = { url: req.url }\r\n  renderer.renderToString(context, (err, html) => {\r\n    res.send(html)\r\n  })\r\n}).listen(8899)\r\n\r\n### What is expected?\r\n不使用clientManifest时，不会报错，但是进行clientManifest混合时会有问题，另外：server端和client端的打包都是正常输出文件的\r\n\r\n### What is actually happening?\r\nxxx/node_modules/.npminstall/vue-server-renderer/2.5.16/vue-server-renderer/build.js:7974\r\n    this.publicPath = clientManifest.publicPath.replace(/\\/$/, '');\r\n\r\n---\r\n修改一句代码可以解决，但具体发生原因不明，在build.js 的7971行左右\r\n//var clientManifest = this.clientManifest = options.clientManifest;\r\nvar clientManifest = this.clientManifest = clientManifest = JSON.parse(require('fs').readFileSync(options.clientManifest, 'utf-8'));\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7911","RelatedDescription":"Closed issue \"关于vue-server-renderer进行混合clientManifest时出现错误，修改源码可以正常混合\" (#7911)"},{"Id":"309352410","IsPullRequest":false,"CreatedAt":"2018-03-28T14:56:33","Actor":"Remeic","Number":"7912","RawContent":null,"Title":"setData() doesn't work correctly","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/Remeic/vue-highlighter/tree/tests](https://github.com/Remeic/vue-highlighter/tree/tests)\r\n\r\n### Steps to reproduce\r\nClone repository, checkout on tests branch and run yarn test\r\n\r\n### What is expected?\r\nwrapper.setData() change data of App correctly and directive can update the highlighted word\r\n\r\n### What is actually happening?\r\nsetData doesn't update correctly the data and console print \"Cannot read property 'split' of undefined\", seems wrapper is not mounted, if i remove data from App.vue SFC error changes and it is \"Avoid adding reactive properties to a Vue instance or its root $data at runtime - declare it upfront in the data option.\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7912","RelatedDescription":"Closed issue \"setData() doesn't work correctly\" (#7912)"},{"Id":"309386121","IsPullRequest":false,"CreatedAt":"2018-03-28T14:15:15","Actor":"Kelin2025","Number":"7913","RawContent":null,"Title":"Unexpected \"duplicate presence of slot\"","State":"open","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/mzvkppmvo8](https://codesandbox.io/s/mzvkppmvo8)\r\n\r\n### Steps to reproduce\r\n1. I created component with scoped slot (AppSwitcher.vue)\r\n2. Then I use it in another component with their own slot (HelloWorld.vue with slot \"subtext\")\r\n3. Add some element to slot (div in App.vue) \r\n\r\n### What is expected?\r\nIt should work without errors\r\n\r\n### What is actually happening?\r\nChanges in AppSwitcher.vue caus \"Duplicate presence of slot \"subtext\" found in the same render tree\" error but there are no duplicates.\r\n\r\n---\r\nAlso, adding `slot-scope` to div in App.vue solves problem and no error there, but why it happens without `slot-scope`?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7913","RelatedDescription":"Open issue \"Unexpected \"duplicate presence of slot\"\" (#7913)"},{"Id":"309305130","IsPullRequest":false,"CreatedAt":"2018-03-28T10:53:37","Actor":"viettranme","Number":"7910","RawContent":null,"Title":"Watch callback not triggered for '$props' of router-view","State":"closed","Body":"### Version\r\nLatest\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/clickemdianh/z0ofevy6/43/](https://jsfiddle.net/clickemdianh/z0ofevy6/43/)\r\n\r\n### Steps to reproduce\r\n1. On the Home page, click on \"Driver 1\" to open the view of driver 1\r\n2. On that view, click on \"Driver 2\"\r\n\r\n### What is expected?\r\nWatcher for '$props' should be triggered (as the props 'uuid' has been changed from 1 to 2) to load data corresponding to new props\r\n\r\n### What is actually happening?\r\nWatcher is not triggered\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7910","RelatedDescription":"Closed issue \"Watch callback not triggered for '$props' of router-view\" (#7910)"},{"Id":"309195518","IsPullRequest":true,"CreatedAt":"2018-03-28T06:52:16","Actor":"Relucent","Number":"7909","RawContent":null,"Title":"paging component example","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: an example of a paging component is added\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/vuejs/vue/pull/7909","RelatedDescription":"Closed or merged PR \"paging component example\" (#7909)"},{"Id":"308884996","IsPullRequest":false,"CreatedAt":"2018-03-28T06:49:31","Actor":"lxjwlt","Number":"7903","RawContent":null,"Title":"innerHTML make the content of element lost in IE11","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/lxjwlt/4uj9xu8s/](https://jsfiddle.net/lxjwlt/4uj9xu8s/)\r\n\r\n### Steps to reproduce\r\n1. click “click” button, it would execute `otherBox.innerHTML = '';`  to clear all the contents of `#other-box`\r\n2. watch the `app.$el` is all right or not\r\n\r\n### What is expected?\r\n`app.$el` 's content is correct in all browsers.\r\n\r\n\r\n### What is actually happening?\r\nchrome: `app.$el` 's content is correct \r\n\r\nFirefox: `app.$el` 's content is correct \r\n\r\nIE11: `app.$el` 's content is empty\r\n\r\n---\r\nthis bug would appear in IE11, but not in chrome、Firefox\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7903","RelatedDescription":"Closed issue \"innerHTML make the content of element lost in IE11\" (#7903)"},{"Id":"309020540","IsPullRequest":false,"CreatedAt":"2018-03-27T19:02:47","Actor":"dtkahl","Number":"7907","RawContent":null,"Title":"shorthand directive for class binding","State":"closed","Body":"### What problem does this feature solve?\r\nAs far as i know, binding a classes on a boolean data/prop works by passing an object like this:\r\n```\r\n<a href=\"#\" v-bind:class=\"{'disabled': aBooleanProp}\">...</a>\r\n```\r\n\r\nA shorthand for binding a single class would be nice.\r\n\r\n### What does the proposed API look like?\r\nI'm currently  using a custom directive for this. But I thought proposing this as a feature could be a good idea. The syntax of my directive looks like this: \r\n```\r\n<a href=\"#\" v-c:disabled=\"aBooleanProp\">...</a>\r\n```\r\n([jsfiddle with implenentation of this directive](https://jsfiddle.net/dtkahl/o3p3ucv7/))\r\n\r\nIf this request will be implemented to the class directive, the API would look like this:\r\n```\r\n<a href=\"#\" class:disabled=\"aBooleanProp\">...</a>\r\n```\r\n\r\nOr if this would be implemented with a own prefix like event handler, the API could look like this:\r\n```\r\n<a href=\"#\" .disabled=\"aBooleanProp\">...</a>\r\n```\r\nBut i don't know if there is any good prefix character for this approche.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7907","RelatedDescription":"Closed issue \"shorthand directive for class binding\" (#7907)"},{"Id":"309004392","IsPullRequest":true,"CreatedAt":"2018-03-27T14:52:18","Actor":"pengchongfu","Number":"7906","RawContent":null,"Title":"fix(transition-group): not add class v-move to v-show element, fix #7879","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7906","RelatedDescription":"Open PR \"fix(transition-group): not add class v-move to v-show element, fix #7879\" (#7906)"},{"Id":"308977903","IsPullRequest":true,"CreatedAt":"2018-03-27T13:50:56","Actor":"vctt94","Number":"7905","RawContent":null,"Title":"fix(<transition-group>): transition move on v-show enter [#7879]","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7905","RelatedDescription":"Open PR \"fix(<transition-group>): transition move on v-show enter [#7879]\" (#7905)"},{"Id":"308930989","IsPullRequest":false,"CreatedAt":"2018-03-27T11:34:53","Actor":"hirokiosame","Number":"7904","RawContent":null,"Title":"Scoped-slot not acknowledged in nested template tag","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hirokiosame/38nzxq6c/2/](https://jsfiddle.net/hirokiosame/38nzxq6c/2/)\r\n\r\n### Steps to reproduce\r\nJust execute the JSfiddle. You'll notice the scoped-slot isn't being rendered.\r\n\r\n### What is expected?\r\nFor the scoped-slot to be rendered.\r\n\r\n### What is actually happening?\r\nThe scoped-slot is not in `this.$scopedSlots` and not being rendered.\r\n\r\n---\r\nThe *minimal* reproduction is a little unpractical because who would unnecessarily nest content in an attribute-less `template` tag. This JSfiddle is more reflective of the real use-case we're dealing with: https://jsfiddle.net/hirokiosame/38nzxq6c/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7904","RelatedDescription":"Open issue \"Scoped-slot not acknowledged in nested template tag\" (#7904)"},{"Id":"308861408","IsPullRequest":true,"CreatedAt":"2018-03-27T08:02:04","Actor":"clarkdo","Number":"7902","RawContent":null,"Title":"feat(ssr): render initial and used async css chunks","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis pr is trying to resolve #7897 : \r\n1. Put splitted chunks of css files into corresponding `async` and `initial` int `vue-ssr-client-manifest.json`\r\n1. Let `renderStyles` render `initial` and used `async` css files.","Url":"https://github.com/vuejs/vue/pull/7902","RelatedDescription":"Open PR \"feat(ssr): render initial and used async css chunks\" (#7902)"},{"Id":"308854340","IsPullRequest":true,"CreatedAt":"2018-03-27T07:39:12","Actor":"pengchongfu","Number":"7901","RawContent":null,"Title":"fix(transition-group): ensure remove class v-enter-to after it was added","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n*  related to #5800 \r\n* in component transition-group, `_enterCb` could excute before [nextFrame](https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/modules/transition.js#L151), so put `_enterCb` into `nextFrame`","Url":"https://github.com/vuejs/vue/pull/7901","RelatedDescription":"Open PR \"fix(transition-group): ensure remove class v-enter-to after it was added\" (#7901)"},{"Id":"308849609","IsPullRequest":false,"CreatedAt":"2018-03-27T07:21:10","Actor":"ninaxue","Number":"7900","RawContent":null,"Title":"comments cause “he client-side rendered virtual DOM tree is not matching server-rendered content”????","State":"closed","Body":"Version\r\n2.5.16\r\n``` \r\n<template>\r\n    <div id=\"data1Content\">\r\n        <!-- data1Content -->\r\n        <ul class=\"list\">...</ul>\r\n    </div>\r\n</template>\r\n``` \r\nthe Template add HTML comments， and Below is the server-rendered content \r\n``` \r\n<div id=\"data1Content\">data1Content <ul class=\"list\">\r\n```\r\nbelow is the browser render content（check with devtools）\r\n``` \r\n<div id=\"data1Content\"><!--data1Content--> <ul class=\"list\">\r\n``` \r\nserver-rendered content with no html comments symbols causeed <font color=#ffffff> [Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content.？？ </font>","Url":"https://github.com/vuejs/vue/issues/7900","RelatedDescription":"Closed issue \"comments cause “he client-side rendered virtual DOM tree is not matching server-rendered content”????\" (#7900)"},{"Id":"308842938","IsPullRequest":false,"CreatedAt":"2018-03-27T06:53:38","Actor":"ninaxue","Number":"7899","RawContent":null,"Title":"comments","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/7899","RelatedDescription":"Closed issue \"comments\" (#7899)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"309307812","IsPullRequest":false,"CreatedAt":"2018-03-29T17:59:36","Actor":"ralphchristianeclipse","Number":"2132","RawContent":null,"Title":"IOS Url Schemes not working on safari","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[prefs://root=General&path=ManagedConfigurationList](prefs://root=General&path=ManagedConfigurationList)\r\n\r\n### Steps to reproduce\r\n1. Put pref href prefs://root=General&path=ManagedConfigurationList\r\n2. a href=\"prefs://root=General&path=ManagedConfigurationList\"\r\n3. click anchor tag\r\n4. Safari invalid address \r\n\r\n### What is expected?\r\nMust open configuration manager / settings\r\n\r\n### What is actually happening?\r\nSafari invalid address\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2132","RelatedDescription":"Closed issue \"IOS Url Schemes not working on safari\" (#2132)"},{"Id":"309630462","IsPullRequest":false,"CreatedAt":"2018-03-29T06:07:12","Actor":"rodrigowbazevedo","Number":"2133","RawContent":null,"Title":"Handle next(new Error)","State":"closed","Body":"I have a `beforeRouteEnter` in my component that can return a `next(new Error)`, and I have two ways to access this route.\r\n\r\nThe first is from another component using: \r\n```javascript\r\nthis.$router.push(\r\n    `/route/${id}`,\r\n    complete => {\r\n        // Do somenthing\r\n    },\r\n    error => {\r\n        // Handle Error\r\n    }\r\n);\r\n```\r\n\r\nThe second is accessing the route direct from the browser, \r\n in this case I have only one way to handle the error, with the global `router.onError(error => {})`.\r\n\r\nAnd what I want is, if the error occurs coming from the other component I'll show a message error at the component, and if it occurs coming direct from the browser I want to redirect him to another route.\r\nBut the problem is, the global `router.onError(error => {})`  is called  first, so if I redirect him to another route I can't handle the error at my other component, and in the global `onError` I don't even receive at leat a `from` route object.\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2133","RelatedDescription":"Closed issue \"Handle next(new Error)\" (#2133)"},{"Id":"309283750","IsPullRequest":false,"CreatedAt":"2018-03-28T09:16:49","Actor":"Astray-git","Number":"2131","RawContent":null,"Title":"router won't parse/stringify Programmatic navigated query","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/L7hscd8h/6976/](http://jsfiddle.net/L7hscd8h/6976/)\r\n\r\n### Steps to reproduce\r\nclick 'a'\r\n\r\nquery `z` added as Number in `beforeRouteEnter`\r\n\r\n`typeof query.z` is Number\r\n\r\n### What is expected?\r\nquery props should be String\r\n\r\n### What is actually happening?\r\nno stringify applied on programmatic navigation (`next`, `this.$router.push` etc.)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2131","RelatedDescription":"Open issue \"router won't parse/stringify Programmatic navigated query\" (#2131)"},{"Id":"309206590","IsPullRequest":true,"CreatedAt":"2018-03-28T03:17:03","Actor":"PeachScript","Number":"2130","RawContent":null,"Title":"Fix forEach error in IE browsers","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: example compatibility\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis PR is used to fix the `forEach` error in IE.","Url":"https://github.com/vuejs/vue-router/pull/2130","RelatedDescription":"Open PR \"Fix forEach error in IE browsers\" (#2130)"},{"Id":"308809090","IsPullRequest":true,"CreatedAt":"2018-03-27T06:07:13","Actor":"z1948296027","Number":"2129","RawContent":null,"Title":"Update app.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2129","RelatedDescription":"Closed or merged PR \"Update app.js\" (#2129)"},{"Id":"308805042","IsPullRequest":false,"CreatedAt":"2018-03-27T03:01:33","Actor":"z1948296027","Number":"2128","RawContent":null,"Title":"examples/navigation-guards/app.js Error","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nIn this file, line of number 36, end of tag <p> missing </p>\r\n","Url":"https://github.com/vuejs/vue-router/issues/2128","RelatedDescription":"Closed issue \"examples/navigation-guards/app.js Error\" (#2128)"},{"Id":"308457658","IsPullRequest":true,"CreatedAt":"2018-03-26T07:18:10","Actor":"PeachScript","Number":"2127","RawContent":null,"Title":"Fix instance reuse bug in out-in transition #1874","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis is a PR for #1874 , cc: @LinusBorg ","Url":"https://github.com/vuejs/vue-router/pull/2127","RelatedDescription":"Open PR \"Fix instance reuse bug in out-in transition #1874\" (#2127)"},{"Id":"308434652","IsPullRequest":false,"CreatedAt":"2018-03-26T05:09:29","Actor":"NereusWy","Number":"2126","RawContent":null,"Title":"when i cofig the router correctly, import it at main.js. i find that router.options can`t get all options ","State":"closed","Body":"\"vue\": \"2.5.13\".\r\n\"vue-router\": \"3.0.1\".\r\n\r\nmain.js\r\nimport router from 'router'\r\nconsole.log(router.options.routes) \r\nresult \r\ncan`t get all  routeroptions...\r\n","Url":"https://github.com/vuejs/vue-router/issues/2126","RelatedDescription":"Closed issue \"when i cofig the router correctly, import it at main.js. i find that router.options can`t get all options \" (#2126)"},{"Id":"308139325","IsPullRequest":false,"CreatedAt":"2018-03-23T18:39:46","Actor":"chasegiunta","Number":"2125","RawContent":null,"Title":"Hash mode places # at incorrect location in URL if current query parameters exist on page load","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/zlvz65rplp](https://codesandbox.io/s/zlvz65rplp)\r\n\r\n### Steps to reproduce\r\nNavigate to myapp.com?foo=bar\r\n\r\n\r\n### What is expected?\r\nHash is appended before query parameters, to get the final result of myapp.com/#/?foo=bar\r\n\r\n\r\n### What is actually happening?\r\nHash is placed after parameters myapp.com?foo=bar#/ (also making the query parameters inaccessible with `this.$route.query`)\r\n\r\n---\r\nNote on codesandbox link - unable to place query parameter for initial URL in editor preview - please remove `/#/` & append `?foo=bar`\r\n\r\nRunning across this in an instance where user authentication is done outside our app, but client/user identifier is passed to our app in query parameter upon authorization.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2125","RelatedDescription":"Open issue \"Hash mode places # at incorrect location in URL if current query parameters exist on page load\" (#2125)"},{"Id":"308138927","IsPullRequest":false,"CreatedAt":"2018-03-23T18:38:23","Actor":"chasegiunta","Number":"2124","RawContent":null,"Title":"Hash mode ignores current query parameters on initial page load","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\nhttps://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2124","RelatedDescription":"Closed issue \"Hash mode ignores current query parameters on initial page load\" (#2124)"},{"Id":"307932964","IsPullRequest":false,"CreatedAt":"2018-03-23T15:12:19","Actor":"shirohana","Number":"2123","RawContent":null,"Title":"Navigating with anchor tag makes `exact` router-links lost its class","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/1340kjpvvl?autoresize=1&initialpath=%2Fa%2F1&module=%2Fsrc%2Fcomponents%2Fview.vue](https://codesandbox.io/s/1340kjpvvl?autoresize=1&initialpath=%2Fa%2F1&module=%2Fsrc%2Fcomponents%2Fview.vue)\r\n\r\n### Steps to reproduce\r\n(From demo page)\r\n\r\n1. Click `Anchor tags` link, it will append `#anchor` to the href of current page\r\n2. Click `refresh` link, just like sharing a link with a specific paragraph\r\n\r\n### What is expected?\r\nThe link should still has its active class (but only when `mode: 'history'`)\r\n\r\n### What is actually happening?\r\n`vue-router` also compared its `hash`, so it's no longer `exact` and lost its class\r\n\r\n---\r\nI think if we're in `history mode`, it is no need to compare `route.hash`\r\n\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/route.js#L73-L94\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2123","RelatedDescription":"Closed issue \"Navigating with anchor tag makes `exact` router-links lost its class\" (#2123)"},{"Id":"307929795","IsPullRequest":false,"CreatedAt":"2018-03-23T07:42:17","Actor":"mrtsglk","Number":"2122","RawContent":null,"Title":"Cannot GET /","State":"closed","Body":"when I turn off the computer and turn it back on, I get this error on all my projects.I'm getting no route\r\n\r\nCannot Get /\r\n\r\nCannot Get /*","Url":"https://github.com/vuejs/vue-router/issues/2122","RelatedDescription":"Closed issue \"Cannot GET /\" (#2122)"},{"Id":"307565235","IsPullRequest":false,"CreatedAt":"2018-03-22T09:31:38","Actor":"mudoo","Number":"2121","RawContent":null,"Title":"implicit params ({ name: 'sub-route' }) don't update when navigating between nested routes","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/67xnq5to/](https://jsfiddle.net/67xnq5to/)\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\nid is 1\r\n\r\nlike #1255\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2121","RelatedDescription":"Open issue \"implicit params ({ name: 'sub-route' }) don't update when navigating between nested routes\" (#2121)"},{"Id":"307563915","IsPullRequest":false,"CreatedAt":"2018-03-22T09:27:41","Actor":"mudoo","Number":"2120","RawContent":null,"Title":"dynamically params can't update","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nhttps://jsfiddle.net/67xnq5to/\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\nid is 1\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\ndynamically params can't update\r\n\r\nlike #1255","Url":"https://github.com/vuejs/vue-router/issues/2120","RelatedDescription":"Closed issue \"dynamically params can't update\" (#2120)"},{"Id":"307440673","IsPullRequest":false,"CreatedAt":"2018-03-21T22:29:00","Actor":"Alexsalicki91","Number":"2119","RawContent":null,"Title":"Problem with my Slider when i change the route ","State":"closed","Body":"Hi ,\r\nI’m beginner on JS . I’m creating my portfolio and I take this slider very nice from Codedrops : \" https://tympanus.net/Development/SliceRevealer/index2.html \"and I use on my portfolio for my Homepage . I create SPA with Vuejs and the slider work perfectly but when I change the router and i come back on my page with slider, the JS for slider doesn’t reload and my slider doesn’t work.\r\nI don’t understand ! Can you help me guys ?\r\nThis is GitHub link of my portfolio : https://github.com/Alexsalicki91/portfolio\r\n\r\nAlex Salicki","Url":"https://github.com/vuejs/vue-router/issues/2119","RelatedDescription":"Closed issue \"Problem with my Slider when i change the route \" (#2119)"},{"Id":"306799058","IsPullRequest":false,"CreatedAt":"2018-03-20T10:05:54","Actor":"tmcdos","Number":"2118","RawContent":null,"Title":"Providing the router instance as THIS for router guards \"beforeEach\" and \"beforeRouteEnter\"","State":"open","Body":"### What problem does this feature solve?\r\nIn the current version of the router (3.0.1) the global guard **beforeEach** and the component guard **beforeRouteEnter** do not provide a valid THIS value. Obviously for **beforeEach** if you want to access the **app** property of the router you need a valid THIS in the hook. And since the component is not yet instantiated in **beforeRouteEnter** you can not access the component as THIS - but at least you should be able to access the router instance (and its **app** property).\r\n\r\n### What does the proposed API look like?\r\nI am proposing the following 2 simple changes in the code (file **/src/history/base.js**):\r\n\r\n1) in function `confirmTransition()` - invoke the hook with the router instance as THIS\r\n```javascript\r\n    this.pending = route\r\n    const iterator = (hook: NavigationGuard, next) => {\r\n      if (this.pending !== route) {\r\n        return abort()\r\n      }\r\n      try {\r\n        hook.call(this, route, current, (to: any) => { /// <----- proposed change\r\n```\r\n2) in function `bindEnterGuard()` - invoke the hook with the router instance as THIS\r\n```javascript\r\n  return function routeEnterGuard (to, from, next) {\r\n    return guard.call(this, to, from, cb => { /// <---- proposed change\r\n      next(cb)\r\n      if (typeof cb === 'function') { \r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2118","RelatedDescription":"Open issue \"Providing the router instance as THIS for router guards \"beforeEach\" and \"beforeRouteEnter\"\" (#2118)"},{"Id":"306665000","IsPullRequest":false,"CreatedAt":"2018-03-19T22:44:00","Actor":"pythonxCat","Number":"2117","RawContent":null,"Title":"Can not find module for recursive function","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nMy vue-router's version is **^3.0.1**.\r\nI write a lazy recursive function like following:\r\n`function loadComponent(comppath, delay = 200, timeout = 3000, loadingComp = loadingComp, errorComp = ErrorComp) {\r\nreturn function () {\r\n    return {\r\n      component: import(compPath),\r\n      loading: loadingComp,\r\n      error: errorComp,\r\n      delay,\r\n      timeout\r\n    }\r\n  }\r\n}\r\n// load component in async way\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'index',\r\n      component: loadComponent('@/router/views/Index')\r\n    }\r\n ]\r\n})`\r\nVue devtool remind me errors, `vue-router.esm.js?fe87:1905 Error: Cannot find module '@/router/views/Index'.\r\n    at eval (eval at ./src/router lazy recursive (app.js:1143), <anonymous>:5:9)`\r\n","Url":"https://github.com/vuejs/vue-router/issues/2117","RelatedDescription":"Closed issue \"Can not find module for recursive function\" (#2117)"},{"Id":"306452134","IsPullRequest":false,"CreatedAt":"2018-03-19T12:59:52","Actor":"rjgotten","Number":"2116","RawContent":null,"Title":"Extend <router-link> to set an aria-current attribute for active links, instead of an active class","State":"open","Body":"### What problem does this feature solve?\r\nThis feature enables developers to mark up the active router link in an accessible manner for users of assistive technologies.\r\n\r\n### What does the proposed API look like?\r\nSimilar to the `active-class` property on `<router-link>` introduce an `aria-current` string property, defaulting to a `null` value. When set, use the `aria-current` DOM attribute in addition to the active class.\r\n\r\nCriteria for whether the DOM attribute should be set are the same  as for `active-class`. The attribute should be set on the DOM node itself -- or instead on the special nested `<a>` element that router-link can upgrade, should one exist.\r\n\r\nThe DOM attribute's value should be taken from the `aria-current` router-link property. Optionally, this could be validated against the list of valid options as per the ARIA 1.1 specification and console warnings could be provided on attempts to set invalid values.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2116","RelatedDescription":"Open issue \"Extend <router-link> to set an aria-current attribute for active links, instead of an active class\" (#2116)"},{"Id":"306318996","IsPullRequest":false,"CreatedAt":"2018-03-19T03:05:24","Actor":"liuqinqin","Number":"2115","RawContent":null,"Title":"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nVersion\r\n3.0.1\r\n\r\nReproduction link\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44\r\n\r\nSteps to reproduce\r\nRun application into iframe\r\n\r\nWhat is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\nWhat is actually happening?\r\nconst history = window.history\r\nis used\r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n","Url":"https://github.com/vuejs/vue-router/issues/2115","RelatedDescription":"Closed issue \"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate\" (#2115)"},{"Id":"306318842","IsPullRequest":false,"CreatedAt":"2018-03-19T03:04:10","Actor":"liuqinqin","Number":"2114","RawContent":null,"Title":"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nVersion\r\n3.0.1\r\n\r\nReproduction link\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44\r\n\r\nSteps to reproduce\r\nRun application into iframe\r\n\r\nWhat is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\nWhat is actually happening?\r\nconst history = window.history\r\nis used\r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n","Url":"https://github.com/vuejs/vue-router/issues/2114","RelatedDescription":"Closed issue \"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate\" (#2114)"},{"Id":"306317540","IsPullRequest":false,"CreatedAt":"2018-03-19T02:54:33","Actor":"liuqinqin","Number":"2113","RawContent":null,"Title":"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate","State":"closed","Body":"# Question Description\r\nData is requested in the beforeRouteEnter, but when the route is changed, the beforeRouteUpdate function will be triggered. At this point, the code in the two functions is almost the same. Before this method can't be read in the beforeRouteEnter, how should I optimize the extraction code?\r\n\r\n# Brief Code\r\n```\r\nbeforeRouteEnter(to, _from, next) {\r\n      axios.all([\r\n        axios.get(`/member?current=${to.query.page}`),\r\n        axios.get(`/axiosUrl1`),\r\n      ]).then(( data ) => {\r\n        next((vm) => {\r\n          vm.$set(vm, 'data', data.xxxx);\r\n          _...........(your code)_\r\n        });\r\n      });\r\n    }\r\n```\r\nAnd now， When the route changes\r\n ```\r\nbeforeRouteUpdate(to, _from, next) {\r\n      axios.all([\r\n        axios.get(`/member?current=${to.query.page}`),\r\n        axios.get(`/axiosUrl1`),\r\n      ]).then(( data ) => {\r\n        this.data = data.xxxx;\r\n        next();\r\n      });\r\n}\r\n\r\n```\r\n\r\nThe axios request is exactly the same, but the set value is different. You can't extract the promise function in methods because beforeRouteEnter needs to call the methods in the methods in vm, which loses the purpose of requesting data using the beforeRouteEnter hook function.\r\nWhat can I do to make the code achieve maximum reuse","Url":"https://github.com/vuejs/vue-router/issues/2113","RelatedDescription":"Closed issue \"How to maximize the reuse of code in beforeRouteEnter and beforeRouteUpdate\" (#2113)"},{"Id":"305853078","IsPullRequest":false,"CreatedAt":"2018-03-16T09:23:35","Actor":"lynzz","Number":"2112","RawContent":null,"Title":"Configured with routing function to generate lazy loading will not work","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/63ljm6z9k](https://codesandbox.io/s/63ljm6z9k)\r\n\r\n### Steps to reproduce\r\n1.  Routed to the User, view router-view content\r\n2. Routed to the Log, view router-view content\r\n\r\n### What is expected?\r\n1.  Routed to the User, router-view content for the user\r\n2. Routed to the Log, router-view content for the log\r\n\r\n### What is actually happening?\r\n1.  Routed to the User, router-view content remains at home\r\n2. Routed to the Log, router-view content remains at home\r\n\r\n---\r\nLazy loading can be defined directly on a home and not using a function to handle, is the import did not permit such treatment\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2112","RelatedDescription":"Closed issue \"Configured with routing function to generate lazy loading will not work\" (#2112)"},{"Id":"305816738","IsPullRequest":false,"CreatedAt":"2018-03-16T06:34:06","Actor":"jxxyyang","Number":"2111","RawContent":null,"Title":"ios下路由跳转后，页面跳转了， 但是复制出来的链接地址还是前面的地址？","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2111","RelatedDescription":"Closed issue \"ios下路由跳转后，页面跳转了， 但是复制出来的链接地址还是前面的地址？\" (#2111)"},{"Id":"305694715","IsPullRequest":false,"CreatedAt":"2018-03-15T19:45:47","Actor":"wrrrn","Number":"2110","RawContent":null,"Title":"Child route removing optional param in parent","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n~~[https://codepen.io/wrrrn/pen/GxqmOb](https://codepen.io/wrrrn/pen/GxqmOb)~~\r\nhttp://jsfiddle.net/7a31maev/1/\r\n\r\n### Steps to reproduce\r\nI've linked to what the current router code is. The issue is simple, so I hope I'm missing something obvious.\r\n\r\n### What is expected?\r\nWhen the :paramOptional is set, and child route is pushed to, the path will look as such - \r\n'/search/paramOne/paramOptional/paramTwo/show-modal'\r\n\r\n### What is actually happening?\r\nWhen navigated to, the child removes the paramOptional. The resulting url is - \r\n'/search/paramOne/paramTwo/show-modal'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2110","RelatedDescription":"Open issue \"Child route removing optional param in parent\" (#2110)"},{"Id":"305566943","IsPullRequest":false,"CreatedAt":"2018-03-15T14:17:03","Actor":"wangyi7099","Number":"2109","RawContent":null,"Title":"Can customize scroll element not just window by using scrollBehavior api.","State":"closed","Body":"### What problem does this feature solve?\r\nWhen using scrollBehavior api, it seems that only supports window scroll i.e.\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            x: 10,\r\n            y: 10\r\n        }\r\n    }\r\n})\r\n\r\n// window triggers scrolling\r\nwindow.scrollTo({x: 10, y: 10});\r\n\r\n```\r\n,  so, I hope add a param into the return object `element`, that the element triggers scrolling, not only window.  \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            return {\r\n                element: document.querySelector(\"#app\"),\r\n                x: 10,\r\n                y: 10\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n//\r\n// element triggers scrolling\r\nelement.scrollTo({x: 10, y: 10});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2109","RelatedDescription":"Closed issue \"Can customize scroll element not just window by using scrollBehavior api.\" (#2109)"},{"Id":"305550402","IsPullRequest":false,"CreatedAt":"2018-03-15T13:22:48","Actor":"AndreyVMarkelov","Number":"2108","RawContent":null,"Title":"If application works inside iframe when vue-router changes history of iframe only","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44)\r\n\r\n### Steps to reproduce\r\nRun application into iframe\r\n\r\n### What is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\n### What is actually happening?\r\nconst history = window.history\r\nis used \r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2108","RelatedDescription":"Open issue \"If application works inside iframe when vue-router changes history of iframe only\" (#2108)"},{"Id":"305421017","IsPullRequest":false,"CreatedAt":"2018-03-15T08:27:15","Actor":"lichenhao","Number":"2107","RawContent":null,"Title":"The router clicked but the url and view not updated follow","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/v3ox6n8xj0](https://codesandbox.io/s/v3ox6n8xj0)\r\n\r\n### Steps to reproduce\r\nRun with this code \r\n`<router-link :to=\"someroute.path\"></route-link>`\r\nand click more \r\nSometime the history or hash will not changed.\r\n\r\n### What is expected?\r\nThe page state should be switched.\r\n\r\n### What is actually happening?\r\nNothing happend\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2107","RelatedDescription":"Closed issue \"The router clicked but the url and view not updated follow\" (#2107)"},{"Id":"305386842","IsPullRequest":false,"CreatedAt":"2018-03-15T02:34:49","Actor":"code-artisan","Number":"2106","RawContent":null,"Title":"route not matched.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/code_artisan/L7hscd8h/5792/](https://jsfiddle.net/code_artisan/L7hscd8h/5792/)\r\n\r\n### Steps to reproduce\r\nclick user profile link, user profile is not matched.\r\n\r\n### What is expected?\r\nuser profile matched, not 404 page.\r\n\r\n### What is actually happening?\r\nuser profile route not matched.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2106","RelatedDescription":"Closed issue \"route not matched.\" (#2106)"},{"Id":"305234886","IsPullRequest":false,"CreatedAt":"2018-03-14T16:51:32","Actor":"rightaway","Number":"2105","RawContent":null,"Title":"Allow nested routes without parent component","State":"closed","Body":"### What problem does this feature solve?\r\nAllows the routes to be defined with a prefix that doesn't need to be repeated in each route.\r\n\r\n### What does the proposed API look like?\r\n\r\nCurrently this doesn't work because the parent route doesn't have a component specified. This feature isn't about nested routes but just about nested paths.\r\n\r\n```js\r\n{ path: '/prefix': children: [\r\n  { path: 'one', component: ... },\r\n  { path: 'two', component: ... },\r\n]}\r\n```\r\nCreates `/prefix/one` and `/prefix/two`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2105","RelatedDescription":"Closed issue \"Allow nested routes without parent component\" (#2105)"},{"Id":"305047490","IsPullRequest":false,"CreatedAt":"2018-03-14T07:33:26","Actor":"viruscamp","Number":"2104","RawContent":null,"Title":"In beforeEach hook , call next with a callback is invalid","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/viruscamp/z6j6yozx/3/](https://jsfiddle.net/viruscamp/z6j6yozx/3/)\r\n\r\n### Steps to reproduce\r\nRun this jsfiddle, open js console, and click \"Go to Foo \"\r\n\r\n### What is expected?\r\nJs console show:\r\n\r\n```\r\nrouter.beforeEach /foo  \r\nrouter.beforeEach.next /foo  \r\nrouteConfig.beforeEnter /foo  \r\nrouteConfig.beforeEnter.next /foo  \r\nrouter.beforeResolve /foo  \r\nrouter.beforeResolve.next /foo  \r\n```\r\n\r\n### What is actually happening?\r\nJs console show:\r\n\r\n```\r\nrouter.beforeEach /foo  \r\nrouteConfig.beforeEnter /foo  \r\nrouter.beforeResolve /foo  \r\n```\r\n\r\n---\r\nAs https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts show:  \r\nrouter.beforeEach, routeConfig.beforeEnter, router.beforeResolve use NavigationGuard  \r\nand next in NavigationGuard receive ((vm: Vue) => any) as argument  \r\nBut I cannot use this feature as the code show\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2104","RelatedDescription":"Closed issue \"In beforeEach hook , call next with a callback is invalid\" (#2104)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"309948880","IsPullRequest":true,"CreatedAt":"2018-03-30T01:12:20","Actor":"bichikim","Number":"1210","RawContent":null,"Title":"- fix throwing error style","State":"open","Body":"  - all throwing error should be starting with lower case","Url":"https://github.com/vuejs/vuex/pull/1210","RelatedDescription":"Open PR \"- fix throwing error style\" (#1210)"},{"Id":"309904468","IsPullRequest":true,"CreatedAt":"2018-03-29T21:08:42","Actor":"gitlab-winnie","Number":"1209","RawContent":null,"Title":"Add spies as an alternative to testAction helper","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1209","RelatedDescription":"Open PR \"Add spies as an alternative to testAction helper\" (#1209)"},{"Id":"309874448","IsPullRequest":true,"CreatedAt":"2018-03-29T19:23:46","Actor":"iamphill","Number":"1208","RawContent":null,"Title":"docs: Update docs of testAction helper","State":"open","Body":"This makes it read & produce the correct error messages\r\n\r\nIt now reads as `expect(actual).to.equal(expected)`","Url":"https://github.com/vuejs/vuex/pull/1208","RelatedDescription":"Open PR \"docs: Update docs of testAction helper\" (#1208)"},{"Id":"309736309","IsPullRequest":true,"CreatedAt":"2018-03-29T16:49:01","Actor":"bichikim","Number":"1207","RawContent":null,"Title":"for reading process.env in safe way","State":"closed","Body":"I cannot pass \"Store should not call root state function twice\"\r\nplease help me \r\nprocess have to be  protected by this way\r\nit is also for improving running speed slightly","Url":"https://github.com/vuejs/vuex/pull/1207","RelatedDescription":"Closed or merged PR \"for reading process.env in safe way\" (#1207)"},{"Id":"309719148","IsPullRequest":true,"CreatedAt":"2018-03-29T16:46:47","Actor":"lzxb","Number":"1206","RawContent":null,"Title":"[featrue] dispatch and commit function support multiple parameters","State":"closed","Body":"In some cases, multiple parameters need to be passed\r\n### Example\r\n```javascript\r\nstore.dispatch('add', 'one', 'two', 'three')\r\nstore.commit('add', 'one', 'two', 'three')\r\n```","Url":"https://github.com/vuejs/vuex/pull/1206","RelatedDescription":"Closed or merged PR \"[featrue] dispatch and commit function support multiple parameters\" (#1206)"},{"Id":"309627453","IsPullRequest":true,"CreatedAt":"2018-03-29T06:57:37","Actor":"bichikim","Number":"1205","RawContent":null,"Title":"perf: update util find","State":"closed","Body":"The find in util doesn't need to loop all value in list for finding only one value","Url":"https://github.com/vuejs/vuex/pull/1205","RelatedDescription":"Closed or merged PR \"perf: update util find\" (#1205)"},{"Id":"309612578","IsPullRequest":true,"CreatedAt":"2018-03-29T04:07:10","Actor":"bichikim","Number":"1204","RawContent":null,"Title":" [DOC KR] update doc for issues #1203","State":"open","Body":"- change 객체 전파 연산자 to 객체 확산 연산자 (I refer to Redux)\r\n   - https://deminoth.github.io/redux/recipes/UsingObjectSpreadOperator.html","Url":"https://github.com/vuejs/vuex/pull/1204","RelatedDescription":"Open PR \" [DOC KR] update doc for issues #1203\" (#1204)"},{"Id":"308312289","IsPullRequest":true,"CreatedAt":"2018-03-28T15:27:58","Actor":"L-Chris","Number":"1199","RawContent":null,"Title":"[DOC ZH-CN EN] add description for feature(register global actions in namespaced modules)","State":"closed","Body":"[DOC ZH-CN EN] add description for feature(register global actions in namespaced modules)","Url":"https://github.com/vuejs/vuex/pull/1199","RelatedDescription":"Closed or merged PR \"[DOC ZH-CN EN] add description for feature(register global actions in namespaced modules)\" (#1199)"},{"Id":"308341332","IsPullRequest":true,"CreatedAt":"2018-03-28T15:17:36","Actor":"bichikim","Number":"1200","RawContent":null,"Title":"[DOC KR] update updated Api description","State":"closed","Body":"- Component Binding Helpers\r\n- registerModule","Url":"https://github.com/vuejs/vuex/pull/1200","RelatedDescription":"Closed or merged PR \"[DOC KR] update updated Api description\" (#1200)"},{"Id":"309405652","IsPullRequest":false,"CreatedAt":"2018-03-28T15:00:03","Actor":"khg0712","Number":"1203","RawContent":null,"Title":"Vuex KR documentation has an issue","State":"open","Body":"### What problem does this feature solve?\r\nIn state part of origin Vuex documentation, it use same word 'Object Spread Operator'. but it was translated into different words in the Korean translation '객체 전파 연산자' and ' 객체 확산 연산자'. This problem can be misunderstood by other users.\r\n\r\n### What does the proposed API look like?\r\nin KR Vuex documentation it has an error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1203","RelatedDescription":"Open issue \"Vuex KR documentation has an issue\" (#1203)"},{"Id":"309202004","IsPullRequest":false,"CreatedAt":"2018-03-28T02:48:30","Actor":"Paul-Yellow","Number":"1202","RawContent":null,"Title":"geeters 改vuex中state中值 geeters不重新计算","State":"open","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n### Steps to reproduce\r\n1、 通过mapaction  提交就可以                                                                                                                                                                                           \r\n 2、在组件的点击事件中中直接通过this.$state.commit()来提交的话 第一次可以更新  但是更新完就报错了，然后getters就不重新计算了，console.log（）无输出。数据类型为基本数据类型number，不涉及到深浅拷贝的问题。\r\n\r\n Cannot read property '_withTask' of undefined\r\n\r\n### What is expected?\r\n官网上说明     可以直接通过this.$state.commit()直接提交mutation \r\n\r\n### What is actually happening?\r\n报错：  Cannot read property '_withTask' of undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1202","RelatedDescription":"Open issue \"geeters 改vuex中state中值 geeters不重新计算\" (#1202)"},{"Id":"308698637","IsPullRequest":true,"CreatedAt":"2018-03-26T19:10:14","Actor":"sks","Number":"1201","RawContent":null,"Title":"export ActionHandler","State":"open","Body":"- while testing we have methods using this method signature and it would be nice if we did not have define this.\r\n\r\nWe were running into the issue as reported in https://github.com/Microsoft/TypeScript/issues/7960\r\n\r\nSo workaround was to do something like\r\n```\r\ntype ModuleAction<ModuleState> = (injectee: ActionContext<ModuleState, State>, payload: any) => any;\r\nconst loginAction = userActions.login as ModuleAction<UserState>;\r\n```","Url":"https://github.com/vuejs/vuex/pull/1201","RelatedDescription":"Open PR \"export ActionHandler\" (#1201)"},{"Id":"308016381","IsPullRequest":true,"CreatedAt":"2018-03-24T02:58:58","Actor":"ktsn","Number":"1198","RawContent":null,"Title":"docs: update Japanese docs","State":"closed","Body":"translated #1169 ","Url":"https://github.com/vuejs/vuex/pull/1198","RelatedDescription":"Closed or merged PR \"docs: update Japanese docs\" (#1198)"},{"Id":"307247985","IsPullRequest":true,"CreatedAt":"2018-03-21T16:18:10","Actor":"Jinjiang","Number":"1197","RawContent":null,"Title":"[docs][zh-cn] synced updates to #e237803","State":"closed","Body":"Ref: https://github.com/Jinjiang/vuex/compare/dev...vuejs:dev\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1197","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced updates to #e237803\" (#1197)"},{"Id":"306712501","IsPullRequest":false,"CreatedAt":"2018-03-20T04:17:43","Actor":"fxxjdedd","Number":"1196","RawContent":null,"Title":"Find problem when changing state using Object.assign()","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsrun.net/QZZKp/edit](http://jsrun.net/QZZKp/edit)\r\n\r\n### Steps to reproduce\r\nuncomment the code in dependency.mutations.SET_STATUS\r\n\r\n```\r\n            /* doesn't work*/ \r\n            // state.status = Object.assign(state.status, status)\r\n            \r\n            /* work */\r\n            state.status = Object.assign({}, state.status, status)\r\n```\r\n\r\n\r\n### What is expected?\r\nloading status should change to 'false' after 500ms\r\n\r\n### What is actually happening?\r\nloading status is always 'true'\r\n\r\n---\r\nwhat is the diff between \r\n\r\nObject.assign({}, state.status, status) // work\r\n\r\nand \r\n\r\nObject.assign(state.status, status) // doesn't work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1196","RelatedDescription":"Closed issue \"Find problem when changing state using Object.assign()\" (#1196)"},{"Id":"304920407","IsPullRequest":true,"CreatedAt":"2018-03-19T14:56:45","Actor":"alexswiontek","Number":"1188","RawContent":null,"Title":"simplify getter","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1188","RelatedDescription":"Closed or merged PR \"simplify getter\" (#1188)"},{"Id":"305675539","IsPullRequest":true,"CreatedAt":"2018-03-19T14:55:04","Actor":"DannyFeliz","Number":"1191","RawContent":null,"Title":"Update object spread operator stage","State":"closed","Body":"Ref: https://github.com/tc39/proposal-object-rest-spread#status-of-this-proposal","Url":"https://github.com/vuejs/vuex/pull/1191","RelatedDescription":"Closed or merged PR \"Update object spread operator stage\" (#1191)"},{"Id":"306495716","IsPullRequest":true,"CreatedAt":"2018-03-19T14:51:41","Actor":"ktsn","Number":"1195","RawContent":null,"Title":"docs: improve API reference of watch and subscribe","State":"open","Body":"* Changed the wording of `store#watch`'s 1st argument. It was actually a getter function until v1.x but the current getter is not a simple function. (fix #1141)\r\n* Added descriptions how to unsubscribe from `subscribe` / `subscribeAction`. (fix #1194)","Url":"https://github.com/vuejs/vuex/pull/1195","RelatedDescription":"Open PR \"docs: improve API reference of watch and subscribe\" (#1195)"},{"Id":"306340386","IsPullRequest":false,"CreatedAt":"2018-03-19T05:49:03","Actor":"dhl","Number":"1194","RawContent":null,"Title":"The Vuex documentation does not document how to unsubscribe from subscribe and subscribeAction","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/en/api.html](https://vuex.vuejs.org/en/api.html)\r\n\r\n### Steps to reproduce\r\nRefer to documentation for `subscribe` and `subscribeAction`.\r\n\r\n\r\n\r\n### What is expected?\r\nThe API documentation (https://vuex.vuejs.org/en/api.html) references to the fact that both `subscribe` and `subscribeAction` returns a handler function that can be used to unsubscribe the listener passed into those functions.\r\n\r\n### What is actually happening?\r\nThere is no mentioning of anyway to unsubscribe from `subscribe` and `subscribeAction`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1194","RelatedDescription":"Open issue \"The Vuex documentation does not document how to unsubscribe from subscribe and subscribeAction\" (#1194)"},{"Id":"306150646","IsPullRequest":false,"CreatedAt":"2018-03-17T11:55:24","Actor":"DQvsRA","Number":"1193","RawContent":null,"Title":"module onRegister, onRemove methods","State":"open","Body":"### What problem does this feature solve?\r\nSetup module when registerModule has been called and remove dependencies when unregisterModule. For example register database listeners and then remove them\r\n\r\n### What does the proposed API look like?\r\nonRegister and onRemove in a module object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1193","RelatedDescription":"Open issue \"module onRegister, onRemove methods\" (#1193)"},{"Id":"306130533","IsPullRequest":true,"CreatedAt":"2018-03-17T05:41:30","Actor":"HerringtonDarkholme","Number":"1192","RawContent":null,"Title":"[feat] [WIP] Store augmentation","State":"open","Body":"Fix https://github.com/vuejs/vuex/issues/994\r\n\r\nBased on https://github.com/vuejs/vuex/pull/1121\r\n\r\nVuex has added `$store: Store<any>`  to Vue instance. This is suboptimal since it doesn't allow users to provide their own store type.\r\n\r\nBy utilizing TS2.8's conditional type, we can write a `PermissiveAny<T>` type which allows users to customize interface with `any` as fall-back. It can provide **opt-in** type safety for store.\r\n\r\nThe store type is parameterized by `State`. By introducing a global `RootState` interface, we can annotate `$store` as `Store<PermissiveAny<RootState>>`. If users don't augment `RootState`, the $store type is equivalent to `Store<any>`. On the other hand, if users do augment `RootState`, the store type will be changed to `Store<RootState>`.\r\n\r\nEffectively, this feature allows users to manual annotate store type, but without breaking existing code.\r\n\r\ncc @blake-newman @ktsn ","Url":"https://github.com/vuejs/vuex/pull/1192","RelatedDescription":"Open PR \"[feat] [WIP] Store augmentation\" (#1192)"},{"Id":"305255470","IsPullRequest":false,"CreatedAt":"2018-03-14T17:24:15","Actor":"corsarioll","Number":"1190","RawContent":null,"Title":"push element in to state ","State":"closed","Body":"I try to add an element to an array but it returns this error\r\n\r\nTypeError: Cannot add property 5, object is not extensible\r\n    at Array.push (<anonymous>)\r\n    at Store.addProjectsMutation (store.js?adc6:67)\r\n    at wrappedMutationHandler (vuex.esm.js?358c:697)\r\n    at commitIterator (vuex.esm.js?358c:389)\r\n    at Array.forEach (<anonymous>)\r\n    at eval (vuex.esm.js?358c:388)\r\n    at Store._withCommit (vuex.esm.js?358c:495)\r\n    at Store.commit (vuex.esm.js?358c:387)\r\n    at Object.boundCommit [as commit] (vuex.esm.js?358c:335)\r\n    at eval (store.js?adc6:120)\r\n\r\neste es mi codigo \r\n\r\n`addProjectsMutation (state,newValue){\r\n            var test = {\r\n                name : \"jeisson\",\r\n                email : \"test@email.com\",\r\n                logoImage : \"https://files.genial.guru/files/news/part_2/20205/1215060-4-1-650-a542d8629a-1501787353.jpg\",\r\n                description : \"test description con espacios y saltos de linea   asd  asd  das  dasd\"\r\n            }\r\n            console.log(state.projects)\r\n            state.projects.push(test)\r\n        },\r\n`","Url":"https://github.com/vuejs/vuex/issues/1190","RelatedDescription":"Closed issue \"push element in to state \" (#1190)"},{"Id":"305156527","IsPullRequest":true,"CreatedAt":"2018-03-14T13:24:40","Actor":"Jinjiang","Number":"1189","RawContent":null,"Title":"[docs] fixed text cut issue (close #1179)","State":"open","Body":"Ref: #1179 ","Url":"https://github.com/vuejs/vuex/pull/1189","RelatedDescription":"Open PR \"[docs] fixed text cut issue (close #1179)\" (#1189)"},{"Id":"304734995","IsPullRequest":false,"CreatedAt":"2018-03-13T14:25:14","Actor":"GMounir","Number":"1187","RawContent":null,"Title":"common state namespace","State":"closed","Body":"### Version\r\n3.0.0\r\n\r\nI have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n\r\n\r\n### What is expected?\r\nexpected: fill only the state that i'm woking in\r\n\r\n### What is actually happening?\r\nhappening: fill all states\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1187","RelatedDescription":"Closed issue \"common state namespace\" (#1187)"},{"Id":"304732374","IsPullRequest":false,"CreatedAt":"2018-03-13T11:49:06","Actor":"GMounir","Number":"1186","RawContent":null,"Title":"Common state namespace ","State":"closed","Body":"I have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n","Url":"https://github.com/vuejs/vuex/issues/1186","RelatedDescription":"Closed issue \"Common state namespace \" (#1186)"},{"Id":"304730031","IsPullRequest":false,"CreatedAt":"2018-03-13T11:41:26","Actor":"GMounir","Number":"1185","RawContent":null,"Title":"Common state with namespace ","State":"closed","Body":"I have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n","Url":"https://github.com/vuejs/vuex/issues/1185","RelatedDescription":"Closed issue \"Common state with namespace \" (#1185)"},{"Id":"304625771","IsPullRequest":false,"CreatedAt":"2018-03-13T04:38:45","Actor":"Shyam-Chen","Number":"1184","RawContent":null,"Title":"register a nested module","State":"closed","Body":"Replace arrays with dots.\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n});\r\n```\r\n\r\nto\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule('nested.myModule', {\r\n  // ...\r\n});\r\n```","Url":"https://github.com/vuejs/vuex/issues/1184","RelatedDescription":"Closed issue \"register a nested module\" (#1184)"},{"Id":"304608830","IsPullRequest":true,"CreatedAt":"2018-03-13T03:51:20","Actor":"Jinjiang","Number":"1183","RawContent":null,"Title":"[docs][zh-cn] translated #1173","State":"closed","Body":"#1173 Mention payload in action handler in API\r\n/ping @Justineo \r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1183","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] translated #1173\" (#1183)"},{"Id":"304302778","IsPullRequest":false,"CreatedAt":"2018-03-12T09:51:42","Actor":"1402310095","Number":"1182","RawContent":null,"Title":"动态注册和卸载module导致页面上所有的组件都销毁重建","State":"closed","Body":"  vuex版本2.4.0，使用store.registerModule和store.unregisterModule会导致页面上都组件销毁重建，可以看到其他组件的destroyed钩子被触发\r\n有没有能够不让组件刷新的办法？","Url":"https://github.com/vuejs/vuex/issues/1182","RelatedDescription":"Closed issue \"动态注册和卸载module导致页面上所有的组件都销毁重建\" (#1182)"},{"Id":"304245734","IsPullRequest":false,"CreatedAt":"2018-03-12T05:32:08","Actor":"eeerrrttty","Number":"1181","RawContent":null,"Title":"Problem with load state","State":"closed","Body":"My load state is really crazy, i have a button that is disabled on loading content from firebase, but my vuex is showing as false.\r\n\r\nButton working as normally, but im not being able to track the changes.\r\n\r\n`import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as firebase from 'firebase'\r\nimport createPersistedState from 'vuex-persistedstate'\r\n\r\nVue.use(Vuex)\r\n\r\nexport const store = new Vuex.Store({\r\n  state: {\r\n    loadedPosts: [{\r\n      imageUrl: '',\r\n      id: '',\r\n      description: ''\r\n    }],\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n  },\r\n  plugins: [createPersistedState()],\r\n  mutations: {\r\n    setUser (state, payload) {\r\n      state.user = payload\r\n    },\r\n    createPost (state, payload) {\r\n      state.loadedPosts.push(payload)\r\n    },\r\n    setLoadedPosts (state, payload) {\r\n      state.loadedPosts = payload\r\n    },\r\n    setLoading (state, payload) {\r\n      state.loading = payload\r\n    },\r\n    setError (state, payload) {\r\n      state.error = payload\r\n    },\r\n    clearError (state) {\r\n      state.error = null\r\n    }\r\n  },\r\n  actions: {\r\n    loadPosts ({commit}) {\r\n      firebase.database().ref('posts').orderByKey().limitToLast(5).once('value')\r\n        .then((data) => {\r\n          const posts = []\r\n          const obj = data.val()\r\n          for (let key in obj) {\r\n            posts.push({\r\n              id: key,\r\n              description: obj[key].description,\r\n              imageUrl: obj[key].imageUrl,\r\n              date: obj[key].date,\r\n              creatorId: obj[key].creatorId\r\n            })\r\n          }\r\n          commit('setLoadedPosts', posts)\r\n          commit('setLoading', false)\r\n        })\r\n    },\r\n    createPost ({commit, getters}, payload) {\r\n      const post = {\r\n        description: payload.description,\r\n        date: payload.date.toISOString(),\r\n        creatorId: getters.user.id\r\n      }\r\n      let imageUrl\r\n      let key\r\n      firebase.database().ref('posts').push(post)\r\n        .then((data) => {\r\n          key = data.key\r\n          return key\r\n        })\r\n        .then(key => {\r\n          const filename = payload.image.name\r\n          const ext = filename.slice(filename.lastIndexOf('.'))\r\n          return firebase.storage().ref('posts/' + key + ext).put(payload.image)\r\n        })\r\n        .then(fileData => {\r\n          imageUrl = fileData.metadata.downloadURLs[0]\r\n          return firebase.database().ref('posts').child(key).update({imageUrl: imageUrl})\r\n        })\r\n        .then(() => {\r\n          commit('createPost', {\r\n            ...post,\r\n            imageUrl: imageUrl,\r\n            id: key\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    signUserIn ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    signUserUp ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n            firebase.auth().currentUser.sendEmailVerification()\r\n              .then(function () {\r\n                alert('Confirme sua conta. Verifique seu e-mail e caixa de spam!')\r\n              })\r\n              .catch(\r\n                error => {\r\n                  commit('setLoading', false)\r\n                  commit('setError', error)\r\n                  console.log(error)\r\n                }\r\n              )\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    autoSignIn ({commit}, payload) {\r\n      commit('setUser', {id: payload.uid, email: payload.email, emailVerified: payload.emailVerified})\r\n    },\r\n    logout ({commit}) {\r\n      firebase.auth().signOut()\r\n      commit('setUser', null)\r\n    },\r\n    clearError ({commit}, payload) {\r\n      commit('clearError')\r\n    }\r\n  },\r\n  getters: {\r\n    user (state) {\r\n      return state.user\r\n    },\r\n    loadedPosts (state) {\r\n      return state.loadedPosts\r\n    },\r\n    loadedPost (state) {\r\n      return (postId) => {\r\n        return state.loadedPosts.find((post) => {\r\n          return post.id === postId\r\n        })\r\n      }\r\n    },\r\n    loading (state) {\r\n      return state.loading\r\n    },\r\n    error (state) {\r\n      return state.error\r\n    }\r\n  }\r\n})\r\n`\r\n\r\nload just not getting updated!!!","Url":"https://github.com/vuejs/vuex/issues/1181","RelatedDescription":"Closed issue \"Problem with load state\" (#1181)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-03-30T05:30:33.2820881Z","RunDurationInMilliseconds":4394}