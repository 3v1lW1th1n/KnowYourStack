{"Data":{"GitHub":{"Issues":[{"Id":"492481673","IsPullRequest":true,"CreatedAt":"2019-09-11T21:43:23","Actor":"ashbhandare","Number":"4205","RawContent":null,"Title":"Upgrade TF.Net version from 0.10.10 to 0.11.3","State":"open","Body":"Fixes #4204\r\n\r\nIncludes a few API changes necessary to upgrade TF.Net version.\r\nVerified that ML.Samples  and Tests run.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4205","RelatedDescription":"Open PR \"Upgrade TF.Net version from 0.10.10 to 0.11.3\" (#4205)"},{"Id":"492480232","IsPullRequest":false,"CreatedAt":"2019-09-11T21:39:31","Actor":"ashbhandare","Number":"4204","RawContent":null,"Title":"Need to move from TF.NET version 0.10.10 to 0.11.3","State":"open","Body":"\r\n- ML.Net currently runs with Tensorflow.Net version 0.10.10, but there is a newer stable version of Tensorflow.Net 0.11.3 with improvements :https://www.nuget.org/packages/TensorFlow.NET/0.11.3\r\n- **What happened?**\r\nThere are build errors with TF.Net 0.11.3\r\n- **What did you expect?**\r\nNeed the required API changes to make ML.Net compatible with TF.Net 0.11.3\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4204","RelatedDescription":"Open issue \"Need to move from TF.NET version 0.10.10 to 0.11.3\" (#4204)"},{"Id":"492467529","IsPullRequest":false,"CreatedAt":"2019-09-11T21:07:27","Actor":"OmarJay1","Number":"4203","RawContent":null,"Title":"App Store","State":"open","Body":"Hello, I'm wondering if there's any intention of ML.NET working in Microsoft app store apps. I'm getting this error message when I run the App Cert Kit.\r\n\r\nI believe that these DLLs have to do with ML.NET because the error goes away when I don't use ML.NET.  Thanks.\r\n\r\n      <MESSAGES>\r\n          <MESSAGE TEXT=\"File C:\\Program Files\\WindowsApps\\AppName\\CpuMathNative.dll has failed the AppContainerCheck check.\" />\r\n          <MESSAGE TEXT=\"File C:\\Program Files\\WindowsApps\\AppName\\LdaNative.dll has failed the AppContainerCheck check.\" />\r\n        </MESSAGES>\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4203","RelatedDescription":"Open issue \"App Store\" (#4203)"},{"Id":"492461153","IsPullRequest":false,"CreatedAt":"2019-09-11T20:52:32","Actor":"harishsk","Number":"4202","RawContent":null,"Title":"RankingEvaluatorOptions has OutputGroupSummary as an internal field","State":"open","Body":"- **What happened?**\r\nThe OutputGroupSummary field of RankingEvaluatorOptions is marked as an internal field and and related RankingMetrics class does not include data resulting from turning on that option. \r\n\r\n- **What did you expect?**\r\nRankingMetrics should include the data from OutputGroupSummary and the options should support turning on that option.","Url":"https://github.com/dotnet/machinelearning/issues/4202","RelatedDescription":"Open issue \"RankingEvaluatorOptions has OutputGroupSummary as an internal field\" (#4202)"},{"Id":"490566509","IsPullRequest":true,"CreatedAt":"2019-09-11T16:53:46","Actor":"harishsk","Number":"4188","RawContent":null,"Title":"Added Onnx export functionality to PCATransformer","State":"closed","Body":"Fixes #4186 ","Url":"https://github.com/dotnet/machinelearning/pull/4188","RelatedDescription":"Closed or merged PR \"Added Onnx export functionality to PCATransformer\" (#4188)"},{"Id":"490566177","IsPullRequest":false,"CreatedAt":"2019-09-11T16:53:46","Actor":"harishsk","Number":"4186","RawContent":null,"Title":"PCA Transformer does not support exporting to Onnx","State":"closed","Body":"- **What did you do?**\r\nCreated a pipeline from with PCATranfsform and tried to export it to Onnx with - ConvertToOnnxProtobuf.\r\n\r\n- **What happened?**\r\nThe transform wasn't saved in the onnx graph\r\n\r\n- **What did you expect?**\r\nThe transform should be saved in the onnx graph\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4186","RelatedDescription":"Closed issue \"PCA Transformer does not support exporting to Onnx\" (#4186)"},{"Id":"492093533","IsPullRequest":false,"CreatedAt":"2019-09-11T08:33:47","Actor":"gerjanvl","Number":"4201","RawContent":null,"Title":"InvalidOperationException: Invalid TValue in GetGetter: 'Microsoft.ML.Data.VBuffer`1[System.Single]'","State":"open","Body":"### System information\r\n\r\n- Windows 10:\r\n- netcoreapp 2.2\r\n \r\n### Packages\r\nMicrosoft.ML 1.4.0-preview\r\nMicrosoft.ML.OnnxRuntime 0.5.0\r\nMicrosoft.ML.OnnxTransformer 1.4.0-preview\r\n\r\n### Issue\r\n\r\n- Used onnx model to create a prediction engine.\r\n- I get an exception when creating the prediction engine: InvalidOperationException: Invalid TValue in GetGetter: 'Microsoft.ML.Data.VBuffer`1[System.Single]'\r\n- I was expecting it to work everything looks right, the exception doesn't make it clear what's actually wrong. I could not debug the source code because it's inside a lambda function. \r\n\r\n### Source Code: \r\nhttps://github.com/GerjanVlot/BERT-ML.NET\r\n\r\n### Callstack:\r\n```\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.GenerateSetter(DataViewRow input, Int32 index, Column column, Delegate poke, Delegate peek)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase..ctor(TypedCursorable`1 parent, DataViewRow input, String channelMessage)\r\n   at Microsoft.ML.Data.TypedCursorable`1.GetRow(DataViewRow input)\r\n   at Microsoft.ML.PredictionEngineBase`2.PredictionEngineCore(IHostEnvironment env, InputRow`1 inputRow, IRowToRowMapper mapper, Boolean ignoreMissingColumns, SchemaDefinition outputSchemaDefinition, Action& disposer, IRowReadableAs`1& outputRow)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at ML.BERT.TestApp.Onnx.OnnxModelConfigurator`1.GetMlNetPredictionEngine[T]() in ML.BERT.TestApp\\Onnx\\OnnxModelConfigurator.cs:line 34\r\n   at ML.BERT.TestApp.Program.Main(String[] args) in ML.BERT.TestApp\\Program.cs:line 22\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4201","RelatedDescription":"Open issue \"InvalidOperationException: Invalid TValue in GetGetter: 'Microsoft.ML.Data.VBuffer`1[System.Single]'\" (#4201)"},{"Id":"491868237","IsPullRequest":false,"CreatedAt":"2019-09-10T19:59:12","Actor":"CESARDELATORRE","Number":"4200","RawContent":null,"Title":"[DNN Image Classification] Add the LoadFromDirectory() as convenient API","State":"open","Body":"We actually have a convenient _custom_ method named LoadFromDirectory() in sample apps which loads the images in a folder with one sub-folder per class (image type) so it is very straight forward for users to create/load the images with their related labels into a DataSet. See sample here:\r\n\r\nhttps://github.com/dotnet/machinelearning-samples/blob/master/samples/csharp/getting-started/DeepLearning_ImageClassification_Training/ImageClassification.Train/Program.cs#L129 \r\n\r\nThis method should work integrated with the upcoming approach that images themselves need also to be loaded as in-memory objects into a DataView, so the pipeline will train with in-memory images and when scoring with the generated model and using a PredictionEngine the user will also be able to classify an in-memory image. \r\n\r\nUser's feedback:\r\n\r\n_\"A couple of methods such as LoadFromDirectory are so useful that they may actually be candidates to include in the framework. I actually have a specific use case, with the same approach, where I don't supply meta-data but use the folder structure for labels instead\"_","Url":"https://github.com/dotnet/machinelearning/issues/4200","RelatedDescription":"Open issue \"[DNN Image Classification] Add the LoadFromDirectory() as convenient API\" (#4200)"},{"Id":"491818341","IsPullRequest":false,"CreatedAt":"2019-09-10T18:01:57","Actor":"lisahua","Number":"4199","RawContent":null,"Title":"How to handle columns with mix DateTime and numeric values","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: .Net 4.6\r\n- **.NET Version (eg., dotnet --info)**:  ML.Net 1.1.0\r\n\r\n### Issue\r\n\r\n- **What did you do?** We have a column with mix DateTime and numeric values\r\n- **What happened?**  The [PrimitiveDataViewType](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.primitivedataviewtype?view=ml-dotnet) does not have a type to specify our column type \r\n- **What did you expect?** Have a way to represent both `DateTime` and numeric values with a dateView type, most like a primitive data type.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\nWe want to have a DataViewType to represent a column with a mix of DateTime and numeric types.\r\n             ","Url":"https://github.com/dotnet/machinelearning/issues/4199","RelatedDescription":"Open issue \"How to handle columns with mix DateTime and numeric values\" (#4199)"},{"Id":"491527109","IsPullRequest":false,"CreatedAt":"2019-09-10T08:31:04","Actor":"Lelelo1","Number":"4198","RawContent":null,"Title":"Process memory limit when using Scda trainer with regression task?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro\r\n- **.NET Version (eg., dotnet --info)**: .NET Core SDK (reflecting any global.json):\r\n Version:   2.2.401\r\n Commit:    729b316c13\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI started training a model with scda trainer - part of regression task.\r\n- **What happened?**\r\nIt is taking very long time and process memory seem to be fixed to...:\r\n\r\n![VIsualStudio](https://user-images.githubusercontent.com/42244983/64596652-98a47700-d3b4-11e9-8d61-dd2d71b9e3d0.png)\r\n\r\n165 MB - while the machine has 8 gb of ram.\r\n\r\n- **What did you expect?**\r\n\r\nI am expecting the process to take more ram.\r\n\r\n### Source code / logs\r\n.\r\n\r\nConclusions:\r\nAs it is now the training will not go much faster using a computer with better hardware (ram and cpu) - since trainer seem to be limited to 50% cpu and 165MB RAM?","Url":"https://github.com/dotnet/machinelearning/issues/4198","RelatedDescription":"Open issue \"Process memory limit when using Scda trainer with regression task?\" (#4198)"},{"Id":"491434433","IsPullRequest":true,"CreatedAt":"2019-09-10T03:49:31","Actor":"yamachu","Number":"4197","RawContent":null,"Title":"Fix relation between IsSavedModel and isFrozen in DnnRetrainTransformer.SaveModel","State":"open","Body":"Fix: https://github.com/dotnet/machinelearning/issues/4191\r\n\r\nIsSavedModel returns true when loaded model is an-frozen model \r\nhttps://github.com/dotnet/machinelearning/blob/1503b0aa9cac997cff8b8bc7e2075eb23d61ad81/src/Microsoft.ML.Dnn/DnnUtils.cs#L137-L143\r\n\r\nbut now isFrozen variable is set true in spite of an-frozen model.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/3c02da5d75534265223e56aee9c5d2da53ea4b99/src/Microsoft.ML.Dnn/DnnRetrainTransform.cs#L681\r\n\r\n---\r\n\r\nChecks\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4197","RelatedDescription":"Open PR \"Fix relation between IsSavedModel and isFrozen in DnnRetrainTransformer.SaveModel\" (#4197)"},{"Id":"491298821","IsPullRequest":false,"CreatedAt":"2019-09-09T20:05:19","Actor":"nilimb2000","Number":"4196","RawContent":null,"Title":"Automl: feature importance for regression models ","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\nHow do i extract the feature importances for the regression models that automl builds. Something similar to automlexplainer in azure maybe?\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4196","RelatedDescription":"Open issue \"Automl: feature importance for regression models \" (#4196)"},{"Id":"490039346","IsPullRequest":true,"CreatedAt":"2019-09-09T16:31:36","Actor":"LittleLittleCloud","Number":"4179","RawContent":null,"Title":"pack CodeGen into mlnet","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4179","RelatedDescription":"Closed or merged PR \"pack CodeGen into mlnet\" (#4179)"},{"Id":"491121315","IsPullRequest":false,"CreatedAt":"2019-09-09T14:11:17","Actor":"luisquintanilla","Number":"4195","RawContent":null,"Title":"[DatabaseLoader] Error when using attributes (i.e ColumnName)","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 18362\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 2.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nTried to use `ColumnName` attribute in class that defines IDataView schema.  \r\n\r\n- **What happened?**\r\n\r\nWhen operating on the IDataView, I received the following error\r\n\r\n```text\r\nSystem.Reflection.TargetInvocationException: 'Exception has been thrown by the target of an invocation.'\r\n \r\nInner Exception\r\nIndexOutOfRangeException: Features\r\n```\r\n\r\n- **What did you expect?**\r\n\r\nNo error.\r\n\r\n### Source code / logs\r\n\r\nGiven the following data stored in a SQL Server DB\r\n\r\n![image](https://user-images.githubusercontent.com/46974588/64536954-fb7c0c80-d2e7-11e9-8a5b-531ddd267aa8.png)\r\n\r\nThe data schema is defined as such\r\n\r\n```csharp\r\npublic class HouseData\r\n{\r\n    public float Size { get; set; }\r\n\r\n    public float Price { get; set; }\r\n}\r\n```\r\n\r\nThe following code works:\r\n\r\n```csharp\r\nstring connectionString = @\"Connection-String\";\r\n\r\nstring sqlCommand = \"SELECT Size,Price FROM House\";\r\n\r\nMLContext mlContext = new MLContext();\r\n\r\nDatabaseLoader loader = mlContext.Data.CreateDatabaseLoader<HouseData>();\r\n\r\nDatabaseSource dbSource = new DatabaseSource(SqlClientFactory.Instance,connectionString,sqlCommand);\r\n\r\nIDataView data = loader.Load(dbSource);\r\n\r\n// Test Code\r\nIEnumerable<HouseData> housingData = mlContext.Data.CreateEnumerable<HouseData>(data, reuseRowObject: true);\r\n\r\nforeach (HouseData house in housingData)\r\n{\r\n    Console.WriteLine($\"{house.Size} costs {house.Price}\");\r\n}\r\n\r\nConsole.ReadKey();\r\n```\r\n\r\nHowever, when attributes are added to the schema class, it produces an error.\r\n\r\n```csharp\r\npublic class HouseData\r\n{\r\n    [ColumnName(\"Features\")]\r\n    public float Size { get; set; }\r\n\r\n    [ColumnName(\"Label\")]\r\n    public float Price { get; set; }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4195","RelatedDescription":"Open issue \"[DatabaseLoader] Error when using attributes (i.e ColumnName)\" (#4195)"},{"Id":"489653381","IsPullRequest":false,"CreatedAt":"2019-09-09T07:23:04","Actor":"larsbeck","Number":"4178","RawContent":null,"Title":"TfIdf setting in ProduceNGrams throws Exception","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro\r\n- **.NET Version (eg., dotnet --info)**: 3.0.0-preview8-28405-07\r\n\r\n### Issue\r\nProduceNGrams throws an InvalidOperationException \"The specified documents are all empty in column 'Tokens'\"\r\n\r\n- **What did you do?**\r\nChanged the parameter setting 'weighting' of type 'WeightingCriteria' from the standard 'WeightingCriteria.Tf' to 'WeightingCriteria.TfIdf' and then ran the code again.\r\n\r\n- **What happened?**\r\nThe exception gets thrown as described above\r\n\r\n- **What did you expect?**\r\nThe code, specifically the line 'var transformer = pipeline.Fit(dataview);' to run just as it did with setting WeightingCriteria.Tf.\r\n\r\n### Source code / logs\r\n\r\n```\r\nvar pipeline = _mlContext.Transforms.Text.NormalizeText(nameof(TransformedTextData.NormalizedText),\r\n                nameof(Profile.Text))\r\n                .Append(_mlContext.Transforms.Text.TokenizeIntoWords(nameof(TransformedTextData.Words),\r\n                    nameof(TransformedTextData.NormalizedText)))\r\n                .Append(_mlContext.Transforms.Text.RemoveDefaultStopWords(nameof(TransformedTextData.Words), nameof(TransformedTextData.Words), StopWordsRemovingEstimator.Language.German))\r\n                .Append(_mlContext.Transforms.Text.RemoveStopWords(nameof(TransformedTextData.Words), null, \"kontext\", \"&\"))\r\n                .Append(_mlContext.Transforms.Conversion.MapValueToKey(nameof(TransformedTextData.Tokens), nameof(TransformedTextData.Words)))\r\n                .Append(_mlContext.Transforms.Text.ProduceNgrams(nameof(TransformedTextData.Tokens), weighting: NgramExtractingEstimator.WeightingCriteria.TfIdf))\r\n                .Append(_mlContext.Transforms.Text.LatentDirichletAllocation(\r\n                    nameof(TransformedTextData.Features), nameof(TransformedTextData.Tokens), numberOfTopics: 10, numberOfSummaryTermsPerTopic:10));\r\n\r\n            // Fit to data.\r\n            var transformer = pipeline.Fit(dataview);\r\n```\r\n\r\nDoes ProduceNGrams not support the setting TfIdf as weighting? If it doesn't, which Transformer would one use to generate NGrams for LatentDirichletAllocation ?","Url":"https://github.com/dotnet/machinelearning/issues/4178","RelatedDescription":"Closed issue \"TfIdf setting in ProduceNGrams throws Exception\" (#4178)"},{"Id":"490809421","IsPullRequest":true,"CreatedAt":"2019-09-08T21:37:29","Actor":"harishsk","Number":"4194","RawContent":null,"Title":"Added onnx export functionality for MissingValueIndicatorTransformer","State":"open","Body":"Fixes #4192","Url":"https://github.com/dotnet/machinelearning/pull/4194","RelatedDescription":"Open PR \"Added onnx export functionality for MissingValueIndicatorTransformer\" (#4194)"},{"Id":"490805334","IsPullRequest":true,"CreatedAt":"2019-09-08T21:37:03","Actor":"harishsk","Number":"4193","RawContent":null,"Title":"Added onnx export functionality for MissingValueIndicatorTransformer","State":"closed","Body":"Fixes #4192 ","Url":"https://github.com/dotnet/machinelearning/pull/4193","RelatedDescription":"Closed or merged PR \"Added onnx export functionality for MissingValueIndicatorTransformer\" (#4193)"},{"Id":"490805302","IsPullRequest":false,"CreatedAt":"2019-09-08T20:55:14","Actor":"harishsk","Number":"4192","RawContent":null,"Title":"MissingValueIndicatorTransformer does not support exporting to onnx","State":"open","Body":"- **What did you do?**\r\nCreated a pipeline from with MissingValueIndicatorTransformer and tried to export it to Onnx with ConvertToOnnxProtobuf.\r\n\r\n- **What happened?**\r\nThe transform wasn't saved in the onnx graph\r\n\r\n- **What did you expect?**\r\nThe transform should be saved in the onnx graph\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4192","RelatedDescription":"Open issue \"MissingValueIndicatorTransformer does not support exporting to onnx\" (#4192)"},{"Id":"490774573","IsPullRequest":false,"CreatedAt":"2019-09-08T16:32:57","Actor":"yamachu","Number":"4191","RawContent":null,"Title":"[DNN Training] Failed save model in Microsoft.ML.Transforms.DnnTransformer.SaveModel","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: maxOS 10.14.6\r\n- **.NET Version (eg., dotnet --info)**: 3.0.100-preview9-014004\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\n  * Use `RetrainDnnModel` for training regression-based deep-neural-network model\r\n  * Try to save trained model\r\n\r\n- **What happened?**\r\n\r\nApplication throw unhandled exception: System.ArgumentNullException and crash\r\n\r\n- **What did you expect?**\r\n\r\nWe could save trained model\r\n\r\n### Source code / logs\r\n\r\n```\r\nUnhandled exception. System.ArgumentNullException: Value cannot be null. (Parameter 'value')\r\n   at System.IO.BinaryWriter.Write(String value)\r\n   at Microsoft.ML.Transforms.DnnTransformer.SaveModel(ModelSaveContext ctx)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.Microsoft.ML.ICanSaveModel.Save(ModelSaveContext ctx)\r\n   at Microsoft.ML.ModelSaveContext.SaveModel[T](RepositoryWriter rep, T value, String path)\r\n   at Microsoft.ML.ModelOperationsCatalog.Save(ITransformer model, DataViewSchema inputSchema, Stream stream)\r\n   at Microsoft.ML.ModelOperationsCatalog.Save(ITransformer model, DataViewSchema inputSchema, String filePath)\r\n   at VoiceConversionStarter.Console.Program.Train(TrainMcapOptions opts) in /Users/yamachu/Projects/github.com/yamachu/VoiceConversionStarter/VoiceConversionStarter.Console/Program.cs:line 100\r\n   at VoiceConversionStarter.Console.Program.<>c.<Main>b__2_0(TrainMcapOptions opts) in /Users/yamachu/Projects/github.com/yamachu/VoiceConversionStarter/VoiceConversionStarter.Console/Program.cs:line 118\r\n   at CommandLine.ParserResultExtensions.MapResult[TSource,TResult](ParserResult`1 result, Func`2 parsedFunc, Func`2 notParsedFunc)\r\n   at VoiceConversionStarter.Console.Program.Main(String[] args) in /Users/yamachu/Projects/github.com/yamachu/VoiceConversionStarter/VoiceConversionStarter.Console/Program.cs:line 116\r\n```\r\n\r\nI think this issue is not to check null in this line\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/8d51eee8047842ae72f5521bd55a9bec51460859/src/Microsoft.ML.Dnn/DnnTransform.cs#L1118-L1119\r\n\r\nThat field in my trained model is null\r\n<img width=\"548\" alt=\"スクリーンショット 2019-09-09 1 21 42\" src=\"https://user-images.githubusercontent.com/1955233/64491256-3e66c180-d2a1-11e9-967d-5501d6315d61.png\">\r\n\r\nfull source code: https://github.com/yamachu/VoiceConversionStarter/tree/pkg-update\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4191","RelatedDescription":"Open issue \"[DNN Training] Failed save model in Microsoft.ML.Transforms.DnnTransformer.SaveModel\" (#4191)"},{"Id":"490764734","IsPullRequest":true,"CreatedAt":"2019-09-08T15:01:04","Actor":"yaeldekel","Number":"4190","RawContent":null,"Title":"Svmlight loader and saver","State":"open","Body":"Fixes #4014 .","Url":"https://github.com/dotnet/machinelearning/pull/4190","RelatedDescription":"Open PR \"Svmlight loader and saver\" (#4190)"},{"Id":"490662881","IsPullRequest":false,"CreatedAt":"2019-09-07T17:56:20","Actor":"CESARDELATORRE","Number":"4189","RawContent":null,"Title":"[DNN Training] Add API/support for Model Interpretability of DNNs","State":"open","Body":"Once we have the foundational DNN training API stabilized, we should add DNN Model Interpretability APIs such as methods of type Saliency Methods and Feature Attribution (FA). \r\n\r\nFor further details, this is a high level summary:\r\nhttps://towardsdatascience.com/interpretability-of-deep-learning-models-9f52e54d72ab","Url":"https://github.com/dotnet/machinelearning/issues/4189","RelatedDescription":"Open issue \"[DNN Training] Add API/support for Model Interpretability of DNNs\" (#4189)"},{"Id":"490566314","IsPullRequest":true,"CreatedAt":"2019-09-07T00:13:06","Actor":"bpstark","Number":"4187","RawContent":null,"Title":"Modified how DataViewTypes are registered","State":"open","Body":"The DataViewManager registers DataViewTypes to determine how to\r\nrepresent the the data within ML.Net. However, there was a bug in how\r\ntypes were being queried. Types that were being registered via an\r\nAttribute were being added to the manager with only that Attribute.\r\nHowever, when queried from the manager all custom Attributes were being\r\npassed.\r\nTo solve this we need to only pass custom Attributes that are relevant\r\nto the Manager. All Type attributes now inherit from a single\r\nTypeAttribute class such that we can filter custom attributes for\r\nrelevant types.\r\n\r\nFixes #4121\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4187","RelatedDescription":"Open PR \"Modified how DataViewTypes are registered\" (#4187)"},{"Id":"490490534","IsPullRequest":false,"CreatedAt":"2019-09-06T19:36:54","Actor":"nicolehaugen","Number":"4185","RawContent":null,"Title":"Checkpoint method should be renamed to SaveCheckpoint","State":"open","Body":"ML.NET 1.3\r\n\r\nWhen working with Time Series\\SSA Forecasting, the method that is used for saving a model is called \"Checkpoint\":\r\n\r\n```Csharp\r\nforecastEngine.CheckPoint(mlContext, outputModelPath);\r\n```\r\n\r\nInstead, this method would be more intuitive if it were named according to a verb\\action - such as SaveCheckpoint().\r\n\r\nNote that this is also feedback from Cesar.","Url":"https://github.com/dotnet/machinelearning/issues/4185","RelatedDescription":"Open issue \"Checkpoint method should be renamed to SaveCheckpoint\" (#4185)"},{"Id":"490486888","IsPullRequest":false,"CreatedAt":"2019-09-06T19:26:45","Actor":"nicolehaugen","Number":"4184","RawContent":null,"Title":"Time Series - SSA Forecasting: Need to add API for performing calculations for comparing real vs. forecasted values","State":"open","Body":"ML.NET 1.3\r\n\r\nCurrently ML.NET doesn't provide any methods in the API for calculating accuracy of forecasted values compared to real observed values - this is when doing Time Series forecasting using SSA.\r\n\r\nIn looking at the [existing TLC documentation](https://microsoft.sharepoint.com/teams/TLC/SitePages/Time-series/Methodology.aspx), it provided the following calculations - ML.NET should do something similar:\r\n\r\n​Error Calculat​or\r\nOnce the expected value is produced by the time-series modeler component, it is compared against the actual observed value for the series at the time step to compute the amount of deviation. This calculation is done by the error calculator component and the result is called the Raw Score. The implicit assumption here is that the higher the absolute value of raw score at a timestamp, the more likely it is that the time-series is exhibiting an anomalous behavior at that timestamp. In TLC, we have implemented 5 error calculation functions that can be chosen by the user depending on the application.​​\r\n\r\nSigned Difference\r\nThe difference between the expected value and the observed value (this is the default error calculation function).\r\n \r\nAbsolute Difference\r\nThe absolute difference between the expected value and the observed value.\r\n\r\nSigned Proportion\r\nThe proportional difference between the expected value and the observed value.\r\n\r\nAbsolute Proportion\r\nThe absolute proportional difference between the expected value and the observed value.\r\n\r\nSquared Difference\r\nThe squared difference between the expected value and the observed value.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4184","RelatedDescription":"Open issue \"Time Series - SSA Forecasting: Need to add API for performing calculations for comparing real vs. forecasted values\" (#4184)"},{"Id":"490440860","IsPullRequest":false,"CreatedAt":"2019-09-06T17:50:27","Actor":"aslotte","Number":"4183","RawContent":null,"Title":"Forced shutdown during DNN training","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 version 1803\r\n- **.NET Version (eg., dotnet --info)**: .NET Core v2.2\r\n\r\n### Issue\r\nWhen training a DNN on classifying sounds based on audio spectrograms, with the Resetnet architecture, my computer shutdown. This has happened twice, but not every time I'm training the model. I have a Dell XPS15 with 32 gb of RAM. The only thing I can think of is that my fan cannot keep up (CPU is hitting 100% for 20 min), but I wanted to log it here as an issue in case this is a theme.\r\n\r\n- **What did you do?** I was training a DNN using the MultiClassifier with the Resnet architecture of audio spectrograms\r\n- **What happened?** My computer shutdown (twice)\r\n- **What did you expect?** My computer not to shutdown\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4183","RelatedDescription":"Closed issue \"Forced shutdown during DNN training\" (#4183)"},{"Id":"490440587","IsPullRequest":false,"CreatedAt":"2019-09-06T17:32:15","Actor":"CESARDELATORRE","Number":"4182","RawContent":null,"Title":"[DatabaseLoader] Create higher level convenient methods for DatabaseLoader","State":"open","Body":"As mentioned by Diego, these additions would help by simplifying the API usage for users even further and it should be pretty easy to implement for us: 👍 \r\n\r\n@divega commented: https://github.com/dotnet/machinelearning-samples/pull/617#pullrequestreview-284597248\r\n\r\n@CESARDELATORRE, I did a deferred review. The experience seems pretty good. \r\n\r\n1:\r\nAnd I agree with you that it could be even better with some sugar method that loads directly from the arguments of DatabaseSource.\r\n\r\n2:\r\nI can also see other possible shortcuts of similar nature. For example, although DbProviderFactory is the all encompassing root concept if you need everything from an ADO.NET provider, a DbConnection can give you everything but DbConnectionStringBuilder, and it is a much more familiar abstraction for most users than the DbProviderFactory. So, unless you need to manipulate connection strings in a provider agnostic way (not commonly an useful thing to do), you could make the sugar Load method generic on the provider's DbConnection type.\r\nAll in all, I would would love to meet with you and the devs and walk trough the product code and API. It is likely that more things like this will come up.\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/4182","RelatedDescription":"Open issue \"[DatabaseLoader] Create higher level convenient methods for DatabaseLoader\" (#4182)"},{"Id":"490155239","IsPullRequest":false,"CreatedAt":"2019-09-06T06:52:10","Actor":"crperez5","Number":"4181","RawContent":null,"Title":"Provided label column 'Status' was of type Single, but only type Boolean is allowed.","State":"closed","Body":"Hi,\r\n\r\nI'm using AutoML to auto-generate a model.\r\n\r\nInput file looks like the following:\r\n\"V1\",\"V2\",\"V3\",\"V4\",\"Status\"\r\n-86,-66,-66,4,0\r\n-84,-78,-61,65,0\r\n...\r\n\r\nOutput:\r\nFor further learning check: https://aka.ms/mlnet-cli\r\n|     Trainer                              Accuracy      AUC    AUPRC  F1-score  Duration #Iteration             |\r\n[Source=AutoML, Kind=Trace] Channel started\r\nException occured while exploring pipelines:\r\nProvided label column 'Status' was of type Single, but only type Boolean is allowed.\r\nSystem.ArgumentException: Provided label column 'Status' was of type Single, but only type Boolean is allowed.\r\n   at Microsoft.ML.CLI.CodeGenerator.CodeGenerationHelper.GenerateCode()\r\n   at Microsoft.ML.CLI.Program.<>c__DisplayClass1_0.<Main>b__0(NewCommandSettings options)\r\nPlease see the log file for more info.\r\nExiting ...\r\n\r\n\r\nIs this a bug?","Url":"https://github.com/dotnet/machinelearning/issues/4181","RelatedDescription":"Closed issue \"Provided label column 'Status' was of type Single, but only type Boolean is allowed.\" (#4181)"},{"Id":"490129313","IsPullRequest":false,"CreatedAt":"2019-09-06T04:55:46","Actor":"CESARDELATORRE","Number":"4180","RawContent":null,"Title":"[Clustering] Create/Add an additional trainer for Clustering: Affinity Propagation","State":"open","Body":"In ML.NET we currently only have the [KMeansTrainer](https://docs.microsoft.com/en-us/dotnet/machine-learning/resources/tasks#clustering).\r\n\r\nThe main challenge with that clustering trainer is that you need to provide the number of clusters to use (numberOfClusters param also known as k), and that's a very difficult number to figure out. THere are methods that can help, like the Elbow method, but still it is a challenge.\r\n\r\nThere are other clustering algorithms that doesn’t require in input the number of expected clusters like the **Affinity Propagation** algorithm. \r\nIt is relatively new (Presented in 2007) and it works by measuring the affinity between data items.\r\n\r\nFurther info about it:\r\nhttps://towardsdatascience.com/unsupervised-machine-learning-affinity-propagation-algorithm-explained-d1fef85f22c8 \r\n\r\nThe function that measures affinity between data items is one of the hyperparameters of the algorithm. \r\n\r\n**Affinity Propagation is an unsupervised machine learning algorithm that is particularly well suited for problems where we don’t know the optimal number of clusters.**\r\n\r\nAs an additional note, consider that K-means was first proposed for application in the field of statistics back in 1955.\r\n\r\nI suggest that, when possible, we implement and offer this additional clustering algorithm, especially when we currently just have one algorithm for Clustering (KMeansTrainer).","Url":"https://github.com/dotnet/machinelearning/issues/4180","RelatedDescription":"Open issue \"[Clustering] Create/Add an additional trainer for Clustering: Affinity Propagation\" (#4180)"},{"Id":"489648560","IsPullRequest":false,"CreatedAt":"2019-09-05T09:51:37","Actor":"yaeldekel","Number":"4177","RawContent":null,"Title":"Change the DnnImageFeaturizers packages to use models from the ONNX model zoo","State":"open","Body":"We should use the models from the [model zoo](https://github.com/onnx/models) to ensure compatibility with future versions of ONNX runtime.\r\n\r\nWe should also add tests for these packages, to ensure they work correctly.\r\n\r\n•\tAlexNet\r\n•\tResNet101\r\n•\tResNet50\r\n•\tResNet18\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4177","RelatedDescription":"Open issue \"Change the DnnImageFeaturizers packages to use models from the ONNX model zoo\" (#4177)"},{"Id":"489282428","IsPullRequest":false,"CreatedAt":"2019-09-04T17:03:46","Actor":"vera-dania","Number":"4176","RawContent":null,"Title":"System.AccessViolationException -- Loading tensorflow model","State":"open","Body":"### System information\r\n\r\n- **Windows 10 Pro for Workstations - 1809**:\r\n- **3.0.100-preview3-010431**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI am loading a tensorflow model using ML.NET Model.LoadTensorFlowModel method.\r\nReceived this exception:\r\n\r\n- **What happened?**\r\nSystem.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt. I am unable to locate the source of this exception. I only receive this error when running the application in debug mode.\r\n\r\n- **What did you expect?**\r\nMy model to successfully load and be able to make predictions.\r\n\r\n\r\n### Source code / logs\r\n\r\n      var pipline = context.Transforms.Conversion.MapValueToKey(\"LabelKey\", \"Label\")\r\n        .Append(context.Transforms.LoadImages(\"input\", \"images\", nameof(ImageData.ImagePath)))\r\n        .Append(context.Transforms.ResizeImages(\"input\", GenderSettings.ImageHeight, GenderSettings.ImageWidth, \"input\"))\r\n        .Append(context.Model.LoadTensorFlowModel(\"./modelGender/tensorflow_gender__graph.pb\")\r\n          .ScoreTensorFlowModel(new[] {\"cross_entropy\"}, new[] {\"input\"}, addBatchDimensionInput: true))\r\n        .Append(context.Transforms.Conversion.MapKeyToValue(\"PredictedLabelValue\", \"PredictedLabel\"))\r\n        .AppendCacheCheckpoint(context);\r\n\r\n\r\nIt is not showing any stacktrace or log.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4176","RelatedDescription":"Open issue \"System.AccessViolationException -- Loading tensorflow model\" (#4176)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-09-12T05:30:40.6085551Z","RunDurationInMilliseconds":796}