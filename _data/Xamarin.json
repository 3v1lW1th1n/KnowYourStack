{"Data":{"Blog":{"FeedItems":[{"Title":"Five-Star Apps with Mobile Center Test","PublishedOn":"2017-10-20T12:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Five-star mobile apps are all about consistent and predictable output. It&#8217;s not a good experience for users when an app suddenly crashes or doesn’t format correctly on their mobile screens. Developers can easily avoid these scenarios by testing for various scenarios on different devices, and Visual Studio Mobile Center makes it easy to test your mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/\">Five-Star Apps with Mobile Center Test</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/","RawContent":null},{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Thursday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null},{"Title":"Updating Xamarin.iOS Apps for the iPhone X","PublishedOn":"2017-10-11T18:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>There&#8217;s no doubt that one of the biggest announcements from Apple this year was the iPhone X. The new Super Retina display is edge-to-edge on the device, creating an immersive experience we had yet to see on iPhones. With the new screen changes on the iPhone X, developers may be asking themselves, &#8220;What do I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/\">Updating Xamarin.iOS Apps for the iPhone X</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/","RawContent":null},{"Title":"Build and Release Five-Star Apps Faster","PublishedOn":"2017-10-10T17:49:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The first step in the life of a mobile app is build automation, which builds the app and runs required tests to make sure the app follows required rules. Build automation is also the first step towards shipping high quality, five-star mobile apps. When building iOS and Android mobile applications, one of the main challenges [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/\">Build and Release Five-Star Apps Faster</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/","RawContent":null},{"Title":"Developing Real-Time Communication Apps with WebSocket","PublishedOn":"2017-10-09T21:17:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>WebSockets is a two-way communication protocol, or persistence communication channel over TCP connection, an extremely powerful protocol leveraged by numerous games, apps with chat functionality, and real-time apps such as stock tickers. In this blog post, we&#8217;ll discuss how to build a simple Xamarin chat room application that will leverage and connect to an ASP.NET [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/developing-real-time-communication-apps-with-websocket/\">Developing Real-Time Communication Apps with WebSocket</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/developing-real-time-communication-apps-with-websocket/","RawContent":null},{"Title":"DataBinding Power Moves You May Not Be Using (Yet)","PublishedOn":"2017-10-05T21:05:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>DataBinding is a fantastic feature that cleanly decouples your UI from the backing data models while providing the plumbing to move data back and forth as you need. But, are you getting the most out of the Binding features in Xamarin.Forms? Building on our previous Introduction to DataBinding and Advanced Data Binding posts, I’ll show [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/databinding-power-moves-you-may-not-be-using-yet/\">DataBinding Power Moves You May Not Be Using (Yet)</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/databinding-power-moves-you-may-not-be-using-yet/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6755664321","Type":"PullRequestEvent","CreatedAt":"2017-10-24T02:01:27","Actor":"akoeplinger","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/966","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Correctly set build tools version in CheckSignApk test\" (#966) at xamarin/xamarin-android","RelatedBody":"The test failed locally for me with:\r\n\r\n```\r\n/Users/alexander/dev/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets: \r\nerror : '/Users/alexander/Library/Developer/Xamarin/android-sdk-macosx/build-tools/23.0.0/apksigner' does not exist.\r\nYou need to install android-sdk build-tools 26.0.1 or above.\r\n```\r\n\r\nwhich is weird since it's looking into the 23.0.0 build tools which doesn't have apksigner even though the test specifies build tools 26.0.1.\r\n\r\nTurns out the test had a typo, it used AndroidBuildToolsVersion instead of AndroidSdkBuildToolsVersion so it fell back to 23.0.0 :)"},{"Id":"6755575843","Type":"PullRequestEvent","CreatedAt":"2017-10-24T01:26:29","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/965","RelatedDescription":"Opened pull request \"[tests] Export `$USE_MSBUILD=$(USE_MSBUILD)`\" (#965) at xamarin/xamarin-android","RelatedBody":"Context: 286b9c28\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/700/testReport/\r\n\r\n`Xamarin.ProjectTools` was updated in commit 286b9c28 to use `msbuild`\r\n(via `xabuild`) when `$USE_MSBUILD` is *not* `0`, and to continue\r\nusing `xbuild` (the historical default!) when `$USE_MSBUILD` is `0`.\r\n\r\nUnfortunately, *nothing exports `$USE_MSBUILD`*. Consequently, we\r\n*always* use `msbuild`/`xabuild`, unless the calling environment\r\nexplicitly exports it (which isn't the case on Jenkins).\r\n\r\nUpdate the `RUN_NUNIT_TEST` make `define` so that the `$USE_MSBUILD`\r\nenvironment variable is exported to the *value of* the\r\n`$(USE_MSBUILD)` make variable, IFF it's not the empty string.\r\nIf `$(USE_MSBUILD)` *is* the empty string, export `USE_MSBUILD=0`,\r\nwhich will cause `xbuild` to be used.\r\n\r\nWith luck, this will allow the current `Xamarin.Android.Build.Tests`\r\nfailures -- all 20 of them -- to be \"fixed\" until such time as all\r\n`Xamarin.Android.Build.Tests` tests *actually* pass w/ MSBuild."},{"Id":"6754898440","Type":"PullRequestEvent","CreatedAt":"2017-10-23T21:38:28","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/964","RelatedDescription":"Opened pull request \"[xabuild] interprocess locking via FileStream\" (#964) at xamarin/xamarin-android","RelatedBody":"Context in #954\r\nContext: http://aakinshin.net/blog/post/namedmutex-on-mono/\r\n\r\nThe Xamarin.Android.Build.Tests run xabuild.exe in parallel, which\r\nbrings up some interesting issues. xabuild.exe needs to overwrite a\r\nconfig file that is used by the `MSBuildApp` class. We cannot do a\r\n`File.Exists` check, because A) the file exists on Windows due to some\r\nassembly binding redirects, and B) we still need an interprocess lock.\r\n\r\nSo my solution after some trial and error:\r\n- Open a `FileStream` on the config file, retrying on `IOException`\r\n- Force `MSBuildApp`’s static constructor to run deterministically,\r\nwhile the `FileStream` is still open\r\n\r\nHopefully this hack isn’t _too_ terrible."},{"Id":"6754505498","Type":"PullRequestEvent","CreatedAt":"2017-10-23T20:10:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/962","RelatedDescription":"Merged pull request \"[tests] Don't use obsolete NDK API levels\" (#962) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=60185\r\n\r\nNewer versions of NDK don't include API 4 anymore but two of our tests specified\r\nthat they required that particular version to build. This caused the tests to\r\nfail because the android-4 platform path was nowhere to be found.\r\n\r\nBump the minimum SDK version to 9 (which is the lowest platform included in the NDK\r\nas of now)"},{"Id":"6754383151","Type":"PullRequestEvent","CreatedAt":"2017-10-23T19:43:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/957","RelatedDescription":"Merged pull request \"[Xamarin.ProjectTools] Get the actual Time Elapsed from the build.log\" (#957) at xamarin/xamarin-android","RelatedBody":"Sometimes out TimeOut tests fail if the build is a bit slow.\r\nThis is because we time the entire process of starting a new\r\nprocess to bringing in ALL the output data.\r\n\r\nSo lets parse the build.log and pull our the reported MSBuild\r\n\"Time Elapsed\" if we can."},{"Id":"6754376037","Type":"PullRequestEvent","CreatedAt":"2017-10-23T19:42:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/959","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix up message for the DesignTime timing test.\" (#959) at xamarin/xamarin-android","RelatedBody":"There was a spelling mistake in the DesignTime build timing test.\r\nAlso it was reporting the wrong time! So this commit fixes that.\r\nIt also makes the test `NonParallelizable`, this is because when\r\nits run in parallel with a bunch of other tests the timing is usually\r\noff and the test fails."},{"Id":"6754186296","Type":"PullRequestEvent","CreatedAt":"2017-10-23T19:00:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/960","RelatedDescription":"Merged pull request \"[Makefile] Add support for a Max Mono Version.\" (#960) at xamarin/xamarin-android","RelatedBody":"There are circumstances when we don't want to use the latest\r\nand greatest version of mono. On the CI servers we will want\r\nto keep to certain versions so that we have a stable build.\r\nBut on developer machines we will want to allow the developer\r\nto ignore such checks.\r\n\r\nThis commit adds support for a Max mono version. By default\r\nthis proeprty is ignored. But on build systems we should pass\r\n\r\n\t/p:IgnoreMaxMonoVersion=False\r\n\r\nto ensure that the max version is applied and we run against\r\na stable version of mono."},{"Id":"6753966534","Type":"PullRequestEvent","CreatedAt":"2017-10-23T18:13:50","Actor":"joj","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/963","RelatedDescription":"Opened pull request \"Made _ResolveLibraryProjectImports not work on design time\" (#963) at xamarin/xamarin-android","RelatedBody":"Having _ResolveLibraryProjectImports work on design time results in a\r\ncache file that doesn't include nuget packages (when using\r\nPackageReferences). Design time is most of the times too early (it\r\nhappens first immediately after unfold). Without this fix, the first\r\nbuild fails on the APT task because resources are not found. They are\r\nnot found because a cache already exists, so library imports are not\r\nprocessed again. And that cache is missing anything coming from nuget.\r\nAn alternative option is to remove that file on nuget restore. If that's\r\nbetter please close this non-merged and go for that :)"},{"Id":"6753383751","Type":"PullRequestEvent","CreatedAt":"2017-10-23T16:11:54","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/962","RelatedDescription":"Opened pull request \"[tests] Don't use obsolete NDK API levels\" (#962) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=60185\r\n\r\nNewer versions of NDK don't include API 4 anymore but two of our tests specified\r\nthat they required that particular version to build. This caused the tests to\r\nfail because the android-4 platform path was nowhere to be found.\r\n\r\nBump the minimum SDK version to 9 (which is the lowest platform included in the NDK\r\nas of now)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6755600582","Type":"PullRequestEvent","CreatedAt":"2017-10-24T01:36:21","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1222","RelatedDescription":"Opened pull request \"Basic Right-To-Left Support\" (#1222) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdds support for right-to-left layouts.\r\n\r\nAs with UWP, respecting the device's layout direction based on the selected language/locale is the developer's explicit choice and does not happen automatically. Set the `FlowDirection` of the root View/Page to the `Device.Info.CurrentFlowDirection` value. All other child views with `MatchParent` will inherit this value. \r\n\r\nAll Views default to the `MatchParent` `FlowDirection`. A `View` without a `Parent` will default to `LeftToRight`, and this value will be recursively passed down to the `View`'s children, unless they have an explicitly set `FlowDirection` of their own.\r\n\r\nRenderers can access the `IVisualElementController.EffectiveFlowDirection` to get the actual specified direction for a View/Page and whether the value was inherited (implicit) or explicitly set.\r\n\r\n### Known Limitations\r\n\r\n#### General\r\n- NavigationPage button location, toolbar item location, and transition animation is currently controlled by the device locale, not the FlowDirection setting.\r\n- CarouselPage swipe direction does not flip.\r\n- Images need to mirror when they are explicitly set to right-to-left. May also need to support asset suffixes.\r\n- TextDirection property needs to be added.\r\n\r\n#### Android\r\n- Searchbar orientation is controlled by the device locale, not the FlowDirection setting.\r\n\r\n#### iOS\r\n- Stepper  orientation is controlled by the device locale, not the FlowDirection setting.\r\n\r\n#### UWP\r\n- ContextAction text is not right-aligned\r\n- Editor text is not right-aligned\r\n\r\n### Testing\r\n\r\n#### Android:\r\nUsers will need to set `android:supportsRtl=\"true\"` and set Android's `MinSDKVersion` to 17 or higher.\r\n\r\n**Behavior change**: For API >=17, we now set the `TextAlignment` instead of the `Gravity` of the `EditText` when we change the `HorizontalTextAlignment` property.\r\n\r\nTo test device-specified RTL on Android, either select a language that is RTL or enable `Force RTL layout direction` in the Developer Options. You will also need to add your language to the list of languages your app supports in the Info.plist. See https://developer.xamarin.com/guides/ios/advanced_topics/localization_and_internationalization/ for more information. If you do change your language and region, you may encounter an exception with `DatePicker`s. See Bug 59077 for more information and a workaround.\r\n\r\n#### iOS:\r\n\r\nThere's no easy way to test device-specified RTL on Xamarin.iOS. The `pseudolanguage` options are Xcode only. You will need to change the language _and_ region to an RTL locale in order to test it. Please note that once you do so, `DatePicker`s will throw an exception if you do not include the resources required for alternate calendars. For example, if you're testing in Arabic, be sure to select `mideast` in the `iOSBuild` `Internationalization` section.\r\n\r\n#### UWP:\r\n\r\nSimilar to iOS, you will need to change the language _and_ region to an RTL locale in order to test device-specified RTL. You will also need to add the language resource to your `Package.appxmanifest` for your app to support it.\r\n\r\n#### Visual comparisons\r\n\r\nScreenshots coming!\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n- `enum EffectiveFlowDirection`\r\n- `enum FlowDirection`\r\n- `IVisualElementController.EffectiveFlowDirection`\r\n- `VisualElement.FlowDirection`\r\n- `Device.Info.CurrentFlowDirection`\r\n\r\n### Behavioral Changes ###\r\n\r\nAndroid: For API >=17, we now set the `TextAlignment` instead of the `Gravity` of the `EditText` when we change the `HorizontalTextAlignment` property.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (manual!)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6754569946","Type":"PullRequestEvent","CreatedAt":"2017-10-23T20:24:09","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1221","RelatedDescription":"Opened pull request \"Fix NRE introduced by 59882\" (#1221) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix NRE introduced by 59882. Expect application can be null before OnStart is called. Actually, while fixing another bug, assumed it was non-null which caused NRE.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60337\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6755537973","Type":"PullRequestEvent","CreatedAt":"2017-10-24T01:11:08","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2916","RelatedDescription":"Opened pull request \"[foundation] Fix DateTime from NSDate seconds (decimal) precision loss when converting. Fix #32022\" (#2916) at xamarin/xamarin-macios","RelatedBody":"The explicit operator did all it's math using `long` (the internal\nrepresentation for DateTime) so the fractional part of the NSDate was\nlost. E.g.\n\n> original:  530499149.239266\n> roundtrip: 530499149.0\n\nHowever even when using `double` computations we're still losing some\nprecision - parts just can be held in the `long` (Ticks) representation\nof DateTime.\n\n> original:  530499149.239266\n> roundtrip: 530499149.23927\n\nReference:\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=32022"},{"Id":"6754286655","Type":"PullRequestEvent","CreatedAt":"2017-10-23T19:22:18","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2891","RelatedDescription":"Merged pull request \"[macOS] Fix Introspection and API tests\" (#2891) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6754261284","Type":"PullRequestEvent","CreatedAt":"2017-10-23T19:16:39","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2816","RelatedDescription":"Merged pull request \"[MetalPerformanceShaders] Activate bindings for Xamarin.Mac and add n…\" (#2816) at xamarin/xamarin-macios","RelatedBody":"…ew APIs\r\n\r\nRebased to the xcode9.1 branch, replacing https://github.com/xamarin/xamarin-macios/pull/2589"},{"Id":"6753864530","Type":"PullRequestEvent","CreatedAt":"2017-10-23T17:52:16","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2901","RelatedDescription":"Merged pull request \"[macos] Fix pdb mismatch when saving assemblies processed by mmp\" (#2901) at xamarin/xamarin-macios","RelatedBody":"- Teach mmp's resolver to ask for symbol reading from Cecil\r\n- Customer reports XM > 3.0 had broken library behavior but not before, possibly new cecil version?"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"922491050886868992","CreatedAt":"2017-10-23T15:53:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":22,"RawContent":null},{"Id":"922284943169990659","CreatedAt":"2017-10-23T02:14:00+00:00","UserScreenname":"xamarinhq","Text":"Add #pushnotifications to your Android apps with #Xamarin, #Firebase Cloud Messaging, and #Azure Notification Hubs: https://t.co/9uyWpi2qlp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":77,"FavoriteCount":32,"RawContent":null},{"Id":"921881787009249280","CreatedAt":"2017-10-21T23:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":29,"RawContent":null},{"Id":"921466915117260801","CreatedAt":"2017-10-20T20:03:27+00:00","UserScreenname":"xamarinhq","Text":"Get five-star app quality every time with testing from #VSMobileCenter: https://t.co/sUR6Ctm1xk https://t.co/gGQOYtNmkC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":13,"RawContent":null},{"Id":"921409932993482752","CreatedAt":"2017-10-20T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/8uG0wblORA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":18,"RawContent":null},{"Id":"921089184667983872","CreatedAt":"2017-10-19T19:02:29+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar on building better games with #Unity3D and Microsoft #Azure: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":35,"RawContent":null},{"Id":"921044016610922496","CreatedAt":"2017-10-19T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"920749716610207745","CreatedAt":"2017-10-18T20:33:33+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/jFJho4InOr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":42,"RawContent":null},{"Id":"920684397212438529","CreatedAt":"2017-10-18T16:14:00+00:00","UserScreenname":"xamarinhq","Text":"Request reviews with iOS 10.3’s SKStoreReviewController: https://t.co/HgugUTrN81","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":5,"RawContent":null},{"Id":"920320046701989894","CreatedAt":"2017-10-17T16:06:12+00:00","UserScreenname":"xamarinhq","Text":"Try out updates to Xamarin Live, a new Mac connection workflow, and more in the Visual Studio 2017 15.5 Preview:… https://t.co/iB8bIZkhW1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":81,"FavoriteCount":40,"RawContent":null},{"Id":"920032724999725056","CreatedAt":"2017-10-16T21:04:29+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":102,"FavoriteCount":53,"RawContent":null},{"Id":"919958111670165505","CreatedAt":"2017-10-16T16:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"919747480769712128","CreatedAt":"2017-10-16T02:11:02+00:00","UserScreenname":"xamarinhq","Text":"Add “mobile developer” to your resume with @XamarinU, starting with a 30-day free trial: https://t.co/bVpjALvmoy https://t.co/fiA4quVFQb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":15,"RawContent":null},{"Id":"919305335759953927","CreatedAt":"2017-10-14T20:54:06+00:00","UserScreenname":"xamarinhq","Text":"Weekend project: add some new features to your #Xamarin Android apps with our Android Support Library v26 overview:… https://t.co/49gaLayBhU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":22,"RawContent":null},{"Id":"918566588483342336","CreatedAt":"2017-10-12T19:58:35+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/j4LE7PWPMd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":33,"RawContent":null},{"Id":"918507552811487232","CreatedAt":"2017-10-12T16:04:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build better apps with @BritchDavid's eBook on \"Enterprise Application Patterns using #XamarinForms\": https://t.co/YryVqlrejk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":10,"RawContent":null},{"Id":"918186189634572288","CreatedAt":"2017-10-11T18:47:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/OmUwO59Fdx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":32,"RawContent":null},{"Id":"918142648204124160","CreatedAt":"2017-10-11T15:54:00+00:00","UserScreenname":"xamarinhq","Text":"#XamarinDevDays are a great way to learn how to build, test, &amp; connect native apps with #Xamarin! Find one near you: https://t.co/Ytw07Fr9eL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":16,"RawContent":null},{"Id":"917846344714391552","CreatedAt":"2017-10-10T20:16:35+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSMobileCenter: https://t.co/XHMCHeVNSB https://t.co/3hhv3CG6uh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2017-10-24T05:30:39.3449637Z","RunDurationInMilliseconds":3746}