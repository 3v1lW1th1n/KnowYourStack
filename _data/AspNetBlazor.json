{"Data":{"GitHubIssues":{"Issues":[{"Id":"332617029","IsPullRequest":false,"CreatedAt":"2018-06-15T01:29:01","Actor":"vertonghenb","Number":"1007","RawContent":null,"Title":"[Bind] Nullable Bool unsupported (bool?)","State":"open","Body":"A lot of work has been done for the bind method, let's add the one for nullable bool. `bool?`\r\n\r\nCurrent error:\r\nUncaught (in promise) Error: System.ArgumentException: 'bind' does not accept values of type System.Nullable`1[[System.Boolean, mscorlib, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]. To read and write this value type, wrap it in a property of type string with suitable getters and setters.","Url":"https://github.com/aspnet/Blazor/issues/1007","RelatedDescription":"Open issue \"[Bind] Nullable Bool unsupported (bool?)\" (#1007)"},{"Id":"332525013","IsPullRequest":false,"CreatedAt":"2018-06-14T21:23:36","Actor":"davidbmasterson","Number":"1004","RawContent":null,"Title":"Blazor running c# on the server-side and in Electron - A Ramble ","State":"closed","Body":"When I saw the demo of the c# code running on the server-side and sending the diff to the client\r\n\r\nI thought my head would explode with all the things this would simplify for my team\r\n\r\nWe are a bespoke software company. We do not have a product, we write system for clients ranging from WinForms systems that track 1,000,000 tyres leaving a warehouse each year, to websites that quote business insurance to insurance brokers, to system for managing large plastic bag manufacturers and giant moulding factories and many more things. \r\n\r\n**What all these projects have in common are: -**\r\n\r\n- \trelatively small user bases, between 25 to maybe 500 users in total per application, not all of which use the system at the same time\r\n- \tComplicated and often changeable data collection and validation requirements\r\n- \tinteraction with a SQL database, usually in azure. \r\n- \tuser identity and roles.\r\n- \tUser location within the UK so no more 500 miles from Cardiff or London data centres\r\n- \tA web based application of some sort, even if it is only a part of a larger collection of applications\r\n\r\nSo potential down sides mentioned by Steve, Latency, Server Workload etc. would not be a problem for us. \r\n\r\n**What we could gain**\r\n\r\n- Objects never leave server, so are kept up to date in one place and do not need to be passed around\r\n- Direct access to database \r\n- Direct access to active directory \r\n- \tBusiness logic, form validation etc all in one place, no need to part validate on the client and then revalidate on the server.\r\n- \tsingle upgrade point, no worrying about cached copies. \r\n- \tfull .net\r\n- \tload speed\r\n- \tchanges to business logic not needing to be sent to the client, or handled via an api.\r\n- \tNo sensitive data needed on the client\r\n- \tNo business logic on the client\r\n\r\nWhile I appreciate that for huge large scale global applications hosting the application on the server using your own compute is a negative, but for relatively small user base, enterprise applications this seems to me like having my cake and getting to eat it too. \r\n\r\nIf it was possible I would like to see all three options built out, however my thoughts on importance have changed. \r\n\r\nI started out seeing Blazor as a way I could replace angular or react etc. with a .net process which was really cool.\r\n\r\nBut the idea of having the option of running on the server or running like an installed application within electron allowing a multi-platform solution with access to local resources for the client compute option, these seem more compelling propositions than just removing the pain of having to code JavaScript (or even TypeScript) but still being limited by the browser manufacturers choices.\r\n\r\nI apologies if this turned into a bit of a ramble, but I just wanted to let you guys know just how excited this project has got me and for a programmer of 30+ years that is quite an achievement.\r\n\r\nThanks for all your hard work on this, just so you know I will be absolutely gutted if this does not get the go ahead in all 3 forms, **but can I have the server-side version first please.**\r\n","Url":"https://github.com/aspnet/Blazor/issues/1004","RelatedDescription":"Closed issue \"Blazor running c# on the server-side and in Electron - A Ramble \" (#1004)"},{"Id":"332557823","IsPullRequest":false,"CreatedAt":"2018-06-14T20:45:21","Actor":"vertonghenb","Number":"1006","RawContent":null,"Title":"Service Side vs Client Side","State":"open","Body":"First of all, what you guys(the Blazor **and** the Mono team) are doing is amazing, keep it up!\r\n\r\nI do believe we should weigh out the pro's vs cons on short- and long term. Since we can use .NET Core on the server side now -which is proven to be performant and stable- we don't have to worry about the bugs, feature requests and release pace of the Mono team. Therefore we might want to consider to first focus on the server side and once Mono to .WASM is stable enough we should take on the client-side, since we can focus on Blazor itself and be less dependent on the release pace of Mono. \r\n\r\nAs a final note, there are use cases for both implementations but let's use something that is stable and move Blazor itself forward without having to worry about some core dependencies.\r\n\r\nAdditional:\r\nIs there a template we can play with for the Server Side?\r\nAny idea when the 'experimental' phase could be over? 2-3 months, a year, two years?","Url":"https://github.com/aspnet/Blazor/issues/1006","RelatedDescription":"Open issue \"Service Side vs Client Side\" (#1006)"},{"Id":"332554242","IsPullRequest":false,"CreatedAt":"2018-06-14T20:33:29","Actor":"vertonghenb","Number":"1005","RawContent":null,"Title":"[Interop] Pass Action<T> / Delegate in object","State":"open","Body":"I'm currently porting the Web Notifications API from JavaScript to Blazor see: [Blazor.Notifications](https://github.com/vertonghenb/Blazor.Notifications). \r\n\r\nTo do so I'm passing an object via interop and registering the `onClick` functions via the new features of the interop introduced in 0.4.0 to callback to C# functions. However it would be nice if we could pass `Action<UIMouseEventArgs>` in the object directly via interop to JavaScript.\r\n\r\nIs this even possible?","Url":"https://github.com/aspnet/Blazor/issues/1005","RelatedDescription":"Open issue \"[Interop] Pass Action<T> / Delegate in object\" (#1005)"},{"Id":"332495440","IsPullRequest":false,"CreatedAt":"2018-06-14T17:30:11","Actor":"danroth27","Number":"1003","RawContent":null,"Title":"Minify blazor.js","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1003","RelatedDescription":"Open issue \"Minify blazor.js\" (#1003)"},{"Id":"332457776","IsPullRequest":false,"CreatedAt":"2018-06-14T16:31:19","Actor":"skumarvenkat","Number":"1002","RawContent":null,"Title":"Blazor application showing blank page in browser","State":"closed","Body":"Hello:\r\n\r\nApplication not display anything in browser, I don't know what wrong I am doing. How to know what is missing or anything need to configure?\r\n\r\nMy visual studio version is 15.7.3\r\n\r\nFlight finder:\r\n![image](https://user-images.githubusercontent.com/120073/41422456-f3aa57c6-6fc6-11e8-91c9-e7affd649a2f.png)\r\n\r\nThanks\r\n","Url":"https://github.com/aspnet/Blazor/issues/1002","RelatedDescription":"Closed issue \"Blazor application showing blank page in browser\" (#1002)"},{"Id":"332455484","IsPullRequest":false,"CreatedAt":"2018-06-14T15:34:37","Actor":"mrpmorris","Number":"1001","RawContent":null,"Title":"State is not being updated on button click","State":"open","Body":"1: Download the source from this branch https://github.com/mrpmorris/blazor-fluxor/tree/bug/StateNotChanging\r\n\r\n2: Set this project as your startup project MiddlwareSample.Server (in the 04-MiddlewareSample solution folder)\r\n\r\n3: Run it\r\n\r\n4: Now click either of the buttons. Both should update their own counter, but neither do. (If it works then refresh the page and try again to break it).\r\n\r\nIf you get rid of the `@inherits` line from `index.cshtml` then the counter example with in-view state works (the bottom button) but then the global-state change detection cannot work.\r\n\r\nThis worked in 0.30","Url":"https://github.com/aspnet/Blazor/issues/1001","RelatedDescription":"Open issue \"State is not being updated on button click\" (#1001)"},{"Id":"332445032","IsPullRequest":false,"CreatedAt":"2018-06-14T15:29:45","Actor":"masonwheeler","Number":"1000","RawContent":null,"Title":"URL parameters do not get decoded","State":"closed","Body":"`@page \"/user/{Item}\"`\r\n\r\nIf I navigate to `/user/Mason Wheeler`, I expect the `Item` property to contain the string \"Mason Wheeler\".  Instead it contains the string \"Mason%20Wheeler\".","Url":"https://github.com/aspnet/Blazor/issues/1000","RelatedDescription":"Closed issue \"URL parameters do not get decoded\" (#1000)"},{"Id":"332424244","IsPullRequest":false,"CreatedAt":"2018-06-14T15:28:36","Actor":"sylvainonweb","Number":"998","RawContent":null,"Title":"Really slow performance (list of 1000 items)","State":"closed","Body":"It takes more than 10 seconds to show a list of 1000 items (compared to Angular or React which takes less than 2 seconds).\r\n\r\nTo reproduce it, use the Visual Studio Blazor template and change the SampleDataController like this :\r\n\r\n```\r\n [HttpGet(\"[action]\")]\r\n        public IEnumerable<WeatherForecast> WeatherForecasts()\r\n        {\r\n            var rng = new Random();\r\n            return Enumerable.Range(1, 1000).Select(index => new WeatherForecast\r\n            {\r\n                Date = DateTime.Now.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = $\"Summary {index}\"\r\n            });\r\n        }\r\n```","Url":"https://github.com/aspnet/Blazor/issues/998","RelatedDescription":"Closed issue \"Really slow performance (list of 1000 items)\" (#998)"},{"Id":"332430207","IsPullRequest":false,"CreatedAt":"2018-06-14T14:33:49","Actor":"fileman","Number":"999","RawContent":null,"Title":"Create new issue template","State":"open","Body":"Since many issue was related to slow performance, blank screen due to wrong sdk version, server pkg in blazor proj, why not create e issue template with something like:\r\n\r\n**Read this before post new Issue**\r\n1. dotnet -version = 2.1.300\r\n2. runtime was not optimized yet so performance can be slow\r\n3. nuget pkg for server side should not work in blazor client proj (ex. EFCore)\r\n4. other recurrent question\r\n","Url":"https://github.com/aspnet/Blazor/issues/999","RelatedDescription":"Open issue \"Create new issue template\" (#999)"},{"Id":"332354741","IsPullRequest":false,"CreatedAt":"2018-06-14T13:26:05","Actor":"mikebrind","Number":"994","RawContent":null,"Title":"Blazor Component generated class names should avoid potential clashes with member names","State":"closed","Body":"In other MS frameworks (e.g. Razor Pages, Web Pages), generated view class names have a prefix or suffix added that minimises the chances of a member being declared with the same name as the generated class e.g. `Pages_Product`. A Blazor component named Product.cshtml results in a class named \"Product\". \r\n\r\nI have been caught out a few times now adding a member name that matches the generated class name, whereas this is not something I need to think about with other frameworks. Can the generated class name be prefixed with `Blazor_` or similar?","Url":"https://github.com/aspnet/Blazor/issues/994","RelatedDescription":"Closed issue \"Blazor Component generated class names should avoid potential clashes with member names\" (#994)"},{"Id":"332387555","IsPullRequest":false,"CreatedAt":"2018-06-14T13:23:08","Actor":"majorimi","Number":"995","RawContent":null,"Title":"Custom index.html for Blazor","State":"closed","Body":"Is there any way to use a custom \"index.html\"? If not, is it on the road-map?\r\n\r\nBecause I think it would be great because adding a custom index.html for your project could open the possibility to:\r\n\r\n- Target a DOM element for Blazor code, like Angular, React... So part of the page could be static HTML and some DIV would be replaced with the rendered application. (I think it require some change in Blazor to accept the Id of the element)\r\n- Customizable \"Loading page\", instead of the currently used simple \"Loading...\" message. (It should work out of the box).\r\n","Url":"https://github.com/aspnet/Blazor/issues/995","RelatedDescription":"Closed issue \"Custom index.html for Blazor\" (#995)"},{"Id":"332393705","IsPullRequest":false,"CreatedAt":"2018-06-14T13:15:27","Actor":"Andrzej-W","Number":"997","RawContent":null,"Title":"Quotation marks in bind, onclick, etc. - bug or feature?","State":"closed","Body":"In `cshtml` file we can write something like this:\r\n```html\r\n<input bind=\"@MyProperty\" />\r\n<button onclick=\"@MyClickHandler\">Click Me</button>\r\n```\r\nor exactly the same, but without quotation marks\r\n```html\r\n<input bind=@MyProperty />\r\n<button onclick=@MyClickHandler>Click Me</button>\r\n```\r\nIs it bug or undocumented feature? It confuses some people - read comments in #127\r\nI have browsed documentation and there is only one place in \"Introduction\" where Razor expression is used without quotation marks:\r\n```html\r\n<button onclick=@OnOK>OK</button>\r\n```\r\nIn all other places quotation marks are used.","Url":"https://github.com/aspnet/Blazor/issues/997","RelatedDescription":"Closed issue \"Quotation marks in bind, onclick, etc. - bug or feature?\" (#997)"},{"Id":"332390974","IsPullRequest":false,"CreatedAt":"2018-06-14T12:57:14","Actor":"majorimi","Number":"996","RawContent":null,"Title":"VS shouldn't offer to scaffold MVC controllers inside Blazor client apps","State":"open","Body":"Currently with Blazor 0.4 when you try to add a new Controller VS 2017 shows the dialog below:\r\n![image](https://user-images.githubusercontent.com/7632824/41413153-8194b6d8-6fe2-11e8-98f6-5928dada073f.png)\r\n\r\nHowever no mater what you choose it will hang VS for minutes, or indefinitely. So most of the times I have to kill the process. But it doesn't mater VS was able to finish the setup or not because you wont be able to build that project again... \r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\trzc generate exited with code 1.\tBlazorTest\tC:\\Users\\imre\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\RazorCompilation.targets\t184\t\r\n","Url":"https://github.com/aspnet/Blazor/issues/996","RelatedDescription":"Open issue \"VS shouldn't offer to scaffold MVC controllers inside Blazor client apps\" (#996)"},{"Id":"332218068","IsPullRequest":false,"CreatedAt":"2018-06-14T10:36:46","Actor":"vertonghenb","Number":"991","RawContent":null,"Title":"Blazor.invokeDotNetMethod Pass parameter","State":"closed","Body":"Is it possible to pass a parameter coming from JS to C#? Can't find any docs on this yet.","Url":"https://github.com/aspnet/Blazor/issues/991","RelatedDescription":"Closed issue \"Blazor.invokeDotNetMethod Pass parameter\" (#991)"},{"Id":"332260739","IsPullRequest":false,"CreatedAt":"2018-06-14T10:34:12","Actor":"gpeipman","Number":"992","RawContent":null,"Title":"'Router' cannot find any component with a route for '/' with 0.4.0","State":"closed","Body":"Hi,\r\nI'm trying to upgrade my [Blazor demo application](https://github.com/gpeipman/BlazorDemo) to 0.4.0. It uses code-behind for Blazor pages and it works fine with 0.3.0. When trying to run it on 0.4.0 I get the following error to browser console: Error: System.InvalidOperationException: 'Router' cannot find any component with a route for '/'.\r\n\r\nI added full stack trace shown in browser as formatting got lost in GitHub textbox: \r\n[blazor-exception-trace.txt](https://github.com/aspnet/Blazor/files/2100963/blazor-exception-trace.txt)\r\n\r\nAre there any additional steps for upgrading besides ones given at blog post here: https://blogs.msdn.microsoft.com/webdev/2018/06/07/blazor-0-4-0-experimental-release-now-available/ ?\r\n","Url":"https://github.com/aspnet/Blazor/issues/992","RelatedDescription":"Closed issue \"'Router' cannot find any component with a route for '/' with 0.4.0\" (#992)"},{"Id":"331979808","IsPullRequest":false,"CreatedAt":"2018-06-14T10:33:51","Actor":"TheCamel","Number":"989","RawContent":null,"Title":"Demo ==> freeze and error in console after second call","State":"closed","Body":"Hello,\r\nfrom the demo app, i customize the fetchdata page to call and display my data from my api. It woks once. I click on counter, then fetch....this is freezing with errors\r\n\r\nmy test code\r\n\r\nUser auth = new User() { Culture = \"FR-fr\", Login = \"USER\", Password = \"USER\", IdProfil=\"244\" };\r\n        auth = await Http.PostJsonAsync<User>(\r\n            \"http://localhost/Web.Api/User/Login\", auth);\r\n        forecasts = await Http.GetJsonAsync<List<DisplayAlarmBase>>(\r\n            string.Format(\"http://localhost/Web.Api/Event/GetAlarms?since={0}&token={1}\",\r\n            DateTime.Now.AddDays(-200), auth.Token)\r\n         );\r\n        await Http.PostJsonAsync(\r\n            string.Format(\"http://localhost/Web.Api/User/Logout?token={0}\", auth.Token), null );\r\n\r\n![blazor1](https://user-images.githubusercontent.com/7381872/41352185-fc1166f6-6f18-11e8-958a-2b7071a31800.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/989","RelatedDescription":"Closed issue \"Demo ==> freeze and error in console after second call\" (#989)"},{"Id":"332312666","IsPullRequest":false,"CreatedAt":"2018-06-14T09:03:21","Actor":"TheCamel","Number":"993","RawContent":null,"Title":"asm.js not served by default on IIS (no mime type for .mem files)","State":"open","Body":"Hi, \r\nwith the solution i provide in #989 ;\r\n- if i deploy under an application Default Web Site/Test \r\n             ==> url rewrite does not work for all links in the index.html - got five 404 (not found)\r\n- if i deploy Under a new TEST web site (configured on the same folder)\r\n             ==>404 on edge\r\n             ==>work on chrome\r\nsee the screenshot\r\n-left side : Edge and chrome on Default Web Site/Test are not working\r\n-right side : Edge and chrome on /TEST\r\n![blazor_deploy](https://user-images.githubusercontent.com/7381872/41402415-89195c1c-6fc2-11e8-8a0a-add803ad95df.png)\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/993","RelatedDescription":"Open issue \"asm.js not served by default on IIS (no mime type for .mem files)\" (#993)"},{"Id":"332179654","IsPullRequest":false,"CreatedAt":"2018-06-13T21:58:50","Actor":"bangclash","Number":"990","RawContent":null,"Title":"Blazor/Electron","State":"closed","Body":"I saw the Blazor/Electron demo on ASP.NET Community Standup - June 12, 2018. Looks very promising. I hope you continue with this experiment. This will give developers another option for cross platform desktop development. Thanks.","Url":"https://github.com/aspnet/Blazor/issues/990","RelatedDescription":"Closed issue \"Blazor/Electron\" (#990)"},{"Id":"331936237","IsPullRequest":false,"CreatedAt":"2018-06-13T21:57:03","Actor":"etmendz","Number":"987","RawContent":null,"Title":"Add TagAttribute for component properties","State":"closed","Body":"While the ParameterAttribute allows a property to be used as a component attribute (ex. where MyParameter is [Parameter], thus `<MyCustomComponent MyParameter=...>`), the TagAttribute allows a property to be used as a component's child tag. Ex. where Template is [Tag]:\r\n\r\n```\r\n    <MyCustomComponent>  \r\n        <Template>  \r\n            ...\r\n        </Template>  \r\n    </MyCustomComponent>  \r\n```\r\n\r\nThis is subtly suggested in #404. A possible side-effect is that a property can be both [Parameter] and [Tag], allowing it to be used as a component attribute or child tag. Either way, the idea is that the contents, in-line or declarative, are assigned to the property.\r\n\r\nIn a declaration/usage, it should be an error to use the same [Parameter][Tag] property as both attribute and tag. Either one but not both, so that the ff. is an error:\r\n\r\n```\r\n    <MyCustomComponent MyParameterTag=...>  \r\n        <MyParameterTag>  \r\n            ...\r\n        </MyParameterTag>  \r\n    </MyCustomComponent>  \r\n```\r\n\r\nBecause MyParameterTag is used as both parameter and tag in this declaration, there is no way to know which content to keep. Should it be a design-time or compile-time error?","Url":"https://github.com/aspnet/Blazor/issues/987","RelatedDescription":"Closed issue \"Add TagAttribute for component properties\" (#987)"},{"Id":"331856723","IsPullRequest":false,"CreatedAt":"2018-06-13T21:55:49","Actor":"zefubachs","Number":"986","RawContent":null,"Title":"Target Netstandard2.0 in Microsoft.AspNetCore.Blazor.Server package","State":"closed","Body":"Currently the [Microsoft.AspNetCore.Blazor.Server](https://dotnet.myget.org/feed/blazor-dev/package/nuget/Microsoft.AspNetCore.Blazor.Server) package targets `netcoreapp2.0`.\r\nThis prevents aspnetcore webapps targeting the full framework from using it to server blazor client apps.\r\n\r\nIs there a specific reason behind this decision?\r\n\r\nA proposed change would be to change the targetframework to `netstandard2.0`.","Url":"https://github.com/aspnet/Blazor/issues/986","RelatedDescription":"Closed issue \"Target Netstandard2.0 in Microsoft.AspNetCore.Blazor.Server package\" (#986)"},{"Id":"331838160","IsPullRequest":false,"CreatedAt":"2018-06-13T21:54:00","Actor":"abhishekgoenka","Number":"985","RawContent":null,"Title":"JSON serialize/deserialize performance is very poor with large JSON file","State":"closed","Body":"To test performance, I took JSON file of 482kb. It takes around 15seconds to deserialize 482kb of data.\r\n![image](https://user-images.githubusercontent.com/14522198/41330214-a8b29eb8-6eef-11e8-807c-ea51e4c3789b.png)\r\n\r\n```C#\r\npublic async Task PerfTest()\r\n{\r\n        Console.WriteLine(\"Perf Test\");\r\n        System.Diagnostics.Stopwatch sw = System.Diagnostics.Stopwatch.StartNew();\r\n        PerformanceData[] perfData = await Http.GetJsonAsync<PerformanceData[]>(\"sample-data/MOCK_DATA.json\");\r\n        Console.WriteLine($\"Took {sw.ElapsedMilliseconds}ms to deserialize MOCK_DATA.json\");\r\n\r\n}\r\n\r\npublic class PerformanceData\r\n {\r\n        public int id { get; set; }\r\n        public string first_name { get; set; }\r\n        public string last_name { get; set; }\r\n        public string email { get; set; }\r\n        public string gender { get; set; }\r\n        public string ip_address { get; set; }\r\n}\r\n```\r\n\r\nWhere as it takes only 115ms, if I run the same code in .NET Core console app. It doesn't look to be `SimpleJson.DeserializeObject<T>(json)` issue. \r\n![image](https://user-images.githubusercontent.com/14522198/41330326-75fce860-6ef0-11e8-893e-e2bf44e28971.png)\r\n\r\n\r\n[MOCK_DATA.zip](https://github.com/aspnet/Blazor/files/2096608/MOCK_DATA.zip)\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/985","RelatedDescription":"Closed issue \"JSON serialize/deserialize performance is very poor with large JSON file\" (#985)"},{"Id":"331961943","IsPullRequest":false,"CreatedAt":"2018-06-13T11:54:57","Actor":"RemiBou","Number":"988","RawContent":null,"Title":"Form with @onsubmit sends POST to server","State":"open","Body":"This started with Blazor 0.4.\r\n\r\nOn my form I have a \"@onsubmit\" handler. When I click on the button with type=\"submit\" the event is not raised but a classic POST is sent to the server.\r\n\r\n[My File](https://github.com/RemiBou/Toss.Blazor/blob/master/Toss/Toss.Client/Shared/LoginClassic.cshtml)\r\n\r\nAnd then i get an error \"The SPA default page middleware could not return the default page ...\" it might be connected to issue #951 or #803 ","Url":"https://github.com/aspnet/Blazor/issues/988","RelatedDescription":"Open issue \"Form with @onsubmit sends POST to server\" (#988)"},{"Id":"331787323","IsPullRequest":false,"CreatedAt":"2018-06-13T03:29:17","Actor":"daniel007","Number":"984","RawContent":null,"Title":"Blazor potentially no longer client-side technology?","State":"closed","Body":"Hi,\r\n\r\nI watched today's ASP.NET Community Standup stream, and although the Electron demo was impressive, I'm somewhat surprised that the team is now seriously considering changing direction and running Blazor on the server. While there are some valid scenarios (and I think this should definitely be an option in the future), what got me (and others) so excited about this technology was the fact that it is purely client-side framework (webserver serving only static files).\r\n\r\nTo be honest, I was hoping that by this time (has it been a year since the first Blazor demo?) I would already be writing production apps in what I think is the best UI framework that Microsoft has been working on for quite some time. Wasn't this project supposed to be given a go/no go in May?\r\n\r\nThanks and keep up the great work! Very impressive what such a small team has been able to accomplish so far!\r\n","Url":"https://github.com/aspnet/Blazor/issues/984","RelatedDescription":"Closed issue \"Blazor potentially no longer client-side technology?\" (#984)"},{"Id":"331650347","IsPullRequest":false,"CreatedAt":"2018-06-12T15:54:13","Actor":"PicoDevices","Number":"983","RawContent":null,"Title":"DateTimeOffset client side always show UTC Time","State":"open","Body":" **var time = DateTimeOffset.Now;**\r\n**time.ToLocalTime().ToString(\"yyy-MM-dd HH:mm:ss\")}\"\r\ntime.ToUniversalTime().ToString(\"yyy-MM-dd HH:mm:ss\")}\"**\r\nBoth cases show the same result: UTC time.","Url":"https://github.com/aspnet/Blazor/issues/983","RelatedDescription":"Open issue \"DateTimeOffset client side always show UTC Time\" (#983)"},{"Id":"331548727","IsPullRequest":false,"CreatedAt":"2018-06-12T15:30:57","Actor":"chassq","Number":"980","RawContent":null,"Title":"Route Not Found","State":"closed","Body":"I added some custom project files (cshtml) to my 0.3.0 blazor client project. When I updated to 0.4.0 I could not navigate to the custom pages I had added. The exception I saw in the Chrome Tools was that a Route could not be Found. I checked the project file and found a bunch of entries for the custom files (see issue #316). Once I removed those entries my blazor project worked as expected. This may be in the release notes but I did not see it at first glance...\r\n\r\nHope this helps someone...","Url":"https://github.com/aspnet/Blazor/issues/980","RelatedDescription":"Closed issue \"Route Not Found\" (#980)"},{"Id":"331638192","IsPullRequest":false,"CreatedAt":"2018-06-12T15:24:59","Actor":"Worble","Number":"982","RawContent":null,"Title":"Right clicking local anchor tags automatically navigates you instead of displaying a context menu","State":"open","Body":"### Title\r\nRight clicking local anchor tags automatically navigates you instead of displaying a context menu\r\n\r\n### Functional impact\r\nUsers cannot use any of the context menu items when right clicking anchor tags\r\n\r\n### Minimal repro steps\r\nGiven that you have 2 pages defined, say \"/\" and \"/home\", right clicking this `<a href=\"/home\">Home<a/>` on the \"/\" page will cause you to instantly navigate to home instead of displaying the usual browser context menu.\r\n\r\n### Expected result\r\nViewing of the browser context menu\r\n\r\n### Actual result\r\nThe user is navigated to the anchor as if they left clicked it\r\n\r\n### Further technical details\r\n This does not happen for links outside of the scope of the router, for example `<a href=www.google.com>Google</a>` or `<a href=/images/image.jpg>Image</a>`","Url":"https://github.com/aspnet/Blazor/issues/982","RelatedDescription":"Open issue \"Right clicking local anchor tags automatically navigates you instead of displaying a context menu\" (#982)"},{"Id":"331578638","IsPullRequest":false,"CreatedAt":"2018-06-12T13:25:45","Actor":"TheCamel","Number":"981","RawContent":null,"Title":"Blank page...","State":"closed","Body":"I have the 15.7.0319 installed on VS2017 15.7.2.....All templates Blazor or ASP hosted give me a blank page after \"loading\"....I don't know where to search for more information. Please Help if possible.","Url":"https://github.com/aspnet/Blazor/issues/981","RelatedDescription":"Closed issue \"Blank page...\" (#981)"},{"Id":"331512581","IsPullRequest":false,"CreatedAt":"2018-06-12T09:39:48","Actor":"SteveSandersonMS","Number":"979","RawContent":null,"Title":"Add UrlHelper.NavigateTo overload that forces a full page reload","State":"open","Body":"Inspired by the scenario in #962.\r\n\r\nIf you want to trigger a file download by navigating to an endpoint where the server will return something with a `Content-Disposition` header, or if you somehow are combining multiple client-side apps, you'd sometimes want navigation to bypass the usual \"internal navigation\" logic.","Url":"https://github.com/aspnet/Blazor/issues/979","RelatedDescription":"Open issue \"Add UrlHelper.NavigateTo overload that forces a full page reload\" (#979)"},{"Id":"331380025","IsPullRequest":false,"CreatedAt":"2018-06-11T23:01:22","Actor":"Scepheo","Number":"978","RawContent":null,"Title":"dotnet command with path parameter uses parent folder casing","State":"open","Body":"To reproduce (note the casing):\r\n\r\n1. `dotnet new blazor -o Repro`\r\n2. `dotnet build repro/Repro.csproj`\r\n\r\nThis fails with a whole bunch of errors about not being able to find the namespace `Repro.Shared`, because the build uses the path name specified in the dotnet build/run/publish command as the namespace name. This means that e.g. MainLayout.g.i.cs *defines* the namespace `repro.Shared`, but everything *uses* `Repro.Shared`.","Url":"https://github.com/aspnet/Blazor/issues/978","RelatedDescription":"Open issue \"dotnet command with path parameter uses parent folder casing\" (#978)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-15T05:30:02.8613958Z","RunDurationInMilliseconds":1257}