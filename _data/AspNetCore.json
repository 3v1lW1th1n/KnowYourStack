{"Data":{"Blog":{"FeedItems":[{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery, bootstrap, or Angular libraries. Maybe you copy these from a previous...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7546564298","Type":"IssuesEvent","CreatedAt":"2018-04-18T03:38:57","Actor":"orobert91","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3068","RelatedDescription":"Opened issue \"Enhancement proposal: Dependency injection support using an attribute\" (#3068) at aspnet/Home","RelatedBody":"Instead of having to assign the instance to a field in the constructor manually:\r\n\r\n```\r\npublic class MyClass\r\n{\r\n\tprivate ClassToInject _classToInject;\r\n\r\n\tpublic MyClass(ClassToInject _classToInject) {\r\n\t\t_classToInject = classToInject;\r\n\t}\r\n}\r\n```\r\n\r\nAllow this kind of syntax for dependency injection, like most frameworks:\r\n\r\n```\r\npublic class MyClass\r\n{\r\n\t[Inject]\r\n\tprivate ClassToInject _classToInject;\r\n}\r\n```\r\n\r\nThis would save a lot of code, much easier to maintain and much more readable when there is a lot of dependencies."},{"Id":"7546295658","Type":"IssuesEvent","CreatedAt":"2018-04-18T02:06:45","Actor":"eobeda","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3043","RelatedDescription":"Closed issue \"microsoft.aspnetcore.app.2.1.0-preview2-final.nupkg , corrupt ???\" (#3043) at aspnet/Home","RelatedBody":"Is the microsoft.aspnetcore.app.2.1.0-preview2-final.nupkg package built correctly ( served via Nuget.org ) ?\r\n\r\nIt is only 4k and does not appear to contain any valid 'lib' files. Also the \"C:\\Program Files\\dotnet\\shared\\\" directory is not populated with any preview2  files, so IIS Express fails within VS.\r\n\r\n\r\nThanks for checking\r\nEd\r\n\r\n\r\n**UPDATE:** With the release of the \"2.1.0-preview2-final shared framework.\" files, things are now working as would be expected.   Thanks very much for the help and support "},{"Id":"7545418014","Type":"IssuesEvent","CreatedAt":"2018-04-17T21:34:03","Actor":"achandlerwhite","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3067","RelatedDescription":"Opened issue \"Request: Use DI for the IOptionsCache internal to IOptions<T> \" (#3067) at aspnet/Home","RelatedBody":"I am using a derived implementation of IOptionsCache to for certain multitenant situations and while IOptionsSnapshot<T> and IOptionsMonitor<T> use DI to get the cache, IOptions<T> does not. For my own code I work around this by using IOptionsMonitor<T>, but if other code uses IOptions<T> I have no way to use my custom cache implementation.\r\n\r\nIs this something that could please be considered?"},{"Id":"7544888820","Type":"IssuesEvent","CreatedAt":"2018-04-17T19:51:44","Actor":"bszarko","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3066","RelatedDescription":"Opened issue \"DataProtectionProvider.Create() throws an exception during certificate protected key encryption when Fips is enabled\" (#3066) at aspnet/Home","RelatedBody":"### Title\r\nDataProtectionProvider.Create() throws an exception during certificate protected key encryption when Fips is enabled.\r\n\r\n### Functional impact\r\nShared cookie authentication does not work on systems with Fips enabled\r\n\r\n### Minimal repro steps\r\n1. Enable Fips compliant algorithms on the system running the MVC app\r\n2. Download and compile the following MVC solution at https://github.com/bszarko/Study/\r\n3. Deploy to IIS 7.5\r\n4. Import Dev.SharedCookieTest.Cert02.pfx into cert store localmachine, my\r\n5. Give AppPool identity permissions to the certificate's private key\r\n6. Open a desktop browser and navigate to the application\r\n\r\n### Expected result\r\nA key should be generated and encrypted (protected by certificate) using a Fips compliant algorithm. \r\n\r\n### Actual result\r\nException\r\n\"This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms\"\r\n\r\n### Further technical details\r\nWhens Fips is disabled this setup works but throws an exception when Fips is enabled.\r\n\r\n// Test project\r\nhttps://github.com/bszarko/Study/\r\n\r\nTests:\r\nOS: Windows & & Windows 2008 R2 SP1\r\nIIS 7.5.7600, AppPool using a Service Account\r\nFrameworks: 4.6.1, 4.6.2, 4.7.1, netstandard 2.0\r\nVisual Studio 2015 Enterprise & Visual Studio 2017 Community\r\n\r\nI also tried adding crypto mappings to the machine.config in hopes that something other than RijndaelManaged was used.\r\n\r\n\"This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms\"\r\n\r\n[InvalidOperationException: This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms.]\r\n   System.Security.Cryptography.RijndaelManaged..ctor() +5256144\r\n   System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement inputElement, X509Certificate2 certificate) +477\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.Microsoft.AspNetCore.DataProtection.XmlEncryption.IInternalCertificateXmlEncryptor.PerformEncryption(EncryptedXml encryptedXml, XmlElement elementToEncrypt) +200\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.EncryptElement(XElement plaintextElement) +394\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.Encrypt(XElement plaintextElement) +47\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element) +407\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate) +1402\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate) +136\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded) +599\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now) +12\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow) +513\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) +84\r\n\r\n[CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.]\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) +821\r\n   Microsoft.Owin.Security.DataHandler.SecureDataFormat`1.Protect(TData data) +92\r\n   Microsoft.Owin.Security.Cookies.<ApplyResponseGrantAsync>d__b.MoveNext() +1334\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<ApplyResponseCoreAsync>d__b.MoveNext() +218\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<ApplyResponseAsync>d__8.MoveNext() +475\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<TeardownAsync>d__5.MoveNext() +215\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<Invoke>d__0.MoveNext() +968\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.<RunApp>d__5.MoveNext() +194\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.<DoFinalWork>d__2.MoveNext() +184\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.StageAsyncResult.End(IAsyncResult ar) +117\r\n   System.Web.AsyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +365\r\n   System.Web.HttpApplication.ExecuteStepImpl(IExecutionStep step) +195\r\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +128\r\n\r\nOwin Startup\r\n\r\npublic void ConfigureAuth(IAppBuilder app)\r\n\t\t{\r\n\t\t\t// these don't seem to change the behavior\r\n\t\t\tif (CryptoConfig.AllowOnlyFipsAlgorithms)\r\n\t\t\t{\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(AesCryptoServiceProvider),\r\n\t\t\t\t\t\"AES\",\r\n\t\t\t\t\t\"AesCryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.AesCryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.AES\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(SHA256CryptoServiceProvider),\r\n\t\t\t\t\t\"SHA256\",\r\n\t\t\t\t\t\"SHA256CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA256CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA256\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(SHA256CryptoServiceProvider),\r\n\t\t\t\t\t\"SHA512\",\r\n\t\t\t\t\t\"SHA512CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA512CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA512\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tvar encryptionSettings = new AuthenticatedEncryptorConfiguration()\r\n\t\t\t{\r\n\t\t\t\tEncryptionAlgorithm = EncryptionAlgorithm.AES_256_CBC,\r\n\t\t\t\tValidationAlgorithm = ValidationAlgorithm.HMACSHA256\r\n\t\t\t};\r\n\r\n\t\t\t// apply AppPool identity or service account permissions to registry path\r\n\t\t\tvar regPath = @\"SOFTWARE\\SharedCookieTest\\Keys\";\r\n\t\t\tRegistry.LocalMachine.CreateSubKey(regPath, true);\r\n\r\n\t\t\t/*\r\n\t\t\t * Certificate Thumbprints\r\n\t\t\t * 6bee3f190055703c0dcd01e7c433462069549762 - dev.sharedcookietest.cert02\r\n\t\t\t * d74e3a5413047996a10bda4661d296ca7f741ff8 - Dev.SharedCookieTest.Cert01\r\n\t\t\t*/\r\n\r\n\t\t\tvar store = new X509Store(StoreName.My, StoreLocation.LocalMachine);\r\n\t\t\tstore.Open(OpenFlags.OpenExistingOnly);\r\n\t\t\tvar cert = store.Certificates\r\n\t\t\t\t.OfType<X509Certificate2>()\r\n\t\t\t\t.FirstOrDefault(c => c.Thumbprint.Equals(\"6bee3f190055703c0dcd01e7c433462069549762\", StringComparison.CurrentCultureIgnoreCase));\r\n\r\n\t\t\tvar protectionProvider = DataProtectionProvider.Create(\r\n\t\t\t\tnew DirectoryInfo($@\"{HostingEnvironment.MapPath(\"~\")}\\keys\"),\r\n\t\t\t\toptions =>\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\t\t\t\t\toptions.UseCryptographicAlgorithms(encryptionSettings);\r\n\r\n\t\t\t\t\t//options.UseCustomCryptographicAlgorithms(\r\n\t\t\t\t\t//\tnew CngCbcAuthenticatedEncryptorConfiguration()\r\n\t\t\t\t\t//\t{\r\n\t\t\t\t\t//\t\tEncryptionAlgorithm = \"AES\",\r\n\t\t\t\t\t//\t\t//EncryptionAlgorithmProvider = WhatShouldThisBe?,//\"Advanced Encryption Standard\",//\"ECDiffieHellmanCng\",//\"BCryptCloseAlgorithmProvider\",//\"MS_ENH_RSA_AES_PROV\",\r\n\t\t\t\t\t//\t\tEncryptionAlgorithmKeySize = 256,\r\n\t\t\t\t\t//\t\tHashAlgorithm = \"SHA256\"\r\n\t\t\t\t\t//\t\t//HashAlgorithmProvider = WhatShouldThisBe?//null//\"SHA256CryptoServiceProvider\"//\"Microsoft Enhanced RSA and AES Cryptographic Provider\"\r\n\t\t\t\t\t//\t});\r\n\r\n\t\t\t\t\toptions.PersistKeysToRegistry(Registry.LocalMachine.OpenSubKey(regPath, true));\r\n\t\t\t\t\toptions.ProtectKeysWithCertificate(cert);\r\n\t\t\t\t});\r\n\r\n\t\t\tvar dataProtector = protectionProvider.CreateProtector(\r\n\t\t\t\t\"CookieAuthenticationMiddleware\",\r\n\t\t\t\t\"Cookie\",\r\n\t\t\t\t\"v2\");\r\n\r\n\t\t\t// Enable the application to use a cookie to store information for the signed in user\r\n\t\t\t// and to use a cookie to temporarily store information about a user logging in with a third party login provider\r\n\t\t\t// Configure the sign in cookie\r\n\t\t\tapp.UseCookieAuthentication(new CookieAuthenticationOptions\r\n\t\t\t{\r\n\t\t\t\tTicketDataFormat = new AspNetTicketDataFormat(new DataProtectorShim(dataProtector)),\r\n\t\t\t\tAuthenticationType = DefaultAuthenticationTypes.ApplicationCookie,\r\n\t\t\t\tAuthenticationMode = Microsoft.Owin.Security.AuthenticationMode.Active,\r\n\t\t\t\tCookieDomain = \"localhost\",\r\n\t\t\t\tCookieName = \".AspNet.SharedCookie\",\r\n\t\t\t\tCookiePath = \"/\",\r\n\t\t\t\tCookieSecure = CookieSecureOption.SameAsRequest\r\n\t\t\t});\r\n\t\t}"},{"Id":"7543490645","Type":"IssuesEvent","CreatedAt":"2018-04-17T15:39:00","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3034","RelatedDescription":"Closed issue \"Flaky test: System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory\" (#3034) at aspnet/Home","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=442272&tab=buildResultsDiv&buildTypeId=XPlat_Windows_Win10Universe#testNameId1329483692832033125) sometimes with the following error:\r\n\r\n```\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-Keys' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 89\r\n======= Failed test run #2 ==========\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-KeysTemp' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 55\r\n```\r\n\r\nFuture instances of this failure can be tracked [here](http://aspnetci/project.html?projectId=XPlat&buildTypeId=&tab=testDetails&testNameId=1329483692832033125&order=TEST_STATUS_DESC&branch_XPlat=__all_branches__&itemsCount=50)."},{"Id":"7540552107","Type":"IssuesEvent","CreatedAt":"2018-04-17T06:55:51","Actor":"zxyao145","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3065","RelatedDescription":"Opened issue \"How to change session in filter?\" (#3065) at aspnet/Home","RelatedBody":"Hi,\r\nI'm writing a action filter, the session's value only can be changed in the filter. And when I next enter this filter, the value of the session is still the old.\r\nPlease help me, thanks a lot!\r\n ```\r\napp.Use(async (context, next) =>\r\n{\r\n        context.Session.SetString(\"IsFirst\", \"TT\");\r\n        await next();\r\n});\r\n\r\n\r\n\r\npublic override void OnActionExecuting(ActionExecutingContext filterContext)     \r\n{\r\n    var isFisrt = CurrentHttpContext.Current.Session.GetString(\"IsFirst\");//isFisrt always is \"TT\"\r\n    if (isFisrt == \"TT\")\r\n    {\r\n        CurrentHttpContext.Current.Session.SetString(\"IsFirst\", \"FF\");\r\n        var isFisrt2 = CurrentHttpContext.Current.Session.GetString(\"IsFirst\");//isFisrt always is \"FF\"\r\n        //Dosomething\r\n    }\r\n    base.OnActionExecuting(filterContext);\r\n} \r\n```"},{"Id":"7540277948","Type":"IssuesEvent","CreatedAt":"2018-04-17T05:36:32","Actor":"TanvirArjel","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3064","RelatedDescription":"Opened issue \"Response cache does not work for the view that contain form element\" (#3064) at aspnet/Home","RelatedBody":"Response cache does not work on the following method which returns view containing a form element.If the form element is removed from the view then response cache works. why it is happening?\r\n\r\n   ```\r\n    [Route(\"Contact\")]\r\n    [ResponseCache(Duration = 3600)] //Does not working for this method\r\n    public IActionResult Contact()\r\n    {\r\n        return View();\r\n    }\r\n\r\n    [HttpPost]\r\n    [Route(\"Contact\")]\r\n    public IActionResult Contact(ContactViewModel contactViewModel, IFormFile attachment)\r\n    {\r\n        //Necessary opertaion goes here\r\n        return\r\n        View(contactViewModel);\r\n    }\r\n\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7546746864","Type":"PullRequestEvent","CreatedAt":"2018-04-18T04:50:27","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2066","RelatedDescription":"Merged pull request \"Use correct MessagePack in Benchmarks\" (#2066) at aspnet/SignalR","RelatedBody":"@sebastienros "},{"Id":"7546710024","Type":"IssuesEvent","CreatedAt":"2018-04-18T04:35:27","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2069","RelatedDescription":"Opened issue \"flaky test: Microsoft.AspNetCore.SignalR.Tests.EndToEndTests.ConnectionCanSendAndReceiveDifferentMessageSizesWebSocketsTransport\" (#2069) at aspnet/SignalR","RelatedBody":"```\r\n[xUnit.net 00:00:14.4555490]     Microsoft.AspNetCore.SignalR.Tests.EndToEndTests.ConnectionCanSendAndReceiveDifferentMessageSizesWebSocketsTransport(message: \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"...) [FAIL]\r\n\r\n  Failed   Microsoft.AspNetCore.SignalR.Tests.EndToEndTests.ConnectionCanSendAndReceiveDifferentMessageSizesWebSocketsTransport(message: \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"...)\r\n\r\n\u001b[39;49m\u001b[31mRUNDOTNET : error Message:  [/Users/travis/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n\r\n\u001b[39;49m   System.Exception : 1 error(s) logged.\r\n\r\n  Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager - FailedDispose - Failed disposing connection yTeG2nC1VbY0hQOwC6ydHA.\r\n\r\n  ===================\r\n\r\n  System.Net.WebSockets.WebSocketException (0x80004005): The WebSocket is in an invalid state ('CloseReceived') for this operation. Valid states are: 'Open, CloseSent'\r\n\r\n     at System.Net.WebSockets.WebSocketValidate.ThrowIfInvalidState(WebSocketState currentState, Boolean isDisposed, WebSocketState[] validStates)\r\n\r\n     at System.Net.WebSockets.ManagedWebSocket.ReceiveAsync(ArraySegment`1 buffer, CancellationToken cancellationToken)\r\n\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n\r\n     at System.Net.WebSockets.WebSocket.ReceiveAsync(Memory`1 buffer, CancellationToken cancellationToken)\r\n\r\n     at Microsoft.AspNetCore.Http.Connections.Internal.Transports.WebSocketsTransport.StartReceiving(WebSocket socket) in /_/src/Microsoft.AspNetCore.Http.Connections/Internal/Transports/WebSocketsTransport.cs:line 147\r\n\r\n     at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n\r\n     at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n\r\n     at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n\r\n     at Microsoft.AspNetCore.SignalR.Tests.EchoConnectionHandler.OnConnectedAsync(ConnectionContext connection) in /_/test/Microsoft.AspNetCore.SignalR.Tests/EchoConnectionHandler.cs:line 16\r\n\r\n     at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.ExecuteApplication(ConnectionDelegate connectionDelegate, HttpConnectionContext connection) in /_/src/Microsoft.AspNetCore.Http.Connections/Internal/HttpConnectionDispatcher.cs:line 385\r\n\r\n     at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext.WaitOnTasks(Task applicationTask, Task transportTask, Boolean closeGracefully) in /_/src/Microsoft.AspNetCore.Http.Connections/Internal/HttpConnectionContext.cs:line 255\r\n\r\n     at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext.DisposeAsync(Boolean closeGracefully) in /_/src/Microsoft.AspNetCore.Http.Connections/Internal/HttpConnectionContext.cs:line 207\r\n\r\n     at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager.DisposeAndRemoveAsync(HttpConnectionContext connection, Boolean closeGracefully) in /_/src/Microsoft.AspNetCore.Http.Connections/Internal/HttpConnectionManager.cs:line 205\r\n\r\n  ===================\r\n\r\n  Stack Trace:\r\n\r\n     at Microsoft.AspNetCore.SignalR.Tests.VerifyNoErrorsScope.Dispose() in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/VerifyNoErrorsScope.cs:line 63\r\n\r\n     at Microsoft.AspNetCore.SignalR.Tests.EndToEndTests.ConnectionCanSendAndReceiveDifferentMessageSizesWebSocketsTransport(String message) in /_/test/Microsoft.AspNetCore.SignalR.Tests/EndToEndTests.cs:line 319\r\n\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n```"},{"Id":"7546652270","Type":"PullRequestEvent","CreatedAt":"2018-04-18T04:12:03","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2068","RelatedDescription":"Opened pull request \"Release/2.1\" (#2068) at aspnet/SignalR","RelatedBody":"Hrm, this isn't a pretty one. Some things got kinda messed up. We're going to need to untangle this a bit. I'm going to take a look at it tomorrow morning.\r\n\r\nThe bulk of this is just replaying things in `release/2.1` on `dev` that might have been messed up by an earlier merge. There **are** some things in here that overwrite \"branch-specific\" changes like version numbers though so those need to be reverted/fixed before this can be merged."},{"Id":"7546642140","Type":"PullRequestEvent","CreatedAt":"2018-04-18T04:07:54","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2067","RelatedDescription":"Merged pull request \"remove verbose flag\" (#2067) at aspnet/SignalR","RelatedBody":"As the indentation indicates, this was temporarily removed and then didn't get unremoved.\r\n\r\n![https://media1.tenor.com/images/20ac0577cc7b851e51034ef1a6eefdab/tenor.gif?itemid=5070696](https://media1.tenor.com/images/20ac0577cc7b851e51034ef1a6eefdab/tenor.gif?itemid=5070696)"},{"Id":"7546594385","Type":"PullRequestEvent","CreatedAt":"2018-04-18T03:49:54","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2067","RelatedDescription":"Opened pull request \"remove verbose flag\" (#2067) at aspnet/SignalR","RelatedBody":"As the indentation indicates, this was temporarily removed and then didn't get unremoved.\r\n\r\n![https://media1.tenor.com/images/20ac0577cc7b851e51034ef1a6eefdab/tenor.gif?itemid=5070696](https://media1.tenor.com/images/20ac0577cc7b851e51034ef1a6eefdab/tenor.gif?itemid=5070696)"},{"Id":"7546584843","Type":"PullRequestEvent","CreatedAt":"2018-04-18T03:46:26","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2066","RelatedDescription":"Opened pull request \"Use correct MessagePack in Benchmarks\" (#2066) at aspnet/SignalR","RelatedBody":"@sebastienros "},{"Id":"7546477515","Type":"IssuesEvent","CreatedAt":"2018-04-18T03:08:51","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1989","RelatedDescription":"Closed issue \"[API Review] Make \"synthetic\" HubMessage for Invocations with binding errors\" (#1989) at aspnet/SignalR","RelatedBody":"Rather than an \"ArgumentBindingException\" property, let's make our IHubProtocol implementations return a new `HubMessage`-derived type `BindingErrorMessage` (name to be :bike: :house:ed) that identifies the Invocation ID (so a response can be sent) and the error."},{"Id":"7546475455","Type":"PullRequestEvent","CreatedAt":"2018-04-18T03:08:08","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2064","RelatedDescription":"Merged pull request \"Fix #1989 by adding a 'binding failure' pseudo-message\" (#2064) at aspnet/SignalR","RelatedBody":"Feel free to open the naming :bike: :house:..."},{"Id":"7546390535","Type":"PullRequestEvent","CreatedAt":"2018-04-18T02:39:09","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2029","RelatedDescription":"Merged pull request \"Capture server logs in tests\" (#2029) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7546099220","Type":"PullRequestEvent","CreatedAt":"2018-04-18T00:57:45","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7676","RelatedDescription":"Opened pull request \"[Fixes #7647] Remove the dependency on AssemblyInfoAttribute\" (#7676) at aspnet/Mvc","RelatedBody":"Parking this here in case we want to take it."},{"Id":"7545824023","Type":"IssuesEvent","CreatedAt":"2018-04-17T23:21:58","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7675","RelatedDescription":"Opened issue \"[Preview2-Validation] Pages under Account/Manage loose the 'Title' information from ViewData\" (#7675) at aspnet/Mvc","RelatedBody":"_From @kichalla on April 6, 2018 0:8_\n\nFor example, when we go to `Manage` page, we should see the title of the html page to be like `Profile - <application-name>` but we only get ` - <application-name>`.\r\n\r\n@pranavkm and I debugged through this and think that the cause of this issue could be with how Identity UI uses a model type(abstract) on the view versus the actual type(implementation). Following line of code is a suspect:\r\nhttps://github.com/aspnet/Mvc/commit/7127bb5dbbb07eb325a2852ac9a91be0cf443205#diff-0901f55a5e636aeef89b9663dafcb625R171\n\n_Copied from original issue: aspnet/Identity#1737_"},{"Id":"7545813584","Type":"IssuesEvent","CreatedAt":"2018-04-17T23:18:35","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7645","RelatedDescription":"Closed issue \"A white spaced query parameter results in a null\" (#7645) at aspnet/Mvc","RelatedBody":"### A white spaced query parameter results in a null\r\nWhen I submit a GET request ``localhost:52815/api/values?param=%20`` for the action ``string Get(string param)``. The parameter ``param`` contains the value null.\r\n\r\n### Functional impact\r\nThis bug has a minor functional impact, we're building an API consumed by other teams. The API has a GET action which allows the user to filter on a business key. The consumer could, theoretically, use a white space as business key. If they do so, they wouldn't be able to retrieve the resource by its business key.\r\n\r\n### Minimal repro steps\r\n1. Create a GET action which has 1 parameter of type string\r\n2. Start the web application\r\n3. Fire a GET request with %20 as parameter\r\n\r\nSee this repo: https://github.com/Roraa/aspnetMvc-WhitespaceQueryParamBug\r\n\r\n### Expected result\r\nA parameter with the value \" \".\r\n\r\n### Actual result\r\nA parameter with the value NULL.\r\n\r\n### Further technical details\r\nWhen inspecting the queryparameter using ``HttpContext.Request.Query.First().Value.ToString()`` I noticed that the value is presented correctly. This makes me suspect that the modelbinder has a String.IsNullOrWhiteSpace check somewhere.\r\n\r\nI tested with the following parameters: \r\n1. \"%20a\" -> \" a\"\r\n1. \"a%20\" -> \"a \"\r\n1. %20 -> null\r\n1. %20%20 -> null"},{"Id":"7545682966","Type":"IssuesEvent","CreatedAt":"2018-04-17T22:39:09","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7674","RelatedDescription":"Opened issue \"Throw exception if users try to decorate filters on handler methods\" (#7674) at aspnet/Mvc","RelatedBody":"I learnt the hard way that filters (in my case a PageFilter) are honored only if they are decorated on the page model and not on handler methods, like in MVC.\r\n\r\nThe documentation on `IPageFilter` is also not super clear: `A filter that surrounds execution of a page handler method.`\r\n\r\n- Could `PageApplicationModelProvider` throw an exception to indicate that filters on handler methods are not supported?\r\n-  We could write an analyzer too\r\n"},{"Id":"7545195129","Type":"IssuesEvent","CreatedAt":"2018-04-17T20:49:19","Actor":"austindrenski","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7673","RelatedDescription":"Opened issue \"MediaType.GetHashCode() throws System.ExecutionEngineException\" (#7673) at aspnet/Mvc","RelatedBody":"`MediaType.GetHashCode()` throws a `System.ExecutionEngineException` in an ASP.NET Core application. \r\n\r\nI've included a minimal project that consistently reproduces the exception on my local machine. \r\n\r\nDoes anyone have an idea of what's behind this?\r\n\r\n__Program.cs:__\r\n```c#\r\nusing System;\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Mvc.Formatters;\r\n\r\nnamespace test\r\n{\r\n    public static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            MediaType t = new MediaType(\"text/csv\");\r\n\r\n            // throws => System.ExecutionEngineException\r\n            Console.WriteLine(t.GetHashCode());\r\n\r\n            WebHost.CreateDefaultBuilder(args)\r\n                   .Build()\r\n                   .Run();\r\n        }\r\n    }\r\n}\r\n```\r\n__test.csproj__\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.5\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7545824261","Type":"IssuesEvent","CreatedAt":"2018-04-17T23:22:03","Actor":"mkArtakMSFT","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1737","RelatedDescription":"Closed issue \"[Preview2-Validation] Pages under Account/Manage loose the 'Title' information from ViewData\" (#1737) at aspnet/Identity","RelatedBody":"For example, when we go to `Manage` page, we should see the title of the html page to be like `Profile - <application-name>` but we only get ` - <application-name>`.\r\n\r\n@pranavkm and I debugged through this and think that the cause of this issue could be with how Identity UI uses a model type(abstract) on the view versus the actual type(implementation). Following line of code is a suspect:\r\nhttps://github.com/aspnet/Mvc/commit/7127bb5dbbb07eb325a2852ac9a91be0cf443205#diff-0901f55a5e636aeef89b9663dafcb625R171"},{"Id":"7545562789","Type":"PullRequestEvent","CreatedAt":"2018-04-17T22:07:24","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1761","RelatedDescription":"Opened pull request \"Fix build break\" (#1761) at aspnet/Identity","RelatedBody":"* Use Razor.Sdk package to not perform runtime compilation\r\n* Use Mvc with PageResult fix (https://github.com/aspnet/Mvc/issues/7665)"},{"Id":"7544351618","Type":"IssuesEvent","CreatedAt":"2018-04-17T18:10:14","Actor":"FXFernandes","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1760","RelatedDescription":"Opened issue \"ASP.NET Identity Core 2.0 - Expiration phone token\" (#1760) at aspnet/Identity","RelatedBody":"One of the methods exposed by UserManager is GenerateChangePhoneNumberTokenAsync.\r\n\r\nLooking to the code, I noticed that the method mentioned is calling Rfc6238AuthenticationService.GenerateCode. It seems to me that the lifetime of the token is hardcoded to 3 minutes as showed bellow.\r\n\r\n```\r\nprivate static readonly TimeSpan _timestep = TimeSpan.FromMinutes(3);\r\n\r\n        // More info: https://tools.ietf.org/html/rfc6238#section-4\r\n        private static ulong GetCurrentTimeStepNumber()\r\n        {\r\n            var delta = DateTime.UtcNow - _unixEpoch;\r\n            return (ulong)(delta.Ticks / _timestep.Ticks);\r\n        }\r\n\r\n        // More info: https://tools.ietf.org/html/rfc6238#section-4\r\n        private static ulong GetCurrentTimeStepNumber()\r\n        {\r\n            var delta = DateTime.UtcNow - _unixEpoch;\r\n            return (ulong)(delta.Ticks / _timestep.Ticks);\r\n        }\r\n\r\n        public static int GenerateCode(byte[] securityToken, string modifier = null)\r\n        {\r\n            if (securityToken == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(securityToken));\r\n            }\r\n\r\n            // Allow a variance of no greater than 9 minutes in either direction\r\n            var currentTimeStep = GetCurrentTimeStepNumber();\r\n            using (var hashAlgorithm = new HMACSHA1(securityToken))\r\n            {\r\n                return ComputeTotp(hashAlgorithm, currentTimeStep, modifier);\r\n            }\r\n        }\r\n```\r\n\r\nSource: https://github.com/aspnet/Identity/blob/85f8a49aef68bf9763cd9854ce1dd4a26a7c5d3c/src/Core/Rfc6238AuthenticationService.cs\r\n\r\n\r\n\r\nAm I correct? Is this the lifetime of the phone token?\r\nIf yes, since the value is hardcoded, any ideas how to change it?\r\n\r\n"},{"Id":"7543724937","Type":"IssuesEvent","CreatedAt":"2018-04-17T16:15:47","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1759","RelatedDescription":"Closed issue \"why identity use user name to login in\" (#1759) at aspnet/Identity","RelatedBody":"When I call the register code of identity to register a user, the code will update the normal name and user name same, and after I alter the user name, then re-login the system with email address, my login will fail,\r\nIt seemed identity logined by username not email, so why identity use user name to login in?"},{"Id":"7540990862","Type":"IssuesEvent","CreatedAt":"2018-04-17T08:27:27","Actor":"diymine","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1759","RelatedDescription":"Opened issue \"why identity use user name to login in\" (#1759) at aspnet/Identity","RelatedBody":"When I call the register code of identity to register a user, the code will update the normal name and user name same, and after I alter the user name, then re-login the system with email address, my login will fail,\r\nIt seemed identity logined by username not email, so why identity use user name to login in?"},{"Id":"7540965456","Type":"IssuesEvent","CreatedAt":"2018-04-17T08:22:42","Actor":"LiamDotPro","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1755","RelatedDescription":"Closed issue \"Validating a hash made in Identity Server on nodeJS / Javascript\" (#1755) at aspnet/Identity","RelatedBody":"I'm trying to write out a library that mimics the validation functionality of `identity server 3` in `nodeJS` but I'm struggling to verify the buffer generated. \r\n\r\n 1. I'm not sure why but I'm getting a different length buffer completely despite following along with what I believe is the equivalent. \r\n 2. The `pbkdf2` function being run as an async task might have different behaviour over the iterations.\r\n 3. The `pbkdf2` function might be implementing a different version of sha256 or just simply isn't hmac.\r\n 4. I've screwed up the buffer management and spiting the between the salt / subkey.\r\n 5. Copy in this sense may not be working like `blockcopy` in the aforementioned exert from `identity server 3`\r\n\r\nThough note that the hash I'm trying to verify is taken directly from `Identity Server 3` inside a separate app that was started from the `ABP boilerplate` but from my own research I don't believe they implement a custom hashing algorithm or have changed the settings. The `c#` code reference I used to convert from can be found here: \r\n\r\nhttps://github.com/aspnet/Identity/blob/rel/2.0.0/src/Microsoft.Extensions.Identity.Core/PasswordHasher.cs#L248\r\n\r\nWith some further research into the identity server 2 equivalent which uses a more mundane algorithm for checking I've noticed people reporting that they had to change the encoding, but in testing this still doesn't make it work.\r\n\r\nFurther testing using the hashpassword function contained in the class in here shows that the returned buffer is of length 61 while when verifying the decoded buffer is of size 84, sounds like some form of mismatch encoding or something where were losing bytes.\r\n\r\nBelow is my class for hashing and verifying. \r\n \r\n\r\n    import crypto from 'crypto';\r\n    import util from 'util';\r\n    \r\n    const pbkdf2Async = util.promisify(crypto.pbkdf2);\r\n    \r\n    export default class HashPasswordv3 {   \r\n    \r\n        async verifyPassword(password, hashedPassword) {\r\n    \r\n            let decodedBuffer = null;\r\n    \r\n            if (hashedPassword) {\r\n                decodedBuffer = Buffer.from(hashedPassword, 'base64');\r\n            }\r\n    \r\n            let iteration = 10000;\r\n            let key = decodedBuffer[0];\r\n            let saltLength = this.readNetworkByteOrder(decodedBuffer, 9);\r\n    \r\n            if (saltLength < 128 / 8) {\r\n                return false;\r\n            }\r\n    \r\n            let salt = new Buffer(saltLength);\r\n    \r\n            // take the salt from the stored hash in the database.\r\n            // we effectively overwrite the bytes here from our random buffer.\r\n            decodedBuffer.copy(salt, 13, 0, saltLength);\r\n    \r\n            console.log(salt);\r\n    \r\n            let subkeyLength = hashedPassword.length - 13 - saltLength;\r\n    \r\n            if (subkeyLength < 128 / 8) {\r\n                return false;\r\n            }\r\n    \r\n            let expectedSubkey = new Buffer(subkeyLength);\r\n    \r\n            decodedBuffer.copy(expectedSubkey, 0, 13 + saltLength, expectedSubkey.length);\r\n    \r\n            console.log(expectedSubkey);\r\n    \r\n            let acutalSubkey = await pbkdf2Async(password, salt, 10000, 32, 'sha256');\r\n    \r\n            console.log(acutalSubkey);\r\n    \r\n            console.log(this.areBuffersEqual(acutalSubkey, expectedSubkey));\r\n    \r\n        }\r\n    \r\n        async hashPassword(password) {\r\n    \r\n            try {\r\n                // Create a salt with cryptographically secure method.\r\n                let salt = await crypto.randomBytes(16);\r\n    \r\n                let subkey = await pbkdf2Async(password, salt, 10000, 32, 'sha256');\r\n    \r\n                let outputBytes = new Buffer(13 + salt.length + subkey.length);\r\n    \r\n                // Write in the format marker\r\n                outputBytes[0] = 0x01;\r\n    \r\n                // Write out the byte order\r\n                this.writeNetworkByteOrder(outputBytes, 1, 1);\r\n                this.writeNetworkByteOrder(outputBytes, 5, 10000);\r\n                this.writeNetworkByteOrder(outputBytes, 9, salt.length);\r\n    \r\n                salt.copy(outputBytes, 13, 0, 16);\r\n                subkey.copy(outputBytes, 13 + salt.length, 0, subkey.length);\r\n    \r\n                console.log(outputBytes.toString('base64'));\r\n    \r\n    \r\n            } catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n            }\r\n    \r\n        }\r\n    \r\n        /**\r\n         * Writes the appropriate bytes into available slots\r\n         * @param buffer\r\n         * @param offset\r\n         * @param value\r\n         */\r\n        writeNetworkByteOrder(buffer, offset, value) {\r\n            buffer[offset + 0] = value >> 0;\r\n            buffer[offset + 1] = value >> 8;\r\n            buffer[offset + 2] = value >> 16;\r\n            buffer[offset + 3] = value >> 24;\r\n        }\r\n    \r\n        /**\r\n         * Reads the bytes back out using an offset.\r\n         * @param buffer\r\n         * @param offset\r\n         * @returns {number}\r\n         */\r\n        readNetworkByteOrder(buffer, offset) {\r\n            return ((buffer[offset + 0]) << 24)\r\n                | ((buffer[offset + 1]) << 16)\r\n                | ((buffer[offset + 2]) << 8)\r\n                | ((buffer[offset + 3]));\r\n        }\r\n    \r\n        /**\r\n         * Confirms if two byte arrays are equal.\r\n         * @param a\r\n         * @param b\r\n         * @returns {boolean}\r\n         */\r\n        byteArraysEqual(a, b) {\r\n            if (Buffer.compare(a, b)) {\r\n                return true;\r\n            }\r\n    \r\n            if (a == null || b == null || a.Length !== b.Length) {\r\n                return false;\r\n            }\r\n    \r\n            let areSame = true;\r\n            for (let i = 0; i < a.Length; i++) {\r\n                areSame &= (a[i] === b[i]);\r\n            }\r\n    \r\n            return areSame;\r\n        }\r\n    \r\n\t\t/**\r\n\t\t* Checks to see if the buffers are equal when read out from uint.\r\n\t\t* @param a\r\n\t\t* @param b\r\n\t\t*/\r\n        areBuffersEqual(bufA, bufB) {\r\n            let len = bufA.length;\r\n            if (len !== bufB.length) {\r\n                return false;\r\n            }\r\n            for (let i = 0; i < len; i++) {\r\n                if (bufA.readUInt8(i) !== bufB.readUInt8(i)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    \r\n    }\r\n\r\nThe implementation is as follows and can be used for testing:\r\n\r\n    import identityHasher from '../IdentityServer3/HashPasswordv3';\r\n    \r\n    const hasher = new identityHasher();\r\n    \r\n    let result = await hasher.verifyPassword('test', 'AQAAAAEAACcQAAAAEGKKbVuUwa4Y6qIclGpTE95X6wSw0mdwhMjXMBpAnHrjrQlHngJCgeuTf52w91UruA==');"},{"Id":"7538131267","Type":"PullRequestEvent","CreatedAt":"2018-04-16T19:17:27","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1743","RelatedDescription":"Closed pull request \"Switch to abstract user factory\" (#1743) at aspnet/Identity","RelatedBody":"Part of https://github.com/aspnet/Identity/issues/1722"},{"Id":"7536117573","Type":"IssuesEvent","CreatedAt":"2018-04-16T13:28:57","Actor":"vladimirlapacek","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1758","RelatedDescription":"Opened issue \"AuthenticationMethod for 2FA\" (#1758) at aspnet/Identity","RelatedBody":"I wonder if the the `SignInManager.DoTwoFactorSignInAsync` should be adding an explicit `AuthenticationMethod` to the `SignInMAnager.SignInAsync` call to indicate that the login used 2FA.\r\n\r\nCurrently, it is difficult for an application using aspnet Identity to determine, whether 2FA was used during the sign in. The `amr` claim contains only `password`, regardless of whether the login was 1FA or 2FA."},{"Id":"7532200139","Type":"IssuesEvent","CreatedAt":"2018-04-15T14:55:17","Actor":"benrhere","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1757","RelatedDescription":"Opened issue \"ASP.NET core 2.0: Custom usermanager causing problems with security stamp?\" (#1757) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nI'm generating custom claims with the following method:\r\n\r\n        protected override async Task<ClaimsIdentity> GenerateClaimsAsync(TUser user)\r\n        {\r\n            var id = await base.GenerateClaimsAsync(user);\r\n            var myOrgs = user.OrganizationMemberships;\r\n            var myAdminOrgs = myOrgs?.Where(om => om.Role == Data.Enums.OrganizationMembershipRole.Admin || om.Role == Data.Enums.OrganizationMembershipRole.SecondaryAdmin).Select(org=>org.Id).ToList();\r\n            var myPlayerOrgs = myOrgs?.Where(om => om.Role == Data.Enums.OrganizationMembershipRole.Athlete || om.Role == Data.Enums.OrganizationMembershipRole.Admin || om.Role == Data.Enums.OrganizationMembershipRole.SecondaryAdmin).Select(org=>org.Id).ToList();\r\n            if (myAdminOrgs!= null && myAdminOrgs.Count > 0)\r\n            {\r\n                var adminOrgStrings = String.Join(\",\", myAdminOrgs);\r\n                id.AddClaim(new Claim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgAdmin, adminOrgStrings));\r\n            }\r\n            if (myPlayerOrgs != null && myPlayerOrgs.Count > 0)\r\n            {\r\n                var playerOrgStrings = String.Join(\",\", myPlayerOrgs);\r\n                id.AddClaim(new Claim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgMember, playerOrgStrings));\r\n            }\r\n            return id;\r\n        }\r\n\r\nThe important thing to note is that I'm referencing a table related to the users table, so I need to explicitly load it. To achieve that, I've created a custom UserManager which pulls the additional needed data:\r\n\r\npublic class MyDotNetCoreAppUserManager : UserManager<MyDotNetCoreAppUser>\r\n    {\r\n\r\n        public MyDotNetCoreAppUserManager(IUserStore<MyDotNetCoreAppUser> store, IOptions<IdentityOptions> optionsAccessor,\r\n        IPasswordHasher<MyDotNetCoreAppUser> passwordHasher, IEnumerable<IUserValidator<MyDotNetCoreAppUser>> userValidators,\r\n        IEnumerable<IPasswordValidator<MyDotNetCoreAppUser>> passwordValidators, ILookupNormalizer keyNormalizer,\r\n        IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<MyDotNetCoreAppUser>> logger)\r\n        : base(store,optionsAccessor,passwordHasher,userValidators,passwordValidators,keyNormalizer,errors,services,logger)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Gets all users\r\n        /// </summary>\r\n        /// <param name=\"includes\">Optional parameter for eager loading related entities</param>\r\n        /// <returns>An list of users</returns>\r\n        public async Task<MyDotNetCoreAppUser> GetAll(string userName, params string[] includes)\r\n        {\r\n\r\n            // Get our User DbSet\r\n            var users = base.Users.Where(u=>u.UserName == userName);\r\n\r\n            // For each include, include in the query\r\n            foreach (var include in includes)\r\n                users = users.Include(include);\r\n\r\n            // Return our result\r\n            return await users.FirstOrDefaultAsync();\r\n        }\r\n\r\n\r\n        //This is called on initial login and is necessary to pull additional related user data\r\n        //used in claim generation. But overriding this causes sescurity stamp validation to fail!\r\n        public override Task<MyDotNetCoreAppUser> FindByNameAsync(string userName)\r\n        {\r\n            var fetchTask = GetAll(userName, \"OrganizationMemberships\");\r\n            return fetchTask;\r\n        }\r\n\r\n        //When it's time to validate the security stamp, a call is made into here for some reason.\r\n        //If I comment this override out, it successfully regenerates claims, and\r\n        //regenerates a login cookie (and I stay logged in)\r\n        //but the claims generation misses the needed related data.\r\n        //But if I enable this override, it just logs the user out after calling into here. (Doesn't\r\n        //fire GenerateClaimsAsync)\r\n        public override Task<MyDotNetCoreAppUser> FindByIdAsync(string userId)\r\n        {\r\n            return GetAll(userId, \"OrganizationMemberships\");\r\n        }\r\n    }\r\n\r\nBut please see above comments in this code. The problem is that after 30 minutes, when it's time to revalidate the security stamp and the user refreshes, one of two things happens:\r\n\r\n-If I do NOT override FindByIdAsync, it somewhat works, meaning the user stays logged in and claims are generated - however, the user object passed ot GenerateClaimsAsync does NOT contain the required OrganizationMemberships property populated.\r\n-If I DO override FindByIdAsync, I hit that breakpoint when I refresh the page after the security stamp timeout expires. However, after I continue, I don't hit the ClaimsGeneration method. Instead, I'm logged out and redirected to the login page.\r\n\r\nAlso maybe relevant:\r\n\r\n           services.AddIdentity<MyDotNetCoreAppUser, MyDotNetCoreAppRole>(opt =>\r\n            {\r\n                opt.Password.RequireNonAlphanumeric = false;\r\n                opt.Password.RequireUppercase = false;\r\n            })\r\n                .AddEntityFrameworkStores<MyDotNetCoreAppDbContext>()\r\n                .AddUserManager<MyDotNetCoreAppUserManager>()\r\n                .AddSignInManager<MyDotNetCoreAppSignInManager>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddAuthorization(opt =>\r\n            {\r\n                opt.AddPolicy(\"OrgAdmin\", policy => policy.RequireClaim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgAdmin));\r\n                opt.AddPolicy(\"OrgMember\", policy => policy.RequireClaim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgMember));\r\n            });\r\n            services.Configure<SecurityStampValidatorOptions>(options =>\r\n            {\r\n                // enables immediate logout, after updating the user's stat.\r\n                options.ValidationInterval = TimeSpan.FromSeconds(6);\r\n            });\r\n\r\n(I set the validation interval to 6 seconds to be able to debug the security stamp validation more easily.)\r\n\r\nAppreciative of any thoughts on this. Thanks..."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7545803254","Type":"IssuesEvent","CreatedAt":"2018-04-17T23:15:20","Actor":"TechnikEmpire","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2494","RelatedDescription":"Closed issue \"Any reason why upgrading to 2.1-preview2 would break IConnectionAdapter?\" (#2494) at aspnet/KestrelHttpServer","RelatedBody":"I've been searching but to no avail, so I've decided to ask here. Does anyone know of a reason or even a hunch as to why upgrading from 2.0.X to the 2.1 preview2 would cause an `IConnectionAdapter` to stop functioning? I have something like:\r\n\r\n```C#\r\ninternal class TlsSniConnectionAdapter : IConnectionAdapter\r\n{\r\n      ....\r\n\r\n\tpublic Task<IAdaptedConnection> OnConnectionAsync(ConnectionAdapterContext context)\r\n\t{\r\n\t\t// This still gets invoked.\r\n\t\treturn Task.Run(() => InnerOnConnectionAsync(context));\r\n\t}\r\n\t\r\n\tprivate async Task<IAdaptedConnection> InnerOnConnectionAsync(ConnectionAdapterContext context)\r\n\t{\r\n\t\t// This no longer gets invoked at all. The connection is just IMMEDIATELY closed after\r\n                // the above return Task.Run(() => ...);\r\n\t}\r\n}\r\n```\r\n\r\nThere's nothing special about this class, it just performs a peek on the connection stream to try to read the SNI extension, from which a certificate for the declared host is dynamically generated and then used in the handshake. Like I said, works fine < 2.1.x. Any ideas that might set me on the right path to solving this would be greatly appreciated. :)"},{"Id":"7545747559","Type":"IssuesEvent","CreatedAt":"2018-04-17T22:58:04","Actor":"danroth27","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2499","RelatedDescription":"Closed issue \"Specify https certificate via config file\" (#2499) at aspnet/KestrelHttpServer","RelatedBody":"Will 2.1 support specifying the https certificate via the json config file?"},{"Id":"7545612001","Type":"IssuesEvent","CreatedAt":"2018-04-17T22:19:58","Actor":"shirhatti","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2487","RelatedDescription":"Closed issue \"SocketTransport rename ...\" (#2487) at aspnet/KestrelHttpServer","RelatedBody":"IMHO the SocketTransport should be renamed to TcpSocketTransport and implement the ITcpSocketTransport interface that is derived from the ISocketTransport, this would allow the registration of other types of transports including UdpSocketTransport IUdpSocketTransport by other server services and would avoid confusions around the type of Socket used by the SocketTransport factory etc.   "},{"Id":"7544532650","Type":"PullRequestEvent","CreatedAt":"2018-04-17T18:43:49","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2501","RelatedDescription":"Opened pull request \"[WIP] Re-enable ConnectionCountingReturnsToZero #2282\" (#2501) at aspnet/KestrelHttpServer","RelatedBody":"Checking for MacOS High Sierra failures"},{"Id":"7544100508","Type":"IssuesEvent","CreatedAt":"2018-04-17T17:23:50","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2500","RelatedDescription":"Opened issue \"RegisterAddresses_IPv4Port5000Default_Success\" (#2500) at aspnet/KestrelHttpServer","RelatedBody":"This was a local test failure that hints at a product bug. In 2.1 preview1 we added support to bind to https://localhost:5001/ by default if the dev cert was available. However we don't check if the port is available. Note Kestrel doesn't check if port 5000 is available either, but when doing a localhost bind it will only fail if both IPv4 and IPv6 fail.\r\n\r\nAt a minimum this test needs to add [PortSupportedCondition(5001)].\r\n\r\nWe may also consider having kestrel catch this failure for the default port scenario and start only on HTTP.\r\n\r\n```\r\n[xUnit.net 00:01:31.6372836]     RegisterAddresses_IPv4Port5000Default_Success(addressInput: null, testUrl: \"http://127.0.0.1:5000/\") [FAIL]\r\nFailed   RegisterAddresses_IPv4Port5000Default_Success(addressInput: null, testUrl: \"http://127.0.0.1:5000/\")\r\nError Message:\r\n System.AggregateException : An error occurred while writing to logger(s).\r\n---- System.Exception : Unexpected critical error. Log Critical[0]: Unable to start Kestrel. System.IO.IOException: Failed to bind to address https://127.0.0.1:5001: address already in use. ---> Microsoft.AspNetCore.Connections.AddressInUseException: Error -4091 EADDRINUSE address already in use ---> Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -4091 EADDRINUSE address already in use\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowIfErrored(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_getsockname(UvTcpHandle handle, SockAddr& addr, Int32& namelen)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.GetSockIPEndPoint()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.CreateListenSocket()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.CallbackAdapter`1.<>c.<.cctor>b__3_1(Object callback, Object state)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.DefaultAddressStrategy.<BindAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n-------- System.IO.IOException : Failed to bind to address https://127.0.0.1:5001: address already in use.\r\n------------ Microsoft.AspNetCore.Connections.AddressInUseException : Error -4091 EADDRINUSE address already in use\r\n---------------- Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException : Error -4091 EADDRINUSE address already in use\r\nStack Trace:\r\n   at Microsoft.Extensions.Logging.Logger.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.KestrelTrace.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)\r\n   at Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(ILogger logger, EventId eventId, Exception exception, String message, Object[] args)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.Start()\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.<RegisterAddresses_Success>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.<RegisterAddresses_IPv4Port5000Default_Success>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n----- Inner Stack Trace -----\r\n   at Microsoft.AspNetCore.Testing.TestApplicationErrorLogger.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)\r\n   at Microsoft.Extensions.Logging.Logger.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)\r\n----- Inner Stack Trace -----\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.DefaultAddressStrategy.<BindAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n----- Inner Stack Trace -----\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n----- Inner Stack Trace -----\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowIfErrored(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_getsockname(UvTcpHandle handle, SockAddr& addr, Int32& namelen)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.GetSockIPEndPoint()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.CreateListenSocket()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.CallbackAdapter`1.<>c.<.cctor>b__3_1(Object callback, Object state)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n```"},{"Id":"7543966263","Type":"IssuesEvent","CreatedAt":"2018-04-17T16:58:40","Actor":"Mattacks","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2495","RelatedDescription":"Closed issue \"Have you broken Kestrel configuration? #1442 \" (#2495) at aspnet/KestrelHttpServer","RelatedBody":"# Issue Title\r\n\r\nHave you broken Kestrel configuration?\r\n\r\n# General\r\n\r\nIn .Net Core 1.0 in Main you used to be able to '.Build()' on the builder to get the configuration resolved, in order to be able to use configuration in .UseKestrel(...)\r\n\r\nUnless I am mistaken, that is now not possible in 2.1 - one can only use constants or read from files by hand.\r\nAm I mistaken?\r\n\r\ncheers\r\n\r\nMatt\r\n\r\n(upon advice, copied from [here](https://github.com/dotnet/core/issues/1442))\r\n"},{"Id":"7543957233","Type":"IssuesEvent","CreatedAt":"2018-04-17T16:56:58","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2225","RelatedDescription":"Reopened issue \"Flaky test: MaxRequestBufferSizeTests.LargeUpload\" (#2225) at aspnet/KestrelHttpServer","RelatedBody":"This has failed 50% of the time for me on recent local builds, always with the same actual result.\r\n```\r\n[xUnit.net 00:00:44.2552397]     LargeUpload(maxRequestBufferSize: 5242880, connectionAdapter: True, expectPause: True) [FAIL]\r\n[xUnit.net 00:00:44.2588137]       Assert.InRange() Failure\r\n[xUnit.net 00:00:44.2591272]       Range:  (5238785 - 20971519)\r\n[xUnit.net 00:00:44.2592656]       Actual: 20971520\r\n[xUnit.net 00:00:44.2619018]       Stack Trace:\r\n[xUnit.net 00:00:44.2652259]         D:\\github\\AspNet\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\MaxRequestBufferSizeTests.cs(160,0): at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.MaxRequestBufferSizeTests.<LargeUpload>d__6.MoveNext()\r\n[xUnit.net 00:00:44.2657057]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2658986]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2660844]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2682372]       Output:\r\n[xUnit.net 00:00:44.2684638]         | Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.0 POST http:///  20971520\r\nFailed   LargeUpload(maxRequestBufferSize: 5242880, connectionAdapter: True, expectPause: True)\r\nError Message:\r\n Assert.InRange() Failure\r\nRange:  (5238785 - 20971519)\r\nActual: 20971520\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.MaxRequestBufferSizeTests.<LargeUpload>d__6.MoveNext() in D:\\github\\AspNet\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\MaxRequestBufferSizeTests.cs:line 160\r\n```"},{"Id":"7543817519","Type":"IssuesEvent","CreatedAt":"2018-04-17T16:31:33","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2225","RelatedDescription":"Closed issue \"Flaky test: MaxRequestBufferSizeTests.LargeUpload\" (#2225) at aspnet/KestrelHttpServer","RelatedBody":"This has failed 50% of the time for me on recent local builds, always with the same actual result.\r\n```\r\n[xUnit.net 00:00:44.2552397]     LargeUpload(maxRequestBufferSize: 5242880, connectionAdapter: True, expectPause: True) [FAIL]\r\n[xUnit.net 00:00:44.2588137]       Assert.InRange() Failure\r\n[xUnit.net 00:00:44.2591272]       Range:  (5238785 - 20971519)\r\n[xUnit.net 00:00:44.2592656]       Actual: 20971520\r\n[xUnit.net 00:00:44.2619018]       Stack Trace:\r\n[xUnit.net 00:00:44.2652259]         D:\\github\\AspNet\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\MaxRequestBufferSizeTests.cs(160,0): at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.MaxRequestBufferSizeTests.<LargeUpload>d__6.MoveNext()\r\n[xUnit.net 00:00:44.2657057]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2658986]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2660844]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2682372]       Output:\r\n[xUnit.net 00:00:44.2684638]         | Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.0 POST http:///  20971520\r\nFailed   LargeUpload(maxRequestBufferSize: 5242880, connectionAdapter: True, expectPause: True)\r\nError Message:\r\n Assert.InRange() Failure\r\nRange:  (5238785 - 20971519)\r\nActual: 20971520\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.MaxRequestBufferSizeTests.<LargeUpload>d__6.MoveNext() in D:\\github\\AspNet\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\MaxRequestBufferSizeTests.cs:line 160\r\n```"},{"Id":"7543798987","Type":"PullRequestEvent","CreatedAt":"2018-04-17T16:28:24","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2497","RelatedDescription":"Merged pull request \"Clean up flaky MaxRequestBufferSize tests\" (#2497) at aspnet/KestrelHttpServer","RelatedBody":"I was debugging #2225 and had a reliable repro before John's logging changes. After his changes I could only cause OOMs. This change addresses the OOMs and the test now reliably passes.\r\n\r\nI also removed the data corruption validation, there's a seperate test for that. These tests are much faster without it."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7546170031","Type":"PullRequestEvent","CreatedAt":"2018-04-18T01:23:17","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2287","RelatedDescription":"Opened pull request \"Update Roslyn version numbers\" (#2287) at aspnet/Razor","RelatedBody":"Updates the version numbers of Roslyn to match what will be available on\r\nnuget.org for our RC."},{"Id":"7545349738","Type":"IssuesEvent","CreatedAt":"2018-04-17T21:19:52","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2280","RelatedDescription":"Closed issue \".Net Core 2.0 mvc.razor.viewcompilation.rsp build exception MSB3073 exited with code -2147450751\" (#2280) at aspnet/Razor","RelatedBody":"_From @DenisKot on April 15, 2018 17:46_\n\nBuild solution fails with strange error:\r\n\r\n> Error\tMSB3073\tThe command \"\"dotnet\" exec --runtimeconfig \"F:\\TrackTubeNew\\Src\\TreckTube\\bin\\Debug\\netcoreapp2.0\\TreckTube.Web.runtimeconfig.json\" --depsfile \"F:\\TrackTubeNew\\Src\\TreckTube\\bin\\Debug\\netcoreapp2.0\\TreckTube.Web.deps.json\" \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.dll\" @\"obj\\Debug\\netcoreapp2.0\\microsoft.aspnetcore.mvc.razor.viewcompilation.rsp\"\" exited with code -2147450751.\tTreckTube.Web\tC:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.targets\t60\t\r\n\r\nIf double click on error VS opens up file:\r\n\r\n> C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.targets\r\n\r\nAt line:\r\n`<Exec Command=\"$(ExecArgs)\" WorkingDirectory=\"$(MSBuildProjectDirectory)\" />`\r\n\r\nTo fix it I've tried to update .net core libraries from version 2.0.0. to 2.0.6, have been update visual studio 2017 to 17.6.6, even revret my changes but nothing is helping.\r\n\r\nHow to fix it?\n\n_Copied from original issue: dotnet/corefx#29125_"},{"Id":"7544790912","Type":"IssuesEvent","CreatedAt":"2018-04-17T19:32:06","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2215","RelatedDescription":"Closed issue \"Missing pdb inside Microsoft.AspNetCore.Razor.Design.symbols.nupkg\" (#2215) at aspnet/Razor","RelatedBody":"For some reason, the symbols nupkg we create for this assembly doesn't contain any pdb files.\r\n\r\ncc @pranavkm "},{"Id":"7544514178","Type":"PullRequestEvent","CreatedAt":"2018-04-17T18:40:20","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2286","RelatedDescription":"Merged pull request \"Update versions in ProvideBindingRedirectAttribute\" (#2286) at aspnet/Razor","RelatedBody":""},{"Id":"7544176707","Type":"PullRequestEvent","CreatedAt":"2018-04-17T17:37:57","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2286","RelatedDescription":"Opened pull request \"Update versions in ProvideBindingRedirectAttribute\" (#2286) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":160,"FavoriteCount":95,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2018-04-18T05:30:09.1321875Z","RunDurationInMilliseconds":7813}