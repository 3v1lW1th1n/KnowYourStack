{"Data":{"Blog":{"FeedItems":[{"Title":"Add a Search Bar to Your Xamarin Apps in iOS 11","PublishedOn":"2018-02-12T20:00:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As described in the Go Large with iOS 11 post, view controllers in iOS 11 can use large titles to improve the clarity of an app&#8217;s user interface. To complement a view controller&#8217;s large...","Href":"https://blog.xamarin.com/add-search-bar-xamarin-ios-11/","RawContent":null},{"Title":"Podcast: Rapid UI Prototyping with Ink to Code, Merged Dictionaries in Xamarin.Forms, & Android Emulator Tips","PublishedOn":"2018-02-09T19:33:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I talk about a new tool that turns drawings into Android or UWP layouts, merged dictionaries coming to Xamarin.Forms, ways to make your...","Href":"https://blog.xamarin.com/podcast-rapid-ui-prototyping-ink-code-merged-dictionaries-xamarin-forms-android-emulator-tips/","RawContent":null},{"Title":"Add Languages to Your Xamarin Apps with Multilingual App Toolkit","PublishedOn":"2018-02-08T20:10:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With Xamarin, you can extend your cross-platform apps with support for native speakers, reaching markets that might otherwise be overlooked. However, managing multiple languages and keeping everything...","Href":"https://blog.xamarin.com/add-languages-to-your-apps-with-xamarin-and-multilingual-app-toolkit/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Building Your First Intelligent App with Xamarin and Microsoft Cognitive Services","PublishedOn":"2018-02-07T19:39:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today&#8217;s apps must be “intelligent” to win app users’ loyalty, whether for a consumer app or a business app. With Xamarin.Forms and Microsoft Cognitive Services, you can easily create your first...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-building-first-intelligent-app-xamarin-microsoft-cognitive-services/","RawContent":null},{"Title":"Draw your Next App Idea with Ink to Code","PublishedOn":"2018-02-05T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Imagine that you&#8217;ve just been struck by inspiration for your next great app. You might start by jotting some notes and sketching out screens. If you&#8217;re thinking about reaching for a...","Href":"https://blog.xamarin.com/draw-next-app-idea-ink-code/","RawContent":null},{"Title":"Lose the Cables: Make Deploying to an iOS or tvOS Device Easier","PublishedOn":"2018-02-02T19:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing most developers consistently do during app development is deploy to a testing device. One main drawback during this process is the struggle to find a cable, connect it to a computer, plug it...","Href":"https://blog.xamarin.com/lose-cables-make-deploying-ios-tvos-device-easier/","RawContent":null},{"Title":"Just Push Play: Using Google Play on an Android Emulator","PublishedOn":"2018-02-01T20:22:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The needs of an Android developer using the Android emulator continuously expand. The latest emulator development from Google provides a system image for the Google Play Store, which includes a fully...","Href":"https://blog.xamarin.com/just-push-play-using-google-play-android-emulator/","RawContent":null},{"Title":"Xamarin Developer Events in February","PublishedOn":"2018-01-31T19:26:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you haven&#8217;t started working on your new year&#8217;s resolutions yet, we have the perfect solution: get out there and start building on your mobile app development education by networking...","Href":"https://blog.xamarin.com/xamarin-developer-events-february/","RawContent":null},{"Title":"Webinar Recording | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-30T19:53:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this pre-recorded webinar, Mark Smith, Director of Xamarin University, shows you how to automate your app development pipeline with Visual Studio App Center, walking through how to connect your app...","Href":"https://blog.xamarin.com/webinar-recording-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Android Emulator Quick Boot","PublishedOn":"2018-01-29T19:41:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Emulator version 27.0.2 now includes a feature called Quick Boot, which launches the emulator in just a few seconds. For Quick Boot to work, your AVD must perform a cold boot on its first time...","Href":"https://blog.xamarin.com/android-emulator-quick-boot/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7235090119","Type":"PullRequestEvent","CreatedAt":"2018-02-12T22:59:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1295","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/10647a5e\" (#1295) at xamarin/xamarin-android","RelatedBody":"Fixes the `ObjectDisposedException` during process shutdown described\r\nin commit 0a9d1641.\r\n\r\nMoves the `ManagedPeer.Init()` invocation within the `JniRuntime`\r\nconstructor so that a `NullReferenceException` is avoided. (Instead, a\r\n*different*, more meaningful exception should be thrown.)\r\n\r\nBumps to cecil/mono-2017-12/1afa0668 for d15-7 harmonization."},{"Id":"7234768900","Type":"IssuesEvent","CreatedAt":"2018-02-12T21:46:24","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1297","RelatedDescription":"Opened issue \"[Mono 2017-12] Encountering native crash during test instrumentation start up on devices running v4.4 and lower\" (#1297) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Install src/Mono.Android/Test/Mono.Android-Tests.csproj to a v4.4 or lower target in release mode.\r\n2. Run the suite with instrumentation via the `/t:RunTests` msbuild target.\r\n\r\nAlternatively, I've uploaded the .apk file which can be installed via adb. I was able to reproduce with this .apk on a newly created v4.4 emulator.\r\n\r\n1. Download the .apk provided below, and `adb install` it.\r\n2. Launch the app, and click the Run Tests list view item.\r\n\r\n[Mono.Android_Tests-Signed.zip](https://github.com/xamarin/xamarin-android/files/1717794/Mono.Android_Tests-Signed.zip)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nNUnitLite suites will start and run successfully via instrumentation.\r\n\r\n### Actual Behavior\r\nCrash on start up:\r\n```\r\nF/libc    ( 4571): Fatal signal 11 (SIGSEGV) at 0x00000000 (code=1), thread 4571 (o.Android_Tests)\r\nI/DEBUG   ( 1137): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nI/DEBUG   ( 1137): Build fingerprint: 'generic_x86/google_sdk_x86/generic_x86:4.4.2/KK/4498769:eng/test-keys'\r\nI/DEBUG   ( 1137): Revision: '0'\r\nI/DEBUG   ( 1137): pid: 4571, tid: 4571, name: o.Android_Tests  >>> Mono.Android_Tests <<<\r\nI/DEBUG   ( 1137): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000\r\nI/DEBUG   ( 1137):     eax bfb73b04  ebx b7779fcc  ecx 00000000  edx 00000008\r\nI/DEBUG   ( 1137):     esi 00000000  edi bfb7418c\r\nI/DEBUG   ( 1137):     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\r\nI/DEBUG   ( 1137):     eip b7727ce8  ebp bfb740a8  esp bfb73a10  flags 00210293\r\nI/DEBUG   ( 1137):\r\nI/DEBUG   ( 1137): backtrace:\r\nI/DEBUG   ( 1137):     #00  pc 00049ce8  /system/lib/libc.so (__vfprintf+232)\r\nI/DEBUG   ( 1137):     #01  pc 00047f3f  /system/lib/libc.so (vasprintf+143)\r\nI/DEBUG   ( 1137):     #02  pc 002a3bf3  /data/app-lib/Mono.Android_Tests-1/libmonosgen-2.0.so (monoeg_g_vasprintf+35)\r\nI/DEBUG   ( 1137):     #03  pc 0001e16f  [stack]\r\nI/DEBUG   ( 1137):     #04  pc 00018833  <unknown>\r\nI/DEBUG   ( 1137):     #05  pc 0000b603  <unknown>\r\nI/DEBUG   ( 1137):     #06  pc 0000b593  <unknown>\r\nI/DEBUG   ( 1137):     #07  pc 0000b49a  <unknown>\r\nI/DEBUG   ( 1137):     #08  pc 0000b1b5  <unknown>\r\nI/DEBUG   ( 1137):     #09  pc 0000ae7f  <unknown>\r\nI/DEBUG   ( 1137):     #10  pc 0000a015  <unknown>\r\nI/DEBUG   ( 1137):     #11  pc 00004553  <unknown>\r\nI/DEBUG   ( 1137):     #12  pc 000044d3  <unknown>\r\nI/DEBUG   ( 1137):     #13  pc 0000444f  <unknown>\r\nI/DEBUG   ( 1137):     #14  pc 000043f9  <unknown>\r\nI/DEBUG   ( 1137):     #15  pc 000103cf  <unknown>\r\nI/DEBUG   ( 1137):     #16  pc 00001527  <unknown>\r\nI/DEBUG   ( 1137):     #17  pc 0002a0eb  /system/lib/libdvm.so (dvmPlatformInvoke+79)\r\nI/DEBUG   ( 1137):     #18  pc 00006d9f  [heap]\r\nI/DEBUG   ( 1137):     #19  pc 0008688d  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+285)\r\nI/DEBUG   ( 1137):     #20  pc 0004c0d2  /system/lib/libdvm.so (dvmCheckCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+66)\r\nI/DEBUG   ( 1137):     #21  pc 00176c18  /system/lib/libdvm.so\r\nI/DEBUG   ( 1137):     #22  pc 00005dcb  <unknown>\r\nI/DEBUG   ( 1137):     #23  pc 0003b582  /system/lib/libdvm.so (dvmMterpStd(Thread*)+66)\r\nI/DEBUG   ( 1137):     #24  pc 00036c49  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+217)\r\nI/DEBUG   ( 1137):     #25  pc 000bbd46  /system/lib/libdvm.so (dvmInvokeMethod(Object*, Method const*, ArrayObject*, ArrayObject*, ClassObject*, bool)+1750)\r\nI/DEBUG   ( 1137):     #26  pc 000d1770  /system/lib/libdvm.so (Dalvik_java_lang_reflect_Method_invokeNative(unsigned int const*, JValue*)+288)\r\nI/DEBUG   ( 1137):     #27  pc 00176c18  /system/lib/libdvm.so\r\nI/DEBUG   ( 1137):     #28  pc 00005eff  <unknown>\r\nI/DEBUG   ( 1137):     #29  pc 0003b582  /system/lib/libdvm.so (dvmMterpStd(Thread*)+66)\r\nI/DEBUG   ( 1137):     #30  pc 00036c49  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+217)\r\nI/DEBUG   ( 1137):     #31  pc 000bcba7  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, char*)+759)\r\n```\r\n\r\n### Version Information\r\nOperating System: Microsoft Windows 10 Enterprise  64-bit\r\nProduct Name: Xamarin.Android\r\nBranch Name: mono-2017-12\r\nBuild Revision: d386c85d46cf4d3b877d6610de14ee2fb84c1b69\r\n[Device] Manufacturer: Motorola, Model: XT1031, Version: 4.4.4, ABI: armeabi-v7a, Timezone: America/Detroit\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-987a151df49d49b59de3623f89ab9492.txt\r\n\r\nIntermediate build output:\r\nhttps://microsoft-my.sharepoint.com/:u:/p/pecolli/Ec25cWIk1wRMs0zHZRpQibEBLsHHzSokHV-hmf8TiEMDng?e=otuJEd\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7234608737","Type":"IssuesEvent","CreatedAt":"2018-02-12T21:12:07","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1296","RelatedDescription":"Opened issue \"[Mono 2017-12] Encountering crash in 'Hello' test case\" (#1296) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Install and run the provided .apk file on device.\r\n\r\n[Mono.Samples.HelloTests-Signed.zip](https://github.com/xamarin/xamarin-android/files/1717726/Mono.Samples.HelloTests-Signed.zip)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nApplication launches and the series of test cases which execute at startup will run to completion.\r\n\r\n### Actual Behavior\r\nApplication crashes on startup.\r\n\r\n### Version Information\r\nOperating System: Microsoft Windows 10 Enterprise  64-bit\r\nProduct Name: Xamarin.Android\r\nBranch Name: mono-2017-12\r\nBuild Revision: d386c85d46cf4d3b877d6610de14ee2fb84c1b69\r\n[Device] Manufacturer: Google, Model: Pixel XL, Version: 7.1.1, ABI: arm64-v8a, Timezone: America/New_York\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-b6d91c4d05284b508516c98e9868492f.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\r\n"},{"Id":"7234411914","Type":"PullRequestEvent","CreatedAt":"2018-02-12T20:28:58","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1295","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/10647a5e\" (#1295) at xamarin/xamarin-android","RelatedBody":"Fixes the `ObjectDisposedException` during process shutdown described\r\nin commit 0a9d1641.\r\n\r\nMoves the `ManagedPeer.Init()` invocation within the `JniRuntime`\r\nconstructor so that a `NullReferenceException` is avoided. (Instead, a\r\n*different*, more meaningful exception should be thrown.)\r\n\r\nBumps to cecil/mono-2017-12/1afa0668 for d15-7 harmonization."},{"Id":"7233892430","Type":"IssuesEvent","CreatedAt":"2018-02-12T18:38:42","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1293","RelatedDescription":"Closed issue \"Could not install package 'Xamarin.Android.Support.v4 23.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile111', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\" (#1293) at xamarin/xamarin-android","RelatedBody":"I have created a .net standard project and I am trying to add xamarin.android.support.xxx packages to my project and i keep gettin this error message:\r\n\r\nCould not install package 'Xamarin.Android.Support.v4 23.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile111', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nIs there a way to solve this problem?"},{"Id":"7233168260","Type":"PullRequestEvent","CreatedAt":"2018-02-12T16:20:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1290","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add GetAndroidDependencies Target\" (#1290) at xamarin/xamarin-android","RelatedBody":"Fixes #1269\r\n\r\nThis commit adds the `GetAndroidDependencies` target to the\r\n`Xamarin.Android.Common.targets`. Its purpose is to examine\r\nthe various settings in the project and report which android\r\nsdk build-tools, platform-tools etc are required.\r\n\r\n`GetAndroidDependencies` will output an @(AndroidDependency)\r\nwith Version metadata Valid component names are platform,\r\nbuild-tool, platform-tool and tool."},{"Id":"7233168255","Type":"IssuesEvent","CreatedAt":"2018-02-12T16:20:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1269","RelatedDescription":"Closed issue \"Add GetAndroidDependencies Target\" (#1269) at xamarin/xamarin-android","RelatedBody":"We need to add a `GetAndroidDependencies` target which will output an `@(AndroidDependency)` with `%(AndroidDependency.Version)` metadata.\r\n\r\nValid component names are:\r\n\r\n* platform\r\n* build-tool\r\n* platform-tool\r\n* tool\r\n\r\n"},{"Id":"7232928658","Type":"PullRequestEvent","CreatedAt":"2018-02-12T15:41:27","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1294","RelatedDescription":"Opened pull request \"Issue1286 [WIP]\" (#1294) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7232918910","Type":"PullRequestEvent","CreatedAt":"2018-02-12T15:39:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1292","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Improve `javac -version` parsing\" (#1292) at xamarin/xamarin-android","RelatedBody":"The [Ubuntu build][0] is [failing][1]:\r\n\r\n\twarning : Failed to get the Java SDK version as it does not appear to contain a valid version number.\r\n\t`javac -version` returned:\r\n\t```openjdk version \"1.8.0_03-Ubuntu\"\r\n\tOpenJDK Runtime Environment (build 1.8.0_03-Ubuntu-8u77-b03-3ubuntu3-b03)\r\n\tOpenJDK 64-Bit Server VM (build 25.03-b03, mixed mode)\r\n\t```\r\n\t...\r\n\tTask \"AdjustJavacVersionArguments\"\r\n\t  …/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets:\r\n\t  error : Error executing task AdjustJavacVersionArguments: Required property 'JdkVersion' not set.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/779/\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/779/consoleText\r\n\r\nThis was introduced/broken by commit 0e1d1c8a, which turned\r\n`AdjustJavacVersionArguments.JdkVersion` into a `[Required]`\r\nparameter. The value for `AdjustJavacVersionArguments.JdkVersion`\r\ncomes from the `<ResolveSdks/>` task `JdkVersion` output parameter,\r\nwhich itself comes from parsing `javac -version` output.\r\n\r\nThe problem is that the regex we used to parse the output of\r\n`javac -version` wasn't properly parsing the output on Ubuntu:\r\n\r\n\topenjdk version \"1.8.0_03-Ubuntu\"\r\n\r\nSpecifically, the `-Ubuntu` text was causing the regex to not match.\r\n\r\nUpdate the regex to be a bit more lenient, enabling it to work with\r\nthe Ubuntu `javac -version` output, which *should* allow the build to\r\nprogress further."},{"Id":"7230822987","Type":"IssuesEvent","CreatedAt":"2018-02-12T07:49:43","Actor":"rk2022","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1293","RelatedDescription":"Opened issue \"Could not install package 'Xamarin.Android.Support.v4 23.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile111', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\" (#1293) at xamarin/xamarin-android","RelatedBody":"I have created a .net standard project and I am trying to add xamarin.android.support.xxx packages to my project and i keep gettin this error message:\r\n\r\nCould not install package 'Xamarin.Android.Support.v4 23.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile111', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nIs there a way to solve this problem?"},{"Id":"7229633483","Type":"PullRequestEvent","CreatedAt":"2018-02-11T21:36:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1292","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Improve `javac -version` parsing\" (#1292) at xamarin/xamarin-android","RelatedBody":"The [Ubuntu build][0] is [failing][1]:\r\n\r\n\twarning : Failed to get the Java SDK version as it does not appear to contain a valid version number.\r\n\t`javac -version` returned:\r\n\t```openjdk version \"1.8.0_03-Ubuntu\"\r\n\tOpenJDK Runtime Environment (build 1.8.0_03-Ubuntu-8u77-b03-3ubuntu3-b03)\r\n\tOpenJDK 64-Bit Server VM (build 25.03-b03, mixed mode)\r\n\t```\r\n\t...\r\n\tTask \"AdjustJavacVersionArguments\"\r\n\t  …/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets:\r\n\t  error : Error executing task AdjustJavacVersionArguments: Required property 'JdkVersion' not set.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/779/\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/779/consoleText\r\n\r\nThis was introduced/broken by commit 0e1d1c8a, which turned\r\n`AdjustJavacVersionArguments.JdkVersion` into a `[Required]`\r\nparameter. The value for `AdjustJavacVersionArguments.JdkVersion`\r\ncomes from the `<ResolveSdks/>` task `JdkVersion` output parameter,\r\nwhich itself comes from parsing `javac -version` output.\r\n\r\nThe problem is that the regex we used to parse the output of\r\n`javac -version` wasn't properly parsing the output on Ubuntu:\r\n\r\n\topenjdk version \"1.8.0_03-Ubuntu\"\r\n\r\nSpecifically, the `-Ubuntu` text was causing the regex to not match.\r\n\r\nUpdate the regex to be a bit more lenient, enabling it to work with\r\nthe Ubuntu `javac -version` output, which *should* allow the build to\r\nprogress further."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7235758004","Type":"IssuesEvent","CreatedAt":"2018-02-13T02:33:16","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1863","RelatedDescription":"Closed issue \"[Enhancement] Add support for loading and displaying SVG images in Xamarin.Forms\" (#1863) at xamarin/Xamarin.Forms","RelatedBody":"Migrating this 2+ year old request here - https://bugzilla.xamarin.com/show_bug.cgi?id=29677\r\n\r\n### Rationale\r\nThere is a long rationale in the bugzilla report for this, but the gist is it is a pain to have to handle multiple image sizes in our projects, using a SVG makes handling images less of a pain.\r\n\r\nSee this post from 2014 for a discussion on SVG support: https://forums.xamarin.com/discussion/17785/support-for-cross-platform-assets-like-svg-and-9-patch-formats/p1\r\n\r\n### Summary\r\nRight now to display images we need to provide multiple PNG files in different sizes, with SVG we would just need to import the SVG.\r\n\r\n### API Changes\r\nNot sure how this should look, need input from the community. \r\n\r\n### Intended Use Case\r\nTo use a SVG instead of multiple sized PNGs to display images. \r\n"},{"Id":"7235495759","Type":"PullRequestEvent","CreatedAt":"2018-02-13T01:02:07","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1871","RelatedDescription":"Opened pull request \"Add toolbox support to nuget package\" (#1871) at xamarin/Xamarin.Forms","RelatedBody":""},{"Id":"7235492526","Type":"PullRequestEvent","CreatedAt":"2018-02-13T01:01:05","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1868","RelatedDescription":"Closed pull request \"Add toolbox support to nuget package\" (#1868) at xamarin/Xamarin.Forms","RelatedBody":"What title says, no code changes"},{"Id":"7235340199","Type":"IssuesEvent","CreatedAt":"2018-02-13T00:11:09","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1862","RelatedDescription":"Closed issue \"[Enhancement] Give us a real MinimumWidthRequest / MinimumHeightRequest\" (#1862) at xamarin/Xamarin.Forms","RelatedBody":"### Rationale\r\nMinimumWidthRequest & height does not do what it sounds like. There was a PR to fix it, but it was closed as it would be a breaking change. I understand the reason to not want to do a breaking change, but the issue shouldn't just be ignored. \r\n\r\nsee:\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/386\r\nhttps://forums.xamarin.com/discussion/84885/rejected-obsolete-minimum-width-height-request\r\n\r\n> Most people interpret it to mean \"The minimum size the control can ever be and no smaller ever\" where the actual intent of the property is \"the smallest size the control can be squished to when the desired size cannot be met\"\r\n\r\nHaving a property that sets the minimum size the control can be would be very useful.\r\n\r\n### Summary\r\nAdd a new property that lets us set a minimum width / height of controls.\r\n\r\n### API Changes\r\nAdd a new property, no idea on the name, maybe\r\n```\r\nActualMinimumWidthRequest \r\nActualMinimumHeightRequest \r\n```\r\n\r\nWe also really should update the property description of MinimumWidthRequest  since it does not do what it sounds like it does.\r\n\r\n### Intended Use Case\r\nIt would be nice to be able to give controls a minimum width / height.\r\n\r\n"},{"Id":"7235314002","Type":"PullRequestEvent","CreatedAt":"2018-02-13T00:02:58","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1870","RelatedDescription":"Opened pull request \"Use di container\" (#1870) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nForms provides no option for users to construct and provide their own instances of handlers, effects, or services in a Forms application; instead, users must rely on `Activator.CreateInstance`. This greatly limits user control over the construction and lifetime of components.\r\n\r\nThis change provides a way for the user to inject their own dependency resolution method into the `Registrar`. When Forms asks for a component from the `Registrar`, the user's resolution method will be given the opportunity to provide an instance of the desired type.\r\n\r\nIf no dependency resolution method is provided, the Forms falls back to the previous behavior of creating the components as needed. If the dependency resolution method returns `null` for a request component, Forms falls back to creating the components itself.\r\n\r\nWhen resolving an `Effect` or handler (e.g., a customer renderer), specifying the resolution method is sufficient. If the user wants to resolve a service from the `DependencyService`, they will have to use the new `Resolve<T>()` method. \r\n\r\n[A brief example of using this with an IoC container](https://gist.github.com/hartez/b8075b1bf05ff3494875ee5c9839157f)\r\n\r\n### Bugs Fixed ###\r\n\r\n- Issue #1739 \r\n\r\n### API Changes ###\r\n\r\n#### Xamarin.Forms.Internals.Registrar\r\n\r\n`public delegate object ResolveDelegate(Type type, params object[] args);`\r\n`public static void ResolveUsing(ResolveDelegate resolveDelegate)`\r\n`public static void ResolveUsing(Func<Type, object> resolveFunc)`\r\n\r\n#### Xamarin.Forms.DependencyService\r\n\r\n`public static T Resolve<T>(DependencyFetchTarget fallbackFetchTarget = DependencyFetchTarget.GlobalInstance)`\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7235164336","Type":"IssuesEvent","CreatedAt":"2018-02-12T23:18:45","Actor":"mattregul","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1869","RelatedDescription":"Opened issue \"[Android, PCL] - ImageLoaderSourceHandler: Could not retrieve image or image data was invalid\" (#1869) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n- On Android, using the latest Forms and a PCL project... a XAML ImageCell with a hardcoded ImageSource ```may``` timeout and return an error.\r\n\r\n- Appears to work as expected with Shared or .NET Standard solutions\r\n\r\n- Only tested in simulation\r\n\r\n```xml\r\n<ImageCell\r\n    ImageSource=\"https://www.xamstatic.com/dist/images/pages/platform/visual-studio-icon-uHIZMvQl.png\"\r\n    Text=\"{Binding Name}\"\r\n    Detail=\"{Binding Job}\">\r\n</ImageCell>\r\n```\r\n\r\n- [Link to full output log](output.txt)\r\n```\r\nImage Loading: Error getting stream for https://www.xamstatic.com/dist/images/pages/platform/visual-studio-icon-uHIZMvQl.png: System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n...\r\n[0:] ImageLoaderSourceHandler: Could not retrieve image or image data was invalid: Uri: https://www.xamstatic.com/dist/images/pages/platform/visual-studio-icon-uHIZMvQl.png\r\n```\r\n---\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Using [repo](https://github.com/mattregul/XF_ImageCellIssue) below, load PCL sample \r\n2.  Run\r\n3.  Should see a list of ImageCell's with Visual Studio icon\r\n4.  Check output for error & timeout\r\n5.  Error didn't happen?  Uninstall app and try again.\r\n\r\n---\r\n\r\n### Expected Behavior\r\nAll images load, as they do in Shared and .NET Standard solutions\r\n\r\n---\r\n\r\n### Actual Behavior\r\n[Link to full output log](output.txt)\r\n```\r\n[0:] Image Loading: Error getting stream for https://www.xamstatic.com/dist/images/pages/platform/visual-studio-icon-uHIZMvQl.png: System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00026] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Net.Http.HttpClientHandler+<SendAsync>d__63.MoveNext () [0x00528] in <35658e59c86d40bdbb2ef0bb34b4f0c7>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0001a] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <35658e59c86d40bdbb2ef0bb34b4f0c7>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0001a] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at Xamarin.Forms.Forms+AndroidPlatformServices+<GetStreamAsync>d__16.MoveNext () [0x0003e] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Forms.cs:448 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0001a] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <657aa8fea4454dc898a9e5f379c58734>:0 \r\n  at Xamarin.Forms.UriImageSource+<GetStreamAsyncUnchecked>d__23.MoveNext () [0x00224] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Core\\UriImageSource.cs:174 \r\n[0:] ImageLoaderSourceHandler: Could not retrieve image or image data was invalid: Uri: https://www.xamstatic.com/dist/images/pages/platform/visual-studio-icon-uHIZMvQl.png\r\n```\r\n\r\n---\r\n\r\n### Basic Information\r\n- Version with issue: Xamarin.Forms: 2.5.0.91635\r\n- Platform Target Frameworks:\r\n  - Android: 8.1.3 - [Full Version info](https://gist.github.com/mattregul/33cffb8572731460f82c92f7ceea5c77)\r\n\r\n### Reproduction Link\r\nhttps://github.com/mattregul/XF_ImageCellIssue\r\n"},{"Id":"7234746429","Type":"PullRequestEvent","CreatedAt":"2018-02-12T21:41:31","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1868","RelatedDescription":"Opened pull request \"Add toolbox support to nuget package\" (#1868) at xamarin/Xamarin.Forms","RelatedBody":"What title says, no code changes"},{"Id":"7234698405","Type":"PullRequestEvent","CreatedAt":"2018-02-12T21:31:14","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1866","RelatedDescription":"Closed pull request \"Add toolbox support to nuget package\" (#1866) at xamarin/Xamarin.Forms","RelatedBody":"Adds metadata for toolbox"},{"Id":"7234690632","Type":"PullRequestEvent","CreatedAt":"2018-02-12T21:29:37","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1867","RelatedDescription":"Opened pull request \"Don't assume casts to Activity from Context will be successful\" (#1867) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nPR #1561 for 15-5.\r\n"},{"Id":"7234683462","Type":"PullRequestEvent","CreatedAt":"2018-02-12T21:28:06","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1866","RelatedDescription":"Opened pull request \"Add toolbox support to nuget package\" (#1866) at xamarin/Xamarin.Forms","RelatedBody":"Adds metadata for toolbox"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7235961680","Type":"PullRequestEvent","CreatedAt":"2018-02-13T03:52:34","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3454","RelatedDescription":"Merged pull request \"[foundation][uikit] Add missing [DesignatedInitializer] on default constructor\" (#3454) at xamarin/xamarin-macios","RelatedBody":"Like reported by xtro (data files updated)\nusing the new, simpler `[DesignatedDefaultCtor]` attribute"},{"Id":"7233963156","Type":"IssuesEvent","CreatedAt":"2018-02-12T18:53:35","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3463","RelatedDescription":"Opened issue \"[XI]BluetoothLeExplorer sample fails to build with error \"undefined Objective-C class: MBProgressHUDDelegate. The symbol '_OBJC_CLASS_$_MBProgressHUDDelegate' could not be found in any of the libraries or frameworks linked with your application.\" with master build\" (#3463) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open https://github.com/xamarin/mobile-samples/tree/master/BluetoothLEExplorer/BluetoothLEExplorer.iOS\r\n2. Build the sample\r\n\r\n### Expected Behavior\r\nApp should build successfully.\r\n\r\n### Actual Behavior\r\nApp fails to build with error. MTOUCH : error MT5211: Native linking failed, undefined Objective-C class: MBProgressHUDDelegate. The symbol '_OBJC_CLASS_$_MBProgressHUDDelegate' could not be found in any of the libraries or frameworks linked with your application.\r\nMTOUCH : error MT5202: Native linking failed. Please review the build log.\r\n### Environment\r\n\r\nTest Env: Xamarin.iOS\r\nVersion: 11.9.0.158 (Visual Studio Community)\r\nHash: a2afb859\r\n\r\nhttps://gist.github.com/GouriKumari/7c566debdbda3b72c152bfcfc9753ae7\r\n\r\n### Build Logs\r\n\r\nWith master: https://gist.github.com/GouriKumari/c3423cde53c33d51094e7a49e2e5d899\r\n\r\n### Example Project (If Possible)\r\n\r\nhttps://github.com/xamarin/mobile-samples/tree/master/BluetoothLEExplorer/BluetoothLEExplorer.iOS\r\n\r\n##Regression: yes\r\nSample builds with d15-6 and d15-5 successfully.\r\nBuild Log with d15-6: https://gist.github.com/GouriKumari/e39cefd353c27a2c23f2618d60cc0e9c\r\n"},{"Id":"7233780520","Type":"IssuesEvent","CreatedAt":"2018-02-12T18:14:58","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3406","RelatedDescription":"Closed issue \"[XI]WatchOS apps fail to  build with error \"Undefined symbols for architecture armv7k\" using XI with mono-2017-12 support\" (#3406) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open or create a new watchOS sample\r\n2. Build it with Release|iPhone config\r\n\r\n### Expected Behavior\r\nApp should build successfully\r\n\r\n### Actual Behavior\r\nApp fails to build with error: https://gist.github.com/GouriKumari/66f9a07284774f479ebea69877922ac6 .\r\nThis issue occurs only with Release|iPhone config.\r\n\r\n### Environment\r\n\r\nTest Env: https://gist.github.com/GouriKumari/af3f4d4338773d389c4091230574f4f8\r\n\r\n### Build Logs\r\nSample: http://xqa.blob.core.windows.net/gist/report-929e3b199cb1436cafe0172abb4f6e76.txt\r\nSample: http://xqa.blob.core.windows.net/gist/report-54386a93871c4158bd7954bd60c731c9.txt\r\nTemplate: https://gist.github.com/GouriKumari/f85e3aaf7d56e32b9d4701a341576700\r\n\r\n## Example Project: https://github.com/olegoid/SubmissionSamples/tree/master/WatchOS\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"963145186711830528","CreatedAt":"2018-02-12T20:18:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/ZG5Y2IRf3r","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"963094603065937920","CreatedAt":"2018-02-12T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the open source suite of SmartHotel360 reference #XamarinForms, Xamarin.iOS, and… https://t.co/5bwxwaCxyV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":22,"RawContent":null},{"Id":"962828622875815936","CreatedAt":"2018-02-11T23:20:06+00:00","UserScreenname":"xamarinhq","Text":"Our own @jamesmontemagno shows you how to leverage the #Xamarin Live Player with your iOS applications:… https://t.co/389iYhDt9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":37,"RawContent":null},{"Id":"962480803748999168","CreatedAt":"2018-02-11T00:18:00+00:00","UserScreenname":"xamarinhq","Text":"Get a quick overview of the latest updates to the Xamarin iOS designer, including a new toolbar for managing trait… https://t.co/eJkPovjm0G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":15,"RawContent":null},{"Id":"962049464084062208","CreatedAt":"2018-02-09T19:44:00+00:00","UserScreenname":"xamarinhq","Text":"This week on the @XamarinPodcast, @JamesMontemagno and @pierceboggan talk rapid UI prototyping with Ink to Code, me… https://t.co/FTH39xKI1K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":16,"RawContent":null},{"Id":"962005422142967809","CreatedAt":"2018-02-09T16:49:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0Fi4MU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":93,"FavoriteCount":34,"RawContent":null},{"Id":"961696657250443269","CreatedAt":"2018-02-08T20:22:05+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/pUb6M2pQLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":31,"RawContent":null},{"Id":"961642559880749056","CreatedAt":"2018-02-08T16:47:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/utcp887bgL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"961326059965870080","CreatedAt":"2018-02-07T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar with @XamarinU on building your first intelligent app with #Xamarin and Micro… https://t.co/lEsIH9mU1Q","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":40,"RawContent":null},{"Id":"961281908750635008","CreatedAt":"2018-02-07T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/48PO2bI3Mt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"960921785641455616","CreatedAt":"2018-02-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/OXIdlOPZyn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":13,"RawContent":null},{"Id":"960588991375511552","CreatedAt":"2018-02-05T19:00:37+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/sIDGF4Kcp0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":254,"FavoriteCount":128,"RawContent":null},{"Id":"960557379606794248","CreatedAt":"2018-02-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":14,"RawContent":null},{"Id":"960308752409923584","CreatedAt":"2018-02-05T00:27:02+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/ChPi6XDAGH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":18,"RawContent":null},{"Id":"959520671754850304","CreatedAt":"2018-02-02T20:15:29+00:00","UserScreenname":"xamarinhq","Text":"Make deploying to an iOS or tvOS device easier with Wireless Deployment and our new Unlock Device Alert: https://t.co/DKgtjGzPfo","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":48,"FavoriteCount":22,"RawContent":null},{"Id":"959469971301691392","CreatedAt":"2018-02-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/qc6cGwoxhK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":97,"FavoriteCount":29,"RawContent":null},{"Id":"959164072196526085","CreatedAt":"2018-02-01T20:38:29+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/kmW8uIDW80","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":18,"RawContent":null},{"Id":"959109618067738624","CreatedAt":"2018-02-01T17:02:06+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/xYx6fUVhML","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":10,"RawContent":null},{"Id":"958788443647152136","CreatedAt":"2018-01-31T19:45:53+00:00","UserScreenname":"xamarinhq","Text":"Help ensure a productive 2018 with #Xamarin developer events near you this February: https://t.co/9aPslPGW2O https://t.co/zRGM0lEoZe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2018-02-13T05:30:38.664605Z","RunDurationInMilliseconds":3588}