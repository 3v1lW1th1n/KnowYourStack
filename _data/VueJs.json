{"Data":{"Vue-Issues":{"Issues":[{"Id":"420785119","IsPullRequest":false,"CreatedAt":"2019-03-14T01:34:17","Actor":"ttlg","Number":"9695","RawContent":null,"Title":"self-closed HTML tag with v-html does not work correctly","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/k6hxzmjc/5/](https://jsfiddle.net/k6hxzmjc/5/)\r\n\r\n\r\n### Steps to reproduce\r\nrender  `<div style=\"background-color:red;\" /><div>bar</div>` with v-html become `<div style=\"background-color:red;\"><div>bar</div></div>`\r\n\r\n\r\n### What is expected?\r\nWe want:\r\n`<div style=\"background-color:red;\"></div><div>bar</div>`\r\n\r\nNot this:\r\n`<div style=\"background-color:red;\"><div>bar</div></div>`\r\n\r\n### What is actually happening?\r\nself closed tag wraps subordinate tags\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9695","RelatedDescription":"Closed issue \"self-closed HTML tag with v-html does not work correctly\" (#9695)"},{"Id":"420785845","IsPullRequest":false,"CreatedAt":"2019-03-14T01:02:42","Actor":"j3ca","Number":"9696","RawContent":null,"Title":"Bootstrap dropdown not closed if class is assigned","State":"open","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/j3ca/yjzh12kg/6/](https://jsfiddle.net/j3ca/yjzh12kg/6/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Create a simple bootstrap dropdown\r\n- On the .dropdown element include v-bind:class{'some-class': condition}\r\n- Add a @click event to .dropdown-item, and then set condition to true\r\n- Dropdown breaks and it won't close anymore (it does add the class \"some-class\" but it won't close)\r\n\r\n### What is expected?\r\nDropdown closes when a class is added to .dropdown element\r\n\r\n### What is actually happening?\r\nSince the version 2.6.0 the dropdown gets \"stuck\" where the class \"show\" is removed from the .dropdown element, but not from the .dropdown-menu\r\n\r\n---\r\nThis is with the version 2.6.8: https://jsfiddle.net/j3ca/yjzh12kg/6/\r\n\r\nIf you remove that version and use any <2.6.0 (e.g. https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.22/vue.js) it will work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9696","RelatedDescription":"Open issue \"Bootstrap dropdown not closed if class is assigned\" (#9696)"},{"Id":"420661853","IsPullRequest":false,"CreatedAt":"2019-03-13T18:45:59","Actor":"tcastelly","Number":"9694","RawContent":null,"Title":"reject of async event never catch","State":"open","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/shenron/vfksgnr4/3/](https://jsfiddle.net/shenron/vfksgnr4/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCall manually an event with $listeners. The promise returned has only success.\r\n\r\n### What is expected?\r\nThe promise returned should have success and error\r\n\r\n### What is actually happening?\r\nAll answers (success as error)  are resolved as success\r\n\r\n---\r\nIt seems to work with a previous version of VueJS\r\n\r\nhttps://jsfiddle.net/shenron/vfksgnr4/2/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9694","RelatedDescription":"Open issue \"reject of async event never catch\" (#9694)"},{"Id":"420596359","IsPullRequest":false,"CreatedAt":"2019-03-13T16:36:21","Actor":"serge1peshcoff","Number":"9693","RawContent":null,"Title":"Add .nullify modifier to vue-model","State":"closed","Body":"### What problem does this feature solve?\r\nI'm using Vue.js in most of my projects as a frontend framework. And in a lot of cases I've faced a pattern like this: the string should be either null or not empty. So for now I need to write a lot of workarounds about it, which result in a lot of copy-paste code in all of my components, since custom modifiers are not implemented.\r\nSo my proposal is: add the .nullify modifier to v-model, that would set the value to null if it's an empty string.\r\n\r\nI think that can benefit not only me, but also other users, as I've seen a lot of upvotes here, where the user suggested it: https://github.com/vuejs/vue/issues/3666#issuecomment-289095184\r\nI can and will make a PR on that if most of the people would think it's a good idea.\r\n\r\n### What does the proposed API look like?\r\n```\r\n<input type=\"text\" v-model.nullify=\"value\" />\r\n```\r\n\r\nCan also work with other modifiers, like this:\r\n\r\n```\r\n<input type=\"text\" v-model.trim.nullify=\"value\" />\r\n```\r\n\r\nThat'd give us null if the `value` is either empty or contains only tabs and spaces.\r\n\r\nAlso that can work with numbers (I've also faced a few cases where the value should be either a number or null):\r\n\r\n```\r\n<input type=\"text\" v-model.number.nullify=\"value\" />\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9693","RelatedDescription":"Closed issue \"Add .nullify modifier to vue-model\" (#9693)"},{"Id":"420446580","IsPullRequest":false,"CreatedAt":"2019-03-13T11:20:48","Actor":"maxmellen","Number":"9692","RawContent":null,"Title":"TypeScript: Typed Function Props","State":"open","Body":"### What problem does this feature solve?\r\nGet type checking for function passed as prop to a component.\r\n\r\nCurrently, it is possible to use `PropType` to get better typing on props passed to a component.\r\nFor example:\r\n```typescript\r\nimport Vue, { PropType } from \"vue\";\r\n\r\ninterface User {\r\n  name: string;\r\n}\r\n\r\nexport default Vue.extend({\r\n  name: \"MyComponent\",\r\n  props: {\r\n    user: Object as PropType<User>\r\n  }\r\n});\r\n```\r\n\r\nIn this example, the `user` prop will be correctly typed by the TypeScript type checker.\r\n\r\nThis however doesn't work with function props, the following example...\r\n```typescript\r\nimport Vue, { PropType } from \"vue\";\r\n\r\ninterface User {\r\n  name: string;\r\n}\r\n\r\ntype ConfirmCallback = (confirm: boolean) => void;\r\n\r\nexport default Vue.extend({\r\n  name: \"MyComponent\",\r\n  props: {\r\n    user: Object as PropType<User>,\r\n    confirmCallback: Function as PropType<ConfirmCallback>\r\n  }\r\n});\r\n```\r\n... yields the following error:\r\n```\r\nsrc/MyComponent.ts:13:22 - error TS2352: Conversion of type 'FunctionConstructor' to type 'PropType<ConfirmCallback>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n  Type 'FunctionConstructor' is not comparable to type '() => ConfirmCallback'.\r\n\r\n13     confirmCallback: Function as PropType<ConfirmCallback>\r\n```\r\n\r\n### What does the proposed API look like?\r\nAs converting to `unknown` first is somewhat unwieldy (and seems not to work in a SFC   Vetur setup, maybe this should be looked into separately), it would be nice to have a helper function exposed by Vue such as the following...\r\n```typescript\r\nimport { PropType } from \"vue\";\r\n\r\nexport default function TypedFunctionProp<T>(): PropType<T> {\r\n  return (Function as unknown) as PropType<T>;\r\n}\r\n```\r\n... which would allow writing the following:\r\n```typescript\r\nimport Vue, { PropType, TypedFunctionProp } from \"vue\";\r\n\r\ninterface User {\r\n  name: string;\r\n}\r\n\r\ntype ConfirmCallback = (confirm: boolean) => void;\r\n\r\nexport default Vue.extend({\r\n  name: \"MyComponent\",\r\n  props: {\r\n    user: Object as PropType<User>,\r\n    confirmCallback: TypedFunctionProp<ConfirmCallback>()\r\n  }\r\n});\r\n```\r\n\r\nI would be willing to write a PR for this, but I'm not sure where to put the definition of the `TypedFunctionProp` function as it can't be put in the declaration file.\r\n\r\nI'm also completely open to having a different name for that function. Maybe `FunctionPropType` is more consistent. I've actually switched to `FnPropType` in the project I'm working on, as it's relatively short, and is consistent with the `PropType` name.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9692","RelatedDescription":"Open issue \"TypeScript: Typed Function Props\" (#9692)"},{"Id":"419300320","IsPullRequest":true,"CreatedAt":"2019-03-13T09:20:29","Actor":"dejour","Number":"9673","RawContent":null,"Title":"fix(ssr): fix nested async functional componet rendering","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nfix #9643","Url":"https://github.com/vuejs/vue/pull/9673","RelatedDescription":"Closed or merged PR \"fix(ssr): fix nested async functional componet rendering\" (#9673)"},{"Id":"419913640","IsPullRequest":false,"CreatedAt":"2019-03-13T09:19:24","Actor":"tjallingt","Number":"9681","RawContent":null,"Title":"Event bubbling bug in QtWebEngine/Chrome 49","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ey9c73Lx/](https://jsfiddle.net/ey9c73Lx/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open app in old version of chrome running in QT (don't know the version but the userAgent is: \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) QtWebEngine/5.7.1 Chrome/49.0.2623.111 Safari/537.36\")\r\n- Click on image or text\r\n- Click on border of element\r\n\r\n### What is expected?\r\nThe counter should increment for every click on the image or text contained in the div with the `@click`.\r\n\r\n### What is actually happening?\r\nOnly when clicking on the border the counter is incremented\r\n\r\n---\r\nI'm developing Vue apps that run inside Tableau which is build with QT. The QT version used is quite old and so is the included QtWebEngine fork of Chrome. The upgrade from Vue 2.5 to 2.6 broke event bubbling in this older version of chrome, apparently because `event.timeStamp` is a very negative number (such as -518605237).\r\n\r\n```js\r\n/* add$1 */\r\ne.target === e.currentTarget // false since we are clicking children of the div\r\n\r\ne.timeStamp >= attachedTimestamp // false since -518605237 < 0\r\n\r\ne.timeStamp === 0 // false since -518605237 != 0\r\n\r\ne.target.ownerDocument !== document // false since we are the same document\r\n```\r\n\r\nMaybe there is a way to disable the microtask behaviour for this browser?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9681","RelatedDescription":"Closed issue \"Event bubbling bug in QtWebEngine/Chrome 49\" (#9681)"},{"Id":"419538885","IsPullRequest":true,"CreatedAt":"2019-03-13T09:16:45","Actor":"clarkdo","Number":"9677","RawContent":null,"Title":"fix: not push non-async css files into map","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nFix https://github.com/nuxt/nuxt.js/issues/5190\r\n\r\nSince #7902 has already implemented `initial` and `async` for css, so make `fileMapper` only include async `css` files same as `js` files for avoiding duplicate `style` tags.","Url":"https://github.com/vuejs/vue/pull/9677","RelatedDescription":"Closed or merged PR \"fix: not push non-async css files into map\" (#9677)"},{"Id":"420387719","IsPullRequest":false,"CreatedAt":"2019-03-13T09:08:38","Actor":"xuanjinliang","Number":"9691","RawContent":null,"Title":"createElement v-model not import","State":"closed","Body":"### vue:\r\n\r\n2.5.21\r\n\r\n### Create a component test.vue\r\n\r\n```\r\n<template>\r\n  <div>{{value}}</div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'test',\r\n    props: ['value'],\r\n    data () {\r\n      return {}\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'update'\r\n    },\r\n    methods: {},\r\n    watch: {\r\n      value: function value(val, oldVal) {\r\n        console.log(val, oldVal)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n### import component test.vue:\r\n\r\n```\r\n<script>\r\n  import Vue from 'vue'\r\n  import test from './test'\r\n\r\n  export default {\r\n    name: 'SelectTest',\r\n    props: {\r\n      value: String\r\n    },\r\n    data () {\r\n      return {\r\n        show: false,\r\n        toastTpl: null\r\n      }\r\n    },\r\n    model: {\r\n      prop: 'value', \r\n      event: 'update'\r\n    },\r\n    // components: { xgoText },\r\n    mounted: function(){\r\n      const that = this\r\n      const popupTpl = Vue.extend({\r\n        render: function (createElement) {\r\n          return createElement( test, {\r\n            directives: [{\r\n              name: 'model',\r\n              rawName: \"v-model\",\r\n              value: that.show.toString(),\r\n            }]\r\n          }, '')\r\n        }\r\n      });\r\n\r\n      this.popupTpl = new popupTpl().$mount().$el\r\n      document.body.appendChild(this.popupTpl);\r\n    },\r\n    methods: {\r\n      showPopup () {\r\n        this.show = !this.show\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\nThe value of the v-model cannot be typed into the component text.vue","Url":"https://github.com/vuejs/vue/issues/9691","RelatedDescription":"Closed issue \"createElement v-model not import\" (#9691)"},{"Id":"420387131","IsPullRequest":false,"CreatedAt":"2019-03-13T09:08:18","Actor":"shiqian123","Number":"9690","RawContent":null,"Title":"I write directive ，I want to use a attribute in  update，this attribute is create bind","State":"closed","Body":"### Version\r\n2.5.20\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9ag4xtvu/12/](https://jsfiddle.net/9ag4xtvu/12/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI want to get an initialized value for comparison。\r\nVue.directive('diff', {\r\n  inserted: function (el,bind,vnode) {\r\n    bind.initData = bind.value\r\n    console.log(vnode)\r\n  },\r\n  update:function(el,bind,vnode){\r\n    console.log(bind.initData)\r\n  }\r\n})\r\n\r\n### What is expected?\r\nin update, bind.initdata will have value\r\n\r\n### What is actually happening?\r\nbind.initdata  is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9690","RelatedDescription":"Closed issue \"I write directive ，I want to use a attribute in  update，this attribute is create bind\" (#9690)"},{"Id":"420384607","IsPullRequest":false,"CreatedAt":"2019-03-13T09:00:46","Actor":"xuanjinliang","Number":"9689","RawContent":null,"Title":"createElement v-model 不能传入","State":"closed","Body":"### vue:\r\n\r\n2.5.21\r\n\r\n### 创建一个组件 test.vue\r\n\r\n```\r\n<template>\r\n  <div>{{value}}</div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'test',\r\n    props: ['value'],\r\n    data () {\r\n      return {}\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'update'\r\n    },\r\n    methods: {},\r\n    watch: {\r\n      value: function value(val, oldVal) {\r\n        console.log(val, oldVal)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n### 引入组件test.vue:\r\n\r\n```\r\n<script>\r\n  import Vue from 'vue'\r\n  import test from './test'\r\n\r\n  export default {\r\n    name: 'SelectTest',\r\n    props: {\r\n      value: String\r\n    },\r\n    data () {\r\n      return {\r\n        show: false,\r\n        toastTpl: null\r\n      }\r\n    },\r\n    model: {\r\n      prop: 'value', \r\n      event: 'update'\r\n    },\r\n    // components: { xgoText },\r\n    mounted: function(){\r\n      const that = this\r\n      const popupTpl = Vue.extend({\r\n        render: function (createElement) {\r\n          return createElement( test, {\r\n            directives: [{\r\n              name: 'model',\r\n              rawName: \"v-model\",\r\n              value: that.show.toString(),\r\n            }]\r\n          }, '')\r\n        }\r\n      });\r\n\r\n      this.popupTpl = new popupTpl().$mount().$el\r\n      document.body.appendChild(this.popupTpl);\r\n    },\r\n    methods: {\r\n      showPopup () {\r\n        this.show = !this.show\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\nv-model的值不能输传text.vue这个组件内","Url":"https://github.com/vuejs/vue/issues/9689","RelatedDescription":"Closed issue \"createElement v-model 不能传入\" (#9689)"},{"Id":"420340360","IsPullRequest":false,"CreatedAt":"2019-03-13T06:40:16","Actor":"Duanzihuang","Number":"9688","RawContent":null,"Title":"文档例子不健全","State":"closed","Body":"Vue及Vue-Router、Vuex的文档中的例子有时候只摘取了只言片语，没有提供完整的代码，让初学者不好理解。希望把例子像React文档一样写全。我是段子黄！","Url":"https://github.com/vuejs/vue/issues/9688","RelatedDescription":"Closed issue \"文档例子不健全\" (#9688)"},{"Id":"420316379","IsPullRequest":false,"CreatedAt":"2019-03-13T04:50:47","Actor":"mjntan35","Number":"9687","RawContent":null,"Title":"Performance: Include/Use uid in the name when using performance.measure","State":"open","Body":"### What problem does this feature solve?\r\nThis is in regards when Vue.config.performance is set to true. \r\nWhen there is multiple components of the same name, it is difficult to distinguish which component coincide to which performance information.\r\n\r\nOne simple use case is rendering components inside a v-for.\r\n\r\n### What does the proposed API look like?\r\nInstead of just using name (Vue._name), I suggest to include the _uid to better distinguish components with the same name\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9687","RelatedDescription":"Open issue \"Performance: Include/Use uid in the name when using performance.measure\" (#9687)"},{"Id":"420296850","IsPullRequest":false,"CreatedAt":"2019-03-13T03:23:16","Actor":"madhuadbanker","Number":"9686","RawContent":null,"Title":"fail to resolve vue directive\"v-shortkey\" on the component","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1 install vue-shortkey\r\n2 created vue-shortkey.js in plugins as per nuxt documentation and added path \r\n3 build appliaction in nodejs command prompt\r\n4 open apllication in browser and specific component gives vue warn\r\n\r\n### What is expected?\r\nto use combination keys E.g: ctrl   s and have one listner\r\n\r\n### What is actually happening?\r\ngetting vue warn: failed to resolve directive: shortkey\r\n\r\n---\r\nI am using vue application ssr with nuxt. I have added the plugin as mentioned in nuxt documentation in 2 ways .\r\n\r\ncreate pligins/vue-shortkey.js and given path in nuxt.config.js ...i got vue warning failed to resolve directive-shortkey\r\nanother way..my plugin in node_modules so given in build option of nuxt.config.js as transpile:['vue-shortkey'] but didnt create plugins/vue-shortkey.js...here also same error\r\nanother way i tried by give Vue.use(require('vue-shortkey'))in app.ts ..here i got document not found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9686","RelatedDescription":"Closed issue \"fail to resolve vue directive\"v-shortkey\" on the component\" (#9686)"},{"Id":"420281679","IsPullRequest":false,"CreatedAt":"2019-03-13T02:20:28","Actor":"lzq920","Number":"9685","RawContent":null,"Title":"Custom instructions are normal in version 2.5.17 and abnormal in 2.6.8.","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://codepen.io/lzq920/full/OqOZPG](https://codepen.io/lzq920/full/OqOZPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen the menu\r\n\r\n### What is expected?\r\nIf you do not have permissions, the menu does not display\r\n\r\n### What is actually happening?\r\nall menu display\r\n\r\n---\r\ncontrol permission\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9685","RelatedDescription":"Closed issue \"Custom instructions are normal in version 2.5.17 and abnormal in 2.6.8.\" (#9685)"},{"Id":"420069225","IsPullRequest":true,"CreatedAt":"2019-03-13T02:19:20","Actor":"decadef20","Number":"9684","RawContent":null,"Title":"test(observe): remove unused test code","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nIn the `observing object prop change on defined property` test case, maybe we do not need to mock a watcher which was not used.\r\n","Url":"https://github.com/vuejs/vue/pull/9684","RelatedDescription":"Closed or merged PR \"test(observe): remove unused test code\" (#9684)"},{"Id":"420038772","IsPullRequest":false,"CreatedAt":"2019-03-12T15:09:31","Actor":"rdhelms","Number":"9683","RawContent":null,"Title":"Docs Suggestion - Update method definitions to use ECMAScript 2015 shorter syntax","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently in the Vue docs, methods are defined using the `methodName: function () {}` syntax, such as for the `data` method below:\r\n\r\n**Current Example**: https://vuejs.org/v2/guide/components.html\r\n```\r\n// Define a new component called button-counter\r\nVue.component('button-counter', {\r\n  data: function () {\r\n    return {\r\n      count: 0\r\n    }\r\n  },\r\n  template: '<button v-on:click=\"count  \">You clicked me {{ count }} times.</button>'\r\n})\r\n```\r\n\r\nBut it is very common in tutorials, articles, and other Vue apps to use the shorter method definition syntax, described by MDN here:\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions\r\n\r\nIt would improve readability and minimize context-switching if the Vue docs could also use this newer syntax. Outside of the Vue documentation, it seems more and more rare to find methods with the older syntax.\r\n\r\n### What does the proposed API look like?\r\n**Proposed Example**:\r\n```\r\n// Define a new component called button-counter\r\nVue.component('button-counter', {\r\n  data () {\r\n    return {\r\n      count: 0\r\n    }\r\n  },\r\n  template: '<button v-on:click=\"count  \">You clicked me {{ count }} times.</button>'\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9683","RelatedDescription":"Closed issue \"Docs Suggestion - Update method definitions to use ECMAScript 2015 shorter syntax\" (#9683)"},{"Id":"419959480","IsPullRequest":false,"CreatedAt":"2019-03-12T12:43:54","Actor":"dxvladislavvolkov","Number":"9682","RawContent":null,"Title":"Get the default $scopedSlots even if I do not set the slot-scope attribute","State":"closed","Body":"### Version\r\n2.6.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Lw83ej0p/1/](https://jsfiddle.net/Lw83ej0p/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Generate component using render function\r\n2. Put some elements to the component\r\n3. Check $scopedSlots of the component\r\n\r\nYou can see that $scopedSlots has a default function which returns all nested elements. \r\nThe attached example illustrates this behavior (open DevTools).\r\n\r\n### What is expected?\r\nI expect $scopedSlots.default when I set slot-scope attribute\r\n\r\n### What is actually happening?\r\nI get $scopedSlots.default even if I do not set the slot-scope attribute\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9682","RelatedDescription":"Closed issue \"Get the default $scopedSlots even if I do not set the slot-scope attribute\" (#9682)"},{"Id":"419809453","IsPullRequest":true,"CreatedAt":"2019-03-12T05:41:17","Actor":"vue-bot","Number":"9680","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9680","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9680)"},{"Id":"419333102","IsPullRequest":true,"CreatedAt":"2019-03-11T23:08:56","Actor":"vue-bot","Number":"9675","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9675","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9675)"},{"Id":"419582979","IsPullRequest":false,"CreatedAt":"2019-03-11T18:41:26","Actor":"yxngl","Number":"9678","RawContent":null,"Title":"Space keydown event issue on Windows Firefox","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://codepen.io/yxngl/pen/VRzoMJ?editors=1011#0](https://codepen.io/yxngl/pen/VRzoMJ?editors=1011#0)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTab to focus on the label and checkbox, then press space key.\r\n\r\n### What is expected?\r\nCheckbox should be checked.\r\n\r\n### What is actually happening?\r\nIn Firefox developer edition on Windows, the check flashes and disappears. It works fine on Mac and Chrome and Edge.\r\n\r\n---\r\nExtracted from a UI library. Pressing Enter key always works. Looks like the input receive the space keydown event somehow? Not sure if it is only a browser quirk or the design should be improved. Thanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9678","RelatedDescription":"Closed issue \"Space keydown event issue on Windows Firefox\" (#9678)"},{"Id":"419595863","IsPullRequest":false,"CreatedAt":"2019-03-11T17:34:36","Actor":"MiloshN","Number":"9679","RawContent":null,"Title":"Suggestion for create own lifecycle method?","State":"closed","Body":"Is possible to create own lifecycle method? \r\n\r\nWhat could be in relation to other Vue components? Capturing the right moments from the component's life?\r\n\r\n````\r\n{ ... \r\n\r\n createOwnLifectyleMethod() {\r\n           catchBeforeNavMounted() {\r\n           // catching something before is Nav component mounted\r\n           }\r\n }\r\n\r\n... }\r\n````\r\n\r\nI hope it's possible to create something like this in the newer versions?","Url":"https://github.com/vuejs/vue/issues/9679","RelatedDescription":"Closed issue \"Suggestion for create own lifecycle method?\" (#9679)"},{"Id":"419397757","IsPullRequest":false,"CreatedAt":"2019-03-11T10:42:57","Actor":"GreggOD","Number":"9676","RawContent":null,"Title":"Scoped Slot Shorthand directly on element","State":"closed","Body":"### What problem does this feature solve?\r\ncleaner syntax, easier to write code\r\n\r\n### What does the proposed API look like?\r\n**current**\r\n```\r\n<InputWithAddon>\r\n  <template #input>\r\n    <Input></Input>\r\n  </template>\r\n  <template #addon>\r\n     <Select :options=\"['op 1', 'op2']\" />\r\n   </template>\r\n</InputWithAddon>\r\n```\r\n\r\n**proposed**\r\n```\r\n<InputWithAddon>\r\n  <Input #input>\r\n  <Select #addon :options=\"['op 1', 'op2']\" />\r\n</InputWithAddon>\r\n\r\n<InputWithAddon>\r\n  <Input #input>\r\n  <Icon #addon name=\"pound\"/>\r\n</InputWithAddon>\r\n\r\n<InputWithAddon>\r\n  <Input #input v-model=\"number\">\r\n  <div #addon>{{addonText}}</div>\r\n</InputWithAddon>\r\n```\r\n\r\n**template**\r\n```\r\n<div class=\"input-group flex\">\r\n    <div class=\"input\">\r\n        <slot name=\"input\"></slot>\r\n    </div>\r\n    <div class=\"addon\">\r\n        <slot name=\"addon\"></slot>\r\n    </div>\r\n</div>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9676","RelatedDescription":"Closed issue \"Scoped Slot Shorthand directly on element\" (#9676)"},{"Id":"419312722","IsPullRequest":true,"CreatedAt":"2019-03-11T06:28:11","Actor":"Shasharoman","Number":"9674","RawContent":null,"Title":"Pass component instance as second argument in computed setters","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThis pull request is for #9663.\r\n","Url":"https://github.com/vuejs/vue/pull/9674","RelatedDescription":"Open PR \"Pass component instance as second argument in computed setters\" (#9674)"},{"Id":"419283007","IsPullRequest":false,"CreatedAt":"2019-03-11T03:58:48","Actor":"mantou132","Number":"9672","RawContent":null,"Title":"Template support property binding","State":"closed","Body":"### What problem does this feature solve?\r\nbind js object to webcomponents.\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<web-component v-property-bind=\"{a: 1}\"></web-component>\r\n<web-component .property=\"{a: 1}\"></web-component>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9672","RelatedDescription":"Closed issue \"Template support property binding\" (#9672)"},{"Id":"419143085","IsPullRequest":true,"CreatedAt":"2019-03-11T02:28:07","Actor":"felixbuenemann","Number":"9667","RawContent":null,"Title":"fix(scheduler): getNow detection can randomly fail (fix #9632)","State":"closed","Body":"The previous detection code compared time stamps based on Date.now()\r\nwhich are not monotonic, so the check could fail due to clock skew or\r\nadjustments.\r\n\r\nThis fix changes the check to compare against performance.now() if it is\r\nsupported, because it is monotonic (strictly increasing).\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis is a rebases version of PR #9647, since it was merged incomplete.\r\n\r\nSee the discussion in #9632 and #9647 for additional info.\r\n\r\nThis needs to be backported to the 2.6 branch.","Url":"https://github.com/vuejs/vue/pull/9667","RelatedDescription":"Closed or merged PR \"fix(scheduler): getNow detection can randomly fail (fix #9632)\" (#9667)"},{"Id":"419201951","IsPullRequest":false,"CreatedAt":"2019-03-10T17:05:57","Actor":"lrembacz","Number":"9670","RawContent":null,"Title":"$mount programmatically does not work with nested $slots.default components","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kxw0xn61jo](https://codesandbox.io/s/kxw0xn61jo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust wait and watch.\r\n\r\n### What is expected?\r\nElement should be transfered correctly into second Box.\r\n\r\n### What is actually happening?\r\n$mounting does not work correctly for nested components in $slots.default\r\n\r\n---\r\nElements disapear if they are mounted with $mount() method manually. It is example changed for @posva https://github.com/vuejs/vue/issues/9666.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9670","RelatedDescription":"Closed issue \"$mount programmatically does not work with nested $slots.default components\" (#9670)"},{"Id":"419207055","IsPullRequest":false,"CreatedAt":"2019-03-10T16:55:34","Actor":"BreakUps","Number":"9671","RawContent":null,"Title":"v-for of instaed","State":"closed","Body":"### What problem does this feature solve?\r\nUse v-for=\"let item of items\"  instead ,because v-for=\"let item in items\"  is misleading.In JS ,\"for let of...\" is used for iteration  and ''for let in \" is used for key iteration.\r\n\r\n### What does the proposed API look like?\r\n v-for=\"let item of items\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9671","RelatedDescription":"Closed issue \"v-for of instaed\" (#9671)"},{"Id":"419179062","IsPullRequest":false,"CreatedAt":"2019-03-10T12:18:36","Actor":"OwenMelbz","Number":"9669","RawContent":null,"Title":"Vue should not cause execution of content within <noscript> tags","State":"open","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ncwuvekm/1/](https://jsfiddle.net/ncwuvekm/1/)\r\n\r\n### Steps to reproduce\r\nCheck the \"network\" tab.\r\n\r\nYou can see that Vue causes a request to the content within the `<noscript>`\r\n\r\n### What is expected?\r\nVue should not cause execution of `<noscript>`content\r\n\r\n### What is actually happening?\r\nVue causes requests to elements within `<noscript>`\r\n\r\n---\r\nIt's typical when websites are using Vue to supplement UI and a common pattern is to wrap the site with an `id=\"app\"`\r\n\r\nHowever, this introduces a problem when people are using `<noscript>` in various areas of the site that are not within Vue components as Vue will execute it regardless.\r\n\r\nA use case example would be using a lazy loading library with a `<noscript>` fallback.\r\n\r\n```html\r\n<img src=\"thumbnail.jpg\" data-src=\"hi-resolution.jpg\" />\r\n<noscript><img src=\"hi-resolution.jpg\" /></noscript>\r\n```\r\n\r\nVue will cause the `hi-resolution.jpg` image to download even though it's within the `<noscript>`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n> For anybody experiencing this issue, a hack is to add `v-if=\"false\"` to your `<noscript>` to prevent the element from rendering e.g.`<noscript v-if=\"false\">`","Url":"https://github.com/vuejs/vue/issues/9669","RelatedDescription":"Open issue \"Vue should not cause execution of content within <noscript> tags\" (#9669)"},{"Id":"419151245","IsPullRequest":true,"CreatedAt":"2019-03-10T06:11:39","Actor":"Shasharoman","Number":"9668","RawContent":null,"Title":"fix(transition): looking up `context` of transition","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nfixed #9628 \r\nTransition inside child component with v-if should be no enter-transition, it depend on appear attribute.","Url":"https://github.com/vuejs/vue/pull/9668","RelatedDescription":"Open PR \"fix(transition): looking up `context` of transition\" (#9668)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"420805111","IsPullRequest":false,"CreatedAt":"2019-03-14T02:38:16","Actor":"Christhofernatalius","Number":"2648","RawContent":null,"Title":"Need prop for inactive-class","State":"open","Body":"### What problem does this feature solve?\r\nWe already have prop `active-class` that will be appended to the element when the route is active.\r\nBut what if that we need to specify class only when the route is not active?\r\n\r\nexample:\r\nwhen active => `.btn-primary`\r\nwhen inactive => `.btn-secondary`\r\n\r\n### What does the proposed API look like?\r\n```\r\n<router-link\r\n    :to=\"{name: 'purchase'}\"\r\n    class=\"btn\"\r\n    active-class=\"btn-primary\"\r\n    inactive-class=\"btn-secondary\">\r\n    Purchase\r\n</router-link>\r\n```\r\n![image](https://user-images.githubusercontent.com/13524958/54327450-c47cb500-463c-11e9-88e6-2f2abd1e3ee8.png)\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2648","RelatedDescription":"Open issue \"Need prop for inactive-class\" (#2648)"},{"Id":"419870637","IsPullRequest":true,"CreatedAt":"2019-03-13T09:03:20","Actor":"lamby","Number":"2646","RawContent":null,"Title":"Make the build reproducible","State":"closed","Body":"Whilst working on the [Reproducible Builds](https://reproducible-builds.org/) effort, we noticed that vue-router could not be built reproducibly.\r\n\r\nThis is due to it embedding the current build year into the file headers. This has been replaced with using [`SOURCE_DATE_EPOCH`](https://reproducible-builds.org/specs/source-date-epoch/) where available. This was originally filed in Debian as [#924378](https://bugs.debian.org/924378).","Url":"https://github.com/vuejs/vue-router/pull/2646","RelatedDescription":"Closed or merged PR \"Make the build reproducible\" (#2646)"},{"Id":"420144846","IsPullRequest":true,"CreatedAt":"2019-03-12T18:35:37","Actor":"btoo","Number":"2647","RawContent":null,"Title":"feat(types): use 'Component' type from 'vue' package to allow usage of FunctionalComponent","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2647","RelatedDescription":"Open PR \"feat(types): use 'Component' type from 'vue' package to allow usage of FunctionalComponent\" (#2647)"},{"Id":"417094970","IsPullRequest":true,"CreatedAt":"2019-03-10T19:24:47","Actor":"psalaets","Number":"2638","RawContent":null,"Title":"docs: fix broken link","State":"closed","Body":"At the bottom of the API Reference page, the \"In Component Guards\" link in the [Component Enabled Options section](https://router.vuejs.org/api/#component-enabled-options) wasn't pointing at the correct header.","Url":"https://github.com/vuejs/vue-router/pull/2638","RelatedDescription":"Closed or merged PR \"docs: fix broken link\" (#2638)"},{"Id":"419056481","IsPullRequest":false,"CreatedAt":"2019-03-09T10:24:44","Actor":"gutropolis","Number":"2645","RawContent":null,"Title":"Want to run function on 1st route when user will go from 1st route to 2nd and 2nd to 1st route ","State":"closed","Body":"\r\n\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2645","RelatedDescription":"Closed issue \"Want to run function on 1st route when user will go from 1st route to 2nd and 2nd to 1st route \" (#2645)"},{"Id":"418538306","IsPullRequest":false,"CreatedAt":"2019-03-08T12:24:15","Actor":"Jejec","Number":"2643","RawContent":null,"Title":"translations with vue-router and vue-i18n","State":"closed","Body":"### What problem does this feature solve?\r\nHello,\r\n\r\nI apologize if I don't make my request correctly but I only had a choice for an error or a new feature.\r\nI have been looking for a solution to translate my urls as cleanly as possible according to the language.  I was wondering if you had a particular solution to propose?\r\n\r\nThank you for your time.\r\n\r\n### What does the proposed API look like?\r\nI just don't have a viable solution right now.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2643","RelatedDescription":"Closed issue \"translations with vue-router and vue-i18n\" (#2643)"},{"Id":"418710297","IsPullRequest":false,"CreatedAt":"2019-03-08T11:30:05","Actor":"rderimay","Number":"2644","RawContent":null,"Title":"Route params not passed when staying on same page","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/1946Leau/4/](https://jsfiddle.net/1946Leau/4/)\r\n\r\n### Steps to reproduce\r\nWhen defining routes which do not contain a parameter which is passed in the route params, the component params are updated only when coming from another route. In short, when the route url does not change, nothing is updated.\r\n\r\nIf you call `$router.push({ name:'a', params: { foo: 1 } })` and `$router.push({ name:'a', params: { foo: 2 } })` alternatively, the value of `foo` passed to the component will be updated only if `:foo` is included in the route url (Example B in Fiddle) or if you force an update by using a random query str (Example C in Fiddle)\r\n\r\n### What is expected?\r\nI will expect to have `foo` passed also in the case it is not included in the route url.\r\nAt least, having a way to force the update without the trick with the query string would be nice.\r\n\r\n### What is actually happening?\r\n`foo` is updated only the first time\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2644","RelatedDescription":"Closed issue \"Route params not passed when staying on same page\" (#2644)"},{"Id":"417887894","IsPullRequest":false,"CreatedAt":"2019-03-06T17:01:22","Actor":"mrksbnch","Number":"2642","RawContent":null,"Title":"Special character + is automatically removed from query string","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/zkl0jwwk43](https://codesandbox.io/s/zkl0jwwk43)\r\n\r\n### Steps to reproduce\r\nAdd a query string with the special character \"+\" to the URL in Codesandbox, e.g. add \"?email=test+test@test.com\" to the end of the URL: https://zkl0jwwk43.codesandbox.io/?email=test+test@test.com\r\n\r\n### What is expected?\r\nI can access the query parameter \"test\" with `this.$route.query.test` to get the value \"test+test@test.com\".\r\n\r\n### What is actually happening?\r\nWhen I try to get the value of the query parameter \"test\" I only get \"test test@test.com\" (space instead of \"+\").\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2642","RelatedDescription":"Closed issue \"Special character + is automatically removed from query string\" (#2642)"},{"Id":"417287736","IsPullRequest":false,"CreatedAt":"2019-03-05T13:02:59","Actor":"cvn","Number":"2641","RawContent":null,"Title":"Passing an undefined query param can prevent the url from updating","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://plnkr.co/edit/yJJpcKuhYQwdOk3nZcZs?p=preview](https://plnkr.co/edit/yJJpcKuhYQwdOk3nZcZs?p=preview)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Start with the url `/?q=foo&color=bar`.\r\n2. `this.$router.push({query: {q: 'foo', offset: undefined}})`\r\n\r\n### What is expected?\r\nI expect the url to change to `/?q=foo`\r\n\r\n### What is actually happening?\r\nThe url does not change\r\n\r\n---\r\nI'm doing search filtering using query params. Every time I change a filter, I\r\nadd/remove/modify the appropriate param, and reset my pagination by setting\r\nan offset param to undefined. In my app, the combination of removing a param\r\nand offset not being set to begin with, causes the route not to update.\r\n\r\nThis issue is easy enough to work around, but it took me a while to figure out\r\nwhat was going on.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2641","RelatedDescription":"Open issue \"Passing an undefined query param can prevent the url from updating\" (#2641)"},{"Id":"417158334","IsPullRequest":true,"CreatedAt":"2019-03-05T07:38:35","Actor":"tmorehouse","Number":"2640","RawContent":null,"Title":"fix(router): prevent memory leak by removing app reference from $router.apps once app destroyed (Fixes #2639)","State":"open","Body":"Prevent memory leaks by removing app(s) from `$router.apps` array once app has been destroyed.\r\n\r\nDoes not remove main app (`this.app`) from `this.apps` when it is destroyed through, but maybe it should (remove from both `$router.apps` array and `$router.app`?).\r\n\r\nFixes #2639\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2640","RelatedDescription":"Open PR \"fix(router): prevent memory leak by removing app reference from $router.apps once app destroyed (Fixes #2639)\" (#2640)"},{"Id":"417146203","IsPullRequest":false,"CreatedAt":"2019-03-05T06:57:28","Actor":"tmorehouse","Number":"2639","RawContent":null,"Title":"[bug] Memory leak with this.$router.apps array and secondary apps on page being destroyed","State":"open","Body":"### Version\r\n3.0.2 (and earlier)\r\n\r\n### Reproduction link\r\n[https://bootstrap-vue.js.org/play/](https://bootstrap-vue.js.org/play/)\r\n\r\nSee next steps to easily reproduce the issue.\r\n\r\n### Steps to reproduce\r\nJust go to https://bootstrap-vue.js.org/play/\r\n\r\nAnd enter the following code in the HTML Template area:\r\n\r\n```js\r\n<div>\r\n  <p>This App UID: {{ _uid }}</p>\r\n  <p>$route.apps length: {{ $router.apps.length }}</p>\r\n  <pre>{{\r\n    $router.apps.map(\r\n      a => {\r\n      \treturn { uid: a._uid, destroyed: a._isDestroyed }\r\n      }\r\n    ).reverse()\r\n  }}</pre>\r\n</div>\r\n```\r\n\r\nand just enter `{ }` into the JavaScript area (or leave it as is)\r\n\r\nHit space / delete the space every second or so in either the HTML entry area, or the javascript entry area (there is a 0.75 second debouncer on the app creation/destroy on keypress).\r\n\r\nEach time, the rendered app will be destroyed and recreated.\r\n\r\nThe app shows a mapped version of `$router.apps` array (in the results section)\r\n\r\nYou will see the array grow and grow and grow, with all these `destroyed` instances sticking around.\r\n\r\nIt looks like vue-router isn't cleaning out `$router.apps` array during the destroy hook of the app. (`hook:destroyed').\r\n\r\n### What is expected?\r\nThat the apps that have been `$destroyed` would be removed from the `$router.apps` array\r\n\r\n### What is actually happening?\r\nThe destroyed app references remain in the `$router.apps` array, causing memory usage to grow/leak.\r\n\r\n---\r\nI've noticed a memory leak with `this.$router.apps` array.  It might be related (but not sure) to other memory leaks reported.\r\n\r\nOn a docs site we have, we have a playground that allows you to create and test mini apps in real time.\r\n\r\nAs the user edits the test app, it destroys (app.$destroy()), and then re compiles and mounts the new version.\r\n\r\nEach time the playground app is created, it gets appended to the `this.$router.apps` array, while the destroyed app still remains in the array (albeit it has a destroyed instance, but there is still quite a bit of stuff in the reference).\r\n\r\nThe playground is running under Nuxt.js, and each test in the playground is created as a new app (with a reference to the main $router instance).\r\n\r\nWe are adding in a temporary fix that will scan the `$router.apps` array, and slice out the destroyed app reference.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2639","RelatedDescription":"Open issue \"[bug] Memory leak with this.$router.apps array and secondary apps on page being destroyed\" (#2639)"},{"Id":"416928732","IsPullRequest":false,"CreatedAt":"2019-03-04T18:49:22","Actor":"joelworsham","Number":"2637","RawContent":null,"Title":"Accessibility keyboard shortcuts","State":"closed","Body":"### What problem does this feature solve?\r\nWhen tabbing over router links, pressing the space or enter key does not trigger navigation. Although I can add this layer of logic myself, it seems that this should be natively supported.\r\n\r\n### What does the proposed API look like?\r\nTo the public, nothing would change, the links would just work on keyboard navigation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2637","RelatedDescription":"Closed issue \"Accessibility keyboard shortcuts\" (#2637)"},{"Id":"416901206","IsPullRequest":false,"CreatedAt":"2019-03-04T17:10:19","Actor":"species7213uv","Number":"2636","RawContent":null,"Title":"directive on vue-router does not run update hook when created inside functional component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xqge8a2m/](https://jsfiddle.net/xqge8a2m/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFirst of all, apologies, because my jsfiddle seems to have a different problem. There the render function of the functional component is performed each time the route changes. I don't understand why.\r\nThis does not occur in my project, which I tried to reproduce.\r\nThere I get the \"inserted\" hook, but never the updated, even if I press the links and change the route (and the activeClasses gets updated)\r\n\r\n### What is expected?\r\nThe directives update hook should be triggered\r\n\r\n### What is actually happening?\r\nThe updated hook is not triggered. Only the inserted (when I first render the page). Then nothing more.\r\n\r\n---\r\nI am using the latest vue version 2.6.8.\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2636","RelatedDescription":"Closed issue \"directive on vue-router does not run update hook when created inside functional component\" (#2636)"},{"Id":"416740170","IsPullRequest":false,"CreatedAt":"2019-03-04T11:08:55","Actor":"eugenweissbart","Number":"2635","RawContent":null,"Title":"Tests failing on lazy loading","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router](https://github.com/vuejs/vue-router)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Clone a vue-loader git repo and checkout to 3.0.2\r\n- Run `npm install`\r\n- Run `npm test`\r\n\r\n### What is expected?\r\nAll tests run smoothly\r\n\r\n### What is actually happening?\r\n```ERROR in ./lazy-loading/app.js 32:9\r\nModule parse failed: Unexpected token (32:9)\r\nYou may need an appropriate loader to handle this file type.\r\n|   // a Promise.\r\n| };var Foo = function Foo() {\r\n>   return import('./Foo.vue');\r\n| };\r\n|\r\n @ multi es6-promise/auto ./lazy-loading/app.js lazy-loading[1]```\r\n\r\nThe corresponding test fails afterwards\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2635","RelatedDescription":"Closed issue \"Tests failing on lazy loading\" (#2635)"},{"Id":"413996035","IsPullRequest":true,"CreatedAt":"2019-03-03T16:42:26","Actor":"gekowa","Number":"2625","RawContent":null,"Title":"修正大小写","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2625","RelatedDescription":"Closed or merged PR \"修正大小写\" (#2625)"},{"Id":"416527961","IsPullRequest":false,"CreatedAt":"2019-03-03T15:28:26","Actor":"Fiouz","Number":"2634","RawContent":null,"Title":"Doc: missing RouteRecord type definiton ","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/api/](https://router.vuejs.org/api/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Read the API documentation at https://router.vuejs.org/api/#routes for the `routes` router construction options and see that the `routes` field is designated as an array of `RouteConfig` (with an accompanying definition of that type).\r\n2. Read the API documentation at https://router.vuejs.org/api/#route-object-properties for `$route.matched` and see that the copy of the aforementioned `routes` option is now designated as an array of `RouteRecord` (with not definition of that type)\r\n\r\n### What is expected?\r\nIf the latter is a copy of the former, it should be expected that it should be the same object type or that an explicit relationship between the 2 types be mentioned in the API doc as a canonical definition.\r\n\r\n### What is actually happening?\r\nThere is no canonical definition of what a `RouteRecord` type is, we only have an example that denotes the array of `RouteConfig` and we don't understand why copying a type does not result of an instance of the same type.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2634","RelatedDescription":"Open issue \"Doc: missing RouteRecord type definiton \" (#2634)"},{"Id":"416314158","IsPullRequest":false,"CreatedAt":"2019-03-02T10:12:51","Actor":"joshua-s","Number":"2633","RawContent":null,"Title":"Multiple named views in single vue file","State":"closed","Body":"### What problem does this feature solve?\r\nIt would be great if I could specify multiple named views in a single .vue file. This would make it easier and more centralized to manage applications that require multiple views for each route. By having all the code in one file, it would also make it easy to update both components simultaneously.\r\n\r\n### What does the proposed API look like?\r\nFor instance, if I had header and content views:\r\n```html\r\n<!-- Named slot -->\r\n<template slot=\"header\">\r\n  <div>\r\n    Header content\r\n  </div>\r\n</template>\r\n\r\n<!-- Default slot -->\r\n<template>\r\n  <div>\r\n    Body content\r\n  </div>\r\n</template>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2633","RelatedDescription":"Closed issue \"Multiple named views in single vue file\" (#2633)"},{"Id":"415722332","IsPullRequest":true,"CreatedAt":"2019-02-28T22:39:52","Actor":"gengjiawen","Number":"2632","RawContent":null,"Title":"chore(ci): use official image","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2632","RelatedDescription":"Closed or merged PR \"chore(ci): use official image\" (#2632)"},{"Id":"415703323","IsPullRequest":false,"CreatedAt":"2019-02-28T16:13:30","Actor":"ch3njust1n","Number":"2631","RawContent":null,"Title":"Dynamic Route Appending Query","State":"closed","Body":"Couldn't find anything on Stack or in the doc for [router push](https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort). Leaving this here in case anyone else runs into this issue. Please update the docs.\r\n\r\n### Problem\r\nIn the code below, if I navigate to the Content vue and then search using the Search component it imported, the dynamic route will append the search to the content path instead of changing the path and bringing up the search page e.g.  `localhost:9090/content/search?term=foo` instead of `localhost:9090/search?term=foo` This is caused by the dynamic route `:id`.\r\n\r\n### Solution\r\nPrepend `/` to the path string in the object you pass to `router.push()` as shown below with `/search`.\r\n\r\n**Search:**\r\n```\r\n<input \r\n   type=\"search\"\r\n   name=\"q\"\r\n   v-on:keydown.enter.prevent=\"search()\"\r\n   v-model=\"query\">\r\n...\r\nsearch() {\r\n   router.push({path: '/search', query: {term: this.query} })\r\n}\r\n...\r\n```\r\n\r\n**Content:**\r\n```\r\n<template>\r\n   <Search></Search>\r\n</template>\r\n...\r\n```\r\n\r\n**Router:**\r\n```\r\nexport default new Router({\r\n\tmode: 'history',\r\n\tbase: process.env.BASE_URL,\r\n\troutes: [\r\n           {\r\n              path: '/content/:id',\r\n              name: 'content',\r\n              component: () => import('./views/Content.vue')\r\n           },\r\n           {\r\n              path: '/search',\r\n              name: 'search',\r\n              component: () => import('./views/Search.vue')\r\n           }\r\n        ]\r\n})\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2631","RelatedDescription":"Closed issue \"Dynamic Route Appending Query\" (#2631)"},{"Id":"415105366","IsPullRequest":false,"CreatedAt":"2019-02-27T13:02:35","Actor":"Ihor-Shevtsov","Number":"2629","RawContent":null,"Title":"Components for child routes doesn't show","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/ih-shevtsov/pen/ywNVEe](https://codepen.io/ih-shevtsov/pen/ywNVEe)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click on \"Go to nested route 1\" -> route changed to  /home/nested-route-1\r\n2. Click on \"Go to nested route 2\" -> route changed to  /home/nested-route-2\r\n\r\n### What is expected?\r\nComponents for specific child route must be shown. \r\n\r\n### What is actually happening?\r\nComponents for child routes doesn't show. It is works only for \"parent\" route.\r\n\r\n---\r\nI tried to research this issue in router's code. Seems like incorrect router depth for any reason (https://github.com/vuejs/vue-router/blob/v3.0.2/dist/vue-router.esm.js#L58-L69)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2629","RelatedDescription":"Closed issue \"Components for child routes doesn't show\" (#2629)"},{"Id":"415107355","IsPullRequest":false,"CreatedAt":"2019-02-27T12:58:08","Actor":"yangzhuq","Number":"2630","RawContent":null,"Title":"关于router用query传参时的格式问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsbin.com/yujepuwamo/edit?html](https://jsbin.com/yujepuwamo/edit?html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n当使用 如下方法传递参数时\r\n this.$router.push({\r\n        path: \"/xxx\",\r\n        query: {\r\n          id: “yyy”\r\n        }\r\n      });\r\n\r\n### What is expected?\r\n按照URL的标准格式 将会跳转至如下格式\r\nscheme://host:port/path?id=yyy/#/xxx\r\n\r\n### What is actually happening?\r\n然而生成路径时是如下格式\r\nscheme://host:port/path/#/xxx?id=yyy\r\n\r\n---\r\n这样的结果是在URL不符合路径传参的规则，当然这不影响用 this.$route.query的方法拿到所要传递的参数。但是当用window.location.search的方法时会发现参数被存放在hash的内容了。是否能统一格式呢？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2630","RelatedDescription":"Closed issue \"关于router用query传参时的格式问题\" (#2630)"},{"Id":"415008055","IsPullRequest":false,"CreatedAt":"2019-02-27T08:58:42","Actor":"piotrek-horodenski","Number":"2628","RawContent":null,"Title":"query string parameters disappears when pasting url to the browser","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6motza4y/1/](https://jsfiddle.net/6motza4y/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. prepare components and routing with nested route\r\n2. run app\r\n3. paste absolute url into the browser with query parameters added to the path to the nested route\r\n4. query params disappears and are not accessible thru `$route` object\r\n\r\n### What is expected?\r\nquery params should endure\r\n\r\n### What is actually happening?\r\nquery params are lost\r\n\r\n---\r\njsfiddle doesn't enable navigating to it by pasting query params to the url, so it should be reproduced locally\r\n\r\nThis does not occur when route path is not nested\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2628","RelatedDescription":"Closed issue \"query string parameters disappears when pasting url to the browser\" (#2628)"},{"Id":"414969564","IsPullRequest":false,"CreatedAt":"2019-02-27T08:26:43","Actor":"zhuxianbin","Number":"2627","RawContent":null,"Title":"希望vue-router能支持查询跳转后的地址","State":"closed","Body":"### What problem does this feature solve?\r\nrouter 通过 与 push 一样的方式 不进行跳转而获取一个预跳转地址,与push的地址保持一致性;\r\n可解决用于hybrid 开发模式中,A页面打开新窗口到B页面的代码书写不优雅问题;\r\n\r\n### What does the proposed API look like?\r\nconst url  =  this.$router.query({name:\"namespace.one.two\",params:{id:1001,type:\"default\"}})\r\nor\r\nconst url  =  this.$router.push({},{prevent:true}) // Options\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2627","RelatedDescription":"Closed issue \"希望vue-router能支持查询跳转后的地址\" (#2627)"},{"Id":"414339555","IsPullRequest":false,"CreatedAt":"2019-02-25T22:34:12","Actor":"olavoasantos","Number":"2626","RawContent":null,"Title":"Convert RouterLink to functional component","State":"closed","Body":"### What problem does this feature solve?\r\nAs this is a simple component which doesn't use state and can be used in several places on the application, the conversion to a functional component could generate performance improvements for the application.\r\n\r\n### What does the proposed API look like?\r\nThe RouterLink component API would not change. The conversion can easily be done by modifying the `./src/components/link.js` component to:\r\n\r\n```js\r\nexport default {\r\n  name: 'RouterLink',\r\n  props: { /**...*/ },\r\n  functional: true,\r\n  render (h, { parent, props, children }) {\r\n    const router = parent.$router\r\n    const current = parent.$route\r\n    const { location, route, href } = router.resolve(props.to, current, props.append)\r\n\r\n    const classes = {}\r\n    const globalActiveClass = router.options.linkActiveClass\r\n    const globalExactActiveClass = router.options.linkExactActiveClass\r\n\r\n    const activeClassFallback = globalActiveClass == null\r\n      ? 'router-link-active'\r\n      : globalActiveClass\r\n    const exactActiveClassFallback = globalExactActiveClass == null\r\n      ? 'router-link-exact-active'\r\n      : globalExactActiveClass\r\n    const activeClass = props.activeClass == null\r\n      ? activeClassFallback\r\n      : props.activeClass\r\n    const exactActiveClass = props.exactActiveClass == null\r\n      ? exactActiveClassFallback\r\n      : props.exactActiveClass\r\n    const compareTarget = location.path\r\n      ? createRoute(null, location, null, router)\r\n      : route\r\n\r\n    classes[exactActiveClass] = isSameRoute(current, compareTarget)\r\n    classes[activeClass] = props.exact\r\n      ? classes[exactActiveClass]\r\n      : isIncludedRoute(current, compareTarget)\r\n\r\n    const handler = e => {\r\n      if (guardEvent(e)) {\r\n        if (props.replace) {\r\n          router.replace(location)\r\n        } else {\r\n          router.push(location)\r\n        }\r\n      }\r\n    }\r\n\r\n    const on = { click: guardEvent }\r\n    if (Array.isArray(props.event)) {\r\n      props.event.forEach(e => { on[e] = handler })\r\n    } else {\r\n      on[props.event] = handler\r\n    }\r\n\r\n    const data = {\r\n      class: classes\r\n    }\r\n\r\n    if (props.tag === 'a') {\r\n      data.on = on\r\n      data.attrs = { href }\r\n    } else {\r\n      const a = findAnchor(children)\r\n      if (a) {\r\n        a.isStatic = false\r\n        const aData = a.data = extend({}, a.data)\r\n        aData.on = on\r\n        const aAttrs = a.data.attrs = extend({}, a.data.attrs)\r\n        aAttrs.href = href\r\n      } else {\r\n        data.on = on\r\n      }\r\n    }\r\n\r\n    return h(props.tag, data, children)\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2626","RelatedDescription":"Closed issue \"Convert RouterLink to functional component\" (#2626)"},{"Id":"413413328","IsPullRequest":true,"CreatedAt":"2019-02-22T19:52:35","Actor":"delenamalan","Number":"2623","RawContent":null,"Title":"docs: Fix small grammatical error in redirect-and-alias","State":"closed","Body":"\"A redirect means when the user visits `/a`, **and** URL will be replaced by `/b`\" so I replace the **and** with **the**.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2623","RelatedDescription":"Closed or merged PR \"docs: Fix small grammatical error in redirect-and-alias\" (#2623)"},{"Id":"413417885","IsPullRequest":false,"CreatedAt":"2019-02-22T14:04:51","Actor":"nirmalraghavan","Number":"2624","RawContent":null,"Title":"Not able to update query parameter from navigation guard","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nr0m1vw7/](https://jsfiddle.net/nr0m1vw7/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nInside `beforeEnter` try to modify query parameters by passing `next({ query: {'my-param': 'new-value'} })`\r\n\r\n### What is expected?\r\nQuery parameter will be updated with the new value and the URL will also update.\r\n\r\n### What is actually happening?\r\nURL still having the same old value for `my-param`.\r\n\r\n---\r\nEven though the query parameter value is not updated in the URL, `this.$route.query['my-param']` value is updated with the new value.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2624","RelatedDescription":"Open issue \"Not able to update query parameter from navigation guard\" (#2624)"},{"Id":"413249173","IsPullRequest":false,"CreatedAt":"2019-02-22T13:25:21","Actor":"hzsrc","Number":"2622","RawContent":null,"Title":"The addRoutes  method need to suport  adding dynamic routes as children to an existing route","State":"closed","Body":"### What problem does this feature solve?\r\nThe addRoutes method currently only suport add new routes to root routes.  But if can not add routes as children to an existing route.\r\n\r\n\r\n### What does the proposed API look like?\r\nrouter.addRoutes(routes: Array<RouteConfig>, parent ? : Location)\r\n\r\nLike:\r\nrouter.addRoutes([...childRoutes],  '/main')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2622","RelatedDescription":"Closed issue \"The addRoutes  method need to suport  adding dynamic routes as children to an existing route\" (#2622)"},{"Id":"413135990","IsPullRequest":true,"CreatedAt":"2019-02-21T21:39:55","Actor":"pRizz","Number":"2621","RawContent":null,"Title":"chore: ignore WebStorm IDE files","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2621","RelatedDescription":"Open PR \"chore: ignore WebStorm IDE files\" (#2621)"},{"Id":"413134137","IsPullRequest":true,"CreatedAt":"2019-02-21T21:34:52","Actor":"pRizz","Number":"2620","RawContent":null,"Title":"docs: simplify installing from GitHub","State":"open","Body":"Simplify the docs for installing dev from GutHub","Url":"https://github.com/vuejs/vue-router/pull/2620","RelatedDescription":"Open PR \"docs: simplify installing from GitHub\" (#2620)"},{"Id":"412828239","IsPullRequest":false,"CreatedAt":"2019-02-21T09:33:13","Actor":"FF128","Number":"2619","RawContent":null,"Title":"Allow nested routes in middleware","State":"closed","Body":"Hello, i want to allow these paths with parameter. But this redirected me to login (next(\"/login\"))\r\n\r\n![image](https://user-images.githubusercontent.com/46515242/53158233-1ada7300-35fe-11e9-9477-36427a727cec.png)\r\n\r\n![image](https://user-images.githubusercontent.com/46515242/53158282-32196080-35fe-11e9-8bfa-06e51b4c1c88.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2619","RelatedDescription":"Closed issue \"Allow nested routes in middleware\" (#2619)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"420554353","IsPullRequest":true,"CreatedAt":"2019-03-13T15:10:35","Actor":"duyanpeng","Number":"1522","RawContent":null,"Title":"Add  subscribeAction  unit","State":"open","Body":"Add  subscribeAction api unit\r\nthank you","Url":"https://github.com/vuejs/vuex/pull/1522","RelatedDescription":"Open PR \"Add  subscribeAction  unit\" (#1522)"},{"Id":"420548516","IsPullRequest":true,"CreatedAt":"2019-03-13T15:06:18","Actor":"duyanpeng","Number":"1521","RawContent":null,"Title":"add subscribeAction unit","State":"closed","Body":"add subscribeAction api unit ","Url":"https://github.com/vuejs/vuex/pull/1521","RelatedDescription":"Closed or merged PR \"add subscribeAction unit\" (#1521)"},{"Id":"418608570","IsPullRequest":false,"CreatedAt":"2019-03-10T18:15:17","Actor":"zzzgit","Number":"1518","RawContent":null,"Title":"Why can’t I assign a socketio object to state in strict mode? ","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/1060733/54004291-023a9300-4190-11e9-8112-17f8814c1fd1.png)\r\n![image](https://user-images.githubusercontent.com/1060733/54004314-154d6300-4190-11e9-808f-b28bf5396181.png)\r\n![image](https://user-images.githubusercontent.com/1060733/54004330-226a5200-4190-11e9-896e-765daa3626c8.png)\r\n\r\n\r\n### What is expected?\r\n\r\n\r\n### What is actually happening?\r\nin strict mode, I can't assign socket object to state.\r\nis there a solution?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1518","RelatedDescription":"Closed issue \"Why can’t I assign a socketio object to state in strict mode? \" (#1518)"},{"Id":"418332613","IsPullRequest":true,"CreatedAt":"2019-03-10T13:44:16","Actor":"davidsandoz","Number":"1517","RawContent":null,"Title":"Make mutation and action payload optional in definition file","State":"closed","Body":"When testing a mutation without payload in TypeScript, it complains that about the missing payload, even though it's not mandatory.\r\n\r\nThis PR simply makes the payload optional.\r\n\r\nFixes #1491","Url":"https://github.com/vuejs/vuex/pull/1517","RelatedDescription":"Closed or merged PR \"Make mutation and action payload optional in definition file\" (#1517)"},{"Id":"418852210","IsPullRequest":false,"CreatedAt":"2019-03-08T16:11:11","Actor":"jcupps","Number":"1520","RawContent":null,"Title":"Feature Request: Private State","State":"open","Body":"### What problem does this feature solve?\r\nI would like the ability to make certain state private to the store, i.e. accessible within store getters, actions, and mutations, but not directly accessible by consumers (e.g. components). This would prevent unintended reading or manipulation of state which should be done through getters or actions/mutations respectively. As far as I know, there is no good way to achieve this today in Vuex.\r\n\r\n### What does the proposed API look like?\r\nThe API could look something like this:\r\n\r\nA store:\r\n```javascript\r\n{\r\n  state() {\r\n    return {\r\n      somethingPublic: ''\r\n    };\r\n  },\r\n\r\n  privateState() {\r\n    return {\r\n      somethingPrivate: []\r\n    };\r\n  },\r\n\r\n  getters: {\r\n    filtered: (state, getters, privateState) => privateState.somethingPrivate.filter(...)\r\n  }\r\n}\r\n```\r\n\r\nIn a component:\r\n```javascript\r\n// works:\r\nthis.$store.state.somethingPublic\r\nthis.$store.getters.filtered\r\n// doesn't work:\r\nthis.$store.state.somethingPrivate\r\nthis.$store.privateState.somethingPrivate\r\n```\r\n\r\nThanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1520","RelatedDescription":"Open issue \"Feature Request: Private State\" (#1520)"},{"Id":"418840190","IsPullRequest":true,"CreatedAt":"2019-03-08T15:42:49","Actor":"vaga","Number":"1519","RawContent":null,"Title":"docs(fr): Fix typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1519","RelatedDescription":"Open PR \"docs(fr): Fix typo\" (#1519)"},{"Id":"413266987","IsPullRequest":true,"CreatedAt":"2019-03-07T18:10:47","Actor":"jennyliang220","Number":"1514","RawContent":null,"Title":"doc: change ECMASCript into ECMAScript","State":"closed","Body":"![image](https://user-images.githubusercontent.com/8498677/53224814-fa1f2580-36b0-11e9-8f4c-28f387d6161b.png)\r\n","Url":"https://github.com/vuejs/vuex/pull/1514","RelatedDescription":"Closed or merged PR \"doc: change ECMASCript into ECMAScript\" (#1514)"},{"Id":"418113903","IsPullRequest":false,"CreatedAt":"2019-03-07T03:36:37","Actor":"zzzgit","Number":"1516","RawContent":null,"Title":"Why can’t I assign a socketio object to state in strict mode","State":"closed","Body":"```javacript\r\nexport default {\r\n\tstate: {\r\n\t\tsocket: null,\r\n\t},\r\n\tmutations: {\r\n\t\tkeepSocket: (state, payload)=>{\r\n\t\t\tstate.socket = payload\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t}\r\n}\r\n```\r\n\r\nI am using `vuex`, if I try to set a [socket-io](https://socket.io/) client object to state in strict mode, I will get an error like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1060733/53930690-35681e00-40cd-11e9-966f-33e86f37044f.png)\r\n","Url":"https://github.com/vuejs/vuex/issues/1516","RelatedDescription":"Closed issue \"Why can’t I assign a socketio object to state in strict mode\" (#1516)"},{"Id":"417789787","IsPullRequest":false,"CreatedAt":"2019-03-06T12:56:21","Actor":"hezhuojie","Number":"1515","RawContent":null,"Title":"Bug: getters of a dynamic module will lose after unregistering other module","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsbin.com/bejenutewi/edit?js,console](https://jsbin.com/bejenutewi/edit?js,console)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njust one the page [https://jsbin.com/bejenutewi/edit?js,console](https://jsbin.com/bejenutewi/edit?js,console)\r\n\r\n### What is expected?\r\nresult of `store.getters['mod/getOne']` should always be 1\r\n\r\n### What is actually happening?\r\ngetter `mod/getOne` is missing, return `undefined`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1515","RelatedDescription":"Open issue \"Bug: getters of a dynamic module will lose after unregistering other module\" (#1515)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-02-23T15:30:03","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"closed","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Closed issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"410330210","IsPullRequest":false,"CreatedAt":"2019-02-23T15:17:55","Actor":"djam90","Number":"1509","RawContent":null,"Title":"Unit tests do not run when importing router into store and store into router","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/djam90/vuex-vue-router-issue](https://github.com/djam90/vuex-vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm run test:unit` and see the failure. To get the tests to run again, do not import the store into the router and the router into the store.\r\n\r\n### What is expected?\r\nThe tests should run fine and circular imports should work. They *DO* work in the browser just not in Mocha testing environment. \r\n\r\n### What is actually happening?\r\nError as follows:\r\n\r\n```\r\nTypeError: Cannot read property 'getters' of undefined\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:261:1\r\n    at Array.forEach (<anonymous>)\r\n    at assertRawModule (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:260:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:186:1)\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:200:1\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1\r\n    at Array.forEach (<anonymous>)\r\n    at forEachValue (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:199:1)\r\n    at new ModuleCollection (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:160:1)\r\n    at new Store (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:311:1)\r\n```\r\n\r\n---\r\nMy VueX store needs to be able to import the router so it can do routing things like navigate to another page.\r\nMy router needs to be able to access state from VueX to determine what to do in a `router.beforeEach` handler.\r\n\r\nI have asked for help on Stack Overflow:\r\nhttps://stackoverflow.com/questions/54691789/unable-to-import-vuex-store-into-router-and-router-into-store-in-mocha-tests\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1509","RelatedDescription":"Closed issue \"Unit tests do not run when importing router into store and store into router\" (#1509)"},{"Id":"412632780","IsPullRequest":true,"CreatedAt":"2019-02-21T19:16:28","Actor":"perborgen","Number":"1512","RawContent":null,"Title":"Added Scrimba lessons","State":"closed","Body":"Here are the Scrimba lessons localized and with an `override.styl` file for the styling. Did I do it right?","Url":"https://github.com/vuejs/vuex/pull/1512","RelatedDescription":"Closed or merged PR \"Added Scrimba lessons\" (#1512)"},{"Id":"412637975","IsPullRequest":false,"CreatedAt":"2019-02-20T21:31:16","Actor":"tleeaf","Number":"1513","RawContent":null,"Title":"Naming store state array 'queue' results in one dropped array member","State":"closed","Body":"I named one of my store state members 'queue', which resulted in unexpected behavior, namely that one member of the array would disappear when testing the app in-browser. This occurs independently of any other actions or mutations. I confirmed this by checking the result in vue devtools for chrome, in the vuex tab, and also by adding a v-for that produced simple tags dependent on the data in the 'queue' array.\r\n\r\n`export const store = new Vuex.Store({\r\n  state: {\r\n     queue: [ \r\n      {id: 1333333333}, //one of these members will be dropped \r\n      {id: 1222222222},\r\n      {id: 1111111111}\r\n    ],\r\n    vocabulary: [],\r\n    lessons: [],    \r\n  },\r\n  mutations, actions, getters\r\n})`","Url":"https://github.com/vuejs/vuex/issues/1513","RelatedDescription":"Closed issue \"Naming store state array 'queue' results in one dropped array member\" (#1513)"},{"Id":"409173630","IsPullRequest":false,"CreatedAt":"2019-02-18T18:56:17","Actor":"visualjerk","Number":"1505","RawContent":null,"Title":"Infinite Loop With Error Handler And Vuex","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/z6ww1zp2q4](https://codesandbox.io/s/z6ww1zp2q4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- open browser console\r\n\r\n### What is expected?\r\nNot getting an infinite render loop:\r\n[Vue warn]: You may have an infinite update loop in a component render function.\r\n\r\n### What is actually happening?\r\nGetting an infinite render loop\r\n\r\n---\r\nThis happens when you handle an error that was caused during rendering and try to commit it to the store.\r\n\r\nIt looks like a component that throws an error tries to rerender after the store is updated, even so it doesn't use the store's state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1505","RelatedDescription":"Closed issue \"Infinite Loop With Error Handler And Vuex\" (#1505)"},{"Id":"411557104","IsPullRequest":true,"CreatedAt":"2019-02-18T17:28:27","Actor":"Jinjiang","Number":"1511","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/a6973fa...31e4fbc\r\n/ping @Justineo","Url":"https://github.com/vuejs/vuex/pull/1511","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1511)"},{"Id":"411250556","IsPullRequest":true,"CreatedAt":"2019-02-17T23:34:11","Actor":"brophdawg11","Number":"1510","RawContent":null,"Title":"Add support for namespace functions in mapXXX helpers","State":"open","Body":"This is a stab at adding the functionality requested by https://github.com/vuejs/vuex/issues/863.\r\n\r\nI also noticed that there was another attempt at this in https://github.com/vuejs/vuex/pull/924, but the diff seems to be beyond the scope of just the change.\r\n\r\nUnit tests have been added, but no changes have yet been made to TypeScript types or documentation, etc.","Url":"https://github.com/vuejs/vuex/pull/1510","RelatedDescription":"Open PR \"Add support for namespace functions in mapXXX helpers\" (#1510)"},{"Id":"410145165","IsPullRequest":true,"CreatedAt":"2019-02-14T06:15:56","Actor":"parth67","Number":"1508","RawContent":null,"Title":"Fixed issue#1507 : Memory leak happening while using registerModule/u…","State":"open","Body":"Fixes #1507 \r\n\r\nClosure function was fixed with helper function partial which doesn't retain oldVm in environment.","Url":"https://github.com/vuejs/vuex/pull/1508","RelatedDescription":"Open PR \"Fixed issue#1507 : Memory leak happening while using registerModule/u…\" (#1508)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-02-13T15:23:18","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"closed","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Closed or merged PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-13T15:21:16","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Closed or merged PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"409797501","IsPullRequest":false,"CreatedAt":"2019-02-13T13:09:45","Actor":"skkart","Number":"1507","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mrj8spu0/](https://jsfiddle.net/mrj8spu0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the JSFiddle link mentioned as part of this issue.\r\n2. Check and record the heap memory in the browser on initial stage.\r\n3. Click on the \"Register\" button to dynamically register Module B 100 times\r\n4. Now we will see an increase in heap memory on account of registering module 100 times.\r\n5. Click on \"Un-Register\" button to dynamically un-register Module B 100 times\r\n6. Check the heap memory again, at this point will see an jump in memory usage on account of un-registering 100 module. \r\n\r\n### What is expected?\r\nHeap memory generated on step 3 & 5 must be cleared after step 6. (Final stage)\r\n\r\n### What is actually happening?\r\nHeap memory of the browser is not getting cleared.\r\n\r\n---\r\nWe are observing memory leak of Store._vm while using registerModule/unregisterModule extensively.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n\r\noldVm.$destroy(); \r\noldVm = null; // This is the missing code\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52727462-4ac0bf80-2fdb-11e9-91ce-7dd012cba4b5.png)\r\n\r\n[Heap-20190213T220212.heaptimeline.zip](https://github.com/vuejs/vuex/files/2861246/Heap-20190213T220212.heaptimeline.zip)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1507","RelatedDescription":"Open issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1507)"},{"Id":"409792179","IsPullRequest":false,"CreatedAt":"2019-02-13T12:56:14","Actor":"skkart","Number":"1506","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"We are observing memory leak of Store._vm while using registerModule/unregisterModule.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nI have created an demo link to illustrate the above mentioned problem\r\n[jsFiddle link](https://jsfiddle.net/mrj8spu0/)\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n**_oldVm.$destroy(); \r\noldVm = null;      // This is the missing code_**\r\n```\r\nfunction resetStoreVM (store, state, hot) {\r\n    var oldVm = store._vm;\r\n\r\n    ...\r\n\t...\r\n\r\n    if (oldVm) {\r\n      if (hot) {\r\n        // dispatch changes in all subscribed watchers\r\n        // to force getter re-evaluation for hot reloading.\r\n        store._withCommit(function () {\r\n          oldVm._data.$$state = null;\r\n        });\r\n      }\r\n\r\n      // Existing Code\r\n      Vue.nextTick(function () { return oldVm.$destroy(); });\r\n       \r\n      // The OldVm Object is still in heap even after destroy\r\n      // Appropriate Code\r\n      oldVm.$destroy(); \r\n      oldVm = null;\r\n    }\r\n  }\r\n```\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52712275-1983c780-2fba-11e9-8c67-43b24afe56e1.png)\r\n\r\n[Heap-20190213T172945.heapsnapshot.zip](https://github.com/vuejs/vuex/files/2860354/Heap-20190213T172945.heapsnapshot.zip)\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1506","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1506)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-13T11:12:36","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Closed issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-02-10T09:25:00","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-03-14T05:30:45.4231911Z","RunDurationInMilliseconds":1365}