{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":226,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"},{"Id":"6854176970","Type":"IssuesEvent","CreatedAt":"2017-11-14T18:00:49","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Reopened issue \"Microsoft Security Advisory CVE-2017-11770 : Malformed Certificate can cause Denial of Service\" (#44) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2017-11770 \r\n## Malformed Certificate can cause Denial of Service\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public version of .NET Core where a malformed certificate or other ASN.1 formatted data could lead to a denial of service via an infinite loop on Linux and macOS.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.8, 1.1.5 and 2.0.1. Developers are advised to update their .NET Core SDK to version 2.0.3 or 1.1.5.\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\n.NET Core applications running on Windows are not affected by this vulnerability. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed blow and is running on Linux.\r\n\r\nPlatform  | Runtime Version | Fixed runtime version\r\n----------------|----------------| -------------------------\r\nLinux | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4<br />2.0.0 |  1.0.8<br />1.1.5<br />2.0.1\r\nmacOS | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4 |  1.0.8<br />1.1.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nAny application running against .NET Core 1.0.7 or lower, or 1.1.2 or lower, or 2.0.0 is affected. The default version of the .NET core runtime can be listed by running `dotnet --info`, which should produce output in the form of \r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\nAs this only displays the latest version of the runtime installed it may hide the fact that you have a vulnerable runtime. A complete list of runtimes can be discovered by performing a directory listing in the install root directories. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.8, 1.1.5 or 2.0.1 then any applications targeting .NET Core will be vulnerable.\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Version 1.1.5 will also install version 1.0.8 of the runtime.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Bachraty Gergely for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11770](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8585)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2017-11-14_"},{"Id":"6853282986","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:23:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/48","RelatedDescription":"Closed issue \"Reserved\" (#48) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853280485","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:35","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Closed issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853280272","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:33","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Opened issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853278942","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:20","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Closed issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6960311612","Type":"PullRequestEvent","CreatedAt":"2017-12-08T02:39:04","Actor":"swgillespie","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15433","RelatedDescription":"Merged pull request \"Fix a bad cast in AsyncPinObject\" (#15433) at dotnet/coreclr","RelatedBody":"This unfortunate typo casts a function pointer (`promote_func`) to a `ScanContext`. This is obviously doomed and results in crashes in most cases. It is really suspect that this wasn't caught by our test gauntlet; perhaps we don't do I/O often in the CoreCLR test suite.\r\n\r\nAt any rate, this fixes https://github.com/dotnet/coreclr/issues/15432. I was also able to test the fix for this bug with the official latest 2.1.0-preview1 SDK build by loading a standalone GC containing my fix, though, so that's exciting!"},{"Id":"6960311606","Type":"IssuesEvent","CreatedAt":"2017-12-08T02:39:04","Actor":"swgillespie","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15432","RelatedDescription":"Closed issue \"[Local GC] AV in handle table when promoting overlapped data object\" (#15432) at dotnet/coreclr","RelatedBody":"Seen in a modified sample ASP.NET Core application:\r\n\r\n```\r\n00 0000009b`496ff420 00007ffe`8177417f coreclr!SVR::GCHeap::Promote+0x40 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 33809] \r\n01 0000009b`496ff4a0 00007ffe`814576ab coreclr!AsyncPinObject+0x2f [e:\\a\\_work\\1803\\s\\src\\gc\\objecthandle.cpp @ 289] \r\n02 0000009b`496ff4d0 00007ffe`8153f704 coreclr!ScanConsecutiveHandlesWithoutUserData+0x6b [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 444] \r\n03 0000009b`496ff500 00007ffe`8153f3b2 coreclr!BlockScanBlocksWithoutUserData+0x44 [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 559] \r\n04 0000009b`496ff530 00007ffe`8153f2c5 coreclr!SegmentScanByTypeChain+0x8e [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 1600] \r\n05 0000009b`496ff570 00007ffe`8153f150 coreclr!TableScanHandles+0x95 [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 1723] \r\n06 0000009b`496ff620 00007ffe`8153ee6f coreclr!HndScanHandlesForGC+0x12c [e:\\a\\_work\\1803\\s\\src\\gc\\handletable.cpp @ 906] \r\n07 0000009b`496ff6e0 00007ffe`8153eaf9 coreclr!Ref_TracePinningRoots+0x143 [e:\\a\\_work\\1803\\s\\src\\gc\\objecthandle.cpp @ 1081] \r\n08 0000009b`496ff760 00007ffe`8175f1ba coreclr!GCScan::GcScanHandles+0x45 [e:\\a\\_work\\1803\\s\\src\\gc\\gcscan.cpp @ 170] \r\n09 0000009b`496ff7a0 00007ffe`81758db6 coreclr!SVR::gc_heap::mark_phase+0x3b6 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 19648] \r\n0a 0000009b`496ff840 00007ffe`81758ca5 coreclr!SVR::gc_heap::gc1+0xe2 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 15406] \r\n0b 0000009b`496ff8a0 00007ffe`8175971f coreclr!SVR::gc_heap::garbage_collect+0x715 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 16990] \r\n0c 0000009b`496ff910 00007ffe`81759921 coreclr!SVR::gc_heap::gc_thread_function+0xdb [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 5403] \r\n0d 0000009b`496ff940 00007ffe`81579bd1 coreclr!SVR::gc_heap::gc_thread_stub+0xa1 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 24928] \r\n0e (Inline Function) --------`-------- coreclr!`anonymous-namespace'::CreateNonSuspendableThread::__l2::<lambda_bace80ff87d706a3467ec0bab13d8043>::operator()+0x3f [e:\\a\\_work\\1803\\s\\src\\vm\\gcenv.ee.cpp @ 1276] \r\n0f 0000009b`496ffe80 00007ffe`d5191fe4 coreclr!<lambda_bace80ff87d706a3467ec0bab13d8043>::<lambda_invoker_cdecl>+0x51 [e:\\a\\_work\\1803\\s\\src\\vm\\gcenv.ee.cpp @ 1278] \r\n10 0000009b`496ffeb0 00007ffe`d789ef91 KERNEL32!BaseThreadInitThunk+0x14 [base\\win32\\client\\thread.c @ 64] \r\n11 0000009b`496ffee0 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [minkernel\\ntdll\\rtlstrt.c @ 997] \r\n```\r\n\r\nThe object in question is `System.Threading.OverlappedData`:\r\n```\r\n0:010> ?? *ppObject\r\nclass Object * 0x000001f1`a33e65a8\r\n   +0x000 m_pMethTab       : 0x00007ffe`7ba13f89 MethodTable\r\n0:010> !do  0x000001f1`a33e65a8\r\nName:        System.Threading.OverlappedData\r\nMethodTable: 00007ffe7ba13f88\r\nEEClass:     00007ffe7b1654b8\r\nSize:        112(0x70) bytes\r\nFile:        E:\\public\\Dumps\\12-07-2017\\dotnet-runtime-latest-win-x64\\shared\\Microsoft.NETCore.App\\2.1.0-preview1-26007-05\\System.Private.CoreLib.dll\r\nFields:\r\n              MT    Field   Offset                 Type VT     Attr            Value Name\r\n00007ffe7b9cd220  40008d8        8  System.IAsyncResult  0 instance 0000000000000000 m_asyncResult\r\n00007ffe7b9cfd48  40008d9       10 ...ompletionCallback  0 instance 000001f1a33e6688 m_iocb\r\n00007ffe7ba20168  40008da       18 ...ompletionCallback  0 instance 000001f1a33e70e0 m_iocbHelper\r\n00007ffe7ba13f28  40008db       20 ...eading.Overlapped  0 instance 000001f1a33e6880 m_overlapped\r\n00007ffe7ba067d0  40008dc       28        System.Object  0 instance 0000000000000000 m_userObject\r\n00007ffe7ba1bee8  40008dd       30        System.IntPtr  1 instance      1ef218a19f0 m_pinSelf\r\n00007ffe7ba1bee8  40008de       38        System.IntPtr  1 instance                0 m_userObjectInternal\r\n00007ffe7ba08760  40008df       40         System.Int32  1 instance                1 m_AppDomainId\r\n00007ffe7ba06280  40008e0       44          System.Byte  1 instance                0 m_isArray\r\n00007ffe7ba06280  40008e1       45          System.Byte  1 instance                0 m_toBeCleaned\r\n00007ffe7b9cfab0  40008e2       48 ....NativeOverlapped  1 instance 000001f1a33e65f0 m_nativeOverlapped\r\n```\r\n\r\nOnly repros with Server GC. Almost certainly a regression caused by https://github.com/dotnet/coreclr/pull/14982. I'm looking into it now.\r\n\r\ncc @Maoni0 @sergiy-k @jkotas "},{"Id":"6960281018","Type":"PullRequestEvent","CreatedAt":"2017-12-08T02:27:13","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15434","RelatedDescription":"Opened pull request \"delegate setting of the unused flag to rewriteWith\" (#15434) at dotnet/coreclr","RelatedBody":"test PR"},{"Id":"6960099388","Type":"PullRequestEvent","CreatedAt":"2017-12-08T01:18:36","Actor":"swgillespie","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15433","RelatedDescription":"Opened pull request \"Fix a bad cast in AsyncPinObject\" (#15433) at dotnet/coreclr","RelatedBody":"This unfortunate typo casts a function pointer (`promote_func`) to a `ScanContext`. This is obviously doomed and results in crashes in most cases. It is really suspect that this wasn't caught by our test gauntlet; perhaps we don't do I/O often in the CoreCLR test suite.\r\n\r\nAt any rate, this fixes https://github.com/dotnet/coreclr/issues/15432. I was also able to test the fix for this bug with the official latest 2.1.0-preview1 SDK build by loading a standalone GC containing my fix, though, so that's exciting!"},{"Id":"6960013203","Type":"IssuesEvent","CreatedAt":"2017-12-08T00:47:28","Actor":"swgillespie","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15432","RelatedDescription":"Opened issue \"[Local GC] AV in handle table when promoting overlapped data object\" (#15432) at dotnet/coreclr","RelatedBody":"Seen in a modified sample ASP.NET Core application:\r\n\r\n```\r\n00 0000009b`496ff420 00007ffe`8177417f coreclr!SVR::GCHeap::Promote+0x40 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 33809] \r\n01 0000009b`496ff4a0 00007ffe`814576ab coreclr!AsyncPinObject+0x2f [e:\\a\\_work\\1803\\s\\src\\gc\\objecthandle.cpp @ 289] \r\n02 0000009b`496ff4d0 00007ffe`8153f704 coreclr!ScanConsecutiveHandlesWithoutUserData+0x6b [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 444] \r\n03 0000009b`496ff500 00007ffe`8153f3b2 coreclr!BlockScanBlocksWithoutUserData+0x44 [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 559] \r\n04 0000009b`496ff530 00007ffe`8153f2c5 coreclr!SegmentScanByTypeChain+0x8e [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 1600] \r\n05 0000009b`496ff570 00007ffe`8153f150 coreclr!TableScanHandles+0x95 [e:\\a\\_work\\1803\\s\\src\\gc\\handletablescan.cpp @ 1723] \r\n06 0000009b`496ff620 00007ffe`8153ee6f coreclr!HndScanHandlesForGC+0x12c [e:\\a\\_work\\1803\\s\\src\\gc\\handletable.cpp @ 906] \r\n07 0000009b`496ff6e0 00007ffe`8153eaf9 coreclr!Ref_TracePinningRoots+0x143 [e:\\a\\_work\\1803\\s\\src\\gc\\objecthandle.cpp @ 1081] \r\n08 0000009b`496ff760 00007ffe`8175f1ba coreclr!GCScan::GcScanHandles+0x45 [e:\\a\\_work\\1803\\s\\src\\gc\\gcscan.cpp @ 170] \r\n09 0000009b`496ff7a0 00007ffe`81758db6 coreclr!SVR::gc_heap::mark_phase+0x3b6 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 19648] \r\n0a 0000009b`496ff840 00007ffe`81758ca5 coreclr!SVR::gc_heap::gc1+0xe2 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 15406] \r\n0b 0000009b`496ff8a0 00007ffe`8175971f coreclr!SVR::gc_heap::garbage_collect+0x715 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 16990] \r\n0c 0000009b`496ff910 00007ffe`81759921 coreclr!SVR::gc_heap::gc_thread_function+0xdb [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 5403] \r\n0d 0000009b`496ff940 00007ffe`81579bd1 coreclr!SVR::gc_heap::gc_thread_stub+0xa1 [e:\\a\\_work\\1803\\s\\src\\gc\\gc.cpp @ 24928] \r\n0e (Inline Function) --------`-------- coreclr!`anonymous-namespace'::CreateNonSuspendableThread::__l2::<lambda_bace80ff87d706a3467ec0bab13d8043>::operator()+0x3f [e:\\a\\_work\\1803\\s\\src\\vm\\gcenv.ee.cpp @ 1276] \r\n0f 0000009b`496ffe80 00007ffe`d5191fe4 coreclr!<lambda_bace80ff87d706a3467ec0bab13d8043>::<lambda_invoker_cdecl>+0x51 [e:\\a\\_work\\1803\\s\\src\\vm\\gcenv.ee.cpp @ 1278] \r\n10 0000009b`496ffeb0 00007ffe`d789ef91 KERNEL32!BaseThreadInitThunk+0x14 [base\\win32\\client\\thread.c @ 64] \r\n11 0000009b`496ffee0 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [minkernel\\ntdll\\rtlstrt.c @ 997] \r\n```\r\n\r\nThe object in question is `System.Threading.OverlappedData`:\r\n```\r\n0:010> ?? *ppObject\r\nclass Object * 0x000001f1`a33e65a8\r\n   +0x000 m_pMethTab       : 0x00007ffe`7ba13f89 MethodTable\r\n0:010> !do  0x000001f1`a33e65a8\r\nName:        System.Threading.OverlappedData\r\nMethodTable: 00007ffe7ba13f88\r\nEEClass:     00007ffe7b1654b8\r\nSize:        112(0x70) bytes\r\nFile:        E:\\public\\Dumps\\12-07-2017\\dotnet-runtime-latest-win-x64\\shared\\Microsoft.NETCore.App\\2.1.0-preview1-26007-05\\System.Private.CoreLib.dll\r\nFields:\r\n              MT    Field   Offset                 Type VT     Attr            Value Name\r\n00007ffe7b9cd220  40008d8        8  System.IAsyncResult  0 instance 0000000000000000 m_asyncResult\r\n00007ffe7b9cfd48  40008d9       10 ...ompletionCallback  0 instance 000001f1a33e6688 m_iocb\r\n00007ffe7ba20168  40008da       18 ...ompletionCallback  0 instance 000001f1a33e70e0 m_iocbHelper\r\n00007ffe7ba13f28  40008db       20 ...eading.Overlapped  0 instance 000001f1a33e6880 m_overlapped\r\n00007ffe7ba067d0  40008dc       28        System.Object  0 instance 0000000000000000 m_userObject\r\n00007ffe7ba1bee8  40008dd       30        System.IntPtr  1 instance      1ef218a19f0 m_pinSelf\r\n00007ffe7ba1bee8  40008de       38        System.IntPtr  1 instance                0 m_userObjectInternal\r\n00007ffe7ba08760  40008df       40         System.Int32  1 instance                1 m_AppDomainId\r\n00007ffe7ba06280  40008e0       44          System.Byte  1 instance                0 m_isArray\r\n00007ffe7ba06280  40008e1       45          System.Byte  1 instance                0 m_toBeCleaned\r\n00007ffe7b9cfab0  40008e2       48 ....NativeOverlapped  1 instance 000001f1a33e65f0 m_nativeOverlapped\r\n```\r\n\r\nOnly repros with Server GC. Almost certainly a regression caused by https://github.com/dotnet/coreclr/pull/14982. I'm looking into it now.\r\n\r\ncc @Maoni0 @sergiy-k @jkotas "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6960189627","Type":"PullRequestEvent","CreatedAt":"2017-12-08T01:52:23","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8189","RelatedDescription":"Opened pull request \"Global tools: treat manifest EntryPoint value as a file path within the package\" (#8189) at dotnet/cli","RelatedBody":"Currently dotnet install tools assumes that EntryPoint is the filename inside `tools/$(BundledTargetFramework)/any/` in the package. This restriction seems unnecessary. This also helps avoid the next-version problem when BundledTargetFramework changes to netcoreapp2.2. Without this, netcoreapp2.1 tool packages would no longer install when CLI is upgraded to a new version.\r\n\r\nAs a side note, if I've missed something and the `tools/$(BundledTargetFramework)/any/` restriction is important, it seems like you could easily add some kind of assert during install, such as:\r\n```c#\r\nif (Path.GetDirectoryName(toolConfig.EntryPoint) != $\"tools/{BundledTargetFramework}/any/\")\r\n    throw new Exception(\"Global tools must put the entry point in tools/{BundledTargetFramework}/any/ for (reasons)\");\r\n```"},{"Id":"6959855959","Type":"PullRequestEvent","CreatedAt":"2017-12-07T23:52:48","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8006","RelatedDescription":"Merged pull request \"ASP.NET Core HTTPS development certificate support\" (#8006) at dotnet/cli","RelatedBody":"Hey @livarcocc. I've put together a PR based on our conversation on Friday. There are a few small issues to figure out but I think the general approach is ok.\r\n\r\nAdded support for generating the HTTPS development certificate on the CLI first run experience.\r\nThere are a bunch of open issues:\r\n* How/where to put the certificate generation component. (For this proof of concept I just inlined it, but we need to figure out the engineering to determine where to house the component and how to share it with the CLI).\r\n* Add tests related to the functionality. (I'm just putting it all together to validate the experience).\r\n* The implementation needs to live in dotnet, as it is netcoreapp2.0 (I didn't want to change the target framework of Microsoft.DotNet.Configurer nor cross-compile unless you tell me otherwise).\r\n* Review messages shown to the user."},{"Id":"6959656345","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:52:31","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8176","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.6.0-preview1-4688 into cli:master\" (#8176) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-preview1-4688 into cli master branch\r\n\r\nReplaces: https://github.com/dotnet/cli/pull/8125"},{"Id":"6959655491","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:52:16","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8188","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.6.0-preview1-4688\" (#8188) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-preview1-4688 into cli master branch\r\n\r\nReplaces: https://github.com/dotnet/cli/pull/8125 & https://github.com/dotnet/cli/pull/8176\r\n\r\nNote: CLI:master has changed significantly today - easier to create a new PR\r\n@rohit21agrawal \r\nPlease note the new structure of 'DependencyVersions.props'"},{"Id":"6959589072","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:35:02","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8165","RelatedDescription":"Merged pull request \"Updating the websdk version to 2.0.0-rel-20171110-671\" (#8165) at dotnet/cli","RelatedBody":"MyGet feed with version: \r\nhttps://dotnet.myget.org/feed/dotnet-web/package/nuget/Microsoft.NET.Sdk.Web/2.0.0-rel-20171110-671 \r\n\r\n@livarcocc "},{"Id":"6959587923","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:34:43","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8186","RelatedDescription":"Merged pull request \"Fix msbuild version\" (#8186) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"6959566218","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:29:16","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8146","RelatedDescription":"Merged pull request \"LOC CHECKIN | dotnet/cli-master | 20171201\" (#8146) at dotnet/cli","RelatedBody":null},{"Id":"6959549038","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:24:53","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8173","RelatedDescription":"Merged pull request \"Merge release/15.5 to master\" (#8173) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171206-080040\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171206-080040 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959486824","Type":"IssuesEvent","CreatedAt":"2017-12-07T22:09:33","Actor":"bradleypatton","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8187","RelatedDescription":"Opened issue \"dotnet build fails citing missing references\" (#8187) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nI have a ASP.Net Core 2 web application with class libraries that target the .net 4.7 framework. Visual Studio compiles fine but dotnet build fails. I've tracked the errors down to the class libraries which I've switched to use. I've followed the workarounds here (https://github.com/dotnet/standard/issues/481) and switched the library to use PackageReferences in the .csproj file and remove the packages.config. After some initial issues VS compiles fine and nuget restore works without issue but dotnet build still fails.\r\n\r\n## Expected  behavior\r\ndotnet build succeeds.\r\n\r\n## Actual behavior\r\nMultiple errors about missing assemblies (ie Nuget Package references).\r\n\r\n`ApplicationSupport\\EmailConfiguration.cs(4,7): error CS0246: The type or namespace name 'Newtonsoft' could not be found (are you missing a using directive or an assembly reference?) [C:\\Dev\\Neptune\\Neptune.Common\\Neptune.Common.csproj]`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6960147160","Type":"IssuesEvent","CreatedAt":"2017-12-08T01:36:30","Actor":"taoyouh","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/598","RelatedDescription":"Opened issue \"SslStream.ShutdownAsync available?\" (#598) at dotnet/standard","RelatedBody":"In .NET Core, we can use SslStream.ShutdownAsync to properly shut down an SSL stream. But this API is not present in .NET Standard. Will this API be added to .NET Standard? Or how can we correctly shutdown an SSL stream?"},{"Id":"6960090807","Type":"PullRequestEvent","CreatedAt":"2017-12-08T01:15:32","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/597","RelatedDescription":"Merged pull request \"Remove an 's'\" (#597) at dotnet/standard","RelatedBody":"\"for a savings of\" -> \"for a saving of\" in the console output"},{"Id":"6958563281","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:42:57","Actor":"markrendle","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/597","RelatedDescription":"Opened pull request \"Remove an 's'\" (#597) at dotnet/standard","RelatedBody":"\"for a savings of\" -> \"for a saving of\" in the console output"},{"Id":"6948639364","Type":"PullRequestEvent","CreatedAt":"2017-12-06T01:26:43","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/594","RelatedDescription":"Closed pull request \"Update versions.md\" (#594) at dotnet/standard","RelatedBody":"quick link to .NET Framework system requirements to easily check which OS is supported."},{"Id":"6947749059","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:24:29","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/596","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02304-01 (master)\" (#596) at dotnet/standard","RelatedBody":""},{"Id":"6941976997","Type":"PullRequestEvent","CreatedAt":"2017-12-04T22:00:44","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/596","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02304-01 (master)\" (#596) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6960658858","Type":"PullRequestEvent","CreatedAt":"2017-12-08T05:08:39","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25789","RelatedDescription":"Opened pull request \"Add {RO}Span GetReference and ROMemory TryGetArray to MemoryMarshal\" (#25789) at dotnet/corefx","RelatedBody":"Part of:\r\nhttps://github.com/dotnet/corefx/issues/25412\r\nhttps://github.com/dotnet/corefx/issues/25615\r\n\r\nDepends on the PR in coreclr - https://github.com/dotnet/coreclr/pull/15417\r\n\r\ncc @jkotas, @stephentoub, @KrzysztofCwalina "},{"Id":"6960210874","Type":"PullRequestEvent","CreatedAt":"2017-12-08T02:00:32","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25788","RelatedDescription":"Opened pull request \"Fix tests for path validation changes on Windows \" (#25788) at dotnet/corefx","RelatedBody":"The Null check was added to GetFullPath function in the coreclr. These tests are in respond to that"},{"Id":"6960029292","Type":"PullRequestEvent","CreatedAt":"2017-12-08T00:53:17","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/25323","RelatedDescription":"Closed pull request \"Porting: Switch WaitNamedPipe and CreateNamedPipeClient invocation ordering. \" (#25323) at dotnet/corefx","RelatedBody":"(Original PR #24616)\r\n\r\n* Switch WaitNamedPipe and CreateNamedPipeClient invocation ordering.\r\n\r\nWe need to do this as WaitNamedPipe is not supported in Windows Containers.\r\nBy default using CreateNamedPipeClient first with call to WaitNamedPipe as\r\na fallback only will allow us to use NamedPipeClientStream inside Windows\r\nContainers.\r\n\r\n* Integrate feedback from PR."},{"Id":"6960016368","Type":"IssuesEvent","CreatedAt":"2017-12-08T00:48:35","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/22014","RelatedDescription":"Closed issue \"Race in NamedPipeClientStream.TryConnect leads to unexpected exception\" (#22014) at dotnet/corefx","RelatedBody":"The Windows version of [`TryConnect`](https://github.com/dotnet/corefx/blob/master/src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.Windows.cs#L25) first calls `WaitNamedPipe` and if it returns \"file not found\" it tries again until the timeout expires. If `WaitNamedPipe` succeeds then the code calls `CreateNamedPipeClient` (`CreateFile`) and if that returns any error other than \"pipe busy\" it throws an exception. If the server dies between the call to `WaitNamedPipe` and `CreateNamedPipeClient` you'll end up with an unexpected  `FileNotFoundException`.\r\n\r\nIMO `TryConnect` should just call `CreateNamedPipeClient` first and fall back to `WaitNamedPipe` if it returns \"file not found\" or \"pipe busy\"."},{"Id":"6959999503","Type":"IssuesEvent","CreatedAt":"2017-12-08T00:42:21","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/19701","RelatedDescription":"Reopened issue \"Test: System.Net.Http.Functional.Tests.HttpClientHandler_ServerCertificates_Test/NoCallback_RevokedCertificate_NoRevocationChecking_Succeeds failed with \"System.Net.Http.HttpRequestException\"\" (#19701) at dotnet/corefx","RelatedBody":"Multiple tests fail with the same stack indicating that the request took more than the configured (default=100s) timeout for HttpClient.\r\nThe reasons for this timeout may be different but in most cases the way the tests report the error makes it difficult (or impossible) to understand why the server didn't reply (or why the client didn't receive that reply).\r\n\r\n- System.Net.Http.Functional.Tests.HttpClientHandler_ServerCertificates_Test/NoCallback_RevokedCertificate_NoRevocationChecking_Succeeds\r\n- System.Net.Http.Functional.Tests.HttpClientHandler_SslProtocols_Test.GetAsync_AllowedSSLVersion_Succeeds(acceptedProtocol: Tls11, requestOnlyThisProtocol: False)\r\n- System.Net.Http.Functional.Tests.HttpClientHandler_SslProtocols_Test.GetAsync_AllowedSSLVersion_Succeeds(acceptedProtocol: Tls11, requestOnlyThisProtocol: True)\r\n- System.Net.Http.Functional.Tests.HttpClientHandlerTest/GetAsync_AllowAutoRedirectTrue_NonRedirectStatusCode_LocationHeader_NoRedirect(statusCode: 200)\r\n- System.Net.Http.Functional.Tests.HttpClientHandlerTest/Proxy_BypassFalse_GetRequestGoesThroughCustomProxy(creds: null, wrapCredsInCache: False)\r\n- System.Net.Http.Functional.Tests.HttpClientTest.SendAsync_ExpectedDiagnosticSourceLogging\r\n- System.Net.Http.Functional.Tests.PostScenarioTest.PostUsingChunkedEncoding_Success(serverUri: http://corefx-net.cloudapp.net/Echo.ashx)\r\n- System.Net.Http.Functional.Tests.PostScenarioTest/PostEmptyContentUsingContentLengthSemantics_Success(serverUri: http://corefx-net.cloudapp.net/Echo.ashx)\r\n- System.Net.Http.Functional.Tests.PostScenarioTest.PostUsingUsingConflictingSemantics_UsesChunkedSemantics \r\n- System.Net.Http.Functional.Tests.ResponseStreamTest/ReadAsStreamAsync_Cancel_TaskIsCanceled\r\n\r\n\r\nOS Distribution:\r\n- (most likely to fail) Windows.7.Amd64-x86 Debug\r\n- Windows.10.Nano.Amd64-x64 Release\r\n- Windows.10.Amd64-x64 Release\r\n- Windows.10.Amd64-x86 Release\r\n- Windows.7.Amd64-x86 Release\r\n\r\n---\r\n\r\nOpened on behalf of @Jiayili1\r\n\r\nThe test `System.Net.Http.Functional.Tests.HttpClientHandler_ServerCertificates_Test/NoCallback_RevokedCertificate_NoRevocationChecking_Succeeds` has failed.\r\n\r\nSystem.Net.Http.HttpRequestException : An error occurred while sending the request.\\r\r\n    ---- System.Net.Http.WinHttpException : The operation has been canceled\r\n\r\n        Stack Trace:\r\n\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__58.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at System.Net.Http.Functional.Tests.HttpClientHandler_ServerCertificates_Test.<NoCallback_RevokedCertificate_NoRevocationChecking_Succeeds>d__9.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    ----- Inner Stack Trace -----\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Threading.Tasks.RendezvousAwaitable`1.GetResult()\r\n       at System.Net.Http.WinHttpHandler.<StartRequest>d__105.MoveNext()\r\nBuild : Master - 20170512.01 (Core Tests)\r\nFailing configurations:\r\n- Windows.10.Amd64-x86\r\n  - Release\r\n- Windows.81.Amd64-x86\r\n  - Release\r\n\r\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20170512.01/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.HttpClientHandler_ServerCertificates_Test~2FNoCallback_RevokedCertificate_NoRevocationChecking_Succeeds"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6960690719","Type":"IssuesEvent","CreatedAt":"2017-12-08T05:22:55","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22890","RelatedDescription":"Closed issue \"Update Roslyn to use RTM version of SDK instead of preview\" (#22890) at dotnet/roslyn","RelatedBody":"Follow-up on https://github.com/dotnet/roslyn/pull/22812 which switched us to using SDK `2.1.1-preview-007094`.\r\n\r\nUpdate: it was updated to `2.2.0-preview1-007622` by Jared since."},{"Id":"6960688907","Type":"IssuesEvent","CreatedAt":"2017-12-08T05:22:06","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23652","RelatedDescription":"Closed issue \"Cannot obtain symbol for tuple sequence in foreach\" (#23652) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 15.5 Community\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nvoid EnumerateTuples(IEnumerable<(int, string)> sequence)\r\n{\r\n    foreach (var (i, s) in sequence)\r\n    {\r\n    }\r\n}\r\n```\r\nI am not able to obtain symbol for 'sequence' in foreach.\r\n"},{"Id":"6960665181","Type":"PullRequestEvent","CreatedAt":"2017-12-08T05:11:28","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23663","RelatedDescription":"Opened pull request \"When all inferred tuple names are duplicates, TupleElementNames should be default\" (#23663) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\nUse the semantic model API (`GetTypeInfo`) on a tuple with inferred elements names, but the names are all duplicates. The type returned should have a default `TupleElementNames` array, but previously was an array filled with `null`s.\r\n\r\n### Bugs this fixes\r\nFixes https://github.com/dotnet/roslyn/issues/23651\r\n\r\n### Workarounds, if any\r\nHandle a returned array of nulls.\r\n\r\n### Risk\r\n### Performance impact\r\nLow. The change in logic is limited to binding tuples and deconstructions.\r\n\r\n### Is this a regression from a previous update?\r\nNo.\r\n\r\n### Root cause analysis\r\nMissed that case in testing.\r\n\r\n### How was the bug found?\r\nReported by team member."},{"Id":"6960471398","Type":"IssuesEvent","CreatedAt":"2017-12-08T03:42:56","Actor":"tannergooding","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23662","RelatedDescription":"Opened issue \"Cannot debug release mode net core projects in VS with JMC enabled\" (#23662) at dotnet/roslyn","RelatedBody":"**Repro**\r\n1. Create a new C# Console App (.NET Core)\r\n2. Ensure `Just My Code` is enabled\r\n  A. Debug->Options\r\n  B. General->Enable Just My Code\r\n3. Ensure the active configuration is `Debug`\r\n4. Start the debugger (F11)\r\n  A. Observe that you can step through your code\r\n5. Switch the active configuration to `Release`\r\n6. Start the debugger (F11)\r\n A. Observe that the console starts and you never step into your code\r\n7. Disable `Just My Code`\r\n  A. See step 2\r\n8. Start the debugger (F11)\r\n  A. Observe that you can now step into your code\r\n\r\n**Expected Behavior**\r\nYou should be able to step into your code under release mode with `Just My Code` enabled\r\n"},{"Id":"6960433735","Type":"IssuesEvent","CreatedAt":"2017-12-08T03:27:15","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23661","RelatedDescription":"Opened issue \"Rename ForegroundThreadAffinitizedObject.InvokeBelowInputPriority\" (#23661) at dotnet/roslyn","RelatedBody":"Should be `InvokeBelowInputPriorityAsync`."},{"Id":"6960241676","Type":"IssuesEvent","CreatedAt":"2017-12-08T02:12:10","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23660","RelatedDescription":"Opened issue \"Generating fields from constructor arguments isn't respecting \"this.\" settings\" (#23660) at dotnet/roslyn","RelatedBody":"We have these settings in projectsystem:\r\n\r\n```\r\ndotnet_style_qualification_for_field = false:suggestion\r\ndotnet_style_qualification_for_property = false:suggestion\r\ndotnet_style_qualification_for_method = false:suggestion\r\ndotnet_style_qualification_for_event = false:suggestion\r\n\r\n```\r\n\r\nYet, generate field from constructor parameter is generating this style:\r\n![image](https://user-images.githubusercontent.com/1103906/33747809-303501a6-dc19-11e7-9764-e97a04ee29dc.png)"},{"Id":"6960232200","Type":"IssuesEvent","CreatedAt":"2017-12-08T02:08:36","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23659","RelatedDescription":"Opened issue \"VB.NET IntelliSence reports and suggests wrong \" (#23659) at dotnet/roslyn","RelatedBody":"IDE0037 Visual Basic AND  VB.NET Member name can be simplified\n\nExample: \n Dim cmd As New SqlCommand With {\n                .Connection = conn,\n                .Transaction = trans,\n                .CommandTimeout = CommandTimeOut\n            }\n\nReports: Member can be simplified\n\nSuggests: \n Dim cmd As New SqlCommand With {\n                .Connection = conn,\n                .Transaction = trans,\n                CommandTimeOut\n            }\n\nBuild Fails\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/160818/vbnet-intellisence-reports-and-suggests-wrong.html\nVSTS ticketId: 533435_\n_These are the original issue comments:_\n\nShane Hancock on 12/5/2017, 05:40 PM (2 days ago): Same here\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"6960199047","Type":"IssuesEvent","CreatedAt":"2017-12-08T01:55:55","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23658","RelatedDescription":"Opened issue \"'CSharpAddImportCodeFixProvider' crash\" (#23658) at dotnet/roslyn","RelatedBody":"updated a class library in the solution.\nI was busy adding all missing namespaces.\nThe application crashed because a file was under source control (TFS) and locked by a colleague. So it could not add the namespace to the class.\nResulting in a crash of the CSharpAddImportCodeFixProvider.\n\nOther classes that were not checked out by my colleague were no problem.\n\n\n\n\n\nSystem.AggregateException : One or more errors occurred. ---&gt; Unable to check out the files from source control.\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.&lt;&gt;c__DisplayClass18_0.&lt;InvokeCore&gt;b__0()\n   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager,Object extension,Action action)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n---&gt; (Inner Exception #0) System.Exception : Unable to check out the files from source control.\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.EnsureEditableDocuments(IEnumerable`1 documents)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\n   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.Apply(Workspace workspace,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ApplyAsync(&lt;Unknown Parameters&gt;)&lt;---\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/160715/csharpaddimportcodefixprovider-crash.html\nVSTS ticketId: 533380_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6959959534","Type":"PullRequestEvent","CreatedAt":"2017-12-08T00:28:01","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5077","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5077) at dotnet/corert","RelatedBody":""},{"Id":"6959861628","Type":"PullRequestEvent","CreatedAt":"2017-12-07T23:54:43","Actor":"adityamandaleeka","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5076","RelatedDescription":"Opened pull request \"Find unwind info ourselves instead of initializing unwind cursors each time.\" (#5076) at dotnet/corert","RelatedBody":"Previous, we were initializing a libunwind cursor, doing a step, and converting contexts back and forth each time `VirtualUnwind` was called. This change continues the progress we've made towards removing the various context conversions and unnecessary cursor initialization.\r\n\r\n@janvorli PTAL\r\n\r\nOnce CI is passing and any feedback is addressed, I'd like to ask the folks working on ARM to take a look and fill in the missing pieces to get this working on ARM too."},{"Id":"6959214887","Type":"PullRequestEvent","CreatedAt":"2017-12-07T21:07:06","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5075","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5075) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6959205844","Type":"PullRequestEvent","CreatedAt":"2017-12-07T21:05:02","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5075","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5075) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6958618712","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:55:19","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5054","RelatedDescription":"Merged pull request \"Emit metadata for type forwarders\" (#5054) at dotnet/corert","RelatedBody":"Fixes #2279, probably also #5051. I haven't checked.\r\n\r\nI'm marking it as WIP, because I'm not too happy with how this turned out - emitting the metadata is easy; deciding *what to emit* is hard. Seeking some feedback.\r\n\r\nI chose to use RD.XML as the mechanism to include the (otherwise unused) assemblies into the metadata. So the user has to put `<Assembly Name=\"mscorlib\" />` in their RD.XML to get forwarders from mscorlib. It's really not great.\r\n\r\n~~The other problem is that mscorlib has a lot of garbage in it (like references to System.Security.Permissions). This code throws *a lot*.~~"},{"Id":"6958614151","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:54:19","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5074","RelatedDescription":"Merged pull request \"Fix todo in initClass\" (#5074) at dotnet/corert","RelatedBody":""},{"Id":"6957341386","Type":"PullRequestEvent","CreatedAt":"2017-12-07T14:49:20","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5074","RelatedDescription":"Opened pull request \"Fix todo in initClass\" (#5074) at dotnet/corert","RelatedBody":""},{"Id":"6953933458","Type":"PullRequestEvent","CreatedAt":"2017-12-06T22:48:22","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5073","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5073) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6953820158","Type":"PullRequestEvent","CreatedAt":"2017-12-06T22:23:56","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5073","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5073) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6960650189","Type":"PullRequestEvent","CreatedAt":"2017-12-08T05:04:44","Actor":"eerhardt","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1805","RelatedDescription":"Opened pull request \"ResolvePackageFileConflicts performance enhancements\" (#1805) at dotnet/sdk","RelatedBody":"Speed up ResolvePackageFileConflicts by avoiding reading files for their AssemblyVersion.\r\nAllow for packages to override other packages by default.\r\n\r\nI'll work on adding unit tests tomorrow.  I wanted to get the PR up to get early feedback on the approach and to run tests in CI."},{"Id":"6960504682","Type":"IssuesEvent","CreatedAt":"2017-12-08T03:57:25","Actor":"Lily721","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1759","RelatedDescription":"Closed issue \"Assets file 'E:\\****\\obj\\project.assets.json' doesn't have a target for '.NETPortable,Version=v4.0,Profile=Profile111'. Ensure that restore has run and that you have included 'portable40-net45+win8+wpa81' in the TargetFrameworks for your project.\" (#1759) at dotnet/sdk","RelatedBody":"Hi guys,\r\n\r\nWhen I use multi target framework in my project like following:\r\n\r\n`<TargetFrameworks>netstandard1.1;net45</TargetFrameworks><TargetFrameworkProfile>Profile111</TargetFrameworkProfile>` \r\n\r\nAnd following is why I need TargetFrameworkProfile in my .csproj:\r\n\r\n`<Import Project=\"$(MSBuildExtensionsPath)\\Microsoft\\Portable\\v4.5\\Microsoft.Portable.CSharp.targets\" />`\r\n\r\nI faced upper problem, I thought I was right when I see this article [https://docs.microsoft.com/en-us/nuget/schema/target-frameworks],\r\n\r\nProfile111 | .NETFramework 4.5 | portable-net45+win8+wpa81 | netstandard1.1\r\n\r\nI've being working on this a whole day, didn't find any solution yet, does anyone know what's the problem? Thanks a lot."},{"Id":"6959616913","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:42:17","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1804","RelatedDescription":"Opened pull request \"Merge release/2.1 into master\" (#1804) at dotnet/sdk","RelatedBody":""},{"Id":"6959559421","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:27:32","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1783","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/15.5\" (#1783) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/15.5.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/15.5-20171201-080038\ngit reset --hard upstream/release/15.5\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/15.5-20171201-080038 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959559276","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:27:29","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1789","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/15.5\" (#1789) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/15.5.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/15.5-20171204-080036\ngit reset --hard upstream/release/15.5\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/15.5-20171204-080036 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959559127","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:27:27","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1793","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/15.5\" (#1793) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/15.5.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/15.5-20171205-080039\ngit reset --hard upstream/release/15.5\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/15.5-20171205-080039 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959558344","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:27:15","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1797","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/15.5\" (#1797) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/15.5.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/15.5-20171206-080042\ngit reset --hard upstream/release/15.5\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/15.5-20171206-080042 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959558127","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:27:12","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1798","RelatedDescription":"Closed pull request \"Merge release/15.5 to master\" (#1798) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171206-080044\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171206-080044 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959557941","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:27:09","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1802","RelatedDescription":"Closed pull request \"Merge release/2.1 to master\" (#1802) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20171207-080035\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20171207-080035 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959499126","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:12:28","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1794","RelatedDescription":"Merged pull request \"Merge release/15.5 to master\" (#1794) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171205-080040\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171205-080040 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959499110","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:12:28","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1790","RelatedDescription":"Merged pull request \"Merge release/15.5 to master\" (#1790) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171204-080038\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171204-080038 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959499096","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:12:28","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1784","RelatedDescription":"Merged pull request \"Merge release/15.5 to master\" (#1784) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171201-080040\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171201-080040 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6959499014","Type":"PullRequestEvent","CreatedAt":"2017-12-07T22:12:27","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1800","RelatedDescription":"Merged pull request \"Merge remote-tracking branch 'origin/release/2.1' \" (#1800) at dotnet/sdk","RelatedBody":""},{"Id":"6959472136","Type":"IssuesEvent","CreatedAt":"2017-12-07T22:06:05","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1803","RelatedDescription":"Opened issue \"Fix It_resolves_assembly_conflicts_with_a_NETFramework_library\" (#1803) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"935927507911524352","CreatedAt":"2017-11-29T17:44:41+00:00","UserScreenname":"dotnet","Text":"Who doesn’t? Purple. All. The. Things. https://t.co/65KzPWuvbK","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":30,"FavoriteCount":4,"RawContent":null},{"Id":"933058673206730752","CreatedAt":"2017-11-21T19:44:57+00:00","UserScreenname":"dotnet","Text":".NET Core Alpine Image Ready for Testing https://t.co/SsQtOGuAFD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":213,"FavoriteCount":155,"RawContent":null},{"Id":"932677600715071488","CreatedAt":"2017-11-20T18:30:42+00:00","UserScreenname":"dotnet","Text":"Looking to migrate your existing .NET apps to the cloud but need our help? Fill out this survey and let us know: https://t.co/g6xbbWkX93","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2017-12-08T05:30:23.0756701Z","RunDurationInMilliseconds":7968}