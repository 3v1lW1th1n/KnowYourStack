{"Data":{"Vue-Issues":{"Issues":[{"Id":"410605702","IsPullRequest":false,"CreatedAt":"2019-02-15T04:58:24","Actor":"mitar","Number":"9500","RawContent":null,"Title":"Make Vue.observable work directly on arrays","State":"open","Body":"### What problem does this feature solve?\r\nThis would allow one to have state as an array of values without a need for intermediary wrapper plain objects.\r\n\r\nSee example: https://jsfiddle.net/9L5ymbv7/\r\n\r\n### What does the proposed API look like?\r\nNo changes to the API, just support that `Vue.observable` would work on an array.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9500","RelatedDescription":"Open issue \"Make Vue.observable work directly on arrays\" (#9500)"},{"Id":"410600172","IsPullRequest":false,"CreatedAt":"2019-02-15T04:41:22","Actor":"mitar","Number":"9499","RawContent":null,"Title":"Vue.observable on an array does not really work","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9L5ymbv7/](https://jsfiddle.net/9L5ymbv7/)\r\n\r\n### Steps to reproduce\r\nIf I do `const todos = Vue.observable([]);` and try to use it inside reactive context, it does not really work. For example, observing the length of the `todos` does not trigger re-run if I push to `todos`.\r\n\r\n### What is expected?\r\nThat observed array would be fully reactive.\r\n\r\n### What is actually happening?\r\nThere is no reactivity.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9499","RelatedDescription":"Closed issue \"Vue.observable on an array does not really work\" (#9499)"},{"Id":"410557849","IsPullRequest":false,"CreatedAt":"2019-02-15T02:56:14","Actor":"bosens-China","Number":"9498","RawContent":null,"Title":"Computed property \"post\" was assigned to but it has no setter.","State":"closed","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r7rn9j75vn](https://codesandbox.io/s/r7rn9j75vn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI've mixed in a computational property post globally, but this property seems to conflict. Modifying the post will cause the code to need to be modified again. I want to know what's the right way to do it.\r\n\r\n### What is expected?\r\nNot in conflict with the attributes I defined\r\n\r\n### What is actually happening?\r\n[Vue warn]: Computed property \"post\" was assigned to but it has no setter.\r\n\r\n\r\nfound in\r\n\r\n\r\n---> <AjaxUploader>\r\n\r\n       <Upload>\r\n\r\n         <AUpload>\r\n\r\n           <ACol>\r\n\r\n             <ARow>\r\n\r\n               <AFormItem>\r\n\r\n                 <AForm>\r\n\r\n                   <App> at /src/App.vue\r\n\r\n                     <Root>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9498","RelatedDescription":"Closed issue \"Computed property \"post\" was assigned to but it has no setter.\" (#9498)"},{"Id":"410468433","IsPullRequest":false,"CreatedAt":"2019-02-14T20:02:25","Actor":"mitar","Number":"9497","RawContent":null,"Title":"Provide onInvalidate to register callbacks to call when Watcher gets updated (invalidated)","State":"open","Body":"### What problem does this feature solve?\r\nSometimes inside a Vue reactive context (`Watcher`) you have to read data from an external source. You might have to manage resource consumption of that external source so a way to know when is current has been notified of an update in a dependency is useful because you could cancel the external source. If current watcher is already pending a run there is no point in waiting for an external source to notify as well.\r\n\r\nI have encountered this problem when I was implementing a [reactive time formatting functions](https://www.npmjs.com/package/@tozd/vue-format-time). In that case I setup a timeout until the next update to the formatted string (if currently timestamp is displayed as `1 hour ago` the next update is in one hour to display `2 hours ago`). But if something else triggers an update (like timestmap changing in the source) there is no point in that timeout to still be around. So ideally, that timeout should be cleared. But there is no way for that currently.\r\n\r\nI could implement this with a reactive data source which I would modify every second and then in the formatting function use the data source  to compute the formatted string. But that would be very inefficient because it would rerun that formatting function every second when it would have to be rerun only in an hour. I could design it so that every formatting call registers its own data source which is updated only at a particular interval, but managing that would be very complex because it would not really be at regular intervals but the interval changes (for example, when string gets changed from `59 minutes ago` to `1 hour ago`).\r\n\r\n### What does the proposed API look like?\r\nI would suggest `Watcher` gets a concept of `invalidated` state. That state would be set to `true` on the first `update()` on the watcher and reset back to `false` on the first next `get()`. If `update()` is called multiple times before `get()` is called, watcher continues to be in `invalidated==true` state.\r\n\r\nHaving that concept, I would suggest `Vue.util.onInvalidate(callback)` function which would register a callback for the current watcher context (`Dep.target`). That callback would be called when watcher gets invalidated (the first time  `update()` is called). If during `onInvalidate` is called on a watcher which is already invalidated, the callback would be called immediately.\r\n\r\nAny `callback` is called only once. You have to re-register them by calling `onInvalidate` again if you want to get it called again.\r\n\r\nMoreover, on watcher teardown, any pending `onInvalidate` callbacks would be called as well.\r\n\r\nI have implemented this API inside [this package](https://www.npmjs.com/package/@tozd/vue-observer-utils), but I would prefer if it was added to the official API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9497","RelatedDescription":"Open issue \"Provide onInvalidate to register callbacks to call when Watcher gets updated (invalidated)\" (#9497)"},{"Id":"410373534","IsPullRequest":false,"CreatedAt":"2019-02-14T16:34:47","Actor":"wuyaoxing","Number":"9495","RawContent":null,"Title":"Complex Recursive Problems","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://github.com/wuyaoxing/vue-question](https://github.com/wuyaoxing/vue-question)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n**重现**\r\n\r\nclone代码，在本地运行，打开控制台即有报错。\r\n\r\n**相关文件**\r\n\r\n1. 路由 `/test` ，组件在 `views/Test.vue`。\r\n2. 递归组件 `components/Recurision.vue`。\r\n3. 问题组件 `components/Question.vue`。\r\n\r\n**问题**\r\n\r\n在递归组件  `Recurision.vue` 中渲染 `Question.vue`，同时又在 `Question.vue`中渲染 `Recurision.vue`，递归未正确解析。\r\n\r\n错误提示 未注册 Recurision component ，但是已经在 `Question.vue` 中注册过了。\r\n\r\n\r\n### What is expected?\r\n正确解析递归\r\n\r\n### What is actually happening?\r\n复杂递归解析错误\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9495","RelatedDescription":"Closed issue \"Complex Recursive Problems\" (#9495)"},{"Id":"410383227","IsPullRequest":false,"CreatedAt":"2019-02-14T16:26:43","Actor":"fer22f","Number":"9496","RawContent":null,"Title":"DOM is shifted completely if the top and bottom elements alternate","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/azg65dsv/3/](https://jsfiddle.net/azg65dsv/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the \"Push\" button and you will see that the focus of the window is now on the top input. Wait a few seconds, and should now see that the focus has been lost from the input.\r\n\r\n### What is expected?\r\nThe first input should still be focused.\r\n\r\n### What is actually happening?\r\nThe entire DOM is shifted around, new elements are created for no reason and changed, while the input ends up unfocused.\r\n\r\n---\r\nMy setup is pretty similar to the fiddle, I have a loading bar at the top and an information box at the bottom. When testing it, however, a lot of weird things happened:\r\n\r\n* My custom directive didn't work properly because the underlying element was changed (this was actually my fault, I have now fixed it)\r\n* If I selected the input before data came, it lost focus\r\n* My custom button ripple animation got shifted around to a button at the bottom of the screen\r\n\r\nAfter debugging a little bit, I found the issue. Vue thought that those divs were the same element when calling `sameVnode(oldEndVnode, newEndVnode)`. Adding a custom key into the second div works wonderfully, and no more DOM shifting, but I would like to be warned by the template compiler if something like this could happen (or maybe key all divs?).\r\n\r\n### Workaround\r\nAdd a `key` to the first div that is not toggled.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9496","RelatedDescription":"Open issue \"DOM is shifted completely if the top and bottom elements alternate\" (#9496)"},{"Id":"410190334","IsPullRequest":false,"CreatedAt":"2019-02-14T09:16:01","Actor":"BoltDoggy","Number":"9494","RawContent":null,"Title":"Array Deep Change for HTML Attr.","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/71wrbz2c/2/](https://jsfiddle.net/71wrbz2c/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the div, and Use Chrome Developer tool, you can see\r\n\r\n<img width=\"333\" alt=\"default\" src=\"https://user-images.githubusercontent.com/2586280/52774663-b7d66280-3078-11e9-942d-eb65b2ab23bc.png\">\r\n\r\n\r\n### What is expected?\r\n\r\n```\r\n{{arr}} // show [['1', '2'], ['2', '1']]\r\n  <div :data-arr=\"arr\" @click=\"test\">点击我</div> // data-arr show [['1', '2'], ['2', '1']] => 1,2,2,1, too\r\n```\r\n\r\n### What is actually happening?\r\n\r\n```\r\n{{arr}} // show [['1', '2'], ['2', '1']] is true\r\n  <div :data-arr=\"arr\" @click=\"test\">点击我</div> // data-arr show [['1', '2'], ['2']] => 1,2,2 is false\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9494","RelatedDescription":"Closed issue \"Array Deep Change for HTML Attr.\" (#9494)"},{"Id":"409921389","IsPullRequest":false,"CreatedAt":"2019-02-14T08:41:10","Actor":"1housand","Number":"9491","RawContent":null,"Title":"Getting “SyntaxError: invalid range in character class” when I upgrade to Vue 2.6.0","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7y6n3mk2o1](https://codesandbox.io/s/7y6n3mk2o1)\r\n\r\nI cannot fully reproduce this issue in the online IDEs because this issue only occurs when I build and deploy for production, but I included my `main.js` file and added my dependencies.\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMy backend is `Spring Boot`. I'm building the frontend by running `npm run build` and having it copied to the resources folder of my `Spring Boot` set up via the `pom.xml`. I've updated my `Vue` to `2.6.0` and I get an error message in my browser console.\r\n\r\nThe odd thing is that I only get it when I deploy to production with the `npm run build` command.  I tried deploying to prod with `vue-cli-service build --mode development` and it worked fine so it looks like there seems to be an issue when it gets minified or built for production.\r\n\r\nMy `package.json` looks like it's running the correct commands according to this block:\r\n```\r\n\"scripts\": {\r\n    \"serve\": \"vue-cli-service serve\",\r\n    \"build\": \"vue-cli-service build\",\r\n    \"lint\": \"vue-cli-service lint\"\r\n  },\r\n```\r\n\r\n### What is expected?\r\nI expect the page to at least load.\r\n\r\n### What is actually happening?\r\nThe page is blank and I get this error message:\r\n```\r\nSyntaxError: invalid range in character class vue.runtime.esm.js:495\r\n2b0e/<     vue.runtime.esm.js:495\r\n2b0e     vue.runtime.esm.js:1\r\ns     bootstrap:78\r\n56d7     ExportTable.vue:1:556\r\ns     bootstrap:78\r\n[0]     bootstrap:151\r\ns     bootstrap:78\r\nn     bootstrap:45\r\n<anonymous>     bootstrap:151\r\n<anonymous>     https://mywebsite.com:8443/js/app.ee42fe22.js:1:2\r\n```\r\n\r\n\r\n---\r\nWhen I use `Vue-CLI 3` to \"serve\" under the task menu, which looks like it runs the command `$ vue-cli-service serve --mode development --dashboard`, there are no errors and everything works fine. \r\n\r\nBefore upgrading to `2.6.0`, I was on `2.5.22` and everything was working great. To try and narrow down the problem, I tried a lot of things that were a waste of time, but what I noticed was that when I deleted the `<style>...</style>` block of the `ExportTable.vue` file that I was getting the error in, the error would no longer come up in `ExportTable.vue` and instead show up in the parent component.\r\n```\r\n<style>\r\n.title-search {\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  padding-left: 35px;\r\n}\r\n\r\n#hiddenDailyLimitFld {\r\n  color: #c21232;\r\n  background-color: #f9dede;\r\n  border: 1px solid #c21232;\r\n  padding: 8px 5px;\r\n  margin-bottom: 15px;\r\n  border-radius: 2px;\r\n  display: inline-block;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  font-weight: 500;\r\n}\r\n\r\n.content-searchLinkBtn {\r\n  position: relative;\r\n  padding-right: 35px;\r\n  overflow: auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.newSearchBtn {\r\n  color: #ffffff;\r\n  background-color: #4679b2;\r\n  width: 8em;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: 1px solid transparent;\r\n  padding: 6px 12px;\r\n  font-size: 13px;\r\n  border-radius: 3px;\r\n  float: right;\r\n}\r\n</style>\r\n```\r\nI also tried deleting each css selector block 1 by 1 and building/deploying to production to see if it was a particular CSS block that was causing it, but the error continued to show up until I deleted all the CSS blocks and the  `<style>...</style>` tags themselves.\r\n\r\nI think this might be related to this issue from 2016: https://github.com/vuejs/vue/issues/2291\r\n\r\nI also made a stackoverflow post about it: https://stackoverflow.com/questions/54659200/why-am-i-getting-syntaxerror-invalid-range-in-character-class-when-i-upgrade\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9491","RelatedDescription":"Closed issue \"Getting “SyntaxError: invalid range in character class” when I upgrade to Vue 2.6.0\" (#9491)"},{"Id":"410162400","IsPullRequest":false,"CreatedAt":"2019-02-14T08:15:14","Actor":"Even-Lau","Number":"9493","RawContent":null,"Title":"console.log() doesn't show accurate line number","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mz/](https://jsfiddle.net/chrisvfritz/50wL7mz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nno description\r\n\r\n### What is expected?\r\nno description\r\n\r\n### What is actually happening?\r\nno description\r\n\r\n---\r\nig. I call log funccion at line 30 in my IDE,but  the debugger shows at line 25\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9493","RelatedDescription":"Closed issue \"console.log() doesn't show accurate line number\" (#9493)"},{"Id":"409987660","IsPullRequest":false,"CreatedAt":"2019-02-13T20:30:06","Actor":"sqal","Number":"9492","RawContent":null,"Title":"[2.6] DOM isn't sync with the data","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n2.6.6 [https://jsfiddle.net/6gn53fzj/](https://jsfiddle.net/6gn53fzj/)\r\n2.5.22 [https://jsfiddle.net/3mp518t7/](https://jsfiddle.net/3mp518t7/)\r\n\r\n### Steps to reproduce\r\n- Click on test button\r\n\r\n### What is expected?\r\nOnly \"a\" checkbox to be checked.\r\n\r\n### What is actually happening?\r\nPlease take a look at the `test` method. In this function I simultaneously trigger click on two checkboxes, after which I wait for the DOM to be patched and finally I update `checked` array with the value `['a']`. I expect at this point that only checkbox `a` is checked, but that's not the case here. For some reason inputs `c` and `d` also stays checked. Even if I wait some extra time after nextTick or enforce component's update  before changing `checked` value, it does not help.  I undestend this issue is related to reverting nextTick to use Microtask but still can't figure out why this happens and what workaround can I apply to fix it. Appreciate your help. Thanks :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9492","RelatedDescription":"Open issue \"[2.6] DOM isn't sync with the data\" (#9492)"},{"Id":"409807004","IsPullRequest":true,"CreatedAt":"2019-02-13T14:06:19","Actor":"igisev","Number":"9490","RawContent":null,"Title":"bugfix: adds ts context this: V for ComponentOptions hooks","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\n```vue\r\n<template>\r\n  <div> ... </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator';\r\n\r\n// NOTE: <MyComponent>\r\n@Component<MyComponent>({\r\n  created() {\r\n    this.myFunction();  // Error: Property 'myFunction' does not exist on type 'Vue'\r\n  },\r\n\r\n  // NOTE: this: MyComponent\r\n  beforeDestroy(this: MyComponent) {\r\n    this.myFunction();  // success\r\n  },\r\n})\r\nexport default class MyComponent extends Vue {\r\n  public myFunction() {\r\n    // ...\r\n  }\r\n}\r\n</script>\r\n```","Url":"https://github.com/vuejs/vue/pull/9490","RelatedDescription":"Closed or merged PR \"bugfix: adds ts context this: V for ComponentOptions hooks\" (#9490)"},{"Id":"409747194","IsPullRequest":true,"CreatedAt":"2019-02-13T11:00:49","Actor":"ktsn","Number":"9489","RawContent":null,"Title":"fix: avoid possible infinite loop by accessing observables in error handler (fix vuex#1505)","State":"open","Body":"fix vuejs/vuex#1505\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThe original issue is https://github.com/vuejs/vuex/issues/1505\r\nWhen we touch some observables in `errorCaptured` hook, it is registered as dependency of the rendered component. Then the infinite rendering loop happens if we update the value inside the hook.\r\n\r\nUpdated reproduction which does not have Vuex store is here. https://codesandbox.io/s/ypvy7zn9xx","Url":"https://github.com/vuejs/vue/pull/9489","RelatedDescription":"Open PR \"fix: avoid possible infinite loop by accessing observables in error handler (fix vuex#1505)\" (#9489)"},{"Id":"409702722","IsPullRequest":false,"CreatedAt":"2019-02-13T09:19:43","Actor":"leekafai","Number":"9488","RawContent":null,"Title":"[vue ssr]normalizeFile get undefined file","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/lkafai/pen/Erpgze](https://codepen.io/lkafai/pen/Erpgze)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\npackage.json:\r\n    \r\n\"vue\": \"^2.5.22\",\r\n \"vue-server-renderer\": \"^2.6.6\"\r\n\r\nrun command\r\n`vue-cli-service build`\r\n\r\n\r\n### What is expected?\r\nsuccess render \r\n\r\n### What is actually happening?\r\nTypeError: Cannot read property 'replace' of undefined\r\n at normalizeFile (/node_modules/_vue-server-renderer@2.6.6@vue-server-renderer/build.dev.js:8998:27)\r\n\r\n\r\n---\r\ni open the file vue-ssr-client-manifest.json , and found that some id in modules got -1 index\r\n```\r\n  \"modules\": {\r\n    \"13323344\": [\r\n      13,\r\n      14\r\n    ],\r\n    \"0b0ba5ab\": [\r\n      3,\r\n      15,\r\n      -1,\r\n      16\r\n    ],\r\n```\r\nand the -1 index not found any file.\r\nso in vue-server-renderer/build.dev.js file,the normalizeFile get undefined , and throw out \"Cannot read property 'replace' of undefined\"\r\ni have no idea why there is -1 in modules , and file mapping fail, is this a configure problem?\r\nmy vue.config.js is writed in codepen , sorry for my poor english\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9488","RelatedDescription":"Open issue \"[vue ssr]normalizeFile get undefined file\" (#9488)"},{"Id":"409692708","IsPullRequest":false,"CreatedAt":"2019-02-13T08:55:47","Actor":"lujuliang","Number":"9487","RawContent":null,"Title":"Vue().$mount() : it takes 20 seconds to load a table by using $mount()","State":"closed","Body":"My application is based on angular1.x, we used vue to render a complex table in angular application.\r\nThe data size is 500 and 13 columns in table, we use Vue().$mount(\"dom id\") to load vue component in angularjs, but it takes 20 seconds to show the tables.\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/9487","RelatedDescription":"Closed issue \"Vue().$mount() : it takes 20 seconds to load a table by using $mount()\" (#9487)"},{"Id":"409600259","IsPullRequest":false,"CreatedAt":"2019-02-13T02:58:37","Actor":"weijiyang","Number":"9486","RawContent":null,"Title":"mac 按键码不生效","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://cn.vuejs.org/v2/guide/events.html#%E6%8C%89%E9%94%AE%E7%A0%81](https://cn.vuejs.org/v2/guide/events.html#%E6%8C%89%E9%94%AE%E7%A0%81)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n<!-- Ctrl   Click -->\r\n<div @click.ctrl=\"doSomething\">Do something</div> 无法生效\r\n\r\n### What is expected?\r\n应该是需要长按ctrl 再点击然后执行doSomething\r\n\r\n### What is actually happening?\r\n 但是mac只是弹出系统弹窗 类似鼠标右键出来的系统弹窗\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9486","RelatedDescription":"Closed issue \"mac 按键码不生效\" (#9486)"},{"Id":"409590547","IsPullRequest":false,"CreatedAt":"2019-02-13T02:12:19","Actor":"matf5","Number":"9485","RawContent":null,"Title":"升级2.6以上版本后在部分安卓机上input使用v-model的同时有对数据格式化时光标异常","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\nhttps://codepen.io/matf5/project/editor/ARGnKV\r\n\r\n\r\n```\r\ncomputed: {\r\n    cardNoFormat: {\r\n      get() {\r\n        return this.cardNo.replace(/(\\d{4})(?=\\d)/g, '$1 ');\r\n      },\r\n      set(value) {\r\n        this.cardNo = value;\r\n      }\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n例如输入输入62148时，数据会变为6214 8\r\n\r\n### What is expected?\r\n光标位于8后面\r\n\r\n### What is actually happening?\r\n有问题的安卓机如vivo，华为荣耀在部分浏览器内核下（如uc）光标会卡在8前面\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9485","RelatedDescription":"Open issue \"升级2.6以上版本后在部分安卓机上input使用v-model的同时有对数据格式化时光标异常\" (#9485)"},{"Id":"409502025","IsPullRequest":true,"CreatedAt":"2019-02-12T21:11:33","Actor":"hello-brsd","Number":"9484","RawContent":null,"Title":"feat(errorHandler): async error handling for watchers","State":"open","Body":"Added async error handling for watchers and immediate watchers\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**","Url":"https://github.com/vuejs/vue/pull/9484","RelatedDescription":"Open PR \"feat(errorHandler): async error handling for watchers\" (#9484)"},{"Id":"409384098","IsPullRequest":false,"CreatedAt":"2019-02-12T16:41:55","Actor":"SoroTrestal","Number":"9483","RawContent":null,"Title":"Restore state issue from external object (I'm saving the sate on my window object)","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/0qzn8pkykn](https://codesandbox.io/s/0qzn8pkykn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm storing the state in this example on my window object, the reason is because we have popups which can be opened from our webapp (and therefor vue will reload and my store will reload, and my state will be cleared).\r\n\r\nYou can't really test it in the codesandbox because of the origin blocking (i'm calling window.opener to access my manager).\r\n\r\nIn the vue version of 2.5.5 this was working fine: vue and vuex reloaded, and my factory function which I used to restore my state would pull in the state object of my manager. (in my code example I have a user object in my state, and I print out the object in the component)\r\n \r\nHowever if I try it with the version of 2.6.6 when the state is received, it just maps [object Object] instead of the property user.\r\n(although the members of the object still exists).\r\n\r\nThis happend only when I use an object, if I use a numeric/string/bool value it does actually works.\r\n\r\nMy apologies for incorrect logging of this issue, it his hard for me to find topics about this particular case.\r\n\r\nThank you in advance\r\n\r\nRegards.\r\n\r\n\r\n### What is expected?\r\nI should be able to save my state (customs object) out of the vuex store because i'm using popup to open up windows, the names should always be the same.\r\n\r\n### What is actually happening?\r\nproperty names are being mapped and renamed to [object Object] instead of the original property name\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9483","RelatedDescription":"Closed issue \"Restore state issue from external object (I'm saving the sate on my window object)\" (#9483)"},{"Id":"409122637","IsPullRequest":false,"CreatedAt":"2019-02-12T10:31:59","Actor":"asvny","Number":"9480","RawContent":null,"Title":"Inconsistent order of events","State":"closed","Body":"### Version\r\n2.6.5\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8g1nh5rc/1/](https://jsfiddle.net/8g1nh5rc/1/)\r\n\r\n### Steps to reproduce\r\n1. When I click 'Show panel' button , it logs clicked outside\r\n\r\n### What is expected?\r\nFor the first click, it should not invoke v-click-outside event handlers \r\n\r\n### What is actually happening?\r\nWhen I click the button, it invokes the v-click-outside handler eagerly.\r\n\r\n---\r\nI have filed the issue here rather in the v-click-outside because I suspect it is because of scheduling of micro-tasks because it used to work fine for older versions of Vue (https://jsfiddle.net/amw9rfhq)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9480","RelatedDescription":"Closed issue \"Inconsistent order of events\" (#9480)"},{"Id":"409130164","IsPullRequest":false,"CreatedAt":"2019-02-12T10:14:27","Actor":"five00miles","Number":"9481","RawContent":null,"Title":"keyup","State":"closed","Body":"### Version\r\n2.6.4\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/WPJWWZ#anon-signup](https://codepen.io/anon/pen/WPJWWZ#anon-signup)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n直接使用不同版本vue即可\r\n\r\n### What is expected?\r\n解决或者告知是否哪里出了问题\r\n\r\n### What is actually happening?\r\nkeyup在不同版本的vue中，对应的安卓浏览器和安卓微信下的反应不同，或支持或无效，我手中的是mix2s\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9481","RelatedDescription":"Closed issue \"keyup\" (#9481)"},{"Id":"409147062","IsPullRequest":true,"CreatedAt":"2019-02-12T06:51:49","Actor":"troy351","Number":"9482","RawContent":null,"Title":"fix #8467, always return template compile errors","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nfixed #8467","Url":"https://github.com/vuejs/vue/pull/9482","RelatedDescription":"Open PR \"fix #8467, always return template compile errors\" (#9482)"},{"Id":"409092476","IsPullRequest":true,"CreatedAt":"2019-02-12T02:46:51","Actor":"ronald-d-rogers","Number":"9479","RawContent":null,"Title":"feat(ssr): add ability to cleanup after request","State":"open","Body":"close #9463\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThe point of this \"feature\" is to be able to do something to the `app` to mark it as \"invalid\" so that `vue-router` has a way to detect and cleanup objects it might have left hanging around in memory. This feature might be able to be used for other reasons, but it is probably truly a fix. Also, a change would need to be approved in `vue-router` as well for the memory leak there to even go away (see https://github.com/vuejs/vue-router/issues/2606), and that might get fixed by other means, so this might not be worth doing anything with if that doesn't also get approved.\r\n\r\nBecause we're in control of when the app is created in SSR it didn't seem like there was any other sensible option but to give us control of when to clean it up, though maybe something can be done based on `runInNewContext`. Also, maybe a more explicit API would be better, e.g. some way to mark the app as \"served\", `$isServer && $isServed`.\r\n\r\nNote I'm submitting this knowing that there is a good chance that this will be tossed, so feel free to do so if this is not what is wanted.","Url":"https://github.com/vuejs/vue/pull/9479","RelatedDescription":"Open PR \"feat(ssr): add ability to cleanup after request\" (#9479)"},{"Id":"409065622","IsPullRequest":false,"CreatedAt":"2019-02-12T02:14:24","Actor":"ianwremmel","Number":"9478","RawContent":null,"Title":"Unmounting a target in an event handler stops that event from propagatin","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/ianwremmel/pen/omdQxG](https://codepen.io/ianwremmel/pen/omdQxG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the submit button\r\n\r\n### What is expected?\r\nThe page posts back to itself\r\n\r\n### What is actually happening?\r\nThe button disappears and nothing else happens\r\n\r\n---\r\nThis changed somewhere between 2.5.22 and 2.6.0. I assume it had something do with the increased use of microtask.\r\n\r\nThis is clearly an odd reproduction example, but it's the minimal reproduction for something that is, in fact, useful. We have a Vue components that replaces our buttons with a spinner so that they can't be double submitted.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9478","RelatedDescription":"Closed issue \"Unmounting a target in an event handler stops that event from propagatin\" (#9478)"},{"Id":"408965039","IsPullRequest":false,"CreatedAt":"2019-02-11T21:57:42","Actor":"altmind","Number":"9477","RawContent":null,"Title":"Support namespaced events as Vue.prototype.$emit(\"evt:ns\") / $on(\"evt:ns\") / $off(\"evt:ns\")","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, you need to preserve locally the callback used in $on to propertly clean the event handler in view destroyed.\r\n\r\nThis is inconvenient if you dont want to save/expose the handler and prefer to use anonymous handler function.\r\n\r\n```\r\n    function onSidebarSaveEvent(){ /* this... */ }\r\n    export default {\r\n        created() {\r\n            this.$root.$on(\"params-edit-sidebar-save\", (arg) => {\r\n                onSidebarSaveEvent.call(this);\r\n            });\r\n        }\r\n\t\tdestroyed() {\r\n\t\t\tthis.$off(\"params-edit-sidebar-save\", /* no handle to unbind? */)\r\n        },\r\n}\r\n```\r\n\r\nI propose to pick the same convention jquery used for on()/off() - event names are namespaced so you can give the event handler name and unbind this specific name. \r\n\r\non(\"click.thatNamespace\") / off(\"click.thatNamespace\")\r\n\r\nthe $emit(\"click\") still triggers all on(\"click.*\")  handlers. multiple namespaces are supported. http://api.jquery.com/on/#event-names\r\n\r\n\r\nThe choice of namespace separator is arbitrary - can use dot(already used by modifiers?) or colon.\r\n\r\n### What does the proposed API look like?\r\nVue.prototype.$emit(\"event\") to emit an event - no changes\r\n\r\nVue.prototype.$on(\"event:namespace\") to attached namespaced handler. namespaces are optional, multiple allowed?.\r\n\r\nVue.prototype.$off(\"event:namespace\") to remove namespaced handler (no explicit handler mention is required)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9477","RelatedDescription":"Closed issue \"Support namespaced events as Vue.prototype.$emit(\"evt:ns\") / $on(\"evt:ns\") / $off(\"evt:ns\")\" (#9477)"},{"Id":"408903769","IsPullRequest":false,"CreatedAt":"2019-02-11T17:57:17","Actor":"metalfox6383","Number":"9476","RawContent":null,"Title":"Deactive throw error when property not exists","State":"closed","Body":"### What problem does this feature solve?\r\nHave the possibility of deactive the throw error in console when I use a property that not exists in data.\r\n\r\nWhen execute in a navigator, the template render stops, even in jsfiddle, that not happen.\r\nAnd in console throw an error \"message2 is not defined\".\r\n\r\nhttps://jsfiddle.net/dzpLu0a2/\r\n\r\nSome times, I get data from another servers and its structure is dynamic and is practical ignore missing information.\r\n\r\n### What does the proposed API look like?\r\nHave the possibility of deactive the throw error in console and stops render when I use a property or method that not exists in the object. Maybe like this:\r\n\r\n```\r\nlet qwe = new Vue({\r\n    //...\r\n    omitErrorInTemplate: true,\r\n    //...\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9476","RelatedDescription":"Closed issue \"Deactive throw error when property not exists\" (#9476)"},{"Id":"408800861","IsPullRequest":false,"CreatedAt":"2019-02-11T16:46:34","Actor":"AlexandreBonaventure","Number":"9474","RawContent":null,"Title":"HMR issue with named slots","State":"closed","Body":"### Version\r\n2.6.5\r\n\r\n### Reproduction link\r\n[https://github.com/AlexandreBonaventure/vue-hmr-bug](https://github.com/AlexandreBonaventure/vue-hmr-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. run the dev server\r\n2. change the content inside the named slot `test` here : https://github.com/AlexandreBonaventure/vue-hmr-bug/blob/master/src/App.vue#L5\r\n3. see in the browser nothing has changed\r\n4. uncomment that: https://github.com/AlexandreBonaventure/vue-hmr-bug/blob/master/src/App.vue#L4\r\n5. see in the browser HMR is working again as expected\r\n\r\n### What is expected?\r\nThat HMR works even if the default slot is not overriden.\r\n\r\n### What is actually happening?\r\nIf the default slot is not overridden (content set in the parent scope), HMR does not trigger a re-render for named slots content.\r\n\r\n---\r\nps: sorry here for the minimal repro with a build step, but dunno how else we can do it!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9474","RelatedDescription":"Closed issue \"HMR issue with named slots\" (#9474)"},{"Id":"408868035","IsPullRequest":false,"CreatedAt":"2019-02-11T16:34:01","Actor":"metalfox6383","Number":"9475","RawContent":null,"Title":"Deactive throw error when property not exists","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n\r\nHi:\r\n\r\nThis, give me an error:\r\n\r\n`\r\n<div id=\"app\">\r\n\t{{qwe1}}\r\n\t{{qwe1}}\r\n</div>\r\n<script src=\"vue.min.js\"></script>\r\n<script>\r\nlet asd = new Vue({\r\n\tel: '#app',\r\n\tdata: {\r\n\t\tqwe1: 'Hola'\r\n\t}\r\n});\r\n</script>\r\n`\r\n\r\nThe render stops and in console say \"qwe2 is not defined\". It's possible ignore the error? I would like to have an option like \"omitErrorInTemplate\".\r\n\r\nThanks!","Url":"https://github.com/vuejs/vue/issues/9475","RelatedDescription":"Closed issue \"Deactive throw error when property not exists\" (#9475)"},{"Id":"408698728","IsPullRequest":false,"CreatedAt":"2019-02-11T09:41:44","Actor":"tangjinzhou","Number":"9473","RawContent":null,"Title":"iframe triggers unnecessary reload","State":"open","Body":"### Version\r\n2.6.5\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/1q5prknzk7](https://codesandbox.io/s/1q5prknzk7)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclick trigger button\r\n\r\n### What is expected?\r\niframe not reload when component not update.\r\nThe dom element is reused when the component is not updated.\r\n\r\n### What is actually happening?\r\niframe reload when component not update.\r\n\r\n---\r\nI think it should be related to the virtual dom's diff rule.\r\nWhen the `showspan1` and `showspan2` are changed at the same time, the reload iframe will appear. \r\nThis problem also exists in version 2.5.x.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9473","RelatedDescription":"Open issue \"iframe triggers unnecessary reload\" (#9473)"},{"Id":"408630197","IsPullRequest":false,"CreatedAt":"2019-02-11T04:55:20","Actor":"srchulo","Number":"9472","RawContent":null,"Title":"v-model doesn't always bind when using v-if","State":"closed","Body":"### Version\r\n2.6.4\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mu4q63db/1/](https://jsfiddle.net/mu4q63db/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Select a period radio button\r\n2. Hit Monthly and Daily back and forth\r\n3. Sometimes maybe select a period radio button again\r\n\r\n### What is expected?\r\nthe v-model for period should always select a radio button when being rendered\r\n\r\n### What is actually happening?\r\nSometimes, no radio button will be selected even when the corresponding v-model variable (period_month) still has its previous value.\r\n\r\n---\r\nThis is reproducible, but sometimes it can take a few clicks to get it to happen.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9472","RelatedDescription":"Closed issue \"v-model doesn't always bind when using v-if\" (#9472)"},{"Id":"408544041","IsPullRequest":false,"CreatedAt":"2019-02-10T21:42:37","Actor":"smellyshovel","Number":"9471","RawContent":null,"Title":"Resolve injected properties after the props initialization","State":"closed","Body":"### What problem does this feature solve?\r\nIt's [said in the API reference](https://vuejs.org/v2/api/#provide-inject) that below the version 2.2.1 injected properties actually *were* resolved after the props initialization. So it seems like I'm asking for a regression.\r\n\r\nI tried to find what formed the basis for making such a decision (to resolve them before props and data) but I haven't been able to find any related issue.\r\n\r\nI have a component `<tree-view>` that renders another component called `<tree-item>` inside. The `tree-item` may itself recursively render one or more `tree-view`s.\r\n\r\nThe `tree-view` accepts a number of options that I pass to it as props (let it be a sole option called \"mode\" for the sake of brevity):\r\n\r\n```html\r\n<tree-view\r\n    mode=\"folders\"\r\n>\r\n    ...\r\n</tree-view>\r\n```\r\n\r\nThe `tree-view` accepts it as a prop:\r\n\r\n```javascript\r\nprops: {\r\n    mode: {\r\n        default: \"all\",\r\n        validator: ...\r\n    }\r\n}\r\n```\r\n\r\nAnd I want to provide it to all the nested `tree-view`'s, so that I don't have to pass this option to the nested `tree-item` so that *only from there* it can be passed to the nested `tree-view`. But I can't do so because **the props since 2.2.1 are initialized after the injected properties**.\r\n\r\n### What does the proposed API look like?\r\nThat is what I'm trying to achieve\r\n\r\n```javascript\r\nprops: {\r\n    mode: {\r\n        default: \"all\"\r\n    }\r\n},\r\n\r\nprovide() {\r\n    return {\r\n        /*\r\n            This one works OK, this.mode is taken from the `props`\r\n        */\r\n        mode: this.mode\r\n    }\r\n},\r\n\r\ninject: {\r\n    mode: {\r\n        /*\r\n            But this one doesn't since the `props` are not yet initialized\r\n        */\r\n        default: this.mode\r\n    }\r\n}\r\n```\r\n\r\nMy point is that the root `tree-view` isn't provided with the `mode` injected property (because it's the root one obviously) so the warning \"Injection \"mode\" not found\" is thrown for each root `tree-view`. But all the nested `tree-view`'s *are* provided with the injected property \"mode\" so the provided value is taken instead of the `default` one.\r\n\r\nMay be (I'm not sure, just a guess) the proposed API will need to like something like\r\n\r\n```javascript\r\ninject() {\r\n}\r\n```\r\n\r\nThat's that the `injected` property can accept a function as its value instead of just an array or an object.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9471","RelatedDescription":"Closed issue \"Resolve injected properties after the props initialization\" (#9471)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"409708492","IsPullRequest":false,"CreatedAt":"2019-02-13T09:50:24","Actor":"hwlv","Number":"2615","RawContent":null,"Title":"https://router.vuejs.org/   can't open ","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/ ](https://router.vuejs.org/ )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://router.vuejs.org/   can't open \r\n\r\n### What is expected?\r\nWeb page display normally\r\n\r\n### What is actually happening?\r\nWeb page display exception\r\n\r\n---\r\nPlease repair it as soon as possible.  It's seriously\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2615","RelatedDescription":"Closed issue \"https://router.vuejs.org/   can't open \" (#2615)"},{"Id":"409503817","IsPullRequest":false,"CreatedAt":"2019-02-13T09:40:46","Actor":"smellyshovel","Number":"2614","RawContent":null,"Title":"beforeRouteUpdate fires when it must not if is used with cyrillic symbols","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rmnq4605oo](https://codesandbox.io/s/rmnq4605oo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Add the following to the path (right in the browser preview): \"fm/русский\"\r\n\r\n    The address bar should now look something like this: `https://rmnq4605oo.codesandbox.io/fm/русский`\r\n\r\n1. Click enter so to pretend that it's router's initial state (without any previous navigation via vue-router (because the page actually gets reloaded and vue-router isn't involved in this))\r\n\r\n1. Open the console (F12)\r\n\r\n1. Double-click the \"русский\" word\r\n\r\n### What is expected?\r\nThe `beforeRouteUpdate` must not be fired.\r\n\r\n### What is actually happening?\r\nIt actually gets fired. As far as I understand it happens because \"русский\" gets substituted with \"%D1%80%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9\" as you can see from the console output.\r\n\r\n---\r\nDon't know if it's only due to cyrillic symbols, but I'm pretty sure that it's expected for all the non-ascii charecters.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2614","RelatedDescription":"Closed issue \"beforeRouteUpdate fires when it must not if is used with cyrillic symbols\" (#2614)"},{"Id":"409272152","IsPullRequest":false,"CreatedAt":"2019-02-12T12:48:28","Actor":"GHakopian","Number":"2613","RawContent":null,"Title":"// makes route invalid","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/jzr5nojn39](https://codesandbox.io/s/jzr5nojn39)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen in history mode with a basePath setup,\r\nnavigating to server:123/basePath/subPath navigates to the right component\r\nbut if you add an extra / after server:234, \r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n\r\n### What is expected?\r\nnavigating to server//basePath/subPathnavigates to configured component\r\n\r\n### What is actually happening?\r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n---\r\nIs this a bug? i think the extra / should not change the end route, this is an issue in my case as my legacy backend application can redirect with an extra / at random. if this is intended can we then add something like \"*/basePath\" to only consider the path starting from basePath.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2613","RelatedDescription":"Closed issue \"// makes route invalid\" (#2613)"},{"Id":"408907359","IsPullRequest":false,"CreatedAt":"2019-02-11T18:04:42","Actor":"wadetandy","Number":"2612","RawContent":null,"Title":"v-if/else Causes incorrect router-link to be followed when conditional changes","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/q3mp33l879](https://codesandbox.io/s/q3mp33l879)\r\n\r\n### Steps to reproduce\r\n- Observe the navigation has links for \"Register\" and \"Sign In\"\r\n- Click the \"Sign In\" link\r\n- Click \"click here to sign in\" on the page\r\n- Observe the navigation will change to a \"signed in\" state with \"User Profile\" and \"Sign Out\" links\r\n- Click the \"User Profile\" or \"Sign Out\" links\r\n\r\n### What is expected?\r\nIf clicking \"User Profile\", the page should change to `/profile` and have the text \"hello user\"\r\nIf clicking \"Sign Out\", the page should change to `/sign_out` and be a sign out placeholder page\r\n\r\n### What is actually happening?\r\nIf clicking \"User Profile\", the page changes to `/register` and loads the corresponding component\r\nIf clicking \"Sign Out\", the page should change to `/sign_in` and loads the corresponding component\r\n\r\nIt seems the navigation link elements are not being replaced when the conditional flips, but instead the inner html is being switched out.  This causes the original click handlers to be preserved on each link, which results in the \"signed in\" links firing the click handlers of the element that corresponded to its position in the list for the \"signed out\" path.\r\n\r\n---\r\nThis may be a core vue runtime bug, but since I have run into the issue only with `router-link` I opened it here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2612","RelatedDescription":"Open issue \"v-if/else Causes incorrect router-link to be followed when conditional changes\" (#2612)"},{"Id":"408448967","IsPullRequest":false,"CreatedAt":"2019-02-09T17:00:16","Actor":"stevenadams","Number":"2611","RawContent":null,"Title":"Support for activeStyle and exactActiveStyle","State":"open","Body":"### What problem does this feature solve?\r\nComing from React and using React Router, there is support for activeStyle property. Like activeClass but a style object of styles to apply to an element when active. This helps for things like theming where the theme color is plucked from store and needs to be applied to an element when active.\r\n\r\n### What does the proposed API look like?\r\ntakes a prop activeStyle and exactActiveStyle, both type object, works identically to activeClass and exactActiveClass\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2611","RelatedDescription":"Open issue \"Support for activeStyle and exactActiveStyle\" (#2611)"},{"Id":"408321425","IsPullRequest":false,"CreatedAt":"2019-02-08T21:31:14","Actor":"CarlosOnline","Number":"2610","RawContent":null,"Title":"Dynamic route doesn't work if route parameter contains a dot followed by text.","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/CarlosOnline/VueRouterBug.git](https://github.com/CarlosOnline/VueRouterBug.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with dynamic route parameter **:lab**\r\n\r\n* Start app\r\n* Navigate to MyView/**Foo** which works\r\n* Navigate to MyVew/**Number.1234** does not work\r\n\r\n\r\n\r\n```\r\n{\r\n    path: '/MyView/:lab',\r\n    component: MyView,\r\n    display: 'MyView',\r\n    meta: { title: 'MyView' }\r\n},\r\n```\r\n\r\n\r\n### What is expected?\r\nNavigate to route with dynamic parameter when no \r\n\r\n### What is actually happening?\r\nRoute is not found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2610","RelatedDescription":"Closed issue \"Dynamic route doesn't work if route parameter contains a dot followed by text.\" (#2610)"},{"Id":"408298160","IsPullRequest":true,"CreatedAt":"2019-02-08T19:46:53","Actor":"lyonsbp","Number":"2609","RawContent":null,"Title":"Add example showing how to get HTML5 history mode working with Flask.","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2609","RelatedDescription":"Open PR \"Add example showing how to get HTML5 history mode working with Flask.\" (#2609)"},{"Id":"408267010","IsPullRequest":false,"CreatedAt":"2019-02-08T19:10:04","Actor":"jbmikk","Number":"2608","RawContent":null,"Title":"Improve function mode props with route-view attributes","State":"closed","Body":"### What problem does this feature solve?\r\nWhen passing props to the `router-view` all routed components are forced to implement the same interface if they want to use the data provided by the `router-view`.\r\n\r\nWe usually use the props as a way of avoiding coupling the components to the router. The components simply receive the props and they are not aware they come from the URL.\r\n\r\nI think it would be useful if we could decouple the components from the router-view, just the way we decouple them from the URL.\r\nI think being able to map the router-view attributes to the desired component props is more appropriate and lets our components expose the interface they need to expose, rather than the interface imposed by the router-view.\r\n\r\nI think the right place for solving this problem is the route's function mode props.\r\n\r\n### What does the proposed API look like?\r\nThe router view passes down a couple of parameters as usual:\r\n\r\n    <router-view :param1=\"value1\" :param2=\"value2\"></router-view>\r\n\r\nThe function maps the props both from the route's URL and also the `router-view` attributes.\r\nIt can also resolve conflict names between URL parameters and view parameters and determine which parameter is more important in each case.\r\n\r\n    {\r\n      path: '/test',\r\n      component: Test,\r\n      props: (route, view) => {\r\n        return {\r\n          query: route.query.q\r\n          paramA: view.attrs.param1,\r\n          paramB: view.attrs.param2 || route.query.param2\r\n        }\r\n      }\r\n    } \r\n\r\nI have done some tests with the router's code and it seems to work fine.\r\n\r\nI would like to have some feedback from the community. It is a fairly simple change. We should make sure this doesn't have any unwanted side effects, it's backwards compatible and there isn't a better way to do it.\r\n\r\nHere's a branch with a test I made and it worked for me: https://github.com/jbmikk/vue-router/commits/view-parameter-for-props\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2608","RelatedDescription":"Closed issue \"Improve function mode props with route-view attributes\" (#2608)"},{"Id":"408176071","IsPullRequest":false,"CreatedAt":"2019-02-08T14:30:15","Actor":"rocka","Number":"2607","RawContent":null,"Title":"abstract mode's router.back() was aborted when there are 2 same routes in history stack","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Rocka/bhu5vkn8/3/](https://jsfiddle.net/Rocka/bhu5vkn8/3/)\r\n\r\n### Steps to reproduce\r\n1. Click `10. artist`\r\n2. Hit button `togglePlayer`\r\n3. Click `10. artist`\r\n4. Hit button `back` 2 times\r\n\r\n### What is expected?\r\nroute back to `/search`\r\n\r\n### What is actually happening?\r\nnothing happend, route and route-view do not change\r\n\r\n---\r\n'cause I didn't figure out how to determine wether the route is going forward or backword, I decided to use `abstract` mode and traverse the router stack to find out which direction the route is going, then hit into this bug. The demo works fine if change router's mode to `hash` or `history`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2607","RelatedDescription":"Open issue \"abstract mode's router.back() was aborted when there are 2 same routes in history stack\" (#2607)"},{"Id":"404807174","IsPullRequest":true,"CreatedAt":"2019-02-08T07:05:06","Actor":"kazupon","Number":"2602","RawContent":null,"Title":"update ja docs","State":"closed","Body":"ping @ktsn \r\nCould you review it please? 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2602","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2602)"},{"Id":"407467218","IsPullRequest":false,"CreatedAt":"2019-02-06T22:49:21","Actor":"ronald-d-rogers","Number":"2606","RawContent":null,"Title":"SSR memory leak in poll method","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/](https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake `router-view` appearance conditional based on some variable (or simply have it not appear):\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\nEnsure that the component that matches the route has a `beforeRouteEnter` guard, where a function is passed to the `next(...)` method (e.g. `next(vm => {}`):\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {})\r\n  }\r\n}\r\n```\r\n\r\nVisit that route.\r\n```sh\r\ncurl http://localhost:8080/route\r\n```\r\n\r\nA poll will happen infinitely until `router-view` is created.\r\n\r\nIn a typical SSR application where an app is created per request, it will never be created. \r\nThe end result is a memory leak with an event loop filled with poll's every 16ms.\r\n\r\nIn the reproduction JS Fiddle, a leak occurs every time you press the `SSR Request` button.\r\nIf you set `dontLeak` to true, the leak stops.\r\n\r\nThe leak can be verified in the JS Fiddle by clicking on the `SSR Request` button a few times (say 20 times), opening Chrome Developer Tools, going to the Performance tab, and in the recording looking at the contents of \"Frame\".\r\n\r\n![capture](https://user-images.githubusercontent.com/4047399/52432208-e338da80-2ad7-11e9-9632-7e56eb414e3b.JPG)\r\n\r\nHere is an example repo as well:\r\nhttps://github.com/ronald-d-rogers/vue-router-ssr-memory-leak\r\n\r\n### What is expected?\r\nA new poll does not recurse infinitely for every SSR request.\r\n\r\n### What is actually happening?\r\nA new poll recurses infinitely for every SSR request.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2606","RelatedDescription":"Open issue \"SSR memory leak in poll method\" (#2606)"},{"Id":"406924907","IsPullRequest":false,"CreatedAt":"2019-02-05T21:14:03","Actor":"soyersoyer","Number":"2605","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include null","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/navigation.html](https://router.vuejs.org/guide/essentials/navigation.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as null. E.g.\r\n\r\n```json\r\n{\r\n  \"foo\": null\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work.\r\nThe url should be ?foo.\r\n\r\n### What is actually happening?\r\nIt works, but with an error:\r\n\r\nType '{ foo: null; }' is not assignable to type 'Dictionary<string | string[]>'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2605","RelatedDescription":"Closed issue \"Typescript: `Location` interface typing for query should include null\" (#2605)"},{"Id":"406758040","IsPullRequest":false,"CreatedAt":"2019-02-05T12:26:27","Actor":"pikax","Number":"2604","RawContent":null,"Title":"Passing new params to the current route when props=true, doesn't update router-view","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k50j5wn8or](https://codesandbox.io/s/k50j5wn8or)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- set mode to history\r\n- Add a route with `props: true` \r\n- Add props to that route component\r\n- App.vue beforeMount, add a `router.replace` or `router.push` with a the route `name` and `params` object.\r\n- If the route path is the same as the current route, it won't update the route\r\n\r\n### What is expected?\r\nUpdating the component props down based on params\r\n\r\n### What is actually happening?\r\nroute component defaults props\r\n\r\n---\r\nNot sure if this is the expected behaviour, even using ` <router-view :key=\"$route.fullPath\"></router-view>` doesn't do much because of the `params` don't affect the path.\r\n\r\nEncounter this when sending the app to `Error` page with custom props but when I refreshed was getting the expected values or times no props being passed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2604","RelatedDescription":"Closed issue \"Passing new params to the current route when props=true, doesn't update router-view\" (#2604)"},{"Id":"405301212","IsPullRequest":false,"CreatedAt":"2019-01-31T15:34:59","Actor":"WisdomEye","Number":"2603","RawContent":null,"Title":"v-if mutating router-link to","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8](https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add an li using v-if, and then try change the value of variable, in the example bellow update start with value 0, I can add a button to increment or decrement it, and get error about mutating :for from router-link.\r\n\r\n\t<li v-if=\"update\" id=\"dashboard-menu-top-updates\">\r\n\t\t<router-link :to=\"{ name: 'Update' }\" :exact=\"$route.name === 'Update'\">Atualizações</router-link>\r\n\t</li>\r\n\r\n### What is expected?\r\nThe expected is render or remove the element without errors about mutating \":to\" from router-link\r\n\r\n### What is actually happening?\r\nThe li is correctly rendered as wished, but make a lot of erros on console about mutating \":to\" from router-link.\r\n\r\nError:\r\n\r\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"to\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2603","RelatedDescription":"Closed issue \"v-if mutating router-link to\" (#2603)"},{"Id":"404175057","IsPullRequest":false,"CreatedAt":"2019-01-29T09:25:39","Actor":"avele","Number":"2601","RawContent":null,"Title":"Keep previous component until next mounted","State":"closed","Body":"### What problem does this feature solve?\r\nI want the ability to change the router-view component only when the next one is mounted. For instance, the next router-view component could be mounted separately with ```display: none```, and after the \"mounted\" event I would make the new component visible and destroy the previous component.\r\n\r\nCurrently I can only show a spinner or an overlay while the new component is loading, but I can't keep the previous component on the screen.\r\n\r\nMy usecase is similar to github repository tabs\r\n![github tabs](https://user-images.githubusercontent.com/34437766/51894559-8f384280-23c1-11e9-9637-3fc10ae17fa4.gif)\r\nI want to mimic the standard, non-SPA browser behavior.\r\n\r\n### What does the proposed API look like?\r\nA prop for ```<router-view>,``` perhaps \"preload\" or \"changeOnMounted\".\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2601","RelatedDescription":"Closed issue \"Keep previous component until next mounted\" (#2601)"},{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"},{"Id":"402529730","IsPullRequest":false,"CreatedAt":"2019-01-24T08:23:24","Actor":"mice33","Number":"2596","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mice33/router-demo](https://github.com/mice33/router-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.run dev && visit website  \r\n2.click 'go to h2' link  \r\n3.click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\n### What is expected?\r\n3.click 'go back' link, can go back\r\n\r\n### What is actually happening?\r\n3.click 'go back' link, can't go back\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nSame problem #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2596","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2596)"},{"Id":"402518493","IsPullRequest":false,"CreatedAt":"2019-01-24T07:49:51","Actor":"ovarte","Number":"2594","RawContent":null,"Title":"vue-router and axios 拦截器一起使用 出现的异步问题","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwdtae9u/3/](https://jsfiddle.net/jwdtae9u/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n详见JSFiddle。通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，请问怎么解决呢\r\n\r\n### What is expected?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。请问怎么解决呢\r\n\r\n### What is actually happening?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。\r\n\r\n---\r\n怎么解决 vue-router和 axios 拦截器 一起使用的问题呢 非常感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2594","RelatedDescription":"Closed issue \"vue-router and axios 拦截器一起使用 出现的异步问题\" (#2594)"},{"Id":"402529161","IsPullRequest":false,"CreatedAt":"2019-01-24T03:41:50","Actor":"mice33","Number":"2595","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"Demo: https://github.com/mice33/router-demo\r\n\r\nChrome 70\r\n\r\ncan't from 'h2' page go back 'Hello World' page when the onload event of window not triggered\r\n\r\nsteps:\r\n1. run dev && visit website\r\n2. click 'go to h2' link\r\n3. click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\nlink #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2595","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2595)"},{"Id":"401790731","IsPullRequest":false,"CreatedAt":"2019-01-22T14:29:48","Actor":"yegorLitvinov","Number":"2593","RawContent":null,"Title":"replaceState Error when path starts with // and scrollBehavior is set","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/yegorLitvinov/vue-router-bug](https://github.com/yegorLitvinov/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSet scrollBehavior property in router config. Put two forward slashes into beginning of the url (e.g. http://localhost:8081//about)\r\n\r\n### What is expected?\r\nNo errors in console\r\n\r\n### What is actually happening?\r\nIn firefox: SecurityError: The operation is insecure.\r\nIn Chrome: Uncaught DOMException: Failed to execute 'replaceState' on 'History': A history state object with URL 'http://about/' cannot be created in a document with origin 'http://localhost:8081' and URL 'http://localhost:8081//about'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2593","RelatedDescription":"Open issue \"replaceState Error when path starts with // and scrollBehavior is set\" (#2593)"},{"Id":"401651538","IsPullRequest":true,"CreatedAt":"2019-01-22T08:34:55","Actor":"zrh122","Number":"2592","RawContent":null,"Title":"fix(router-view): add condition to see whether the tree is inactive (fix #2552)","State":"open","Body":"close #2552\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2592","RelatedDescription":"Open PR \"fix(router-view): add condition to see whether the tree is inactive (fix #2552)\" (#2592)"},{"Id":"401560199","IsPullRequest":true,"CreatedAt":"2019-01-22T01:15:28","Actor":"Sayegh7","Number":"2591","RawContent":null,"Title":"Warn about root paths without a leading slash (fix #2550)","State":"open","Body":"close #2550\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR creates the following warning message when a root route exists without a leading slash:\r\n<img width=\"583\" alt=\"screen shot 2019-01-22 at 3 12 15 am\" src=\"https://user-images.githubusercontent.com/13800170/51506192-b2785600-1df3-11e9-8ef0-7607ac68aa2b.png\">\r\n\r\nThis facilitates the debugging process as the current behavior does not generate any warnings or errors.","Url":"https://github.com/vuejs/vue-router/pull/2591","RelatedDescription":"Open PR \"Warn about root paths without a leading slash (fix #2550)\" (#2591)"},{"Id":"401548570","IsPullRequest":true,"CreatedAt":"2019-01-22T00:02:47","Actor":"zigomir","Number":"2590","RawContent":null,"Title":"feat: add browser ESM build","State":"open","Body":"POC\r\n\r\nfixes https://github.com/vuejs/vue-router/issues/2589\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2590","RelatedDescription":"Open PR \"feat: add browser ESM build\" (#2590)"},{"Id":"401532763","IsPullRequest":false,"CreatedAt":"2019-01-21T22:37:34","Actor":"zigomir","Number":"2589","RawContent":null,"Title":"Browser ES module build","State":"open","Body":"### What problem does this feature solve?\r\nNow with https://github.com/vuejs/vue/pull/7110 in place and https://github.com/vuejs/vuex/pull/1401 we should probably expose `vue-router` ES module build (minified and non–minifed) so that develpers can use main three vue libraries with `<script type=\"module>` and without any build step.\r\n\r\nWould you merge a PR that solves that?\r\n\r\n\r\n### What does the proposed API look like?\r\nNo changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2589","RelatedDescription":"Open issue \"Browser ES module build\" (#2589)"},{"Id":"401382250","IsPullRequest":true,"CreatedAt":"2019-01-21T14:39:41","Actor":"pfeiferbit","Number":"2588","RawContent":null,"Title":"docs: add descriptions for parseQuery / stringifyQuery","State":"open","Body":"This clears up what the implementor of these functions has to expect.\r\n\r\n---\r\n\r\nStumbled across this while trying to use the [qs](https://www.npmjs.com/package/qs) package for `parseQuery` and `stringifyQuery` since I work with a PHP backend that relies on `foo[bar][baz]=qux` syntax with a strict RFC-3986 encoding.\r\n\r\nWording could probably be better since English ain't my primary language.\r\n\r\nGreetings","Url":"https://github.com/vuejs/vue-router/pull/2588","RelatedDescription":"Open PR \"docs: add descriptions for parseQuery / stringifyQuery\" (#2588)"},{"Id":"401250071","IsPullRequest":true,"CreatedAt":"2019-01-21T09:53:43","Actor":"bbbbx","Number":"2587","RawContent":null,"Title":"docs: make title more understandable","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nThe title does not match the body description.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2587","RelatedDescription":"Closed or merged PR \"docs: make title more understandable\" (#2587)"},{"Id":"401127483","IsPullRequest":true,"CreatedAt":"2019-01-20T18:53:21","Actor":"Aferz","Number":"2586","RawContent":null,"Title":"feat(transition): Using router push/replace instead of private history functions","State":"open","Body":"I've found myself overriding the main Router to be able to control the `.back` method to prevent the user clicks on my app button a leaves the application. Check this example:\r\n\r\n```javascript\r\nclass Router extends VueRouter {\r\n  constructor (...args) {\r\n    super(...args)\r\n\r\n    this.counter = 0\r\n  }\r\n\r\n  push (location, ...args) {\r\n    super.push(location, ...args)\r\n\r\n    this.counter++\r\n  }\r\n\r\n  go (n) {\r\n    if (this.counter + n < 0) {\r\n      super.replace({ name: 'home.feed' })\r\n    } else {\r\n      super.go(n)\r\n    }\r\n\r\n    this.counter += n\r\n  }\r\n}\r\n```\r\n\r\nThanks to this approach, product links can be shared without worring the back button that linked pages contain will destroy the application once pressed. (The same behaviour as Twitter PWA)\r\n\r\n---\r\n\r\nWhat I mean is the `beforeEach` guard is not respecting the overriden methods (push, replace, etc...), because it uses the `history` driver directly when it has to redirect to a route, instead of using the router instance.\r\n\r\nThis could be taken as a _Breaking Change_ for users like me that decided to wrap the router in their own classes, but I honestly think that this usage of the router is outside of the scope of the vue-router maintainers.\r\n\r\nWhat do you all think?","Url":"https://github.com/vuejs/vue-router/pull/2586","RelatedDescription":"Open PR \"feat(transition): Using router push/replace instead of private history functions\" (#2586)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"410330210","IsPullRequest":false,"CreatedAt":"2019-02-14T14:37:44","Actor":"djam90","Number":"1509","RawContent":null,"Title":"Unit tests do not run when importing router into store and store into router","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/djam90/vuex-vue-router-issue](https://github.com/djam90/vuex-vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm run test:unit` and see the failure. To get the tests to run again, do not import the store into the router and the router into the store.\r\n\r\n### What is expected?\r\nThe tests should run fine and circular imports should work. They *DO* work in the browser just not in Mocha testing environment. \r\n\r\n### What is actually happening?\r\nError as follows:\r\n\r\n```\r\nTypeError: Cannot read property 'getters' of undefined\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:261:1\r\n    at Array.forEach (<anonymous>)\r\n    at assertRawModule (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:260:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:186:1)\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:200:1\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1\r\n    at Array.forEach (<anonymous>)\r\n    at forEachValue (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:199:1)\r\n    at new ModuleCollection (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:160:1)\r\n    at new Store (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:311:1)\r\n```\r\n\r\n---\r\nMy VueX store needs to be able to import the router so it can do routing things like navigate to another page.\r\nMy router needs to be able to access state from VueX to determine what to do in a `router.beforeEach` handler.\r\n\r\nI have asked for help on Stack Overflow:\r\nhttps://stackoverflow.com/questions/54691789/unable-to-import-vuex-store-into-router-and-router-into-store-in-mocha-tests\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1509","RelatedDescription":"Open issue \"Unit tests do not run when importing router into store and store into router\" (#1509)"},{"Id":"410145165","IsPullRequest":true,"CreatedAt":"2019-02-14T06:15:56","Actor":"parth67","Number":"1508","RawContent":null,"Title":"Fixed issue#1507 : Memory leak happening while using registerModule/u…","State":"open","Body":"Fixes #1507 \r\n\r\nClosure function was fixed with helper function partial which doesn't retain oldVm in environment.","Url":"https://github.com/vuejs/vuex/pull/1508","RelatedDescription":"Open PR \"Fixed issue#1507 : Memory leak happening while using registerModule/u…\" (#1508)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-02-13T15:23:18","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"closed","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Closed or merged PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-13T15:21:16","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Closed or merged PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"409797501","IsPullRequest":false,"CreatedAt":"2019-02-13T13:09:45","Actor":"skkart","Number":"1507","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mrj8spu0/](https://jsfiddle.net/mrj8spu0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the JSFiddle link mentioned as part of this issue.\r\n2. Check and record the heap memory in the browser on initial stage.\r\n3. Click on the \"Register\" button to dynamically register Module B 100 times\r\n4. Now we will see an increase in heap memory on account of registering module 100 times.\r\n5. Click on \"Un-Register\" button to dynamically un-register Module B 100 times\r\n6. Check the heap memory again, at this point will see an jump in memory usage on account of un-registering 100 module. \r\n\r\n### What is expected?\r\nHeap memory generated on step 3 & 5 must be cleared after step 6. (Final stage)\r\n\r\n### What is actually happening?\r\nHeap memory of the browser is not getting cleared.\r\n\r\n---\r\nWe are observing memory leak of Store._vm while using registerModule/unregisterModule extensively.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n\r\noldVm.$destroy(); \r\noldVm = null; // This is the missing code\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52727462-4ac0bf80-2fdb-11e9-91ce-7dd012cba4b5.png)\r\n\r\n[Heap-20190213T220212.heaptimeline.zip](https://github.com/vuejs/vuex/files/2861246/Heap-20190213T220212.heaptimeline.zip)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1507","RelatedDescription":"Open issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1507)"},{"Id":"409792179","IsPullRequest":false,"CreatedAt":"2019-02-13T12:56:14","Actor":"skkart","Number":"1506","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"We are observing memory leak of Store._vm while using registerModule/unregisterModule.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nI have created an demo link to illustrate the above mentioned problem\r\n[jsFiddle link](https://jsfiddle.net/mrj8spu0/)\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n**_oldVm.$destroy(); \r\noldVm = null;      // This is the missing code_**\r\n```\r\nfunction resetStoreVM (store, state, hot) {\r\n    var oldVm = store._vm;\r\n\r\n    ...\r\n\t...\r\n\r\n    if (oldVm) {\r\n      if (hot) {\r\n        // dispatch changes in all subscribed watchers\r\n        // to force getter re-evaluation for hot reloading.\r\n        store._withCommit(function () {\r\n          oldVm._data.$$state = null;\r\n        });\r\n      }\r\n\r\n      // Existing Code\r\n      Vue.nextTick(function () { return oldVm.$destroy(); });\r\n       \r\n      // The OldVm Object is still in heap even after destroy\r\n      // Appropriate Code\r\n      oldVm.$destroy(); \r\n      oldVm = null;\r\n    }\r\n  }\r\n```\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52712275-1983c780-2fba-11e9-8c67-43b24afe56e1.png)\r\n\r\n[Heap-20190213T172945.heapsnapshot.zip](https://github.com/vuejs/vuex/files/2860354/Heap-20190213T172945.heapsnapshot.zip)\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1506","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1506)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-02-13T11:24:21","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Closed issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-13T11:12:36","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Closed issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"409173630","IsPullRequest":false,"CreatedAt":"2019-02-12T08:20:46","Actor":"visualjerk","Number":"1505","RawContent":null,"Title":"Infinite Loop With Error Handler And Vuex","State":"open","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/z6ww1zp2q4](https://codesandbox.io/s/z6ww1zp2q4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- open browser console\r\n\r\n### What is expected?\r\nNot getting an infinite render loop:\r\n[Vue warn]: You may have an infinite update loop in a component render function.\r\n\r\n### What is actually happening?\r\nGetting an infinite render loop\r\n\r\n---\r\nThis happens when you handle an error that was caused during rendering and try to commit it to the store.\r\n\r\nIt looks like a component that throws an error tries to rerender after the store is updated, even so it doesn't use the store's state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1505","RelatedDescription":"Open issue \"Infinite Loop With Error Handler And Vuex\" (#1505)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-02-10T09:25:00","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-31T13:11:02","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"closed","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Closed or merged PR \"docs: complement preserveState information\" (#1484)"},{"Id":"397545948","IsPullRequest":true,"CreatedAt":"2019-01-31T11:18:22","Actor":"periscuelo","Number":"1481","RawContent":null,"Title":"docs: Update to version 3.1.0 [pt-br]","State":"closed","Body":"I made one update to be equal to english version explanation.\r\n@ktsn Can you review / merge it?\r\n\r\nThanks","Url":"https://github.com/vuejs/vuex/pull/1481","RelatedDescription":"Closed or merged PR \"docs: Update to version 3.1.0 [pt-br]\" (#1481)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-01-24T09:32:52","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"open","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Open issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"},{"Id":"397755794","IsPullRequest":true,"CreatedAt":"2019-01-10T10:14:56","Actor":"lishihong","Number":"1483","RawContent":null,"Title":"Revert 1457 patch 1","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1483","RelatedDescription":"Closed or merged PR \"Revert 1457 patch 1\" (#1483)"},{"Id":"397745237","IsPullRequest":true,"CreatedAt":"2019-01-10T09:40:39","Actor":"lishihong","Number":"1482","RawContent":null,"Title":"Update index.js","State":"closed","Body":"test","Url":"https://github.com/vuejs/vuex/pull/1482","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1482)"},{"Id":"396165778","IsPullRequest":false,"CreatedAt":"2019-01-07T10:20:13","Actor":"SebastianS90","Number":"1480","RawContent":null,"Title":"Store getters do not re-evaluate on dynamic module registration","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ll6zjklq97](https://codesandbox.io/s/ll6zjklq97)\r\n\r\n### Steps to reproduce\r\n- Open the CodeSandbox\r\n- Click \"Register Module\"\r\n\r\n### What is expected?\r\nAll four values should switch to true\r\n\r\n### What is actually happening?\r\nOnly the values based on watchers from the component switch to true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1480","RelatedDescription":"Closed issue \"Store getters do not re-evaluate on dynamic module registration\" (#1480)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-15T05:31:03.5651694Z","RunDurationInMilliseconds":4482}