{"Data":{"Vue":{"Events":[{"Id":"7041097782","Type":"IssuesEvent","CreatedAt":"2017-12-29T18:26:58","Actor":"evertramos","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7343","RelatedDescription":"Opened issue \"Time value not syncing when having empty values\" (#7343) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/evertramos/jce7057g/3/](https://jsfiddle.net/evertramos/jce7057g/3/)\r\n\r\n### Steps to reproduce\r\nuse input with type 'time', step=\"2\" to have seconds and fill only minutes and seconds.\r\n\r\n### What is expected?\r\nsync the minutes and seconds I think... or even fill hour with zeros, maybe?\r\n\r\n### What is actually happening?\r\nnot syncing\r\n\r\n---\r\nNot sure itÂ´s a bug of vue or some how the browsers in general I have tested the new chrome and new firefox, old browsers seems to work fine.\r\n\r\nThanks for all the good work!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7041491350","Type":"PullRequestEvent","CreatedAt":"2017-12-29T21:26:18","Actor":"m1guelpf","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1957","RelatedDescription":"Opened pull request \"Avoid updating license every year\" (#1957) at vuejs/vue-router","RelatedBody":"Uses the same template as in main repo to avoid recieving a PR every year."},{"Id":"7037948745","Type":"IssuesEvent","CreatedAt":"2017-12-28T17:40:23","Actor":"mymtw","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1956","RelatedDescription":"Opened issue \"Vuejs ssr check user is authenticated for each request\" (#1956) at vuejs/vue-router","RelatedBody":"Iâ€™m using this ssr boilerplate for my app, https://github.com/vuejs/vue-hackernews-2.0\r\n\r\nI donâ€™t know how to implement logic for checking is user authenticated for each userâ€™s page request, Iâ€™m using cookies for storing user's token\r\n\r\nI looked that router can handle request before render component:\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n    if (to.matched.some(record => record.meta.requiresAuth)) {\r\n      // this route requires auth, check if logged in\r\n      // if not, redirect to login page.\r\n      // isLoggedIn()\r\n      //   .then(response => response.json())\r\n      //   .then(json => {\r\n      //     console.log(json[0])\r\n      //     next()\r\n      //   })\r\n      //   .catch(error => {\r\n      //     console.log(error)\r\n      //     next()\r\n      //   })\r\n\r\n      const x = true\r\n\r\n      if (!x) {\r\n        next({\r\n          path: '/signin',\r\n          query: { redirect: to.fullPath }\r\n        })\r\n      } else {\r\n        next()\r\n      }\r\n    } else {\r\n      next() // make sure to always call next()!\r\n    }\r\n  })\r\n\r\n  return router\r\n}\r\n```\r\n\r\nHere is problem, router starting to use this code in client-side and in server-side, which in my case a little bit incorrect.\r\n\r\nHow to send request for is user authenticated only once, or in client-side or in server-side?"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7041502525","Type":"IssuesEvent","CreatedAt":"2017-12-29T21:32:28","Actor":"hootlex","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1109","RelatedDescription":"Opened issue \"Update Shopping Cart Example\" (#1109) at vuejs/vuex","RelatedBody":"# What problem does this feature solve?\r\nThe goal of updating the example is to make it more friendly to newcomers and also demonstrate some best practices.\r\n\r\n# What does the proposed API look like?\r\nAfter reviewing the shopping cart example and discussing it with @chrisvfritz, Iâ€™ve started working on possible improvements.\r\n\r\n## Implemented changes https://github.com/vuejs/vuex/pull/1107\r\n- Use separate mutations to update the checkout status and the cart.\r\n- Move/create cart related getters to the `cart` module.\r\n- Remove abbreviations\r\n\r\n## Not implemented\r\n- Make the example comply with the style guide.\r\n- Make mutations responsible for updating one piece of state to make debugging easier.\r\n- Use an action (`addProductToCart`) to commit separate mutations on `cart` and `products` modules instead of using a shared mutation. \r\n\r\n\r\n## Ideas\r\n### Mutation types\r\nWhat do you think of removing the mutation types in order to make the example simpler? Mutation types might be beneficial in some cases but by not using them in the example might make it more friendly to newcomers.\r\n\r\n### Remove getters that return a piece of state as is\r\nI feel that this pattern might give the wrong impression to newcomers that they always have to use a getter in order to access the state.\r\nExample: \r\n```js\r\nconst getters = {\r\n  allProducts: state => state.all\r\n}\r\n```\r\n\r\n### Other\r\nI think that we could use more descriptive names in Vuex assets. \r\nFor instance `added` can be `cartItems` or just `items` since itâ€™s being accessed as `cart.items`. In general, I like the `items` convention for all modules. This way I always know the property name and distinguish the content based on the module name. For example `users.items`, `products.itemsâ€‹`. \r\n\r\nAlso, `addToCart` could be `addProductToCart` since a cart can also contain other things.\r\n\r\nThat might be too peaky but I believe that when people go over an official example itâ€™s very likely to use it as a reference for best practices.\r\n\r\nWhat do you think? ðŸ™‚\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7041492767","Type":"PullRequestEvent","CreatedAt":"2017-12-29T21:27:08","Actor":"m1guelpf","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1108","RelatedDescription":"Opened pull request \"Avoid updating license every year\" (#1108) at vuejs/vuex","RelatedBody":"Uses the same template as in main repo to avoid recieving a PR every year."},{"Id":"7041461267","Type":"PullRequestEvent","CreatedAt":"2017-12-29T21:10:47","Actor":"hootlex","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/pull/1104","RelatedDescription":"Closed pull request \"[Shopping cart example] Use `product` instead of abbreviation\" (#1104) at vuejs/vuex","RelatedBody":"Replace the `p` variable name abbreviation with `product` to make the example easier to read."},{"Id":"7041460474","Type":"PullRequestEvent","CreatedAt":"2017-12-29T21:10:25","Actor":"hootlex","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1107","RelatedDescription":"Opened pull request \"Update shopping cart example\" (#1107) at vuejs/vuex","RelatedBody":"#### Checkout related mutations\r\n- The mutations that update the `checkoutStatus` can be independent of the ones that alter the cart items.\r\n- I have added the `SET_CART_ITEMS` and `SET_CHECKOUT_STATUS` mutations and removed the `CHECKOUT_*` ones to make debugging easier.\r\n\r\n#### cart module getters\r\n- The `cartProducts` could live within cart moduleâ€™s getters instead of the root getters.\r\n- The total price of the cart should be a getter instead of a computed property.\r\n\r\n#### Abbreviations\r\nReplace the `p` variable name abbreviation with `product` to make the example easier to read.\r\n\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-12-30T05:30:33.3626716Z","RunDurationInMilliseconds":1993}