{"Data":{"GitHub":{"Issues":[{"Id":"529056472","IsPullRequest":false,"CreatedAt":"2019-11-27T01:12:45","Actor":"SamBent","Number":"2246","RawContent":null,"Title":"Animating an inherited property doesn't work (sometimes)","State":"open","Body":"* .NET Core Version: any\r\n* Windows version: any\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes.  Repros in 4.0+ (regression from 3.5)\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)?  no\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/master/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:** Animating an inherited property doesn't work in some cases.  It works if the host element has had an inherited property set directly, even one different from the one being animated.  It (sometimes) works if a second inherited property is already being animated.  Sometimes it doesn't work until you do some other action, after which it works.  In other cases, it may not work at all.  There is no simple pattern.\r\n\r\nThe attached repro declares a style for TextBlock that contains triggers to animate its Foreground and LineHeight properties (both are inheritable).  It displays four instances of TextBlock using the style, but with different initial settings for the properties.  Each comes with buttons to activate the two triggers.  All four should work the same way, but the repro illustrates that they depend on outside factors or previous behavior.  (The repro demonstrates four interesting cases, but it doesn't illustrate all the bizarre ways this can fail.)\r\n\r\n **Expected behavior:** The \"Trigger FG\" button animates the TextBlock's Foreground, causing its text to turn red.\r\n  \r\n **Actual behavior:** The \"No Inheritance\" and \"Inherit Foreground\" instances don't work initially, but start working after you click the \"Trigger LH\" button.  The \"Inherit LineHeight\" instance doesn't work at all.  The \"Set LineHeight\" instance works correctly.\r\n \r\n **Minimal repro:**\r\n[Repro.zip](https://github.com/dotnet/wpf/files/3894605/Repro.zip)\r\n\r\n**Remarks:** This bug is responsible for the failure of some test cases in .NET 4.0+, including one that recently arose while testing an unrelated servicing fix.  The test cases aren't testing this scenario directly, but they make runtime choices that occasionally stumble across the bug.  For a while it appeared that the failure happened only on Win8.1 + .NET 4.7.2 (and only when no debugger was attached), but it turns out that the OS, .NET version, debugger, etc. all influence the runtime choices, and only rarely produce a failing case.","Url":"https://github.com/dotnet/wpf/issues/2246","RelatedDescription":"Open issue \"Animating an inherited property doesn't work (sometimes)\" (#2246)"},{"Id":"528973882","IsPullRequest":true,"CreatedAt":"2019-11-27T01:06:24","Actor":"mcavigelli","Number":"2245","RawContent":null,"Title":"Typos and formatting","State":"closed","Body":"Two small changes in the documentation of a control and of a guideline.","Url":"https://github.com/dotnet/wpf/pull/2245","RelatedDescription":"Closed or merged PR \"Typos and formatting\" (#2245)"},{"Id":"528951395","IsPullRequest":true,"CreatedAt":"2019-11-26T20:35:27","Actor":"dotnet-maestro[bot]","Number":"2244","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191126.3\r\n- **Date Produced**: 11/26/2019 8:08 PM\r\n- **Commit**: 2204c3f17bea70ee01be3b450f6b84158a80c154\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-servicing.19576.3\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2244","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2244)"},{"Id":"528374746","IsPullRequest":true,"CreatedAt":"2019-11-26T18:35:57","Actor":"vatsan-madhavan","Number":"2241","RawContent":null,"Title":"Add internal/release/* to trigger","State":"closed","Body":"Add internal/release/* to trigger","Url":"https://github.com/dotnet/wpf/pull/2241","RelatedDescription":"Closed or merged PR \"Add internal/release/* to trigger\" (#2241)"},{"Id":"528719046","IsPullRequest":true,"CreatedAt":"2019-11-26T13:28:39","Actor":"dotnet-maestro[bot]","Number":"2243","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191125.5\r\n- **Date Produced**: 11/26/2019 12:31 AM\r\n- **Commit**: 1db4999af635f205da0e17e1a3b7ba38b8bea5c0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19575.5\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2243","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2243)"},{"Id":"528709652","IsPullRequest":false,"CreatedAt":"2019-11-26T13:00:47","Actor":"Asser82","Number":"2242","RawContent":null,"Title":"Window overflows to second screen after it is snapped to desktop top","State":"open","Body":"Hi there,\r\n\r\nI am using a Window with a custom WindowChrome. This caused many bugs over the last year. The initial bug was, that when the window is maximized the window size is calculated bigger than the screen, so that part of the window content is clipped at the edges.\r\n\r\nTo overcome this I added a margin between the window and its content, when the window is maximized. After that I had problems with wrong window size calculations with undocked task bars, multiple monitors and different dpi scalings. After several iterations I resolved such issues by handling WM_GETMINMAXINFO. \r\n\r\nNow a new bug arrived, that says that a black border is visible on the second screen, when the window is maximized by snapping it to the top of the first screen. The border does not appear when I maximize the window by double clicking the caption or by pressing the maximize button. Is this a bug? If not, is there a way to detect that a window is maximized through snapping, to handle it differently? \r\n\r\nThanks,\r\nArthur","Url":"https://github.com/dotnet/wpf/issues/2242","RelatedDescription":"Open issue \"Window overflows to second screen after it is snapped to desktop top\" (#2242)"},{"Id":"528249785","IsPullRequest":false,"CreatedAt":"2019-11-25T18:06:40","Actor":"rladuca","Number":"2240","RawContent":null,"Title":"Changing .NET Core WPF project item from None to Resource does not embed item in output assembly","State":"open","Body":"@vsfeedback commented on [Sun Nov 24 2019](https://github.com/dotnet/project-system/issues/5658)\n\n_This issue has a corresponding [ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/802033/in-sdk-style-csproj-changing-build-action-between.html). Please vote and comment there to make sure your voice is heard._\n\n---\nThis issue is present in VS2019 16.3.7, when targeting WPF and .NET Core 3.0 or .NET Framework 4.7.2 with the new SDK-Style .csproj format.\n\nWhen changing [Build Action] for a file between [None] and [Resource] in SDK-Style .csproj, the Output dll/exe is not correctly recreated on Build (if there are no other changes triggering a recompile) - we have to do a Rebuild to get the desired effect! \n\nNOTE: The Build command seems to do _something_, but the size of the resulting dll/exe does not reflect the removal/addition of the built-in resource content. After a Rebuild (or after changing code etc and doing another Build) the size of the dll/exe is corrected.\n\nInterestingly enough, the same issue does not seem to apply when switching between [None] and [EmbeddedResource].\n\nThe issue can easily be reproduced:\n\n* Create a new WPF application (with SDK-style .csproj file).\n* Drop an image file or similar with a size that's large compared to the application .dll/.exe output (just to easily spot the size difference when the image is embedded or not). \n* Initially the image file will have [Build Action = None]. Build the app and note the size of the output dll/exe. \n* Then change to [Build Action = Resource] and Build again (not Rebuild, and no code change in between). \n* The build seems to update the dll/exe, but the output size does not change.\n* Now, do a Rebuild (or change a source-code file and Build). The output size will change.\n\nThe above steps can be used to repeatedly reproduce the (wrong size) issue by toggling between [None] and [Resource] - doing a build does not change the size, but doing a Rebuild correctly updates the size (of the output dll/exe).\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 11/1/2019, 04:48 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Sara Liu [MSFT] on 11/4/2019, 06:17 PM: \n\n<p>Thank you for your feedback, this issue has been escalated for further investigation and if there is any process, I will inform you immediately.</p>\n\n\n---\n### Original Solutions\n(no solutions)\n\n---\n\n@drewnoakes commented on [Sun Nov 24 2019](https://github.com/dotnet/project-system/issues/5658#issuecomment-557989831)\n\nI intend to transfer this to https://github.com/dotnet/wpf but no longer have permission to do so. However this may be related to a GitHub outage seen today, so will try again later before escalating.\n\n---\n\n@sharwell commented on [Sun Nov 24 2019](https://github.com/dotnet/project-system/issues/5658#issuecomment-557997609)\n\n@terrajobst can you transfer this issue for us?\n\n","Url":"https://github.com/dotnet/wpf/issues/2240","RelatedDescription":"Open issue \"Changing .NET Core WPF project item from None to Resource does not embed item in output assembly\" (#2240)"},{"Id":"528200813","IsPullRequest":false,"CreatedAt":"2019-11-25T16:34:23","Actor":"teh173","Number":"2239","RawContent":null,"Title":"NearestMonitorInfoFromWindow Invalid Window Handle crash with multi-mon DPI","State":"open","Body":"* .NET Core Version: 3.0.100\r\n* Windows Version: 18362.10024 (but also happens in 1903)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n **Problem description:**\r\nNearestMonitorInfoFromWindow Invalid Window Handle crash occurs when closing a popup that shows another popup with an HWndHost in a multi-monitor DPI application.  Not sure if this is the only way to repro.  Also happens in .NET framework.\r\n \r\n **Actual behavior:** \r\n\r\n```\r\n>\tPresentationCore.dll!MS.Internal.DpiUtil.HwndDpiInfo.NearestMonitorInfoFromWindow(System.IntPtr hwnd)\tUnknown\r\n \tPresentationCore.dll!MS.Internal.DpiUtil.HwndDpiInfo.HwndDpiInfo(System.IntPtr hWnd, bool fallbackToNearestMonitorHeuristic)\tUnknown\r\n \tPresentationCore.dll!MS.Internal.DpiUtil.GetExtendedDpiInfoForWindow(System.IntPtr hWnd, bool fallbackToNearestMonitorHeuristic)\tUnknown\r\n \tPresentationFramework.dll!System.Windows.SystemResources.GetDpiAwarenessCompatibleNotificationWindow(System.Runtime.InteropServices.HandleRef hwnd)\tUnknown\r\n \tPresentationFramework.dll!System.Windows.Interop.HwndHost.BuildOrReparentWindow()\tUnknown\r\n \tPresentationFramework.dll!System.Windows.Interop.HwndHost.OnSourceChanged(object sender, System.Windows.SourceChangedEventArgs e)\tUnknown\r\n \tPresentationCore.dll!System.Windows.SourceChangedEventArgs.InvokeEventHandler(System.Delegate genericHandler, object genericTarget)\tUnknown\r\n \tPresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\tUnknown\r\n \tPresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source, System.Windows.RoutedEventArgs args, bool reRaised)\tUnknown\r\n \tPresentationCore.dll!System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject sender, System.Windows.RoutedEventArgs args)\tUnknown\r\n \tPresentationCore.dll!System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs e)\tUnknown\r\n \tPresentationCore.dll!System.Windows.PresentationSource.UpdateSourceOfElement(System.Windows.DependencyObject doTarget, System.Windows.DependencyObject doAncestor, System.Windows.DependencyObject doOldParent)\tUnknown\r\n \tPresentationCore.dll!System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot)\tUnknown\r\n \tPresentationCore.dll!System.Windows.Interop.HwndSource.RootVisualInternal.set(System.Windows.Media.Visual value)\tUnknown\r\n \tPresentationCore.dll!System.Windows.Interop.HwndSource.Dispose(bool disposing)\tUnknown\r\n \tPresentationCore.dll!System.Windows.Interop.HwndSource.OnHwndDisposed(object sender, System.EventArgs args)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndWrapper.Dispose(bool disposing, bool isHwndBeingDestroyed)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DefWndProcWrapper(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DefWndProcWrapper(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DefWndProcWrapper(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame frame)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.Run()\tUnknown\r\n \tPresentationFramework.dll!System.Windows.Application.RunDispatcher(object ignore)\tUnknown\r\n \tPresentationFramework.dll!System.Windows.Application.RunInternal(System.Windows.Window window)\tUnknown\r\n \tPresentationFramework.dll!System.Windows.Application.Run()\tUnknown\r\n \tNearestMonitorDpiCrash.dll!NearestMonitorDpiCrash.App.Main()\tUnknown\r\n\r\n```\r\n \r\n **Expected behavior:**\r\n No crash\r\n\r\n **Minimal repro:**\r\n1. Run sample application.\r\n2. Close sample application (or, uncheck \"Show Popup\" checkbox)\r\n[NearestMonitorDpiCrash.zip](https://github.com/dotnet/wpf/files/3887599/NearestMonitorDpiCrash.zip)\r\n","Url":"https://github.com/dotnet/wpf/issues/2239","RelatedDescription":"Open issue \"NearestMonitorInfoFromWindow Invalid Window Handle crash with multi-mon DPI\" (#2239)"},{"Id":"528081493","IsPullRequest":true,"CreatedAt":"2019-11-25T13:39:18","Actor":"dotnet-maestro[bot]","Number":"2238","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191124.4\r\n- **Date Produced**: 11/25/2019 12:32 AM\r\n- **Commit**: 626b9e7148081ec6aaf2280ed8a7fff7f8a6b4e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19574.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2238","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2238)"},{"Id":"528012307","IsPullRequest":true,"CreatedAt":"2019-11-25T11:05:34","Actor":"filipnavara","Number":"2237","RawContent":null,"Title":"Fix typo","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/2237","RelatedDescription":"Open PR \"Fix typo\" (#2237)"},{"Id":"527696514","IsPullRequest":true,"CreatedAt":"2019-11-24T13:37:49","Actor":"dotnet-maestro[bot]","Number":"2236","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191123.4\r\n- **Date Produced**: 11/24/2019 1:52 AM\r\n- **Commit**: 2eb47442a707c537bd5e95517686974f08a3b228\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19573.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2236","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2236)"},{"Id":"527692667","IsPullRequest":false,"CreatedAt":"2019-11-24T12:44:44","Actor":"EmaginationStore","Number":"2235","RawContent":null,"Title":"Add loading fonts from memorystream or byte array","State":"open","Body":"The title says it all really, there seems to be no easy way to use a font in WPF that isn't installed on the OS, embedded in the app, or saved in the file system.\r\n\r\nI have some fonts in a compressed folder that I would like to use without having to extract them to a temp folder, I don't know the name of the font family, just the location ('file name') within the compressed folder.","Url":"https://github.com/dotnet/wpf/issues/2235","RelatedDescription":"Open issue \"Add loading fonts from memorystream or byte array\" (#2235)"},{"Id":"527556513","IsPullRequest":true,"CreatedAt":"2019-11-23T13:44:25","Actor":"dotnet-maestro[bot]","Number":"2234","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191122.6\r\n- **Date Produced**: 11/23/2019 2:22 AM\r\n- **Commit**: f79f9ef71a0ef3bc40e53caa1113c62691100b6c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19572.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2234","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2234)"},{"Id":"527467681","IsPullRequest":true,"CreatedAt":"2019-11-23T02:08:30","Actor":"dotnet-maestro[bot]","Number":"2232","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e226e5ed-6125-48cb-94d5-08d690bc143a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:e226e5ed-6125-48cb-94d5-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2232","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#2232)"},{"Id":"527488832","IsPullRequest":true,"CreatedAt":"2019-11-23T01:23:23","Actor":"dotnet-maestro-bot","Number":"2233","RawContent":null,"Title":"[automated] Merge branch 'release/3.1' => 'master'","State":"open","Body":"I detected changes in the release/3.1 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1 by the following committers:\n\n* @dotnet-maestro[bot]\n* @vatsan-madhavan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/wpf merge/release/3.1-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/wpf merge/release/3.1-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/wpf/pull/2233","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1' => 'master'\" (#2233)"},{"Id":"527464560","IsPullRequest":true,"CreatedAt":"2019-11-23T00:37:35","Actor":"dotnet-maestro[bot]","Number":"2231","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2231","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#2231)"},{"Id":"527424464","IsPullRequest":true,"CreatedAt":"2019-11-22T21:50:17","Actor":"rladuca","Number":"2230","RawContent":null,"Title":"Include \"ResolveTargetingPackAssets\" in AfterTargets; Remove unused Targets","State":"closed","Body":"Porting changes over from Release/3.1 into the DARC flow for Release/3.0.\r\n\r\nCherry-picked commits:\r\nhttps://github.com/dotnet/wpf/commit/e1d79c0e7c593ccbf9c700d830fbb5d9f2fcc43b\r\nMarkupCompilationPass1 getting too large a list of references which was causing a conflict between WindowsBase (the facade in NetCoreApp) and WindowsBase (the product assembly).\r\n\r\nhttps://github.com/dotnet/wpf/commit/7f91d7c79eaddf12b5528a39e0f08e6f22967ad4\r\nNuGet changes here are creating errors in our packaging.\r\n","Url":"https://github.com/dotnet/wpf/pull/2230","RelatedDescription":"Closed or merged PR \"Include \"ResolveTargetingPackAssets\" in AfterTargets; Remove unused Targets\" (#2230)"},{"Id":"527191067","IsPullRequest":true,"CreatedAt":"2019-11-22T13:34:38","Actor":"dotnet-maestro[bot]","Number":"2229","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191121.8\r\n- **Date Produced**: 11/22/2019 12:36 AM\r\n- **Commit**: 291f73a928a551fbc89687a7a51f1dcdaa702447\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19571.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2229","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2229)"},{"Id":"526851144","IsPullRequest":true,"CreatedAt":"2019-11-21T21:28:01","Actor":"dotnet-maestro-bot","Number":"2228","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @dotnet-maestro[bot]\n* @vatsan-madhavan\n* @rladuca\n* @mmitche\n* @msftbot[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/wpf merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/wpf merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/wpf/pull/2228","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#2228)"},{"Id":"526843398","IsPullRequest":true,"CreatedAt":"2019-11-21T21:25:47","Actor":"dotnet-maestro[bot]","Number":"2227","RawContent":null,"Title":"[release/3.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:32eb7cf4-5b39-4692-fce1-08d6e52544b8)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191121.4\r\n- **Date Produced**: 11/21/2019 7:45 PM\r\n- **Commit**: 7600d3277ae2842c490b8e321743d0738e90330d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-servicing.19571.4\r\n\r\n[marker]: <> (End:32eb7cf4-5b39-4692-fce1-08d6e52544b8)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2227","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2227)"},{"Id":"526727944","IsPullRequest":true,"CreatedAt":"2019-11-21T17:23:27","Actor":"dotnet-maestro[bot]","Number":"2226","RawContent":null,"Title":"[release/3.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:32eb7cf4-5b39-4692-fce1-08d6e52544b8)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191120.4\r\n- **Date Produced**: 11/20/2019 8:08 PM\r\n- **Commit**: 650e0570cd32888ee0807598f5448d389dbf1512\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-servicing.19570.4\r\n\r\n[marker]: <> (End:32eb7cf4-5b39-4692-fce1-08d6e52544b8)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2226","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2226)"},{"Id":"526590104","IsPullRequest":true,"CreatedAt":"2019-11-21T13:40:06","Actor":"dotnet-maestro[bot]","Number":"2225","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191120.10\r\n- **Date Produced**: 11/20/2019 11:53 PM\r\n- **Commit**: 6d1a8fc68eb2c69d80c238d4700b844ed35b6d56\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19570.10\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2225)"},{"Id":"526287464","IsPullRequest":false,"CreatedAt":"2019-11-21T00:09:33","Actor":"SamBent","Number":"2224","RawContent":null,"Title":"Test coverage for TreeView scroll hang","State":"open","Body":"Test coverage for #1962.\n[Port of .NET 4.8 test fix]","Url":"https://github.com/dotnet/wpf/issues/2224","RelatedDescription":"Open issue \"Test coverage for TreeView scroll hang\" (#2224)"},{"Id":"526287076","IsPullRequest":false,"CreatedAt":"2019-11-21T00:08:16","Actor":"SamBent","Number":"2223","RawContent":null,"Title":"Test coverage for SharedSizeGroup hang","State":"open","Body":"Test coverage for #2222.\n[Port of .NET 4.8 test fix.]","Url":"https://github.com/dotnet/wpf/issues/2223","RelatedDescription":"Open issue \"Test coverage for SharedSizeGroup hang\" (#2223)"},{"Id":"526286693","IsPullRequest":false,"CreatedAt":"2019-11-21T00:07:01","Actor":"SamBent","Number":"2222","RawContent":null,"Title":"Hang during layout when using SharedSizeGroup","State":"open","Body":"SharedSizeGroup does redundant layout - requesting remeasure of Grids that don't need it.  This can lead to a hang in which the app is unresponsive and has to be killed from TaskManager, but isn't marked as \"(Not Responding)\".  This can happen if\n  a. the Grids are within the scope of a ScrollViewer with VerticalScrollbarVisibility=\"Auto\"\n  b. there are more than 157 Grids (the threshold for coalescing pending measure tasks into one task at the root)\n  c. the minimum width of a non-long-pole Grid increases, away from the shared column \n\n[Port of servicing fix for .NET 4.5-4.8]","Url":"https://github.com/dotnet/wpf/issues/2222","RelatedDescription":"Open issue \"Hang during layout when using SharedSizeGroup\" (#2222)"},{"Id":"526283854","IsPullRequest":false,"CreatedAt":"2019-11-20T23:58:18","Actor":"SamBent","Number":"2221","RawContent":null,"Title":"Test coverage for RibbonMenuButton stack overflow","State":"open","Body":"Test coverage for #2220\n[Port of .NET 4.8 test fix]","Url":"https://github.com/dotnet/wpf/issues/2221","RelatedDescription":"Open issue \"Test coverage for RibbonMenuButton stack overflow\" (#2221)"},{"Id":"526283328","IsPullRequest":false,"CreatedAt":"2019-11-20T23:56:30","Actor":"SamBent","Number":"2220","RawContent":null,"Title":"StackOverflow due to focus war in RibbonMenuButton","State":"open","Body":"An app that programmatically disables a RibbonMenuButton and replaces its menu items with new ones can cause a focus war leading to infinite recursion and StackOverflow.  This can happen if the user presses the toggle button (which opens the menu dropdown) and drags the mouse over the dropdown, and the programmatic disable/replace occurs before the user releases the mouse button.\n\n[Port of servicing fix for .NET 4.6 - 4.8]","Url":"https://github.com/dotnet/wpf/issues/2220","RelatedDescription":"Open issue \"StackOverflow due to focus war in RibbonMenuButton\" (#2220)"},{"Id":"526280690","IsPullRequest":false,"CreatedAt":"2019-11-20T23:47:56","Actor":"SamBent","Number":"2219","RawContent":null,"Title":"LayoutRounding test failure","State":"open","Body":"LayoutRounding_BadAlphaBorder_45 test fails.\nNeeds a new 'master', incorporating the change due to new (4.6) algorithm for allocating space to *-columns in a Grid.\n[Port of 4.8 test fix]","Url":"https://github.com/dotnet/wpf/issues/2219","RelatedDescription":"Open issue \"LayoutRounding test failure\" (#2219)"},{"Id":"526279489","IsPullRequest":false,"CreatedAt":"2019-11-20T23:43:58","Actor":"SamBent","Number":"2218","RawContent":null,"Title":"DrtFlow failure","State":"open","Body":"DrtFlow fails if the system parameter VerticalScrollBarWidth is not 17.\r\nThe 'fix' is to print a better error message, suggesting changing the parameter.\r\n[Port of 4.8 test fix]","Url":"https://github.com/dotnet/wpf/issues/2218","RelatedDescription":"Open issue \"DrtFlow failure\" (#2218)"},{"Id":"526277617","IsPullRequest":false,"CreatedAt":"2019-11-20T23:37:54","Actor":"SamBent","Number":"2217","RawContent":null,"Title":"Ribbon test failures","State":"open","Body":"1. RibbonWindowClose test fails under custom theme\n2. Tests fail when minimizing a ribbon with no selected item\n[Port of 4.8 test fixes]","Url":"https://github.com/dotnet/wpf/issues/2217","RelatedDescription":"Open issue \"Ribbon test failures\" (#2217)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-27T05:30:56.7958633Z","RunDurationInMilliseconds":803}