{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Updated: January 25, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"},{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7175265538","Type":"PullRequestEvent","CreatedAt":"2018-01-31T04:18:09","Actor":"danmosemsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16112","RelatedDescription":"Merged pull request \"Replacing Lock with Volatile.Read for SecureString Length\" (#16112) at dotnet/coreclr","RelatedBody":"As requested and based on reasoning explained in dotnet/corefx#26685, this PR removes synchronization on SecureString Length\r\n\r\nI'm also making the same change for IsReadOnly() and MakeReadOnly()\r\n\r\ncc: @danmosemsft @stephentoub "},{"Id":"7174996051","Type":"PullRequestEvent","CreatedAt":"2018-01-31T02:37:27","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16114","RelatedDescription":"Opened pull request \"Fixing up some hwintrinsic flags for the x86 intrinsics.\" (#16114) at dotnet/coreclr","RelatedBody":"FYI. @fiigii, @CarolEidt."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7174647904","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:42:58","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8499","RelatedDescription":"Merged pull request \"Updating Roslyn to 2.7.0-beta3-62529-06.\" (#8499) at dotnet/cli","RelatedBody":"@jaredpar this is for .NET Core 2.1 preview1"},{"Id":"7174647027","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:42:40","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8506","RelatedDescription":"Merged pull request \"Update CoreSetup, CoreSetup, CoreSetup to preview2-26130-06, preview2-26130-06, preview2-26130-06, respectively (master)\" (#8506) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7174641196","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:40:49","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8505","RelatedDescription":"Closed pull request \"Update ASP.NET Core certificate installation message\" (#8505) at dotnet/cli","RelatedBody":"Updates the ASP.NET Core development certificate installation message."},{"Id":"7174621693","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:34:42","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8509","RelatedDescription":"Merged pull request \"Adding roslyn to automatic dependency flow through maestro.\" (#8509) at dotnet/cli","RelatedBody":""},{"Id":"7174599594","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:27:47","Actor":"javiercn","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8512","RelatedDescription":"Opened pull request \"Update ASP.NET Core certificate installation message\" (#8512) at dotnet/cli","RelatedBody":"# Customer scenario\r\n\r\nFirst run reporting an out of date informational message for the ASP.NET Core developer certificate installation.\r\n\r\n# Bugs this fixes:\r\n\r\n#8511\r\n\r\n# Workarounds, if any\r\n\r\nNone\r\n\r\n# Risk\r\n\r\nLow\r\n\r\n# Performance impact\r\n\r\nNone, we are changing the content of a message that already comes from a resource file.\r\n\r\n# Is this a regression from a previous update?\r\n\r\nNo\r\n\r\n# Root cause analysis:\r\n\r\nWe didn't have the final text that we wanted displayed to the users at the time the feature got in."},{"Id":"7174588961","Type":"IssuesEvent","CreatedAt":"2018-01-31T00:24:24","Actor":"javiercn","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8511","RelatedDescription":"Opened issue \"Update the first run message for the installation of the ASP.NET Core HTTPS development certificate\" (#8511) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nInstall the CLI\r\nRun a command like dotnet new console\r\n\r\n## Expected  behavior\r\nAn up to date message with instructions on how to trust the ASP.NET Core HTTPS development certificate gets displayed.\r\n\r\n## Actual behavior\r\nAn out of date message is displayed.\r\n"},{"Id":"7174574592","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:20:06","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8510","RelatedDescription":"Opened pull request \"Merge 'release/2.1.3xx' to master.\" (#8510) at dotnet/cli","RelatedBody":"Merging 'release/2.1.3xx' to master."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7171898026","Type":"IssuesEvent","CreatedAt":"2018-01-30T15:18:32","Actor":"ditux","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/637","RelatedDescription":"Closed issue \"ProjectInSolution class is not recognised in .Net Standard 2.0\" (#637) at dotnet/standard","RelatedBody":"Hello,\r\n\r\nI am writing a c# automation application that requires \"ProjectInSolution\" class which i understand is only available on the .NET Framework. I am targeting the .NET Standard 2.0 and would like to know if there is an alternative?\r\n\r\nThanks"},{"Id":"7171668708","Type":"IssuesEvent","CreatedAt":"2018-01-30T14:40:23","Actor":"ditux","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/637","RelatedDescription":"Opened issue \"ProjectInSolution class is not recognised in .Net Standard 2.0\" (#637) at dotnet/standard","RelatedBody":"Hello,\r\n\r\nI am writing a c# automation application that requires \"ProjectInSolution\" class which i understand is only available on the .NET Framework. I am targeting the .NET Standard 2.0 and would like to know if there is an alternative?\r\n\r\nThanks"},{"Id":"7168870939","Type":"PullRequestEvent","CreatedAt":"2018-01-30T02:53:08","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/636","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02430-02 (master)\" (#636) at dotnet/standard","RelatedBody":""},{"Id":"7167745006","Type":"IssuesEvent","CreatedAt":"2018-01-29T21:37:23","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/629","RelatedDescription":"Closed issue \"Question:Is there a common api to load unmanaged dll in .net standard 2.0 ?\" (#629) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nWe're working to have .net standard 2.0 support for IBM .Net Provider. We have dependency on unmanaged\\native dll and currently we are loading it via LoadUnmanagedDllFromPath(..) from System.Runtime.Loader pkg.\r\nWe want our package to work with Full Framework as well.. Since System.Runtime.Loader pkg do not support FullFramework, we need to figure out alternate way of loading unmanaged dll.\r\nOne way we could see using  DllImport.. or Platform invoke. But in this case we have to deal with Linux and OSX. Which we are trying to avoid..  \r\nOur question are-\r\n1. Is there a way or common api across the platforms to load unmanaged dll in .Net standard 2.0\r\n2. What are the best way to Handle\\load unmanaged dll ?\r\n\r\nWarm Regards,\r\nArchana"},{"Id":"7167726243","Type":"IssuesEvent","CreatedAt":"2018-01-29T21:33:24","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/632","RelatedDescription":"Closed issue \"DataAnnotaions in .net core misbehaving\" (#632) at dotnet/standard","RelatedBody":"Hi the range for dataannotaions does not seem to work or the (0) for the display attib correctly if you put in range of 1 250 it always errors after you enter any chars. Additionally if you try to use the {0} {1} {2} the param (0) never shows the display attrib. The {0] is puling in min length and {1) max length and you cant get the display name  eg \r\n\r\n      [Required(ErrorMessage =\"{0} is required\")]\r\n\r\n        [Display(Name = \"Message\")]\r\n\r\n        [Range(1,250, ErrorMessage = \"{0) should be between {1} and {2}\")]\r\n\r\n        public string Message { get; set; }\r\n\r\nas you type in the text area and tab off it errors with \r\n\r\n1 should be between 250 and {2}:\r\n\r\nbut i would expect is 'Message should be between 1 and 250'\r\n\r\nbut only error if nothing is in the text area and or max has exceed not if the range of text is correct\r\n\r\nEdit (0)\r\n\r\nI am using .net core 2"},{"Id":"7167630380","Type":"IssuesEvent","CreatedAt":"2018-01-29T21:13:15","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/635","RelatedDescription":"Opened issue \"Fix all the interop APIs in netstandard ref\" (#635) at dotnet/standard","RelatedBody":"See https://github.com/dotnet/standard/pull/631 which fixes some of them but we should go through the rest of the ref to ensure that all of the structs and COM interfaces are corrected. \r\n\r\nSee also https://github.com/dotnet/buildtools/issues/1880 which would help find and fix these. "},{"Id":"7167620089","Type":"PullRequestEvent","CreatedAt":"2018-01-29T21:11:03","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/633","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02427-01 (master)\" (#633) at dotnet/standard","RelatedBody":""},{"Id":"7167617695","Type":"PullRequestEvent","CreatedAt":"2018-01-29T21:10:31","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/634","RelatedDescription":"Merged pull request \"Add MarshallAs attributes to IStream\" (#634) at dotnet/standard","RelatedBody":"Upon further testing I realized that my previous IStream fix was insufficient. This adds back the required 'MarshalAs' attributes to finish the scenario."},{"Id":"7159717258","Type":"PullRequestEvent","CreatedAt":"2018-01-27T16:48:11","Actor":"gregg-miskelly","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/634","RelatedDescription":"Opened pull request \"Add MarshallAs attributes to IStream\" (#634) at dotnet/standard","RelatedBody":"Upon further testing I realized that my previous IStream fix was insufficient. This adds back the required 'MarshalAs' attributes to finish the scenario."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7175285999","Type":"PullRequestEvent","CreatedAt":"2018-01-31T04:26:45","Actor":"geleems","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26595","RelatedDescription":"Merged pull request \"Fixed ReadAsync blocking issue\" (#26595) at dotnet/corefx","RelatedBody":"This fix is for the issue https://github.com/dotnet/corefx/issues/26594\r\n***\r\nCustomer reported an issue for SqlDataReader.ReadAsync() method actually runs synchronously, and it blocks the calling thread until data is fed from SQL Server."},{"Id":"7175266145","Type":"IssuesEvent","CreatedAt":"2018-01-31T04:18:25","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26685","RelatedDescription":"Closed issue \"Remove synchronization on SecureString.Length\" (#26685) at dotnet/corefx","RelatedBody":"Contention on this getter showed up in profiles of a cloud service that was reading the length several times in one method running on multiple threads (as one might expect for eg a password). \r\n\r\nIt doesn't need to be synchronized. From discussion with @stephentoub : removing the Synchronized/lock on Length would mean the disposed check and accessing the length would no longer be atomic, but you don’t lose anything from that, because it could be disposed after accessing the length and before the caller gets back the value and acts on it.  Removing it would also means that _length isn’t synchronized with other operations that change it, but again, the length could change immediately after using it, so it doesn’t really save anything.\r\n\r\nTo minimise the staleness of the read we can replace the lock on Length with `Volatile.Read(ref _length)`\r\n\r\nThe same could be done for IsReadOnly and MakeReadOnly, I think. \r\n\r\n@maryamariyan one for you."},{"Id":"7174812407","Type":"IssuesEvent","CreatedAt":"2018-01-31T01:35:23","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26652","RelatedDescription":"Closed issue \"http://apisof.net/ is returning HTTP 500\" (#26652) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7175410647","Type":"IssuesEvent","CreatedAt":"2018-01-31T05:20:24","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/15817","RelatedDescription":"Closed issue \"InvalidOperationException in CSharpSimplifyTypeNamesDiagnosticAnalyzer\" (#15817) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nMicrosoft Visual Studio Community 2017 RC\r\nVersion 15.0.25914.0 D15REL\r\n\r\n**Steps to Reproduce**: Unknown. I was deleting a bunch of source files, and noticed the exception in the VS error list.\r\n\r\n**Expected Behavior**: No errors.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nSystem.InvalidOperationException: This program location is thought to be unreachable.\r\n   at Microsoft.CodeAnalysis.CSharp.UnboundLambdaState.ReallyBind(NamedTypeSymbol delegateType)\r\n   at Microsoft.CodeAnalysis.CSharp.UnboundLambdaState.Bind(NamedTypeSymbol delegateType)\r\n   at Microsoft.CodeAnalysis.CSharp.ConversionsBase.IsAnonymousFunctionCompatibleWithDelegate(UnboundLambda anonymousFunction, TypeSymbol type)\r\n   at Microsoft.CodeAnalysis.CSharp.ConversionsBase.IsAnonymousFunctionCompatibleWithType(UnboundLambda anonymousFunction, TypeSymbol type)\r\n   at Microsoft.CodeAnalysis.CSharp.ConversionsBase.HasAnonymousFunctionConversion(BoundExpression source, TypeSymbol destination)\r\n   at Microsoft.CodeAnalysis.CSharp.ConversionsBase.ClassifyImplicitBuiltInConversionFromExpression(BoundExpression sourceExpression, TypeSymbol source, TypeSymbol destination, HashSet`1& useSiteDiagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.ConversionsBase.ClassifyImplicitConversionFromExpression(BoundExpression sourceExpression, TypeSymbol destination, HashSet`1& useSiteDiagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.OverloadResolution.CheckArgumentForApplicability(Symbol candidate, BoundExpression argument, RefKind argRefKind, TypeSymbol parameterType, RefKind parRefKind, Boolean ignoreOpenTypes, HashSet`1& useSiteDiagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.OverloadResolution.IsApplicable(Symbol candidate, EffectiveParameters parameters, AnalyzedArguments arguments, ImmutableArray`1 argsToParameters, Boolean isVararg, Boolean hasAnyRefOmittedArgument, Boolean ignoreOpenTypes, HashSet`1& useSiteDiagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.OverloadResolution.IsApplicable[TMember](TMember member, TMember leastOverriddenMember, ArrayBuilder`1 typeArgumentsBuilder, AnalyzedArguments arguments, EffectiveParameters originalEffectiveParameters, EffectiveParameters constructedEffectiveParameters, ImmutableArray`1 argsToParamsMap, Boolean hasAnyRefOmittedArgument, HashSet`1& useSiteDiagnostics, Boolean inferWithDynamic)\r\n   at Microsoft.CodeAnalysis.CSharp.OverloadResolution.IsMemberApplicableInNormalForm[TMember](TMember member, TMember leastOverriddenMember, ArrayBuilder`1 typeArguments, AnalyzedArguments arguments, Boolean isMethodGroupConversion, Boolean allowRefOmittedArguments, Boolean inferWithDynamic, HashSet`1& useSiteDiagnostics, Boolean completeResults)\r\n   at Microsoft.CodeAnalysis.CSharp.OverloadResolution.AddMemberToCandidateSet[TMember](TMember member, ArrayBuilder`1 results, ArrayBuilder`1 members, ArrayBuilder`1 typeArguments, AnalyzedArguments arguments, Boolean completeResults, Boolean isMethodGroupConversion, Boolean allowRefOmittedArguments, Dictionary`2 containingTypeMapOpt, Boolean inferWithDynamic, HashSet`1& useSiteDiagnostics, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.OverloadResolution.PerformMemberOverloadResolution[TMember](ArrayBuilder`1 results, ArrayBuilder`1 members, ArrayBuilder`1 typeArguments, AnalyzedArguments arguments, Boolean completeResults, Boolean isMethodGroupConversion, Boolean allowRefOmittedArguments, HashSet`1& useSiteDiagnostics, Boolean inferWithDynamic, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.OverloadResolution.MethodOrPropertyOverloadResolution[TMember](ArrayBuilder`1 members, ArrayBuilder`1 typeArguments, AnalyzedArguments arguments, OverloadResolutionResult`1 result, Boolean isMethodGroupConversion, Boolean allowRefOmittedArguments, HashSet`1& useSiteDiagnostics, Boolean inferWithDynamic, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.ResolveDefaultMethodGroup(BoundMethodGroup node, AnalyzedArguments analyzedArguments, Boolean isMethodGroupConversion, HashSet`1& useSiteDiagnostics, Boolean inferWithDynamic, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.ResolveMethodGroupInternal(BoundMethodGroup methodGroup, SyntaxNode expression, String methodName, AnalyzedArguments analyzedArguments, Boolean isMethodGroupConversion, HashSet`1& useSiteDiagnostics, Boolean inferWithDynamic, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.ResolveMethodGroup(BoundMethodGroup node, SyntaxNode expression, String methodName, AnalyzedArguments analyzedArguments, Boolean isMethodGroupConversion, HashSet`1& useSiteDiagnostics, Boolean inferWithDynamic, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindMethodGroupInvocation(SyntaxNode syntax, SyntaxNode expression, String methodName, BoundMethodGroup methodGroup, AnalyzedArguments analyzedArguments, DiagnosticBag diagnostics, CSharpSyntaxNode queryClause, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindInvocationExpression(SyntaxNode node, SyntaxNode expression, String methodName, BoundExpression boundExpression, AnalyzedArguments analyzedArguments, DiagnosticBag diagnostics, CSharpSyntaxNode queryClause, Boolean allowUnexpandedForm)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindInvocationExpression(InvocationExpressionSyntax node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpressionInternal(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpression(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindConditionalAccessExpression(ConditionalAccessExpressionSyntax node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpressionInternal(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpression(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindAssignment(AssignmentExpressionSyntax node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpressionInternal(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpression(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpressionStatement(CSharpSyntaxNode node, ExpressionSyntax syntax, Boolean allowsAnyExpression, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindExpressionStatement(ExpressionStatementSyntax node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Binder.BindStatement(StatementSyntax node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.IncrementalBinder.BindStatement(StatementSyntax node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.Bind(Binder binder, CSharpSyntaxNode node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodBodySemanticModel.Bind(Binder binder, CSharpSyntaxNode node, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetBoundNodes(CSharpSyntaxNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetLowerBoundNode(CSharpSyntaxNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetBoundNodes(CSharpSyntaxNode node, CSharpSyntaxNode& bindableNode, BoundNode& lowestBoundNode, BoundNode& highestBoundNode, BoundNode& boundParent)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetSymbolInfoWorker(CSharpSyntaxNode node, SymbolInfoOptions options, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfo(ExpressionSyntax expression, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoFromNode(SyntaxNode node, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoCore(SyntaxNode node, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Shared.Utilities.AbstractSpeculationAnalyzer`9.SymbolsAreCompatible(TSyntaxNode originalNode, TSyntaxNode newNode, Boolean requireNonNullSymbols)\r\n   at Microsoft.CodeAnalysis.Shared.Utilities.AbstractSpeculationAnalyzer`9.SymbolsForOriginalAndReplacedNodesAreCompatible()\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.ExpressionSyntaxExtensions.CanReplaceWithReducedName(MemberAccessExpressionSyntax memberAccess, ExpressionSyntax reducedName, SemanticModel semanticModel, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.ExpressionSyntaxExtensions.TryReduce(MemberAccessExpressionSyntax memberAccess, SemanticModel semanticModel, TypeSyntax& replacementNode, TextSpan& issueSpan, OptionSet optionSet, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.ExpressionSyntaxExtensions.TryReduceExplicitName(ExpressionSyntax expression, SemanticModel semanticModel, TypeSyntax& replacementNode, TextSpan& issueSpan, OptionSet optionSet, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames.CSharpSimplifyTypeNamesDiagnosticAnalyzer.CanSimplifyTypeNameExpression(SemanticModel model, SyntaxNode node, OptionSet optionSet, TextSpan& issueSpan, String& diagnosticId, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames.CSharpSimplifyTypeNamesDiagnosticAnalyzer.CanSimplifyTypeNameExpressionCore(SemanticModel model, SyntaxNode node, OptionSet optionSet, TextSpan& issueSpan, String& diagnosticId, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Diagnostics.SimplifyTypeNames.SimplifyTypeNamesDiagnosticAnalyzerBase`1.TrySimplifyTypeNameExpression(SemanticModel model, SyntaxNode node, AnalyzerOptions analyzerOptions, Diagnostic& diagnostic, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames.CSharpSimplifyTypeNamesDiagnosticAnalyzer.<>c__DisplayClass2_0.<AnalyzeNode>b__1(SyntaxNode n)\r\n   at Microsoft.CodeAnalysis.SyntaxNode.ChildSyntaxListEnumeratorStack..ctor(SyntaxNode startingNode, Func`2 descendIntoChildren)\r\n   at Microsoft.CodeAnalysis.SyntaxNode.<DescendantNodesOnly>d__168.MoveNext()\r\n   at Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames.CSharpSimplifyTypeNamesDiagnosticAnalyzer.AnalyzeNode(SyntaxNodeAnalysisContext context)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.<>c__DisplayClass42_1`1.<ExecuteSyntaxNodeAction>b__1()\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.ExecuteAndCatchIfThrows_NoLock(DiagnosticAnalyzer analyzer, Action analyze, Nullable`1 info)\r\n```"},{"Id":"7174979404","Type":"PullRequestEvent","CreatedAt":"2018-01-31T02:31:39","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24551","RelatedDescription":"Opened pull request \"added and cleaned up logs around build and live diagnostics.\" (#24551) at dotnet/roslyn","RelatedBody":"also added RoslynActivityLogger that can be enabled through project-system-tool\r\n\r\n### Customer scenario\r\n\r\nThere is no user experience change in this PR. \r\n\r\nThis PR is to let our project-system-tool (https://github.com/heejaechang/project-system-tools) to inject Roslyn logger so that we can use that tool to see roslyn activity around build/live errors and behavior of error list.\r\n\r\n### Bugs this fixes\r\n\r\nthis doesn't fix any errors. but hopefully, help us to figure out what is causing this issue (https://devdiv.visualstudio.com/DevDiv/_workitems/edit/364961)\r\n\r\n### Workarounds, if any\r\n\r\nNo workaround\r\n\r\n### Risk\r\n\r\nAll these changes are no-op if Roslyn logger is not enabled explicitly through the tool.\r\n\r\n### Performance impact\r\n\r\nAll these changes are no-op if Roslyn logger is not enabled explicitly through the tool.\r\n\r\n### Is this a regression from a previous update?\r\n\r\nNo\r\n\r\n### Root cause analysis\r\n\r\nwe are getting bunch of bugs around error list (error not showing, error not going away, build and live errors not consistent and etc). but since error list is just presentation that reflects current state, either dump or etl are not enough to find out how error list got to this state. this change let us to monitor activities around error list so that we can get better idea on how things moved to this state.\r\n\r\n### How was the bug found?\r\n\r\nFeedbacks."},{"Id":"7174862015","Type":"IssuesEvent","CreatedAt":"2018-01-31T01:51:39","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24514","RelatedDescription":"Closed issue \"Why doesn't Roslyn have an IdentifierExpressionSyntax AST node?\" (#24514) at dotnet/roslyn","RelatedBody":"This isn't an issue, but a question. However, I couldn't find a discussion mailing list about Roslyn itself (only for C#/VB as a whole) or an IRC channel - please, let me know if I missed it.\r\n\r\nWhy isn't there an \"identifier expression\" node in Roslyn's AST? Compiler infrastructures I've worked with (and wrote) typically have an `IdentifierExpressionAST` node. This allows me to immediately distinguish between ordinary names in the program and those that are proper expressions.\r\n\r\nAs an example, consider the declaration `namespace Foo { }` and the statement `i = 10;`. Traversal of Roslyn's AST provides both names `Foo` and `i` in the form of an `IdentifierNameSyntax` (which inherits from `ExpressionSyntax`), but those two kinds of names are fundamentally different: (i) the former is purely for nominative organization; (ii) the latter denotes an actual value, it's a term.\r\n\r\nCurrently, I distinguished an identifier expressions using a check such as the one below:\r\n\r\n        public override SyntaxNode VisitIdentifierName(IdentifierNameSyntax node)\r\n        {\r\n            if (node.Ancestors().OfType<ExpressionSyntax>().Any()\r\n                || node.Parent.IsKind(SyntaxKind.ReturnStatement))\r\n            {\r\n                 //...\r\n            }\r\n            return node;\r\n        }\r\n\r\nIs this the correct way of achieving such differentiation? If so, what are the primary advantages of such design that makes every sort of name an expression?\r\n"},{"Id":"7174839905","Type":"IssuesEvent","CreatedAt":"2018-01-31T01:44:22","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24550","RelatedDescription":"Opened issue \"Constant pattern vs governing type that is unconstrained type parameter\" (#24550) at dotnet/roslyn","RelatedBody":"The following in currently rejected:\r\n\r\n``` c#\r\n    void M<T>(T t)\r\n    {\r\n        switch (t)\r\n        {\r\n            // Cannot implicitly converty type 'int' to 'T'\r\n            case 3: break;\r\n            // Cannot convert null to type parameter 'T' because it could be a non-nullable value type. Consider using 'default(T)' instead.\r\n            case null: break;\r\n        }\r\n        // Cannot implicitly converty type 'int' to 'T'\r\n        if (t is 3) { }\r\n        // Cannot convert null to type parameter 'T' because it could be a non-nullable value type. Consider using 'default(T)' instead.\r\n        if (t is null) { }\r\n    }\r\n```\r\n\r\nHowever, these are perfectly reasonable pattern-matching operations. The spec and implementation should change to permit this.\r\n"},{"Id":"7174652144","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:44:24","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24546","RelatedDescription":"Merged pull request \"Move 15.8 to correct NuGet versions\" (#24546) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7174651588","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:44:12","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24527","RelatedDescription":"Merged pull request \"Update publish version for the dev15.7 branch\" (#24527) at dotnet/roslyn","RelatedBody":""},{"Id":"7174651085","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:44:02","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24528","RelatedDescription":"Merged pull request \"Update version numbers for 15.7\" (#24528) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7175418469","Type":"PullRequestEvent","CreatedAt":"2018-01-31T05:23:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5320","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5320) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7175284539","Type":"PullRequestEvent","CreatedAt":"2018-01-31T04:26:08","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5320","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5320) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7174590287","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:24:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5319","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5319) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7174277764","Type":"PullRequestEvent","CreatedAt":"2018-01-30T22:55:56","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5319","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5319) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7174074154","Type":"PullRequestEvent","CreatedAt":"2018-01-30T22:09:28","Actor":"ianhays","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5318","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5318) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7173783776","Type":"PullRequestEvent","CreatedAt":"2018-01-30T21:08:23","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5318","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5318) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7173390532","Type":"PullRequestEvent","CreatedAt":"2018-01-30T19:47:17","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5287","RelatedDescription":"Closed pull request \"[WIP] Enable CoreFX tests on CoreRT\" (#5287) at dotnet/corert","RelatedBody":"Work on #5059. Enables running CoreFX tests on CoreRT. A couple of points\r\n\r\n- A number of tests have a dependency on the `CoreFX.Private.TestUtilities` assembly. We need a way to distribute this - as either a NuGet package or fetching built assemblies as correlation payloads from build machines. Any suggestions on this would be great.\r\n\r\n- No shell script changes - most of this change is cross-plat, but only called on Windows\r\n\r\n- Test URL - will change according to whichever version we pick, run and \"freeze\" \r\n\r\n- Some minor points marked with TODOs\r\n\r\ncc @MichalStrehovsky @jkotas @sergiy-k \r\n"},{"Id":"7172296222","Type":"PullRequestEvent","CreatedAt":"2018-01-30T16:22:19","Actor":"stephentoub","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5316","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5316) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7172043151","Type":"PullRequestEvent","CreatedAt":"2018-01-30T15:42:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5317","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5317) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7171915783","Type":"PullRequestEvent","CreatedAt":"2018-01-30T15:21:32","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5317","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5317) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7171901909","Type":"PullRequestEvent","CreatedAt":"2018-01-30T15:19:12","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5316","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5316) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7174996457","Type":"IssuesEvent","CreatedAt":"2018-01-31T02:37:36","Actor":"yyjdelete","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1913","RelatedDescription":"Closed issue \"NU1605 by default treated as error instead of warning, breaks updating packages in solutions\" (#1913) at dotnet/sdk","RelatedBody":"See also https://github.com/NuGet/Home/issues/6141.\r\n\r\nAny attempt to try to update all PackageReference to the same version with NuGet will failed, and the any way is to edit .csproj directly."},{"Id":"7174378679","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:22:00","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1914","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/2.1\" (#1914) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180130-080051\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180130-080051 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174375062","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:21:01","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1903","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/2.1\" (#1903) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180126-080049\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180126-080049 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174374122","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:20:48","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1909","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/2.1\" (#1909) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180129-080049\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180129-080049 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174370649","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:19:50","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1910","RelatedDescription":"Closed pull request \"Merge release/2.1 to master\" (#1910) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180129-080051\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180129-080051 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174365716","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:18:26","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1915","RelatedDescription":"Merged pull request \"Merge release/2.1 to master\" (#1915) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180130-080052\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180130-080052 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174365429","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:18:22","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1917","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.6.0-rtm-4880 into sdk\" (#1917) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4880 into sdk release/2.1.1xx branch"},{"Id":"7170822426","Type":"IssuesEvent","CreatedAt":"2018-01-30T11:49:43","Actor":"Redni","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1916","RelatedDescription":"Opened issue \"[Arch Linux] MSBUILD : error MSB1025 \" (#1916) at dotnet/sdk","RelatedBody":"**.NET Command Line Tools (2.1.4)**\r\n\r\n**Product Information:**\r\n _Version:          2.1.4\r\n Commit SHA-1 hash:  5e8add2190_\r\n\r\n**Runtime Environment:**\r\n _OS Name:     arch\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /opt/dotnet/sdk/2.1.4/_\r\n\r\n**Microsoft .NET Core Shared Framework Host**\r\n  _Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54_\r\n \r\n\r\nAttempting to run dotnet on Arch Linux SERVER restore ends with an error. And it is very strange. I have a PC with Arch Linux and Gnome and it works there perfectly (checked just now). However, I rented and checked 2 different servers dedicated to OVH from Arch Linux without gui and there are always these errors. Clean systems, the only difference that I have on a PC with Gnome and there is only a server version. Regardless of what project it is. On the example of neo-cli:\r\n\r\n```\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\nat System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A\\_work\\17\\s\\src\\MSBuild\\XMake.cs:line 526\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\nat System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A\\_work\\17\\s\\src\\MSBuild\\XMake.cs:line 748\r\nat Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args) in E:\\A\\_work\\17\\s\\src\\MSBuild\\XMake.cs:line 215\r\n```\r\n\r\n\r\n**Steps to reproduce:**\r\n```\r\ngit clone https://github.com/neo-project/neo-cli\r\ncd neo-cli\r\ndotnet restore\r\n```"},{"Id":"7169744074","Type":"PullRequestEvent","CreatedAt":"2018-01-30T08:00:54","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1915","RelatedDescription":"Opened pull request \"Merge release/2.1 to master\" (#1915) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180130-080052\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180130-080052 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"956524881096708096","CreatedAt":"2018-01-25T13:51:17+00:00","UserScreenname":"dotnet","Text":"Jeff and Maira - improving https://t.co/QxdK7Ocjtg LIVE at 10am ET / 15:00 UTC.  Check it out! https://t.co/jlSeKESN3g","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":8,"RawContent":null},{"Id":"955790963024257024","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"dotnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BLXAg7rubK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"954763538328883201","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"dotnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/EefnkSEqfe","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null},{"Id":"954724179533758465","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"dotnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/dWA8n7Ttph","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-01-31T05:30:21.3469703Z","RunDurationInMilliseconds":8217}