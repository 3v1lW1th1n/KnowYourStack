{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11897752425","Type":"PullRequestEvent","CreatedAt":"2020-03-30T05:23:38","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7923","RelatedDescription":"Opened pull request \"[Rename] DB schema change\" (#7923) at NuGet/NuGetGallery","RelatedBody":"The DB schema change for package renaming.\r\nHandle issue: https://github.com/nuget/nugetgallery/issues/7900\r\n\r\nQuery generated to update the DB schema:\r\n\r\n> CREATE TABLE [dbo].[PackageRenames] (\r\n    [Key] [int] NOT NULL IDENTITY,\r\n    [FromPackageRegistrationKey] [int] NOT NULL,\r\n    [ToPackageRegistrationKey] [int] NOT NULL,\r\n    [TransferPopularity] [bit] NOT NULL,\r\n    CONSTRAINT [PK_dbo.PackageRenames] PRIMARY KEY ([Key])\r\n)\r\nCREATE UNIQUE INDEX [IX_FromPackageRegistrationKey_ToPackageRegistrationKey] ON [dbo].[PackageRenames]([FromPackageRegistrationKey], [ToPackageRegistrationKey])\r\nCREATE INDEX [IX_TransferPopularity] ON [dbo].[PackageRenames]([TransferPopularity])\r\nALTER TABLE [dbo].[PackageRegistrations] ADD [RenamedMessage] [nvarchar](max)\r\nALTER TABLE [dbo].[PackageRenames] ADD CONSTRAINT [FK_dbo.PackageRenames_dbo.PackageRegistrations_FromPackageRegistrationKey] FOREIGN KEY ([FromPackageRegistrationKey]) REFERENCES [dbo].[PackageRegistrations] ([Key]) ON DELETE CASCADE\r\nALTER TABLE [dbo].[PackageRenames] ADD CONSTRAINT [FK_dbo.PackageRenames_dbo.PackageRegistrations_ToPackageRegistrationKey] FOREIGN KEY ([ToPackageRegistrationKey]) REFERENCES [dbo].[PackageRegistrations] ([Key])\r\n\r\nDB schema change:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/41028779/77877208-f6da5f80-7209-11ea-89b6-fc2fb393e1ee.png\" width=\"500\">\r\n\r\n<img src=\"https://user-images.githubusercontent.com/41028779/77877247-12456a80-720a-11ea-823d-ca1ef4656c56.png\" width=\"350\">\r\n\r\nNote that there are two foreign keys on \"PackageRenames\" table which point to the same \"PackageRegistrations\" table, we have to disable one of the cascade deletion and delete the reference entities in the \"Delete package registration\" command.\r\n\r\n\r\n\r\n"},{"Id":"11887008490","Type":"IssuesEvent","CreatedAt":"2020-03-27T23:47:54","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7922","RelatedDescription":"Opened issue \"Packages with duplicate entries in zip files are not blocked\" (#7922) at NuGet/NuGetGallery","RelatedBody":"This created several issues: \r\nhttps://github.com/NuGet/NuGetGallery/issues/7921\r\nhttps://github.com/NuGet/NuGetGallery/issues/7744"},{"Id":"11885905623","Type":"IssuesEvent","CreatedAt":"2020-03-27T20:38:32","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7871","RelatedDescription":"Closed issue \"[Search]Catalog2AzureSearch can possibly fail on merge\" (#7871) at NuGet/NuGetGallery","RelatedBody":"When updating a document with change type UpdateVersionList, we update the document with a Merge operation.\r\n\r\nThere appear to be cases where the document that we attempt to merge may not exist in the index.\r\nThe root cause of this needs to be investigated further, but the attempt to update the non-existent document will cause the job to fail.\r\n\r\nReleases:\r\nhttps://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=620865\r\nhttps://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=620975"},{"Id":"11884876414","Type":"IssuesEvent","CreatedAt":"2020-03-27T18:28:55","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7921","RelatedDescription":"Opened issue \"[Symbols] Symbol validator throws if .snupkg contains duplicate entries\" (#7921) at NuGet/NuGetGallery","RelatedBody":"⚠ Still investigating\r\n\r\nhttps://github.com/NuGet/NuGet.Jobs/blob/26c23697fee363d3133171f71e129cda9b5a3707/src/Validation.Symbols/SymbolsValidatorService.cs#L88"},{"Id":"11873825233","Type":"IssuesEvent","CreatedAt":"2020-03-26T17:55:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7920","RelatedDescription":"Opened issue \"[C2R] Delete legacy Catalog2Registration code\" (#7920) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11873823227","Type":"IssuesEvent","CreatedAt":"2020-03-26T17:55:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7919","RelatedDescription":"Opened issue \"[C2R] Stop registration4 from running\" (#7919) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11896085739","Type":"IssuesEvent","CreatedAt":"2020-03-29T22:37:23","Actor":"bo-tu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9356","RelatedDescription":"Opened issue \"nuget cli task failed unexpectedly\" (#9356) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):  5.5.0\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):  MS BuildTools 2017\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):  windows server 2012\r\n\r\nWorked before? If so, with which NuGet version:  yep,  it works for nuget cli v5.4.0\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.  In TeamCity,  I run \"nuget restore\" in a runner of \"MSBuild\",  then it will restore nuget pkgs according to MSBuild file.\r\n\r\n2. Then get errors as below,\r\n[Exec] MSBuild auto-detection: using msbuild version '15.1.1012.6693' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin'.\r\n[21:17:16][Exec] C:\\buildAgent\\temp\\buildTmp\\NuGetScratch\\iheve45x.nxo.nugetrestore.targets(438, 5): error MSB4018: The \"GetRestoreProjectStyleTask\" task failed unexpectedly. \r\n[Exec] C:\\buildAgent\\temp\\buildTmp\\NuGetScratch\\iheve45x.nxo.nugetrestore.targets(438, 5): error MSB4018: System.TypeLoadException: Could not load type 'System.ValueTuple`3' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nat NuGet.Build.Tasks.GetRestoreProjectStyleTask.Execute() \r\nat Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\nat Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() \r\n"},{"Id":"11889913834","Type":"IssuesEvent","CreatedAt":"2020-03-28T15:59:15","Actor":"Xeinaemm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9355","RelatedDescription":"Opened issue \"[Question][MSBuild] Determine circular dependency before Exception\" (#9355) at NuGet/Home","RelatedBody":"Hey,\r\n\r\nIt's possible to detect circular dependency before [FindFirstCircularDependency](https://github.com/NuGet/NuGet.Client/blob/3803820961f4d61c06d07b179dab1d0439ec0d91/src/NuGet.Core/NuGet.Resolver/PackageResolver.cs#L190) will be checked? Ideally in MSBuild and using NuGet.targets?\r\n\r\nI'm creating bundling packages that contain contracts/endpoints for all systems and I know that bundled package will contain package as project referenced it(this same contract as package and project itself). I want to exclude the whole bundling package from the reference graph.\r\n\r\nThe case is that I don't want to manually exclude certain packages in certain projects in a dynamic environment with more than 30 systems where bundled packages are created and delivered by an automatic process/bot.\r\n\r\nCurrently, all bundling packages are treated as `<PrivateAssets>All</PrivateAssets>`\r\n\r\nExample(Z - bundled package, ABCDE - projects) to detect and exclude from project A:\r\nZ(A, B, C, D, E) -> A -> Z(A, B, C, D, E)\r\n\r\nExample to hold:\r\nZ(A, B, C, D, E) -> F"},{"Id":"11889013980","Type":"IssuesEvent","CreatedAt":"2020-03-28T11:47:45","Actor":"ViktorHofer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9354","RelatedDescription":"Opened issue \"ProjectReferences clashing with PackageReference in multi-targeting project restore\" (#9354) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnet.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.6.0-preview.2.6508\r\n\r\ndotnet.exe --version (if appropriate): `5.0.100-preview.3.20170.6`\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): ` 10.0.19587`\r\n\r\n### Sample Project\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp5.0;netstandard1.3</TargetFrameworks>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"System.Collections.Immutable.cs\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp5.0'\">\r\n    <ProjectReference Include=\"..\\..\\System.Collections\\ref\\System.Collections.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\System.Runtime\\ref\\System.Runtime.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\System.Runtime.InteropServices\\ref\\System.Runtime.InteropServices.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard1.3'\">\r\n    <PackageReference Include=\"System.Memory\" Version=\"$(SystemMemoryVersion)\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n```\r\nC:\\git\\runtime\\src\\libraries\\System.Collections.Immutable\\ref\\System.Collections.Immutable>dotnet restore\r\n  Determining projects to restore...\r\nC:\\git\\runtime4\\src\\libraries\\System.Collections.Immutable\\ref\\System.Collections.Immutable.csproj : error NU1201: Project System.Runtime is not compatible with netstandard1.3 (.NETStandard,Version=v1.3). Project System.Runtime supports: net5.0 (.NETCoreApp,Version=v5.0)\r\nC:\\git\\runtime4\\src\\libraries\\System.Collections.Immutable\\ref\\System.Collections.Immutable.csproj : error NU1201: Project System.Runtime.InteropServices is not compatible with netstandard1.3 (.NETStandard,Version=v1.3). Project System.Runtime.InteropServices supports: net5.0 (.NETCoreApp,Version=v5.0)\r\n  Restored C:\\git\\runtime4\\src\\libraries\\System.Collections\\ref\\System.Collections.csproj (in 360 ms).\r\n  Restored C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj (in 360 ms).\r\n  Restored C:\\git\\runtime4\\src\\libraries\\System.Runtime.InteropServices\\ref\\System.Runtime.InteropServices.csproj (in 360 ms).\r\n  Failed to restore C:\\git\\runtime4\\src\\libraries\\System.Collections.Immutable\\ref\\System.Collections.Immutable.csproj (in 362 ms).\r\n```\r\n\r\n@nkolev92 @rrelyea @ericstj can someone please help me understand why the ProjectReferences are clashing with the PackageReference even though they are imported on different targets (netcoreapp5.0 vs netstandard1.3). Why is the closure here expanded to the full set?\r\n\r\nThe package reference has a transitive dependency on the same assemblies as the ProjectReferences (System.Runtime, etc.):\r\n\r\n![image](https://user-images.githubusercontent.com/7412651/77822351-11b9b080-70f2-11ea-8289-4979b3d34218.png)"},{"Id":"11887468618","Type":"IssuesEvent","CreatedAt":"2020-03-28T02:00:07","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9353","RelatedDescription":"Opened issue \"Guidance for lifting transitive dependency versions to avoid vulnerabilties\" (#9353) at NuGet/Home","RelatedBody":"If I finds that some transitive dependencies have vulnerabilities, the easiest solution is to lift the version of the transitive dependency to a version that doesn't have a vulnerability by directly depending on that dependency.\r\n\r\nFor example, if:\r\nMyProject --> Package A 1.0.0 --> Package B 1.0.0\r\n\r\nPackage B 1.0.0 has a vulnerability, but Package B 1.1.0 doesn't. I can \"lift\" Package B's version to 1.1.0 by directly depending on Package B 1.1.0 since the \"higher level\" dependency version gets priority.\r\n\r\nHowever, this can get complicated and unwieldly in the case where many transitive dependencies have vulnerabilities and I continue adding direct dependencies to my projects to \"lift\" their versions. These complications can compound because more direct dependencies means more likelihood of version conflicts. If one of my original direct dependencies that was transitively bringing in the vulnerability updates so that it no longer has the vulnerability, it can be difficult to keep track of that and remove the direct dependency I previously added to fix that vulnerability.\r\n\r\nEssentially, the ask here to to provide guidance for best practices to manage known vulnerabilities in transitive dependencies. These issues will likely be easier to rectify with CPVM and package vulnerability surfacing/warnings (features coming soon), but we should write documentation specifically calling out these use-cases.\r\n\r\n"},{"Id":"11887451064","Type":"IssuesEvent","CreatedAt":"2020-03-28T01:53:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9295","RelatedDescription":"Closed issue \"Bring the VSO output window to focus when necessary\" (#9295) at NuGet/Home","RelatedBody":""},{"Id":"11887446344","Type":"IssuesEvent","CreatedAt":"2020-03-28T01:52:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9162","RelatedDescription":"Closed issue \"Restore context menus on the solution node for VSO\" (#9162) at NuGet/Home","RelatedBody":"[1068097](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1068097)"},{"Id":"11887444804","Type":"IssuesEvent","CreatedAt":"2020-03-28T01:51:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9308","RelatedDescription":"Closed issue \"Add the restore service functionality for online environments \" (#9308) at NuGet/Home","RelatedBody":"Specifically related to https://github.com/NuGet/Home/issues/9162. \r\n\r\nThe \"execution\" of the context menu click. "},{"Id":"11885563043","Type":"IssuesEvent","CreatedAt":"2020-03-27T19:52:48","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7717","RelatedDescription":"Closed issue \"Nomination errors, such as bad data (version, tfm etc), are not propagated to Visual Studio.\" (#7717) at NuGet/Home","RelatedBody":"Take this project; \r\n\r\n```\r\n<Project>\r\n  <Import Project=\"Sdk.props\" Sdk=\"Microsoft.NET.Sdk\" />\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net472</TargetFrameworks>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"NuGet.Common\" Version=\"blabla\" />\r\n  </ItemGroup>\r\n\r\n\r\n  <Import Project=\"Sdk.targets\" Sdk=\"Microsoft.NET.Sdk\" />\r\n</Project>\r\n```\r\n\r\nRestore from the commandline. \r\nThe output contains something like the below:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.0.360-preview+g9781d96883 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 1/22/2019 2:23:03 PM.\r\nProject \"C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ConsoleApp51\\ConsoleApp51\\ConsoleApp51.csproj\" on node 1 (Restore target(s)).\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\IntPreview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(119,5): error : 'blabla' is not a valid version string. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ConsoleApp51\\ConsoleApp51\\ConsoleApp51.csproj]\r\nDone Building Project \"C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ConsoleApp51\\ConsoleApp51\\ConsoleApp51.csproj\" (Restore target(s)) -- FAILED.\r\n\r\n\r\nBuild FAILED.\r\n\r\n\"C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ConsoleApp51\\ConsoleApp51\\ConsoleApp51.csproj\" (Restore target) (1) ->\r\n(Restore target) ->\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\IntPreview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(119,5): error : 'blabla' is not a valid version string. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ConsoleApp51\\ConsoleApp51\\ConsoleApp51.csproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nRestore in VS. \r\n\r\nNothing is seen in the error list. \r\n\r\nThe output is something like: \r\n```\r\nAll packages are already installed and there is nothing to restore.\r\nTime Elapsed: 00:00:00.1668614\r\n========== Finished ==========\r\n```\r\n\r\nWhat's happening here is that the restore is being skipped because the package spec could not be generated properly. \r\n\r\n//cc @rrelyea \r\nThis will become even more apparent when we add the exact version range checks for PackageDownload"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-03-30T05:30:46.8110343Z","RunDurationInMilliseconds":2101}