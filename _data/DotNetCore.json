{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access Build 3707","PublishedOn":"2018-12-15T02:11:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have another early access build to share today! This release includes several accessibility, performance, reliability and stability fixes across the major framework libraries. We will continue to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/14/announcing-net-framework-4-8-early-access-build-3707/","RawContent":null},{"Title":"Visual Studio 2019 Preview .NET Productivity","PublishedOn":"2018-12-14T00:13:41+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"As you hopefully heard, the first preview of Visual Studio 2019 is now available. In this post I’ll cover some of the productivity improvements for .NET developers we’re most excited about. For a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/13/visual-studio-2019-net-productivity/","RawContent":null},{"Title":".NET Framework December 2018 Security and Quality Rollup","PublishedOn":"2018-12-11T18:23:48+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the December 2018 Security and Quality Rollup. Security CVE-2018-8540 – Windows Remote Code Execution Vulnerability This security update resolves a vulnerability in Microsoft...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/11/net-framework-december-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Open Sourcing XAML Behaviors for WPF","PublishedOn":"2018-12-10T19:27:32+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are excited to announce that we are open sourcing XAML Behaviors for WPF. In the past, we open sourced XAML Behaviors for UWP which has been a great success and the Behaviors NuGet package...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/10/open-sourcing-xaml-behaviors-for-wpf/","RawContent":null},{"Title":"Take C# 8.0 for a spin","PublishedOn":"2018-12-05T23:51:33+00:00","CommentsCount":79,"FacebookCount":0,"Summary":"Take C# 8.0 for a spin Yesterday we announced the first preview of both Visual Studio 2019 (Making every developer more productive with Visual Studio 2019) and .NET Core 3.0 (Announcing .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/take-c-8-0-for-a-spin/","RawContent":null},{"Title":".NET Framework December 5, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2018-12-05T22:00:42+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the December 5, 2018 Preview of .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/net-framework-december-4-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 1 and Open Sourcing Windows Desktop Frameworks","PublishedOn":"2018-12-04T16:41:34+00:00","CommentsCount":80,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 1. It is the first public release of .NET Core 3. We have some exciting new features to share and would love your feedback. You can develop .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/","RawContent":null},{"Title":"Announcing .NET Core 2.2","PublishedOn":"2018-12-04T16:36:50+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"We’re excited to announce the release of .NET Core 2.2. It includes diagnostic improvements to the runtime, support for ARM32 for Windows and Azure Active Directory for SQL Client. The biggest...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-2-2/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2","PublishedOn":"2018-12-04T16:30:21+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today we&#8217;re making the final version of EF Core 2.2 available, alongside ASP.NET Core 2.2 and .NET Core 2.2. This is the latest release of our open-source and cross-platform object-database...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-entity-framework-core-2-2/","RawContent":null},{"Title":"Announcing ML.NET 0.8 – Machine Learning for .NET","PublishedOn":"2018-12-04T16:00:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform framework (Windows, Linux, macOS) which makes machine learning accessible for .NET developers. ML.NET allows you to create and use machine learning models...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-ml-net-0-8-machine-learning-for-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8760892630","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:57:54","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Opened issue \"No logo provided for Prism\" (#126) at dotnet/foundation","RelatedBody":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157"},{"Id":"8760886115","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Opened issue \"Missing logo for MVVM Light Toolkit\" (#125) at dotnet/foundation","RelatedBody":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139"},{"Id":"8760884091","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Opened issue \"Missing logo for Umbraco\" (#124) at dotnet/foundation","RelatedBody":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151"},{"Id":"8760881728","Type":"IssuesEvent","CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Opened issue \"Missing logo for Steeltoe\" (#123) at dotnet/foundation","RelatedBody":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130"},{"Id":"8760867764","Type":"PullRequestEvent","CreatedAt":"2018-12-16T11:40:46","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Opened pull request \"targets the existing document\" (#122) at dotnet/foundation","RelatedBody":""},{"Id":"8650911785","Type":"PullRequestEvent","CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Opened pull request \"Add Newtonsoft.Json\" (#121) at dotnet/foundation","RelatedBody":"// @jongalloway "},{"Id":"8645831625","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:50","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Merged pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645829054","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:23","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Merged pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8645355358","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:59:20","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Opened pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645349176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:57:50","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Opened pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8752496804","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:22:59","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8752467326","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:12:36","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Opened issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"},{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8806220700","Type":"PullRequestEvent","CreatedAt":"2018-12-27T02:09:07","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21683","RelatedDescription":"Opened pull request \"Use `saveNext` unwind opcode on arm64.\" (#21683) at dotnet/coreclr","RelatedBody":"According to [Microsoft ARM64 exception handling doc](https://docs.microsoft.com/en-us/cpp/build/arm64-exception-handling?view=vs-2017) we can use `save_next` as unwind code.\r\n\r\nAnd we have had part of it implemented in `genPrologSaveRegPair` but before the cleaning in #21395 it was tricky to support it in the epilog generation and keep prolog/epilog unwind infos matched.\r\n\r\nThis PR adds `genSetUseSaveNextPairs` that marks register pairs that we can save/restore with `save_next` and teaches `genEpilogRestoreRegPair` to use `save_next` (`genPrologSaveRegPair` has already known how to do that).\r\n\r\nAsm diffs for System.Private.CoreLib (arm64 checked, altjit):\r\n```\r\n1 files had text diffs but not size diffs.\r\nSystem.Private.CoreLib.dasm had 65544 diffs\r\n```\r\nthat look like:\r\n```\r\n***** F:\\DIFFS\\DIFFOUT\\DASMSET_86\\BASE\\System.Private.CoreLib.dasm\r\n    C9 8A       save_regp X#6 Z#10 (0x0A); stp x25, x26, [sp, #80]\r\n    C9 08       save_regp X#4 Z#8 (0x08); stp x23, x24, [sp, #64]\r\n    C8 86       save_regp X#2 Z#6 (0x06); stp x21, x22, [sp, #48]\r\n    C8 04       save_regp X#0 Z#4 (0x04); stp x19, x20, [sp, #32]\r\n***** F:\\DIFFS\\DIFFOUT\\DASMSET_86\\DIFF\\SYSTEM.PRIVATE.CORELIB.DASM\r\n    C9 8A       save_regp X#6 Z#10 (0x0A); stp x25, x26, [sp, #80]\r\n    E6          save_next\r\n    E6          save_next\r\n    C8 04       save_regp X#0 Z#4 (0x04); stp x19, x20, [sp, #32]\r\n*****\r\n```\r\nand there is a tiny improvement in the native image `System.Private.CoreLib.dll` size."},{"Id":"8806133062","Type":"PullRequestEvent","CreatedAt":"2018-12-27T01:25:52","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21682","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert\" (#21682) at dotnet/coreclr","RelatedBody":"PR #21681 + build fix"},{"Id":"8805666286","Type":"PullRequestEvent","CreatedAt":"2018-12-26T21:13:22","Actor":"Maoni0","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21523","RelatedDescription":"Merged pull request \"Porting desktop changes to core\" (#21523) at dotnet/coreclr","RelatedBody":"this includes the following -\r\n\r\n+alloc lock split into SOH and LOH\r\n+provisional mode to fix too many gen2 GCs triggered in low mem situation when the heap has heavy pinning fragmentation\r\n+better free list usage\r\n+premature OOM fixes\r\n+3 new configs: GCHeapAffinitizeMask, GCHighMemPercent, GCLOHThreshold (will be documented)\r\n\r\nI still have one perf todo for the YieldProcessor scaling factor that I have to test as the desktop and coreclr implementations are different. I'll get to it tomorrow."},{"Id":"8805648756","Type":"PullRequestEvent","CreatedAt":"2018-12-26T21:05:18","Actor":"filipnavara","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21682","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#21682) at dotnet/coreclr","RelatedBody":"PR #21681 + build fix"},{"Id":"8805359055","Type":"PullRequestEvent","CreatedAt":"2018-12-26T19:08:07","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21681","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#21681) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"8804848588","Type":"IssuesEvent","CreatedAt":"2018-12-26T16:01:32","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21673","RelatedDescription":"Closed issue \"Bug: WinFX.targets was not found\" (#21673) at dotnet/coreclr","RelatedBody":"I have installed dotnet core 3 preview on opensuse leap 15.0\r\nThe file that I downloaded is: https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-3.0.100-preview-009812-linux-x64-binaries\r\n\r\nI've try to build an app:\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/> mkdir -p dwin && cd dwin\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet new winforms       \r\n\r\nWelcome to .NET Core!\r\n---------------------\r\nLearn more about .NET Core: https://aka.ms/dotnet-docs\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\nASP.NET Core\r\n------------\r\nSuccessfully installed the ASP.NET Core HTTPS Development Certificate.\r\nTo trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms refer to the platform specific documentation.\r\nFor more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.\r\nGetting ready...\r\nThe template \"Windows Forms Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /home/hamed/tmp/dwin/dwin.csproj...\r\n  Restoring packages for /home/hamed/tmp/dwin/dwin.csproj...\r\n  Installing Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.Platforms 3.0.0-preview.18571.3.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing Microsoft.NETCore.Targets 2.0.0.\r\n  Installing Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Installing Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.targets.\r\n  Restore completed in 4.87 min for /home/hamed/tmp/dwin/dwin.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet run\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.targets(14,2): error MSB4019: The imported project \"/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [/home/hamed/tmp/dwin/dwin.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\nThe file exists but in other case:\r\n```\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFx.targets\r\n```\r\nThe 'x' on WinFx is lower but dotnet expect to it be upper.\r\n\r\nI've created a copy with this command but I know is not good way for solving bugs\r\n```\r\ncp /opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinF{x,X}.targets\r\n```"},{"Id":"8804726364","Type":"IssuesEvent","CreatedAt":"2018-12-26T15:21:31","Actor":"Lohnegrim","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21680","RelatedDescription":"Opened issue \"BadImageFormat Exception when trying to use TextControl in .Net Core 3.0 preview 1\" (#21680) at dotnet/coreclr","RelatedBody":".NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\nMaybe simmilar to/relevant https://github.com/dotnet/coreclr/issues/11298 or https://github.com/dotnet/coreclr/issues/18447\r\n\r\nHi,\r\nI tried to Convert and run a project to .Net Core 3.0 Preview 1 and run in a Problem with an External Component. \"Tx TextControl\".\r\n\r\nI reduced the relevant Code to the minimum and Created a repro:\r\n[textcontrol.txtools.zip](https://github.com/dotnet/coreclr/files/2710433/textcontrol.txtools.zip)\r\n\r\nIf it does not work here the Steps for the Repo:\r\n1. Trial from: https://www.textcontrol.com/products/windows-forms/tx-text-control-dotnet/downloads.\r\n2. Add a reference to the txtools from the package.\r\n3. And this Code to a new .Core 3.0 console project:\r\n                TXTextControl.txtools.Initialize();\r\n\r\nI tried multiple Compinations, 32 + 64 bit version for the txtool.dll, and 32, 64, AnyCpu of the .net core project, but I always get BadImageFormat."},{"Id":"8804453922","Type":"PullRequestEvent","CreatedAt":"2018-12-26T13:49:45","Actor":"marek-safar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21678","RelatedDescription":"Closed pull request \"Throws PlatformNotSupportedException for SecureString BSTR conversion\" (#21678) at dotnet/coreclr","RelatedBody":"instead of trying to look up ole32 on unix\r\n\r\nUsed PInvokeMarshal.AllocBSTR and PInvokeMarshal.FreeBSTR are Windows specific"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8805400107","Type":"IssuesEvent","CreatedAt":"2018-12-26T19:23:55","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10273","RelatedDescription":"Closed issue \"Consider using a retry count with AzureHelper.RequestWithRetry, handle HttpClient Timeouts\" (#10273) at dotnet/cli","RelatedBody":"@dotnet-mc-bot commented on [Fri Nov 02 2018](https://github.com/dotnet/core-eng/issues/4542)\n\nThere were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=2177474\r\n  - **Agent:** DDVSOLINUXAGE004\r\n  - **Error log:** [39;49m[39;49m[36m     1>[39;49m[39;49m[31m/opt/code/build/publish/PublishContent.targets(0,0): error : An error occurred while sending the request. [/opt/code/build.proj]...\r\n\r\n@jcagme, @markwilkie\r\n\n\n---\n\n@MattGal commented on [Fri Nov 02 2018](https://github.com/dotnet/core-eng/issues/4542#issuecomment-435537282)\n\nReclassifying as SourceCode and moving to CLI repo.  From the logging, they both own the code:\r\nhttps://github.com/dotnet/cli/blob/release/2.2.1xx/build_projects/dotnet-cli-build/AzureHelper.cs#L202\r\nAnd are not actually using the retry logic here\n\n"},{"Id":"8805392170","Type":"IssuesEvent","CreatedAt":"2018-12-26T19:20:44","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10194","RelatedDescription":"Closed issue \"For .NET Core 3.0, create a .net core ASP.NET Core web/webapi/mvc project via CLI, dotnet restore failed with error NU1102: Unable to find package Microsoft.AspNetCore.App with version (>= 3.0.0-alpha1-10062).\" (#10194) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nUsing CLI : Create a .net core ASP.NET Core web/Web API/Web App (Model-View-Controller) project\r\n\r\n## Expected  behavior\r\ndotnet restore and build succeed without errors or warnings.\r\n\r\n## Actual behavior\r\ndotnet new web/webapi/mvc --> succeed\r\ndotnet restore -->Failed with error NU1102: `Unable to find package Microsoft.AspNetCore.App with version (>= 3.0.0-alpha1-10062)\r\n`\r\nOpen .csproj file, use .netcore3.0 as default.\r\n![3 0web](https://user-images.githubusercontent.com/33921754/47139243-e4a68300-d2ed-11e8-858b-6ab510c3f0a7.png)\r\nNote: Add localfeed package source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json doesn’t work.\r\n## Environment data\r\nCLI/SDK - 3.0.100-alpha1-009676 against d16.0stg\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-alpha1-009676\r\n Commit:    e5ae52d155\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-alpha1-009676\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview1-27016-04\r\n  Commit:  3b8753ee45\r\n\r\n.NET Core SDKs installed:\r\n  1.1.11 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-alpha1-009676 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10062 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10062 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.DesktopUI.App 3.0.0-alpha-27006-1 [C:\\Program Files\\dotnet\\shared\\Microsoft.DesktopUI.App]\r\n  Microsoft.NETCore.App 1.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview1-27016-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8805215066","Type":"IssuesEvent","CreatedAt":"2018-12-26T18:12:13","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10509","RelatedDescription":"Closed issue \"LD_LIBRARY_PATH icu issue\" (#10509) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nI am using dotnet core 2.1 on centos. and trying to load the dll.\r\n\r\nWhen running , i am getting this error\r\nFailFast:\r\nCouldn't find a valid ICU package installed on the system. Set the configuration flag System.Globalization.Invariant to true if you want to run with no globalization support.\r\n\r\n   at System.Environment.FailFast(System.String)\r\n   at System.Globalization.GlobalizationMode.GetGlobalizationInvariantMode()\r\n   at System.Globalization.GlobalizationMode..cctor()\r\n   at System.Globalization.CultureData.CreateCultureWithInvariantData()\r\n   at System.Globalization.CultureData.get_Invariant()\r\n   at System.Globalization.CultureInfo..cctor()\r\n   at System.StringComparer..cctor()\r\n   at System.AppDomain.InitializeCompatibilityFlags()\r\n   at System.AppDomain.Setup(System.Object)\r\nAborted (core dumped)\r\n\r\n\r\nI can see the suggestion as per the link\r\nhttps://github.com/dotnet/core/blob/master/Documentation/build-and-install-rhel6-prerequisites.md\r\n\r\nBut I cannot change the icu path and when i tried creating the local folder 'netcoredeps' where my dll is residing it never work and i keep getting the same error.\r\nOnly after the setting the LD_LIBRARY_PATH, it is working.. Please suggest who to resolve this\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8805213111","Type":"IssuesEvent","CreatedAt":"2018-12-26T18:11:28","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8998","RelatedDescription":"Closed issue \"[Arm] crossgen cli tools\" (#8998) at dotnet/cli","RelatedBody":"Arm64 & Arm crosscomponent crossgen tools are available and are being consumed by coreclr core-setup to crossgen the runtime.\r\n\r\nThey are not yet being used by cli to crossgen the SDK (done for x64).\r\n\r\nOne of the issues is that the crosscomponent crossgen tool is contained in a private coreclr package which is enacapsulated by core-setup.  ClI does not seem to have the necessary version info to reference the correct package.\r\n\r\nOptions:\r\n+ Core-setup redistribute the crosscomponent crossgen tool(s)\r\n+ Create a mechanism to determine the correct coreclr package version.\r\n\r\nFor arm64 the crosscomponent crossgen tool is here \r\n```\r\ntransport.runtime.linux-arm64.microsoft.netcore.runtime.coreclr/*/tools/x64_arm64/crossgen\r\n```"},{"Id":"8805211142","Type":"IssuesEvent","CreatedAt":"2018-12-26T18:10:42","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10508","RelatedDescription":"Closed issue \"Bug: WinFX.targets was not found\" (#10508) at dotnet/cli","RelatedBody":"_From @HamedMasafi on December 25, 2018 8:31_\n\nI have installed dotnet core 3 preview on opensuse leap 15.0\r\nThe file that I downloaded is: https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-3.0.100-preview-009812-linux-x64-binaries\r\n\r\nI've try to build an app:\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/> mkdir -p dwin && cd dwin\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet new winforms       \r\n\r\nWelcome to .NET Core!\r\n---------------------\r\nLearn more about .NET Core: https://aka.ms/dotnet-docs\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\nASP.NET Core\r\n------------\r\nSuccessfully installed the ASP.NET Core HTTPS Development Certificate.\r\nTo trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms refer to the platform specific documentation.\r\nFor more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.\r\nGetting ready...\r\nThe template \"Windows Forms Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /home/hamed/tmp/dwin/dwin.csproj...\r\n  Restoring packages for /home/hamed/tmp/dwin/dwin.csproj...\r\n  Installing Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.Platforms 3.0.0-preview.18571.3.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing Microsoft.NETCore.Targets 2.0.0.\r\n  Installing Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Installing Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.targets.\r\n  Restore completed in 4.87 min for /home/hamed/tmp/dwin/dwin.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet run\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.targets(14,2): error MSB4019: The imported project \"/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [/home/hamed/tmp/dwin/dwin.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\nThe file exists but in other case:\r\n```\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFx.targets\r\n```\r\nThe 'x' on WinFx is lower but dotnet expect to it be upper.\r\n\r\nI've created a copy with this command but I know is not good way for solving bugs\r\n```\r\ncp /opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinF{x,X}.targets\r\n```\n\n_Copied from original issue: dotnet/coreclr#21673_"},{"Id":"8805111334","Type":"IssuesEvent","CreatedAt":"2018-12-26T17:32:38","Actor":"spushpendra2000","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10509","RelatedDescription":"Opened issue \"LD_LIBRARY_PATH icu issue\" (#10509) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nI am using dotnet core 2.1 on centos. and trying to load the dll.\r\n\r\nWhen running , i am getting this error\r\nFailFast:\r\nCouldn't find a valid ICU package installed on the system. Set the configuration flag System.Globalization.Invariant to true if you want to run with no globalization support.\r\n\r\n   at System.Environment.FailFast(System.String)\r\n   at System.Globalization.GlobalizationMode.GetGlobalizationInvariantMode()\r\n   at System.Globalization.GlobalizationMode..cctor()\r\n   at System.Globalization.CultureData.CreateCultureWithInvariantData()\r\n   at System.Globalization.CultureData.get_Invariant()\r\n   at System.Globalization.CultureInfo..cctor()\r\n   at System.StringComparer..cctor()\r\n   at System.AppDomain.InitializeCompatibilityFlags()\r\n   at System.AppDomain.Setup(System.Object)\r\nAborted (core dumped)\r\n\r\n\r\nI can see the suggestion as per the link\r\nhttps://github.com/dotnet/core/blob/master/Documentation/build-and-install-rhel6-prerequisites.md\r\n\r\nBut I cannot change the icu path and when i tried creating the local folder 'netcoredeps' where my dll is residing it never work and i keep getting the same error.\r\nOnly after the setting the LD_LIBRARY_PATH, it is working.. Please suggest who to resolve this\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8804848520","Type":"IssuesEvent","CreatedAt":"2018-12-26T16:01:31","Actor":"jkotas","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10508","RelatedDescription":"Opened issue \"Bug: WinFX.targets was not found\" (#10508) at dotnet/cli","RelatedBody":"_From @HamedMasafi on December 25, 2018 8:31_\n\nI have installed dotnet core 3 preview on opensuse leap 15.0\r\nThe file that I downloaded is: https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-3.0.100-preview-009812-linux-x64-binaries\r\n\r\nI've try to build an app:\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/> mkdir -p dwin && cd dwin\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet new winforms       \r\n\r\nWelcome to .NET Core!\r\n---------------------\r\nLearn more about .NET Core: https://aka.ms/dotnet-docs\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\nASP.NET Core\r\n------------\r\nSuccessfully installed the ASP.NET Core HTTPS Development Certificate.\r\nTo trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms refer to the platform specific documentation.\r\nFor more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.\r\nGetting ready...\r\nThe template \"Windows Forms Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /home/hamed/tmp/dwin/dwin.csproj...\r\n  Restoring packages for /home/hamed/tmp/dwin/dwin.csproj...\r\n  Installing Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.Platforms 3.0.0-preview.18571.3.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing Microsoft.NETCore.Targets 2.0.0.\r\n  Installing Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Installing Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.targets.\r\n  Restore completed in 4.87 min for /home/hamed/tmp/dwin/dwin.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet run\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.targets(14,2): error MSB4019: The imported project \"/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [/home/hamed/tmp/dwin/dwin.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\nThe file exists but in other case:\r\n```\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFx.targets\r\n```\r\nThe 'x' on WinFx is lower but dotnet expect to it be upper.\r\n\r\nI've created a copy with this command but I know is not good way for solving bugs\r\n```\r\ncp /opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinF{x,X}.targets\r\n```\n\n_Copied from original issue: dotnet/coreclr#21673_"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8805668276","Type":"PullRequestEvent","CreatedAt":"2018-12-26T21:14:18","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Merged pull request \"Fix representation of enum values\" (#1039) at dotnet/standard","RelatedBody":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***"},{"Id":"8789022646","Type":"IssuesEvent","CreatedAt":"2018-12-21T01:08:30","Actor":"ViktorHofer","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036) at dotnet/standard","RelatedBody":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?"},{"Id":"8788973753","Type":"PullRequestEvent","CreatedAt":"2018-12-21T00:51:27","Actor":"ViktorHofer","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Opened pull request \"Remove the manual config system\" (#1040) at dotnet/standard","RelatedBody":"Fixes https://github.com/dotnet/standard/issues/1032"},{"Id":"8788925569","Type":"PullRequestEvent","CreatedAt":"2018-12-21T00:34:02","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Opened pull request \"Fix representation of enum values\" (#1039) at dotnet/standard","RelatedBody":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n**This doesn't change any API surface but makes diffs more human readable.**"},{"Id":"8787632649","Type":"PullRequestEvent","CreatedAt":"2018-12-20T19:19:31","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Merged pull request \"Add APICompat run for NetStandard2.0\" (#1038) at dotnet/standard","RelatedBody":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029"},{"Id":"8787632638","Type":"IssuesEvent","CreatedAt":"2018-12-20T19:19:31","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1029","RelatedDescription":"Closed issue \"Add ApiCompat run for netstandard2.0\" (#1029) at dotnet/standard","RelatedBody":"We should add an APICompat run that checks against 2.0, similar the ones we already have for 1.0-1.6: https://github.com/dotnet/standard/blob/master/apicompat/baselines/ApiCompatBaseline.netstandard1.6.txt"},{"Id":"8787518101","Type":"PullRequestEvent","CreatedAt":"2018-12-20T18:56:41","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Opened pull request \"Add APICompat run for NetStandard2.0\" (#1038) at dotnet/standard","RelatedBody":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029"},{"Id":"8787275448","Type":"PullRequestEvent","CreatedAt":"2018-12-20T18:07:43","Actor":"ViktorHofer","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1035","RelatedDescription":"Merged pull request \"Cleanup files after arcade switch & update baseline\" (#1035) at dotnet/standard","RelatedBody":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\nFailing CI jobs are leftovers: https://github.com/dotnet/standard/issues/1036\r\n\r\ncc @danmosemsft "}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8806454879","Type":"IssuesEvent","CreatedAt":"2018-12-27T03:56:50","Actor":"uyquoc","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/34244","RelatedDescription":"Closed issue \"Issue with CookieContainer when use HttpClientFactory\" (#34244) at dotnet/corefx","RelatedBody":"Since `HttpClientHandler` objects are pooled when using `HttpClientFactory`, we can have a thread-safe issue with `CookieContainer` of  `HttpClientHandler` object. A sample case as follows:\r\nAssume we have a web application call to api/Token (GET) of API server.\r\n\r\nWeb:\r\n```c#\r\n       public async Task<string> GetToken()\r\n\r\n        {\r\n            var httpClient = _clientFactory.CreateClient();\r\n            var response = await httpClient.GetAsync(\"http://api.local:5089/api/token\");\r\n            var token = await response.Content.ReadAsStringAsync();\r\n            return token;\r\n        }\r\n```\r\n\r\nAPI:\r\n```c#\r\n        public ActionResult<string> Get()\r\n        {   \r\n            string token = HttpContext.Request.Cookies.ContainsKey(\"Token\") ? \r\n                           HttpContext.Request.Cookies[\"Token\"] : Guid.NewGuid().ToString();\r\n            \r\n            HttpContext.Response.Cookies.Append(\"Token\", token);\r\n            return token;\r\n        }\r\n```\r\n\r\nAfter the first request to API, in Web application, `response.Headers.GetValues(\"Set-Cookies\")` will show \"Token\" cookie's value equals \"abc\"\r\nAfter the second request to API, in Web application, `response.Headers.GetValues(\"Set-Cookies\")` will show \"Token\" cookie's value also equals \"abc\"\r\nIf we use `new HttpClient()`, each request to API, we will get new Token value, but we cannot achieve this \r\npurpose with `HttpClientFatory`. How could we deal with this problem when we have to use Cookie in API?"},{"Id":"8806447616","Type":"PullRequestEvent","CreatedAt":"2018-12-27T03:53:16","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34249","RelatedDescription":"Merged pull request \"Update pinvoke guidelines\" (#34249) at dotnet/corefx","RelatedBody":"Added some clarification on the width of types, on padding, and the `fixed` keyword. All these were things I had to figure out recently, so it would be useful to document for others.\r\n\r\nIt would also be nice to document when to use `UIntPtr` instead of `IntPtr`, when it isn't dictated by the native header - for example `void*`. Perhaps the guidance is to always use `IntPtr` but that can [overflow on cast](https://stackoverflow.com/a/13171595) so it could matter."},{"Id":"8805945501","Type":"IssuesEvent","CreatedAt":"2018-12-26T23:34:23","Actor":"DustinCampbell","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34252","RelatedDescription":"Opened issue \"ColorConverter in System.ComponentModel.TypeConverters does not handle SystemColors\" (#34252) at dotnet/corefx","RelatedBody":"It is not possible to set the `BackColor` and `ForeColor` properties of a control to a named value from `SystemColors` using a `PropertyGrid`. This is due to the fact that the `ColorConverter` in .NET Core 3 does not support `SystemColors`.\r\n\r\nThere are two versions of ColorConverter in corefx:\r\n\r\n* [System.ComponentModel.TypeConverter/src/System/Drawing/ColorConverter.cs](https://github.com/dotnet/corefx/blob/master/src/System.ComponentModel.TypeConverter/src/System/Drawing/ColorConverter.cs)\r\n* [System.Drawing.Common/src/System/Drawing/ColorConverter.cs\r\n](https://github.com/dotnet/corefx/blob/master/src/System.Drawing.Common/src/System/Drawing/ColorConverter.cs)\r\n\r\nThe first version does not support SystemColors. Unfortunately, that is also the version that is used for properties of type `System.Drawing.Color` in property descriptors ([link](https://github.com/dotnet/corefx/blob/a5c7e7295ac2e3c889d347d0285794266797db87/src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ReflectTypeDescriptionProvider.cs#L130)), which is why this causes the `PropertyGrid` to fail.\r\n\r\ncc @Tanya-Solyanik "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8806557244","Type":"PullRequestEvent","CreatedAt":"2018-12-27T04:52:40","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32031","RelatedDescription":"Merged pull request \"Add record synthesized constructor generation\" (#32031) at dotnet/roslyn","RelatedBody":""},{"Id":"8806140993","Type":"PullRequestEvent","CreatedAt":"2018-12-27T01:30:11","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32032","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#32032) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8806140842","Type":"PullRequestEvent","CreatedAt":"2018-12-27T01:30:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32033","RelatedDescription":"Merged pull request \"Merge master to features/editorconfig-in-compiler\" (#32033) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8806076170","Type":"PullRequestEvent","CreatedAt":"2018-12-27T00:54:28","Actor":"cshung","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31009","RelatedDescription":"Closed pull request \"[WIP] Include the member name in the error message when one attempt to explicitly implement an interface event in an interface\" (#31009) at dotnet/roslyn","RelatedBody":"Do NOT merge - this is intended to be an experiment for the actual pull request https://github.com/dotnet/roslyn/pull/30365"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8805350781","Type":"PullRequestEvent","CreatedAt":"2018-12-26T19:04:53","Actor":"danmosemsft","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6732","RelatedDescription":"Merged pull request \"Move System/Numerics/Hashing to shared CoreLib.\" (#6732) at dotnet/corert","RelatedBody":""},{"Id":"8805332755","Type":"IssuesEvent","CreatedAt":"2018-12-26T18:58:00","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6733","RelatedDescription":"Opened issue \"wasm: Main thread Sleep fails due to missing initialisation?\" (#6733) at dotnet/corert","RelatedBody":"Adding the following to the Program Main:\r\n```\r\n        Thread.Sleep(100);\r\n```\r\nCauses the Assert to be triggered at https://github.com/dotnet/corert/blob/574d8319979ef5118f55c57ce2b90ea61f1429e6/src/System.Private.CoreLib/src/System/Threading/WaitSubsystem.ThreadWaitInfo.Unix.cs#L271  The `RuntimeThread.CurrentThread` looks fine but the `_thread` field is 0 (as it would appear are all the `ThreadWaitInfo` fields).  As there's an assert in the only ctor for `ThreadWaitInfo` to prevent this: https://github.com/dotnet/corert/blob/574d8319979ef5118f55c57ce2b90ea61f1429e6/src/System.Private.CoreLib/src/System/Threading/WaitSubsystem.ThreadWaitInfo.Unix.cs#L92 , it would appear the ctor is not being called or the address of the `ThreadWaitInfo` is bogus.  What I can't find is where the main thread is initialised, specifically how the RuntimeThread is created as breakpoints in it's managed ctor at least are not hit."},{"Id":"8805183327","Type":"PullRequestEvent","CreatedAt":"2018-12-26T18:00:05","Actor":"filipnavara","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6732","RelatedDescription":"Opened pull request \"Move System/Numerics/Hashing to shared CoreLib.\" (#6732) at dotnet/corert","RelatedBody":""},{"Id":"8805149228","Type":"IssuesEvent","CreatedAt":"2018-12-26T17:46:53","Actor":"ly303550688","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6731","RelatedDescription":"Closed issue \"publish shared library but there is no entrypoint\" (#6731) at dotnet/corert","RelatedBody":"I use the sample publish a shared library，dumpbin the dll, there's no entrypoint exported."},{"Id":"8804909507","Type":"IssuesEvent","CreatedAt":"2018-12-26T16:21:01","Actor":"ly303550688","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6731","RelatedDescription":"Opened issue \"publish shared library but there is no entrypoint\" (#6731) at dotnet/corert","RelatedBody":"I use the sample publish a shared library，dumpbin the dll, there's no entrypoint exported."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8806577731","Type":"IssuesEvent","CreatedAt":"2018-12-27T05:03:16","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2722","RelatedDescription":"Closed issue \"RID publish as framework dependent app produces broken app on Linux\" (#2722) at dotnet/sdk","RelatedBody":"The simplest repro:\r\n\r\nOn Linux (I used Ubuntu 18)\r\ninstall .NET Core SDK 2.2.100\r\nrun:\r\n`mkdir webapp`\r\n`cd webapp`\r\n`dotnet new web`\r\n`dotnet publish -c release -r linux-x64 --self-contained false`\r\n`./bin/release/netcoreapp2.2/linux-x64/publish/webapp`\r\n\r\nThis will fail to find a usable framework to run on.\r\n\r\nThe root cause is that when we publish a RID specific (so with apphost) app as framework dependent, for some reason the SDK includes `hostfxr` and `hostpolicy` libraries in the published folder. The `apphost` searches for `hostfxr` first in the local folder, then in global locations. Since it finds it in the local folder it uses that. Then it tries to resolve a framework, but on Linux where there is no global location for frameworks, it looks only in the local folder... and fails.\r\n\r\nOn Windows to works \"by luck\", we still load the `hostfxr` from the app, but then since we do have global location for frameworks, we end up loading the framework from the global location.\r\n\r\nDeleting the `hostfxr` and `hostpolicy` from the publish folder doesn't help, because for some reason they are listed as native runtime assets in the `.deps.json`. In fact there are native assets for `hostpolicy`, `hostfxr` and `apphost` which won't resolve at runtime either.\r\n\r\nThe SDK should not include `hostfxr`, `hostpolixy` in the publish folder and it should not include dependencies to the `Microsoft.NETCore.DotNetHostPolicy`, `Microsoft.NETCore.DotNetHostResolver` and `Microsoft.NETCore.DotNetAppHost` in the `.deps.json` since those bring wrong native assets."},{"Id":"8805721351","Type":"PullRequestEvent","CreatedAt":"2018-12-26T21:37:44","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2774","RelatedDescription":"Opened pull request \"Resolve assets from targeting pack\" (#2774) at dotnet/sdk","RelatedBody":"First steps for dotnet/cli#10085\r\n\r\n- References \"Targeting Packs\" with ExcludeAssets=\"all\", and resolves assets from the targeting packs directly (instead of going through the assets file)\r\n- References \"Runtime Packs\" if necessary to support self-contained publish (these still go through the assets file for now)\r\n- For now, hard-codes a `KnownFrameworkReference` to Microsoft.NETCore.App, and includes the RID graph directly.  These will need to be added to core-sdk\r\n- The list of runtime packs for each `KnownFrameworkReference`, and the RIDs available, will also need to be supplied by core-sdk"},{"Id":"8805341097","Type":"IssuesEvent","CreatedAt":"2018-12-26T19:01:08","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1703","RelatedDescription":"Closed issue \"MissingMethodException when using Microsoft.Build alongside ZipFile\" (#1703) at dotnet/sdk","RelatedBody":"I hope this is the correct place for this bug, if not, please point me as to where to file this.\r\n\r\n---\r\n\r\nI've hit a really strange place in the SDK with regards to NuGet packages and .NET Standard and type forwarders and all the magic going on there.\r\n\r\nI have a project that uses Microsoft.Build + Microsoft.Build.Framework + Microsoft.Build.Utilities.Core from NuGet.\r\n\r\nThis same project also deals with Zip files, so it uses System.IO.Compression and System.IO.Compression.FileSystem.\r\n\r\nMicrosoft.Build v15.1 does not use System.IO.Compression and so all works fine.\r\n\r\nMicrosoft.Build v15.3 and above do use System.IO.Compression. They refer to version 4.1.2.0. The version included in the .NET Framework is version 4.0.0.0.\r\n\r\nIf I reference Microsoft.Build from NuGet and System.IO.Compression from the SDK/GAC, I get build warnings/errors. This occurs with both the old (\"Classic Desktop\") SDK as well as the new SDK.\r\n\r\nOld SDK (with SDK/GAC reference to System.IO.Compression[.FileSystem]):\r\n\r\n> `1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(1988,5): warning MSB3277: Found conflicts between different versions of the same dependent assembly that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed.`\r\n\r\nNew SDK (targetting `net461`):\r\n\r\n> `The type 'ZipArchive' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.`\r\n\r\nIf I reference Microsoft.Build from NuGet and System.IO.Compression from NuGet, it compiles with no warnings or errors, however I get a runtime/JIT exception.\r\n\r\n> `Unhandled Exception: System.MissingMethodException: Method not found: 'System.IO.Compression.ZipArchive System.IO.Compression.ZipFile.Open(System.String, System.IO.Compression.ZipArchiveMode)'.\r\n\r\nIs there any way to reference both `Microsoft.Build` >= 15.3 and `System.IO.Compression.ZipFile` both from the same project?"},{"Id":"8805338788","Type":"IssuesEvent","CreatedAt":"2018-12-26T19:00:18","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1828","RelatedDescription":"Closed issue \"Build/Compilaion fails after 15.5.2 update to Visual Studio Enterprise 2017\" (#1828) at dotnet/sdk","RelatedBody":"Hi,\r\nI'm not able to build my existing projects in .Net 4.0.  I tried new project but getting the same error while building/compiling project.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tThe \"TargetFrameworkDirectories\" parameter is not supported by the \"ResolvePackageFileConflicts\" task. Verify the parameter exists on the task, and it is a settable public instance property.\r\n\r\nI tried cleaning build, Build, Rebuild project but getting the same error. I'm stuck with VS update. \r\n\r\n"},{"Id":"8805333646","Type":"IssuesEvent","CreatedAt":"2018-12-26T18:58:20","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2703","RelatedDescription":"Closed issue \"PresentationFramework.Aero not included by default when compiling against .NET Framework\" (#2703) at dotnet/sdk","RelatedBody":"I'm porting an app that relies on `PresentationFramework.Aero` for `ButtonChrome` and found I need to include the following in the csproj to get it to compile when building for .NET Framework 4.7.1:\r\n\r\n```xml\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'net471'\">\r\n    <Reference Include=\"PresentationFramework.Aero\" />\r\n  </ItemGroup\r\n```\r\n\r\nIs there a reason this isn't automatically included when setting `<UseWindowsForms>true</UseWindowsForms>`?"},{"Id":"8805329255","Type":"IssuesEvent","CreatedAt":"2018-12-26T18:56:38","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2711","RelatedDescription":"Closed issue \"2.2.100 final release can be installed side-by-side with the 2.2.100 from 2.2.1xx latest feed\" (#2711) at dotnet/sdk","RelatedBody":"I downloaded the 2.2.100 SDK earlier today from [dotnet/core-sdk](https://github.com/dotnet/core-sdk#installers-and-binaries) which gave me a `dotnet-sdk-latest-win-x64.exe`. That SDK has been versioned as 2.2.100 for a while already and when installing it, it _is_ a 2.2.100 SDK that is being installed.\r\n\r\nNow, on [dotnet.microsoft.com](https://dotnet.microsoft.com/download), the 2.2 release is now official and a final release for 2.2.100 is available.\r\n\r\nUpon comparing the `dotnet-sdk-2.2.100-win-x64.exe` with the installer downloaded earlier showed that it is actually a different file, although both are expected to contain 2.2.100. What’s worse, I can install both versions side-by-side so I actually get two entries in Windows:\r\n\r\n![Two identical SDKs in programs & settings](https://user-images.githubusercontent.com/132240/49457558-5594f200-f7eb-11e8-9231-1629d6bb7b65.png)\r\n\r\nOf course, since both SDKs have the same version, they both installed into the same folder, so the `dotnet` CLI will only see one SDK. But ideally, the previously released 2.2.100 SDK should have either be the identical version as the now-released final 2.2.100, or it should have been a different version."},{"Id":"8805223516","Type":"IssuesEvent","CreatedAt":"2018-12-26T18:15:36","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2773","RelatedDescription":"Closed issue \"dotnet`s error with credentials for nuget feed\" (#2773) at dotnet/sdk","RelatedBody":"After updated dotnet up to 2.1.502 and uper I have an error with credentials for nuget feed when I using apikey\r\n```\r\n/usr/share/dotnet/sdk/2.1.502/NuGet.targets(499,5): error : Unable to parse config file because: Credentials item must have username and password. Path: '/home/user/.nuget/NuGet/NuGet.Config'\r\n```\r\nmy NuGet.Config:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n   <packageSources>\r\n        <add key=\"name_feed\" value=\"http://url_feed/nuget\" />\r\n    </packageSources>\r\n    <packageSourceCredentials>\r\n        <name_feed>\r\n           <apikeys>\r\n             <add key=\"http://url_feed/nuget\" value=\"qwd32dqwd231vdas13\" />\r\n           </apikeys>\r\n        </name_feed>\r\n    </packageSourceCredentials>\r\n</configuration>\r\n```\r\non 2.1.403 version works fine\r\nCould you fix it?"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"open","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Open issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2018-12-16T11:40:46","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Open PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"open","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Open PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"294070713","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:02","Actor":"karann-msft","Number":"98","RawContent":null,"Title":"Updates to reflect the latest information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/98","RelatedDescription":"Closed or merged PR \"Updates to reflect the latest information\" (#98)"},{"Id":"316146229","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:34","Actor":"Cheesebaron","Number":"100","RawContent":null,"Title":"Create mvvmcross.md","State":"closed","Body":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415","Url":"https://github.com/dotnet/foundation/pull/100","RelatedDescription":"Closed or merged PR \"Create mvvmcross.md\" (#100)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"},{"Id":"293777118","IsPullRequest":true,"CreatedAt":"2018-03-29T07:03:03","Actor":"mairaw","Number":"97","RawContent":null,"Title":"update CLA PDF link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/97","RelatedDescription":"Closed or merged PR \"update CLA PDF link\" (#97)"},{"Id":"307656482","IsPullRequest":false,"CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Number":"99","RawContent":null,"Title":"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux ","State":"open","Body":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n","Url":"https://github.com/dotnet/foundation/issues/99","RelatedDescription":"Open issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"394274156","IsPullRequest":true,"CreatedAt":"2018-12-27T02:09:07","Actor":"sandreenko","Number":"21683","RawContent":null,"Title":"Use `saveNext` unwind opcode on arm64.","State":"open","Body":"According to [Microsoft ARM64 exception handling doc](https://docs.microsoft.com/en-us/cpp/build/arm64-exception-handling?view=vs-2017) we can use `save_next` as unwind code.\r\n\r\nAnd we have had part of it implemented in `genPrologSaveRegPair` but before the cleaning in #21395 it was tricky to support it in the epilog generation and keep prolog/epilog unwind infos matched.\r\n\r\nThis PR adds `genSetUseSaveNextPairs` that marks register pairs that we can save/restore with `save_next` and teaches `genEpilogRestoreRegPair` to use `save_next` (`genPrologSaveRegPair` has already known how to do that).\r\n\r\nAsm diffs for System.Private.CoreLib (arm64 checked, altjit):\r\n```\r\n1 files had text diffs but not size diffs.\r\nSystem.Private.CoreLib.dasm had 65544 diffs\r\n```\r\nthat look like:\r\n```\r\n***** F:\\DIFFS\\DIFFOUT\\DASMSET_86\\BASE\\System.Private.CoreLib.dasm\r\n    C9 8A       save_regp X#6 Z#10 (0x0A); stp x25, x26, [sp, #80]\r\n    C9 08       save_regp X#4 Z#8 (0x08); stp x23, x24, [sp, #64]\r\n    C8 86       save_regp X#2 Z#6 (0x06); stp x21, x22, [sp, #48]\r\n    C8 04       save_regp X#0 Z#4 (0x04); stp x19, x20, [sp, #32]\r\n***** F:\\DIFFS\\DIFFOUT\\DASMSET_86\\DIFF\\SYSTEM.PRIVATE.CORELIB.DASM\r\n    C9 8A       save_regp X#6 Z#10 (0x0A); stp x25, x26, [sp, #80]\r\n    E6          save_next\r\n    E6          save_next\r\n    C8 04       save_regp X#0 Z#4 (0x04); stp x19, x20, [sp, #32]\r\n*****\r\n```\r\nand there is a tiny improvement in the native image `System.Private.CoreLib.dll` size.","Url":"https://github.com/dotnet/coreclr/pull/21683","RelatedDescription":"Open PR \"Use `saveNext` unwind opcode on arm64.\" (#21683)"},{"Id":"394241175","IsPullRequest":true,"CreatedAt":"2018-12-27T01:25:51","Actor":"filipnavara","Number":"21682","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"PR #21681 + build fix","Url":"https://github.com/dotnet/coreclr/pull/21682","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#21682)"},{"Id":"394224635","IsPullRequest":true,"CreatedAt":"2018-12-26T19:08:06","Actor":"Dotnet-GitSync-Bot","Number":"21681","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"open","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/coreclr/pull/21681","RelatedDescription":"Open PR \"Mirror changes from dotnet/corert\" (#21681)"},{"Id":"393986176","IsPullRequest":false,"CreatedAt":"2018-12-26T16:01:32","Actor":"HamedMasafi","Number":"21673","RawContent":null,"Title":"Bug: WinFX.targets was not found","State":"closed","Body":"I have installed dotnet core 3 preview on opensuse leap 15.0\r\nThe file that I downloaded is: https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-3.0.100-preview-009812-linux-x64-binaries\r\n\r\nI've try to build an app:\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/> mkdir -p dwin && cd dwin\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet new winforms       \r\n\r\nWelcome to .NET Core!\r\n---------------------\r\nLearn more about .NET Core: https://aka.ms/dotnet-docs\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\nASP.NET Core\r\n------------\r\nSuccessfully installed the ASP.NET Core HTTPS Development Certificate.\r\nTo trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms refer to the platform specific documentation.\r\nFor more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.\r\nGetting ready...\r\nThe template \"Windows Forms Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /home/hamed/tmp/dwin/dwin.csproj...\r\n  Restoring packages for /home/hamed/tmp/dwin/dwin.csproj...\r\n  Installing Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.Platforms 3.0.0-preview.18571.3.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing Microsoft.NETCore.Targets 2.0.0.\r\n  Installing Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Installing Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.targets.\r\n  Restore completed in 4.87 min for /home/hamed/tmp/dwin/dwin.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet run\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.targets(14,2): error MSB4019: The imported project \"/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [/home/hamed/tmp/dwin/dwin.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\nThe file exists but in other case:\r\n```\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFx.targets\r\n```\r\nThe 'x' on WinFx is lower but dotnet expect to it be upper.\r\n\r\nI've created a copy with this command but I know is not good way for solving bugs\r\n```\r\ncp /opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinF{x,X}.targets\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21673","RelatedDescription":"Closed issue \"Bug: WinFX.targets was not found\" (#21673)"},{"Id":"394187722","IsPullRequest":false,"CreatedAt":"2018-12-26T15:21:30","Actor":"Lohnegrim","Number":"21680","RawContent":null,"Title":"BadImageFormat Exception when trying to use TextControl in .Net Core 3.0 preview 1","State":"open","Body":".NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\nMaybe simmilar to/relevant https://github.com/dotnet/coreclr/issues/11298 or https://github.com/dotnet/coreclr/issues/18447\r\n\r\nHi,\r\nI tried to Convert and run a project to .Net Core 3.0 Preview 1 and run in a Problem with an External Component. \"Tx TextControl\".\r\n\r\nI reduced the relevant Code to the minimum and Created a repro:\r\n[textcontrol.txtools.zip](https://github.com/dotnet/coreclr/files/2710433/textcontrol.txtools.zip)\r\n\r\nIf it does not work here the Steps for the Repo:\r\n1. Trial from: https://www.textcontrol.com/products/windows-forms/tx-text-control-dotnet/downloads.\r\n2. Add a reference to the txtools from the package.\r\n3. And this Code to a new .Core 3.0 console project:\r\n                TXTextControl.txtools.Initialize();\r\n\r\nI tried multiple Compinations, 32 + 64 bit version for the txtool.dll, and 32, 64, AnyCpu of the .net core project, but I always get BadImageFormat.","Url":"https://github.com/dotnet/coreclr/issues/21680","RelatedDescription":"Open issue \"BadImageFormat Exception when trying to use TextControl in .Net Core 3.0 preview 1\" (#21680)"},{"Id":"394145609","IsPullRequest":true,"CreatedAt":"2018-12-26T13:49:45","Actor":"marek-safar","Number":"21678","RawContent":null,"Title":"Throws PlatformNotSupportedException for SecureString BSTR conversion","State":"closed","Body":"instead of trying to look up ole32 on unix\r\n\r\nUsed PInvokeMarshal.AllocBSTR and PInvokeMarshal.FreeBSTR are Windows specific","Url":"https://github.com/dotnet/coreclr/pull/21678","RelatedDescription":"Closed or merged PR \"Throws PlatformNotSupportedException for SecureString BSTR conversion\" (#21678)"},{"Id":"394147543","IsPullRequest":true,"CreatedAt":"2018-12-26T11:25:17","Actor":"jashook","Number":"21679","RawContent":null,"Title":"Update linux/OSX build instructions","State":"open","Body":"Long overdue update of the build documentation. Hope to do similar work soon to the testing documentation. Please tag anyone necessary for review. Added a few people who I assumed at a minimum would like notification that this is changing.","Url":"https://github.com/dotnet/coreclr/pull/21679","RelatedDescription":"Open PR \"Update linux/OSX build instructions\" (#21679)"},{"Id":"394067523","IsPullRequest":false,"CreatedAt":"2018-12-26T02:36:06","Actor":"VincentBu","Number":"21677","RawContent":null,"Title":"[arm64] System.Net.NetworkInformation.Tests.IPGlobalPropertiesTest.IPGlobalProperties_TcpActiveConnections_Succeed(address: 127.0.0.1) failed","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs8_tst/73/\r\n**Failed tests:**\r\nSystem.Net.NetworkInformation.Tests.IPGlobalPropertiesTest.IPGlobalProperties_TcpActiveConnections_Succeed(address: 127.0.0.1)\r\n**Failed log:**\r\n```\r\n~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs8_tst/_/fx/artifacts/bin/tests/System.Net.NetworkInformation.Functional.Tests/netcoreapp-Linux-Release-arm64 ~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs8_tst/_/fx/artifacts/bin/tests/System.Net.NetworkInformation.Functional.Tests/netcoreapp-Linux-Release-arm64\r\n[37m  Discovering: System.Net.NetworkInformation.Functional.Tests (method display = ClassAndMethod, method display options = None)\r\n[m[37m  Discovered:  System.Net.NetworkInformation.Functional.Tests (found 59 of 74 test cases)\r\n[m[37m  Starting:    System.Net.NetworkInformation.Functional.Tests (parallel test collections = on, max threads = 46)\r\n[m[31;1m    System.Net.NetworkInformation.Tests.IPGlobalPropertiesTest.IPGlobalProperties_TcpActiveConnections_Succeed(address: 127.0.0.1) [FAIL]\r\n[m[37m      Assert.True() Failure\r\n[m[37m      Expected: True\r\n[m[37m      Actual:   False\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs8/_/fx/src/System.Net.NetworkInformation/tests/FunctionalTests/IPGlobalPropertiesTest.cs(108,0): at System.Net.NetworkInformation.Tests.IPGlobalPropertiesTest.IPGlobalProperties_TcpActiveConnections_Succeed(IPAddress address)\r\n[m[37m        --- End of stack trace from previous location where exception was thrown ---\r\n[m[37m  Finished:    System.Net.NetworkInformation.Functional.Tests\r\n[m[37m=== TEST EXECUTION SUMMARY ===\r\n[m[37m   System.Net.NetworkInformation.Functional.Tests  Total: 104, Errors: 0, Failed: 1, Skipped: 0, Time: 7.958s\r\n[m[m~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs8_tst/_/fx/artifacts/bin/tests/System.Net.NetworkInformation.Functional.Tests/netcoreapp-Linux-Release-arm64\r\n----- end 05:33:09 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21677","RelatedDescription":"Open issue \"[arm64] System.Net.NetworkInformation.Tests.IPGlobalPropertiesTest.IPGlobalProperties_TcpActiveConnections_Succeed(address: 127.0.0.1) failed\" (#21677)"},{"Id":"394067176","IsPullRequest":false,"CreatedAt":"2018-12-26T02:32:46","Actor":"VincentBu","Number":"21676","RawContent":null,"Title":"[arm64/linux] System.Net.HttpListener.Tests failed with System.ObjectDisposedException","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_jitstress2_tst/71/\r\n**failed test:**\r\nSystem.Net.HttpListener.Tests\r\n\r\n**Failed log:**\r\n```\r\n~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2_tst/_/fx/artifacts/bin/tests/System.Net.HttpListener.Tests/netcoreapp-Linux-Release-arm64 ~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2_tst/_/fx/artifacts/bin/tests/System.Net.HttpListener.Tests/netcoreapp-Linux-Release-arm64\r\n[37m  Discovering: System.Net.HttpListener.Tests (method display = ClassAndMethod, method display options = None)\r\n[m[37m  Discovered:  System.Net.HttpListener.Tests (found 261 of 298 test cases)\r\n[m[37m  Starting:    System.Net.HttpListener.Tests (parallel test collections = on, max threads = 46)\r\n[m[33;1m    System.Net.Tests.HttpListenerAuthenticationTests.BasicAuthentication_RealmSet_SendsChallengeToClient [SKIP]\r\n[m[37m      Condition(s) not met: \"IsWindowsImplementation\"\r\n[m[33;1m    System.Net.Tests.HttpListenerAuthenticationTests.NoAuthentication_AuthenticationProvided_ReturnsForbiddenStatusCode [SKIP]\r\n[m[37m      Condition(s) not met: \"IsWindowsImplementation\"\r\n[m[33;1m    System.Net.Tests.HttpListenerAuthenticationTests.NoAuthenticationGetContextAsync_AuthenticationProvided_ReturnsForbiddenStatusCode [SKIP]\r\n[m[37m      Condition(s) not met: \"IsWindowsImplementation\"\r\n[m\r\nUnhandled Exception: \r\nUnhandled Exception: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'System.Net.HttpListener'.\r\n   at System.Net.HttpListener.BeginGetContext(AsyncCallback callback, Object state) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.HttpListener/src/System/Net/Managed/HttpListener.Managed.cs:line 290\r\n   at System.Net.ListenerAsyncResult.Complete(HttpListenerContext context, Boolean synch) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.HttpListener/src/System/Net/Managed/ListenerAsyncResult.Managed.cs:line 159\r\n   at System.Net.HttpListener.RegisterContext(HttpListenerContext context) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.HttpListener/src/System/Net/Managed/HttpListener.Managed.cs:line 224\r\n   at System.Net.LazyAsyncResult.Complete(IntPtr userToken) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/Common/src/System/Net/LazyAsyncResult.cs:line 400\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Net.ContextAwareResult.Complete(IntPtr userToken) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/Common/src/System/Net/ContextAwareResult.cs:line 388\r\n   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/Common/src/System/Net/LazyAsyncResult.cs:line 354\r\n   at System.Net.Sockets.BaseOverlappedAsyncResult.CompletionCallback(Int32 numBytes, SocketError errorCode) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/BaseOverlappedAsyncResult.Unix.cs:line 29\r\n   at System.Net.Sockets.SocketAsyncContext.BufferMemoryReceiveOperation.InvokeCallback(Boolean allowPooling) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs:line 485\r\n   at System.Net.Sockets.SocketAsyncContext.OperationQueue`1.ProcessAsyncOperation(TOperation op) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs:line 870\r\n   at System.Net.Sockets.SocketAsyncContext.ProcessAsyncReadOperation(ReadOperation op) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs:line 1269\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'System.Net.HttpListener'.\r\n   at System.Net.HttpListener.BeginGetContext(AsyncCallback callback, Object state) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.HttpListener/src/System/Net/Managed/HttpListener.Managed.cs:line 290\r\n   at System.Net.ListenerAsyncResult.Complete(HttpListenerContext context, Boolean synch) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.HttpListener/src/System/Net/Managed/ListenerAsyncResult.Managed.cs:line 159\r\n   at System.Net.HttpListener.RegisterContext(HttpListenerContext context) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.HttpListener/src/System/Net/Managed/HttpListener.Managed.cs:line 224\r\n   at System.Net.LazyAsyncResult.Complete(IntPtr userToken) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/Common/src/System/Net/LazyAsyncResult.cs:line 400\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Net.ContextAwareResult.Complete(IntPtr userToken) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/Common/src/System/Net/ContextAwareResult.cs:line 388\r\n   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/Common/src/System/Net/LazyAsyncResult.cs:line 354\r\n   at System.Net.Sockets.BaseOverlappedAsyncResult.CompletionCallback(Int32 numBytes, SocketError errorCode) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/BaseOverlappedAsyncResult.Unix.cs:line 29\r\n   at System.Net.Sockets.SocketAsyncContext.BufferMemoryReceiveOperation.InvokeCallback(Boolean allowPooling) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs:line 485\r\n   at System.Net.Sockets.SocketAsyncContext.OperationQueue`1.ProcessAsyncOperation(TOperation op) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs:line 870\r\n   at System.Net.Sockets.SocketAsyncContext.ProcessAsyncReadOperation(ReadOperation op) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs:line 1269\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n./RunTests.sh: line 126:  6334 Aborted                 (core dumped) $RUNTIME_PATH/dotnet xunit.console.dll System.Net.HttpListener.Tests.dll -xml testResults.xml -nologo -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=IgnoreForCI -notrait category=failing -notrait category=Outerloop\r\n~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstress2_tst/_/fx/artifacts/bin/tests/System.Net.HttpListener.Tests/netcoreapp-Linux-Release-arm64\r\n----- end 22:25:50 ----- exit code 134 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21676","RelatedDescription":"Open issue \"[arm64/linux] System.Net.HttpListener.Tests failed with System.ObjectDisposedException\" (#21676)"},{"Id":"394031939","IsPullRequest":true,"CreatedAt":"2018-12-25T18:40:07","Actor":"ichensky","Number":"21675","RawContent":null,"Title":"Implement Activator.CreateInstance<T> with params","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21675","RelatedDescription":"Closed or merged PR \"Implement Activator.CreateInstance<T> with params\" (#21675)"},{"Id":"394025260","IsPullRequest":true,"CreatedAt":"2018-12-25T14:15:34","Actor":"dotnet-maestro-bot","Number":"21674","RawContent":null,"Title":"Update CoreClr, CoreFx to preview-27227-01, preview.18626.2, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21674","RelatedDescription":"Open PR \"Update CoreClr, CoreFx to preview-27227-01, preview.18626.2, respectively (master)\" (#21674)"},{"Id":"393797968","IsPullRequest":true,"CreatedAt":"2018-12-25T05:55:04","Actor":"dotnet-maestro-bot","Number":"21663","RawContent":null,"Title":"Update CoreClr, CoreFx to preview-27225-01, preview.18624.2, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21663","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to preview-27225-01, preview.18624.2, respectively (master)\" (#21663)"},{"Id":"393940562","IsPullRequest":true,"CreatedAt":"2018-12-25T04:55:31","Actor":"filipnavara","Number":"21671","RawContent":null,"Title":"Makes CultureInfo.get_Parent thread safe.","State":"closed","Body":"This is reintroduction of #8656, a fix for #4105. At some point the bug was reintroduced by PR #9835. I noticed it when comparing the CoreRT and CoreCLR code.","Url":"https://github.com/dotnet/coreclr/pull/21671","RelatedDescription":"Closed or merged PR \"Makes CultureInfo.get_Parent thread safe.\" (#21671)"},{"Id":"393949676","IsPullRequest":true,"CreatedAt":"2018-12-25T02:34:11","Actor":"filipnavara","Number":"21672","RawContent":null,"Title":"Move CultureInfo to shared CoreLib","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21672","RelatedDescription":"Open PR \"Move CultureInfo to shared CoreLib\" (#21672)"},{"Id":"393907865","IsPullRequest":true,"CreatedAt":"2018-12-24T16:33:30","Actor":"kvochko","Number":"21669","RawContent":null,"Title":"[Linux/ARM] Fix CFI code offsets in funclet prolog","State":"open","Body":"In CoreRT (Linux/ARM) we are generating unwind info from CFI, and the order of unwind codes is determined from code offset. So it's important to have different code offsets for different instructions. AMD64 already had this, so this change just enables funclet prolog offsets on ARM/Linux.\r\n\r\n@jkotas @noahfalk @alpencolt @sergign60 @iarischenko","Url":"https://github.com/dotnet/coreclr/pull/21669","RelatedDescription":"Open PR \"[Linux/ARM] Fix CFI code offsets in funclet prolog\" (#21669)"},{"Id":"393790103","IsPullRequest":true,"CreatedAt":"2018-12-24T16:21:43","Actor":"marek-safar","Number":"21661","RawContent":null,"Title":"Adds shared part of GlobalizationMode","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21661","RelatedDescription":"Closed or merged PR \"Adds shared part of GlobalizationMode\" (#21661)"},{"Id":"393874682","IsPullRequest":false,"CreatedAt":"2018-12-24T12:40:13","Actor":"gfoidl","Number":"21668","RawContent":null,"Title":"Final method won't devirt when call-site is \"complex\"","State":"open","Body":"In the below example the call `res[0] = this.Do(src[0]);` won't be inlined, whilst `res[0] = this.Do('B');` will be inlined.\r\n\r\n```c#\r\nusing System.Linq;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static int Main(string[] args)\r\n        {\r\n            var foo = new Foo();\r\n            var res = Do(foo);\r\n\r\n            return res[0];\r\n        }\r\n\r\n        [MethodImpl(MethodImplOptions.NoInlining)]\r\n        private static char[] Do(Foo foo)\r\n        {\r\n            //return foo.DoWillDevirt();\r\n            return foo.DoWontDevirt();\r\n        }\r\n    }\r\n\r\n    public abstract class Base\r\n    {\r\n        private char[] _src = Enumerable.Repeat('B', 10).ToArray();\r\n        private char[] _res = new char[10];\r\n\r\n        public char[] DoWontDevirt()\r\n        {\r\n            char[] src = _src;\r\n            char[] res = _res;\r\n\r\n            res[0] = this.Do(src[0]);\r\n\r\n            return res;\r\n        }\r\n\r\n        public char[] DoWillDevirt()\r\n        {\r\n            char[] src = _src;\r\n            char[] res = _res;\r\n\r\n            res[0] = this.Do('B');\r\n\r\n            return res;\r\n        }\r\n\r\n        public abstract char Do(char c);\r\n    }\r\n\r\n    public class Foo : Base\r\n    {\r\n        public sealed override char Do(char c) => (char)(c + 1);\r\n    }\r\n}\r\n```\r\n\r\nExcerpt of JIT dump:\r\n```\r\nimpDevirtualizeCall: Trying to devirtualize virtual call:\r\n    class for 'this' is Base (attrib 21000400)\r\n    base method is Base::Do\r\n    devirt to Base::Do -- inexact or not final\r\n               [000021] --C-G-------              *  CALLV ind int    Base.Do\r\n               [000019] ------------ this in rdi  +--*  LCL_VAR   ref    V00 this         \r\n               [000020] ------------ arg1         \\--*  LCL_VAR   int    V02 loc1         \r\n    Class not final or exact, and method not final\r\nNOT Marking call [000021] as guarded devirtualization candidate -- disabled by jit config\r\nINLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct' for 'Base:DoWontDevirt():ref:this' calling 'Base:Do(ushort):ushort:this'\r\nINLINER: during 'impMarkInlineCandidate' result 'failed this call site' reason 'target not direct'\r\n```\r\n\r\nFor `DoWillDevirt`:\r\n```\r\nimpDevirtualizeCall: Trying to devirtualize virtual call:\r\n    class for 'this' is Foo (attrib 21000000)\r\n    base method is Base::Do\r\n    devirt to Foo::Do -- final method\r\n               [000022] --C-G-------              *  CALLV ind int    Base.Do\r\n               [000020] ------------ this in rdi  +--*  LCL_VAR   ref    V00 this         \r\n               [000021] ------------ arg1         \\--*  CNS_INT   int    66\r\n    final method; can devirtualize\r\n```\r\n\r\nSo the difference is that in the former case the JIT won't recognize the current type `class for 'this' is Base` vs. `class for 'this' is Foo`.\r\n\r\nIn the IL there is nothing special for either case:\r\n```\r\n.method public hidebysig\r\n    instance char[] DoWontDevirt () cil managed\r\n{\r\n    // Method begins at RVA 0x2070\r\n    // Code size 28 (0x1c)\r\n    .maxstack 4\r\n    .locals init (\r\n        [0] char[],\r\n        [1] char\r\n    )\r\n\r\n    IL_0000: ldarg.0\r\n    IL_0001: ldfld char[] ConsoleApp1.Base::_src\r\n    IL_0006: ldarg.0\r\n    IL_0007: ldfld char[] ConsoleApp1.Base::_res\r\n    IL_000c: stloc.0\r\n    IL_000d: ldc.i4.0\r\n    IL_000e: ldelem.u2\r\n    IL_000f: stloc.1\r\n    IL_0010: ldloc.0\r\n    IL_0011: ldc.i4.0\r\n    IL_0012: ldarg.0\r\n    IL_0013: ldloc.1\r\n    IL_0014: callvirt instance char ConsoleApp1.Base::Do(char)\r\n    IL_0019: stelem.i2\r\n    IL_001a: ldloc.0\r\n    IL_001b: ret\r\n}\r\n```\r\n\r\n```\r\n.method public hidebysig\r\n    instance char[] DoWillDevirt () cil managed\r\n{\r\n    // Method begins at RVA 0x2098\r\n    // Code size 25 (0x19)\r\n    .maxstack 8\r\n\r\n    IL_0000: ldarg.0\r\n    IL_0001: ldfld char[] ConsoleApp1.Base::_src\r\n    IL_0006: pop\r\n    IL_0007: ldarg.0\r\n    IL_0008: ldfld char[] ConsoleApp1.Base::_res\r\n    IL_000d: dup\r\n    IL_000e: ldc.i4.0\r\n    IL_000f: ldarg.0\r\n    IL_0010: ldc.i4.s 66\r\n    IL_0012: callvirt instance char ConsoleApp1.Base::Do(char)\r\n    IL_0017: stelem.i2\r\n    IL_0018: ret\r\n}\r\n```\r\n\r\n---\r\n\r\nBuild for coreclr was done at commit d4cab6e31898098d17e3e9b2e44a0f88b6db43ec (from yesterday).\r\n\r\nIf this is already tracked in https://github.com/dotnet/coreclr/issues/9908 please feel free to close this issue here.\r\n\r\n/cc: @AndyAyersMS ","Url":"https://github.com/dotnet/coreclr/issues/21668","RelatedDescription":"Open issue \"Final method won't devirt when call-site is \"complex\"\" (#21668)"},{"Id":"393834179","IsPullRequest":false,"CreatedAt":"2018-12-24T08:21:22","Actor":"sillyousu","Number":"21667","RawContent":null,"Title":"Is `createdump` runtime independent?","State":"open","Body":"I want to use the latest `createdump` on older runtime (2.2), since new version fix #21485 and  #21484 .\r\nBut latest `createdump` crash:\r\n```\r\n(lldb) bt\r\n* thread #1: tid = 1607, 0x00007f3a827d7c43 libmscordaccore.so`ClrDataAccess::EnumWksGlobalMemoryRegions(CLRDataEnumMemoryFlags) [inlined] __DPtr<dac_heap_segment> Dereference<dac_heap_segment>(ptr=<unavailable>) + 15 at request_common.h:26, name = 'createdump', stop reason = signal SIGSEGV\r\n  * frame #0: 0x00007f3a827d7c43 libmscordaccore.so`ClrDataAccess::EnumWksGlobalMemoryRegions(CLRDataEnumMemoryFlags) [inlined] __DPtr<dac_heap_segment> Dereference<dac_heap_segment>(ptr=<unavailable>) + 15 at request_common.h:26\r\n    frame #1: 0x00007f3a827d7c34 libmscordaccore.so`ClrDataAccess::EnumWksGlobalMemoryRegions(this=<unavailable>, flags=<unavailable>) + 68 at request.cpp:3808\r\n    frame #2: 0x00007f3a827a6557 libmscordaccore.so`ClrDataAccess::EnumMemCLRHeapCrticalStatic(this=0x0000000000cb6a50, flags=CLRDATA_ENUM_MEM_HEAP) + 391 at enummem.cpp:170\r\n    frame #3: 0x00007f3a827ab9ae libmscordaccore.so`ClrDataAccess::EnumMemoryRegionsWorkerHeap(this=0x0000000000cb6a50, flags=CLRDATA_ENUM_MEM_HEAP) + 270 at enummem.cpp:350\r\n    frame #4: 0x00007f3a827b34ce libmscordaccore.so`ClrDataAccess::EnumMemoryRegionsWrapper(this=0x0000000000cb6a50, flags=CLRDATA_ENUM_MEM_HEAP) + 126 at enummem.cpp:1851\r\n    frame #5: 0x00007f3a827b3739 libmscordaccore.so`ClrDataAccess::EnumMemoryRegions(this=0x0000000000cb6a50, callback=<unavailable>, miniDumpFlags=512, flags=<unavailable>) + 233 at enummem.cpp:1939\r\n    frame #6: 0x00000000004167cb createdump`CrashInfo::EnumerateMemoryRegionsWithDAC(this=0x0000000000b46d50, minidumpType=MiniDumpWithPrivateReadWriteMemory) + 699 at crashinfo.cpp:647\r\n    frame #7: 0x0000000000414ead createdump`CrashInfo::GatherCrashInfo(this=0x0000000000b46d50, minidumpType=MiniDumpWithPrivateReadWriteMemory) + 1197 at crashinfo.cpp:213\r\n    frame #8: 0x0000000000413a67 createdump`CreateDumpCommon(dumpPathTemplate=\"\", minidumpType=MiniDumpWithPrivateReadWriteMemory, crashInfo=0x0000000000b46d50) + 551 at createdump.cpp:47\r\n    frame #9: 0x0000000000413230 createdump`main(argc=2, argv=0x00007fff7c0290a8) + 992 at main.cpp:81\r\n    frame #10: 0x00007f3a832eb2e1 libc.so.6`__libc_start_main + 241\r\n    frame #11: 0x0000000000412d79 createdump`_start + 41\r\n``` \r\n\r\nBacktrace imply `createdump` use older version `libmscordaccore.so`\r\nhttps://github.com/dotnet/coreclr/blob/0aa235761957b6e8d826b65e8439163fdb567b22/src/debug/daccess/request.cpp#L3808\r\n","Url":"https://github.com/dotnet/coreclr/issues/21667","RelatedDescription":"Open issue \"Is `createdump` runtime independent?\" (#21667)"},{"Id":"393833530","IsPullRequest":false,"CreatedAt":"2018-12-24T08:17:15","Actor":"differentrain","Number":"21666","RawContent":null,"Title":"The second argument of System.Runtime.Intrinsics.X86.Sse42.Crc32 method can not be \"dereference\" ?","State":"open","Body":"```\r\ndotnet --version\r\n3.0.100-preview-009844\r\n```\r\n```\r\nunsafe static void Main()\r\n{\r\n    var ul = 0UL;\r\n    var ui = 0U;\r\n\r\n    ulong* ulP = &ul;\r\n    uint* uiP = &ui;\r\n\r\n    //output 0\r\n    Console.WriteLine(Sse42.Crc32(ui, ui).ToString(\"X\"));\r\n    //output 0\r\n    Console.WriteLine(Sse42.X64.Crc32(ul, ul).ToString(\"X\"));\r\n    //output 0\r\n    Console.WriteLine(Sse42.Crc32(*uiP, ui).ToString(\"X\"));\r\n    //output 0\r\n    Console.WriteLine(Sse42.X64.Crc32(*ulP, ul).ToString(\"X\"));\r\n\r\n    /*\r\n     * System.AccessViolationException:\r\n     * “Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”\r\n    Console.WriteLine(Sse42.Crc32(*uiP, *uiP).ToString(\"X\"));\r\n    Console.WriteLine(Sse42.X64.Crc32(*ulP, *ulP).ToString(\"X\"));\r\n    Console.WriteLine(Sse42.Crc32(*uiP, *uiP).ToString(\"X\"));\r\n    Console.WriteLine(Sse42.X64.Crc32(*ulP, *ulP).ToString(\"X\"));\r\n     */\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/21666","RelatedDescription":"Open issue \"The second argument of System.Runtime.Intrinsics.X86.Sse42.Crc32 method can not be \"dereference\" ?\" (#21666)"},{"Id":"393817008","IsPullRequest":false,"CreatedAt":"2018-12-24T06:10:24","Actor":"AriNuer","Number":"21665","RawContent":null,"Title":"Build failed with error MSB3073: The command exited with code -1073741819","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64_arm64_altjit/job/jitstress/job/x64_arm64_altjit_checked_windows_nt_jitstress2_jitstressregs3/386/\r\n**Failed log:**\r\n```\r\nD:\\j\\workspace\\x64_arm64_alt---50816bd7\\tests\\build.proj(55,5): error MSB3073: The command \"\"D:\\j\\workspace\\x64_arm64_alt---50816bd7\\tests\\..\\Tools\\dotnetcli\\dotnet.exe\" restore --packages \"D:\\j\\workspace\\x64_arm64_alt---50816bd7\\tests\\..\\packages\" --source https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json --source https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json --source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json --source https://api.nuget.org/v3/index.json D:\\j\\workspace\\x64_arm64_alt---50816bd7\\tests\\scripts\\scripts.csproj \" exited with code -1073741819.\r\n    1 Warning(s)\r\n    1 Error(s)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21665","RelatedDescription":"Open issue \"Build failed with error MSB3073: The command exited with code -1073741819\" (#21665)"},{"Id":"393814015","IsPullRequest":false,"CreatedAt":"2018-12-24T05:40:23","Actor":"AriNuer","Number":"21664","RawContent":null,"Title":"Tests failed in x64_arm64_altjit_checked_windows_nt_corefx_jitstressregs0x80","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64_arm64_altjit/job/jitstress/job/x64_arm64_altjit_checked_windows_nt_corefx_jitstressregs0x80/388/#showFailuresLink\r\n**Failed tests:**\r\nSystem.Collections.Tests.Hashtable_SyncRootTests.SyncRoot\r\nSystem.Collections.Tests.DictionaryBaseTests.SyncRoot\r\nSystem.Collections.Specialized.Tests.StringDictionarySyncRootTests.SyncRoot(count: 0)\r\nSystem.Collections.Specialized.Tests.StringDictionarySyncRootTests.SyncRoot(count: 5)\r\n\r\n**Failed log:**\r\n```\r\nSystem.Collections.Tests.Hashtable_SyncRootTests.SyncRoot [FAIL]\r\n        Assert.NotEqual() Failure\r\n        Expected: Not []\r\n        Actual:   []\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_arm64_alt---29fc8c6b\\_\\fx\\src\\System.Collections.NonGeneric\\tests\\HashtableTests.cs(1212,0): at System.Collections.Tests.Hashtable_SyncRootTests.SyncRoot()\r\n        Assert.NotEqual() Failure\r\n        Expected: Not []\r\n        Actual:   []\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_arm64_alt---29fc8c6b\\_\\fx\\src\\System.Collections.NonGeneric\\tests\\DictionaryBaseTests.cs(298,0): at System.Collections.Tests.DictionaryBaseTests.SyncRoot()\r\n      System.Collections.Tests.DictionaryBaseTests.SyncRoot [FAIL]\r\n```\r\n```\r\nDiscovered:  System.Collections.Specialized.Tests (found 620 test cases)\r\n    Starting:    System.Collections.Specialized.Tests (parallel test collections = on, max threads = 4)\r\n      System.Collections.Specialized.Tests.StringDictionarySyncRootTests.SyncRoot(count: 0) [FAIL]\r\n        Assert.IsType() Failure\r\n        Expected: System.Object\r\n        Actual:   System.Collections.Hashtable\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_arm64_alt---29fc8c6b\\_\\fx\\src\\System.Collections.Specialized\\tests\\StringDictionary\\StringDictionary.SyncRootTests.cs(22,0): at System.Collections.Specialized.Tests.StringDictionarySyncRootTests.SyncRoot(Int32 count)\r\n      System.Collections.Specialized.Tests.StringDictionarySyncRootTests.SyncRoot(count: 5) [FAIL]\r\n        Assert.IsType() Failure\r\n        Expected: System.Object\r\n        Actual:   System.Collections.Hashtable\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_arm64_alt---29fc8c6b\\_\\fx\\src\\System.Collections.Specialized\\tests\\StringDictionary\\StringDictionary.SyncRootTests.cs(22,0): at System.Collections.Specialized.Tests.StringDictionarySyncRootTests.SyncRoot(Int32 count)\r\n    Finished:    System.Collections.Specialized.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Collections.Specialized.Tests  Total: 2122, Errors: 0, Failed: 2, Skipped: 0, Time: 12.986s\r\n  ----- end 18:07:17.50 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21664","RelatedDescription":"Open issue \"Tests failed in x64_arm64_altjit_checked_windows_nt_corefx_jitstressregs0x80\" (#21664)"},{"Id":"393751063","IsPullRequest":true,"CreatedAt":"2018-12-24T02:16:33","Actor":"filipnavara","Number":"21657","RawContent":null,"Title":"Move DebugProvider.Windows to shared CoreLib.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21657","RelatedDescription":"Closed or merged PR \"Move DebugProvider.Windows to shared CoreLib.\" (#21657)"},{"Id":"393737474","IsPullRequest":true,"CreatedAt":"2018-12-24T02:09:47","Actor":"benaadams","Number":"21656","RawContent":null,"Title":"Fix warning causing error in warning as error (Windows)","State":"closed","Body":"```\r\n warning C4800: 'DWORD': forcing value to bool 'true' or 'false' (performance warning)\r\n warning C4800: 'BOOL': forcing value to bool 'true' or 'false' (performance warning)\r\n```\r\n\r\n```\r\nerror C2220: warning treated as error - no 'object' file generated\r\n```\r\n/cc @jkotas @erozenfeld","Url":"https://github.com/dotnet/coreclr/pull/21656","RelatedDescription":"Closed or merged PR \"Fix warning causing error in warning as error (Windows)\" (#21656)"},{"Id":"393792660","IsPullRequest":false,"CreatedAt":"2018-12-24T00:55:01","Actor":"davidfowl","Number":"21662","RawContent":null,"Title":"Creating a TaskCompletionSource with any TaskCreationOptions captures the current ExecutionContext","State":"open","Body":"Here's the repro:\r\n\r\n\r\n```C#\r\nusing System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace Repro\r\n{\r\n    public class Program\r\n    {\r\n        private static Task s_task;\r\n        private static AsyncLocal<object> s_current = new AsyncLocal<object>();\r\n\r\n        public static void Main(string[] args)\r\n        {\r\n            MakeRequest();\r\n\r\n            Console.ReadLine();\r\n        }\r\n\r\n        private static void MakeRequest()\r\n        {\r\n            s_current.Value = new object();\r\n\r\n            var tcs = new TaskCompletionSource<object>(TaskCreationOptions.None);\r\n            tcs.SetResult(null);\r\n\r\n            s_task = tcs.Task;\r\n\r\n            s_current.Value = null;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nLooking at this in a memory profile you can see the object is rooted by the static task:\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50388689-fc75fb00-06d2-11e9-9f0e-5e1f1760dfee.png)\r\n\r\nRemoving `TaskCreationOptions.None` doesn't exhibit the same behavior.\r\n\r\nFound via https://github.com/aspnet/AspNetCore/issues/4731#issuecomment-449632752.\r\n\r\nWe may want to patch this for 2.2\r\ncc @stephentoub \r\n","Url":"https://github.com/dotnet/coreclr/issues/21662","RelatedDescription":"Open issue \"Creating a TaskCompletionSource with any TaskCreationOptions captures the current ExecutionContext\" (#21662)"},{"Id":"393761969","IsPullRequest":true,"CreatedAt":"2018-12-23T23:47:50","Actor":"Dotnet-GitSync-Bot","Number":"21659","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/coreclr/pull/21659","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#21659)"},{"Id":"393753462","IsPullRequest":true,"CreatedAt":"2018-12-23T20:47:38","Actor":"dotnet-maestro-bot","Number":"21658","RawContent":null,"Title":"Update CoreClr, CoreFx to preview-27223-02, preview.18623.1, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21658","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to preview-27223-02, preview.18623.1, respectively (master)\" (#21658)"},{"Id":"393775623","IsPullRequest":false,"CreatedAt":"2018-12-23T19:38:20","Actor":"Kahbazi","Number":"21660","RawContent":null,"Title":"Inefficient codegen for multiple call for first argument in some cases","State":"open","Body":"As @danmosemsft said here https://github.com/dotnet/corefx/pull/32131#issuecomment-449598832 ,  the codegen for following code seems inefficient because of assigning the value that `edx` has to itself.\r\n\r\n```\r\nusing System;\r\npublic class A {}\r\npublic class C \r\n{  \r\n    public void Cast(object a) \r\n    {\r\n    \tif (a is A)\r\n            Console.WriteLine((A)a);\r\n    }\r\n}\r\n\r\nC.Cast(System.Object)\r\n    L0000: push esi\r\n    **** L0001: mov esi, edx ****\r\n    **** L0003: mov edx, esi ****\r\n    L0005: mov ecx, 0x21e5171c\r\n    L000a: call 0x73cfc540\r\n    L000f: test eax, eax\r\n    L0011: jz L001a\r\n    L0013: mov ecx, esi\r\n    L0015: call System.Console.WriteLine(System.Object)\r\n    L001a: pop esi\r\n    L001b: ret\r\n\r\n```\r\n\r\nI look a little more into this and I try to generate the similar codegen and I find this\r\n\r\n```\r\npublic class C \r\n{\r\n    public void Cast(int a)\r\n    {\r\n      \tWrite(a);\r\n      \tWrite(a);\r\n    }\r\n    \r\n    void Write(int x)\r\n    {\r\n    \tConsole.WriteLine(x);\r\n    }\r\n}\r\n\r\nC.Cast(Int32)\r\n    L0000: push ebp\r\n    L0001: mov ebp, esp\r\n    L0003: push edi\r\n    L0004: push esi\r\n    **** L0005: mov esi, ecx ****\r\n    **** L0007: mov edi, edx ****\r\n    **** L0009: mov ecx, esi ****\r\n    **** L000b: mov edx, edi ****\r\n    L000d: call dword [0x259a16a8]\r\n    L0013: mov ecx, esi\r\n    L0015: mov edx, edi\r\n    L0017: call dword [0x259a16a8]\r\n    L001d: pop esi\r\n    L001e: pop edi\r\n    L001f: pop ebp\r\n    L0020: ret\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21660","RelatedDescription":"Open issue \"Inefficient codegen for multiple call for first argument in some cases\" (#21660)"},{"Id":"393728349","IsPullRequest":true,"CreatedAt":"2018-12-23T12:47:12","Actor":"jkotas","Number":"21655","RawContent":null,"Title":"Delete CoreLib.FixupCoreLibName","State":"closed","Body":"This method doing blind find&replace of \"mscorlib\" with \"System.Private.CoreLib\". It is both incorrect (e.g. if the typename happened to contain \"mscorlib\" string) and inefficient (unnecessary allocations and use of reflection).","Url":"https://github.com/dotnet/coreclr/pull/21655","RelatedDescription":"Closed or merged PR \"Delete CoreLib.FixupCoreLibName\" (#21655)"},{"Id":"393703332","IsPullRequest":true,"CreatedAt":"2018-12-23T03:20:40","Actor":"marek-safar","Number":"21653","RawContent":null,"Title":"Extracts public IThreadPoolWorkItem interface to shared CoreLib","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21653","RelatedDescription":"Closed or merged PR \"Extracts public IThreadPoolWorkItem interface to shared CoreLib\" (#21653)"},{"Id":"393708650","IsPullRequest":true,"CreatedAt":"2018-12-23T02:36:33","Actor":"marek-safar","Number":"21654","RawContent":null,"Title":"Moves CoreLib to shared location","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21654","RelatedDescription":"Closed or merged PR \"Moves CoreLib to shared location\" (#21654)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"394210055","IsPullRequest":false,"CreatedAt":"2018-12-26T18:12:13","Actor":"spushpendra2000","Number":"10509","RawContent":null,"Title":"LD_LIBRARY_PATH icu issue","State":"closed","Body":"## Steps to reproduce\r\nI am using dotnet core 2.1 on centos. and trying to load the dll.\r\n\r\nWhen running , i am getting this error\r\nFailFast:\r\nCouldn't find a valid ICU package installed on the system. Set the configuration flag System.Globalization.Invariant to true if you want to run with no globalization support.\r\n\r\n   at System.Environment.FailFast(System.String)\r\n   at System.Globalization.GlobalizationMode.GetGlobalizationInvariantMode()\r\n   at System.Globalization.GlobalizationMode..cctor()\r\n   at System.Globalization.CultureData.CreateCultureWithInvariantData()\r\n   at System.Globalization.CultureData.get_Invariant()\r\n   at System.Globalization.CultureInfo..cctor()\r\n   at System.StringComparer..cctor()\r\n   at System.AppDomain.InitializeCompatibilityFlags()\r\n   at System.AppDomain.Setup(System.Object)\r\nAborted (core dumped)\r\n\r\n\r\nI can see the suggestion as per the link\r\nhttps://github.com/dotnet/core/blob/master/Documentation/build-and-install-rhel6-prerequisites.md\r\n\r\nBut I cannot change the icu path and when i tried creating the local folder 'netcoredeps' where my dll is residing it never work and i keep getting the same error.\r\nOnly after the setting the LD_LIBRARY_PATH, it is working.. Please suggest who to resolve this\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10509","RelatedDescription":"Closed issue \"LD_LIBRARY_PATH icu issue\" (#10509)"},{"Id":"394194627","IsPullRequest":false,"CreatedAt":"2018-12-26T18:10:41","Actor":"jkotas","Number":"10508","RawContent":null,"Title":"Bug: WinFX.targets was not found","State":"closed","Body":"_From @HamedMasafi on December 25, 2018 8:31_\n\nI have installed dotnet core 3 preview on opensuse leap 15.0\r\nThe file that I downloaded is: https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-3.0.100-preview-009812-linux-x64-binaries\r\n\r\nI've try to build an app:\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/> mkdir -p dwin && cd dwin\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet new winforms       \r\n\r\nWelcome to .NET Core!\r\n---------------------\r\nLearn more about .NET Core: https://aka.ms/dotnet-docs\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\nASP.NET Core\r\n------------\r\nSuccessfully installed the ASP.NET Core HTTPS Development Certificate.\r\nTo trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms refer to the platform specific documentation.\r\nFor more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.\r\nGetting ready...\r\nThe template \"Windows Forms Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /home/hamed/tmp/dwin/dwin.csproj...\r\n  Restoring packages for /home/hamed/tmp/dwin/dwin.csproj...\r\n  Installing Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing Microsoft.NETCore.Platforms 3.0.0-preview.18571.3.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing Microsoft.NETCore.Targets 2.0.0.\r\n  Installing Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Installing Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetAppHost 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostResolver 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostPolicy 3.0.0-preview-27122-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 3.0.0-preview-27122-01.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/hamed/tmp/dwin/obj/dwin.csproj.nuget.g.targets.\r\n  Restore completed in 4.87 min for /home/hamed/tmp/dwin/dwin.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\n```\r\nhamed@linux-f1fa:~/tmp/dwin> /opt/apps/dotnet/dotnet run\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.targets(14,2): error MSB4019: The imported project \"/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [/home/hamed/tmp/dwin/dwin.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\nThe file exists but in other case:\r\n```\r\n/opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFx.targets\r\n```\r\nThe 'x' on WinFx is lower but dotnet expect to it be upper.\r\n\r\nI've created a copy with this command but I know is not good way for solving bugs\r\n```\r\ncp /opt/apps/dotnet/sdk/3.0.100-preview-009812/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinF{x,X}.targets\r\n```\n\n_Copied from original issue: dotnet/coreclr#21673_","Url":"https://github.com/dotnet/cli/issues/10508","RelatedDescription":"Closed issue \"Bug: WinFX.targets was not found\" (#10508)"},{"Id":"393877717","IsPullRequest":true,"CreatedAt":"2018-12-24T17:58:53","Actor":"dotnet-maestro[bot]","Number":"10507","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18623.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10507","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10507)"},{"Id":"393688371","IsPullRequest":false,"CreatedAt":"2018-12-24T00:49:22","Actor":"DoCode","Number":"10506","RawContent":null,"Title":"[dotnet tools] Multiple commands/aliases","State":"closed","Body":"How to create one or more aliases for a dotnet tool?\r\n\r\nIn the project file only the `ToolCommandName` is available:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  ...\r\n  <PropertyGroup>\r\n    ...\r\n    <PackAsTool>true</PackAsTool>\r\n    <ToolCommandName>toolname</ToolCommandName>\r\n  ...\r\n  </PropertyGroup>\r\n  ...\r\n</Project>\r\n```\r\n\r\nExpected:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  ...\r\n  <PropertyGroup>\r\n    ...\r\n    <PackAsTool>true</PackAsTool>\r\n    <ToolCommandNames>toolname;tn;another-alias</ToolCommandNames>\r\n  ...\r\n  </PropertyGroup>\r\n  ...\r\n</Project>\r\n```\r\n\r\nSo the tool can be executed as\r\n```batch\r\n> toolname\r\n> tn\r\n> another-alias\r\n```","Url":"https://github.com/dotnet/cli/issues/10506","RelatedDescription":"Closed issue \"[dotnet tools] Multiple commands/aliases\" (#10506)"},{"Id":"393671616","IsPullRequest":true,"CreatedAt":"2018-12-23T18:29:06","Actor":"dotnet-maestro[bot]","Number":"10504","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18621.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18621.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10504","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10504)"},{"Id":"393680393","IsPullRequest":false,"CreatedAt":"2018-12-23T18:10:11","Actor":"TothZoltan2018","Number":"10505","RawContent":null,"Title":"Install the .NET SDK on Windows Subsystem Linux Ubuntu 18.04 - Reading package lists... Error!","State":"closed","Body":"## Steps to reproduce\r\nI try to install Install .NET SDK ([instruction here)](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial#install) to WSL Ubuntu 18.04 ([instruction here](https://docs.microsoft.com/en-us/windows/wsl/install-win10)) ([package here](https://www.microsoft.com/hu-hu/p/ubuntu-1804-lts/9n9tngvndl3q?activetab=pivot%3Aoverviewtab))\r\n\r\n## Expected  behavior\r\nSuccessfull installation of .Net SDK on Ubuntu WSL\r\n\r\n## Actual behavior\r\n\r\nI could install Ubuntu but I can not install .NET SDK. It looks as if something is wrong with permissions althought the commands I copied from the tutirial use sudo... \r\n<pre>\r\ntothz@hp-PC:~/repos$ wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb\r\ntothz@hp-PC:~/repos$ sudo dpkg -i packages-microsoft-prod.deb\r\n[sudo] password for tothz:\r\n(Reading database ... 28498 files and directories currently installed.)\r\nPreparing to unpack packages-microsoft-prod.deb ...\r\nUnpacking packages-microsoft-prod (1.0-ubuntu18.04.1) over (1.0-ubuntu18.04.1) ...\r\nSetting up packages-microsoft-prod (1.0-ubuntu18.04.1) ...\r\ntothz@hp-PC:~/repos$ sudo add-apt-repository universe\r\n'universe' distribution component is already enabled for all sources.\r\ntothz@hp-PC:~/repos$ sudo apt-get install apt-transport-https\r\nReading package lists... Error!\r\nE: Problem renaming the file /var/cache/apt/srcpkgcache.bin.peXWA6 to /var/cache/apt/srcpkgcache.bin - rename (13: Permission denied)\r\nE: Could not open file /var/lib/dpkg/status - open (2: No such file or directory)\r\nE: Problem opening /var/lib/dpkg/status\r\nE: The package lists or status file could not be parsed or opened.\r\ntothz@hp-PC:~/repos$\r\n</pre>\r\n\r\nI got some tips such as:\r\n$ sudo rm -fr /var/cache/apt\r\n$ sudo mv /var/lib/dpkg/status /var/lib/dpkg/status-bak  #could fail if it doesn't exist\r\n$ sudo touch /var/lib/dpkg/status\r\n$ sudo apt clean\r\n$ sudo apt update && sudo apt upgrade\r\n$ # try again, probably starting with sudo apt install apt-transport-https,\r\n$ # if that's what you are after\r\n\r\nHowever, all in vain.\r\n\r\n## Environment data\r\n\r\nMy Windows bulid number is: \"Microsoft Windows [Version 10.0.17134.471]\"\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10505","RelatedDescription":"Closed issue \"Install the .NET SDK on Windows Subsystem Linux Ubuntu 18.04 - Reading package lists... Error!\" (#10505)"},{"Id":"393671613","IsPullRequest":true,"CreatedAt":"2018-12-22T13:02:43","Actor":"dotnet-maestro[bot]","Number":"10503","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10503","RelatedDescription":"Open PR \"Update dependency files\" (#10503)"},{"Id":"393614641","IsPullRequest":false,"CreatedAt":"2018-12-21T23:07:21","Actor":"dsplaisted","Number":"10502","RawContent":null,"Title":"Handle targeting packs in PreserveCompilationContext","State":"open","Body":"When doing a build with PreserveCompilationContext, referenced assemblies are copied to the refs folder of the output directory.  However, assemblies coming from NuGet packages aren't copied, and are looked up in the NuGet cache at runtime.\r\n\r\nWith [Targeting packs](https://github.com/dotnet/cli/issues/10006) for .NET Core 3.0, the Framework reference assemblies don't go through the NuGet assets pipeline, and so they are now being copied to the refs folder in the output.\r\n\r\nWe should figure out what to do here.  Possibly the DependencyModel code needs to be updated to understand how to locate .NET Core targeting packs, the same way that it can do with .NET Framework targeting packs.\r\n\r\ncc @natemcmaster @eerhardt ","Url":"https://github.com/dotnet/cli/issues/10502","RelatedDescription":"Open issue \"Handle targeting packs in PreserveCompilationContext\" (#10502)"},{"Id":"393553001","IsPullRequest":false,"CreatedAt":"2018-12-21T18:35:34","Actor":"livarcocc","Number":"10501","RawContent":null,"Title":"Document Composable Shared frameworks design","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/10501","RelatedDescription":"Open issue \"Document Composable Shared frameworks design\" (#10501)"},{"Id":"393451631","IsPullRequest":true,"CreatedAt":"2018-12-21T18:14:47","Actor":"dotnet-maestro[bot]","Number":"10500","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18620.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10500","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10500)"},{"Id":"392592426","IsPullRequest":true,"CreatedAt":"2018-12-21T17:54:12","Actor":"dotnet-maestro[bot]","Number":"10494","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18618.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18619.4\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10494","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10494)"},{"Id":"393037859","IsPullRequest":true,"CreatedAt":"2018-12-20T21:31:45","Actor":"dotnet-maestro[bot]","Number":"10498","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18619.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10498","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10498)"},{"Id":"392984041","IsPullRequest":false,"CreatedAt":"2018-12-20T21:01:30","Actor":"nopara73","Number":"10497","RawContent":null,"Title":"Implement `dotnet telemetry on/off` command","State":"closed","Body":"I am building a privacy focused software (https://github.com/zkSNACKs/WalletWasabi/) with .NET Core.  \r\nWhile I am used to getting MS-shamed by some over-enthusiastic Linux users, once in a while their complains are on point. The issue of .NET telemetry is one of those things.  \r\nI have read the related issue here (https://github.com/dotnet/cli/issues/3093) and while I do not agree with, I acknowledge and respect the opinion and the decisions of the maintainers on this matter.  \r\n\r\nHowever I believe providing a\r\n\r\n- [ ] **preemptive** and\r\n- [ ] **easy way** to\r\n- [ ] **permanently** turn off the telemetry\r\n- [ ] while **avoiding future telemetry notifications** at updates\r\n\r\nis reasonable to ask for.\r\n\r\nBy **preemptively** I mean it should not start collecting data, only after the first notification is shown to the user.  \r\nI would suggest a command `dotnet telemetry on/off` to be an **easy way** to turn off the telemetry.  \r\nIt is important that it should turn off the telemetry **permanently**, so future updates won't set it back. I can't imagine that the user's intention is that updates to turn on the telemetry. \r\nAnd finally the purpose of **avoiding future telemetry notifications** is more like making sure the user won't get uncomfortable by reminding him or her about a feature (that is already turned off) that he or she may consider to be slightly unethical.\r\n![image](https://user-images.githubusercontent.com/9156103/50279307-9cb8ef00-0449-11e9-9cf4-d2fa0305961f.png)  ","Url":"https://github.com/dotnet/cli/issues/10497","RelatedDescription":"Closed issue \"Implement `dotnet telemetry on/off` command\" (#10497)"},{"Id":"393172376","IsPullRequest":false,"CreatedAt":"2018-12-20T19:00:41","Actor":"wli3","Number":"10499","RawContent":null,"Title":"Add run `dotnet new tool-manifest` to the error message of cannot find manifest","State":"open","Body":"We should guide the user to run _dotnet new tool-manifest_ if they want to create it when there is no manifest in _dotnet tool restore_ or _dotnet tool install mytool_ ","Url":"https://github.com/dotnet/cli/issues/10499","RelatedDescription":"Open issue \"Add run `dotnet new tool-manifest` to the error message of cannot find manifest\" (#10499)"},{"Id":"392809570","IsPullRequest":false,"CreatedAt":"2018-12-19T22:53:17","Actor":"nguerrera","Number":"10496","RawContent":null,"Title":"Determine how to version in-box RID graph","State":"open","Body":"For initial bring-up, we will have exactly one version of the RID graph in the .NET Core SDK.\r\n\r\nWe need to figure out how to prevent breaking changes. By this we mean that we don't want the assets selected in a build to change with an sdk change and no project change. We thought about versioning it by TFM, but there's just one Platforms package today with increasing version for all TFMs.\r\n\r\ncc @dsplaisted \r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10496","RelatedDescription":"Open issue \"Determine how to version in-box RID graph\" (#10496)"},{"Id":"392592476","IsPullRequest":true,"CreatedAt":"2018-12-19T18:16:02","Actor":"dotnet-maestro[bot]","Number":"10495","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18618.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10495","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10495)"},{"Id":"392432051","IsPullRequest":false,"CreatedAt":"2018-12-19T17:50:40","Actor":"aaronlcope","Number":"10493","RawContent":null,"Title":"dotnet build-server shutdown won't stop dotnet.exe during tests","State":"closed","Body":"## Steps to reproduce\r\n(inside a shell script)\r\ndotnet test /nodereuse:false\r\n\r\nCtrl-C to exit build. \r\nCtrl-C is trapped on user entry (snippet from shell script)\r\ntrap \"trap_ctrlc\" 2\r\nfunction trap_ctrlc ()\r\n{\r\n    dotnet build-server shutdown --msbuild --razor --vbcscompiler\r\n    # where is the option for tests? --test\r\n    # IMPORTANT: my project uses xunit\r\n    exit 2\r\n}\r\n\r\n## Expected  behavior\r\nI would think that the tests run under msbuild...which, if you cancel during the middle of tests, the shutdown of the build server should kill the associated dotnet.exe processes, but it doesn't. I try to build again w/out shutting those processes down and the build fails b/c the dll is in use (by one or both of the orphaned dotnet.exe processes). As soon as I manually kill the orphaned dotnet.exe processes in task manager, I can then build again.\r\n\r\n## Actual behavior\r\nIf I cancel (Ctrl-C) prior to the tests starting, the build server shuts down all the dotnet.exe processes properly. The only orphaned dotnet.exe processes left around on cancellation of the shell script is whenever I interrupt the script while the xunit test runner is running.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview1-002702 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003121 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.0-rc2-3002702 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10493","RelatedDescription":"Closed issue \"dotnet build-server shutdown won't stop dotnet.exe during tests\" (#10493)"},{"Id":"392369304","IsPullRequest":false,"CreatedAt":"2018-12-18T22:51:18","Actor":"richlander","Number":"10492","RawContent":null,"Title":"Cannot use `dotnet new` to target older runtimes","State":"open","Body":"I have both .NET Core 3 Preview 1 and .NET Core 2.2 SDKs installed. I want to do this:\r\n\r\n```console\r\ndotnet new console --framework netcoreapp2.2 -o app22\r\n```\r\nIt doesn't work. I'm not happy using global.json for this scenario. I should be able to target any .NET Core version that I want. If that version isn't supported on my machine currently, I should get instructions on what to do.\r\n\r\nSomething like this: https://github.com/dotnet/templating/blob/master/README.md#info-for-dotnet-new-users ","Url":"https://github.com/dotnet/cli/issues/10492","RelatedDescription":"Open issue \"Cannot use `dotnet new` to target older runtimes\" (#10492)"},{"Id":"392340749","IsPullRequest":true,"CreatedAt":"2018-12-18T21:21:03","Actor":"vitek-karas","Number":"10491","RawContent":null,"Title":"Improve --roll-forward-on-no-candidate-fx usage text.","State":"open","Body":"Make it explicit that the --roll-forward-on-no-candidate-fx options requires a value. Modify the description since the argument sets the behavior (it doesn't just enable it, it can also disable and so on).\r\n\r\nRelated to dotnet/core-setup#4873","Url":"https://github.com/dotnet/cli/pull/10491","RelatedDescription":"Open PR \"Improve --roll-forward-on-no-candidate-fx usage text.\" (#10491)"},{"Id":"392147416","IsPullRequest":true,"CreatedAt":"2018-12-18T18:06:19","Actor":"dotnet-maestro[bot]","Number":"10489","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18617.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10489","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10489)"},{"Id":"392147458","IsPullRequest":true,"CreatedAt":"2018-12-18T17:44:43","Actor":"dotnet-maestro[bot]","Number":"10490","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18617.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10490","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10490)"},{"Id":"392005502","IsPullRequest":true,"CreatedAt":"2018-12-18T05:45:15","Actor":"flcdrg","Number":"10488","RawContent":null,"Title":"dotnet-install.ps1 - Only modify PATH if necessary","State":"open","Body":"Implements #10487\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10488","RelatedDescription":"Open PR \"dotnet-install.ps1 - Only modify PATH if necessary\" (#10488)"},{"Id":"392001609","IsPullRequest":false,"CreatedAt":"2018-12-18T05:24:25","Actor":"flcdrg","Number":"10487","RawContent":null,"Title":"dotnet-install.ps1 always modifies PATH","State":"open","Body":"## Steps to reproduce\r\n\r\nRun dotnet-install.ps1 more than once\r\n\r\n## Expected  behavior\r\n\r\nOnly one instance of \"C:\\Users\\David\\AppData\\Local\\Microsoft\\dotnet\" exists in PATH\r\n\r\n## Actual behavior\r\n\r\nPATH contains multiple references to the same directory\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10487","RelatedDescription":"Open issue \"dotnet-install.ps1 always modifies PATH\" (#10487)"},{"Id":"391959966","IsPullRequest":false,"CreatedAt":"2018-12-18T01:34:42","Actor":"wli3","Number":"10486","RawContent":null,"Title":"Block --interactive and --verbose:quiet","State":"open","Body":"only warning and error will show. So the output of `--interactive` will not be printed. Need to consider where to implement this, MSBuild or CLI","Url":"https://github.com/dotnet/cli/issues/10486","RelatedDescription":"Open issue \"Block --interactive and --verbose:quiet\" (#10486)"},{"Id":"391940539","IsPullRequest":true,"CreatedAt":"2018-12-18T00:01:08","Actor":"dotnet-bot","Number":"10485","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10485","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10485)"},{"Id":"391911957","IsPullRequest":false,"CreatedAt":"2018-12-17T22:14:07","Actor":"allanrodriguez","Number":"10484","RawContent":null,"Title":"NETSDK1007 error when building solution with ProjectReference tags in specific order","State":"open","Body":"## Steps to reproduce\r\n1. Build the [attached solution](https://github.com/dotnet/cli/files/2688002/NetSdk1007.zip). It should build successfully.\r\n2. In the NetSdk1007/NetSdk1007.csproj file, switch the position of the two ProjectReference tags such that they look like this:\r\n```\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\Dependency.Mocks\\Dependency.Mocks.csproj\" />\r\n  <ProjectReference Include=\"..\\LibraryUnderTest\\LibraryUnderTest.csproj\" />\r\n</ItemGroup>\r\n```\r\n3. Rebuild the solution using `dotnet build --no-incremental`.\r\n\r\n## Expected  behavior\r\nThe solution should build successfully for the .NET Core 2.1 and .NET Framework 4.7.1 platforms as in step 1.\r\n\r\n## Actual behavior\r\nBuilding the solution fails with the error `NETSDK1007: Cannot find project info for 'C:\\Projects\\NetSdk1007\\Dependency\\Dependency.csproj'. This can indicate a missing project reference.` The .NET Core build fails but the .NET Framework build succeeds.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:`\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/10484","RelatedDescription":"Open issue \"NETSDK1007 error when building solution with ProjectReference tags in specific order\" (#10484)"},{"Id":"391702774","IsPullRequest":true,"CreatedAt":"2018-12-17T16:55:36","Actor":"dotnet-maestro[bot]","Number":"10483","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18616.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10483","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10483)"},{"Id":"391702745","IsPullRequest":true,"CreatedAt":"2018-12-17T16:55:24","Actor":"dotnet-maestro[bot]","Number":"10482","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10482","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10482)"},{"Id":"391562210","IsPullRequest":false,"CreatedAt":"2018-12-17T16:40:14","Actor":"John0King","Number":"10480","RawContent":null,"Title":"`dotnet build /p:myproperty=value`  not always set property and no `dotnet run /p:property=value`","State":"closed","Body":"## Steps to reproduce\r\n1. create a console project \r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <DefineConstants Condition=\" '$(XXX)' == '1'\">X1</DefineConstants>\r\n    <DefineConstants Condition=\" '$(XXX)' == '2'\">X2</DefineConstants>\r\n    <DefineConstants Condition=\" '$(XXX)' == '3'\">X3</DefineConstants>\r\n  </PropertyGroup>\r\n  <Target Name=\"LogMyX\" BeforeTargets=\"Build\">\r\n    <Message Importance=\"high\" Text=\"'MyLogX $(XXX)'\" />\r\n  </Target>\r\n  <Target Name=\"LogMyXX\" AfterTargets=\"Build\">\r\n    <Message Importance=\"high\" Text=\"'MyLogX $(XXX)'\" />\r\n  </Target>\r\n</Project>\r\n```\r\n2. create a .cs file \r\n```C#\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n#if X1 \r\n            Console.WriteLine(\"Hello X1!\");\r\n#elif X2\r\n            Console.WriteLine(\"Hello X2!\");\r\n#elif X3\r\n            Console.WriteLine(\"Hello X3!\");\r\n#endif\r\n        }\r\n    }\r\n```\r\n## Expected  behavior\r\n`dotnet build /p:xxx=1`  =>compile log:\"MyLogX 1\"=>(run)  => \"Hello X1\"\r\n`dotnet build /p:xxx=2`  =>compile log:\"MyLogX 2\"=>(run)  => \"Hello X2\"\r\n`dotnet build /p:xxx=3`  =>compile log:\"MyLogX 3\"=>(run)  => \"Hello X3\"\r\n\r\n## Actual behavior\r\n`dotnet build /p:xxx=1`  =>compile log:\"MyLogX 1\"=>(run)  => \"Hello X1\"\r\n`dotnet build /p:xxx=2`  =>compile log:\"MyLogX 2\"=>(run)  => \"Hello X1\"\r\n`dotnet build /p:xxx=3`  =>compile log:\"MyLogX 3\"=>(run)  => \"Hello X1\"\r\n\r\n**I must use `dotnet clean` before `dotnet build`  or save the csproj file again**\r\n\r\nand I can not use `dotnet run /p:xxx=1`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10480","RelatedDescription":"Closed issue \"`dotnet build /p:myproperty=value`  not always set property and no `dotnet run /p:property=value`\" (#10480)"},{"Id":"391694348","IsPullRequest":false,"CreatedAt":"2018-12-17T16:36:11","Actor":"mmisztal1980","Number":"10481","RawContent":null,"Title":"dotnet restore hangs on a TFS build agent","State":"closed","Body":"## Steps to reproduce\r\nHere's our build log obtained with **dotnet restore -v diag**\r\nhttps://gist.github.com/mmisztal1980/6ce8e016da620efbf0aa4693d4bc85b9\r\n\r\n## Expected  behavior\r\nWe expect our build agent to complete this step (TFS dotnet task  v2.*, targeting **/*.csproj (linked by default))\r\n\r\n## Actual behavior\r\nThe build appears to hang after iterating over the last project in the **/*.csproj.\r\nThe last target appears to be **_GenerateRestoreProjectPathWalk** \r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\noctopus@build14:~/agent/_work/1/s/src$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n\r\nWe'd apreciate some information how to diagnose this situation as we do not see any errors. This behavior has been observed in the master and feature branches of our repo.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10481","RelatedDescription":"Closed issue \"dotnet restore hangs on a TFS build agent\" (#10481)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"393264404","IsPullRequest":true,"CreatedAt":"2018-12-26T21:14:18","Actor":"terrajobst","Number":"1039","RawContent":null,"Title":"Fix representation of enum values","State":"closed","Body":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***","Url":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Closed or merged PR \"Fix representation of enum values\" (#1039)"},{"Id":"393009607","IsPullRequest":false,"CreatedAt":"2018-12-21T01:08:29","Actor":"ViktorHofer","Number":"1036","RawContent":null,"Title":"Disable Jenkins","State":"closed","Body":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?","Url":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036)"},{"Id":"393267915","IsPullRequest":true,"CreatedAt":"2018-12-21T00:51:26","Actor":"ViktorHofer","Number":"1040","RawContent":null,"Title":"Remove the manual config system","State":"open","Body":"Fixes https://github.com/dotnet/standard/issues/1032","Url":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Open PR \"Remove the manual config system\" (#1040)"},{"Id":"393171059","IsPullRequest":true,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1038","RawContent":null,"Title":"Add APICompat run for NetStandard2.0","State":"closed","Body":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029","Url":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Closed or merged PR \"Add APICompat run for NetStandard2.0\" (#1038)"},{"Id":"392786865","IsPullRequest":false,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1029","RawContent":null,"Title":"Add ApiCompat run for netstandard2.0","State":"closed","Body":"We should add an APICompat run that checks against 2.0, similar the ones we already have for 1.0-1.6: https://github.com/dotnet/standard/blob/master/apicompat/baselines/ApiCompatBaseline.netstandard1.6.txt","Url":"https://github.com/dotnet/standard/issues/1029","RelatedDescription":"Closed issue \"Add ApiCompat run for netstandard2.0\" (#1029)"},{"Id":"393005614","IsPullRequest":true,"CreatedAt":"2018-12-20T18:07:43","Actor":"ViktorHofer","Number":"1035","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\nFailing CI jobs are leftovers: https://github.com/dotnet/standard/issues/1036\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1035","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1035)"},{"Id":"393015237","IsPullRequest":false,"CreatedAt":"2018-12-20T11:58:02","Actor":"ViktorHofer","Number":"1037","RawContent":null,"Title":"Group source items in a src folder","State":"open","Body":"We should move\r\n- netstandard\r\n- platforms\r\n- apicompat\r\n- dir.traversal.targets\r\n- package.builds\r\n- src.builds\r\n\r\ninto a `src` folder to align with other dotnet repos.\r\n\r\ncc @wtgodbe @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/issues/1037","RelatedDescription":"Open issue \"Group source items in a src folder\" (#1037)"},{"Id":"393001679","IsPullRequest":true,"CreatedAt":"2018-12-20T11:31:22","Actor":"ViktorHofer","Number":"1034","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1034","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1034)"},{"Id":"392986163","IsPullRequest":false,"CreatedAt":"2018-12-20T10:40:01","Actor":"ViktorHofer","Number":"1032","RawContent":null,"Title":"Remove slim configuration system and stop overloading Configuration","State":"open","Body":"We should stop overloading the `Configuration` property in favor of the right msbuild properties and remove the `ConfigurationGroup` property to enable native VS support and remove a lot of obsolete stuff.\r\n\r\n```\r\n  <PropertyGroup Condition=\"'$(Configuration)'==''\">\r\n    <ConfigurationGroup Condition=\"'$(ConfigurationGroup)'==''\">Debug</ConfigurationGroup>\r\n    <Configuration>$(ConfigurationGroup)</Configuration>\r\n    <Configuration Condition=\"'$(TargetGroup)'!=''\">$(TargetGroup)_$(Configuration)</Configuration>\r\n    <Configuration Condition=\"'$(OSGroup)'!='' and '$(OSGroup)'!='AnyOS'\">$(OSGroup)_$(Configuration)</Configuration>\r\n  </PropertyGroup>\r\n```\r\n\r\ncc @ericstj @wtgodbe ","Url":"https://github.com/dotnet/standard/issues/1032","RelatedDescription":"Open issue \"Remove slim configuration system and stop overloading Configuration\" (#1032)"},{"Id":"392982975","IsPullRequest":false,"CreatedAt":"2018-12-20T10:31:53","Actor":"ViktorHofer","Number":"1031","RawContent":null,"Title":"Remove depproj approach and enable project restore","State":"open","Body":"As discussed in another PR I think it makes sense to remove the depproj approach here in the standard repo and follow the usual way of referencing packages directly in the respective project, in this case netstandard.csproj. Also the netstandard.builds file which restores for different frameworks can be incorporated in the csproj by adding a `TargetFrameworks` property and right PackageReference conditions. \r\n\r\ncc @wtgodbe @ericstj ","Url":"https://github.com/dotnet/standard/issues/1031","RelatedDescription":"Open issue \"Remove depproj approach and enable project restore\" (#1031)"},{"Id":"392822069","IsPullRequest":true,"CreatedAt":"2018-12-20T10:07:40","Actor":"wtgodbe","Number":"1030","RawContent":null,"Title":"Delete CI & redundant publish file","State":"closed","Body":"This deletes the old `netci.groovy` file, since we're using Azure DevOps for CI now. It also deletes `publish.msbuild`, which isn't used anywhere.\r\n\r\n@ViktorHofer PTAL","Url":"https://github.com/dotnet/standard/pull/1030","RelatedDescription":"Closed or merged PR \"Delete CI & redundant publish file\" (#1030)"},{"Id":"391885087","IsPullRequest":true,"CreatedAt":"2018-12-19T23:33:25","Actor":"wtgodbe","Number":"1027","RawContent":null,"Title":"Build Standard entirely against Arcade, without Buildtools","State":"closed","Body":"This cuts out buildtools entirely from the Standard repo, so that we fully rely on the Arcade SDK to build against instead. It replaces the functionality for code analyzers, `ValidateApiCompatForSrc`, and the build tasks.\r\n\r\n@ericstj @safern @danmosemsft @ViktorHofer @chcosta PTAL\r\n\r\nCC @karelz ","Url":"https://github.com/dotnet/standard/pull/1027","RelatedDescription":"Closed or merged PR \"Build Standard entirely against Arcade, without Buildtools\" (#1027)"},{"Id":"390377097","IsPullRequest":true,"CreatedAt":"2018-12-19T01:30:18","Actor":"terrajobst","Number":"1013","RawContent":null,"Title":"Add missing readonly modifiers","State":"closed","Body":"This fixes #842 (or at least is a sizable down payment).","Url":"https://github.com/dotnet/standard/pull/1013","RelatedDescription":"Closed or merged PR \"Add missing readonly modifiers\" (#1013)"},{"Id":"390839367","IsPullRequest":true,"CreatedAt":"2018-12-19T01:29:43","Actor":"terrajobst","Number":"1020","RawContent":null,"Title":"Reduce noise in reference assemblies","State":"closed","Body":"This doesn't change any APIs. It's just reducing noise from in the textual diff of the reference assemblies.\r\n\r\n* Fix trailing whitespace (69cb85e)\r\n* Mark types as partial (c9725f7)\r\n* Replace handwritten base calls with generated ones (78649f6)\r\n","Url":"https://github.com/dotnet/standard/pull/1020","RelatedDescription":"Closed or merged PR \"Reduce noise in reference assemblies\" (#1020)"},{"Id":"392146465","IsPullRequest":true,"CreatedAt":"2018-12-18T13:01:40","Actor":"dotnet-maestro[bot]","Number":"1028","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18617.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18618.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1028","RelatedDescription":"Open PR \"Update dependency files\" (#1028)"},{"Id":"390383237","IsPullRequest":true,"CreatedAt":"2018-12-17T19:11:23","Actor":"terrajobst","Number":"1014","RawContent":null,"Title":"Add IAsyncDisposable","State":"closed","Body":"This adds API support for the new C# 8 feature to call dispose asynchronously:\r\n\r\n```C#\r\nawait using(var stream = File.OpenWrite(path))\r\n{\r\n    await data.WriteAsync(stream);\r\n}\r\n```\r\n\r\nFor more details, see:\r\n\r\nhttps://github.com/dotnet/csharplang/blob/master/proposals/async-streams.md","Url":"https://github.com/dotnet/standard/pull/1014","RelatedDescription":"Closed or merged PR \"Add IAsyncDisposable\" (#1014)"},{"Id":"391702003","IsPullRequest":true,"CreatedAt":"2018-12-17T15:07:31","Actor":"dotnet-maestro[bot]","Number":"1026","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1026","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1026)"},{"Id":"391465145","IsPullRequest":true,"CreatedAt":"2018-12-16T19:53:13","Actor":"dotnet-maestro[bot]","Number":"1025","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18615.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1025","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1025)"},{"Id":"391463924","IsPullRequest":false,"CreatedAt":"2018-12-16T12:45:44","Actor":"dmitriyse","Number":"1024","RawContent":null,"Title":"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset","State":"open","Body":"Please open new .NetStandard branch with deep refresh of .Net API surface.\r\nCurrently .NetStandard 2.0 and it's successor .NetStandard 2.1 contains everything that were added in .net since version 1.0. Some API is already outdated and another will become outdated soon.\r\n\r\n.Net Standard 2.1 have some positive movements. It's drops some components to out of standard into additional components.\r\n\r\nBut it's not enough. It's time to stay in .Net Standard only good and modern parts.\r\nFor example:\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(T[] array);\r\n     // ...\r\n}\r\n```\r\ncan be replaced with:\r\n\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(Span<T> output);\r\n     // ...\r\n}\r\n```\r\nAssemblies targeting .NetStandard 2.0, .NetStandard 2.1 and proposed .NetStandard 3.0.0 should be capable to work side-by-side inside the same AppDomain.\r\n\r\nTODO: Add diagram.\r\n","Url":"https://github.com/dotnet/standard/issues/1024","RelatedDescription":"Open issue \"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset\" (#1024)"},{"Id":"391376312","IsPullRequest":true,"CreatedAt":"2018-12-15T13:41:30","Actor":"dotnet-maestro[bot]","Number":"1023","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18614.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1023","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1023)"},{"Id":"391102384","IsPullRequest":true,"CreatedAt":"2018-12-14T13:21:43","Actor":"dotnet-maestro[bot]","Number":"1021","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18613.20\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18613.20\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1021","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1021)"},{"Id":"390833738","IsPullRequest":true,"CreatedAt":"2018-12-13T19:52:44","Actor":"terrajobst","Number":"1019","RawContent":null,"Title":"Require support for default implementations of interfaces","State":"open","Body":"This marker will require all implementations of .NET Standard 2.1 to support default implementations of interfaces. Needless to say that this has runtime impact. The benefit of doing this in the standard is that it allows library authors to use this feature for their interfaces. The downside is that that this is potentially a lot of runtime work. I'm curious to how the board feels about absorbing that change for .NET Standard 2.1, especially @dotnet/nsboard-xamarin and @dotnet/nsboard-unity.","Url":"https://github.com/dotnet/standard/pull/1019","RelatedDescription":"Open PR \"Require support for default implementations of interfaces\" (#1019)"},{"Id":"390830254","IsPullRequest":true,"CreatedAt":"2018-12-13T19:42:55","Actor":"terrajobst","Number":"1018","RawContent":null,"Title":"WIP: Add support for Index and Range","State":"open","Body":"This adds the basic APIs for `Index` and `Range`. However, it misses most of the [companion APIs](https://github.com/dotnet/designs/blob/master/accepted/system-range/system-range.md#companion-apis) because they don't even exist in CoreFx yet. The work is tracked in https://github.com/dotnet/corefx/issues/34076. Once done, I'll update the PR to reflect the final API shape.\r\n\r\nFor now, this PR is just a tracking item to remind us to get it done for 2.1.","Url":"https://github.com/dotnet/standard/pull/1018","RelatedDescription":"Open PR \"WIP: Add support for Index and Range\" (#1018)"},{"Id":"390822437","IsPullRequest":true,"CreatedAt":"2018-12-13T19:20:57","Actor":"terrajobst","Number":"1017","RawContent":null,"Title":"WIP: Add IAsyncEnumerable<T>","State":"open","Body":"This API is depending on the CoreFX work: dotnet/corefx#33909. Once we closed on the design I'll update this PR.","Url":"https://github.com/dotnet/standard/pull/1017","RelatedDescription":"Open PR \"WIP: Add IAsyncEnumerable<T>\" (#1017)"},{"Id":"390444044","IsPullRequest":true,"CreatedAt":"2018-12-13T18:57:05","Actor":"wtgodbe","Number":"1015","RawContent":null,"Title":"Enable publishing to build-assets registry","State":"closed","Body":"Now that Standard is placing build output in `artifacts`, we can opt-in to publishing build assets to the BAR.\r\n\r\n@chcosta @mmitche PTAL","Url":"https://github.com/dotnet/standard/pull/1015","RelatedDescription":"Closed or merged PR \"Enable publishing to build-assets registry\" (#1015)"},{"Id":"390668875","IsPullRequest":true,"CreatedAt":"2018-12-13T13:31:43","Actor":"dotnet-maestro[bot]","Number":"1016","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18612.12\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18612.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1016","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1016)"},{"Id":"390354570","IsPullRequest":true,"CreatedAt":"2018-12-12T23:16:02","Actor":"terrajobst","Number":"1012","RawContent":null,"Title":"Add private fields for structs","State":"closed","Body":"No public API changes, but this fixes #678. \r\n\r\nIn a nutshell, the compiler needs to know whether a struct has any fields in order to apply definitive assignment rules. While stripping all private fields from types is generally OK, we can't do this for structs. Fortunately, for private fields the compiler doesn't really care what they are, but what their characteristics are. For example:\r\n\r\n1. Does the struct have any fields?\r\n\r\n2. Does the struct contain any reference types (to validate generic instantiations that have the unmanaged constraint)?\r\n\r\n3. Does the struct use the generic parameter in a field declaration (to validate cyclic layout problems)?\r\n\r\nThis adds dummy fields to structs to conform to these rules. These aren't computed separately but are instead taken from .NET Core.\r\n\r\nFor more details, see this issue in CoreFX:\r\n\r\nhttps://github.com/dotnet/corefx/issues/6185","Url":"https://github.com/dotnet/standard/pull/1012","RelatedDescription":"Closed or merged PR \"Add private fields for structs\" (#1012)"},{"Id":"390224712","IsPullRequest":false,"CreatedAt":"2018-12-12T19:00:27","Actor":"YairHalberstadt","Number":"1011","RawContent":null,"Title":"Add HashSet.TryGetValue to .Net Standard","State":"closed","Body":"This method is already implemented by .Net Core 2.0 and .Net Framework 4.7.2, so I imagine this would be relatively easy to include in .Net Standard 2.1.","Url":"https://github.com/dotnet/standard/issues/1011","RelatedDescription":"Closed issue \"Add HashSet.TryGetValue to .Net Standard\" (#1011)"},{"Id":"390052989","IsPullRequest":true,"CreatedAt":"2018-12-12T16:50:02","Actor":"terrajobst","Number":"1009","RawContent":null,"Title":"Clean-up reference assembly","State":"closed","Body":"This aligns the physical representation of the reference assembly with how it look like in .NET Core. No changes to the API surface; it's just to remove noise in future diffs.","Url":"https://github.com/dotnet/standard/pull/1009","RelatedDescription":"Closed or merged PR \"Clean-up reference assembly\" (#1009)"},{"Id":"390215935","IsPullRequest":true,"CreatedAt":"2018-12-12T13:46:59","Actor":"dotnet-maestro[bot]","Number":"1010","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18611.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1010","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1010)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"394135780","IsPullRequest":false,"CreatedAt":"2018-12-27T03:56:50","Actor":"uyquoc","Number":"34244","RawContent":null,"Title":"Issue with CookieContainer when use HttpClientFactory","State":"closed","Body":"Since `HttpClientHandler` objects are pooled when using `HttpClientFactory`, we can have a thread-safe issue with `CookieContainer` of  `HttpClientHandler` object. A sample case as follows:\r\nAssume we have a web application call to api/Token (GET) of API server.\r\n\r\nWeb:\r\n```c#\r\n       public async Task<string> GetToken()\r\n\r\n        {\r\n            var httpClient = _clientFactory.CreateClient();\r\n            var response = await httpClient.GetAsync(\"http://api.local:5089/api/token\");\r\n            var token = await response.Content.ReadAsStringAsync();\r\n            return token;\r\n        }\r\n```\r\n\r\nAPI:\r\n```c#\r\n        public ActionResult<string> Get()\r\n        {   \r\n            string token = HttpContext.Request.Cookies.ContainsKey(\"Token\") ? \r\n                           HttpContext.Request.Cookies[\"Token\"] : Guid.NewGuid().ToString();\r\n            \r\n            HttpContext.Response.Cookies.Append(\"Token\", token);\r\n            return token;\r\n        }\r\n```\r\n\r\nAfter the first request to API, in Web application, `response.Headers.GetValues(\"Set-Cookies\")` will show \"Token\" cookie's value equals \"abc\"\r\nAfter the second request to API, in Web application, `response.Headers.GetValues(\"Set-Cookies\")` will show \"Token\" cookie's value also equals \"abc\"\r\nIf we use `new HttpClient()`, each request to API, we will get new Token value, but we cannot achieve this \r\npurpose with `HttpClientFatory`. How could we deal with this problem when we have to use Cookie in API?","Url":"https://github.com/dotnet/corefx/issues/34244","RelatedDescription":"Closed issue \"Issue with CookieContainer when use HttpClientFactory\" (#34244)"},{"Id":"394222916","IsPullRequest":true,"CreatedAt":"2018-12-27T03:53:16","Actor":"danmosemsft","Number":"34249","RawContent":null,"Title":"Update pinvoke guidelines","State":"closed","Body":"Added some clarification on the width of types, on padding, and the `fixed` keyword. All these were things I had to figure out recently, so it would be useful to document for others.\r\n\r\nIt would also be nice to document when to use `UIntPtr` instead of `IntPtr`, when it isn't dictated by the native header - for example `void*`. Perhaps the guidance is to always use `IntPtr` but that can [overflow on cast](https://stackoverflow.com/a/13171595) so it could matter.","Url":"https://github.com/dotnet/corefx/pull/34249","RelatedDescription":"Closed or merged PR \"Update pinvoke guidelines\" (#34249)"},{"Id":"394258747","IsPullRequest":false,"CreatedAt":"2018-12-26T23:34:22","Actor":"DustinCampbell","Number":"34252","RawContent":null,"Title":"ColorConverter in System.ComponentModel.TypeConverters does not handle SystemColors","State":"open","Body":"It is not possible to set the `BackColor` and `ForeColor` properties of a control to a named value from `SystemColors` using a `PropertyGrid`. This is due to the fact that the `ColorConverter` in .NET Core 3 does not support `SystemColors`.\r\n\r\nThere are two versions of ColorConverter in corefx:\r\n\r\n* [System.ComponentModel.TypeConverter/src/System/Drawing/ColorConverter.cs](https://github.com/dotnet/corefx/blob/master/src/System.ComponentModel.TypeConverter/src/System/Drawing/ColorConverter.cs)\r\n* [System.Drawing.Common/src/System/Drawing/ColorConverter.cs\r\n](https://github.com/dotnet/corefx/blob/master/src/System.Drawing.Common/src/System/Drawing/ColorConverter.cs)\r\n\r\nThe first version does not support SystemColors. Unfortunately, that is also the version that is used for properties of type `System.Drawing.Color` in property descriptors ([link](https://github.com/dotnet/corefx/blob/a5c7e7295ac2e3c889d347d0285794266797db87/src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ReflectTypeDescriptionProvider.cs#L130)), which is why this causes the `PropertyGrid` to fail.\r\n\r\ncc @Tanya-Solyanik ","Url":"https://github.com/dotnet/corefx/issues/34252","RelatedDescription":"Open issue \"ColorConverter in System.ComponentModel.TypeConverters does not handle SystemColors\" (#34252)"},{"Id":"393703364","IsPullRequest":false,"CreatedAt":"2018-12-26T20:28:17","Actor":"lyzerk","Number":"34223","RawContent":null,"Title":"HttpClient.SendAync freezing","State":"closed","Body":"Hello,\r\n\r\nThis week I was preparing to publish a one of my side projects, which I called it as \"[DDown](https://github.com/lyzerk/DDown)\". It is a downloader API for .net standard 2.0. I'm working on the project almost a year. 3-4 months before everything was working perfect, API was dividing the file to the partitions, the CLI shows a percentage bar and so on. So, this week I wanted to publish the project and I have published it. I was sure everything was working perfectly in side of the API because I wasn't touched anything on the API. On the other hand, the missing part was cli commands and options. So, I have done those things and I published it under name \"deget\" as global dotnet tool. \r\n\r\nThe first problem was, the cli UI was blocked for a minute then partitions are completed without the update cli UI and all done (%100). So, I debugged the code  and the problem was _client.SendAsync method returns response in almost a minute. You can see the code with following address.\r\n\r\n[https://github.com/lyzerk/DDown/blob/master/src/DDown/Downloader.cs#L167](https://github.com/lyzerk/DDown/blob/master/src/DDown/Downloader.cs#L167)\r\n\r\nWhat have I tried ?\r\n- I have tried different sources.\r\n- I have tried the tool on different operating systems (osx and win).\r\n- I have debugged the code and SendAsync method was returning in a minute. (With 200 MB, but with lower file sizes the time decreases.)\r\n- I have watch the network traffic and the tool downloads the file but it does not give back anything and suddenly the download completes. (Not even breakpoints)\r\n- The CLI project was .netcoreapp 2.0 and I have upgraded it to 2.1. I have rollbacked to 2.0 and tried again but still same.\r\n\r\nCLI code of the project :\r\n[https://github.com/lyzerk/DDown/blob/master/src/DDown.CLI/Program.cs](https://github.com/lyzerk/DDown/blob/master/src/DDown.CLI/Program.cs)\r\n\r\nI couldn't find a solution, and I don't know what to do right now. Is it a bug or am I missing something ?\r\n\r\nThanks,\r\nAlim \r\n","Url":"https://github.com/dotnet/corefx/issues/34223","RelatedDescription":"Closed issue \"HttpClient.SendAync freezing\" (#34223)"},{"Id":"394195465","IsPullRequest":true,"CreatedAt":"2018-12-26T19:56:44","Actor":"ichensky","Number":"34247","RawContent":null,"Title":"fix bug in /src/Native/build-native.cmd","State":"closed","Body":"Without this change script not executes. ","Url":"https://github.com/dotnet/corefx/pull/34247","RelatedDescription":"Closed or merged PR \"fix bug in /src/Native/build-native.cmd\" (#34247)"},{"Id":"394224655","IsPullRequest":true,"CreatedAt":"2018-12-26T19:08:15","Actor":"Dotnet-GitSync-Bot","Number":"34250","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"open","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corefx/pull/34250","RelatedDescription":"Open PR \"Mirror changes from dotnet/corert\" (#34250)"},{"Id":"394216067","IsPullRequest":false,"CreatedAt":"2018-12-26T18:12:10","Actor":"livarcocc","Number":"34248","RawContent":null,"Title":"LD_LIBRARY_PATH icu issue","State":"open","Body":"_From @spushpendra2000 on December 26, 2018 17:32_\n\n## Steps to reproduce\r\nI am using dotnet core 2.1 on centos. and trying to load the dll.\r\n\r\nWhen running , i am getting this error\r\nFailFast:\r\nCouldn't find a valid ICU package installed on the system. Set the configuration flag System.Globalization.Invariant to true if you want to run with no globalization support.\r\n\r\n   at System.Environment.FailFast(System.String)\r\n   at System.Globalization.GlobalizationMode.GetGlobalizationInvariantMode()\r\n   at System.Globalization.GlobalizationMode..cctor()\r\n   at System.Globalization.CultureData.CreateCultureWithInvariantData()\r\n   at System.Globalization.CultureData.get_Invariant()\r\n   at System.Globalization.CultureInfo..cctor()\r\n   at System.StringComparer..cctor()\r\n   at System.AppDomain.InitializeCompatibilityFlags()\r\n   at System.AppDomain.Setup(System.Object)\r\nAborted (core dumped)\r\n\r\n\r\nI can see the suggestion as per the link\r\nhttps://github.com/dotnet/core/blob/master/Documentation/build-and-install-rhel6-prerequisites.md\r\n\r\nBut I cannot change the icu path and when i tried creating the local folder 'netcoredeps' where my dll is residing it never work and i keep getting the same error.\r\nOnly after the setting the LD_LIBRARY_PATH, it is working.. Please suggest who to resolve this\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#10509_","Url":"https://github.com/dotnet/corefx/issues/34248","RelatedDescription":"Open issue \"LD_LIBRARY_PATH icu issue\" (#34248)"},{"Id":"394177412","IsPullRequest":true,"CreatedAt":"2018-12-26T14:21:23","Actor":"MarcoRossignoli","Number":"34246","RawContent":null,"Title":"Update dogfooding guide","State":"open","Body":"I'm helping a new contributor on gitter.\r\nNew packages folder is under artifacts for new build and under bin on servicing.\r\n\r\n/cc @ViktorHofer @jkotas \r\n\r\nAside question, if I run app on console it works well(custom sdk cli):\r\n```\r\ndotnet\\dotnet.exe  D:\\git\\playground\\dogfooding\\bin\\Debug\\netcoreapp3.0\\win-x64\\dogfooding.dll\r\n```\r\nand also override lib on published folder works well, however if I try to build/run from VS I get error \r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNETSDK1045\tThe current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\tdogfooding\tC:\\Program Files\\dotnet\\sdk\\2.2.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\t137\t\r\n```\r\nThe error is clear, is there a way to tell to VS to use my downloaded SDK for this project(I mean something csproj or similar trick).","Url":"https://github.com/dotnet/corefx/pull/34246","RelatedDescription":"Open PR \"Update dogfooding guide\" (#34246)"},{"Id":"394176043","IsPullRequest":true,"CreatedAt":"2018-12-26T14:13:24","Actor":"dotnet-maestro-bot","Number":"34245","RawContent":null,"Title":"Update CoreClr, CoreFx to preview-27227-01, preview.18626.2, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34245","RelatedDescription":"Open PR \"Update CoreClr, CoreFx to preview-27227-01, preview.18626.2, respectively (master)\" (#34245)"},{"Id":"394232703","IsPullRequest":false,"CreatedAt":"2018-12-26T11:20:16","Actor":"Lohnegrim","Number":"34251","RawContent":null,"Title":"Almost all functions in Microsoft.VisualBasic.Strings cannot directly be used in NET Core 3.0.0 Preview 1, but can be used by Microsoft.VisualBasic and get linked by the compiler to Microsoft.VisualBasic.Strings","State":"open","Body":".NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\nHave you experienced this same bug with .NET Framework?\r\nNo\r\n\r\nReporsteps:\r\n1. create a new project using: \r\ndotnet new console -lang vb\r\n2. edit the 'Program.vb', change the Console.Writeline to:\r\nConsole.WriteLine(Microsoft.VisualBasic.Strings.Left(\"Hello World!\",5))\r\n3. try to compile using: \r\ndotnet build\r\n4. You get this Error:\r\nerror BC30456: 'Left' is not a member of 'Strings'. \r\n5. Change the Code from Step 2 to:\r\nConsole.WriteLine(Microsoft.VisualBasic.Left(\"Hello World!\",5))\r\n6. Now the Project compiles and Runs fine, but if you check with ilspy or simmiler tools, you will see that the compiler linkes the Code to the same as in step 2.\r\n\r\nIf you try the same with a .Net Framework Project then it compiles fine in booth cases.\r\n\r\nExpected behavior:\r\nSame as .NET Framework","Url":"https://github.com/dotnet/corefx/issues/34251","RelatedDescription":"Open issue \"Almost all functions in Microsoft.VisualBasic.Strings cannot directly be used in NET Core 3.0.0 Preview 1, but can be used by Microsoft.VisualBasic and get linked by the compiler to Microsoft.VisualBasic.Strings\" (#34251)"},{"Id":"394120997","IsPullRequest":false,"CreatedAt":"2018-12-26T09:06:06","Actor":"lchhh1","Number":"34243","RawContent":null,"Title":"Coding style consistency","State":"open","Body":".NET has a long history. Its naming conventions vary from time to time, so there are different styles in the class libraries. Since we have determined a new style, why not convert those old ones for consistency? It would not be a breaking change.\r\n\r\nFor example, the private fields which are named `m_member`. :-)\r\n\r\n```\r\nWe use _camelCase for internal and private fields and use readonly where possible. Prefix internal and private instance fields with _, static fields with s_ and thread static fields with t_. When used on static fields, readonly should come after static (e.g. static readonly not readonly static). Public fields should be used sparingly and should use PascalCasing with no prefix when used.\r\n```","Url":"https://github.com/dotnet/corefx/issues/34243","RelatedDescription":"Open issue \"Coding style consistency\" (#34243)"},{"Id":"394066678","IsPullRequest":true,"CreatedAt":"2018-12-26T08:04:10","Actor":"dotnet-maestro-bot","Number":"34241","RawContent":null,"Title":"Update CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview-27226-01, preview.18625.2, beta-27226-00, beta-27226-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34241","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview-27226-01, preview.18625.2, beta-27226-00, beta-27226-00, respectively (master)\" (#34241)"},{"Id":"394101102","IsPullRequest":false,"CreatedAt":"2018-12-26T08:03:43","Actor":"juepiezhongren","Number":"34242","RawContent":null,"Title":"Easy way to use ValueTask with IValueTaskSource","State":"closed","Body":"ValueTask with IValueTaskSource is great but not easy to use. In a valueTask-return async method, there is no way to ctor with a pooled iValueTaskSource instance. \r\nSo, What about to create SourceStrategyAttribute to make a valueTask-return method buffed by IValueTaskSource?\r\n```\r\n[SourceStrategy]\r\nasync ValueTask mAsync(){\r\n   await ......\r\n   .......\r\n}\r\n```\r\nAnd the compiler would do the tricky part of iValueTaskSource instance injecting.\r\n@stephentoub ","Url":"https://github.com/dotnet/corefx/issues/34242","RelatedDescription":"Closed issue \"Easy way to use ValueTask with IValueTaskSource\" (#34242)"},{"Id":"394055789","IsPullRequest":false,"CreatedAt":"2018-12-26T00:36:32","Actor":"matkoch","Number":"34240","RawContent":null,"Title":"Environment.GetCommandLineArgs behaves differently","State":"closed","Body":"Maybe I'm missing something, but invoking `app.dll --param \"string value\"` yields different results for `Environment.GetCommandLineArgs`.\r\n\r\nOn Windows: `new[] { \"app.dll\", \"--param\", \"string value\" }`\r\nOn MacOS: `new[] { \"app.dll\", \"--param\", \"string\", \"value\" }`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.101/\r\n```","Url":"https://github.com/dotnet/corefx/issues/34240","RelatedDescription":"Closed issue \"Environment.GetCommandLineArgs behaves differently\" (#34240)"},{"Id":"393948574","IsPullRequest":true,"CreatedAt":"2018-12-25T18:40:57","Actor":"dotnet-maestro-bot","Number":"34235","RawContent":null,"Title":"Update CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview-27225-02, preview.18625.1, beta-27225-00, beta-27225-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34235","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview-27225-02, preview.18625.1, beta-27225-00, beta-27225-00, respectively (master)\" (#34235)"},{"Id":"394033381","IsPullRequest":false,"CreatedAt":"2018-12-25T15:53:19","Actor":"am11","Number":"34239","RawContent":null,"Title":"Distro-agnostic build of System.Security.Cryptography.Native for musl-libc based systems","State":"open","Body":"### Background\r\n\r\nIn GNU-libc based systems, if libssl is available with a different version than the few hard-coded ones:\r\n\r\nhttps://github.com/dotnet/corefx/blob/5710b6d09441a0a2d3cb9778ae927da14b5087cd/src/Native/Unix/System.Security.Cryptography.Native/opensslshim.c#L50-L76\r\n\r\n`dotnet.exe` gives an error from line 84: `No usable version of libssl was found\\rAborted` when running the application `dotnet-run` command. At this point, `ldd` shows no errors (as expected):\r\n\r\n```sh\r\nldd ~/dotnet.3.0.100-preview-009812/shared/Microsoft.NETCore.App/3.0.0-preview-27122-01/System.Security.Cryptography.Native.OpenSsl.so\r\n        linux-vdso.so.1 (0x00007ffd38e11000)\r\n        libdl.so.2 => /usr/lib/libdl.so.2 (0x00007faf8f139000)\r\n        libc.so.6 => /usr/lib/libc.so.6 (0x00007faf8ed7b000)\r\n        /lib/ld-linux-x86-64.so.2 (0x00007faf8f558000)\r\n```\r\n\r\nGoing by the `opensslshim` code, the version can be overridden using an environment variable. For example, if a distro has `libssl.so.46` available:\r\n\r\n```sh\r\ndotnet new ...\r\nCLR_OPENSSL_VERSION_OVERRIDE=46 dotnet run\r\n# run again\r\nCLR_OPENSSL_VERSION_OVERRIDE=46 dotnet run\r\n...\r\n\r\n# or export the variable once\r\nexport CLR_OPENSSL_VERSION_OVERRIDE=46\r\ndotnet run\r\ndotnet run # again\r\n...\r\n```\r\n\r\nThis implies that the product is compiled in a distro-agnostic manner for GNU-libc based systems, which is great!\r\n\r\n### Problem\r\n\r\nThe latest 3.0 preview build for musl-libc is not built in a distro-agnostic manner (`FEATURE_DISTRO_AGNOSTIC_SSL` was off on the official build machine it seems?), therefore the binary is linked to a specific version of crypto and SSL libs: `libcrypto.so.1.0.0` and `libssl.so.1.0.0` available on Alpine Linux but not any other musl-libc based systems.\r\n\r\n[Void Linux](https://voidlinux.org) comes with both flavors, glibc and musl-libc. This independent distro provides libressl via package management (XBPS: `xbps-install openssl`) with `/usr/lib/libssl.so.46` and `/usr/lib/libcrypto.so.44`.\r\n\r\nTo make `Hello World` work on glibc based Void Linux, export variable once: `CLR_OPENSSL_VERSION_OVERRIDE=46`. Full repro:\r\n\r\n```sh\r\n# Docker on Windows 10\r\n# ~Enter the Void~\r\ndocker run -it voidlinux/voidlinux sh\r\n\r\n# inside Void Linux\r\nxbps-install -S\r\nxbps-install bash gettext openssl curl icu\r\n\r\ncurl -O https://download.visualstudio.microsoft.com/download/pr/9f071c35-36b4-48c9-bcc2-b381ecb6cada/5be4784f19c28cb58f8c79219347201a/dotnet-sdk-3.0.100-preview-009812-linux-x64.tar.gz\r\n\r\nmkdir ~/dotnet.3.0.100-preview-009812/\r\ntar -xzvf dotnet-sdk-3.0.100-preview-009812-linux-x64.tar.gz -C ~/dotnet.3.0.100-preview-009812/\r\n\r\n# create a new console app to get a pretty error:\r\n~/dotnet.3.0.100-preview-009812/dotnet new console -n test-hello\r\n# No usable version of libssl was found\r\n# Aborted\r\n\r\n# set export CLR_OPENSSL_VERSION_OVERRIDE to 46 and try again:\r\nexport CLR_OPENSSL_VERSION_OVERRIDE=46\r\n\r\n~/dotnet.3.0.100-preview-009812/dotnet new console -n test-hello\r\n# ... few minutes later (due to first time usage setup) ....\r\n# it works!\r\n\r\ncd test-hello\r\n~/dotnet.3.0.100-preview-009812/dotnet run\r\n# it works!\r\n~/dotnet.3.0.100-preview-009812/dotnet run\r\n# it works again!\r\n```\r\n\r\nLets try the same thing in `voidlinux/voidlinux-musl`:\r\n\r\n```sh\r\n# Docker on Windows 10\r\n# ~Enter the Void-musl~\r\ndocker run -it voidlinux/voidlinux-musl sh\r\n\r\n# inside Void Linux\r\nxbps-install -S\r\nxbps-install bash gettext openssl curl icu\r\n\r\n# same version but different URL for musl-x64\r\ncurl -O https://download.visualstudio.microsoft.com/download/pr/0a0422a4-af0d-4742-a4ee-65bf87f146f9/6cad8369e06b3246fee3feab6d0256da/dotnet-sdk-3.0.100-preview-009812-linux-musl-x64.tar.gz\r\n\r\nmkdir ~/dotnet.3.0.100-preview-009812/\r\ntar -xzvf dotnet-sdk-3.0.100-preview-009812-linux-musl-x64.tar.gz -C ~/dotnet.3.0.100-preview-009812/\r\n\r\n# try to create a new console app:\r\n~/dotnet.3.0.100-preview-009812/dotnet new console -n test-hello\r\n```\r\n\r\ninstead it throws an exception:\r\n\r\n> System.TypeInitializationException: The type initializer for 'Crypto' threw an exception. ---> System.DllNotFoundException: Unable to load shared library 'System.Security.Cryptography.Native.OpenSsl' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: Error loading shared library libSystem.Security.Cryptography.Native.OpenSsl: No such file or directory\r\n   at Interop.Crypto.GetMaxMdSize()\r\n   at Interop.Crypto..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Interop.Crypto.EvpSha256()\r\n   at Internal.Cryptography.HashProviderDispenser.CreateHashProvider(String hashAlgorithmId)\r\n   at System.Security.Cryptography.SHA256.Implementation..ctor()\r\n   at System.Security.Cryptography.SHA256.Create()\r\n   at Microsoft.DotNet.Cli.Telemetry.Sha256Hasher.Hash(String text)\r\n   at Microsoft.DotNet.Cli.Telemetry.TelemetryCommonProperties.GetTelemetryCommonProperties()\r\n   at Microsoft.DotNet.Cli.Telemetry.Telemetry.InitializeTelemetry()\r\n\r\nAt this point, `ldd` also complains:\r\n\r\n```sh\r\nError loading shared library libcrypto.so.1.0.0: No such file or directory (needed by ./dotnet.3.0.100-preview-009812/shared/Microsoft.NETCore.App/3.0.0-preview-27122-01/System.Security.Cryptography.Native.OpenSsl.so)\r\nError loading shared library libssl.so.1.0.0: No such file or directory (needed by ./dotnet.3.0.100-preview-009812/shared/Microsoft.NETCore.App/3.0.0-preview-27122-01/System.Security.Cryptography.Native.OpenSsl.so)\r\n```\r\n\r\nThe workaround is to create a symlink for exact versions: `libcrypto.so.1.0.0` and `libssl.so.1.0.0`:\r\n\r\n```sh\r\n# create symlinks and try again:\r\nln -s /usr/lib/libcrypto.so.44 /usr/lib/libcrypto.so.1.0.0\r\nln -s /usr/lib/libssl.so.46 /usr/lib/libssl.so.1.0.0\r\n\r\n~/dotnet.3.0.100-preview-009812/dotnet new console -n test-hello\r\n# ... few minutes later (due to first time usage setup) ....\r\n# it works!\r\ncd test-hello\r\n~/dotnet.3.0.100-preview-009812/dotnet run\r\n# it works!\r\n```\r\n\r\n### Request\r\n\r\nPlease set `FEATURE_DISTRO_AGNOSTIC_SSL` in official musl-x64 build plan, so in either flavors of Void Linux, there is only one way to configure the libssl, i.e. by setting `CLR_OPENSSL_VERSION_OVERRIDE`.","Url":"https://github.com/dotnet/corefx/issues/34239","RelatedDescription":"Open issue \"Distro-agnostic build of System.Security.Cryptography.Native for musl-libc based systems\" (#34239)"},{"Id":"393970328","IsPullRequest":true,"CreatedAt":"2018-12-25T07:53:26","Actor":"Dotnet-GitSync-Bot","Number":"34238","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @benaadams @marek-safar @marek-safar @jkotas @ichensky @benaadams @MichalStrehovsky @filipnavara","Url":"https://github.com/dotnet/corefx/pull/34238","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#34238)"},{"Id":"393962338","IsPullRequest":false,"CreatedAt":"2018-12-25T05:03:15","Actor":"KexyBiscuit","Number":"34236","RawContent":null,"Title":"GetComObjectData throws PlatformNotSupportedException","State":"open","Body":"### Symptoms\r\nThe code was like...\r\n```\r\nSomeComObject.ExampleEvent += new SomeComType.SomeDelegate(SomeMethod);\r\n```\r\n\r\n### Exception details\r\n```\r\nSystem.PlatformNotSupportedException\r\n  HResult=0x80131539\r\n  Message=Operation is not supported on this platform.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Runtime.InteropServices.Marshal.GetComObjectData(Object obj, Object key)\r\n   at System.Runtime.InteropServices.ComEventsInfo.Find(Object rcw)\r\n   at System.Runtime.InteropServices.ComEventsInfo.FromObject(Object rcw)\r\n   at System.Runtime.InteropServices.ComEventsHelper.Combine(Object rcw, Guid iid, Int32 dispid, Delegate d)\r\n   at System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(Object target, Delegate handler)\r\n   (further StackTrace are omitted)\r\n```\r\n\r\n### Environment\r\n```\r\nC:\\Users\\KexyBiscuit> dotnet --version\r\n3.0.100-preview-009812\r\n```","Url":"https://github.com/dotnet/corefx/issues/34236","RelatedDescription":"Open issue \"GetComObjectData throws PlatformNotSupportedException\" (#34236)"},{"Id":"393966921","IsPullRequest":false,"CreatedAt":"2018-12-24T23:33:52","Actor":"weitzhandler","Number":"34237","RawContent":null,"Title":"Activator.CreateInstance<T> with params?","State":"open","Body":"Can we have another overload of the generic [`Activator.CreateInstance<T>`](https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance?view=netcore-2.2#System_Activator_CreateInstance__1) such that accepts a `params object[] args` like the [non-generic one](https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance?view=netcore-2.2#System_Activator_CreateInstance_System_Type_System_Object___)?","Url":"https://github.com/dotnet/corefx/issues/34237","RelatedDescription":"Open issue \"Activator.CreateInstance<T> with params?\" (#34237)"},{"Id":"393922275","IsPullRequest":true,"CreatedAt":"2018-12-24T19:12:12","Actor":"Wraith2","Number":"34234","RawContent":null,"Title":"SqlClient improve managed memory usage","State":"open","Body":"The managed Tds implementation is only used on Unix where the native implementation cannot be used, this is for performance reasons. I've investigated and made some changes which improve the performance of the managed mode. There is a still a lot that can be done but I think they'll need to build on this start.\r\n\r\nThe release build now works so I can get inproc BDN numbers:\r\n\r\n|      Method |     Mean |    Error |   StdDev |   Median | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|------------ |---------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n| SyncFloat32 | 235.2 ms | 4.871 ms | 12.31 ms | 228.8 ms |   3000.0000 |           - |           - |           593.75 KB |\r\n\r\n|      Method |     Mean |    Error |   StdDev | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|------------ |---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n| SyncFloat32 | 229.9 ms | 3.993 ms | 3.540 ms |           - |           - |           - |           281.25 KB |\r\n\r\nWhich shows that there is a large improvement in memory usage. The numbers are a bit sterile though. Compare profiles from before where there is a gen0 roughly every 100ms.\r\n\r\n![before](https://user-images.githubusercontent.com/13322696/50405553-7c24c800-07ae-11e9-8c7c-eafb450be3f4.PNG)\r\n\r\nto after:\r\n\r\n![after](https://user-images.githubusercontent.com/13322696/50405557-834bd600-07ae-11e9-9804-68878572eed6.PNG)\r\n\r\nThe changes are straightforward in terms of code changes even though it was tricky working out the right places to make them. Packets were being dropped without disposing them causing their rented arrays to be lost, this meant a lot of churn in array allocations. The mars mux header writing code was allocating a lot of temporary arrays so I replaced that code with a leaner version and stopped re-allocation of the header itself where it could be re-used.\r\n\r\nThe changes pass standard and manual sql tests.\r\n\r\n/cc all the usual people, @saurabh500 @AfsanehR @keeratsingh ","Url":"https://github.com/dotnet/corefx/pull/34234","RelatedDescription":"Open PR \"SqlClient improve managed memory usage\" (#34234)"},{"Id":"393848842","IsPullRequest":true,"CreatedAt":"2018-12-24T17:17:30","Actor":"StanislavUshakov","Number":"34232","RawContent":null,"Title":"Removed global suppression of CS1573 and CS1591 warnings","State":"closed","Body":"Moved the project level.\r\nPart of #33934 ","Url":"https://github.com/dotnet/corefx/pull/34232","RelatedDescription":"Closed or merged PR \"Removed global suppression of CS1573 and CS1591 warnings\" (#34232)"},{"Id":"393817876","IsPullRequest":true,"CreatedAt":"2018-12-24T17:15:45","Actor":"dotnet-maestro-bot","Number":"34231","RawContent":null,"Title":"Update CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview-27224-02, preview.18624.1, beta-27224-00, beta-27224-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34231","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview-27224-02, preview.18624.1, beta-27224-00, beta-27224-00, respectively (master)\" (#34231)"},{"Id":"393852474","IsPullRequest":false,"CreatedAt":"2018-12-24T10:18:26","Actor":"tomesendam","Number":"34233","RawContent":null,"Title":"Async parallel foreach","State":"open","Body":"I've had situations where I needed a asynchronous parallel foreach and while it's not rocket science to implement yourself I think it would be a nice feature to be implemented in C#.\r\n\r\nHowever it has to be said that I am not a expert at this at all. And do not know the possible implications of implementing such a feature. Or that the feature is a good idea it all. I would like to hear your thoughts on this! \r\n\r\nAnyway I usually resolved it doing something like this(I've seen it online before but cannot find the source again)\r\n\r\n```c#\r\n        /// <summary>\r\n        ///     Executes a foreach asynchronously.\r\n        /// </summary>\r\n        /// <typeparam name=\"T\"></typeparam>\r\n        /// <param name=\"source\">The source.</param>\r\n        /// <param name=\"dop\">The degrees of parallelism.</param>\r\n        /// <param name=\"body\">The body.</param>\r\n        /// <returns></returns>\r\n        public static Task ForEachAsync<T>(this IEnumerable<T> source, int dop, Func<T, Task> body)\r\n        {\r\n            return Task.WhenAll(\r\n                from partition in System.Collections.Concurrent.Partitioner.Create(source).GetPartitions(dop)\r\n                select Task.Run(async delegate\r\n                {\r\n                    using (partition)\r\n                    {\r\n                        while (partition.MoveNext())\r\n                            await body(partition.Current);\r\n                    }\r\n                }));\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/34233","RelatedDescription":"Open issue \"Async parallel foreach\" (#34233)"},{"Id":"393797749","IsPullRequest":true,"CreatedAt":"2018-12-24T05:49:54","Actor":"dotnet-maestro-bot","Number":"34230","RawContent":null,"Title":"Update CoreClr, CoreFx to preview-27224-01, preview.18623.2, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34230","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to preview-27224-01, preview.18623.2, respectively (master)\" (#34230)"},{"Id":"393788161","IsPullRequest":true,"CreatedAt":"2018-12-24T01:24:55","Actor":"Wraith2","Number":"34229","RawContent":null,"Title":"SqlClient cleanup asserts to avoid string format allocations","State":"closed","Body":"The affected code can only be a problem in Debug mode but cleaning them up makes it easier to review memory profiles and see the real memory use.\r\n\r\n/cc @saurabh500 @AfsanehR @keeratsingh ","Url":"https://github.com/dotnet/corefx/pull/34229","RelatedDescription":"Closed or merged PR \"SqlClient cleanup asserts to avoid string format allocations\" (#34229)"},{"Id":"393753378","IsPullRequest":true,"CreatedAt":"2018-12-23T20:50:10","Actor":"dotnet-maestro-bot","Number":"34226","RawContent":null,"Title":"Update CoreClr, CoreFx to preview-27223-02, preview.18623.1, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34226","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to preview-27223-02, preview.18623.1, respectively (master)\" (#34226)"},{"Id":"393765818","IsPullRequest":false,"CreatedAt":"2018-12-23T17:05:02","Actor":"vbjay","Number":"34228","RawContent":null,"Title":"Agnostic URI/path","State":"open","Body":"Related: #1745\r\n\r\n.Net needs a way to represent a path that isn't a string but a struct or class.  I am working on the GitExtensions project.  Git returns linux paths.  Creating a System.URI instance with a path like``` /d/git/GitExtensions/``` fails on Windows.  I have found a few projects that try to manage paths.  \r\n\r\n- https://github.com/psmacchia/NDepend.Path\r\n- https://github.com/nemec/pathlib\r\n- https://github.com/alexeveritt/CSharpPathResolver\r\n\r\nBeing able to store a normalized path in our variables that can be translated to URIs or posix or... would be very helpful.  All of the following paths should be stored in a normalized posix format that can then be used in any path usage.\r\n```\r\nc:\\git\\project 1\\file\r\nc:\\git/project 1/file\r\n/c/git/project 1/file\r\n\\\\server\\share\\folder 1\\file\r\n```\r\nI was hoping I could use System.URI as the backing store of the path objects but linux paths are a no go so I am looking into other solutions.  \r\n","Url":"https://github.com/dotnet/corefx/issues/34228","RelatedDescription":"Open issue \"Agnostic URI/path\" (#34228)"},{"Id":"393756480","IsPullRequest":false,"CreatedAt":"2018-12-23T15:00:37","Actor":"tmat","Number":"34227","RawContent":null,"Title":"[Uri] Incorrect combination of absolute and relative URI in presence of non-ASCII characters","State":"open","Body":"```C#\r\nConsole.WriteLine(new Uri(new Uri(\"file:///x/\", UriKind.Absolute), new Uri(\"a\", UriKind.Relative)));\r\nConsole.WriteLine(new Uri(new Uri(\"file:///噸/\", UriKind.Absolute), new Uri(\"a\", UriKind.Relative)));\r\n```\r\n\r\n(the character 噸 is U+1234).\r\n\r\nExpected:\r\n\r\n```\r\nfile:///x/a\r\nfile:///噸/a\r\n```\r\n\r\nActual:\r\n\r\n```\r\nfile:///x/a\r\nfile:///%E5%99%B8//%E5%99%B8/a/噸//噸/a\r\n```\r\n\r\nWorks on Desktop FX, fails on Core (both Windows and Linux).\r\n\r\n```\r\n> dotnet --version\r\n3.0.100-preview-009844\r\n```","Url":"https://github.com/dotnet/corefx/issues/34227","RelatedDescription":"Open issue \"[Uri] Incorrect combination of absolute and relative URI in presence of non-ASCII characters\" (#34227)"},{"Id":"393749934","IsPullRequest":false,"CreatedAt":"2018-12-23T13:28:42","Actor":"aviviadi","Number":"34225","RawContent":null,"Title":"High CPU on ARM32 occasionally","State":"open","Body":"Env: Running on Raspberry PI (Raspbian Stretch)\r\n.NET Core 2.2\r\n\r\n\r\nScenario: Sending a small number of requests to the server occasionally cause a very high CPU spike.\r\nThis CPU spike is typically only on a single core and does  not correlate to any system call from `strace` that we could find.\r\n\r\nWe have ruled out GC as reason for high CPU because when we see such high CPU we broke into the process and this was what the GC was doing.\r\n\r\n![image](https://user-images.githubusercontent.com/12054032/50384020-07c32980-06c7-11e9-9872-5f9400935f7d.png)\r\n\r\nThe high CPU event can take over 30 seconds to complete and goes away on its own.\r\n\r\nWhen doing managed debugging, the following stack trace keeps popping up:\r\n\r\n![image](https://user-images.githubusercontent.com/12054032/50383898-cd0cc180-06c5-11e9-94c5-79de2a853300.png)\r\n\r\nI wonder if it is possible that this is stuck in the following loop?\r\n\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.IO.Pipelines/src/System/IO/Pipelines/Pipe.cs#L467-L474\r\n\r\nThe behavior is that once every N requests (where N is relatively low, a few dozens at most) we are seeing this high usage.\r\nWhen we make another request, it usually goes away.\r\n\r\nIt is possible that because this is on 32 bits, we are using very small buffer, creating a very large chain of segments that should be freed?\r\n","Url":"https://github.com/dotnet/corefx/issues/34225","RelatedDescription":"Open issue \"High CPU on ARM32 occasionally\" (#34225)"},{"Id":"393707333","IsPullRequest":true,"CreatedAt":"2018-12-22T22:27:56","Actor":"jlennox","Number":"34224","RawContent":null,"Title":"dotnet/corefx#34200 Bring `XmlRawTextWriterGenerator.cxx` up to date.","State":"open","Body":"@krwq Here is one part of the work regarding dotnet/corefx#34200. I do really believe that this could be done without the use of a preprocessor without sacrificing speed using a generic base class. Should I experiment with that? I assume improving testing would come first.\r\n\r\nSomething which caught me off guard is this line: https://github.com/dotnet/corefx/blob/fdec34a223b4a3676a781239748776e9332bee43/src/System.Private.Xml/src/System/Xml/Core/XmlRawTextWriterGenerator.cxx#L426\r\n\r\nIn the existing .cxx there's no #if around it, but I had to add one to keep the file generation consistent with present logic. I could not find why it was removed in the git history. Any ideas?\r\n\r\nI also don't know if you require issues and PR's to be 1:1, that is, #34200 is an aggregate and this only deals with one part of it.","Url":"https://github.com/dotnet/corefx/pull/34224","RelatedDescription":"Open PR \"dotnet/corefx#34200 Bring `XmlRawTextWriterGenerator.cxx` up to date.\" (#34224)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"394259682","IsPullRequest":true,"CreatedAt":"2018-12-27T04:52:40","Actor":"agocke","Number":"32031","RawContent":null,"Title":"Add record synthesized constructor generation","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/32031","RelatedDescription":"Closed or merged PR \"Add record synthesized constructor generation\" (#32031)"},{"Id":"394261081","IsPullRequest":true,"CreatedAt":"2018-12-27T01:30:11","Actor":"dotnet-bot","Number":"32032","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32032","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32032)"},{"Id":"394261087","IsPullRequest":true,"CreatedAt":"2018-12-27T01:30:05","Actor":"dotnet-bot","Number":"32033","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32033","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#32033)"},{"Id":"394255635","IsPullRequest":true,"CreatedAt":"2018-12-26T23:03:29","Actor":"AArnott","Number":"32030","RawContent":null,"Title":"Random code comment typo fixes","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/32030","RelatedDescription":"Open PR \"Random code comment typo fixes\" (#32030)"},{"Id":"394254520","IsPullRequest":false,"CreatedAt":"2018-12-26T22:53:05","Actor":"gafter","Number":"32029","RawContent":null,"Title":"Tests skipped with reason \"NonNullTypes does not control warnings\"","State":"open","Body":"There are a number of tests skipped with the reason \"NonNullTypes does not control warnings\".\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/32029","RelatedDescription":"Open issue \"Tests skipped with reason \"NonNullTypes does not control warnings\"\" (#32029)"},{"Id":"394240558","IsPullRequest":true,"CreatedAt":"2018-12-26T21:00:36","Actor":"AArnott","Number":"32028","RawContent":null,"Title":"Update build, debug, test doc","State":"open","Body":"It was out of date in a few places as projects have been moved/renamed/created.","Url":"https://github.com/dotnet/roslyn/pull/32028","RelatedDescription":"Open PR \"Update build, debug, test doc\" (#32028)"},{"Id":"394238061","IsPullRequest":true,"CreatedAt":"2018-12-26T20:42:43","Actor":"AArnott","Number":"32027","RawContent":null,"Title":"Set WarnAsError to false by default for build.cmd script","State":"open","Body":"As requested in https://github.com/dotnet/roslyn/pull/31993#issuecomment-450002539","Url":"https://github.com/dotnet/roslyn/pull/32027","RelatedDescription":"Open PR \"Set WarnAsError to false by default for build.cmd script\" (#32027)"},{"Id":"394235201","IsPullRequest":false,"CreatedAt":"2018-12-26T20:20:55","Actor":"AArnott","Number":"32026","RawContent":null,"Title":"Building, Testing, Debugging wiki page badly outdated","State":"open","Body":"The branch names and links on the https://github.com/dotnet/roslyn/wiki/Building%20Testing%20and%20Debugging wiki are badly outdated.","Url":"https://github.com/dotnet/roslyn/issues/32026","RelatedDescription":"Open issue \"Building, Testing, Debugging wiki page badly outdated\" (#32026)"},{"Id":"394234602","IsPullRequest":false,"CreatedAt":"2018-12-26T20:17:00","Actor":"gafter","Number":"32025","RawContent":null,"Title":"Do not permit a nullable reference type for an `is` operator","State":"open","Body":"The *is-type* operator returns `false` when the left operand is `null`, for example in `e is string?`.  It should therefore be a semantic error when the type given is a nullable reference type, as in this example.  We already make that an error for the *is-pattern* operator, for example in `e is string? s`.","Url":"https://github.com/dotnet/roslyn/issues/32025","RelatedDescription":"Open issue \"Do not permit a nullable reference type for an `is` operator\" (#32025)"},{"Id":"394227880","IsPullRequest":false,"CreatedAt":"2018-12-26T19:30:06","Actor":"binki","Number":"32024","RawContent":null,"Title":"Inline temporary variable codefix removes indentation when VS does not know how to indent the target line","State":"open","Body":"**Version Used**: 2.11.0-beta1-63519-03+4c7d79a254288388d97d793c4087db6ebf00d2fd\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a program which uses a variable on a line which VS is unable to automatically reindent.\r\n2. Use the “Inline temporary variable” codefix on the variable’s declaration.\r\n3. Observe that all indentation is removed instead of preserved.\r\n\r\nExample program:\r\n\r\n```csharp\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var value = 2;\r\n        foreach (var x in new[]\r\n        {\r\n            1,\r\n            value,\r\n        })\r\n        {\r\n            Console.WriteLine($\"x={x}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIn this program, triggering VS to automatically reindent things (by deleting and retyping the closing `}` for the `class`) will never touch three lines starting from the line containing `1,`. This is because VS does not think it knows how to indent those lines, so it leaves them alone in an attempt to avoid displeasing the developer.\r\n\r\n**Expected Behavior**:\r\n\r\n\r\n```csharp\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        foreach (var x in new[]\r\n        {\r\n            1,\r\n            2,\r\n        })\r\n        {\r\n            Console.WriteLine($\"x={x}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n**Actual Behavior**:\r\n\r\n```csharp\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        foreach (var x in new[]\r\n        {\r\n            1,\r\n2,\r\n        })\r\n        {\r\n            Console.WriteLine($\"x={x}\");\r\n        }\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/32024","RelatedDescription":"Open issue \"Inline temporary variable codefix removes indentation when VS does not know how to indent the target line\" (#32024)"},{"Id":"394205217","IsPullRequest":true,"CreatedAt":"2018-12-26T18:39:07","Actor":"jaredpar","Number":"32023","RawContent":null,"Title":"Fix a bad merge","State":"closed","Body":"This merge deleted azure-pipelines-official.yml. That is incorrect as\r\nit's a necessary file for the repository. This commit resets it back\r\nto the current state in master.\r\n\r\nBad merge\r\nhttps://github.com/dotnet/roslyn/commit/34152ac0bacebb920308ca7e2be30cef6f27b4c4","Url":"https://github.com/dotnet/roslyn/pull/32023","RelatedDescription":"Closed or merged PR \"Fix a bad merge\" (#32023)"},{"Id":"393817183","IsPullRequest":true,"CreatedAt":"2018-12-26T17:20:42","Actor":"agocke","Number":"32010","RawContent":null,"Title":"Implement parsing for positional records","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/32010","RelatedDescription":"Closed or merged PR \"Implement parsing for positional records\" (#32010)"},{"Id":"394153354","IsPullRequest":true,"CreatedAt":"2018-12-26T13:00:08","Actor":"dotnet-bot","Number":"32020","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32020","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32020)"},{"Id":"394153367","IsPullRequest":true,"CreatedAt":"2018-12-26T13:00:04","Actor":"dotnet-bot","Number":"32021","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32021","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#32021)"},{"Id":"394160578","IsPullRequest":false,"CreatedAt":"2018-12-26T12:44:07","Actor":"hrieke","Number":"32022","RawContent":null,"Title":"License confusion","State":"open","Body":"Hi,\r\n\r\nYou have a minor licensing discrepancy here.  The nuget package page states the license for \"Microsoft.CodeAnalysis.CSharp.Scripting\", release 2.9.0 and later is the \"Microsoft .NET Library License\"\r\nhttps://www.nuget.org/packages/Microsoft.CodeAnalysis.CSharp.Scripting/2.9.0\r\n\r\nCould you have someone on the nuget team correct the page?  Thanks","Url":"https://github.com/dotnet/roslyn/issues/32022","RelatedDescription":"Open issue \"License confusion\" (#32022)"},{"Id":"394090610","IsPullRequest":true,"CreatedAt":"2018-12-26T06:09:04","Actor":"jcouv","Number":"32019","RawContent":null,"Title":"Implement IOperation for suppression operator","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/31582","Url":"https://github.com/dotnet/roslyn/pull/32019","RelatedDescription":"Open PR \"Implement IOperation for suppression operator\" (#32019)"},{"Id":"393776291","IsPullRequest":true,"CreatedAt":"2018-12-26T04:20:12","Actor":"cston","Number":"32007","RawContent":null,"Title":"Consider variance when merging nullability of tuple elements","State":"closed","Body":"Fixes #31864.","Url":"https://github.com/dotnet/roslyn/pull/32007","RelatedDescription":"Closed or merged PR \"Consider variance when merging nullability of tuple elements\" (#32007)"},{"Id":"394055509","IsPullRequest":true,"CreatedAt":"2018-12-25T23:26:04","Actor":"gafter","Number":"32018","RawContent":null,"Title":"IDiscardPatternOperation, ISwitchExpressionOperation, ISwitchExpressionArmOperation","State":"open","Body":"Adds further IOperation nodes for recursive patterns\r\nFollow-up to #31967 per #32012 \r\nIssue #32012 also describes additional open issues to be addressed later.\r\n\r\nThis should be reviewed after #31967 as it includes all of the iterations of that review (until it has been integrated)\r\n","Url":"https://github.com/dotnet/roslyn/pull/32018","RelatedDescription":"Open PR \"IDiscardPatternOperation, ISwitchExpressionOperation, ISwitchExpressionArmOperation\" (#32018)"},{"Id":"393810766","IsPullRequest":false,"CreatedAt":"2018-12-25T20:48:28","Actor":"taori","Number":"32009","RawContent":null,"Title":"Is this GC behaviour behaving as intended?","State":"closed","Body":"I was trying to reproduce some odd behavior i was experiencing when i noticed this, which seems odd too.\r\n\r\nI also found [this](https://github.com/dotnet/coreclr/issues/9674), but even if i leave the program running for a while the finalizer isn't called either.\r\n\r\n**Steps to Reproduce**:\r\n\r\nprogram.cs\r\n\r\n```\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace AwaitBehaviorTest\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic async Task Main(string[] args)\r\n\t\t{\r\n\t\t\tConsole.WriteLine($\"Starting tests.\");\r\n\t\t\tTask.Run(async () =>\r\n\t\t\t{\r\n\t\t\t\tawait Task.Delay(1500);\r\n\t\t\t\tConsole.WriteLine($\"GC.\");\r\n\t\t\t\tGC.Collect();\r\n\r\n\t\t\t\tawait Task.Delay(3000);\r\n\t\t\t\tConsole.WriteLine($\"GC.\");\r\n\t\t\t\tGC.Collect();\r\n\r\n\t\t\t\tawait Task.Delay(3000);\r\n\t\t\t\tConsole.WriteLine($\"GC.\");\r\n\t\t\t\tGC.Collect();\r\n\t\t\t});\r\n\t\t\tawait Task.WhenAll(ReturnOfTaskWithAssignment(), AwaitedCall(), ReturnOfTaskWithoutAssignment());\r\n\t\t\tConsole.WriteLine($\"Waiting for input.\");\r\n\t\t\tConsole.ReadLine();\r\n\t\t}\r\n\r\n\t\tprivate static async Task AwaitedCall()\r\n\t\t{\r\n\t\t\tvar holder = new Holder(nameof(AwaitedCall));\r\n\t\t\tawait holder.SomeWork();\r\n\t\t}\r\n\r\n\t\tprivate static Task ReturnOfTaskWithAssignment()\r\n\t\t{\r\n\t\t\tvar holder = new Holder(nameof(ReturnOfTaskWithAssignment));\r\n\t\t\treturn holder.SomeWork();\r\n\t\t}\r\n\r\n\t\tprivate static Task ReturnOfTaskWithoutAssignment()\r\n\t\t{\r\n\t\t\treturn new Holder(nameof(ReturnOfTaskWithoutAssignment)).SomeWork();\r\n\t\t}\r\n\r\n\t\tpublic class Holder\r\n\t\t{\r\n\t\t\tpublic string Name { get; }\r\n\r\n\t\t\tpublic Holder(string name)\r\n\t\t\t{\r\n\t\t\t\tName = name;\r\n\t\t\t}\r\n\r\n\t\t\t~Holder()\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine($\"holder {Name} disposed.\");\r\n\t\t\t}\r\n\r\n\t\t\tpublic async Task SomeWork()\r\n\t\t\t{\r\n\t\t\t\tint i = 0;\r\n\t\t\t\twhile (i++ < 3)\r\n\t\t\t\t{\r\n\t\t\t\t\tawait Task.Delay(TimeSpan.FromSeconds(1));\r\n\t\t\t\t\tConsole.WriteLine($\"Work {i}\");\r\n\t\t\t\t}\r\n\t\t\t\tConsole.WriteLine($\"Done.\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\ncsproj\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<!-- <TargetFramework>netcoreapp2.1</TargetFramework> -->\r\n\t\t<TargetFramework>net461</TargetFramework>\r\n\t\t<LangVersion>latest</LangVersion>\r\n\t</PropertyGroup>\r\n\r\n</Project>\r\n\r\n**Expected Behavior**:\r\nI would expect 3 disposals here\r\n\r\n**Actual Behavior**:\r\nonly 2 holder objects are disposed","Url":"https://github.com/dotnet/roslyn/issues/32009","RelatedDescription":"Closed issue \"Is this GC behaviour behaving as intended?\" (#32009)"},{"Id":"394043570","IsPullRequest":true,"CreatedAt":"2018-12-25T18:52:29","Actor":"jcouv","Number":"32017","RawContent":null,"Title":"AddAwait: don't offer on expression of invocation","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/31754","Url":"https://github.com/dotnet/roslyn/pull/32017","RelatedDescription":"Open PR \"AddAwait: don't offer on expression of invocation\" (#32017)"},{"Id":"394027104","IsPullRequest":false,"CreatedAt":"2018-12-25T14:37:04","Actor":"KnutHaraldR","Number":"32016","RawContent":null,"Title":"Exception every time I open Visual Studio 2017","State":"open","Body":"Getting this in my log:\r\n\r\n\r\nSystem.AggregateException: One or more errors occurred.\r\n ---&gt; System.IO.FileNotFoundException: Could not load\r\n file or assembly &apos;Microsoft.VisualStudio.Data, \r\n Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&apos; \r\n or one of its dependencies. Systemet finner ikke angitt fil.&#x000D;&#x000A; \r\n at MySql.Data.VisualStudio.DocumentNode.GetCurrentConnection()&#x000D;&#x000A; \r\n at MySql.Data.VisualStudio.LanguageServiceUtil.GetConnection()&#x000D;&#x000A;  \r\n at MySql.Data.VisualStudio.LanguageService.MySqlQuickInfoSource.AugmentQuickInfoSession(IQuickInfoSession\r\n session, IList`1 qiContent, ITrackingSpan&amp; applicableToSpan)&#x000D;&#x000A;   \r\n at Microsoft.VisualStudio.Language.Intellisense.Implementation.LegacyQuickInfoSource.AugmentQuickInfoSession\r\n (IAsyncQuickInfoSession session, IList`1 content, ITrackingSpan&amp; applicableToSpan)&#x000D;&#x000A;   \r\n at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoSession.&lt;\r\n TryComputeContentFromLegacySourceAsync&gt;d__45.MoveNext()&#x000D;&#x000A;---\r\n End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;  \r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   \r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A; \r\n at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoSession.&lt;\r\n ComputeSourceContentAsync&gt;d__44.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous \r\n location where exception was thrown ---&#x000D;&#x000A;   \r\n at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n &#x000D;&#x000A;   --- End of inner exception stack trace ---&#x000D;&#x000A;---&gt; (Inner Exception #0) \r\n System.IO.FileNotFoundException: Could not load file or assembly &apos;Microsoft.VisualStudio.Data,\r\n Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&apos; or one of its dependencies.\r\n Systemet finner ikke angitt fil.&#x000D;&#x000A;File name: &apos;Microsoft.VisualStudio.Data,\r\n Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&apos;&#x000D;&#x000A;  \r\n at MySql.Data.VisualStudio.DocumentNode.GetCurrentConnection()&#x000D;&#x000A; \r\n at MySql.Data.VisualStudio.LanguageServiceUtil.GetConnection()&#x000D;&#x000A;  \r\n at MySql.Data.VisualStudio.LanguageService.MySqlQuickInfoSource.AugmentQuickInfoSession(IQuickInfoSession session, \r\n IList`1 qiContent, ITrackingSpan&amp; applicableToSpan)&#x000D;&#x000A; \r\n at Microsoft.VisualStudio.Language.Intellisense.Implementation.LegacyQuickInfoSource.AugmentQuickInfoSession(IAsyncQuickInfoSession session,\r\n IList`1 content, ITrackingSpan&amp; applicableToSpan)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoSession.&lt;\r\n TryComputeContentFromLegacySourceAsync&gt;d__45.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A; \r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;  \r\n at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoSession.&lt;ComputeSourceContentAsync&gt;d__44.MoveNext()&#x000D;&#x000A;---\r\n End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;  \r\n at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&#x000D;&#x000A;&#x000D;&#x000A;\r\n WRN: Assembly binding logging is turned OFF.&#x000D;&#x000A;To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD)\r\n to 1.&#x000D;&#x000A;Note: There is some performance penalty associated with assembly bind failure logging.&#x000D;&#x000A;To turn this feature off, remove the registry \r\n value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].&#x000D;&#x000A;&lt;---&#x000D;&#x000A;\r\n","Url":"https://github.com/dotnet/roslyn/issues/32016","RelatedDescription":"Open issue \"Exception every time I open Visual Studio 2017\" (#32016)"},{"Id":"393989056","IsPullRequest":true,"CreatedAt":"2018-12-25T08:52:22","Actor":"tmat","Number":"32015","RawContent":null,"Title":"VB command line parser: Do not unquote /embed and /additionalfile values","State":"open","Body":"VB command line parser unquotes the value of `/embed` and `/additionalfile` arguments, yet does not unquote values of other arguments where paths are passed, e.g. `/r`, `/analyzer`, `/lib`, `/sdkpath`, etc.\r\n\r\nC# also does not unquote in any of these cases.\r\n\r\nThe extraneous unquoting is not compatible with quoting performed in vbc task when the arguments contain spaces or path separators. This results in parsing error when a file path that contains `,` or `;` is specified in `EmbeddedFiles` and `AdditionalFiles` item groups.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/30586.","Url":"https://github.com/dotnet/roslyn/pull/32015","RelatedDescription":"Open PR \"VB command line parser: Do not unquote /embed and /additionalfile values\" (#32015)"},{"Id":"393939526","IsPullRequest":true,"CreatedAt":"2018-12-25T00:30:08","Actor":"dotnet-bot","Number":"32013","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32013","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32013)"},{"Id":"393939533","IsPullRequest":true,"CreatedAt":"2018-12-25T00:30:04","Actor":"dotnet-bot","Number":"32014","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32014","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#32014)"},{"Id":"393923401","IsPullRequest":false,"CreatedAt":"2018-12-24T19:27:09","Actor":"gafter","Number":"32012","RawContent":null,"Title":"Open IOperation issues in recursive patterns","State":"open","Body":"The following open issues relating to IOperation exist in the `features/recursive-patterns` branch after https://github.com/dotnet/roslyn/pull/31967:\r\n\r\n- [ ] Add additional verifications in tests for recursive patterns. https://github.com/dotnet/roslyn/pull/31967#discussion_r244034176\r\n- [ ] Testing around `HasErrors` scenarios, such as when there is no `DeconstructSymbol` but there are patterns. https://github.com/dotnet/roslyn/pull/31967#discussion_r243438375\r\n- [ ] Need to get some feedback on whether we should be using Tuples in the API here. We could potentially replace with a struct instead. https://github.com/dotnet/roslyn/pull/31967#discussion_r243438943\r\n\r\n#### Addressed in https://github.com/dotnet/roslyn/pull/32018\r\n- [x] switch expression IOperation still needs to be designed and implemented.\r\n- [x] The discard pattern should be a separate IOperation node from the discard expression. https://github.com/dotnet/roslyn/pull/31967#discussion_r243717420\r\n- [x] Could improve code slightly by using the `SetParentOperation` that takes an array https://github.com/dotnet/roslyn/pull/31967#pullrequestreview-187570778\r\n- [x] Remove `DataFlow` from test https://github.com/dotnet/roslyn/pull/31967#discussion_r243718235\r\n- [x] Use `nameof` to keep code in sync https://github.com/dotnet/roslyn/pull/31967#discussion_r243718570 https://github.com/dotnet/roslyn/pull/31967#discussion_r244030559 https://github.com/dotnet/roslyn/pull/31967#discussion_r244029776\r\n- [x] Rename `d` to `p` in `foreach (var d in propertySubpatterns)` [https://github.com/dotnet/roslyn/pull/31967#discussion_r244034690]\r\n- [x] `IPatternOperation.InputType` should be printed in IOperation tests.\r\n- [x] Revert the change to VisitArray to permit default arrays. https://github.com/dotnet/roslyn/pull/31967#discussion_r244032274\r\n","Url":"https://github.com/dotnet/roslyn/issues/32012","RelatedDescription":"Open issue \"Open IOperation issues in recursive patterns\" (#32012)"},{"Id":"393903753","IsPullRequest":false,"CreatedAt":"2018-12-24T16:00:04","Actor":"TessenR","Number":"32011","RawContent":null,"Title":"Nullable state of nested fields/properties is not tracked on assignments","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 1.1\r\nVisualStudio.16.Preview/16.0.0-pre.1.1+28408.50\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code\r\n```cs\r\n#nullable enable\r\n\r\nclass C\r\n{\r\n  void M()\r\n  {\r\n    C c1 = new C();\r\n    C c2 = new C();\r\n    if (c1.Prop != null && c2.Prop != null)\r\n    {\r\n      c1.Prop.ToString(); // no warning, c1.Prop is known to be not null\r\n      c2.Prop.ToString(); // no warning, c2.Prop is known to be not null\r\n      c1 = c2;\r\n      \r\n      c2.Prop.ToString(); // no warning, c2.Prop is known to be not null\r\n      c1.Prop.ToString(); // invalid warning, c1.Prop should be known to be not null as it is not null in c2\r\n    }\r\n  }\r\n\r\n  public string? Prop { get; set; }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nno warnings\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nwarning CS8602: Possible dereference of a null reference.\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/32011","RelatedDescription":"Open issue \"Nullable state of nested fields/properties is not tracked on assignments\" (#32011)"},{"Id":"393789346","IsPullRequest":false,"CreatedAt":"2018-12-23T23:55:40","Actor":"Dreamescaper","Number":"32008","RawContent":null,"Title":"IDE0052 should not be reported if field used with nameof","State":"open","Body":"**Version Used**: \r\nVS 2019 Preview 1.1\r\n\r\n**Steps to Reproduce**:\r\n\r\nNUnit example:\r\n\r\n```csharp\r\n        [TestCaseSource(nameof(TestCaseData))]\r\n        public void TestCase(string expected, string actual)\r\n        {\r\n            Assert.That(expected, Is.EqualTo(actual));\r\n        }\r\n\r\n        private static readonly object[] TestCaseData =\r\n        {\r\n            new object[] {\"expected\", \"actual\" }\r\n        };\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n`TestCaseData` is not suggested to be removed\r\n\r\n**Actual Behavior**:\r\n\r\n`TestCaseData` is suggested to be removed as not used","Url":"https://github.com/dotnet/roslyn/issues/32008","RelatedDescription":"Open issue \"IDE0052 should not be reported if field used with nameof\" (#32008)"},{"Id":"393769966","IsPullRequest":false,"CreatedAt":"2018-12-23T18:09:34","Actor":"cston","Number":"32006","RawContent":null,"Title":"Warning inferring nullability of lambda return type tuple","State":"open","Body":"```C#\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static T F<T>(Func<bool, T> f)\r\n    {\r\n        return f(true);\r\n    }\r\n\r\n    static void G<T>(object x)\r\n    {\r\n        F(b =>\r\n        {\r\n            if (b) return (x, null); // warning\r\n            return (x, x);\r\n        });\r\n    }\r\n}\r\n```\r\n```\r\n(14,27): warning CS8619: Nullability of reference types in value of type '(object x, object?)'\r\n    doesn't match target type '(object, object)'.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/32006","RelatedDescription":"Open issue \"Warning inferring nullability of lambda return type tuple\" (#32006)"},{"Id":"393714351","IsPullRequest":true,"CreatedAt":"2018-12-23T01:07:28","Actor":"KirillOsenkov","Number":"32005","RawContent":null,"Title":"Use NullXmlDocumentationProvider when XML file doesn't exist.","State":"open","Body":"For each reference that doesn't have an .XML doc file we allocate and cache a FileBasedXmlDocumentationProvider that throws a first-chance exception upon first use.\r\n\r\nAdd and use a singleton NullXmlDocumentationProvider instead when the requested .XML doc file doesn't exist.","Url":"https://github.com/dotnet/roslyn/pull/32005","RelatedDescription":"Open PR \"Use NullXmlDocumentationProvider when XML file doesn't exist.\" (#32005)"},{"Id":"393711466","IsPullRequest":true,"CreatedAt":"2018-12-23T01:00:04","Actor":"dotnet-bot","Number":"32004","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32004","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#32004)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"394214267","IsPullRequest":true,"CreatedAt":"2018-12-26T19:04:53","Actor":"filipnavara","Number":"6732","RawContent":null,"Title":"Move System/Numerics/Hashing to shared CoreLib.","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6732","RelatedDescription":"Closed or merged PR \"Move System/Numerics/Hashing to shared CoreLib.\" (#6732)"},{"Id":"394223088","IsPullRequest":false,"CreatedAt":"2018-12-26T18:58:00","Actor":"yowl","Number":"6733","RawContent":null,"Title":"wasm: Main thread Sleep fails due to missing initialisation?","State":"open","Body":"Adding the following to the Program Main:\r\n```\r\n        Thread.Sleep(100);\r\n```\r\nCauses the Assert to be triggered at https://github.com/dotnet/corert/blob/574d8319979ef5118f55c57ce2b90ea61f1429e6/src/System.Private.CoreLib/src/System/Threading/WaitSubsystem.ThreadWaitInfo.Unix.cs#L271  The `RuntimeThread.CurrentThread` looks fine but the `_thread` field is 0 (as it would appear are all the `ThreadWaitInfo` fields).  As there's an assert in the only ctor for `ThreadWaitInfo` to prevent this: https://github.com/dotnet/corert/blob/574d8319979ef5118f55c57ce2b90ea61f1429e6/src/System.Private.CoreLib/src/System/Threading/WaitSubsystem.ThreadWaitInfo.Unix.cs#L92 , it would appear the ctor is not being called or the address of the `ThreadWaitInfo` is bogus.  What I can't find is where the main thread is initialised, specifically how the RuntimeThread is created as breakpoints in it's managed ctor at least are not hit.","Url":"https://github.com/dotnet/corert/issues/6733","RelatedDescription":"Open issue \"wasm: Main thread Sleep fails due to missing initialisation?\" (#6733)"},{"Id":"394198074","IsPullRequest":false,"CreatedAt":"2018-12-26T17:46:52","Actor":"ly303550688","Number":"6731","RawContent":null,"Title":"publish shared library but there is no entrypoint","State":"closed","Body":"I use the sample publish a shared library，dumpbin the dll, there's no entrypoint exported.","Url":"https://github.com/dotnet/corert/issues/6731","RelatedDescription":"Closed issue \"publish shared library but there is no entrypoint\" (#6731)"},{"Id":"394038185","IsPullRequest":true,"CreatedAt":"2018-12-25T17:05:41","Actor":"MarcoRossignoli","Number":"6730","RawContent":null,"Title":"Add `--tokens` option to command line","State":"open","Body":"contributes to https://github.com/dotnet/corert/issues/6694\r\nStep forward added `--tokens` options to command line and flow to internal verifiers.\r\n\r\n/cc @jkotas @MichalStrehovsky \r\n\r\n:christmas_tree: Merry Christmas!","Url":"https://github.com/dotnet/corert/pull/6730","RelatedDescription":"Open PR \"Add `--tokens` option to command line\" (#6730)"},{"Id":"394038098","IsPullRequest":false,"CreatedAt":"2018-12-25T17:04:11","Actor":"andreakarasho","Number":"6729","RawContent":null,"Title":"Ubuntu 18.04 Segmentation fault (core dumped)","State":"open","Body":"Im running a virtual machine with ubuntu 18.04 x64.\r\nSame code compiled on windows with the win-x64 cmd configuration works good, but not on ubuntu with configuration ubuntu-x64. \r\n\r\n\r\n```\r\n         Segmentation fault (core dumped)\r\n   1:7>/home/andrea/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27225-02/build/Microsoft.NETCore.Native.targets(228,5): error MSB3073: The command \"\"/home/andrea/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27225-02/tools/ilc\" @\"obj/release/netcoreapp2.2/linux-x64/native/ClassicUO.ilc.rsp\"\" exited with code 139. [/home/andrea/Documents/ClassicUO-NetCore/ClassicUO.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/6729","RelatedDescription":"Open issue \"Ubuntu 18.04 Segmentation fault (core dumped)\" (#6729)"},{"Id":"394036483","IsPullRequest":false,"CreatedAt":"2018-12-25T16:39:01","Actor":"Fabi","Number":"6728","RawContent":null,"Title":"System.Management namespace exception","State":"open","Body":"Hey!\r\n\r\nI just tried to get an app running that is using `WqlEventQuery` & `ManagementEventWatcher` from the `System.Management` namespace.\r\n\r\nHowever the native code generation is already giving me warnings:\r\n![image](https://user-images.githubusercontent.com/246718/50424839-88228f80-086b-11e9-9a4d-dc5b81a817a1.png)\r\n\r\nThe app later will throw with:\r\n![image](https://user-images.githubusercontent.com/246718/50424842-94a6e800-086b-11e9-8cb5-5c166fef7e04.png)\r\n\r\nThis is the code I use:\r\n```csharp\r\nvar query = new WqlEventQuery(\"__InstanceCreationEvent\", new TimeSpan(0, 0, 1), \"TargetInstance isa \\\"Win32_Process\\\"\");\r\nvar watcher = new ManagementEventWatcher(query);\r\n\r\nwhile (true)\r\n{\r\n    Thread.Sleep(1);\r\n\r\n    // Wait for process start event.\r\n    var e = watcher.WaitForNextEvent();\r\n    var name = ((ManagementBaseObject)e[\"TargetInstance\"])[\"Name\"].ToString().ToLowerInvariant();\r\n    var path = ((ManagementBaseObject)e[\"TargetInstance\"])[\"ExecutablePath\"].ToString();\r\n    var processId = Convert.ToInt32(((ManagementBaseObject)e[\"TargetInstance\"])[\"ProcessID\"]);\r\n\r\n    /// do stuff\r\n}\r\n```\r\n\r\nUsed command line: `dotnet publish -r win-x64 /p:Configuration=Release /p:platform=\"x64\"`\r\n\r\n.NET Core info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009820\r\n Commit:    799a33c6ba\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18305\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009820\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27205-02\r\n  Commit:  04035b3a4c\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009820 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27205-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/corert/issues/6728","RelatedDescription":"Open issue \"System.Management namespace exception\" (#6728)"},{"Id":"393991977","IsPullRequest":false,"CreatedAt":"2018-12-25T11:55:12","Actor":"andreakarasho","Number":"6727","RawContent":null,"Title":"Newtosoft.Json  MissingMetadatException","State":"closed","Body":"Hi This is the errror i receive after running my FNA game.\r\n```IGLDevice: OpenGLDevice\r\nOpenGL Device: GeForce GTX 1080/PCIe/SSE2\r\nOpenGL Driver: 4.6.0 NVIDIA 417.35\r\nOpenGL Vendor: NVIDIA Corporation\r\nMojoShader Profile: glsl120\r\nUsing EXT_swap_control_tear VSync!\r\n10:07:59 |  Trace   | C:\\Users\\andre\\Desktop\\CLASSICUO-NETCORE\\ClassicUO\\ClassicUO\\bin\\Release\\netcoreapp2.2\\win-x64\\native\r\nUnhandled Exception: System.Reflection.MissingMetadataException: 'System.Linq.Expressions.ExpressionCreator<Newtonsoft.Json.Serialization.ObjectConstructor<System.Object>>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at ClassicUO!<BaseAddress>+0x2eb2a3\r\n   at ClassicUO!<BaseAddress>+0x59ee01\r\n   at ClassicUO!<BaseAddress>+0x17ab31\r\n   at ClassicUO!<BaseAddress>+0x1727e9\r\n   at System.Linq.Expressions.Expression.Lambda(Type, Expression, String, Boolean, IEnumerable`1) + 0x5a\r\n   at Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(MethodBase) + 0xa3\r\n   at Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(Type) + 0x168\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey, Func`2) + 0x6e\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader, Type, Boolean) + 0x32\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader, Type) + 0xf9\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String, Type, JsonSerializerSettings) + 0x93\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String, JsonSerializerSettings) + 0x26\r\n   at ClassicUO.Configuration.ConfigurationResolver.Load[T](String) + 0x5f\r\n   at ClassicUO.Engine.Initialize() + 0x7b\r\n   at Microsoft.Xna.Framework.Game.DoInitialize() + 0x23\r\n   at Microsoft.Xna.Framework.Game.Run() + 0x22\r\n   at ClassicUO.Engine.Main(String[]) + 0x4b\r\n   at ClassicUO!<BaseAddress>+0x6da3f4\r\n```\r\n\r\nI added the rd.xml file like this\r\n```\r\n<Directives>\r\n  <Application>\r\n    <Assembly Name=\"Newtonsoft.Json\" >\r\n      <Type Name=\"Newtonsoft.Json.Serialization.ObjectConstructor`1[[System.Object,System.Private.CoreLib]]\" Dynamic=\"Required All\" />\r\n    </Assembly>\r\n\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\nProbably rd.xml file is wrong, but i dont understand how setting it right.","Url":"https://github.com/dotnet/corert/issues/6727","RelatedDescription":"Closed issue \"Newtosoft.Json  MissingMetadatException\" (#6727)"},{"Id":"393949868","IsPullRequest":true,"CreatedAt":"2018-12-25T02:36:14","Actor":"filipnavara","Number":"6726","RawContent":null,"Title":"WIP: Move CultureInfo to shared CoreLib","State":"open","Body":"Counterpart to https://github.com/dotnet/coreclr/pull/21672","Url":"https://github.com/dotnet/corert/pull/6726","RelatedDescription":"Open PR \"WIP: Move CultureInfo to shared CoreLib\" (#6726)"},{"Id":"393912014","IsPullRequest":true,"CreatedAt":"2018-12-24T21:14:47","Actor":"kvochko","Number":"6724","RawContent":null,"Title":"Bring up CoreFX tests on ARM","State":"closed","Body":"With this change and https://github.com/dotnet/coreclr/pull/21669 CoreFX tests on Linux/ARM no longer crash, and test results are as follows:\r\n```\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Collections.Tests  Total: 2835, Errors: 0, Failed: 0, Skipped: 13, Time: 68.510s \r\n```\r\nChanges:\r\n* Fixed frame pointer to be R11 instead of R7 in `PInvokeTransitionFrame` and in `RhpCallFilterFunclet`;\r\n* Uncommented `DelegateCtor` helper implementation\r\nCC @jkotas @alpencolt @sergign60 @iarischenko","Url":"https://github.com/dotnet/corert/pull/6724","RelatedDescription":"Closed or merged PR \"Bring up CoreFX tests on ARM\" (#6724)"},{"Id":"393916201","IsPullRequest":true,"CreatedAt":"2018-12-24T17:58:10","Actor":"tonerdo","Number":"6725","RawContent":null,"Title":"[Interpreter] Branching","State":"open","Body":"This PR adds support for the following opcodes:\r\n\r\n* br*\r\n* switch\r\n\r\nThe positive impact of this is that, interpreted assemblies can now be built in Debug mode\r\n\r\ncc @jkotas @MichalStrehovsky \r\n\r\nPS: Merry Christmas 🎉 ","Url":"https://github.com/dotnet/corert/pull/6725","RelatedDescription":"Open PR \"[Interpreter] Branching\" (#6725)"},{"Id":"393752492","IsPullRequest":true,"CreatedAt":"2018-12-24T09:41:00","Actor":"MichalStrehovsky","Number":"6719","RawContent":null,"Title":"Add option to root all application assemblies","State":"closed","Body":"This is similar to the option IL Linker exposes.\r\n\r\nI'm also tweaking the RD.XML rooting logic (that this new root provider calls into) to attempt to root generic types as well, if possible.","Url":"https://github.com/dotnet/corert/pull/6719","RelatedDescription":"Closed or merged PR \"Add option to root all application assemblies\" (#6719)"},{"Id":"393831559","IsPullRequest":false,"CreatedAt":"2018-12-24T08:10:52","Actor":"differentrain","Number":"6723","RawContent":null,"Title":"--","State":"closed","Body":"--","Url":"https://github.com/dotnet/corert/issues/6723","RelatedDescription":"Closed issue \"--\" (#6723)"},{"Id":"393803920","IsPullRequest":true,"CreatedAt":"2018-12-24T06:50:07","Actor":"Dotnet-GitSync-Bot","Number":"6721","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams @filipnavara","Url":"https://github.com/dotnet/corert/pull/6721","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6721)"},{"Id":"393806854","IsPullRequest":true,"CreatedAt":"2018-12-24T06:49:54","Actor":"filipnavara","Number":"6722","RawContent":null,"Title":"Delete file moved to shared partition","State":"closed","Body":"PR #6721  + build fix","Url":"https://github.com/dotnet/corert/pull/6722","RelatedDescription":"Closed or merged PR \"Delete file moved to shared partition\" (#6722)"},{"Id":"393780042","IsPullRequest":true,"CreatedAt":"2018-12-24T05:53:32","Actor":"tonerdo","Number":"6720","RawContent":null,"Title":"[Interpreter] Arithmetic and Binary operators","State":"closed","Body":"This PR adds support for the following opcodes\r\n\r\n### Arithmetic Operators\r\n\r\n* add.*\r\n* sub.*\r\n* mul.*\r\n* div.*\r\n* rem.*\r\n\r\n### Binary operators\r\n\r\n* and\r\n* or\r\n* xor\r\n\r\ncc @MichalStrehovsky @jkotas ","Url":"https://github.com/dotnet/corert/pull/6720","RelatedDescription":"Closed or merged PR \"[Interpreter] Arithmetic and Binary operators\" (#6720)"},{"Id":"393747274","IsPullRequest":true,"CreatedAt":"2018-12-24T03:32:43","Actor":"Dotnet-GitSync-Bot","Number":"6717","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @ichensky","Url":"https://github.com/dotnet/corert/pull/6717","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6717)"},{"Id":"393752456","IsPullRequest":true,"CreatedAt":"2018-12-24T00:05:59","Actor":"MichalStrehovsky","Number":"6718","RawContent":null,"Title":"Mark System.Private.Interpreter as framework assembly","State":"closed","Body":"It's a framework assembly...","Url":"https://github.com/dotnet/corert/pull/6718","RelatedDescription":"Closed or merged PR \"Mark System.Private.Interpreter as framework assembly\" (#6718)"},{"Id":"393707043","IsPullRequest":true,"CreatedAt":"2018-12-23T16:09:40","Actor":"MichalStrehovsky","Number":"6713","RawContent":null,"Title":"Fix ProjectN regression in `ByReference<T>`","State":"closed","Body":"Making the field `initonly` breaks the contract with the codegen.","Url":"https://github.com/dotnet/corert/pull/6713","RelatedDescription":"Closed or merged PR \"Fix ProjectN regression in `ByReference<T>`\" (#6713)"},{"Id":"393728523","IsPullRequest":true,"CreatedAt":"2018-12-23T07:58:23","Actor":"Dotnet-GitSync-Bot","Number":"6716","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6716","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6716)"},{"Id":"393717839","IsPullRequest":true,"CreatedAt":"2018-12-23T06:54:55","Actor":"Dotnet-GitSync-Bot","Number":"6715","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6715","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6715)"},{"Id":"393715548","IsPullRequest":false,"CreatedAt":"2018-12-23T01:39:57","Actor":"yinyue200","Number":"6714","RawContent":null,"Title":"ILT0005 compile error","State":"open","Body":"#### Bug description\r\nCan't compile by .Net Native\r\n\r\n#### Repro steps\r\nBuild the repo in RELEASE Mode https://github.com/yinyue200/vsthreadingwithnetnative\r\n\r\n#### Expected behavior\r\nbuild success\r\n\r\n#### Actual behavior\r\n1>  Processing application code\r\n1>  Computing application closure and generating interop code\r\n1>    Loading 91 modules...\r\n1>    Generating code...\r\n1>    Interop code generated.\r\n1>  Compiling interop code\r\n1>  Generating System.Reflection.DispatchProxy proxy code.\r\n1>  Cleaning up unreferenced code\r\n1>  Generating native code\r\n1>C:\\Users\\username\\.nuget\\packages\\microsoft.net.native.compiler\\2.1.8\\tools\\Microsoft.NetNative.targets(788,5): error : ILT0005: 'C:\\Users\\username\\.nuget\\packages\\runtime.win10-x86.microsoft.net.native.compiler\\2.1.8\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\username\\Source\\Repos\\App1\\App1\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\App1.rsp\"' returned exit code -2147483645\r\n\r\n#### Additional context\r\nsee https://github.com/Microsoft/vs-threading/issues/446","Url":"https://github.com/dotnet/corert/issues/6714","RelatedDescription":"Open issue \"ILT0005 compile error\" (#6714)"},{"Id":"393700014","IsPullRequest":true,"CreatedAt":"2018-12-22T22:07:37","Actor":"Dotnet-GitSync-Bot","Number":"6712","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/6712","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6712)"},{"Id":"393692146","IsPullRequest":true,"CreatedAt":"2018-12-22T19:53:31","Actor":"Dotnet-GitSync-Bot","Number":"6711","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6711","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6711)"},{"Id":"393313017","IsPullRequest":true,"CreatedAt":"2018-12-22T06:49:21","Actor":"jkotas","Number":"6706","RawContent":null,"Title":"Synchronize Task and Awaiter implementation with CoreCLR","State":"closed","Body":"Synchronized the code as much as possible with CoreCLR to prepare it for move to shared partition. The one major piece that I have excluded is tracing. I will look into doing that separately.","Url":"https://github.com/dotnet/corert/pull/6706","RelatedDescription":"Closed or merged PR \"Synchronize Task and Awaiter implementation with CoreCLR\" (#6706)"},{"Id":"393638862","IsPullRequest":true,"CreatedAt":"2018-12-22T05:22:03","Actor":"Dotnet-GitSync-Bot","Number":"6710","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @jkotas","Url":"https://github.com/dotnet/corert/pull/6710","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6710)"},{"Id":"393630062","IsPullRequest":true,"CreatedAt":"2018-12-22T03:27:55","Actor":"Dotnet-GitSync-Bot","Number":"6709","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @fiigii @fiigii @marek-safar @tannergooding @danmosemsft","Url":"https://github.com/dotnet/corert/pull/6709","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6709)"},{"Id":"393496204","IsPullRequest":true,"CreatedAt":"2018-12-21T19:50:11","Actor":"MarcoRossignoli","Number":"6708","RawContent":null,"Title":"Fix bug: [ILVerify] Class implements interface but not method","State":"closed","Body":"fixes https://github.com/dotnet/corert/issues/6707\r\n\r\nReplaced with correct helper that scan the type and its base types for an implementation of an interface method https://github.com/dotnet/corert/blob/master/src/Common/src/TypeSystem/Common/TypeSystemHelpers.cs#L352\r\n\r\n/cc @jkotas @MichalStrehovsky ","Url":"https://github.com/dotnet/corert/pull/6708","RelatedDescription":"Closed or merged PR \"Fix bug: [ILVerify] Class implements interface but not method\" (#6708)"},{"Id":"393409227","IsPullRequest":false,"CreatedAt":"2018-12-21T19:50:11","Actor":"IonKiwi","Number":"6707","RawContent":null,"Title":"[ILVerify] Class implements interface but not method","State":"closed","Body":"Trying to verify the following code.\r\n\r\n```\r\n    public interface IMyInterface : IEnumerable\r\n    {\r\n        bool GetTypedData();\r\n    }\r\n\r\n    public class Class1 : List<object>, IMyInterface\r\n    {\r\n        public bool GetTypedData()\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nILVerify claims that the class does not implement the GetEnumerator method (which is implemented by the base class).\r\n\r\n```\r\n[MD]: Error: Class implements interface but not method, Class: '[ClassLibrary2]ClassLibrary2.Class1' Interface: '[mscorlib]System.Collections.IEnumerable' Method: [mscorlib]System.Collections.IEnumerable.GetEnumerator().\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/6707","RelatedDescription":"Closed issue \"[ILVerify] Class implements interface but not method\" (#6707)"},{"Id":"393206365","IsPullRequest":true,"CreatedAt":"2018-12-21T04:17:54","Actor":"trylek","Number":"6705","RawContent":null,"Title":"Trivial bug fix - use EmitByte for fixup type in signatures","State":"closed","Body":"During code review of Andon's change to add initial support for\r\nmodule overrides to R2RDump signature parser I noticed that\r\nI had previously incorrectly used ReadUInt instead of ReadByte\r\nfor reading the fixup type from the signature.\r\n\r\nBased on this observation I audited all places in the CPAOT\r\ncompiler that emit signatures to double-check whether I might\r\nhave made the same mistake there. Indeed I found the same bug\r\nin two cases - in MethodFixupSignature and in encoding of\r\nREADYTORUN_FIXUP_Helper. Interestingly enough the same harmless\r\nbug is in CoreCLR, please see\r\n\r\nhttps://github.com/dotnet/coreclr/blob/04c4df8c9ecf53499838945197af70f11ddf840a/src/zap/zapimport.cpp#L2292\r\n\r\nThe AppendData performs the signature uint encoding which is\r\nharmless in this case because all READYTORUN_FIXUP_* have codes\r\nless than 128 however semantically it's still a bug, AppendByte\r\nshould be used instead as is clearly visible from the only place\r\nwhere the fixup is consumed,\r\n\r\nhttps://github.com/dotnet/coreclr/blob/04c4df8c9ecf53499838945197af70f11ddf840a/src/vm/jitinterface.cpp#L13715\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6705","RelatedDescription":"Closed or merged PR \"Trivial bug fix - use EmitByte for fixup type in signatures\" (#6705)"},{"Id":"393044508","IsPullRequest":false,"CreatedAt":"2018-12-20T13:53:35","Actor":"differentrain","Number":"6704","RawContent":null,"Title":"The value of Sse42.IsSupported property  is always false.","State":"closed","Body":"It's seems that native code can not support SSE4.2:\r\n\r\n```\r\nusing System;\r\nusing System.Runtime.Intrinsics.X86;\r\nnamespace SSE42SupportIssues\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine($\"Sse42.IsSupported = {Sse42.IsSupported}\");\r\n            Console.WriteLine($\"Sse42.X64.IsSupported = {Sse42.X64.IsSupported}\");\r\n\r\n            /* managed code output:\r\n             * Sse42.IsSupported = True\r\n             * Process is terminating due to StackOverflowException.\r\n             * \r\n             * native code output:\r\n             * Sse42.IsSupported = False\r\n             * Sse42.X64.IsSupported = False\r\n            */\r\n        }\r\n    }\r\n}\r\n```\r\nI have test this [Sample](https://github.com/dotnet/corert/files/2698872/SSE42SupportIssues.zip) on Windows, linux, and OS, and the result is the same.\r\n\r\nScripts in this sample suppose that .NET Core 3.0 SDK has been installed on system, so the script for linux (`Test-linux.sh`) can not be run directly, the path of CLI tool should be modify manually, \r\n\r\nPS, as we have seen, the `Sse42.X64` class can not be accessed, I dont' know if I should create this issue again in CoreFx....\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/6704","RelatedDescription":"Closed issue \"The value of Sse42.IsSupported property  is always false.\" (#6704)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"394245543","IsPullRequest":true,"CreatedAt":"2018-12-26T21:37:44","Actor":"dsplaisted","Number":"2774","RawContent":null,"Title":"Resolve assets from targeting pack","State":"open","Body":"First steps for dotnet/cli#10085\r\n\r\n- References \"Targeting Packs\" with ExcludeAssets=\"all\", and resolves assets from the targeting packs directly (instead of going through the assets file)\r\n- References \"Runtime Packs\" if necessary to support self-contained publish (these still go through the assets file for now)\r\n- For now, hard-codes a `KnownFrameworkReference` to Microsoft.NETCore.App, and includes the RID graph directly.  These will need to be added to core-sdk\r\n- The list of runtime packs for each `KnownFrameworkReference`, and the RIDs available, will also need to be supplied by core-sdk","Url":"https://github.com/dotnet/sdk/pull/2774","RelatedDescription":"Open PR \"Resolve assets from targeting pack\" (#2774)"},{"Id":"394162568","IsPullRequest":false,"CreatedAt":"2018-12-26T18:15:36","Actor":"1scrooge","Number":"2773","RawContent":null,"Title":"dotnet`s error with credentials for nuget feed","State":"closed","Body":"After updated dotnet up to 2.1.502 and uper I have an error with credentials for nuget feed when I using apikey\r\n```\r\n/usr/share/dotnet/sdk/2.1.502/NuGet.targets(499,5): error : Unable to parse config file because: Credentials item must have username and password. Path: '/home/user/.nuget/NuGet/NuGet.Config'\r\n```\r\nmy NuGet.Config:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n   <packageSources>\r\n        <add key=\"name_feed\" value=\"http://url_feed/nuget\" />\r\n    </packageSources>\r\n    <packageSourceCredentials>\r\n        <name_feed>\r\n           <apikeys>\r\n             <add key=\"http://url_feed/nuget\" value=\"qwd32dqwd231vdas13\" />\r\n           </apikeys>\r\n        </name_feed>\r\n    </packageSourceCredentials>\r\n</configuration>\r\n```\r\non 2.1.403 version works fine\r\nCould you fix it?","Url":"https://github.com/dotnet/sdk/issues/2773","RelatedDescription":"Closed issue \"dotnet`s error with credentials for nuget feed\" (#2773)"},{"Id":"393841237","IsPullRequest":false,"CreatedAt":"2018-12-25T19:48:07","Actor":"vitlav","Number":"2772","RawContent":null,"Title":" The library 'libhostpolicy.so' required to execute the application was not found in","State":"closed","Body":"## Steps to reproduce\r\n* get the latest SDK binaries (2.1.6, f.i.) and put them on the path (on /usr/lib64/dotnet-bootstrap/ dir actually in my case)\r\n* create empty dir with some old version:\r\n  mkdir /usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App/2.0.5\r\n* `dotnet new console`\r\n* `dotnet run`\r\n\r\n## Expected behavior\r\nProgram runs and prints hello world.\r\n\r\n## Actual behavior\r\n```\r\n/usr/lib64/dotnet-bootstrap/sdk/2.1.500/Roslyn/Microsoft.CSharp.Core.targets(52,5): error : A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App/2.0.5'.\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\n $ ls /usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App/\r\n 2.0.5  2.1.6\r\n\r\nWhy it selected random 2.0.5 as preffered version?\r\n\r\n## Environment data\r\n```\r\n$ /usr/lib64/dotnet-bootstrap/dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     altlinux\r\n OS Version:  20170925\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/lib64/dotnet-bootstrap/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/lib64/dotnet-bootstrap/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/lib64/dotnet-bootstrap/shared/Microsoft.NETCore.App]\r\n\r\n```","Url":"https://github.com/dotnet/sdk/issues/2772","RelatedDescription":"Closed issue \" The library 'libhostpolicy.so' required to execute the application was not found in\" (#2772)"},{"Id":"393671505","IsPullRequest":true,"CreatedAt":"2018-12-23T18:06:21","Actor":"dotnet-maestro[bot]","Number":"2771","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18620.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18620.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2771","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2771)"},{"Id":"392840072","IsPullRequest":true,"CreatedAt":"2018-12-21T18:00:55","Actor":"wli3","Number":"2766","RawContent":null,"Title":"Fix package version 1000 cannot install","State":"closed","Body":"run `dotnet pack -p:version=1000` with packaged shim, and the result package cannot run. Due to embedded shim has version \"1000\" while the actual nuget folder layout is \"1000.0.0\".\r\n\r\nthe version need to be normalized to much the layout. Per discussion https://github.com/dotnet/cli/issues/9870","Url":"https://github.com/dotnet/sdk/pull/2766","RelatedDescription":"Closed or merged PR \"Fix package version 1000 cannot install\" (#2766)"},{"Id":"393451224","IsPullRequest":true,"CreatedAt":"2018-12-21T17:58:24","Actor":"dotnet-maestro[bot]","Number":"2770","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18620.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18620.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2770","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2770)"},{"Id":"393294093","IsPullRequest":false,"CreatedAt":"2018-12-21T03:00:35","Actor":"davidwengier","Number":"2769","RawContent":null,"Title":"Remove duplicate FolderPublish capability for SDK projects","State":"open","Body":"Once https://github.com/dotnet/project-system/pull/4400 has been merged the capability can be removed from the SDK, leaving all publish related capabilities in the same targets file inside the project system, for consistency.\r\n\r\nhttps://github.com/dotnet/sdk/blob/c93f4a14ebcff4a18840b06886c5dcf24ae64a0e/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L585-L588","Url":"https://github.com/dotnet/sdk/issues/2769","RelatedDescription":"Open issue \"Remove duplicate FolderPublish capability for SDK projects\" (#2769)"},{"Id":"392730861","IsPullRequest":false,"CreatedAt":"2018-12-20T21:23:42","Actor":"conniey","Number":"2765","RawContent":null,"Title":"`dotnet test` fails when native assets are required and multiple RuntimeIdentifiers are set","State":"closed","Body":"There are several related questions/issues to this (ie. #1017), so this might be more of a guidance question.\r\n\r\nOur ApiPort tests use ilasm to compile IL files and verify that our MetadataReader is working correctly. (ex. [Microsoft.Fx.Portability.MetadataReader.Tests.csproj](https://github.com/Microsoft/dotnet-apiport/blob/dev/tests/lib/Microsoft.Fx.Portability.MetadataReader.Tests/Microsoft.Fx.Portability.MetadataReader.Tests.csproj).\r\n\r\nIt currently only works on .NET 4.6, but we want to be able to run this test on Linux as well to make sure our MetadataReader works on all platforms.\r\n\r\nWhat is the solution here?\r\n\r\nWhen I set: `<RuntimeIdentifiers>win7-x86;linux-x64</RuntimeIdentifiers>`, all tests when running against both .NET 4.6 and .NETCoreApp2.1 because ildasm cannot be located (since it is not copied to the OuputDirectory).","Url":"https://github.com/dotnet/sdk/issues/2765","RelatedDescription":"Closed issue \"`dotnet test` fails when native assets are required and multiple RuntimeIdentifiers are set\" (#2765)"},{"Id":"393037303","IsPullRequest":true,"CreatedAt":"2018-12-20T20:32:27","Actor":"dotnet-maestro[bot]","Number":"2767","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18619.4\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18619.4\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2767","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2767)"},{"Id":"393037322","IsPullRequest":false,"CreatedAt":"2018-12-20T13:01:50","Actor":"vgriph","Number":"2768","RawContent":null,"Title":"Links to app.config is case sensitive","State":"open","Body":"I've been migrating project files from the old project system to use Microsoft.NET.Sdk. We had some projects which share app.config using links of the type\r\n```\r\n<None Include=\"..\\OtherProject\\App.config\">\r\n  <Link>App.config</Link>\r\n</None>\r\n```\r\nHowever, with when using SDK file projects these links are not used for creating target assembly configuration file. After some debugging I found out that\r\n```\r\n<None Include=\"..\\OtherProject\\App.config\">\r\n  <Link>app.config</Link>\r\n</None>\r\n```\r\nworks.","Url":"https://github.com/dotnet/sdk/issues/2768","RelatedDescription":"Open issue \"Links to app.config is case sensitive\" (#2768)"},{"Id":"392591862","IsPullRequest":true,"CreatedAt":"2018-12-19T18:19:29","Actor":"dotnet-maestro[bot]","Number":"2763","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18618.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2763","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2763)"},{"Id":"392680433","IsPullRequest":false,"CreatedAt":"2018-12-19T16:29:03","Actor":"nguerrera","Number":"2764","RawContent":null,"Title":"Changing AssemblyName prevent app from starting","State":"open","Body":"_From @LokiMidgard on December 18, 2018 11:5_\n\nI've created a project and want to rename the created Assembly.\r\nOutputType: `WinExe`  \r\nTargetFramework: `netcoreapp3.0`  \r\nUseWPF: `true`\r\n\r\nOS: `Windows 10`  \r\ndotnet core `3.0.100-preview-009812`\r\n\r\nAfter renaming it I can no longer start the exe or debug it in Visual Studio.\r\nFollowing error appears when I try to start debugging:\r\n```\r\nDas Programm \"[17104] DiceTool.exe\" wurde mit Code -2147450741 (0x8000808b) beendet.\r\nDas Programm \"[17104] DiceTool.exe: Programmablaufverfolgung\" wurde mit Code 0 (0x0) beendet.\r\n```\r\nI try to set `<AssemblyName>DiceTool.Ui</AssemblyName>` to `<AssemblyName>DiceTool</AssemblyName>`.\r\n\r\nReverting this change will fix the issue.\r\n\r\nThe code to reproduce this is in [this Commit](https://github.com/LokiMidgard/Dice-Tool/tree/512a397c8c09de7be3a2c1b106c9a7457fc5c305)\r\n\r\n\n\n_Copied from original issue: dotnet/core#2163_","Url":"https://github.com/dotnet/sdk/issues/2764","RelatedDescription":"Open issue \"Changing AssemblyName prevent app from starting\" (#2764)"},{"Id":"389994622","IsPullRequest":true,"CreatedAt":"2018-12-19T01:43:18","Actor":"jainaashish","Number":"2745","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"closed","Body":"Keeping it consistent with 2.2.2xx train","Url":"https://github.com/dotnet/sdk/pull/2745","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2745)"},{"Id":"392406799","IsPullRequest":true,"CreatedAt":"2018-12-19T01:43:03","Actor":"livarcocc","Number":"2762","RawContent":null,"Title":"Updating NuGet and CLI version.","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/2762","RelatedDescription":"Open PR \"Updating NuGet and CLI version.\" (#2762)"},{"Id":"392386471","IsPullRequest":true,"CreatedAt":"2018-12-19T00:01:31","Actor":"dotnet-bot","Number":"2761","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2761","RelatedDescription":"Open PR \"Merge release/2.2.2xx to master\" (#2761)"},{"Id":"392125219","IsPullRequest":true,"CreatedAt":"2018-12-18T17:37:52","Actor":"dotnet-bot","Number":"2758","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2758","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2758)"},{"Id":"392146705","IsPullRequest":true,"CreatedAt":"2018-12-18T17:35:43","Actor":"dotnet-maestro[bot]","Number":"2759","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18617.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2759","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2759)"},{"Id":"392203074","IsPullRequest":false,"CreatedAt":"2018-12-18T15:18:06","Actor":"weltkante","Number":"2760","RawContent":null,"Title":"References specified in the project file are sometimes dropped and replaced by wrong versions","State":"open","Body":"MsBuild loses assembly references specified in our project file if the SDK happens to import the same assembly (possibly in a different version) from nuget packages.\r\n\r\nWe have an ASP.NET Core project which pulls in Newtonsoft.Json with 11.0.2 package version. Our project file has an explicit reference to Newtonsoft.Json 12.0.0.0 assembly version. The reference is specified via HintPath because we do not want to update every single project file (we have a lot) when we change the 3rd party components we deploy.\r\n```xml\r\n    <Reference Include=\"Newtonsoft.Json\">\r\n      <HintPath>$(ReferenceBasePath)Newtonsoft.Json.dll</HintPath>\r\n    </Reference>\r\n```\r\nThe bug is in [`ResolveLockFileReferences`](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.PackageDependencyResolution.targets#L448) target where in line 448 you are removing references via their name. Since you generate package references without strong identity you will remove any corresponding references specified in the project using the same name, even though they might have different metadata.\r\n\r\nmsbuild logging says\r\n```\r\n    _JoinedResolvedCompileFileDefinitions=\r\n        Newtonsoft.Json\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\newtonsoft.json\\11.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n                NuGetPackageId=Newtonsoft.Json\r\n                NuGetPackageVersion=11.0.2\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Collections.Immutable\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.collections.immutable\\1.5.0\\lib\\netstandard2.0\\System.Collections.Immutable.dll\r\n                NuGetPackageId=System.Collections.Immutable\r\n                NuGetPackageVersion=1.5.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Reflection.Metadata\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.reflection.metadata\\1.6.0\\lib\\netstandard2.0\\System.Reflection.Metadata.dll\r\n                NuGetPackageId=System.Reflection.Metadata\r\n                NuGetPackageVersion=1.6.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n    Entfernte Elemente: \r\n    Reference=\r\n        Newtonsoft.Json\r\n                HintPath=..\\..\\..\\ThirdParty\\Newtonsoft.Json.dll\r\n        System.Collections.Immutable\r\n                HintPath=..\\..\\..\\ThirdParty\\System.Collections.Immutable.dll\r\n        System.Reflection.Metadata\r\n                HintPath=..\\..\\..\\ThirdParty\\System.Reflection.Metadata.dll\r\n    Hinzugefügte Elemente: \r\n    Reference=\r\n        Newtonsoft.Json\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\newtonsoft.json\\11.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n                NuGetPackageId=Newtonsoft.Json\r\n                NuGetPackageVersion=11.0.2\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Collections.Immutable\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.collections.immutable\\1.5.0\\lib\\netstandard2.0\\System.Collections.Immutable.dll\r\n                NuGetPackageId=System.Collections.Immutable\r\n                NuGetPackageVersion=1.5.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n        System.Reflection.Metadata\r\n                ExternallyResolved=true\r\n                HintPath=C:\\Users\\username\\.nuget\\packages\\system.reflection.metadata\\1.6.0\\lib\\netstandard2.0\\System.Reflection.Metadata.dll\r\n                NuGetPackageId=System.Reflection.Metadata\r\n                NuGetPackageVersion=1.6.0\r\n                NuGetSourceType=Package\r\n                Private=false\r\n```\r\nThe problem goes away if we specify the reference as\r\n```xml\r\n    <Reference Include=\"Newtonsoft.Json, Version=12.0.0.0\">\r\n      <HintPath>$(ReferenceBasePath)Newtonsoft.Json.dll</HintPath>\r\n    </Reference>\r\n```\r\nbut this is something we do *not* want due to the amount of projects and number of references we would have to maintain manually. For us assembly references are uniquely defined by the version checked into source control in their corresponding third party folder.\r\n\r\nWhile debugging the issue I have seen other msbuild target files acknowledge this problem by rebuilding the references list instead of selectively removing references. Something like\r\n```xml\r\n    <ItemGroup>\r\n      <Reference Remove=\"@(Reference)\"/>\r\n      <Reference Include=\"@(_ModifiedReferences)\"/>\r\n    </ItemGroup>\r\n```\r\nUnfortunately I can't seem to find the place again where I've seen it, but I hope you get the idea of the problem.","Url":"https://github.com/dotnet/sdk/issues/2760","RelatedDescription":"Open issue \"References specified in the project file are sometimes dropped and replaced by wrong versions\" (#2760)"},{"Id":"391940621","IsPullRequest":true,"CreatedAt":"2018-12-18T03:30:25","Actor":"dotnet-bot","Number":"2757","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2757","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2757)"},{"Id":"391887120","IsPullRequest":true,"CreatedAt":"2018-12-17T21:54:39","Actor":"wli3","Number":"2756","RawContent":null,"Title":"No apphost in PackAsTool","State":"closed","Body":"fix #https://github.com/dotnet/sdk/issues/2749","Url":"https://github.com/dotnet/sdk/pull/2756","RelatedDescription":"Closed or merged PR \"No apphost in PackAsTool\" (#2756)"},{"Id":"391643563","IsPullRequest":false,"CreatedAt":"2018-12-17T16:31:07","Actor":"YunWeiaa","Number":"2754","RawContent":null,"Title":"For .Net Core 3.0, create a winforms app, dotnet run without the windows box poping up.","State":"closed","Body":"### Description:\r\nCreate a winforms app. Build and run. \r\ndotnet new winforms -o MyWinFormsApp \r\ncd MyWinFormsApp \r\ndotnet build \r\ndotnet run\r\n\r\n**Expected**: It should appear a windows box like this\r\n![image](https://user-images.githubusercontent.com/33921754/50080741-c4c90800-0227-11e9-8163-39413bd95ebe.png)\r\n\r\n**Actual**: It doesn’t pop up a windows box.\r\n![image](https://user-images.githubusercontent.com/33921754/50080827-f17d1f80-0227-11e9-9d5e-a6298d7667fb.png)\r\n### Test Environment:\r\nD16.0/28414.68(16.0 preview 2.0) + CLI\\SDK: 3.0.100-preview-009839 \r\ndotnet --info:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009839\r\n Commit:    ee9fe44627\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009839\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27216-02\r\n  Commit:  79edbd4d15\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009648 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009839 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27216-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27214-12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2754","RelatedDescription":"Closed issue \"For .Net Core 3.0, create a winforms app, dotnet run without the windows box poping up.\" (#2754)"},{"Id":"391504131","IsPullRequest":true,"CreatedAt":"2018-12-17T16:23:27","Actor":"dagood","Number":"2753","RawContent":null,"Title":"Exclude unit test projects from source-build","State":"closed","Body":"Reopening https://github.com/dotnet/sdk/pull/2642. (I don't seem to have permissions to reopen the PR in-place.)\r\n\r\n> This is a patch for removing test dependencies from source-build: https://github.com/dotnet/source-build/pull/847.\r\n> \r\n> RepoToolset picks up on this `ExcludeFromSourceBuild` property I'm adding and disables restore and build.\r\n> \r\n> @nguerrera, PTAL.\r\n\r\nThis is the patch directly: https://github.com/dotnet/source-build/blob/ecc7b00f5b7cf2d21cb6f545669690f7ab4996fc/patches/sdk/0001-Exclude-unit-test-projects-from-source-build.patch. Getting patch fixes pulled into the repo is important to us to avoid maintenance costs.","Url":"https://github.com/dotnet/sdk/pull/2753","RelatedDescription":"Closed or merged PR \"Exclude unit test projects from source-build\" (#2753)"},{"Id":"391702193","IsPullRequest":true,"CreatedAt":"2018-12-17T16:23:00","Actor":"dotnet-maestro[bot]","Number":"2755","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2755","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2755)"},{"Id":"391465182","IsPullRequest":true,"CreatedAt":"2018-12-16T21:53:20","Actor":"dotnet-maestro[bot]","Number":"2750","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2750","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2750)"},{"Id":"391496812","IsPullRequest":true,"CreatedAt":"2018-12-16T20:07:57","Actor":"nguerrera","Number":"2752","RawContent":null,"Title":"Use latest signtool to avoid MAX_PATH issue in official builds","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2752","RelatedDescription":"Closed or merged PR \"Use latest signtool to avoid MAX_PATH issue in official builds\" (#2752)"},{"Id":"390333769","IsPullRequest":false,"CreatedAt":"2018-12-16T19:45:26","Actor":"abpiskunov","Number":"2747","RawContent":null,"Title":"Add publish capabilities for SDK based ClassLibraries and ConsoleApps","State":"closed","Body":"Per our discussion with @nguerrera and @davkean we need to switch to new capabilities schema for publish (see below). To accomplish that one of the workitems is to add\r\n\r\n- FolderPublish to SDK-based class libraries and console apps , along with WPF and WinForms (if it is not present yet)\r\n- AppServicePublish to SDK-based class libraries and console apps \r\n\r\nThis needs to happen in P2 and earlier rather than later since Publish would need to commit and test changes after all capabilities are added.\r\n\r\nCapabilities \r\n \r\n•         \"Publish\": all projects that support any kind of publish should contain this capability\r\no    All .NET project types\r\n•         \"FolderPublish\": if project supports publishing to folder\r\no    Class libraries  (classic and core). Note: we don't own Publish for classic class libraries and classic ConsoleApps, ClickOnce does. There should be separate work item tracking ClickOnce support for our publish framework. However we can add capability now and it would light up when ClickOnce adds apublish provider.\r\no    Console app (classic, core). \r\no    WebSites, WAP, Web core\r\no    WPF (core and classic)\r\no    WinForms (classic and core)\r\n•         \"AppServicePublish\": if project is publishable to any web related publish target: Web, AppService, etc \r\no    Console apps (classic and core)\r\no    WebSites, WAP, Web core\r\n \r\nPotential pending capabilities:\r\n•         \"ClickOnce\"\r\no    Classic console apps\r\no    WPF (classic)\r\no    WinForms (classic)\r\n•         \"MSIX\"\r\no    Console apps (classic and core)\r\no    WPF (classic and core)\r\no    WinForms (classic and core)\r\n \r\n \r\n \r\nProviders \r\n \r\n•         FolderProvider: AppliesTo(\"Publish&FolderPublish\")\r\n•         AppServiceProvider: AppliesTo(\"Publish&AppServicePublish\")\r\n•         IISProvider: AppliesTo(\"Publish&Web\")\r\n•         AzureVMProvider: AppliesTo(\"Publish&Web\")\r\n•         AppServiceLinuxProvider: AppliesTo(\"Publish&DotNetCoreWeb\")\r\n•         ContainerRegistryProvider:AppliesTo(Publish&AppServicePublish&(Web|DotnetCoreWeb))\r\n•         ClickOnceProvider:AppliesTo(Publish&ClickOnce)\r\n•         MSIXProvider:AppliesTo(Publish&MSIX)\r\n \r\n \r\nWorkitems:\r\n \r\n•\tAdd FolderPublish to WPF and WinForms (classic and core), Class Libraries and Console Apps (classic and core). Some of them already have it , just make sure all of them have. <- CSharp & SDK\r\n•\tAdd AppServicePublish to Console apps (classic and core) <- CSharp and SDK\r\n•\tAdd AppServicePublish to WebSites, WAP, and Core Web <- WAP and WebSdk\r\n \r\nClickOnce and MSIX I would leave to their owner to request/add when they are ready.\r\n","Url":"https://github.com/dotnet/sdk/issues/2747","RelatedDescription":"Closed issue \"Add publish capabilities for SDK based ClassLibraries and ConsoleApps\" (#2747)"},{"Id":"391486333","IsPullRequest":false,"CreatedAt":"2018-12-16T17:09:36","Actor":"joaorosado","Number":"2751","RawContent":null,"Title":"Properties defined in target files do not get applied with multiple TargetFrameworks","State":"open","Body":"I'm adding multitargeting to net461 and netstandard2.0 in some of my projects as a migration path.\r\nWhile doing this and trying I noticed that in one of the targets all the generate AssemblyInfo had the default values.\r\n\r\nCurrently I have a import on my projects that adds extra targets and sets the common properties consistently on all of them.\r\n`<Import Project=\"$(ProjectDir)..\\..\\Commons\\Common.targets\" />`\r\n\r\nthis target file is taking care of the properties import inside (but the problem also occurs if they are defined explicitly in the .targets) \r\n`<Import Project=\"Common.props\" />`\r\n\r\nThis worked fine with one target and in the generated assembly info file that Visual Studio is doing automatically (I can see both files in disk being changed correctly).\r\nBut then when actually doing the real build the AssemblyInfo on the **second** target gets all the default values.\r\n\r\nI've found 2 workarounds for this:\r\n- Import the \"Common.props\" directly on my project.\r\n- Add an empty \"Directory.Build.props\" file on the root of my repository. <- not sure why this fixes it\r\n\r\nWhile I'm OK with any of the workarounds, I'm really worried that other target files get incorrect properties and that the second target framework gets build incorrectly.\r\n\r\nHow is the correct way of doing this?\r\n\r\nTested with both VS 15.9.3 and 15.9.4 \r\n\r\nEdit: can't seem to get any of my workarounds to work now that upgraded to 15.9.4 :(","Url":"https://github.com/dotnet/sdk/issues/2751","RelatedDescription":"Open issue \"Properties defined in target files do not get applied with multiple TargetFrameworks\" (#2751)"},{"Id":"390007564","IsPullRequest":true,"CreatedAt":"2018-12-14T00:15:33","Actor":"dotnet-bot","Number":"2746","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2746","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2746)"},{"Id":"390902820","IsPullRequest":false,"CreatedAt":"2018-12-13T23:21:33","Actor":"wli3","Number":"2749","RawContent":null,"Title":"Pack as tool should not generate exe in nupkg","State":"open","Body":"We generate an executable by default as a new 3.0.xxx feature. However, we should not generate such file during PackAsTool. It should not be harmful however it would be flagged or signed by infrastructure","Url":"https://github.com/dotnet/sdk/issues/2749","RelatedDescription":"Open issue \"Pack as tool should not generate exe in nupkg\" (#2749)"},{"Id":"390775310","IsPullRequest":false,"CreatedAt":"2018-12-13T17:53:16","Actor":"nphmuller","Number":"2748","RawContent":null,"Title":"Option to treat NETSDK warnings as errors","State":"closed","Body":"While updating to 2.2.100 I noticed a couple of warnings were added. Like `NETSDK1071`.\r\nIn my CI I build using the `TreatWarningsAsErrors` flag (`dotnet build /p:TreatWarningsAsErrors=\"true\"`)`.\r\n\r\nThe build still completed succesfully, while `NETSDK1071` was thrown.\r\n\r\nWhat is the recommended way to force a build to fail if any of these warnings are thrown from the SDK?\r\nThe most user friendly way would be to use the same flag as msbuild. But that doesn't seem to be supported atm.","Url":"https://github.com/dotnet/sdk/issues/2748","RelatedDescription":"Closed issue \"Option to treat NETSDK warnings as errors\" (#2748)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalMlaik","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"},{"Id":"319700544","IsPullRequest":false,"CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Number":"65","RawContent":null,"Title":".NET Framework Runtime and Builder Docker repos have merged ","State":"open","Body":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n","Url":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Open issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65)"},{"Id":"315285808","IsPullRequest":false,"CreatedAt":"2018-04-18T00:20:13","Actor":"richlander","Number":"64","RawContent":null,"Title":"April 2018 .NET Updates","State":"open","Body":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [Announcing the .NET Framework 4.7.2](https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/)\r\n* No new patch releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Open issue \"April 2018 .NET Updates\" (#64)"},{"Id":"305721744","IsPullRequest":false,"CreatedAt":"2018-03-15T21:13:36","Actor":"mairaw","Number":"63","RawContent":null,"Title":"Transport Layer Security (TLS) best practices with the .NET Framework article published","State":"open","Body":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices for .NET Framework applications at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675","Url":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Open issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1073371092515840000","CreatedAt":"2018-12-14T00:16:25+00:00","UserScreenname":"dotnet","Text":"C# and Visual Basic files get Regex language support in @VisualStudio 2019 Preview\nhttps://t.co/NL5QgAl9hq https://t.co/WWTK6BT5RG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":367,"FavoriteCount":135,"RawContent":null},{"Id":"1072638045227270144","CreatedAt":"2018-12-11T23:43:33+00:00","UserScreenname":"dotnet","Text":"Blogged: .NET Framework December 2018 Security and Quality Rollup https://t.co/5PllosL5i2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1072146418868064256","CreatedAt":"2018-12-10T15:10:00+00:00","UserScreenname":"dotnet","Text":"Learn about writing tests for @AzureFunctions with Senior Program Manager Jeff Hollan (@jeffhollan) in this episode… https://t.co/18tWdVma7r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2018-12-27T05:30:45.636205Z","RunDurationInMilliseconds":20515}