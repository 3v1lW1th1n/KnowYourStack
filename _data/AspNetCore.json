{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7673432181","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:09:33","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3136","RelatedDescription":"Closed issue \"ProcessExtensions.KillTree doesn't actually kill the process tree on macOS\" (#3136) at aspnet/Home","RelatedBody":"Root cause of https://github.com/aspnet/DotNetTools/issues/410.\r\n\r\nProcessExtensions.KillTree times out while trying to run `pgrep -P $PID`. There appears to produce some kind of threadpool deadlock when calling `Process.WaitForExit` from within a Dispose call. We should look into other ways of discovering and killing the process tree. On Linux, we can use `/proc`. On macOS, I'm not sure."},{"Id":"7672754931","Type":"IssuesEvent","CreatedAt":"2018-05-14T19:48:41","Actor":"under3415","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3139","RelatedDescription":"Closed issue \"ASP.net core 2.1 rc1: System error in view when exporting to a file\" (#3139) at aspnet/Home","RelatedBody":"When exporting a view to a file an error message appears:\r\nSystem.Collections.Generic.List`1[MyApp.Models.MyModel] IEnumerable<MyModel>\r\n\r\nSee this SO article for more details: \r\nhttps://stackoverflow.com/questions/50320946/how-to-let-user-download-data-to-a-file\r\n\r\nYou can use this project to replicate the issue: \r\nhttps://github.com/under3415/ExportError/\r\n\r\nRun the project, click download link, examine the file for above error message."},{"Id":"7671401358","Type":"IssuesEvent","CreatedAt":"2018-05-14T15:32:19","Actor":"andrewbadera","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3141","RelatedDescription":"Opened issue \"ASP.NET Core Web API async controller method fails to respond to client, should throw 500 due to serialization issue\" (#3141) at aspnet/Home","RelatedBody":"ASP.NET Core Web API async controller method fails to respond to client, should throw 500 due to serialization issue\r\n\r\nASP.NET Core 2.0\r\nMicrosoft.AspNetCore.All 2.0.6\r\n\r\nA .NET Core Web API async controller method appears to execute successfully. The application registers a 200 response with Application Insights for the GET request, but no response is returned to client after successfully exiting the method via return Ok(data).\r\n\r\nA second, serialization exception - unseen within Visual Studio while debugging - appears in Application Insights, indicating a JSON serialization issue with a data object to which I had recently added a second constructor. This object was being returned as a list from the controller method in question. Addressing this exception by marking the proper constructor returns the application to expected behavior.\r\n\r\nNewtonsoft.Json.JsonSerializationException: Unable to find a constructor to use for type Posteriori.Data.Client. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'Projects', line 1, position 48.\r\nat Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)\r\nat Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\nat Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\nat Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\nat Newtonsoft.Json.Linq.JToken.ToObject(Type objectType, JsonSerializer jsonSerializer)\r\nat Microsoft.Azure.Documents.QueryResult.Convert(Type type)\r\nat Microsoft.Azure.Documents.QueryResult.AsTypeT\r\nat System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\nat Microsoft.Azure.Documents.Client.FeedResponseBinder.Convert[T](FeedResponse1 dynamicFeed) at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0) at Microsoft.Azure.Documents.Linq.DocumentQuery1.d__31.MoveNext()\r\nat Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\nat Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\nat Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\nat Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)\r\nat Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.AspNetCore.Builder.RouterMiddleware.d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.d__2.MoveNext()"},{"Id":"7668132422","Type":"IssuesEvent","CreatedAt":"2018-05-14T03:26:48","Actor":"TheMagnificent11","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3140","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.SpaServices.Extensions 2.1.0-rc1-final - UseSpaStaticFiles Issue\" (#3140) at aspnet/Home","RelatedBody":"I recently upgrade a ASP.Net Core 2.0 project to 2.1 RC.\r\n\r\nThe project used teh SPA Services and worked as expected in 2.0.\r\n\r\nI'm getting the following error after upgrading to 2.1.\r\n\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=To use UseSpaStaticFiles, you must first register an ISpaStaticFileProvider in the service provider, typically by calling services.AddSpaStaticFiles.\r\n  Source=Microsoft.AspNetCore.SpaServices.Extensions\r\n  StackTrace:\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.ShouldServeStaticFiles(IApplicationBuilder app, Boolean allowFallbackOnServingWebRootFiles, IFileProvider& fileProviderOrDefault)\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFilesInternal(IApplicationBuilder app, StaticFileOptions staticFileOptions, Boolean allowFallbackOnServingWebRootFiles)\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(IApplicationBuilder applicationBuilder, StaticFileOptions options)\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(IApplicationBuilder applicationBuilder)\r\n   at Web.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in C:\\src\\demo-me\\Web\\Startup.cs:line 64\r\n```\r\n\r\nMy code, for adding/configuring SPA services, appears to be the same as the code generated from the Angular template for ASP.Net Core 2.1.\r\n\r\nHere's my code.\r\n\r\n**Project File**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <AssemblyName>Web</AssemblyName>\r\n    <RootNamespace>Web</RootNamespace>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>\r\n    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>\r\n    <IsPackable>false</IsPackable>\r\n    <SpaRoot>ClientApp\\</SpaRoot>\r\n    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\\**</DefaultItemExcludes>\r\n    <BuildServerSideRenderer>false</BuildServerSideRenderer>\r\n    <UserSecretsId>98409fa3-6e14-4655-93f1-941183396787</UserSecretsId>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <DocumentationFile>bin\\Debug\\netcoreapp2.0\\Web.xml</DocumentationFile>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n    <WarningsAsErrors />\r\n    <CodeAnalysisRuleSet>..\\CodeAnalysis.ruleset</CodeAnalysisRuleSet>\r\n    <Features>IOperation</Features>\r\n    <NoWarn>1701;1702;1705;CA2007;CA1305</NoWarn>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <DocumentationFile>bin\\Release\\netcoreapp2.0\\Web.xml</DocumentationFile>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n    <WarningsAsErrors />\r\n    <CodeAnalysisRuleSet>..\\CodeAnalysis.ruleset</CodeAnalysisRuleSet>\r\n    <Features>IOperation</Features>\r\n    <NoWarn>1701;1702;1705;CA2007;CA1305</NoWarn>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Autofac\" Version=\"4.8.1\" />\r\n    <PackageReference Include=\"Autofac.Extensions.DependencyInjection\" Version=\"4.2.2\" />\r\n    <PackageReference Include=\"AutoMapper\" Version=\"6.2.2\" />\r\n    <PackageReference Include=\"AutoMapper.Extensions.Microsoft.DependencyInjection\" Version=\"3.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.1.0-rc1-final\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.1.0-rc1-final\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices.Extensions\" Version=\"2.1.0-rc1-final\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.FxCopAnalyzers\" Version=\"2.6.0\" />\r\n    <PackageReference Include=\"StyleCop.Analyzers\" Version=\"1.0.2\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"System.IdentityModel.Tokens.Jwt\" Version=\"5.2.2\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n    <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->\r\n    <Content Remove=\"ClientApp\\**\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Data.Interfaces\\Data.Interfaces.csproj\" />\r\n    <ProjectReference Include=\"..\\Data.Models\\Data.Models.csproj\" />\r\n    <ProjectReference Include=\"..\\Data\\Data.csproj\" />\r\n    <ProjectReference Include=\"..\\Logic.Interfaces\\Logic.Interfaces.csproj\" />\r\n    <ProjectReference Include=\"..\\Logic.Models\\Logic.Models.csproj\" />\r\n    <ProjectReference Include=\"..\\Logic\\Logic.csproj\" />\r\n    <ProjectReference Include=\"..\\Web.Models.Mappings\\Web.Models.Mappings.csproj\" />\r\n    <ProjectReference Include=\"..\\Web.Models\\Web.Models.csproj\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"Properties\\PublishProfiles\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <!-- Don't publish the SPA source files, but do show them in the project files list -->\r\n    <Content Remove=\"$(SpaRoot)**\" />\r\n    <None Include=\"$(SpaRoot)**\" Exclude=\"$(SpaRoot)node_modules\\**\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Content Remove=\"swagger.json\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <None Include=\"swagger.json\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"DebugEnsureNodeEnv\" BeforeTargets=\"Build\" Condition=\" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') \">\r\n    <!-- Ensure Node.js is installed -->\r\n    <Exec Command=\"node --version\" ContinueOnError=\"true\">\r\n      <Output TaskParameter=\"ExitCode\" PropertyName=\"ErrorCode\" />\r\n    </Exec>\r\n    <Error Condition=\"'$(ErrorCode)' != '0'\" Text=\"Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE.\" />\r\n    <Message Importance=\"high\" Text=\"Restoring dependencies using 'npm'. This may take several minutes...\" />\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm install\" />\r\n  </Target>\r\n\r\n  <Target Name=\"PublishRunWebpack\" AfterTargets=\"ComputeFilesToPublish\">\r\n    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm install\" />\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm run build -- --prod\" />\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm run build:ssr -- --prod\" Condition=\" '$(BuildServerSideRenderer)' == 'true' \" />\r\n\r\n    <!-- Include the newly-built files in the publish output -->\r\n    <ItemGroup>\r\n      <DistFiles Include=\"$(SpaRoot)dist\\**; $(SpaRoot)dist-server\\**\" />\r\n      <DistFiles Include=\"$(SpaRoot)node_modules\\**\" Condition=\"'$(BuildServerSideRenderer)' == 'true'\" />\r\n      <ResolvedFileToPublish Include=\"@(DistFiles->'%(FullPath)')\" Exclude=\"@(ResolvedFileToPublish)\">\r\n        <RelativePath>%(DistFiles.Identity)</RelativePath>\r\n        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n      </ResolvedFileToPublish>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\r\n**Startup**\r\n```\r\nusing System;\r\nusing System.Text;\r\nusing Autofac;\r\nusing Autofac.Extensions.DependencyInjection;\r\nusing AutoMapper;\r\nusing Common.Constants.Auth;\r\nusing Data;\r\nusing Data.Models.Auth;\r\nusing Data.Models.Auth.Enums;\r\nusing Logic;\r\nusing Logic.Auth;\r\nusing Logic.Models;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.SpaServices.AngularCli;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing Swashbuckle.AspNetCore.Swagger;\r\n\r\nnamespace Web\r\n{\r\n    /// <summary>\r\n    /// Startup\r\n    /// </summary>\r\n    public sealed class Startup\r\n    {\r\n        /// <summary>\r\n        /// Initializes a new instance of the <see cref=\"Startup\"/> class\r\n        /// </summary>\r\n        /// <param name=\"configuration\">Application configuration</param>\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        private IConfiguration Configuration { get; set; }\r\n\r\n        /// <summary>\r\n        /// Configures the HTTP request pipeline\r\n        /// </summary>\r\n        /// <param name=\"app\">Application builder</param>\r\n        /// <param name=\"env\">Hosting environment</param>\r\n        public static void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (app == null) throw new ArgumentNullException(nameof(app));\r\n            if (env == null) throw new ArgumentNullException(nameof(env));\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseHsts();\r\n            }\r\n\r\n            app.UseHttpsRedirection();\r\n            app.UseStaticFiles();\r\n            app.UseSpaStaticFiles();\r\n            app.UseAuthentication();\r\n\r\n            app.UseSwagger();\r\n            app.UseSwaggerUI(c =>\r\n            {\r\n                c.SwaggerEndpoint(\"/swagger/v1/swagger.json\", \"demo-me API\");\r\n            });\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n\r\n            app.UseSpa(spa =>\r\n            {\r\n                spa.Options.SourcePath = \"ClientApp\";\r\n\r\n                if (env.IsDevelopment())\r\n                {\r\n                    spa.UseAngularCliServer(npmScript: \"start\");\r\n                }\r\n            });\r\n        }\r\n\r\n        /// <summary>\r\n        /// Configures application services\r\n        /// </summary>\r\n        /// <param name=\"services\">Services collection</param>\r\n        /// <returns>Service provider</returns>\r\n        public IServiceProvider ConfigureServices(IServiceCollection services)\r\n        {\r\n            if (services == null) throw new ArgumentNullException(nameof(services));\r\n\r\n            services.Configure<AuthenticationSettings>(Configuration.GetSection(\"Authentication\"));\r\n\r\n            services.AddSingleton(Configuration);\r\n\r\n            services.AddDbContextPool<DatabaseContext>(options =>\r\n                options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\n            services.AddIdentity<User, IdentityRole>()\r\n                .AddEntityFrameworkStores<DatabaseContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            var tokenSigningKey = Configuration[\"Authentication:TokenSigningKey\"];\r\n\r\n            services.AddAuthentication(options =>\r\n            {\r\n                options.DefaultAuthenticateScheme = \"JwtBearer\";\r\n                options.DefaultChallengeScheme = \"JwtBearer\";\r\n            })\r\n            .AddJwtBearer(\"JwtBearer\", jwtBearerOptions =>\r\n            {\r\n                jwtBearerOptions.TokenValidationParameters = new TokenValidationParameters()\r\n                {\r\n                    ValidateIssuerSigningKey = true,\r\n                    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(tokenSigningKey)),\r\n\r\n                    ValidateIssuer = true,\r\n                    ValidIssuer = Configuration[\"Authentication:Issuer\"],\r\n\r\n                    ValidateAudience = true,\r\n                    ValidAudience = Configuration[\"Authentication:Audience\"],\r\n\r\n                    ValidateLifetime = true,\r\n\r\n                    ClockSkew = TimeSpan.FromMinutes(60)\r\n                };\r\n            })\r\n            .AddFacebook(facebookOptions =>\r\n            {\r\n                facebookOptions.AppId = Configuration[\"Authentication:Facebook:AppId\"];\r\n                facebookOptions.AppSecret = Configuration[\"Authentication:Facebook:AppSecret\"];\r\n            });\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n\r\n            ConfigureAuthorizationPolicies(services);\r\n\r\n            var apiKeyScheme = new ApiKeyScheme()\r\n            {\r\n                Description = \"JWT Authorization Scheme\",\r\n                Name = \"Authorization\",\r\n                In = \"header\",\r\n                Type = \"apiKey\"\r\n            };\r\n\r\n            services.AddSwaggerGen(c =>\r\n            {\r\n                c.SwaggerDoc(\"v1\", new Info { Title = \"demo-me API\", Version = \"v1\" });\r\n                c.AddSecurityDefinition(\"Bearer\", apiKeyScheme);\r\n            });\r\n\r\n            services.AddAutoMapper();\r\n\r\n            var builder = new ContainerBuilder();\r\n            builder.Populate(services);\r\n\r\n            builder.RegisterModule(new LogicModule());\r\n\r\n            services.AddSpaStaticFiles(configuration =>\r\n            {\r\n                configuration.RootPath = \"ClientApp/dist\";\r\n            });\r\n\r\n            return new AutofacServiceProvider(builder.Build());\r\n        }\r\n\r\n        private static void ConfigureAuthorizationPolicies(IServiceCollection services)\r\n        {\r\n            services.AddAuthorization(options =>\r\n            {\r\n                options.AddPolicy(ClaimPolicies.OwnUser, policy =>\r\n                {\r\n                    policy.Requirements.Add(new OwnUserRequirement());\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.ContentConsumer, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.ContentConsumer));\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.ContentDistributor, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.ContentDistributor));\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.ContentCreator, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.ContentCreator));\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.TenantAdministrator, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.Administrator));\r\n                });\r\n            });\r\n\r\n            services.AddSingleton<IAuthorizationHandler, OwnUserHandler>();\r\n            services.AddSingleton<IAuthorizationHandler, TenantRoleHandler>();\r\n        }\r\n    }\r\n}\r\n```"},{"Id":"7668123572","Type":"IssuesEvent","CreatedAt":"2018-05-14T03:22:45","Actor":"under3415","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3139","RelatedDescription":"Opened issue \"ASP.net core 2.1 rc1: System error in view when exporting to a file\" (#3139) at aspnet/Home","RelatedBody":"When exporting a view to a file an error message appears:\r\nSystem.Collections.Generic.List`1[MyApp.Models.MyModel] IEnumerable<MyModel>\r\n\r\nSee this SO article for more details: \r\nhttps://stackoverflow.com/questions/50320946/how-to-let-user-download-data-to-a-file\r\n\r\nYou can use this project to replicate the issue: \r\nhttps://github.com/under3415/ExportError/\r\n\r\nRun the project, click download link, examine the file for above error message."},{"Id":"7666200921","Type":"IssuesEvent","CreatedAt":"2018-05-13T06:38:05","Actor":"SimonOrdo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3138","RelatedDescription":"Opened issue \"CORS api not sending Access-Control-Allow-Origin header\" (#3138) at aspnet/Home","RelatedBody":"I'm running ASP.NET Core 2.0 (.NET Standard) on an Azure Web App.\r\n\r\nI am not using CORS middleware (i.e. no call to `app.UseCors()`), but I am setting up an access policy like so:\r\n\r\nThe web app runs on `www.mydomain.com` and CORS is set up like...\r\n\r\n```\r\nservices.AddCors(options =>\r\n                {\r\n                    options.AddPolicy(\"ScormStorageCors\",\r\n                        builder => builder.AllowAnyOrigin()\r\n                        .AllowAnyHeader()\r\n                        .AllowAnyMethod()\r\n                        .AllowCredentials());\r\n                });\r\n```\r\n\r\nThe controller is decorated as such:\r\n\r\n```\r\n        [EnableCors(\"ScormStorageCors\")]      \r\n        public async Task<IActionResult> LMSCommands(ScormCommand cmd)\r\n        {\r\n        }\r\n```\r\n\r\nThe Ajax request is dispatched from `storage.mydomain.com` and looks like so:\r\n\r\n```\r\n $.ajax({\r\n            url: serviceURL,\r\n            cache: false,\r\n            type: \"POST\",\r\n            crossDomain: true,\r\n            xhrFields: { withCredentials: true },\r\n            data: cmd,\r\n            async: false, // cross domain requests don't support async\r\n            error: function (xhr, textStatus, settings)\r\n            {\r\n                alert(\"Error: \" + xhr.status + \" \" + xhr.statusText + \" \" + xhr.responseText);\r\n            }\r\n        });\r\n```\r\n\r\nThis works as expected and I can also see an `Access-Control-Allow-Origin` header in the HTTP response to the Ajax request.  Notice I'm allowing \"Any Origin\" in the policy definition.\r\n\r\nIf, however, I set up CORS like so:\r\n\r\n```\r\n      services.AddCors(options =>\r\n                {\r\n                    options.AddPolicy(\"ScormStorageCors\",\r\n                        builder => builder.WithOrigins(new string[] {\"storage.mydomain.com\"})\r\n                        .AllowAnyHeader()\r\n                        .AllowAnyMethod()\r\n                        .AllowCredentials());\r\n                });\r\n```\r\n... and I make the same Ajax call, i get a HTTP 200 AND the action executes, succeeds AND sends back a valid and complete response over the wire (verified with Fiddler), BUT it's missing the `Access-Control-Allow-Origin` header in the HTTP response so the browser won't accept it and the Ajax call ultimately fails.\r\n\r\nAm I doing something wrong or is this a bug in the API?  Any known workarounds?  I really don't want to allow access to my endpoint from outside of my app domains.\r\n\r\nThanks in advance!\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7673940208","Type":"IssuesEvent","CreatedAt":"2018-05-15T00:52:49","Actor":"jadjare","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2274","RelatedDescription":"Opened issue \"How to SendAsync to Caller or Others on the IHubContext<>?\" (#2274) at aspnet/SignalR","RelatedBody":"Is it at all possible to access the `Caller` and `Others` clients when working with the `IHubContext`?\r\n\r\nI have read through various issues, including:\r\nhttps://github.com/aspnet/SignalR/issues/734\r\n\r\nWhere it suggests using\r\n`Clients.Client(Context.ConnectionId).InvokeAsync(...)`\r\n\r\nI'm following the pattern here https://github.com/aspnet/SignalR/issues/182, that suggests using a separate \"HubMethods\" class to host / share hub logic between the actual Hub implementation and say a controller action method.  As such I'm working with the `IHubContext` interface rather than a `Hub`.\r\n\r\n_I just can't figure out how I can SendAsync to the `Caller`.  Is this possible when working with the `IHubContext`?_\r\n\r\nHere is a snippet of the code I'm using,  It's in the commented out method that I want to make an explicit call to the Caller.\r\n```\r\n    public class AllocationHubCommands\r\n    {\r\n        \r\n        private readonly IHubContext<AllocationHub> _hubContext;\r\n\r\n\r\n        public AllocationHubCommands(IHubContext<AllocationHub> hubContext)\r\n        {\r\n            _hubContext = hubContext;\r\n            \r\n        }\r\n\r\n        public Task SendAllocationCreatedMessage(AllocationCreated allocation)\r\n        {\r\n\r\n            return _hubContext.Clients.All.SendAsync(\"AllocationCreated\", allocation);\r\n        }\r\n\r\n        //public Task SendAllocationSavedSuccesfullyMessageToCaller(AllocationCreated allocation)\r\n        //{\r\n            \r\n        //}\r\n    }\r\n```"},{"Id":"7673920458","Type":"IssuesEvent","CreatedAt":"2018-05-15T00:45:16","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2269","RelatedDescription":"Closed issue \".WithHeader is removed from RC1 using HubConnectionBuilder\" (#2269) at aspnet/SignalR","RelatedBody":"Previously we were using the following code to pass authentication token to the HubConnectionBuilder\r\n\r\n`                hubConnection = new HubConnectionBuilder()\r\n                .WithUrl(Url.SignalR.Value())\r\n                .WithHeader(\"Authorization\", string.Format(\"bearer {0}\", token))\r\n                .Build();`\r\n\r\nNow, with RC1 release, that option has disappeared and we are using the below way to pass the token:\r\n\r\n`                hubConnection = new HubConnectionBuilder()\r\n                    .WithUrl(Url.SignalR.Value(), options =>\r\n                    {\r\n                        options.Headers = new Dictionary<string, string> { { \"Authorization\", string.Format(\"bearer {0}\", token) } };\r\n                    }).Build();`\r\n\r\nThe above causes below exception on StartAsync()\r\n\r\n`System.InvalidOperationException: Manager: HubConnectionManager: StartAsync() - System.NotImplementedException: The method or operation is not implemented.\r\n  at System.Net.Http.HttpClientHandler.get_ClientCertificates () [0x00000] in <996a681f30a44cd685a4da54e11956e2>:0 \r\n  at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.CreateHttpClient () [0x0005c] in <dd40c651eaf14486a531dbb173fa57e1>:0 \r\n  at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection..ctor (Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions httpConnectionOptions, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) [0x00080] in <dd40c651eaf14486a531dbb173fa57e1>:0 \r\n  at Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory+<ConnectAsync>d__3.MoveNext () [0x00011] in <2d5fd7ae71414f799c1b2fb768dded77>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at Microsoft.AspNetCore.SignalR.Client.HubConnection+<StartAsyncCore>d__31.MoveNext () [0x0012d] in <68ab53cfc0fc419d97809539d3efaad3>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Threading.Tasks.ForceAsyncAwaiter.GetResult () [0x0000c] in <68ab53cfc0fc419d97809539d3efaad3>:0 \r\n  at Microsoft.AspNetCore.SignalR.Client.HubConnection+<StartAsync>d__24.MoveNext () [0x00076] in <68ab53cfc0fc419d97809539d3efaad3>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 `"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7673626810","Type":"IssuesEvent","CreatedAt":"2018-05-14T23:04:44","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5865","RelatedDescription":"Closed issue \"NumericClientModelValidatorProvider not working with integers, thus localization isn't supported for integers\" (#5865) at aspnet/Mvc","RelatedBody":"Add a simple int field in your view model. \r\nAdd a simple `<span asp-validation-for=` for this field.\r\nYou always get a message : \"Please enter a valid number\". This is not a mvc resource, but the default jquery validate message. \r\nBecause `Microsoft.AspNetCore.Mvc.DataAnnotations.InternalNumericClientModelValidatorProvider` only deal with float, double, decimal:\r\n\r\n```c#\r\n // Check only the numeric types for which we set type='text'.\r\n            if (typeToValidate == typeof(float) ||\r\n                typeToValidate == typeof(double) ||\r\n                typeToValidate == typeof(decimal))\r\n            {\r\n```\r\n\r\nHere's what I did as a work around, in Startup.cs\r\n\r\n```c#\r\n.AddViewOptions(o=>\r\n                {\r\n                    var result = o.ClientModelValidatorProviders.SingleOrMaybe(e => e.GetType() == typeof(NumericClientModelValidatorProvider));\r\n                    o.ClientModelValidatorProviders.Remove(result.Value);\r\n                    o.ClientModelValidatorProviders.Add(new CustomNumericClientModelValidatorProvider());\r\n                })\r\n```\r\n\r\nAnd here's my provider:\r\n\r\n```c#\r\ninternal class CustomNumericClientModelValidatorProvider : IClientModelValidatorProvider\r\n    {\r\n        public void CreateValidators(ClientValidatorProviderContext context)\r\n        {\r\n            if (context == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(context));\r\n            }\r\n\r\n            var typeToValidate = context.ModelMetadata.UnderlyingOrModelType;\r\n\r\n            // Check only the numeric types for which we set type='text'.\r\n            if (typeToValidate == typeof(float) ||\r\n                typeToValidate == typeof(double) ||\r\n                typeToValidate == typeof(decimal)|| typeToValidate == typeof(int))\r\n            {\r\n                for (var i = 0; i < context.Results.Count; i++)\r\n                {\r\n                    var validator = context.Results[i].Validator;\r\n                    if (validator != null && validator is NumericClientModelValidator)\r\n                    {\r\n                        // A validator is already present. No need to add one.\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                context.Results.Add(new ClientValidatorItem\r\n                {\r\n                    Validator = new NumericClientModelValidator(), //or specific to get special message for int\r\n                    IsReusable = true\r\n                });\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nIt would be nice to get this native, ideally with an accessor on the ModelBindingMessageProvider for int like (NumericClientModelValidator)\r\n\r\n```c#\r\n if (modelMetadata.UnderlyingOrModelType == typeof(int))\r\n     return modelMetadata.ModelBindingMessageProvider.ValueMustBeAnIntAccessor(modelMetadata.GetDisplayName());\r\n\r\n  return modelMetadata.ModelBindingMessageProvider.ValueMustBeANumberAccessor(modelMetadata.GetDisplayName());\r\n```\r\n\r\nThank you"},{"Id":"7673621937","Type":"IssuesEvent","CreatedAt":"2018-05-14T23:03:12","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7652","RelatedDescription":"Closed issue \"data-val-number is not added to int fields\" (#7652) at aspnet/Mvc","RelatedBody":"I've tested this using the MVC visual studio template (not razor pages), the unobtrusive data tag for int fields are not added to the html output, for example:\r\n\r\nthe view model class:\r\n`public int Test { get; set; }`\r\n\r\nthe razor view:\r\n`<input asp-for=\"Test\" class=\"form-control\" />`\r\n\r\nthe html result:\r\n`<input class=\"form-control\" data-val=\"true\" data-val-required=\"The Test field is required.\" id=\"Test\" name=\"Test\" value=\"\" type=\"number\">`\r\n\r\nThe problem is that now if I enter a text that is not a number, I'm getting the default jquery.validate message \" Please enter a valid number. \", but if I manually add the data-val-number=\"some message\", I get correctly the message I want.\r\n\r\nAny thoughts?\r\n\r\nthank you"},{"Id":"7673583244","Type":"PullRequestEvent","CreatedAt":"2018-05-14T22:51:39","Actor":"sebastienros","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7780","RelatedDescription":"Opened pull request \" Making Razor compilation cache replaceable\" (#7780) at aspnet/Mvc","RelatedBody":"Fixes #6827"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7673438223","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:11:04","Actor":"Eirenarch","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1791","RelatedDescription":"Opened issue \"Consider adding overloads of IsInRole(Async) and other methods which accept user id\" (#1791) at aspnet/Identity","RelatedBody":"The old version of ASP.NET Identity had a lot of overloads of different methods that accepted user id instead of user object. In the current version only the User object overloads are left. This forces us to write code like this\r\n\r\n`UserManager.IsInRoleAsync(new User { Id = userId }, \"Admin\");`\r\n\r\nPlease consider adding the overloads that accept userId."},{"Id":"7667247575","Type":"IssuesEvent","CreatedAt":"2018-05-13T18:34:13","Actor":"eriksendc","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1790","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware An unhandled exception has occurred: Failed to retrieve Facebook user information (BadRequest) Please check if the authentication information is correct and the corresponding Facebook Graph API is enabled.\" (#1790) at aspnet/Identity","RelatedBody":"Hi All,\r\n\r\nStarting May 1st at approximately 1:33pm Eastern US time we started seeing the following error reported in  our logs:\r\n\r\n`Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware An unhandled exception has occurred: Failed to retrieve Facebook user information (BadRequest) Please check if the authentication information is correct and the corresponding Facebook Graph API is enabled.`\r\n\r\nWe made no code changes at that time. This just started happening out of the blue. We know this is affecting users because we've had at least 10 requests for help per day from our users since the 1st. It's becoming a real user experience issue. Any clues?\r\n\r\nWe're on 2.0.1 in general, and specifically for Microsoft.AspNetCore.Authentication.Facebook.\r\n\r\nThanks in advance!\r\n\r\n-Brian Eriksen"},{"Id":"7665895433","Type":"IssuesEvent","CreatedAt":"2018-05-13T01:26:40","Actor":"natelaff","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1789","RelatedDescription":"Opened issue \"Guidance on new 2.1 stuff\" (#1789) at aspnet/Identity","RelatedBody":"Can we get guidance on adding user properties, renaming Identity tables and changing key types with all of these changes for 2.1 (i.e. #1690, #1679)\r\n\r\nIt seems like this was made easier, right? Can we see how it all comes together now?\r\n\r\nThanks!\r\n"},{"Id":"7663541955","Type":"IssuesEvent","CreatedAt":"2018-05-11T21:48:23","Actor":"kspearrin","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1788","RelatedDescription":"Opened issue \"Consider using URL safe base64 tokens instead of URL encoding for email verification\" (#1788) at aspnet/Identity","RelatedBody":"As shown in this email verification example, it is required to URL encode the base64 email confirmation token before sending them in an email:\r\n\r\nhttps://github.com/aspnet/Identity/blob/47060f5e529ee4b872d9fcf66774935dafb051fc/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/Account/Register.cshtml.cs#L100\r\n\r\nThis works the majority of the time. However, at no fault of our own, there are email providers out there that will still re-encode `%` characters that appear in anchor tags with `%25`, resulting in invalid tokens.\r\n\r\nFor example, `==` (original b64 characters) → `%3D%3D` (correct) → `%253D%253D` (incorrect).\r\n\r\nThis is obviously a bug with the email client itself, but we have come across the case several times with multiple different email clients (for example, mailbox.org will do this).\r\n\r\nSince this really effects everyone (though most may not have noticed), I would propose that the team here should consider using URL safe base64 strings by default within the framework. This would eliminate the need for us to manually create our own TokenProvider, which we've had to resort to today. URL safe base64 strings are used, for example, in JWT tokens as a standard. Here is some sample code that we use to achieve it:\r\n\r\n        public static string Base64UrlEncode(byte[] input)\r\n        {\r\n            var output = Convert.ToBase64String(input)\r\n                .Replace('+', '-')\r\n                .Replace('/', '_')\r\n                .Replace(\"=\", string.Empty);\r\n            return output;\r\n        }\r\n\r\n        public static byte[] Base64UrlDecode(string input)\r\n        {\r\n            var output = input;\r\n            // 62nd char of encoding\r\n            output = output.Replace('-', '+');\r\n            // 63rd char of encoding\r\n            output = output.Replace('_', '/');\r\n            // Pad with trailing '='s\r\n            switch(output.Length % 4)\r\n            {\r\n                case 0:\r\n                    // No pad chars in this case\r\n                    break;\r\n                case 2:\r\n                    // Two pad chars\r\n                    output += \"==\"; break;\r\n                case 3:\r\n                    // One pad char\r\n                    output += \"=\"; break;\r\n                default:\r\n                    throw new InvalidOperationException(\"Illegal base64url string!\");\r\n            }\r\n\r\n            // Standard base64 decoder\r\n            return Convert.FromBase64String(output);\r\n        }"},{"Id":"7662609604","Type":"IssuesEvent","CreatedAt":"2018-05-11T18:07:18","Actor":"AdamAnandUS","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1787","RelatedDescription":"Opened issue \"Invalid Token Error when hosted on thrid-party Server\" (#1787) at aspnet/Identity","RelatedBody":"var result = await _userManager.ConfirmEmailAsync(user, code);\r\n\r\nThis code will never work and always ends up with \"Invalid Token\" when hosted from a third-party hosting provider where there is no RDP and where I cannot change any IIS Server Settings. Even if you submit the token manually using a POST instead of get it will fail. I have used encode/decode and examined the token thoroughly.\r\n\r\nIt works perfectly on the local development machine and always fails on the hosted server."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7674310520","Type":"PullRequestEvent","CreatedAt":"2018-05-15T03:09:33","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2575","RelatedDescription":"Opened pull request \"[Platform] Advance Reader once per parse loop\" (#2575) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7674090284","Type":"IssuesEvent","CreatedAt":"2018-05-15T01:48:55","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2545","RelatedDescription":"Closed issue \"Autogenerate parts of TransportConnection\" (#2545) at aspnet/KestrelHttpServer","RelatedBody":"A lot of the feature collection implementation for TransportConnection can be auto generated like it is for HttpProtocol. We should do this, since writing the same code manually is prone to copy-and-paste bugs."},{"Id":"7673882419","Type":"PullRequestEvent","CreatedAt":"2018-05-15T00:30:38","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2574","RelatedDescription":"Opened pull request \"Wait off the ConnectionClosed token to stop tracking ConnectionCallback\" (#2574) at aspnet/KestrelHttpServer","RelatedBody":"- The prior strategy of waiting for the pipe completed callbacks doesn't work\r\n  because blocks are returned to the memory pool after the callbacks are fired.\r\n\r\n#2565"},{"Id":"7673860802","Type":"IssuesEvent","CreatedAt":"2018-05-15T00:23:01","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2565","RelatedDescription":"Reopened issue \"HttpConnectionMiddleware can OnConnectionClosed before the transports input writer loop is complete.\" (#2565) at aspnet/KestrelHttpServer","RelatedBody":"HttpConnectionMiddleware can OnConnectionClosed before the transports input writer loop is complete. This can lead to issues where the server disposes the memory pool during shutdown prior to the transport's input writer returning all blocks to the pool leading to test failures like the following:\r\n\r\n```\r\n2018-05-11 11:57:12.588 -07:00 [TestLifetime] [Information] Starting test \"WritingToConnectionAfterUnobservedCloseTriggersRequestAbortedToken-http://127.0.0.1:0\"\r\n2018-05-11 11:57:12.596 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Hosting starting\r\n2018-05-11 11:57:12.597 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Hosting started\r\n2018-05-11 11:57:12.597 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Loaded hosting startup assembly \"Sockets.FunctionalTests, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"\r\n2018-05-11 11:57:12.597 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" started.\r\n2018-05-11 11:57:12.598 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Information] Request starting HTTP/1.1 POST http:///  8193\r\n2018-05-11 11:57:12.598 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" paused.\r\n2018-05-11 11:57:12.598 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" resumed.\r\n2018-05-11 11:57:12.599 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" paused.\r\n2018-05-11 11:57:12.612 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" sending FIN.\r\n2018-05-11 11:57:12.613 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" disconnecting.\r\n2018-05-11 11:57:12.623 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Hosting shutdown\r\n2018-05-11 11:57:12.626 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Error] Connection id \"\"0HLDNE2IVBEIU\"\", Request id \"\"0HLDNE2IVBEIU:00000001\"\": An unhandled exception was thrown by the application.\r\nSystem.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.ValidateState(CancellationToken cancellationToken) in /Users/shalter/source/aspnet/KestrelHttpServer/src/Kestrel.Core/Internal/Http/HttpResponseStream.cs:line 164\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken) in /Users/shalter/source/aspnet/KestrelHttpServer/src/Kestrel.Core/Internal/Http/HttpResponseStream.cs:line 109\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<>c__DisplayClass61_0.<<WritingToConnectionAfterUnobservedCloseTriggersRequestAbortedToken>b__6>d.MoveNext() in /Users/shalter/source/aspnet/KestrelHttpServer/test/Kestrel.FunctionalTests/ResponseTests.cs:line 2399\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application) in /Users/shalter/source/aspnet/KestrelHttpServer/src/Kestrel.Core/Internal/Http/HttpProtocol.cs:line 544\r\n   at Xunit.Assert.RecordExceptionAsync(Func`1 testCode) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\Record.cs:line 82\r\n2018-05-11 11:57:12.627 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Information] Request finished in 29.144ms 200 \r\n2018-05-11 11:57:12.627 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" stopped.\r\n2018-05-11 11:57:12.627 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Connection id \"\"0HLDNE2IVBEIU\"\" resumed.\r\n2018-05-11 11:57:12.631 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Error] Unexpected exception in SocketConnection.StartAsync.\r\nSystem.InvalidOperationException: Block is being returned to disposed pool\r\n   at System.Buffers.MemoryPoolThrowHelper.ThrowInvalidOperationException_BlockReturnedToDisposedPool(DiagnosticPoolBlock block) in /Users/shalter/.nuget/packages/microsoft.extensions.buffers.memorypool.sources/2.2.0-preview1-34154/contentFiles/cs/netstandard1.0/Microsoft.Extensions.Buffers.MemoryPool.Sources/MemoryPoolThrowHelper.cs:line 52\r\n   at System.Buffers.DiagnosticMemoryPool.Return(DiagnosticPoolBlock block) in /Users/shalter/.nuget/packages/microsoft.extensions.buffers.memorypool.sources/2.2.0-preview1-34154/contentFiles/cs/netstandard1.0/Microsoft.Extensions.Buffers.MemoryPool.Sources/DiagnosticMemoryPool.cs:line 84\r\n   at System.Buffers.DiagnosticPoolBlock.Dispose(Boolean disposing) in /Users/shalter/.nuget/packages/microsoft.extensions.buffers.memorypool.sources/2.2.0-preview1-34154/contentFiles/cs/netstandard1.0/Microsoft.Extensions.Buffers.MemoryPool.Sources/DiagnosticPoolBlock.cs:line 87\r\n   at System.Buffers.MemoryManager`1.System.IDisposable.Dispose()\r\n   at System.IO.Pipelines.BufferSegment.ResetMemory()\r\n   at System.IO.Pipelines.Pipe.CompletePipe()\r\n   at System.IO.Pipelines.Pipe.CompleteWriter(Exception exception)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoReceive() in /Users/shalter/source/aspnet/KestrelHttpServer/src/Kestrel.Transport.Sockets/Internal/SocketConnection.cs:line 144\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.StartAsync() in /Users/shalter/source/aspnet/KestrelHttpServer/src/Kestrel.Transport.Sockets/Internal/SocketConnection.cs:line 75\r\n2018-05-11 11:57:12.631 -07:00 [Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests] [Debug] Server shutdown exception\r\nSystem.InvalidOperationException: Memory pool with active blocks is being disposed, 6 of 8 returned\r\n   at System.Buffers.MemoryPoolThrowHelper.ThrowInvalidOperationException_DisposingPoolWithActiveBlocks(Int32 returned, Int32 total, DiagnosticPoolBlock[] blocks) in /Users/shalter/.nuget/packages/microsoft.extensions.buffers.memorypool.sources/2.2.0-preview1-34154/contentFiles/cs/netstandard1.0/Microsoft.Extensions.Buffers.MemoryPool.Sources/MemoryPoolThrowHelper.cs:line 62\r\n   at System.Buffers.DiagnosticMemoryPool.Dispose(Boolean disposing) in /Users/shalter/.nuget/packages/microsoft.extensions.buffers.memorypool.sources/2.2.0-preview1-34154/contentFiles/cs/netstandard1.0/Microsoft.Extensions.Buffers.MemoryPool.Sources/DiagnosticMemoryPool.cs:line 119\r\n   at System.Buffers.MemoryPool`1.Dispose()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.StopAsync() in /Users/shalter/source/aspnet/KestrelHttpServer/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 142\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StopAsync(CancellationToken cancellationToken) in /Users/shalter/source/aspnet/KestrelHttpServer/src/Kestrel.Core/KestrelServer.cs:line 198\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StopAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.Dispose()\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7673519189","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:33:03","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2351","RelatedDescription":"Opened issue \"Create a VNext build of Razor\" (#2351) at aspnet/Razor","RelatedBody":"We need the ability to publish builds of the Razor extension for vnext."},{"Id":"7672493577","Type":"IssuesEvent","CreatedAt":"2018-05-14T18:55:16","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2336","RelatedDescription":"Closed issue \"Forcing reparses occasionally returns stale data.\" (#2336) at aspnet/Razor","RelatedBody":"At edit time when the project system is being created if more than one `QueueReparse`s happen around the same time only the first one will have its results returned. This is due to how we calculate the \"latest\" change reference [here](https://github.com/aspnet/Razor/blob/a9e7e4668dd0b4432bb504327d6f716f71ff10f5/src/Microsoft.VisualStudio.Editor.Razor/DefaultVisualStudioRazorParser.cs#L379-L381)."},{"Id":"7672339868","Type":"IssuesEvent","CreatedAt":"2018-05-14T18:25:32","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2350","RelatedDescription":"Opened issue \"Allow Core Razor editor to work in non-project scenarios.\" (#2350) at aspnet/Razor","RelatedBody":"Today if a Razor file is opened outside of the context of a project (diffing two Razor files) there is no IVsHierarchy and therefore no project path or any project information.\r\n\r\nOur system relies on the idea that a document conceptually has a project; however, this is not true in the diff scenario and technically not true in the ctrl + o scenario for a Razor file (ctrl + o uses old Razor editor today).\r\n\r\nThis crashes VS."},{"Id":"7672021613","Type":"IssuesEvent","CreatedAt":"2018-05-14T17:22:58","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2268","RelatedDescription":"Closed issue \"Track Razor files in Project System\" (#2268) at aspnet/Razor","RelatedBody":"We need to add a new capability to our project system that will allow us to track Razor files that are part of the user's project in our project system.\r\n\r\nWe need at a minimum:\r\n- The full path\r\n- The `TargetPath`\r\n\r\nThen we need to flow this information to `ProjectSnapshotManager`"},{"Id":"7671805741","Type":"PullRequestEvent","CreatedAt":"2018-05-14T16:41:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2349","RelatedDescription":"Merged pull request \"Add a Razor design time build\" (#2349) at aspnet/Razor","RelatedBody":"This allows Razor to know what files belong to the project."},{"Id":"7671375854","Type":"PullRequestEvent","CreatedAt":"2018-05-14T15:28:29","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2349","RelatedDescription":"Opened pull request \"Add a Razor design time build\" (#2349) at aspnet/Razor","RelatedBody":"This allows Razor to know what files belong to the project."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":481,"FavoriteCount":271,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-05-15T05:30:13.6957941Z","RunDurationInMilliseconds":8250}