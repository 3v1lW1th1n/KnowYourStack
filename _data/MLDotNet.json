{"Data":{"GitHub":{"Issues":[{"Id":"455509069","IsPullRequest":true,"CreatedAt":"2019-06-13T02:45:27","Actor":"Dmitry-A","Number":"3860","RawContent":null,"Title":"[AutoML] add task agnostic wrappers for autofit calls","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3860","RelatedDescription":"Open PR \"[AutoML] add task agnostic wrappers for autofit calls\" (#3860)"},{"Id":"455483823","IsPullRequest":true,"CreatedAt":"2019-06-13T00:38:42","Actor":"najeeb-kazmi","Number":"3859","RawContent":null,"Title":"Change default EvaluationMetric for LightGbm trainers to conform to d…","State":"open","Body":"…efault metric in standalone LightGbm\r\n\r\nFixes #3822 \r\n\r\nIn ML.NET, the default `EvaluationMetric` for LightGbm is set to `EvaluateMetricType.Error` for multiclass, `EvaluationMetricType.LogLoss` for binary, and so on. This leads to inconsistent behavior from the user's perspective: If a user specified `EvaluationMetric = EvaluateMetricType.Default`, the parameter passed to LightGbm would be the empty string \"\", which is the LightGbm default and means that the metric is selected based on the objective. However, if they do not specify `EvaluationMetric` at all, the parameter passed to LightGbm would be Error for multiclass, LogLoss for binary, and so on. \r\n\r\nWe should make the experience for LightGbm in ML.NET consistent with what a user of standalone LightGbm experiences, and not expect them to dig through LightGbm docs and ML.NET docs to find this out.\r\n\r\nThis PR makes the user experience consistent with standalone LightGbm by by changing the default `EvaluationMetric` in ML.NET to `EvaluationMetricType.Default`.\r\n\r\n[LightGbm metric parameters docs](https://lightgbm.readthedocs.io/en/latest/Parameters.html#metric-parameters)","Url":"https://github.com/dotnet/machinelearning/pull/3859","RelatedDescription":"Open PR \"Change default EvaluationMetric for LightGbm trainers to conform to d…\" (#3859)"},{"Id":"455446582","IsPullRequest":false,"CreatedAt":"2019-06-12T22:10:11","Actor":"ebizupnorth","Number":"3858","RawContent":null,"Title":"AutoML 0.3.0 does not generate namespace properly when solution name contains space","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: \r\nOS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n- **.NET Version (eg., dotnet --info)**: \r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nFollowed the tutorial on using AutoML from https://dotnet.microsoft.com/learn/machinelearning-ai/ml-dotnet-get-started-tutorial/scenario but used a project name as \"AutoML Sentiment\". Note: It contains a space.\r\n- **What happened?**\r\nAutoML did not consider the space in the project name. Generated code below gives a compile error.\r\n```\r\n//*****************************************************************************************\r\n//*                                                                                       *\r\n//* This is an auto-generated file by Microsoft ML.NET CLI (Command-Line Interface) tool. *\r\n//*                                                                                       *\r\n//*****************************************************************************************\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing AutoML SentimentML.Model.DataModels;\r\nusing Microsoft.ML.Trainers;\r\n\r\nnamespace AutoML SentimentML.ConsoleApp\r\n{\r\n    public static class ModelBuilder\r\n    {\r\n............\r\n    }\r\n}\r\n```\r\n- **What did you expect?**\r\nI expected that AutoML should replace the space with \"_\" in order to compile as shown below:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing AutoML_SentimentML.Model.DataModels;\r\nusing Microsoft.ML.Trainers;\r\n\r\nnamespace AutoML_SentimentML.ConsoleApp\r\n{\r\n    public static class ModelBuilder\r\n    {\r\n............\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3858","RelatedDescription":"Open issue \"AutoML 0.3.0 does not generate namespace properly when solution name contains space\" (#3858)"},{"Id":"455380977","IsPullRequest":true,"CreatedAt":"2019-06-12T19:17:58","Actor":"CESARDELATORRE","Number":"3857","RawContent":null,"Title":"Early Draft specs doc for DatabaseLoader in ML.NET","State":"open","Body":"Early Draft specs doc for a `DatabaseLoader` component in ML.NET. \r\nFeel free to provide feedback. This specs document will be evolving significantly since it is in a very early draft state.\r\n\r\nMain objective is to load data into an IDataView from relational databases (such as SQL Server, Azure SQL Database, PostgreSQL, MySQL, Oracle, etc.) in a very easy way, one line of code in most cases by simply specifying the connection string, the database `table/view/sql-sentence` and what database provider/connection type it is using.\r\n\r\nCurrently in ML.NET 1.0 or 1.1 we can only do the following:\r\n\r\n- Load data from files by using `MLContext.Data.LoadFromTextFile()`, etc.\r\n- Load data from an IEnumerable collection with `MLContext.Data.LoadFromEnumerable()`, usually coming from a database, but the developer/user is responsible for how to load/query the database. It is not straightforward such as when reading from a file.\r\n\r\n**High level design goal:**\r\nThe intention of the new component is to make a lot easier to implement _'model training scenarios  pulling/streaming data from large database tables'_ while transparently solving complicated cases such as 'transient errors' in the cloud (database connections broken as a result) when using Azure SQL Database.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3857","RelatedDescription":"Open PR \"Early Draft specs doc for DatabaseLoader in ML.NET\" (#3857)"},{"Id":"455352795","IsPullRequest":false,"CreatedAt":"2019-06-12T18:09:13","Actor":"yaeldekel","Number":"3856","RawContent":null,"Title":"Multi class LR behaves differently on .NetCore 3.0","State":"open","Body":"Four tests are failing on the .NetCore 3.0 builds:\r\n`EnsemblesMultiAveragerTest`\r\n`EnsemblesMultiClassBootstrapSelectorTest`\r\n`EnsemblesMultiVotingCombinerTest`\r\n`EnsemblesMultiStackCombinerTest`\r\n\r\nThe difference in the baselines is something like this:\r\n`L1 regularization selected 13 of 15 weights.` vs.\r\n`L1 regularization selected 11 of 15 weights.`\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3856","RelatedDescription":"Open issue \"Multi class LR behaves differently on .NetCore 3.0\" (#3856)"},{"Id":"455317777","IsPullRequest":false,"CreatedAt":"2019-06-12T16:43:13","Actor":"mungojam","Number":"3855","RawContent":null,"Title":"ARIMA with linear regressors time series modelling","State":"open","Body":"This was mentioned in some other issues that have now been closed following the first release of time series functionality.\r\n\r\nWe currently use ARIMA with linear regressors. There may be better algorithms but it works well for us and is fairly simple to understand and implement.\r\n\r\nIf you can add basic models like this and somebody produces a C#/F# equivalent of the [Forecasting Principles and Practices e-book](https://otexts.com/fpp2/intro.html) then you might be able to support quite a few people who are just getting started with time series forecasting.","Url":"https://github.com/dotnet/machinelearning/issues/3855","RelatedDescription":"Open issue \"ARIMA with linear regressors time series modelling\" (#3855)"},{"Id":"454315853","IsPullRequest":true,"CreatedAt":"2019-06-12T16:01:19","Actor":"michaelgsharp","Number":"3850","RawContent":null,"Title":"Bugfix/hardwired sigmoid","State":"closed","Body":"Fixes #1422 \r\n\r\nFixes the Hardcoded Sigmoid value from -.5 to the value specified during training.\r\n\r\nLet Microsoft.ML.Tests see internals of Microsoft.ML.Standard trainers to access trained model parameters for testing verification.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3850","RelatedDescription":"Closed or merged PR \"Bugfix/hardwired sigmoid\" (#3850)"},{"Id":"454791564","IsPullRequest":true,"CreatedAt":"2019-06-12T15:58:32","Actor":"codemzs","Number":"3854","RawContent":null,"Title":"CustomGains should allow multiple values in argument attribute.","State":"closed","Body":"fixes #3710\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3854","RelatedDescription":"Closed or merged PR \"CustomGains should allow multiple values in argument attribute.\" (#3854)"},{"Id":"454789414","IsPullRequest":true,"CreatedAt":"2019-06-11T16:28:47","Actor":"codemzs","Number":"3853","RawContent":null,"Title":"Update roadmap.","State":"open","Body":"fixes #2074\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3853","RelatedDescription":"Open PR \"Update roadmap.\" (#3853)"},{"Id":"454424547","IsPullRequest":true,"CreatedAt":"2019-06-11T00:10:26","Actor":"harishsk","Number":"3852","RawContent":null,"Title":"Fixes #3207. Prevent usage of KeyType without parameter.","State":"open","Body":"Added an exception to the parameterless constructor for KeyType because it doesn't make sense to use it without a parameter\r\n\r\nWhen KeyType is called without a constructor, the Count member remains uninitialized and when that remains null, it is set to uint.MaxValue which fails the overflow check. \r\n\r\nSince the value that a particular KeyType takes on represents an index into a 1 based vector, it cannot be set to zero by zero by default. It always needs to have a valid max value and that needs to be determined by the use case. Therefore, the best approach is to prevents its usage without the parameter. \r\n\r\nThere seems to be a different but related doc bug that this fix does not address:\r\n\r\nThe documentation for [KeyTypeAttribute](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.keytypeattribute?view=ml-dotnet) says it can be used with uint and ulong.  However, during mapping there is an overflow check performed and an exception is thrown if the value is greater than int.MaxValue - 1. \r\n\r\nThat means, we don't actually support the full range of uint and ulong. \r\n\r\n@codemzs / @artidoro Any thoughts on whether we should fix the docs or remove the overflow check?\r\n\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [X] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nfixes #3207\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3852","RelatedDescription":"Open PR \"Fixes #3207. Prevent usage of KeyType without parameter.\" (#3852)"},{"Id":"453740725","IsPullRequest":false,"CreatedAt":"2019-06-10T22:40:07","Actor":"deepakkumar1984","Number":"3846","RawContent":null,"Title":"ML.NET support for CNTK","State":"closed","Body":"Does ML.NET support CNTK? I see support for Tensorflow, what about the MS initiative for CNTK. Is that abandon now?","Url":"https://github.com/dotnet/machinelearning/issues/3846","RelatedDescription":"Closed issue \"ML.NET support for CNTK\" (#3846)"},{"Id":"454374167","IsPullRequest":true,"CreatedAt":"2019-06-10T21:08:48","Actor":"wschin","Number":"3851","RawContent":null,"Title":"Add example for applying ONNX model to in-memory images","State":"open","Body":"Fix #3562 by adding an sample.","Url":"https://github.com/dotnet/machinelearning/pull/3851","RelatedDescription":"Open PR \"Add example for applying ONNX model to in-memory images\" (#3851)"},{"Id":"454287849","IsPullRequest":false,"CreatedAt":"2019-06-10T17:48:26","Actor":"yaeldekel","Number":"3849","RawContent":null,"Title":"MlNetCookBook is not up to date with latest API","State":"open","Body":"For example, here:\r\nhttps://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md#i-want-to-look-at-my-models-coefficients\r\n\r\nit has this line\r\n```\r\nmlContext.MulticlassClassification.Trainers.SdcaCalibrated()\r\n```\r\nbut `SdcaCalibrated` has been renamed to `SdcaMaximumEntropy`.\r\n\r\n(related to issue #3847).","Url":"https://github.com/dotnet/machinelearning/issues/3849","RelatedDescription":"Open issue \"MlNetCookBook is not up to date with latest API\" (#3849)"},{"Id":"454276445","IsPullRequest":false,"CreatedAt":"2019-06-10T17:20:01","Actor":"codemzs","Number":"3848","RawContent":null,"Title":"Integration of time series nuget with NimbusML","State":"open","Body":"This will require creation of missing entry points and testing, including, time series prediction engine and forecasting API.","Url":"https://github.com/dotnet/machinelearning/issues/3848","RelatedDescription":"Open issue \"Integration of time series nuget with NimbusML\" (#3848)"},{"Id":"453651267","IsPullRequest":true,"CreatedAt":"2019-06-10T16:45:10","Actor":"shmoradims","Number":"3842","RawContent":null,"Title":"Revert \"Publish nugets to temporary myget feed (#3400)\"","State":"closed","Body":"This reverts commit 0a90bbb49da69765c2ff870078fdabfb20783a58.\r\n\r\nshmoradi myget feed is downgraded to 200MB of space after a month and needs to be replaced with a permanent solution. It was created as a workaround before //build. Disabling it for now to prevent the failure in publishing step.","Url":"https://github.com/dotnet/machinelearning/pull/3842","RelatedDescription":"Closed or merged PR \"Revert \"Publish nugets to temporary myget feed (#3400)\"\" (#3842)"},{"Id":"453959866","IsPullRequest":false,"CreatedAt":"2019-06-10T01:00:17","Actor":"jonataspc","Number":"3847","RawContent":null,"Title":"Question: Feature weights (importance) for LightGBM","State":"open","Body":"The documentation https://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md#i-want-to-look-at-my-models-coefficients shows a way to get the feature importance, but when I try to use the code samples I got an error in the \"LastTransformer\" saying it was not found in the TTransformer class. \r\n\r\nI looked at the samples but I could not find a code example. I am using LightGBM.   \r\nThe issue https://github.com/dotnet/machinelearning/issues/576 is related but the replies did not helped as well.\r\n\r\nAny hints? \r\n","Url":"https://github.com/dotnet/machinelearning/issues/3847","RelatedDescription":"Open issue \"Question: Feature weights (importance) for LightGBM\" (#3847)"},{"Id":"453664353","IsPullRequest":false,"CreatedAt":"2019-06-07T19:37:37","Actor":"writetokavitha","Number":"3845","RawContent":null,"Title":"Equivalent of SVM.SVC of slkearn","State":"open","Body":"We use the following from sklearn for training our model for multi-class text classification\r\nWhat would be the equivalent in ML.Net ?\r\n\r\nclfsvm = Pipeline([('vect', CountVectorizer(tokenizer=tokenize, lowercase=True, stop_words=stop_words, ngram_range=(2,2))),\r\n                          ('tfidf', TfidfTransformer(use_idf = False)),\r\n                             ('clf', SVC(kernel = 'linear', probability = True)),])\r\nclfsvm.fit(df_train, df_label)\r\n\r\nhttps://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3845","RelatedDescription":"Open issue \"Equivalent of SVM.SVC of slkearn\" (#3845)"},{"Id":"453661554","IsPullRequest":false,"CreatedAt":"2019-06-07T19:29:07","Actor":"writetokavitha","Number":"3844","RawContent":null,"Title":"Porting algorithm - Multinomial NB","State":"open","Body":"\r\n@codemzs Not finding multinomial NB as part of the ML.Net algorithms which we use for intent detection.\r\n\r\n\r\nFrom nb sci kit learn libraries:\r\nhttps://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html\r\n\r\nclfnb = Pipeline([('vect', CountVectorizer(tokenizer=None, lowercase=True, stop_words=None, ngram_range=(1,2))), \r\n                  ('tfidf', TfidfTransformer(use_idf = True)),\r\n                  ('clf', MultinomialNB()),])\r\nclfnb.fit(df_train, df_label)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3844","RelatedDescription":"Open issue \"Porting algorithm - Multinomial NB\" (#3844)"},{"Id":"453654650","IsPullRequest":false,"CreatedAt":"2019-06-07T19:08:22","Actor":"writetokavitha","Number":"3843","RawContent":null,"Title":"Missing algorithms - SGD modified_huber","State":"open","Body":"@codemzs \r\nI am from the marketing automation team at MSFT and doing intent detection on lead emails. We use the SGD and SVM in sci-kit learn in production and find it missing in ML.Net. Could you look into adding\r\nSGD with following loss function:\r\nloss=\"hinge\": (soft-margin) linear Support Vector Machine,\r\nloss=\"modified_huber\": smoothed hinge loss,\r\nloss=\"log\": logistic regression,\r\n\r\nWe are getting 10%+ points increase in accuracy using modified_huber rather than hinge or log loss function. All the loss functions would be important for us priority would be\r\n1. Modified_huber\r\n2. hinge\r\n3. log\r\n\r\nhttps://scikit-learn.org/stable/modules/sgd.html#classification\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3843","RelatedDescription":"Open issue \"Missing algorithms - SGD modified_huber\" (#3843)"},{"Id":"453624657","IsPullRequest":false,"CreatedAt":"2019-06-07T17:45:41","Actor":"shmoradims","Number":"3841","RawContent":null,"Title":"CreateTextLoader documentation is missing details","State":"open","Body":"The following parameters of CreateTextLoader API are missing detailed explanation and proper example:\r\n\r\n* allowSparse: what is the sparse format?  + example\r\n* allowQuoting: what does this exactly mean? does quoting cause the separator within quotes to be skipped? Is it single quotes or double quotes?\r\n* hasHeader: seems like hasHeader only causes the header line to be skipped, but it doesn't help with automatic detection of column names. Is that the case?\r\n * dataSample: needs sample\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a745f3b1-1356-0888-4804-f6141496da18\r\n* Version Independent ID: 0a2d7c9e-9319-8393-bb4a-058bf72450ba\r\n* Content: [TextLoaderSaverCatalog.CreateTextLoader Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.textloadersavercatalog.createtextloader?view=ml-dotnet#Microsoft_ML_TextLoaderSaverCatalog_CreateTextLoader_Microsoft_ML_DataOperationsCatalog_Microsoft_ML_Data_TextLoader_Column___System_Char_System_Boolean_Microsoft_ML_Data_IMultiStreamSource_System_Boolean_System_Boolean_System_Boolean_)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TextLoaderSaverCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TextLoaderSaverCatalog.xml)","Url":"https://github.com/dotnet/machinelearning/issues/3841","RelatedDescription":"Open issue \"CreateTextLoader documentation is missing details\" (#3841)"},{"Id":"453605771","IsPullRequest":true,"CreatedAt":"2019-06-07T16:52:33","Actor":"justinormont","Number":"3840","RawContent":null,"Title":"Broken docs images for ranking metrics","State":"open","Body":"Fixes two broken links to images at https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.rankingmetrics?view=ml-dotnet-1.1.0\r\n\r\nIssues fixed by this PR:\r\n* Linking to GitHub's webpage for the images, and not the images itself\r\n* Linking to the master branch, which will change overtime, potentially breaking older versions of the docs\r\n\r\nIssues NOT fixed by this PR:\r\n* Linking at all to GitHub -- Do we have a way to have the docs make its own copy of the image? Currently the user's browser will pull the image from GitHub while on docs.microsoft.com. Perhaps this will be fixed when this PR fixes the link?\r\n* NDCG.png has a transparent background; DCG.png one does not \r\n* We may want a check-in test which verifies document image links\r\n\r\nFeel free to push to this PR if you can fix any of the additional above items.","Url":"https://github.com/dotnet/machinelearning/pull/3840","RelatedDescription":"Open PR \"Broken docs images for ranking metrics\" (#3840)"},{"Id":"453271903","IsPullRequest":true,"CreatedAt":"2019-06-07T13:48:58","Actor":"shmoradims","Number":"3835","RawContent":null,"Title":"Explain MLContext seed parameter","State":"closed","Body":"Fixes #3048.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3835","RelatedDescription":"Closed or merged PR \"Explain MLContext seed parameter\" (#3835)"},{"Id":"453482406","IsPullRequest":false,"CreatedAt":"2019-06-07T12:12:32","Actor":"zeroskyx","Number":"3839","RawContent":null,"Title":"Provide a simple sample for in-memory object detection (images)","State":"open","Body":"Greetings,\r\n\r\nthanks for providing ML.net to us, you're really doing great work for the .NET community here.\r\n\r\nWith ML.net 1.1.0 you introduced the possibility to use in-memory data such as images (#3263) along with two samples to use them.  \r\nI'm still having trouble conveying the concept to using in-memory images for the [object detection sample](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ObjectDetection_Onnx).\r\n\r\nWould it be possible to adapt the sample with the alternative to load an image from memory (`Bitmap.FromFile()` for instance) or explain how we could do that here?\r\n\r\nThanks in advance, best regards and keep up the great work\r\n-Simon\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3839","RelatedDescription":"Open issue \"Provide a simple sample for in-memory object detection (images)\" (#3839)"},{"Id":"453305449","IsPullRequest":false,"CreatedAt":"2019-06-07T01:43:25","Actor":"daholste","Number":"3838","RawContent":null,"Title":"Enable Binary Classification Metric Calculation on Huge Datasets","State":"open","Body":"From experimenting, it seems like calculating binary classification metrics does not scale to huge datasets. Taking a heap dump to examine the high memory usage (before the program runs out of memory), I see a list of floats used by `UnweightedAucAggregator`. It looks like, to calculate AUC, every prediction is kept in memory. It also looks like there is already substantial logic to account for this scenario -- there's logic to reservoir sample predictions, and then calculate AUC on the sample. However, it looks like the size of the internal parameter `MaxAucExamples` to control the size of this reservoir sample is always set to -1, and not exposed to the end user?https://github.com/dotnet/machinelearning/blob/610ffcb67083c2e5e6e1a14884ba24b1da0384c7/src/Microsoft.ML.Data/Evaluators/BinaryClassifierEvaluator.cs#L45 \r\nPerhaps we should somehow expose this parameter to enable binary metric calculation on huge datasets, or set the parameter to some reasonable default\r\n@justinormont, @vinodshanbhag ","Url":"https://github.com/dotnet/machinelearning/issues/3838","RelatedDescription":"Open issue \"Enable Binary Classification Metric Calculation on Huge Datasets\" (#3838)"},{"Id":"453293558","IsPullRequest":true,"CreatedAt":"2019-06-07T00:33:03","Actor":"wschin","Number":"3837","RawContent":null,"Title":"Bump ONNXRuntime version","State":"open","Body":"Toward #3836. We will have to increase the number of tests to have higher code coverage.\r\n\r\nThose initial failed tests are caused by an incorrect field in ResNet18 ONNX model. Its last layer (AveragePool) should only have 4 integers as `pads` but found 6. To fix this problem, we need to update ML.NET's model blob on azure (under internal TLC subscription).","Url":"https://github.com/dotnet/machinelearning/pull/3837","RelatedDescription":"Open PR \"Bump ONNXRuntime version\" (#3837)"},{"Id":"453293411","IsPullRequest":false,"CreatedAt":"2019-06-07T00:32:10","Actor":"wschin","Number":"3836","RawContent":null,"Title":"ONNXTransformer can be upgraded","State":"open","Body":"ONNXRuntime has released 0.4.0 version, so ML.NET needs to be upgraded to include newly added features.\r\n\r\nWorking items:\r\n- Add new types to enable ONNX dictionary and sequence.\r\n- Enrich tests.","Url":"https://github.com/dotnet/machinelearning/issues/3836","RelatedDescription":"Open issue \"ONNXTransformer can be upgraded\" (#3836)"},{"Id":"453168729","IsPullRequest":true,"CreatedAt":"2019-06-06T18:09:46","Actor":"codemzs","Number":"3834","RawContent":null,"Title":"Move Time Series, TensorFlow and OnnxConverter nugets to stable project","State":"open","Body":"fixes #3833\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3834","RelatedDescription":"Open PR \"Move Time Series, TensorFlow and OnnxConverter nugets to stable project\" (#3834)"},{"Id":"453168427","IsPullRequest":false,"CreatedAt":"2019-06-06T18:08:58","Actor":"codemzs","Number":"3833","RawContent":null,"Title":"Move Time Series, TensorFlow and OnnxConverter nugets to stable project.","State":"open","Body":"We plan to GA them in 1.2 release.","Url":"https://github.com/dotnet/machinelearning/issues/3833","RelatedDescription":"Open issue \"Move Time Series, TensorFlow and OnnxConverter nugets to stable project.\" (#3833)"},{"Id":"452666106","IsPullRequest":true,"CreatedAt":"2019-06-06T12:14:33","Actor":"shmoradims","Number":"3831","RawContent":null,"Title":"Add default and missing value definitions for ML.NET types","State":"closed","Body":"Fixes #3443.\r\n\r\nThis PR has two related parts:\r\n\r\n1) Add default and missing values definitions. DataKind page, seems the best place to have all of that information in one place. The documented definitions come from [IsNa region](https://github.com/dotnet/machinelearning/blob/2960b273ee0eda1d3a285a4b46a58a4d6d7b6926/src/Microsoft.ML.Data/Data/Conversion.cs#L739) and [IsDefault region](https://github.com/dotnet/machinelearning/blob/2960b273ee0eda1d3a285a4b46a58a4d6d7b6926/src/Microsoft.ML.Data/Data/Conversion.cs#L749).\r\n\r\n2) Fix the docs of CountFeatureSelectingEstimator to include missing value in addition to default value. Previously, we incorrectly thought only non-default values matter. But digging into [the code](https://github.com/dotnet/machinelearning/blob/5163413f3cfab430e49f6fb2a690c160fde46b58/src/Microsoft.ML.Transforms/CountFeatureSelection.cs#L433), it's clear that the check is for non-default AND non-missing.","Url":"https://github.com/dotnet/machinelearning/pull/3831","RelatedDescription":"Closed or merged PR \"Add default and missing value definitions for ML.NET types\" (#3831)"},{"Id":"452731072","IsPullRequest":false,"CreatedAt":"2019-06-05T21:43:53","Actor":"shmoradims","Number":"3832","RawContent":null,"Title":"Add an example for key type's missing value","State":"open","Body":"Related to #3831. Add an in-memory example to explain key type's missing value 0.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3832","RelatedDescription":"Open issue \"Add an example for key type's missing value\" (#3832)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-13T05:30:38.1373378Z","RunDurationInMilliseconds":920}