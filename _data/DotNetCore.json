{"Data":{"Blog":{"FeedItems":[{"Title":"IL Linker — Help us build the best experience!","PublishedOn":"2018-07-11T16:44:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are currently working on the IL Linker and would love to get your feedback. Please fill out the brief survey below and help shape the future of the IL Linker by telling us about your current...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/11/il-linker-help-us-build-the-best-experience/","RawContent":null},{"Title":".NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog","PublishedOn":"2018-07-10T19:03:38+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.2 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This release includes...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core July 2018 Update","PublishedOn":"2018-07-10T17:50:29+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core July 2018 Update. This update includes .NET Core 1.0.12, .NET Core 1.1.9, .NET Core 2.0.9 and .NET Core 2.1.2. Security .NET Core Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/","RawContent":null},{"Title":"Announcing ML.NET 0.3","PublishedOn":"2018-07-09T18:30:19+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Two months ago, at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework for .NET developers. We’ve gotten great feedback so far and would like to thank the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/09/announcing-ml-net-0-3/","RawContent":null},{"Title":"System.IO.Pipelines: High performance IO in .NET","PublishedOn":"2018-07-09T16:02:10+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"System.IO.Pipelines is a new library that is designed to make it easier to do high performance IO in .NET. It&#8217;s a library targeting .NET Standard that works on all .NET implementations....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/07/09/system-io-pipelines-high-performance-io-in-net/","RawContent":null},{"Title":".NET Core 2.1 June Update","PublishedOn":"2018-06-22T21:08:25+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We released .NET Core 2.1.1. This update includes .NET Core SDK 2.1.301, ASP.NET Core 2.1.1 and .NET Core 2.1.1. See .NET Core 2.1.1 release notes for complete details on the release. Quality Updates...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/","RawContent":null},{"Title":".NET Core 2.0 will reach End of Life on October 1, 2018","PublishedOn":"2018-06-20T19:12:38+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Last Updated: 6/22/2018 .NET Core 2.0 was released on August 14, 2017. As a non-LTS release, it is supported for 3 months after the next release. .NET Core 2.1 was released on May 30th, 2018. As a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/","RawContent":null},{"Title":"The RyuJIT transition is complete!","PublishedOn":"2018-06-19T22:53:27+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"RyuJIT is the code name for the .NET just-in-time compiler, one of the foundational components of the .NET runtime. In contrast, the Roslyn C# compiler compiles C# code to IL byte code. The RyuJIT...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/19/the-ryujit-transition-is-complete/","RawContent":null},{"Title":"Staying up-to-date with .NET Container Images","PublishedOn":"2018-06-18T18:59:03+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"This post describes the container images that we produce and update for you, that you can use with Docker, Kubernetes and other systems. When you are using .NET and Docker together, you are probably...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/","RawContent":null},{"Title":"Using .NET and Docker Together – DockerCon 2018 Update","PublishedOn":"2018-06-14T00:15:31+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"I posted about Using .NET and Docker Together last year. With DockerCon 2018 being this week, it seemed like a great time to give you an update.  Since my last post, we&#8217;ve enabled a set of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/using-net-and-docker-together-dockercon-2018-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7951838452","Type":"IssuesEvent","CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/107","RelatedDescription":"Opened issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107) at dotnet/home","RelatedBody":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS."},{"Id":"7948314683","Type":"IssuesEvent","CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/106","RelatedDescription":"Opened issue \"Updates are not requested from local WSUS\" (#106) at dotnet/home","RelatedBody":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?"},{"Id":"7939112505","Type":"PullRequestEvent","CreatedAt":"2018-07-09T17:43:55","Actor":"slide","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Opened pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"7896820874","Type":"IssuesEvent","CreatedAt":"2018-06-29T09:52:53","Actor":"tomkerkhove","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Opened issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7945147887","Type":"IssuesEvent","CreatedAt":"2018-07-10T17:00:38","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.3 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.3 or later <br /> 4.3.2 or later <br /> 4.4.3 or later <br /> 4.5.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_\r\n"},{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7966712082","Type":"IssuesEvent","CreatedAt":"2018-07-15T03:05:03","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18920","RelatedDescription":"Opened issue \"Clean coreclr build incurs ~100 warnings from R2RDump.csproj\" (#18920) at dotnet/coreclr","RelatedBody":"```\r\nc:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj : warning NU1701: Package 'System.CommandLine 0.1.\r\n0-e160119-1' was restored using '.NETFramework,Version=v4.6.1' instead of the project target framework '.NETCoreApp,Ver\r\nsion=v2.0'. This package may not be fully compatible with your project. [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.\r\nproj]\r\nc:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj : warning NU1701: Package 'System.CommandLine 0.1.\r\n0-e160119-1' was restored using '.NETFramework,Version=v4.6.1' instead of the project target framework '.NETCoreApp,Ver\r\nsion=v2.0'. This package may not be fully compatible with your project. [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.\r\nproj]\r\nc:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj : warning NU1701: Package 'System.CommandLine 0.1.\r\n0-e160119-1' was restored using '.NETFramework,Version=v4.6.1' instead of the project target framework '.NETCoreApp,Ver\r\nsion=v2.0'. This package may not be fully compatible with your project. [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.\r\nproj]\r\nAmd64\\UnwindInfo.cs(71,21): warning CS3003: Type of 'UnwindInfo.PersonalityRoutineRVA' is not CLS-compliant [c:\\Users\\s\r\ntoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(37,25): warning CS3003: Type of 'GcInfo.InterruptibleRange.StartOffset' is not CLS-compliant [c:\\Users\\stoub\\\r\nSource\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(38,25): warning CS3003: Type of 'GcInfo.InterruptibleRange.StopOffset' is not CLS-compliant [c:\\Users\\stoub\\S\r\nource\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(39,44): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\to\r\nols\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(39,56): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\to\r\nols\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(113,21): warning CS3003: Type of 'GcInfo.ValidRangeStart' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(84,24): warning CS3003: Type of 'R2RReader.Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\core\r\nclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(114,21): warning CS3003: Type of 'GcInfo.ValidRangeEnd' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\cor\r\neclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(90,22): warning CS3003: Type of 'R2RReader.ImageBase' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\co\r\nreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(119,21): warning CS3003: Type of 'GcInfo.StackBaseRegister' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(120,21): warning CS3003: Type of 'GcInfo.SizeOfEditAndContinuePreservedArea' is not CLS-compliant [c:\\Users\\s\r\ntoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(122,21): warning CS3003: Type of 'GcInfo.SizeOfStackOutgoingAndScratchArea' is not CLS-compliant [c:\\Users\\st\r\noub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(123,21): warning CS3003: Type of 'GcInfo.NumSafePoints' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\cor\r\neclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(124,21): warning CS3003: Type of 'GcInfo.NumInterruptibleRanges' is not CLS-compliant [c:\\Users\\stoub\\Source\\\r\nrepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(447,64): warning CS3001: Argument type 'MetadataReader' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(447,95): warning CS3001: Argument type 'TypeDefinitionHandle' is not CLS-compliant [c:\\Users\\stoub\\Source\\\r\nrepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(46,21): warning CS3003: Type of 'FixupCell.TableIndex' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(52,21): warning CS3003: Type of 'FixupCell.CellOffset' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(54,31): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\r\n\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(54,48): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\r\n\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(116,40): warning CS3003: Type of 'R2RMethod.Signature' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(126,21): warning CS3003: Type of 'R2RMethod.Token' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\corec\r\nlr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(131,21): warning CS3003: Type of 'R2RMethod.Rid' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\r\n\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(24,27): warning CS3003: Type of 'R2RHeader.READYTORUN_SIGNATURE' is not CLS-compliant [c:\\Users\\stoub\\Sour\r\nce\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(40,21): warning CS3003: Type of 'R2RHeader.Signature' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\co\r\nreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(45,23): warning CS3003: Type of 'R2RHeader.MajorVersion' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(46,23): warning CS3003: Type of 'R2RHeader.MinorVersion' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(52,21): warning CS3003: Type of 'R2RHeader.Flags' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\corecl\r\nr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(168,13): warning CS3008: Identifier '__Canon' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\sr\r\nc\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(193,41): warning CS3001: Argument type 'MetadataReader' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(193,56): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\sr\r\nc\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(193,122): warning CS3001: Argument type 'uint[]' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\r\n\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nAmd64\\UnwindInfo.cs(42,21): warning CS3003: Type of 'UnwindCode.FrameOffset' is not CLS-compliant [c:\\Users\\stoub\\Sourc\r\ne\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(53,21): warning CS3003: Type of 'GcSlotTable.NumRegisters' is not CLS-compliant [c:\\Users\\stoub\\Source\\r\r\nepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(54,21): warning CS3003: Type of 'GcSlotTable.NumStackSlots' is not CLS-compliant [c:\\Users\\stoub\\Source\\\r\nrepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(55,21): warning CS3003: Type of 'GcSlotTable.NumUntracked' is not CLS-compliant [c:\\Users\\stoub\\Source\\r\r\nepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(56,21): warning CS3003: Type of 'GcSlotTable.NumSlots' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RImportSection.cs(37,25): warning CS3003: Type of 'R2RImportSection.ImportSectionEntry.SignatureRVA' is not CLS-compl\r\niant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\bu\r\nild.proj]\r\nR2RImportSection.cs(39,75): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\core\r\nclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(125,27): warning CS3003: Type of 'GcInfo.SafePointOffsets' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(61,50): warning CS3001: Argument type 'Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\corecl\r\nr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RImportSection.cs(93,217): warning CS3001: Argument type 'Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RImportSection.cs(93,233): warning CS3001: Argument type 'ushort' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(136,57): warning CS3001: Argument type 'Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\sr\r\nc\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(136,73): warning CS3001: Argument type 'ushort' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\r\n\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nCSC : warning CS8002: Referenced assembly 'System.CommandLine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' d\r\noes not have a strong name. [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Sour\r\nce\\repos\\coreclr\\src\\build.proj]\r\nc:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj : warning NU1701: Package 'System.CommandLine 0.1.\r\n0-e160119-1' was restored using '.NETFramework,Version=v4.6.1' instead of the project target framework '.NETCoreApp,Ver\r\nsion=v2.0'. This package may not be fully compatible with your project. [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.\r\nproj]\r\nc:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj : warning NU1701: Package 'System.CommandLine 0.1.\r\n0-e160119-1' was restored using '.NETFramework,Version=v4.6.1' instead of the project target framework '.NETCoreApp,Ver\r\nsion=v2.0'. This package may not be fully compatible with your project. [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.\r\nproj]\r\nAmd64\\UnwindInfo.cs(71,21): warning CS3003: Type of 'UnwindInfo.PersonalityRoutineRVA' is not CLS-compliant [c:\\Users\\s\r\ntoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(37,25): warning CS3003: Type of 'GcInfo.InterruptibleRange.StartOffset' is not CLS-compliant [c:\\Users\\stoub\\\r\nSource\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(38,25): warning CS3003: Type of 'GcInfo.InterruptibleRange.StopOffset' is not CLS-compliant [c:\\Users\\stoub\\S\r\nource\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(39,44): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\to\r\nols\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(39,56): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\to\r\nols\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(113,21): warning CS3003: Type of 'GcInfo.ValidRangeStart' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(84,24): warning CS3003: Type of 'R2RReader.Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\core\r\nclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(114,21): warning CS3003: Type of 'GcInfo.ValidRangeEnd' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\cor\r\neclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(90,22): warning CS3003: Type of 'R2RReader.ImageBase' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\co\r\nreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(119,21): warning CS3003: Type of 'GcInfo.StackBaseRegister' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(120,21): warning CS3003: Type of 'GcInfo.SizeOfEditAndContinuePreservedArea' is not CLS-compliant [c:\\Users\\s\r\ntoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(122,21): warning CS3003: Type of 'GcInfo.SizeOfStackOutgoingAndScratchArea' is not CLS-compliant [c:\\Users\\st\r\noub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(123,21): warning CS3003: Type of 'GcInfo.NumSafePoints' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\cor\r\neclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(124,21): warning CS3003: Type of 'GcInfo.NumInterruptibleRanges' is not CLS-compliant [c:\\Users\\stoub\\Source\\\r\nrepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(447,64): warning CS3001: Argument type 'MetadataReader' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(447,95): warning CS3001: Argument type 'TypeDefinitionHandle' is not CLS-compliant [c:\\Users\\stoub\\Source\\\r\nrepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(46,21): warning CS3003: Type of 'FixupCell.TableIndex' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(52,21): warning CS3003: Type of 'FixupCell.CellOffset' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(54,31): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\r\n\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RReader.cs(54,48): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\r\n\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(116,40): warning CS3003: Type of 'R2RMethod.Signature' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(126,21): warning CS3003: Type of 'R2RMethod.Token' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\corec\r\nlr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(131,21): warning CS3003: Type of 'R2RMethod.Rid' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\r\n\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(24,27): warning CS3003: Type of 'R2RHeader.READYTORUN_SIGNATURE' is not CLS-compliant [c:\\Users\\stoub\\Sour\r\nce\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(40,21): warning CS3003: Type of 'R2RHeader.Signature' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\co\r\nreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(45,23): warning CS3003: Type of 'R2RHeader.MajorVersion' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(46,23): warning CS3003: Type of 'R2RHeader.MinorVersion' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RHeader.cs(52,21): warning CS3003: Type of 'R2RHeader.Flags' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\corecl\r\nr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(168,13): warning CS3008: Identifier '__Canon' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\sr\r\nc\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(193,41): warning CS3001: Argument type 'MetadataReader' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(193,56): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\sr\r\nc\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RMethod.cs(193,122): warning CS3001: Argument type 'uint[]' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\r\n\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nAmd64\\UnwindInfo.cs(42,21): warning CS3003: Type of 'UnwindCode.FrameOffset' is not CLS-compliant [c:\\Users\\stoub\\Sourc\r\ne\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(53,21): warning CS3003: Type of 'GcSlotTable.NumRegisters' is not CLS-compliant [c:\\Users\\stoub\\Source\\r\r\nepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(54,21): warning CS3003: Type of 'GcSlotTable.NumStackSlots' is not CLS-compliant [c:\\Users\\stoub\\Source\\\r\nrepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(55,21): warning CS3003: Type of 'GcSlotTable.NumUntracked' is not CLS-compliant [c:\\Users\\stoub\\Source\\r\r\nepos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(56,21): warning CS3003: Type of 'GcSlotTable.NumSlots' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\r\n\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RImportSection.cs(37,25): warning CS3003: Type of 'R2RImportSection.ImportSectionEntry.SignatureRVA' is not CLS-compl\r\niant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\bu\r\nild.proj]\r\nR2RImportSection.cs(39,75): warning CS3001: Argument type 'uint' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\core\r\nclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(125,27): warning CS3003: Type of 'GcInfo.SafePointOffsets' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCSlotTable.cs(61,50): warning CS3001: Argument type 'Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\corecl\r\nr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RImportSection.cs(93,217): warning CS3001: Argument type 'Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\\r\ncoreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nR2RImportSection.cs(93,233): warning CS3001: Argument type 'ushort' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\c\r\noreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(136,57): warning CS3001: Argument type 'Machine' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\sr\r\nc\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nGCInfo.cs(136,73): warning CS3001: Argument type 'ushort' is not CLS-compliant [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\r\n\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\build.proj]\r\nCSC : warning CS8002: Referenced assembly 'System.CommandLine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' d\r\noes not have a strong name. [c:\\Users\\stoub\\Source\\repos\\coreclr\\src\\tools\\r2rdump\\R2RDump.csproj] [c:\\Users\\stoub\\Sour\r\nce\\repos\\coreclr\\src\\build.proj]\r\n```"},{"Id":"7966543469","Type":"PullRequestEvent","CreatedAt":"2018-07-14T23:55:28","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18919","RelatedDescription":"Opened pull request \"Fix some failures when using build-test.sh\" (#18919) at dotnet/coreclr","RelatedBody":"Fix some failures when using build-test.sh\r\n\r\n1) Remove a workaround for broken msbuild RelativePath API that is\r\n    apparently no longer necessary and doesn't seem to work anymore anyway.\r\n2) Fix a casing issue in some test projects.  I'm not sure why this hasn't\r\n    been fixed yet.\r\n\r\nFixes #18381"},{"Id":"7966543303","Type":"IssuesEvent","CreatedAt":"2018-07-14T23:55:16","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18381","RelatedDescription":"Reopened issue \"One CoreCLR 2.1 unit test is failing due to missing ThreadStartBool.sh file\" (#18381) at dotnet/coreclr","RelatedBody":"Hi,\r\n\r\nCoreCLR 2.1 unit tests are failing due to missing ThreadStartBool.sh file\r\n\r\n> How to reproduce:\r\n> \r\n> Build the repos and the tests (release/2.1 branch)\r\n> - ./build.sh x64 release msbuildonunsupportedplatform\r\n> - ./build-test.sh release\r\n> \r\n> Running the tests:\r\n> - tests/runtest.sh --testRootDir=/build/coreclr/bin/tests/Linux.x64.Release --testNativeBinDir=/build/coreclr/bin/obj/Linux.x64.Release/tests --coreClrBinDir=/build/coreclr/bin/Product/Linux.x64.Release --mscorlibDir=/build/coreclr/bin/Product/Linux.x64.Release --coreFxBinDir=/build/corefx/bin/runtime/netcoreapp-Linux-Release-x64\r\n\r\n```\r\n21:56:33 # Tests Discovered : 2428\r\n21:56:33 # Passed : 2373\r\n21:56:33 # Failed : 1\r\n21:56:33 # Skipped : 54\r\n\r\n21:55:27 FAILED - baseservices/threading/paramthreadstart/ThreadStartBool_1/ThreadStartBool_1.sh\r\n21:55:27 BEGIN EXECUTION\r\n21:55:27 export CDPATH=.\r\n21:55:27 /bin/sh -c /build/coreclr/tests/bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool/ThreadStartBool.sh\r\n21:55:27/bin/sh: /build/coreclr/tests/bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool/ThreadStartBool.sh: No such file or directory\r\n21:55:27 Expected: 0\r\n21:55:27 Actual: 127\r\n21:55:27 END EXECUTION - FAILED\r\n```\r\n\r\n\r\nCurrent fix I am using:\r\n\r\n```\r\ncp -r --parents ./bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool tests\r\nchmod 755 ./tests/bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool/ThreadStartBool.sh\r\n```\r\n\r\nHamza."},{"Id":"7966534537","Type":"PullRequestEvent","CreatedAt":"2018-07-14T23:45:22","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18918","RelatedDescription":"Merged pull request \"Revert \"Fix some failures when using build-test.sh\"\" (#18918) at dotnet/coreclr","RelatedBody":"Reverts dotnet/coreclr#18813\r\n\r\nAccidentally merged without code review."},{"Id":"7966534325","Type":"PullRequestEvent","CreatedAt":"2018-07-14T23:45:10","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18918","RelatedDescription":"Opened pull request \"Revert \"Fix some failures when using build-test.sh\"\" (#18918) at dotnet/coreclr","RelatedBody":"Reverts dotnet/coreclr#18813\r\n\r\nAccidentally merged without code review."},{"Id":"7966533336","Type":"PullRequestEvent","CreatedAt":"2018-07-14T23:44:02","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18813","RelatedDescription":"Merged pull request \"Fix some failures when using build-test.sh\" (#18813) at dotnet/coreclr","RelatedBody":"1) Remove a workaround for broken msbuild RelativePath API that is\r\n   apparently no longer necessary and doesn't seem to work anymore anyway.\r\n2) Fix a casing issue in some test projects.  I'm not sure why this hasn't\r\n   been fixed yet.\r\n\r\nFixes #18381\r\n"},{"Id":"7966533329","Type":"IssuesEvent","CreatedAt":"2018-07-14T23:44:01","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18381","RelatedDescription":"Closed issue \"One CoreCLR 2.1 unit test is failing due to missing ThreadStartBool.sh file\" (#18381) at dotnet/coreclr","RelatedBody":"Hi,\r\n\r\nCoreCLR 2.1 unit tests are failing due to missing ThreadStartBool.sh file\r\n\r\n> How to reproduce:\r\n> \r\n> Build the repos and the tests (release/2.1 branch)\r\n> - ./build.sh x64 release msbuildonunsupportedplatform\r\n> - ./build-test.sh release\r\n> \r\n> Running the tests:\r\n> - tests/runtest.sh --testRootDir=/build/coreclr/bin/tests/Linux.x64.Release --testNativeBinDir=/build/coreclr/bin/obj/Linux.x64.Release/tests --coreClrBinDir=/build/coreclr/bin/Product/Linux.x64.Release --mscorlibDir=/build/coreclr/bin/Product/Linux.x64.Release --coreFxBinDir=/build/corefx/bin/runtime/netcoreapp-Linux-Release-x64\r\n\r\n```\r\n21:56:33 # Tests Discovered : 2428\r\n21:56:33 # Passed : 2373\r\n21:56:33 # Failed : 1\r\n21:56:33 # Skipped : 54\r\n\r\n21:55:27 FAILED - baseservices/threading/paramthreadstart/ThreadStartBool_1/ThreadStartBool_1.sh\r\n21:55:27 BEGIN EXECUTION\r\n21:55:27 export CDPATH=.\r\n21:55:27 /bin/sh -c /build/coreclr/tests/bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool/ThreadStartBool.sh\r\n21:55:27/bin/sh: /build/coreclr/tests/bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool/ThreadStartBool.sh: No such file or directory\r\n21:55:27 Expected: 0\r\n21:55:27 Actual: 127\r\n21:55:27 END EXECUTION - FAILED\r\n```\r\n\r\n\r\nCurrent fix I am using:\r\n\r\n```\r\ncp -r --parents ./bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool tests\r\nchmod 755 ./tests/bin/tests/Linux.x64.Release/baseservices/threading/paramthreadstart/ThreadStartBool/ThreadStartBool.sh\r\n```\r\n\r\nHamza."},{"Id":"7966229337","Type":"PullRequestEvent","CreatedAt":"2018-07-14T19:13:39","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18854","RelatedDescription":"Merged pull request \"Remove version increment from Dictionary<K,V>.Remove overloads\" (#18854) at dotnet/coreclr","RelatedBody":"Removes the version increment from Remove operations\r\n\r\nThis addresses the coreclr side of the api change [Add Dictionary<K,V>.Remove(predicate)](https://github.com/dotnet/corefx/issues/29979) with the intention of allowing removal of items from the dictionary while enumerating per direction from @jkotas . All collections tests and modified and new tests added in the related corefx PR."},{"Id":"7966228326","Type":"PullRequestEvent","CreatedAt":"2018-07-14T19:12:49","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18909","RelatedDescription":"Merged pull request \"Update PgoData to release-20180714-0608 (release/2.1)\" (#18909) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7966520268","Type":"IssuesEvent","CreatedAt":"2018-07-14T23:29:32","Actor":"TheAifam5","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9667","RelatedDescription":"Opened issue \"Question: Support for njsproj\" (#9667) at dotnet/cli","RelatedBody":"Hey,\r\n\r\nI personally like splitting stuffs like API and frontend.\r\nWould be nice feature to have the .njsproj support, that we can create a SPA website without any C#/VB code and use one build system.\r\n\r\nRegards,\r\nTheAifam5\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7965678632","Type":"PullRequestEvent","CreatedAt":"2018-07-14T12:01:30","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9666","RelatedDescription":"Opened pull request \"Merge release/2.1.4xx to release/2.1.401\" (#9666) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.401.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.401\ngit reset --hard upstream/release/2.1.401\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.4xx-to-release/2.1.401 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7965589517","Type":"IssuesEvent","CreatedAt":"2018-07-14T10:37:12","Actor":"eluchsinger","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9665","RelatedDescription":"Opened issue \"Question: Where is the HTTP CLI for .NET Core WebApi Projects?\" (#9665) at dotnet/cli","RelatedBody":"I was looking forward to trying out that HTTP CLI demonstrated at Build 2018, but I can not find it anywhere. I have not found any documentation on it either. Does it exist?\r\n\r\nYou can see it here:\r\nhttps://youtu.be/KAIJ3ezQb3c?t=19m27s\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7965349283","Type":"IssuesEvent","CreatedAt":"2018-07-14T07:00:36","Actor":"John0King","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9664","RelatedDescription":"Opened issue \"`dotnet script` making C# / f# a script language\" (#9664) at dotnet/cli","RelatedBody":"```C# \r\ndotnet script --lang c# --langversion 7.2\r\nC#>Console.WriteLine(\"hello world\")\r\n\"hello world\"\r\nC#> import \"./myCSharpScript.csx\"; // or require(\"./myCSharpScript.csx\")   or import {MyStaticFunctions} from \"./myCSharpScript\";\r\nC#> MyStaticFuntions.Sayhello(\"john\")\r\n\"hello,john\"\r\n```\r\n\r\nMaking C# a script language and give it a environment\r\n\r\n## Other feature need in script environment\r\n\r\n1. Definition file  (like  typescript   for example \"Cake.csd\") [editor feature]\r\n2. import/require  to import a script\r\n3. nuget and dll file suport (\"`#r`  `#nuget` better to use an keywork making it more like scripting\")\r\n\r\nI really hope that I can easily run C# scripts outside visual studio"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7965046019","Type":"PullRequestEvent","CreatedAt":"2018-07-14T02:15:45","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/819","RelatedDescription":"Opened pull request \"Add Span<T> and related APIs\" (#819) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7965009586","Type":"PullRequestEvent","CreatedAt":"2018-07-14T01:46:09","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/818","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Xml.*\" (#818) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964582394","Type":"PullRequestEvent","CreatedAt":"2018-07-13T22:11:11","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/817","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Threading.*\" (#817) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964550637","Type":"PullRequestEvent","CreatedAt":"2018-07-13T22:01:14","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/816","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Text.*\" (#816) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964528935","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:54:45","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/815","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Runtime.*\" (#815) at dotnet/standard","RelatedBody":"Not sure these API additions actually have any runtime impact, but due to the `ConditialWeakTable` changes I'm just tagging it anyway.\r\n\r\n@dotnet/nsboard "},{"Id":"7964497246","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:45:36","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/814","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Resources\" (#814) at dotnet/standard","RelatedBody":""},{"Id":"7964477350","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:39:49","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/813","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Numerics\" (#813) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964461424","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:35:19","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/812","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Linq.*\" (#812) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964447661","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:31:25","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/811","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Globalization.*\" (#811) at dotnet/standard","RelatedBody":""},{"Id":"7964435715","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:28:03","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/810","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Diagnostics.*\" (#810) at dotnet/standard","RelatedBody":""},{"Id":"7964405873","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:19:48","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/809","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Data.*\" (#809) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964368219","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:09:50","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/808","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.ComponentModel\" (#808) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964354861","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:06:13","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/807","RelatedDescription":"Opened pull request \"Miscellaneous improvements in System.Collections.*\" (#807) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964328381","Type":"PullRequestEvent","CreatedAt":"2018-07-13T20:59:29","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/806","RelatedDescription":"Opened pull request \"Miscellaneous improvements in Microsoft.Win32.SafeHandles\" (#806) at dotnet/standard","RelatedBody":"@dotnet/nsboard "},{"Id":"7964292194","Type":"PullRequestEvent","CreatedAt":"2018-07-13T20:50:39","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/805","RelatedDescription":"Opened pull request \"Add runtime API to get ECMA335 metadata\" (#805) at dotnet/standard","RelatedBody":"This adds an API that the runtime needs to implement to allow metadata readers to read the ECMA335 metadata without having to load the assembly again into memory. However, a valid implementation is `return false;` as it's primarily a perf optimization.\r\n\r\n@dotnet/nsboard "},{"Id":"7963661402","Type":"PullRequestEvent","CreatedAt":"2018-07-13T18:24:29","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/801","RelatedDescription":"Merged pull request \"Fix URL obsoletion message\" (#801) at dotnet/standard","RelatedBody":"This resolves the conflicts from #793.\r\n\r\n/cc @ionux"},{"Id":"7963655193","Type":"PullRequestEvent","CreatedAt":"2018-07-13T18:23:07","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/804","RelatedDescription":"Opened pull request \"Add RuntimeFeature\" (#804) at dotnet/standard","RelatedBody":"This adds the `RuntimeFeature` class which enables compilers to statically discover which features the runtime is guaranteed to support. The compiler checks for individual features by looking for the presence of a static field by a well-known name. By convention, these fields are of type string.\r\n\r\nPlease note that for .NET Standard this means that adding a field to this type requires all implementers to provide this feature in their runtimes.\r\n\r\n@dotnet/nsboard "},{"Id":"7963637155","Type":"PullRequestEvent","CreatedAt":"2018-07-13T18:19:14","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/803","RelatedDescription":"Opened pull request \"Add converters for drawing primitives and known colors\" (#803) at dotnet/standard","RelatedBody":"This adds the various converters for `System.Drawing` primitives (such as `ColorConverter` and `PointConverter`). Also, this adds the `KnownColor` which is used by many libraries too.\r\n\r\n@dotnet/nsboard "},{"Id":"7963620659","Type":"PullRequestEvent","CreatedAt":"2018-07-13T18:15:39","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/802","RelatedDescription":"Opened pull request \"Add DbProviderFactories\" (#802) at dotnet/standard","RelatedBody":"This adds the `DbProviderFactories` that allows creating factorings for DB access.\r\n\r\n@dotnet/nsboard "},{"Id":"7963591848","Type":"PullRequestEvent","CreatedAt":"2018-07-13T18:09:21","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/801","RelatedDescription":"Opened pull request \"Fix URL obsoletion message\" (#801) at dotnet/standard","RelatedBody":"This resolves the conflicts from #793.\r\n\r\n/cc @ionux"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7966835441","Type":"IssuesEvent","CreatedAt":"2018-07-15T05:25:32","Actor":"richlander","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31081","RelatedDescription":"Opened issue \"AppContext.TargetFrameworkName is null\" (#31081) at dotnet/corefx","RelatedBody":"I created a netcoreapp2.1 console app and checked the value of this property. It was null. I was expecting \"netcoreapp2.1\" or some variant of that.\r\n\r\nHere are the docs: https://docs.microsoft.com/en-us/dotnet/api/system.appcontext.targetframeworkname?view=netcore-2.1"},{"Id":"7966585976","Type":"PullRequestEvent","CreatedAt":"2018-07-15T00:42:23","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/31080","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26715-01, preview1-26714-02, respectively (master)\" (#31080) at dotnet/corefx","RelatedBody":""},{"Id":"7966442140","Type":"PullRequestEvent","CreatedAt":"2018-07-14T22:12:28","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/31075","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#31075) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Wraith2"},{"Id":"7966398053","Type":"IssuesEvent","CreatedAt":"2018-07-14T21:34:22","Actor":"hughbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31079","RelatedDescription":"Opened issue \"Marshal.QueryInterface for IInspectable for int/string etc. returns error not success\" (#31079) at dotnet/corefx","RelatedBody":"TODO"},{"Id":"7966354583","Type":"IssuesEvent","CreatedAt":"2018-07-14T20:57:36","Actor":"AdamSpeight2008","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31078","RelatedDescription":"Opened issue \"IImmutableIsDefault Interface.\" (#31078) at dotnet/corefx","RelatedBody":"There is a hacky section of code in [Roslyn](http://source.roslyn.codeplex.com/#Microsoft.CodeAnalysis/TreeDumper.cs,158)\r\n```c#\r\n      // an (awful) test for a null read-only-array.  Is there no better way to do this?\r\n        private static bool IsDefaultImmutableArray(Object o)\r\n        {\r\n             var ti = o.GetType().GetTypeInfo();\r\n            return ti.IsGenericType && ti.GetGenericTypeDefinition() == typeof(ImmutableArray<>) &&\r\n                (bool)ti.GetDeclaredMethod(\"get_IsDefault\").Invoke(o, Array.Empty<object>());\r\n        }\r\n```\r\nThe could be much simpler if it `ImmutableCollections` implemented an interface, so it would be possible to check if it is the default without knowing the explicit generic T-ness.  \r\n\r\nFor example \r\n```vbnet\r\ninterface IImmutableIsDefault\r\n  Readonly Property IsDefault As Boolean\r\nEnd Interface\r\n```\r\n\r\n```c#\r\n // an (awful) test for a null read-only-array.  Is there no better way to do this?\r\nprivate static bool IsDefaultImmutableArray(Object o)\r\n{\r\n  return  (o is IImmutableIsDefault i) && i.IsDefault;\r\n}\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7966621898","Type":"IssuesEvent","CreatedAt":"2018-07-15T01:23:44","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/28550","RelatedDescription":"Opened issue \"Quick actions list has a suggestion before a fix - breaks hotkey flow\" (#28550) at dotnet/roslyn","RelatedBody":"Depending on where in a line the cursor is, the quick actions suggestions can contain a &quot;suggestion&quot; at the top of the list, when what I really want is the error on the same line to be at the top of the list.\n\nThis breaks a workflow of the keyboard shortcut, followed by enter to &quot;fix&quot; the resolution problem.\nIn my case, the suggestion is IDE0024, and the error is CS0103 (I'm missing a using directive).\n\nIt's variable depending where in the line my cursor is placed.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/16055/quick-actions-list-has-a-suggestion-before-a-fix-b.html\nVSTS ticketId: 418477_\n_These are the original issue comments:_\n\nCyrus Najmabadi [MSFT] on 2/1/2017, 04:17 PM (528 days ago): <p>Hi Craig,</p><p>Can you provide a little more information?  With your example provided, what line/column is your caret at?  Can you provide a screenshot of what you see in the list when you bring up the lightbulb list as well?</p><p>Thanks!</p>\n\nCraig Popham on 2/1/2017, 04:44 PM (528 days ago): <p>Hi Cyrus,</p><p>Sure - I've attached two screenshots showing the behaviour. You're right - it varies based on caret position.</p><p>The first case (see attachment \"repro-happy.png\") happens when my caret is anywhere on the red underlined symbol (on line 20). This is the \"good\" case.</p><p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/temp/1569-repro-happy.png\">repro-happy.png</a></p><p>However, if the caret is anywhere else on the line (20) (see attachment \"repro-sad.png\"), then I get the \"tip\" for IDE0024 first. In my specific case, my caret is at the end of the line, immediately after the semicolon, because I've just finished typing the rest of the line. In previous versions of VS, the \"fix\" for CS0246 would have been first, but it is now second after the tip. This is a pretty minor annoyance in the grand scheme of things, but it makes the quick actions panel less useful from the keyboard.</p><p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/temp/1570-repro-sad.png\">repro-sad.png</a></p><p>I realise this behaviour might actually be by design, so maybe it's more appropriate for a suggestion than a bug?</p><p>I can reproduce this with other suggestions (e.g. IDE0030 - null propagation), and the same behaviour occurs - when the caret is over the invalid expression the tip is suppressed, but in the rest of the statement both tip and fix are shown in the list, with the tip being selected in preference.</p><p>I suppose what I'm really expecting could be more generally expressed as \"if my caret is anywhere in a statement, and there are both style suggestions, and a fix available via quick actions for that statement, then the fix should be the automatically selected item, in preference to the style suggestion\".</p>\n\n_These are the original issue solutions:_\n\nCyrus Najmabadi [MSFT] solved on 2/1/2017, 04:49 PM (528 days ago), 0 votes: <p>Awesome.  Thanks for the clarification.  We agree that this is not desirable behavior.  We will have to think of a good solution here as certain layering makes adjustments here difficult.  </p>\n\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7966350414","Type":"PullRequestEvent","CreatedAt":"2018-07-14T20:54:04","Actor":"MarcoRossignoli","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6095","RelatedDescription":"Opened pull request \"Added System.Runtime.ProfileOptimization\" (#6095) at dotnet/corert","RelatedBody":"contributes to #30185\r\n\r\n/cc @jkotas "},{"Id":"7966243141","Type":"PullRequestEvent","CreatedAt":"2018-07-14T19:24:52","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6094","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6094) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7966238925","Type":"PullRequestEvent","CreatedAt":"2018-07-14T19:21:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6093","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6093) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"7965219342","Type":"PullRequestEvent","CreatedAt":"2018-07-14T04:57:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6091","RelatedDescription":"Merged pull request \"Make Decimal a readonly struct\" (#6091) at dotnet/corert","RelatedBody":"This fixes #4994 and contributes to https://github.com/dotnet/coreclr/issues/18249"},{"Id":"7965219339","Type":"IssuesEvent","CreatedAt":"2018-07-14T04:57:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4994","RelatedDescription":"Closed issue \"Errors on Unix when changing decimal to explicit layout\" (#4994) at dotnet/corert","RelatedBody":"_From @stephentoub on November 22, 2017 5:13_\n\nAs part of unifying decimal's formatting code between coreclr and corert, @jkotas suggested I make decimal have an explicit layout, as it is in corert.  In doing so, a handful of JIT tests started failing:\r\n```\r\nJIT.Directed.coverage.oldtests.lclfldadd_cs_r.lclfldadd_cs_r\r\nJIT.Directed.perffix.primitivevt.mixed1_cs_ro.mixed1_cs_ro\r\nJIT.Methodical.fp.exgen.1000w1d_cs_r.1000w1d_cs_r\r\nJIT.Methodical.fp.exgen.1000w1d_cs_ro.1000w1d_cs_ro\r\nJIT.Methodical.fp.exgen.1000w1d_cs_do.1000w1d_cs_do\r\nJIT.Methodical.fp.exgen.1000w1d_cs_d.1000w1d_cs_d\r\nJIT.Methodical.fp.exgen.10w5d_cs_d.10w5d_cs_d\r\nJIT.Methodical.fp.exgen.10w5d_cs_do.10w5d_cs_do\r\nJIT.Methodical.fp.exgen.10w5d_cs_ro.10w5d_cs_ro\r\nJIT.Methodical.fp.exgen.200w1d-02_cs_do.200w1d-02_cs_do\r\nJIT.Methodical.fp.exgen.10w5d_cs_r.10w5d_cs_r\r\nJIT.Methodical.fp.exgen.200w1d-02_cs_ro.200w1d-02_cs_ro\r\nJIT.Directed.perffix.primitivevt.mixed1_cs_do.mixed1_cs_do\r\n```\r\nThe failures would seem to indicate a JIT/runtime bug, as they're frequently eminating from code other than decimal, suggesting that something is getting corrupted, e.g.\r\n```\r\nFAILED   - JIT/Methodical/fp/exgen/200w1d-02_cs_ro/200w1d-02_cs_ro.sh\r\n               BEGIN EXECUTION\r\n               /mnt/j/workspace/dotnet_coreclr/master/checked_ubuntu_tst_prtest/bin/tests/Windows_NT.x64.Checked/Tests/coreoverlay/corerun 200w1d-02_cs_ro.exe\r\n\r\n               Unhandled Exception: System.OverflowException: Value was either too large or too small for an Int32.\r\n                  at System.Convert.ThrowInt32OverflowException()\r\n                  at System.Convert.ToInt32(Int64 value)\r\n                  at testout1.Func_0()\r\n                  at testout1.Main()\r\n               ./200w1d-02_cs_ro.sh: line 243: 101339 Aborted                 (core dumped) $_DebuggerFullPath \"$CORE_ROOT/corerun\" $ExePath $CLRTestExecutionArguments\r\n               Expected: 100\r\n               Actual: 134\r\n               END EXECUTION - FAILED\r\n```\r\nThese failures are only occurring on Unix.\r\n\r\nHere's the commit that undoes the explicit layout; reverting this commit yields the failures.\r\nhttps://github.com/dotnet/coreclr/pull/15145/commits/dc35586ecd37be9d2517244175da8b84a1237005\n\n_Copied from original issue: dotnet/coreclr#15159_"},{"Id":"7964496781","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:45:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6093","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6093) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7962265640","Type":"PullRequestEvent","CreatedAt":"2018-07-13T13:48:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6092","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#6092) at dotnet/corert","RelatedBody":""},{"Id":"7962264684","Type":"PullRequestEvent","CreatedAt":"2018-07-13T13:47:59","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6092","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#6092) at dotnet/corert","RelatedBody":""},{"Id":"7959367158","Type":"PullRequestEvent","CreatedAt":"2018-07-13T00:18:17","Actor":"pentp","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6091","RelatedDescription":"Opened pull request \"Make Decimal a readonly struct\" (#6091) at dotnet/corert","RelatedBody":"This fixes #4994 and contributes to https://github.com/dotnet/coreclr/issues/18249"},{"Id":"7955449970","Type":"PullRequestEvent","CreatedAt":"2018-07-12T10:47:52","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6090","RelatedDescription":"Merged pull request \"Enable ThreadStatic GC layout test\" (#6090) at dotnet/corert","RelatedBody":"This was not enabled because at the time the test was written, `IsThreadStatic` was a lie. It would have caught #6041 in a much cheaper way if we haven't forgotten to enable it when thread statics were brought up."},{"Id":"7954575673","Type":"PullRequestEvent","CreatedAt":"2018-07-12T08:01:05","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6090","RelatedDescription":"Opened pull request \"Enable ThreadStatic GC layout test\" (#6090) at dotnet/corert","RelatedBody":"This was not enabled because at the time the test was written, `IsThreadStatic` was a lie. It would have caught #6041 in a much cheaper way if we haven't forgotten to enable it when thread statics were brought up."},{"Id":"7954536965","Type":"PullRequestEvent","CreatedAt":"2018-07-12T07:52:48","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6089","RelatedDescription":"Merged pull request \"Fix size of thread-local statics blocks\" (#6089) at dotnet/corert","RelatedBody":"Fixes #6041"},{"Id":"7953927929","Type":"IssuesEvent","CreatedAt":"2018-07-12T04:51:03","Actor":"christianscheuer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5922","RelatedDescription":"Closed issue \"NullReferenceException in CancellationTokenSource.InternalRegister\" (#5922) at dotnet/corert","RelatedBody":"I'm hitting a NRE in `CancellationTokenSource.InternalRegister` on macOS. Not sure how to debug it though.\r\n\r\n```cs\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Threading.CancellationTokenSource.InternalRegister(Action`1, Object, SynchronizationContext, ExecutionContext) + 0x205\r\n   at System.Threading.CancellationToken.Register(Action`1, Object, Boolean, Boolean) + 0xd7\r\n   at System.Threading.CancellationTokenSource.CreateLinkedTokenSource(CancellationToken) + 0x7f\r\n   at System.Threading.CancellationTokenSource.CreateLinkedTokenSource(CancellationToken, CancellationToken) + 0xe9\r\n   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken) + 0xe9\r\n```\r\n"},{"Id":"7953921969","Type":"IssuesEvent","CreatedAt":"2018-07-12T04:48:21","Actor":"christianscheuer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6041","RelatedDescription":"Closed issue \"Odd threading behavior - Thread.CurrentThread.ManagedThreadId != Environment.ManagedThreadId\" (#6041) at dotnet/corert","RelatedBody":"I'm getting a `The write lock is being released without being held` exception when exiting write mode on a `ReaderWriterLockSlim` on macOS.\r\n\r\nDebugging this issue has led me to conclude, that apparently my call to`ExitWriteLock` happens on a different thread than where I started, albeit in a weird way.\r\n\r\nWhen I debug it, `Thread.CurrentThread.ManagedThreadId` will indicate I'm still on thread 1 where I acquired the lock, but `Environment.ManagedThreadId` which is what `ReaderWriterLockSlim` uses, indicates I'm on thread 6.\r\nThis does not seem to happen on CoreCLR.\r\n\r\nThe code paths involved do not include any calls to Thread.Start or asynchronous Task code. It really all should be happening on the same thread (which `Thread.CurrentThread.ManagedThreadId` also seems to indicate is true).\r\nThe rest of the app does have asynchronous Task code though.\r\n\r\nUnfortunately, I haven't yet been able to make a repro case. It does seem to make a difference though if GC is invoked between the calls to EnterWriteLock and ExitWriteLock.\r\nAny ideas as how to better debug this?\r\n\r\n\r\nThis is basically what I'm doing, but I don't think this helps much.\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Threading;\r\n\r\nnamespace Test\r\n{\r\n\r\n    public struct WriteLock : IDisposable\r\n    {\r\n        private readonly LockManager lockManager;\r\n\r\n        internal WriteLock(LockManager lockManager)\r\n        {\r\n            this.lockManager = lockManager;\r\n        }\r\n\r\n        public void Dispose()\r\n        {\r\n            this.lockManager.ReleaseWriteLock();\r\n        }\r\n    }\r\n\r\n    public class LockManager : IDisposable\r\n    {\r\n        private ReaderWriterLockSlim readerWriterLock;\r\n\r\n        public LockManager()\r\n        {\r\n            this.readerWriterLock = new ReaderWriterLockSlim(LockRecursionPolicy.NoRecursion);\r\n        }\r\n\r\n        public IDisposable AcquireWriteLock()\r\n        {\r\n            // Enter the lock\r\n            if (!this.readerWriterLock.TryEnterWriteLock(-1))\r\n            {\r\n                throw new Exception(\"Could not enter write lock\");\r\n            }\r\n            Console.WriteLine(\"Entered write lock: \" + Thread.CurrentThread.ManagedThreadId);\r\n\r\n            // Return a new instance of a write lock\r\n            return new WriteLock(this);\r\n        }\r\n\r\n        public void Dispose()\r\n        {\r\n            this.Dispose(true);\r\n            GC.SuppressFinalize(this);\r\n        }\r\n\r\n        internal void ReleaseReadLock()\r\n        {\r\n            this.readerWriterLock.ExitReadLock();\r\n        }\r\n\r\n        internal void ReleaseWriteLock()\r\n        {\r\n            this.readerWriterLock.ExitWriteLock();\r\n        }\r\n\r\n        protected virtual void Dispose(bool disposing)\r\n        {\r\n            Console.WriteLine(\"Disposing lock manager... disposing: \" + disposing);\r\n            if (disposing)\r\n            {\r\n                if (this.readerWriterLock != null)\r\n                {\r\n                    this.readerWriterLock.Dispose();\r\n                    this.readerWriterLock = null;\r\n                }\r\n            }\r\n        }   \r\n  \r\n\r\n        public static void Main(string[] args)\r\n        {\r\n            using (var lockMan = new LockManager())\r\n            using (var locky = lockMan.AcquireWriteLock())\r\n            {\r\n                //Lots of stuff happening in here. No Task awaits though...\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n"},{"Id":"7953850491","Type":"PullRequestEvent","CreatedAt":"2018-07-12T04:16:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6089","RelatedDescription":"Opened pull request \"Fix size of thread-local statics blocks\" (#6089) at dotnet/corert","RelatedBody":"Fixes #6041"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1017101058773053445","CreatedAt":"2018-07-11T17:39:23+00:00","UserScreenname":"dotnet","Text":"Learn more about writing games with C#, .NET, and Unity right NOW on Twitch... https://t.co/UHRZk39EWG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":68,"FavoriteCount":20,"RawContent":null},{"Id":"1016825199109423104","CreatedAt":"2018-07-10T23:23:13+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog https://t.co/oBwPB86Pxf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":109,"FavoriteCount":95,"RawContent":null},{"Id":"1016742094671507456","CreatedAt":"2018-07-10T17:53:00+00:00","UserScreenname":"dotnet","Text":".NET Core July 2018 Update https://t.co/1zcc6ep8AC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":88,"FavoriteCount":78,"RawContent":null},{"Id":"1016363772737273856","CreatedAt":"2018-07-09T16:49:41+00:00","UserScreenname":"dotnet","Text":"https://t.co/EpnUCQtOJb.Pipelines: High performance IO in .NET https://t.co/LLJUxPVWlC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":352,"FavoriteCount":168,"RawContent":null},{"Id":"1016363637726797824","CreatedAt":"2018-07-09T16:49:09+00:00","UserScreenname":"dotnet","Text":"Announcing https://t.co/XkD7piEeFS 0.3 https://t.co/dLw78XRgcE","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":127,"FavoriteCount":92,"RawContent":null}]}},"RunOn":"2018-07-15T05:30:33.5509769Z","RunDurationInMilliseconds":8099}