{"Data":{"GitHubIssues":{"Issues":[{"Id":"325084605","IsPullRequest":false,"CreatedAt":"2018-05-21T22:52:02","Actor":"Andrzej-W","Number":"867","RawContent":null,"Title":"Ctrl/Shift Click on internal application link doesn't open in a new browser tab/window","State":"open","Body":"Standard behaviour for Ctrl/Shift Click in Firefox/Chrome/Edge is to open link in a new browser tab or window. Unfortunately this does not work for internal links in Blazor application. Middle mouse click doesn't work either (it works like standard left click). Blazor also doesn't respect `target=\"_blank\"` attribute for internal links.\r\n\r\n**Update:** Middle Click doesn't work only in Firefox on Blazor 0.3.0. It works on 0.2.0. Ctrl+Click works in Edge.\r\n\r\nI can right-click on internal link and select \"Open in a new tab/window\" from context menu - this does work.\r\n\r\n**Why we need this behaviour?**\r\nFirst it is needed for consistency. Second, in LOB applications people often have to see related data from different modules. To do this in the browser they can Ctrl Click on the link to open it in a new browser tab and then drag this tab to the second monitor - it is very convenient.","Url":"https://github.com/aspnet/Blazor/issues/867","RelatedDescription":"Open issue \"Ctrl/Shift Click on internal application link doesn't open in a new browser tab/window\" (#867)"},{"Id":"325062015","IsPullRequest":false,"CreatedAt":"2018-05-21T21:15:32","Actor":"WayneHiller","Number":"866","RawContent":null,"Title":"Large Projects","State":"open","Body":"My understanding it that the entire \"client\" will be loaded into the browser. Has anyone tested how large a Blazor project can get before the browser starts having issues?\r\n\r\nI have a large project that I would like to test out in Blazor but it is too large (I think) for a single SPA. Has there been any discussion around the ability to maybe have some kind of modules that could be loaded from a URL server side? \r\n\r\nIs there any way to do this kind of thing currently? So just as an example my project might have a Sales module, Customers module, Inventory module etc.  Each module could be loaded into the browser as it's own \"Blazor\" client side package. Some how the Server would need to know what \"module\" to send to the browser when it receives a request for one.\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/866","RelatedDescription":"Open issue \"Large Projects\" (#866)"},{"Id":"324812420","IsPullRequest":false,"CreatedAt":"2018-05-21T09:15:27","Actor":"LaurenceFrost","Number":"865","RawContent":null,"Title":"Cannot run Blazor with .NET Core 2.1","State":"closed","Body":"When I create a new Blazor project, it will run as expected , and by default targets .NET Standard 2.0. I want to target .NET Core 2.1 specifically.\r\n\r\nHowever, when I switch it to 2.1 I get the following compiler warning:\r\n\r\n> Error\tMSB3073\tThe command \"dotnet \"C:\\Users\\laure\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.3.0\\targets\\../tools/illink/illink.dll\" -c link -u link -t --verbose  -d \"C:\\Users\\laure\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.3.0\\targets\\../tools/mono/bcl/\" -d \"C:\\Users\\laure\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.3.0\\targets\\../tools/mono/bcl/Facades/\" -o \"C:\\Users\\laure\\source\\repos\\BlazorTest2\\BlazorTest2.WebClient\\obj\\Debug\\netcoreapp2.1\\blazor/linker/\" -x \"C:\\Users\\laure\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.3.0\\targets\\BuiltInBclLinkerDescriptor.xml\" -x \"C:\\Users\\laure\\source\\repos\\BlazorTest2\\BlazorTest2.WebClient\\obj\\Debug\\netcoreapp2.1\\blazor\\linker.descriptor.xml\" -a \"C:\\Users\\laure\\.nuget\\packages\\microsoft.aspnetcore.blazor\\0.3.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Blazor.dll\" -a \"C:\\Users\\laure\\.nuget\\packages\\microsoft.aspnetcore.blazor.browser\\0.3.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Blazor.Browser.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.0.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.0.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" -a \"C:\\Users\\laure\\source\\repos\\BlazorTest2\\BlazorTest2.WebClient\\obj\\Debug\\netcoreapp2.1\\BlazorTest2.WebClient.dll\"\" exited with code 1.\tBlazorTest2.WebClient\tC:\\Users\\laure\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.3.0\\targets\\Blazor.MonoRuntime.targets\t441\t\r\n\r\nSteps to replicate this:\r\n\r\n1) Create a new Blazor project.\r\n2) Edit the .csproj file and change \"<TargetFramework>netstandard2.0</TargetFramework>\" to \"<TargetFramework>netcoreapp2.1</TargetFramework>\".\r\n\r\nIs there something I am doing incorrectly? I have the .NET core 2.1 RC1 SDK installed.","Url":"https://github.com/aspnet/Blazor/issues/865","RelatedDescription":"Closed issue \"Cannot run Blazor with .NET Core 2.1\" (#865)"},{"Id":"324747168","IsPullRequest":false,"CreatedAt":"2018-05-20T22:13:53","Actor":"Andrzej-W","Number":"864","RawContent":null,"Title":"Detect component parameter name errors at compile time","State":"open","Body":"Let's assume I have a component with parameter and I use it in some cshtml file like this:\r\n```html\r\n<MyComponent ParamName=\"something\"></MyComponent>\r\n```\r\nIntellisese works correctly and it is easy to write correct parameter name. Now let's assume I want to do some refactoring and I'm changing parameter name (in MyComponent source code) to something else.\r\n\r\nFirst, I would like to have the possibility to press `<Ctrl>+<.>` and select Rename. Unfortunately this doesn't work in cshtml files :cry: So it is easy to introduce some errors in code and those errors are not detected at compile time - we get runtime exception. It is not what we want. Blazor should be better than JavaScript.","Url":"https://github.com/aspnet/Blazor/issues/864","RelatedDescription":"Open issue \"Detect component parameter name errors at compile time\" (#864)"},{"Id":"324744826","IsPullRequest":false,"CreatedAt":"2018-05-20T21:38:49","Actor":"Andrzej-W","Number":"863","RawContent":null,"Title":"Blazor template and documentation improvement","State":"open","Body":"Currently it is not so obvious how to pass arbitrary data to event handlers. I think it is not possible directly:\r\n```javascript\r\nonclick=@OnTableRowClic(referenceToCustomer)\r\n```\r\nand a small workaround is necessary (lambda expression). It would be nice to see it in default Blazor template and in the documentation. My suggestion is to add/modify a few lines in FetchData.cshtm\r\n```html\r\n<p>This component demonstrates fetching data from the server.</p>\r\n<!-- New line below -->\r\n<p>Click on any row to see selected date here: @(selectedDate != default(DateTime) ? selectedDate.ToLongDateString() : string.Empty)</p>\r\n```\r\n```html\r\n<tbody>\r\n    @foreach (var forecast in forecasts)\r\n    {\r\n        <!-- Add onclick handler -->\r\n        <tr onclick=\"@(() => OnRowClick(forecast))\">\r\n```\r\nAdd this in `@functions`\r\n```c#\r\nDateTime selectedDate;\r\nvoid OnRowClick(WeatherForecast forecast)\r\n{\r\n    selectedDate = forecast.Date;\r\n}\r\n```\r\nIn documentation (Components, Event handling) there is an information\r\n\r\n> Lambda expressions can also be used:\r\n> `<button onclick=\"@(e => Console.WriteLine(\"Hello, world!\"))\">Say hello</button>`\r\n> \r\n\r\nI think my example is a little bit better.\r\n\r\nMaybe in Blazor 0.4.0 we will have access to some useful data in event objects. If so, you can add an event object:\r\n```html\r\n<tbody>\r\n    @foreach (var forecast in forecasts)\r\n    {\r\n        <!-- Add onclick handler -->\r\n        <tr onclick=\"@((ev) => OnRowClick(ev, forecast))\">\r\n```\r\nand do something with it:\r\n```c#\r\nDateTime selectedDate;\r\nvoid OnRowClick(UIMouseEventArgs ev, WeatherForecast forecast)\r\n{\r\n    // x = ev.x ???\r\n    selectedDate = forecast.Date;\r\n}\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/863","RelatedDescription":"Open issue \"Blazor template and documentation improvement\" (#863)"},{"Id":"324703107","IsPullRequest":false,"CreatedAt":"2018-05-20T11:45:01","Actor":"a-student","Number":"862","RawContent":null,"Title":"Ability to run Blazor code inside web worker is needed","State":"open","Body":"Currently Blazor startup code is tighted to `window` and `document` objects, but worker global object does not have these.\r\nBy the way, some optimization to startup inside a worker can be made [because](https://webassembly.org/getting-started/js-api)\r\n> A WebAssembly.Module object is stateless and supports structured cloning which means that the compiled code can be stored in IndexedDB and/or shared between windows and workers via postMessage\r\n\r\nAt the present time I am using the workaround:\r\n```js\r\nconst xhr = require(\"xhr\");\r\nconst parse5 = require(\"parse5\");\r\n\r\n// index.html content: <script type=\"blazor-boot\"></script>\r\nxhr(\"index.html\", (error, response, body) => {\r\n    if (error) {\r\n        console.log(error);\r\n        return;\r\n    }\r\n\r\n    const script = parse5.parseFragment(body).childNodes[0];\r\n    const src = script.attrs.find(x => x.name === \"src\").value; // \"_framework/blazor.js\"\r\n\r\n    window = self;\r\n    document = {\r\n        currentScript: {\r\n            getAttribute: name => script.attrs.find(x => x.name === name).value\r\n        },\r\n        getElementsByTagName: () => [],\r\n        write: content => {\r\n            const script = parse5.parseFragment(content).childNodes[0];\r\n            if (script.tagName !== \"script\") throw new Error(\"Script is expected here.\");\r\n            const src = script.attrs.find(x => x.name === \"src\").value;\r\n            setTimeout(() => importScripts(src));\r\n        }\r\n    };\r\n\r\n    importScripts(src);\r\n\r\n    // handle onmessage and do some useful things\r\n});\r\n```\r\nDoesn’t it look ugly?\r\n","Url":"https://github.com/aspnet/Blazor/issues/862","RelatedDescription":"Open issue \"Ability to run Blazor code inside web worker is needed\" (#862)"},{"Id":"324701603","IsPullRequest":false,"CreatedAt":"2018-05-20T11:17:23","Actor":"a-student","Number":"861","RawContent":null,"Title":"registerAsyncFunction is wanted","State":"open","Body":"Currently to call JavaScript code from C# synchronously we use `Blazor.registerFunction`. However, many JavaScript APIs are asynchronous (return `Promise`). It would be great to have built-in ability to call such async JavaScript methods from C#.\r\nTo design convenient API you may consider the utility classes I've created to address the issue:\r\n\r\n_registerAsyncFunction.js:_\r\n```js\r\nconst platform = Blazor.platform;\r\nconst assemblyName = ...;\r\nconst namespace = ...;\r\nconst typeName = \"JsInterop\";\r\n\r\nconst setResultMethod = platform.findMethod(assemblyName, namespace, typeName, \"SetResult\");\r\nconst setResult = (key, result) => {\r\n    if (!result) {\r\n        result = null;\r\n    }\r\n    platform.callMethod(setResultMethod, null, [platform.toDotNetString(key), platform.toDotNetString(JSON.stringify(result))]);\r\n};\r\n\r\nconst setExceptionMethod = platform.findMethod(assemblyName, namespace, typeName, \"SetException\");\r\nconst setException = (key, e) => platform.callMethod(setExceptionMethod, null, [platform.toDotNetString(key), platform.toDotNetString(e.toString())]);\r\n\r\n\r\nmodule.exports = function (identifier, getPromise) {\r\n    Blazor.registerFunction(identifier,\r\n        async (key, argsJson) => {\r\n            key = platform.toJavaScriptString(key); // to resist possible garbage collection of the key in mono\r\n            const args = JSON.parse(platform.toJavaScriptString(argsJson));\r\n            try {\r\n                const result = await getPromise.apply(null, args);\r\n                setResult(key, result);\r\n            } catch (e) {\r\n                setException(key, e);\r\n            }\r\n        });\r\n}\r\n```\r\nUsage from JavaScript side:\r\n```js\r\nconst registerAsyncFunction = require(\"./registerAsyncFunction\");\r\nregisterAsyncFunction(\"FuncName\", (arg1, arg2) => new Promise((resolve, reject) => {\r\n    resolve(result);\r\n}));\r\n```\r\n_JsInterop.cs:_\r\n```c#\r\npublic static class JsInterop\r\n{\r\n    private static long _counter;\r\n    private static readonly ConcurrentDictionary<string, (Action<string> SetResult, Action<Exception> SetException)> TaskCompletions = new ConcurrentDictionary<string, (Action<string>, Action<Exception>)>();\r\n\r\n    public static Task<T> InvokeRegisteredAsyncFunction<T>(string identifier, params object[] args)\r\n    {\r\n        var key = Interlocked.Increment(ref _counter).ToString(CultureInfo.InvariantCulture);\r\n        var taskCompletionSource = new TaskCompletionSource<T>();\r\n        var tuple = ((Action<string>)(json => taskCompletionSource.SetResult(JsonConvert.DeserializeObject<T>(json))), (Action<Exception>)taskCompletionSource.SetException);\r\n        TaskCompletions.TryAdd(key, tuple);\r\n        try\r\n        {\r\n            RegisteredFunction.InvokeUnmarshalled<object>(identifier, key, JsonConvert.SerializeObject(args));\r\n        }\r\n        catch (JavaScriptException e)\r\n        {\r\n            TaskCompletions.TryRemove(key, out _);\r\n            throw;\r\n        }\r\n        return taskCompletionSource.Task;\r\n    }\r\n\r\n    private static void SetResult(string key, string json)\r\n    {\r\n        TaskCompletions.TryRemove(key, out var tuple);\r\n        tuple.SetResult(json);\r\n    }\r\n\r\n    private static void SetException(string key, string message)\r\n    {\r\n        TaskCompletions.TryRemove(key, out var tuple);\r\n        tuple.SetException(new JavaScriptException(message));\r\n    }\r\n}\r\n```\r\nUsage from C# side:\r\n```c#\r\nvar result = await JsInterop.InvokeRegisteredAsyncFunction<TResult>(\"FuncName\", arg1, arg2);\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/861","RelatedDescription":"Open issue \"registerAsyncFunction is wanted\" (#861)"},{"Id":"324637262","IsPullRequest":false,"CreatedAt":"2018-05-19T16:36:01","Actor":"a-student","Number":"860","RawContent":null,"Title":"Performance of code in Blazor is extremely poor (~200x slower than on desktop)","State":"closed","Body":"This is a duplicate of [this issue](https://github.com/mono/mono/issues/8776). I have created the duplicate with the hope that experts here can help me to tune the performance of the code build with Blazor. I am using Blazor version 0.3.0.\r\n\r\n\r\nIt is stated [here](https://webassembly.org) that\r\n> WebAssembly aims to execute at native speed\r\n\r\nTherefore, **mono-wasm** is expected to perform nearly the same as on desktop. Unfortunately, mono for WebAssembly is far away in performance than expected, it is on average 200x slower.\r\n\r\nConsider this code:\r\n```C#\r\nvar sw = Stopwatch.StartNew();\r\nvar a = Math.PI;\r\nfor (var i = 0; i < 1080; i++) {\r\n    for (var j = 0; j < 1000000; j++) {\r\n        a += Math.PI;\r\n    }\r\n}\r\nConsole.WriteLine(\"Elapsed \" + sw.Elapsed);\r\n```\r\nIt prints\r\n`Elapsed 00:00:00.9990513` when running in **.NET Core**\r\n`Elapsed 00:00:02.9962702` when running in **mono** on desktop\r\n`Elapsed 00:21:38.9038000` when running in **Blazor** (Google Chrome browser). This is >400x slower than mono on desktop!\r\n\r\nThe same code in JavaScript shows almost the same performance as in .NET Core:\r\n```JavaScript\r\nlet t = performance.now();\r\nlet a = Math.PI;\r\nfor (let i = 0; i < 1080; i++) {\r\n    for (let j = 0; j < 1000000; j++) {\r\n        a += Math.PI;\r\n    }\r\n}\r\nt = performance.now() - t;\r\nconsole.log(\"Elapsed \" + t + \" milliseconds\");\r\n```\r\nIt prints\r\n`Elapsed 1179.1999999986729 milliseconds`\r\n\r\nBy the way, mono-wasm in the latest Firefox shows better performance than in Chrome (`Elapsed 00:01:13.5770000`), but still very slow on average.\r\n\r\nSo my questions are:\r\n1. Why **mono-wasm** is too slow?\r\n2. Is it possible to tune its performance somehow?\r\n\r\nMy environment:\r\nHardware: ThinkPad X1 Carbon (2nd Gen), CPU: 4th Gen Intel® Core™ i7-4600U (3.30GHz 1600MHz 4MB)\r\nOS: Windows 10 Pro 64-bit 1803\r\nBrowser: Google Chrome 66.0.3359.181 (Official Build) (64-bit)\r\nMono-wasm from [this package](https://www.nuget.org/packages/Microsoft.AspNetCore.Blazor.Build/0.3.0)\r\nMono for desktop version 5.12.0 Stable (5.12.0.226) 64-bit\r\n.NET Core version 2.1.300-preview2-008533\r\n","Url":"https://github.com/aspnet/Blazor/issues/860","RelatedDescription":"Closed issue \"Performance of code in Blazor is extremely poor (~200x slower than on desktop)\" (#860)"},{"Id":"324635893","IsPullRequest":false,"CreatedAt":"2018-05-19T15:11:56","Actor":"MrFoxPro","Number":"859","RawContent":null,"Title":"Blazor shows empty page","State":"closed","Body":"Following [instructions](https://blazor.net/docs/get-started.html) i created project.\r\n![image](https://user-images.githubusercontent.com/17229619/40269899-caad63fa-5b9d-11e8-932d-00d4fcc1160e.png)\r\nThen i launched project using `dotnet run` command and opened browser on url, that was displayed. I saw \"loading\" label, then label disappeared and there was just a blank page. I tried to navigate to \"/\", \"/counter\" paths, but this didn`t bring any results. \r\n![image](https://user-images.githubusercontent.com/17229619/40269960-cedefda2-5b9e-11e8-9051-3822e1912485.png)\r\nAlso i tried to create Blazor project using VS2017 Blazor/Blazor+Asp, Firefox, but result was the same.\r\n\r\nOS: Windows 7\r\n.Net Core 2.1.200","Url":"https://github.com/aspnet/Blazor/issues/859","RelatedDescription":"Closed issue \"Blazor shows empty page\" (#859)"},{"Id":"324475465","IsPullRequest":false,"CreatedAt":"2018-05-18T16:29:19","Actor":"tessierp","Number":"858","RawContent":null,"Title":"Support for Startup and third party services","State":"open","Body":"I wanted to add Autofac and support CORS but didn't find a way to add any of this without supported the Startup pattern of classic Asp.Net Core apps. Is it planned to add support for Startup to allow support for third party services such as Autofac?\r\n\r\nI would also include appsettings in there which at the moment I cannot seem to add.","Url":"https://github.com/aspnet/Blazor/issues/858","RelatedDescription":"Open issue \"Support for Startup and third party services\" (#858)"},{"Id":"324448000","IsPullRequest":false,"CreatedAt":"2018-05-18T15:07:44","Actor":"masonwheeler","Number":"857","RawContent":null,"Title":"Need a way to access a layout from a page","State":"open","Body":"Currently, if a page has a layout, there doesn't appear to be any way for the page to get a reference to it.  This can be very frustrating if you want to pass parameters from the route data to the layout, for example.\r\n\r\nIs there a way to do this that isn't obvious?  If not, can it get added to the next release?","Url":"https://github.com/aspnet/Blazor/issues/857","RelatedDescription":"Open issue \"Need a way to access a layout from a page\" (#857)"},{"Id":"324298017","IsPullRequest":false,"CreatedAt":"2018-05-18T07:22:20","Actor":"babula38","Number":"856","RawContent":null,"Title":"When Multiple route constraint then routing fails. \"Error no rout found\"","State":"open","Body":"Today i was exploring the routing constraint. i found that when there multiple constraint in the route declaration routing fails. suppose below if is my route template\r\n```html\r\n/{value:double:int}/\r\n```\r\nand send the parameter as 15.0\r\nExpected: Route should pass \r\nActual:- it is giving error \"Rout not found\".\r\n\r\n**Below is my analysis:-** \r\nThe issue is here in the [TemplateSegment.cs](https://github.com/aspnet/Blazor/blob/e31bf2979627e91f2fe96e3bb0946293edd11568/src/Microsoft.AspNetCore.Blazor/Routing/TemplateSegment.cs#L49). Basically here when the first constraint does match but the second constraint does not match, still it say the route does not match. even though the first constraint match\r\nIf you want to find this then run the test [CanMatchSegmentWithMultipleConstraints](https://github.com/aspnet/Blazor/blob/e31bf2979627e91f2fe96e3bb0946293edd11568/test/Microsoft.AspNetCore.Blazor.Test/Routing/RouteTableTests.cs#L197)  with\r\n```html \r\nvar context = new RouteContext(\"/15.0\"); \r\n```\r\n\r\nIt is going to fail.\r\nthe logic might be something below\r\n```csharp\r\n if (IsParameter)\r\n            {\r\n                matchedParameterValue = pathSegment;\r\n                if (Constraints.Count() > 0)\r\n                {\r\n                    foreach (var constraint in Constraints)\r\n                    {\r\n                        if (constraint.Match(pathSegment, out matchedParameterValue))\r\n                        {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                matchedParameterValue = null;\r\n                return string.Equals(Value, pathSegment, StringComparison.OrdinalIgnoreCase);\r\n            }\r\n        }\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/856","RelatedDescription":"Open issue \"When Multiple route constraint then routing fails. \"Error no rout found\"\" (#856)"},{"Id":"324283601","IsPullRequest":false,"CreatedAt":"2018-05-18T06:17:46","Actor":"mousehuang","Number":"855","RawContent":null,"Title":"How to pass target to Blazor.platform.callMethod.","State":"open","Body":"For the Blazor.platform.callMethod, the second parameter is a Target. It can be null to invoking a static method. But I don't know how to pass an object instance to it and invoking the instance method.\r\n\r\nBlazor.platform.callMethod(\r\n                    logToConsoleMethod,         // Method handle\r\n                    null,                       // Target // HOW TO PASS AN OBJECT INSTANCE to IT.\r\n                    [ messageAsDotNetString ]   // Arguments\r\n                );","Url":"https://github.com/aspnet/Blazor/issues/855","RelatedDescription":"Open issue \"How to pass target to Blazor.platform.callMethod.\" (#855)"},{"Id":"324126242","IsPullRequest":false,"CreatedAt":"2018-05-17T18:18:05","Actor":"tessierp","Number":"853","RawContent":null,"Title":"Trying to convert JSON to Object using Newtonsoft freezes","State":"closed","Body":"Hi,\r\n\r\nI've been trying to use Newtonsoft to convert a json string to an my expected model but each time I include Newtonsoft in a view and use it, it freezes. For example lets say I have a view with the following : \r\n`\r\n@functions {\r\n\r\n    IEnumerable<RegionDTO> _regions;\r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        Http.BaseAddress = new System.Uri(\"http://localhost:10000\");\r\n         regionData = Http.GetStringAsync(\"/api/Region\");\r\n         var parsedData = JObject.Parse(regionDataTask.Result);\r\n         _regions = parsedData.ToObject<IEnumerable<RegionDTO>>();\r\n    }\r\n\r\n    class RegionDTO\r\n    {\r\n        Guid RegionId { get; set; }\r\n        string RegionName { get; set; }\r\n    }\r\n}\r\n`\r\nI will get no output, nothing will happen. I tested this code including JsonConvert.DeserializeObject from Newtonsoft and the same thing happens.\r\n\r\nI tested this outside of Blazor and it works fine.\r\n\r\nNow you may wonder, why would I be doing this if I can call GetJsonAsync directly from Http? Well, initially the API I coded didn't have\r\n\r\n`services.AddMvc().AddJsonOptions(options =>\r\n{\r\n  options.SerializerSettings.ContractResolver = new DefaultContractResolver();\r\n});`\r\n\r\nso all the json data started with a lowercase and it wouldn't resolve to my models which have properties starting with a Upper case for the first letter (this is probably a problem wit the HttpClient).\r\n\r\nAnyways, anyways else has this problem with Blazor using NewtonSoft?\r\n","Url":"https://github.com/aspnet/Blazor/issues/853","RelatedDescription":"Closed issue \"Trying to convert JSON to Object using Newtonsoft freezes\" (#853)"},{"Id":"324131398","IsPullRequest":false,"CreatedAt":"2018-05-17T18:15:16","Actor":"benhysell","Number":"854","RawContent":null,"Title":"Namespaces dependent on solution folder name?","State":"open","Body":"- Blazor 0.3.0\r\n- VS 2017 15.7.1\r\n\r\nCreated a new solution via PowerShell:\r\n```c:\\projects\\CoolNewProject\\ dotnet new blazor```\r\n\r\nCreated a new project in c:\\projects\\CoolNewProject called CoolNewProject.\r\n\r\nNormally I like to have my .sln file a directory above my projects, i.e.\r\n```c:\\projects\\CoolNewProject\\CoolNewProject.sln```\r\n\r\nThen throw all of my src in 'src'.\r\n```c:\\projects\\CoolNewProject\\src\\CoolNewProject.csproj``` and all of my other project files.\r\n\r\nThe second I move everything into the 'src' folder from my newly created Blazor project I can no longer compile:\r\n```\r\nError | CS0246 | The type or namespace name 'App' could not be found (are you missing a using directive or an assembly reference?) | CoolNewProject | C:\\projects\\CoolNewProject\\src\\Program.cs | 17 | Active\r\n```\r\n\r\nAdditionally, none of the Pages can find their namespaces either, i.e.\r\n```\r\nError | CS0234 | The type or namespace name 'Shared' does not exist in the namespace 'CoolNewProject' (are you missing an assembly reference?) | CoolNewProject | C:\\Projects\\CoolNewProject\\src\\obj\\Debug\\netstandard2.0\\Pages\\Counter.g.i.cs | 21 | Active\r\n```","Url":"https://github.com/aspnet/Blazor/issues/854","RelatedDescription":"Open issue \"Namespaces dependent on solution folder name?\" (#854)"},{"Id":"324100253","IsPullRequest":false,"CreatedAt":"2018-05-17T16:36:59","Actor":"Andrzej-W","Number":"852","RawContent":null,"Title":"Add support for binding decimal, double, float data type with configurable formatting","State":"open","Body":"This should work\r\n```HTML\r\n<input bind=\"@price\"/>\r\n```\r\n```C#\r\n@functions\r\n{\r\n    decimal price;\r\n}\r\n```\r\nbut currently we get an exception:\r\n`Error: System.ArgumentException: 'bind' does not accept values of type System.Decimal. To read and write this value type, wrap it in a property of type string with suitable getters and setters.`\r\n\r\nDecimal data type is paramount in every business application. We don't want to use \"hacks\" and convert it to/from string manually every time.\r\n\r\nSupport for formatting is also crucial (number of decimal places, decimal and thousandth separators)","Url":"https://github.com/aspnet/Blazor/issues/852","RelatedDescription":"Open issue \"Add support for binding decimal, double, float data type with configurable formatting\" (#852)"},{"Id":"324077609","IsPullRequest":false,"CreatedAt":"2018-05-17T15:36:31","Actor":"vatara","Number":"851","RawContent":null,"Title":"\"Attribute 'Format' was matched by multiple bind attributes\" error when a Razor component @inherits a BlazorComponent that has a [Parameter]","State":"open","Body":"### Title\r\n\"Attribute 'Format' was matched by multiple bind attributes\" error when a Razor component @inherits a BlazorComponent that has a [Parameter]\r\n\r\n### Functional impact\r\nWon't compile while the BlazorComponent class has a [Parameter]\r\n\r\n### Minimal repro steps\r\nTest project: https://github.com/vatara/BlazorTest/tree/94ce188e4ff6680778a3781488149af74fa9a212\r\n\r\n### Expected result\r\nNo error\r\n\r\n### Actual result\r\nThis compile error:\r\n```\r\nThe attribute 'Format' was matched by multiple bind attributes. Duplicates:\r\nBlazorTest.Client.Pages.DateTime\r\nBlazorTest.Client.Display.Elements.DateTime\r\n```\r\n\r\n### Further technical details\r\nI have a page DateTime that uses @inherits\r\nhttps://github.com/vatara/BlazorTest/blob/94ce188e4ff6680778a3781488149af74fa9a212/BlazorTest.Client/Pages/DateTime.cshtml\r\n\r\nThe DateTime BlazorComponent it @inherits has a [Parameter] named Format\r\nhttps://github.com/vatara/BlazorTest/blob/94ce188e4ff6680778a3781488149af74fa9a212/BlazorTest.Client/Display/Elements/DateTime.cs#L10-L11\r\n\r\nWhen a page using component tries to set the [Parameter] it gives the error above:\r\nhttps://github.com/vatara/BlazorTest/blob/6445791d32d329b190448a8ae2cd92cec98fb517/BlazorTest.Client/Pages/Index.cshtml#L7\r\n\r\nIt seems like the [Parameter] is getting counted twice, once on the BlazorComponent and again on the Razor page that @inherits it.\r\n\r\nIt worked fine when I had the BlazorComponent in the Razor .cshtml page instead of inheriting.\r\nIt also works fine if I don't try to set the [Parameter] or remove it entirely.\r\n","Url":"https://github.com/aspnet/Blazor/issues/851","RelatedDescription":"Open issue \"\"Attribute 'Format' was matched by multiple bind attributes\" error when a Razor component @inherits a BlazorComponent that has a [Parameter]\" (#851)"},{"Id":"324005313","IsPullRequest":false,"CreatedAt":"2018-05-17T12:40:47","Actor":"chassq","Number":"850","RawContent":null,"Title":"Consider Index.html -> Index.cshtml or tag where Blazor will render head html","State":"open","Body":"Not sure if this has already been mentioned or not but it would be nice, if possible, if the wwwroot/index.html could initially be configured server side so that we could add Partials to it? Or similar functionality added possibly another way. Sometimes we like to use partial views in the head tag for example (e.g. favicons). Not sure how we can reach the head tag any other way? \r\n\r\nI think this is somewhat related to https://github.com/aspnet/Blazor/issues/842\r\n","Url":"https://github.com/aspnet/Blazor/issues/850","RelatedDescription":"Open issue \"Consider Index.html -> Index.cshtml or tag where Blazor will render head html\" (#850)"},{"Id":"323890131","IsPullRequest":false,"CreatedAt":"2018-05-17T06:38:22","Actor":"babula38","Number":"849","RawContent":null,"Title":"Routing with query string parameter not working.","State":"open","Body":"I tried to use to get the parameter from the querystring to but it is not happening.\r\n\r\nif router support querystring could you please past the syntax to declare and use it","Url":"https://github.com/aspnet/Blazor/issues/849","RelatedDescription":"Open issue \"Routing with query string parameter not working.\" (#849)"},{"Id":"323872815","IsPullRequest":false,"CreatedAt":"2018-05-17T05:05:18","Actor":"abhishekgoenka","Number":"848","RawContent":null,"Title":"Object reference not set to an instance of an object.","State":"closed","Body":"I am getting the following error after including Newtonsoft.Json(version 11.0.2) package\r\n\r\nUncaught Error: Newtonsoft.Json.JsonSerializationException: Error setting value to 'TargetId' on 'BlazorApp1.Message'. ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\n  at System.Linq.Expressions.Interpreter.LightLambda.MakeRunDelegateCtor (System.Type delegateType) <0x1d7f658 + 0x00308> in <e5348b97720a46d69ea40b87b6a035d9>:0 \r\n  at System.Linq.Expressions.Interpreter.LightLambda.GetRunDelegateCtor (System.Type delegateType) <0x1d78e70 + 0x00048> in <e5348b97720a46d69ea40b87b6a035d9>:0 \r\n  at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate (System.Type delegateType) <0x1d78ce8 + 0x0000e> in <e5348b97720a46d69ea40b87b6a035d9>:0 \r\n  at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate (System.Runtime.CompilerServices.IStrongBox[] closure) <0x1d783c0 + 0x00024> in <e5348b97720a46d69ea40b87b6a035d9>:0 \r\n  at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate () <0x1d78250 + 0x0000a> in <e5348b97720a46d69ea40b87b6a035d9>:0 \r\n  at System.Linq.Expressions.LambdaExpression.Compile (System.Boolean preferInterpretation) <0x205a910 + 0x00018> in <e5348b97720a46d69ea40b87b6a035d9>:0 \r\n  at System.Linq.Expressions.LambdaExpression.Compile () <0x205a8d8 + 0x0000a> in <e5348b97720a46d69ea40b87b6a035d9>:0 \r\n\r\n![image](https://user-images.githubusercontent.com/14522198/40157575-67c338c8-59bd-11e8-84bb-dbd41a5d6a36.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/848","RelatedDescription":"Closed issue \"Object reference not set to an instance of an object.\" (#848)"},{"Id":"323868928","IsPullRequest":false,"CreatedAt":"2018-05-17T04:32:44","Actor":"dotnetnoobie","Number":"847","RawContent":null,"Title":"Bootstrap 4 Templates Update to v4.1.1","State":"open","Body":"The current Blazor templates are Bootstrap 4.0.0\r\nthe latest bootstrap is currently v4.1.1\r\n\r\nAny chance of updating the templates to use the latest version of Bootstrap 4 to save having to manually update it every time you make a new project?","Url":"https://github.com/aspnet/Blazor/issues/847","RelatedDescription":"Open issue \"Bootstrap 4 Templates Update to v4.1.1\" (#847)"},{"Id":"323306966","IsPullRequest":false,"CreatedAt":"2018-05-17T02:24:08","Actor":"EdLichtman","Number":"838","RawContent":null,"Title":"Fatal Error while changing anything -- running in Docker","State":"closed","Body":"I used the codingblocks tutorial to get started with Blazor on Docker: https://www.youtube.com/watch?v=jGyFKH5y6LA&t=1052s. Therefore my configuration has removed launchSettings applicationUrl and openInBrowser settings, and I also added a <Watch Include=\"**\\*.cshtml\"/> to the csproj.\r\n\r\nI'm using Dotnet sdk: 2.1.300-rc1-008673\r\n\r\nWhile following the directions at https://blazor.net/docs/tutorials/build-your-first-blazor-app.html I added the IncrementCount Parameter to the Counter component and then tried to add IncrementCount=\"10\" as a property to the Counter element on the cshtml page and everything fell over. It wouldn't build, so I removed the Counter from the index.cshtml file and it still wouldn't build. I removed the Parameter IncrementCount from the Counter page and it still wouldn't build. I completely reset it (other than the csproj and launch settings configuration) and at every level I got this error:\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.IO.FileNotFoundException: Unable to find the specified file.\r\n   at Interop.Sys.GetCwdHelper(Byte* ptr, Int32 bufferSize)\r\n   at Interop.Sys.GetCwd()\r\n   at System.IO.Path.GetFullPath(String path)\r\n   at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerableFactory.UserFiles(String directory, String expression, EnumerationOptions options)\r\n   at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options)\r\n   at System.IO.Directory.GetFiles(String path, String searchPattern)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.ProcessProjectSwitch(String[] parameters, String[] projectsExtensionsToIgnore, DirectoryGetFiles getFiles)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.ProcessCommandLineSwitches(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches switchesNotFromAutoResponseFile, String& projectFile, String[]& targets, String& toolsVersion, Dictionary`2& globalProperties, ILogger[]& loggers, LoggerVerbosity& verbosity, List`1& distributedLoggerRecords, Int32& cpuCount, Boolean& enableNodeReuse, TextWriter& preprocessWriter, Boolean& detailedSummary, ISet`1& warningsAsErrors, ISet`1& warningsAsMessages, Boolean& enableRestore, ProfilerLogger& profilerLogger, Boolean& enableProfiler, Dictionary`2& restoreProperties, Boolean recursing)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine)\r\n\r\nUnhandled Exception: System.IO.FileNotFoundException: Unable to find the specified file.\r\n   at Interop.Sys.GetCwdHelper(Byte* ptr, Int32 bufferSize)\r\n   at Interop.Sys.GetCwd()\r\n   at System.IO.Path.GetFullPath(String path)\r\n   at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerableFactory.UserFiles(String directory, String expression, EnumerationOptions options)\r\n   at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options)\r\n   at System.IO.Directory.GetFiles(String path, String searchPattern)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.ProcessProjectSwitch(String[] parameters, String[] projectsExtensionsToIgnore, DirectoryGetFiles getFiles)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.ProcessCommandLineSwitches(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches switchesNotFromAutoResponseFile, String& projectFile, String[]& targets, String& toolsVersion, Dictionary`2& globalProperties, ILogger[]& loggers, LoggerVerbosity& verbosity, List`1& distributedLoggerRecords, Int32& cpuCount, Boolean& enableNodeReuse, TextWriter& preprocessWriter, Boolean& detailedSummary, ISet`1& warningsAsErrors, ISet`1& warningsAsMessages, Boolean& enableRestore, ProfilerLogger& profilerLogger, Boolean& enableProfiler, Dictionary`2& restoreProperties, Boolean recursing)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args)","Url":"https://github.com/aspnet/Blazor/issues/838","RelatedDescription":"Closed issue \"Fatal Error while changing anything -- running in Docker\" (#838)"},{"Id":"323814556","IsPullRequest":false,"CreatedAt":"2018-05-16T22:49:06","Actor":"galvesribeiro","Number":"846","RawContent":null,"Title":"A more complete Router","State":"open","Body":"Hello Blazor folks.\r\n\r\nWe at BlazorExtensions were looking for an enhanced/more complete router for Blazor. We have ways to do it without touch the current Blazor router but we feel that it would be too much work to wrap Blazor navigation into a HoC that would be responsible to render the proper components there. \r\n\r\nSo, in order to avoid that undertaking, we would like to contribute to Blazor repo the router work.\r\n\r\nThe first question is: Are Blazor team members already working on enhance the Router to be close in features to other frameworks' routers like ReactJS and Angular? In case of yes, and it would be released relatively soon, then we can close the issue and wait for it.\r\n\r\nOtherwise, here are the features we would like to add to the current router:\r\n\r\n1. Declarative Routing\r\n2. Complex/Nested routes\r\n3. State passing between routes\r\n4. Lazy/Decomposed/modular routing\r\n5. Guards \r\n6. Routing Abstractions (allow plugable external/custom routers)\r\n\r\nThose are the initial foundation we thought about that should be in place to allow more complete routing in Blazor apps.\r\n\r\nLooking forward to hear from you guys.\r\n\r\nThanks","Url":"https://github.com/aspnet/Blazor/issues/846","RelatedDescription":"Open issue \"A more complete Router\" (#846)"},{"Id":"323457365","IsPullRequest":false,"CreatedAt":"2018-05-16T21:58:11","Actor":"InnovationGB","Number":"839","RawContent":null,"Title":"[please close wrong place to post]DbContext optionsBuilder.UseSqlServer missing reference","State":"closed","Body":"Hello, I am sorry for the basic issue but there is no where else to get help on Blazor,\r\n\r\nI am trying to make a DbContext class and when I try to use optionsBuilder.UseSqlServer(\"connection string\") I get an error stated below\r\n\r\nI am trying to add the reference Microsoft.EntityFrameworkCore.SqlServer but there is no option for it in the dependencies reference manager, and simply typing using Microsoft.EntityFrameworkCore.SqlServer; does not work either.\r\n\r\nI tried to use nuget package manager to install the sql server package, and i get a warning stating I downgraded and that it was restored, yet I do not see it installed as a nuget package so I assume that the project template comes with it pre installed yet I am still getting this error. Please help.\r\n\r\n`Error\tCS1061\t'DbContextOptionsBuilder' does not contain a definition for 'UseSqlServer' and no extension method 'UseSqlServer' accepting a first argument of type 'DbContextOptionsBuilder' could be found (are you missing a using directive or an assembly reference?)\tBlazorCRUD.Shared\tC:\\Users\\User\\Desktop\\BlazorCRUD\\BlazorCRUD.Shared\\DataAccess\\EmployeeContext.cs\t15\tActive\r\n`","Url":"https://github.com/aspnet/Blazor/issues/839","RelatedDescription":"Closed issue \"[please close wrong place to post]DbContext optionsBuilder.UseSqlServer missing reference\" (#839)"},{"Id":"323460255","IsPullRequest":false,"CreatedAt":"2018-05-16T21:57:56","Actor":"Bartolomeus-649","Number":"840","RawContent":null,"Title":"Why are we messing around with html when we have .net?","State":"closed","Body":"How do you get winforms or a wpf application to run in the browser with Blazor?\r\n\r\nOr Silverlight, that's a framework even smaller than .NET/Mono, why not use that?  Just about anything is better then doing GUIs in HTML.\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/840","RelatedDescription":"Closed issue \"Why are we messing around with html when we have .net?\" (#840)"},{"Id":"323791157","IsPullRequest":false,"CreatedAt":"2018-05-16T21:20:46","Actor":"danroth27","Number":"845","RawContent":null,"Title":"Update template links to be relative paths instead of absolute paths","State":"open","Body":"The nav links and fetch data URL in the templates are all absolute paths with a leading slash, which means they don't honor the base path for the app. I think these paths should be relative paths (no leading slashes).","Url":"https://github.com/aspnet/Blazor/issues/845","RelatedDescription":"Open issue \"Update template links to be relative paths instead of absolute paths\" (#845)"},{"Id":"323790440","IsPullRequest":false,"CreatedAt":"2018-05-16T21:18:13","Actor":"danroth27","Number":"844","RawContent":null,"Title":"HttpClient base address is missing trailing slash","State":"open","Body":"The `HttpClient` base address reflects the base path of the app, which is great, but it's missing the trailing slash:\r\n\r\n```html\r\n<base href=\"/foo/\" />\r\n```\r\n\r\n```csharp\r\n@inject HttpClient Http\r\n\r\n@functions {\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        Console.WriteLine(Http.BaseAddress); // Expected: <base-uri>/foo/, Actual: <base-uri>/foo\r\n    }\r\n}\r\n```\r\n\r\nThe problem seems to be here:\r\n\r\nhttps://github.com/aspnet/Blazor/blob/a9c45fe78ac18b6bd524904b40896c249f9f09c0/src/Microsoft.AspNetCore.Blazor.Browser/Services/BrowserUriHelper.cs#L146-L158\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/844","RelatedDescription":"Open issue \"HttpClient base address is missing trailing slash\" (#844)"},{"Id":"323690024","IsPullRequest":false,"CreatedAt":"2018-05-16T17:13:07","Actor":"abhisheksiddhu","Number":"843","RawContent":null,"Title":"allow framework assemblies to be transferred over cdn","State":"closed","Body":"I know that we're caching the framework dlls, the initial load is still very heavy, and as more and more applications start using blazor it would make a significant impact to serve the dll over a cdn, we can use the nuget or assembly version number to be the differentiator.","Url":"https://github.com/aspnet/Blazor/issues/843","RelatedDescription":"Closed issue \"allow framework assemblies to be transferred over cdn\" (#843)"},{"Id":"323685563","IsPullRequest":false,"CreatedAt":"2018-05-16T16:00:23","Actor":"GoranHalvarsson","Number":"842","RawContent":null,"Title":"Html meta tags, page title ","State":"open","Body":"Hello people\r\n\r\nYou guys are doing a wonderful job with Blazor :-)\r\n\r\nI have a question regarding Html meta tags. The app itself will be placed in the app element on the page. But how about stuff in the header? Like meta tags and so on. \r\nLet say I would like to change/update meta tag data depending on what page (in the app).  Or just update the page title. \r\nHow to do this? By Javascript interop?  \r\n","Url":"https://github.com/aspnet/Blazor/issues/842","RelatedDescription":"Open issue \"Html meta tags, page title \" (#842)"},{"Id":"323601935","IsPullRequest":false,"CreatedAt":"2018-05-16T13:15:47","Actor":"AlexStory","Number":"841","RawContent":null,"Title":"Parent losing track of children components","State":"closed","Body":"### Title\r\nParent components can have inconsistent updates based on their child components status.\r\n\r\n### Functional Impact\r\nReduces ability to break pages into components, affecting modularization, and code reuse.\r\n\r\n### Minimal repro steps\r\nFollow the [tutorial](https://blazor.net/docs/tutorials/build-your-first-blazor-app.html) \r\nThen move the TodoItems in the foreach into a separate template that takes a TodoItem as a parameter.\r\n\r\n### Expected result\r\nThe parent component changes the number of items remaining when one is marked complete.\r\n\r\n### Actual result\r\nThe parent page component will no longer update the unfinished task count when a child element is marked complete. But it will update to the correct amount whenever a new child is added.\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/841","RelatedDescription":"Closed issue \"Parent losing track of children components\" (#841)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-05-22T05:30:02.6735014Z","RunDurationInMilliseconds":1142}