{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Apache Spark™ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6 out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace called System.Text.Json with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9919714543","Type":"PullRequestEvent","CreatedAt":"2019-06-30T00:20:04","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25476","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#25476) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n\r\n\r\n"},{"Id":"9919711199","Type":"PullRequestEvent","CreatedAt":"2019-06-30T00:16:56","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25498","RelatedDescription":"Merged pull request \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25498) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190628.3\r\n- **Date Produced**: 6/28/2019 2:41 PM\r\n- **Commit**: 6724989b3d7e1570e9316c3b13a51b4cf22da2f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190628.3\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190628.3\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n"},{"Id":"9919625099","Type":"IssuesEvent","CreatedAt":"2019-06-29T23:03:20","Actor":"bergmeister","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25502","RelatedDescription":"Opened issue \"CoreClr crashes sporadically when interacting with Windows COM API\" (#25502) at dotnet/coreclr","RelatedBody":"This issue has been observed to happen sporadically and is hard to reproduce but we have lots of logs and narrowed down the offending code. The issue causes PowerShell Core itself to sporadically crash on Windows at startup\r\n- It does not seem to be specific to a version of Windows, it has been seen in various environments\r\n- It has been observed with the latest runtime of .Net Core 2.1 as well as `3.0-preview5`\r\n- The process is running in `MTA` appartment state and interacts with Windows COM APIs to create an elevated `JumpList` entry on application startup. The APIs are public and there were no issues when the code was written in `C++` for Windows PowerShell and the code was later ported to managed C# with COM interfaces being taken from the Windows API kit.\r\n- The issue is described in detail [here](https://github.com/PowerShell/PowerShell/issues/9295) with a crash log [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-500770387), a memory dump [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501135947) and its associated stack trace [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501353113), some preliminary analysis of what goes on in the coreclr is [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501353113)\r\n- We added more logging statements and found that the fatal CLR error happens [here](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/WindowsTaskbarJumpList/TaskbarJumpList.cs#L87) in PowerShell's code."},{"Id":"9919570169","Type":"PullRequestEvent","CreatedAt":"2019-06-29T22:20:21","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25501","RelatedDescription":"Opened pull request \"Add a check before firing some threadpool events\" (#25501) at dotnet/coreclr","RelatedBody":"Fix #25405"},{"Id":"9919540204","Type":"PullRequestEvent","CreatedAt":"2019-06-29T21:57:59","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25500","RelatedDescription":"Merged pull request \"Remove an old CoreFX exclusion file\" (#25500) at dotnet/coreclr","RelatedBody":"Plus, add comments to the new exclusion file"},{"Id":"9919085245","Type":"PullRequestEvent","CreatedAt":"2019-06-29T17:19:41","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25500","RelatedDescription":"Opened pull request \"Remove an old CoreFX exclusion file\" (#25500) at dotnet/coreclr","RelatedBody":"Plus, add comments to the new exclusion file"},{"Id":"9919028732","Type":"PullRequestEvent","CreatedAt":"2019-06-29T16:50:03","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25493","RelatedDescription":"Merged pull request \"Update documentation for corefx testing in coreclr repo\" (#25493) at dotnet/coreclr","RelatedBody":""},{"Id":"9918928047","Type":"PullRequestEvent","CreatedAt":"2019-06-29T15:57:07","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25490","RelatedDescription":"Merged pull request \"Re-enable corefx tests\" (#25490) at dotnet/coreclr","RelatedBody":""},{"Id":"9918853989","Type":"PullRequestEvent","CreatedAt":"2019-06-29T15:17:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25464","RelatedDescription":"Closed pull request \"Reenable test for dotnet/corefx#37886\" (#25464) at dotnet/coreclr","RelatedBody":""},{"Id":"9918832185","Type":"IssuesEvent","CreatedAt":"2019-06-29T15:06:26","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25499","RelatedDescription":"Opened issue \"Formatting Windows_NT x64 CI leg failing 100%\" (#25499) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9919671160","Type":"PullRequestEvent","CreatedAt":"2019-06-29T23:42:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11674","RelatedDescription":"Opened pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11674) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190629.3\r\n- **Date Produced**: 6/29/2019 11:42 PM\r\n- **Commit**: 3b4ca06bbc96e4bd483cb5384e1da7d4a535e715\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19329.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9919670589","Type":"PullRequestEvent","CreatedAt":"2019-06-29T23:42:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11667","RelatedDescription":"Merged pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11667) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 10:02 AM\r\n- **Commit**: ef19361731617687698071cd8b3c64d7d68b28ac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19329.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9918861516","Type":"IssuesEvent","CreatedAt":"2019-06-29T15:21:55","Actor":"alecgn","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1295","RelatedDescription":"Opened issue \"Consider adding AesGcm and AesManaged to .NET Standard\" (#1295) at dotnet/standard","RelatedBody":""},{"Id":"9918610334","Type":"PullRequestEvent","CreatedAt":"2019-06-29T13:03:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1294","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1294) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9918593034","Type":"PullRequestEvent","CreatedAt":"2019-06-29T12:53:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1294","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1294) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9918528645","Type":"PullRequestEvent","CreatedAt":"2019-06-29T12:14:01","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1293","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1293) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9918512461","Type":"PullRequestEvent","CreatedAt":"2019-06-29T12:03:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1293","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1293) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9919569136","Type":"IssuesEvent","CreatedAt":"2019-06-29T22:19:37","Actor":"vcsjones","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/39057","RelatedDescription":"Closed issue \"API Proposal: Equality members on Oid.\" (#39057) at dotnet/corefx","RelatedBody":"`Oid` seems like a good candidate for comparable members.\r\n\r\nProposal:\r\n\r\n```csharp\r\nnamespace System.Security.Cryptography {\r\n    public sealed class Oid : IEquatable<Oid> {\r\n        public static bool operator == (Oid oid1, Oid oid2) => throw null;\r\n        public static bool operator != (Oid oid1, Oid oid2) => throw null;\r\n\r\n        public override bool Equals(object obj) => throw null;\r\n        public override int GetHashCode() => throw null;\r\n        public bool Equals(Oid oid) => throw null;\r\n    }\r\n}\r\n```\r\n\r\n/cc @bartonjs "},{"Id":"9919562533","Type":"IssuesEvent","CreatedAt":"2019-06-29T22:14:26","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39060","RelatedDescription":"Opened issue \"Error while checking for terminated children\" (#39060) at dotnet/corefx","RelatedBody":"Hit in https://github.com/dotnet/coreclr/pull/25497 on Linux arm checked\r\n\r\n```\r\n  Discovering: JIT.jit64.XUnitWrapper\r\n  Discovered:  JIT.jit64.XUnitWrapper\r\n  Starting:    JIT.jit64.XUnitWrapper\r\nProcess terminated. Error while checking for terminated children. errno = 0\r\n   at System.Environment.FailFast(System.String)\r\n   at System.Diagnostics.ProcessWaitState.CheckChildren(Boolean)\r\n   at System.Diagnostics.Process.OnSigChild(Boolean)\r\nAborted (core dumped)\r\n```"},{"Id":"9919558241","Type":"IssuesEvent","CreatedAt":"2019-06-29T22:11:11","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39059","RelatedDescription":"Opened issue \"Unhandled Exception TaskCanceledException (thrown from WhenAllOrAnyFailed)\" (#39059) at dotnet/corefx","RelatedBody":"Hit by `System.Net.WebSockets.Client.Tests.ConnectTest.ConnectAsync_NonStandardRequestHeaders_HeadersAddedWithoutValidation` test in https://github.com/dotnet/coreclr/pull/25497\r\n\r\n```\r\nUnhandled Exception of Type System.Threading.Tasks.TaskCanceledException\r\nMessage :\r\nSystem.Threading.Tasks.TaskCanceledException : A task was canceled.\r\nStack Trace :\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 83\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 111\r\n   at System.Net.Test.Common.LoopbackServer.<>c__DisplayClass11_0.<<CreateClientAndServerAsync>b__0>d.MoveNext() in /_/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 83\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Test.Common.LoopbackServer.CreateServerAsync(Func`2 funcAsync, Options options) in /_/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 66\r\n   at System.Net.WebSockets.Client.Tests.ConnectTest.ConnectAsync_NonStandardRequestHeaders_HeadersAddedWithoutValidation() in /_/src/System.Net.WebSockets.Client/tests/ConnectTest.cs:line 237\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```"},{"Id":"9919553428","Type":"PullRequestEvent","CreatedAt":"2019-06-29T22:07:35","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39055","RelatedDescription":"Merged pull request \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#39055) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190628.3\r\n- **Date Produced**: 6/28/2019 2:41 PM\r\n- **Commit**: 6724989b3d7e1570e9316c3b13a51b4cf22da2f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190628.3\r\n\r\n[marker]: <> (End:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n\r\n"},{"Id":"9919512851","Type":"IssuesEvent","CreatedAt":"2019-06-29T21:38:23","Actor":"LordBenjamin","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39058","RelatedDescription":"Opened issue \"Potential Ryzen performance edge-case\" (#39058) at dotnet/corefx","RelatedBody":"I've noticed while doing some benchmarking that .NET Core is noticeably (21%) slower than .NET Framework on my AMD Ryzen 1200 based PC for a certain piece of code.\r\n\r\nRunning the same benchmark on an Intel i7 6700 based PC shows .NET Core running significantly (41%) faster than Framework.\r\n\r\nCode to reproduce is here:\r\nhttps://github.com/LordBenjamin/DotNetCore-Ryzen-Performance-Repro/\r\n\r\n**Benchmarks**\r\n\r\n* `OriginalBenchmark.cs` \r\n\r\nQuite close to my actual code. Slower on Ryzen and faster on Intel.\r\n\r\n* `StreamWriteBenchmark.cs`\r\n\r\nDistilled down after I noticed that commenting out the call to  `MemoryStream.Write(byte[] buffer, int offset, int count);` in  `OriginalBenchmark.cs` leaves .NET Core consistently faster on both CPUs. Core performance significantly worse on Ryzen, but comparable to Framework on Intel.\r\n\r\n**Affected Frameworks**\r\n\r\nI can reproduce using both .NET Core 2.1 and 3.0. Framework version is 4.7.2 in both cases. I suspect there may be more than one issue at play here - but the `StreamWriteBenchmark` seems like a good place to start:\r\n\r\n**Results**\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.557 (1809/October2018Update/Redstone5)\r\nAMD Ryzen 3 1200, 1 CPU, 4 logical and 4 physical cores\r\n.NET Core SDK=3.0.100-preview6-012264\r\n  [Host] : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3416.0\r\n  Core   : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n\r\n\r\n|      Method |  Job | Runtime |      Mean |     Error |    StdDev |\r\n|------------ |----- |-------- |----------:|----------:|----------:|\r\n| StreamWrite |  Clr |     Clr |  68.21 us | 0.4611 us | 0.4088 us |\r\n| StreamWrite | Core |    Core | 118.42 us | 0.5408 us | 0.5058 us |\r\n```\r\n\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.557 (1809/October2018Update/Redstone5)\r\nIntel Core i7-6700 CPU 3.40GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET Core SDK=2.1.700\r\n  [Host] : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.8.3801.0\r\n  Core   : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n\r\n\r\n|      Method |  Job | Runtime |     Mean |     Error |    StdDev |\r\n|------------ |----- |-------- |---------:|----------:|----------:|\r\n| StreamWrite |  Clr |     Clr | 75.37 us | 0.9133 us | 0.7626 us |\r\n| StreamWrite | Core |    Core | 75.39 us | 0.8624 us | 0.8067 us |\r\n```\r\n\r\nHappy to supply further information or change and re-run benchmarks as required."},{"Id":"9919353480","Type":"PullRequestEvent","CreatedAt":"2019-06-29T19:53:21","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36207","RelatedDescription":"Merged pull request \"Make CoreFx.Private.TestUtilites RID-agnostic\" (#36207) at dotnet/corefx","RelatedBody":"Changes:\r\n- Downgrade CoreFx.Private.TestUtilities to a \"normal\" test project and remove its packaging\r\n\r\nEDIT: Removed the harvesting part from this PR"},{"Id":"9919327921","Type":"PullRequestEvent","CreatedAt":"2019-06-29T19:38:12","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39038","RelatedDescription":"Merged pull request \"Fix exception messages for max response headers length\" (#39038) at dotnet/corefx","RelatedBody":"Some of the call sites use a value whose units is kbytes, but the exception message refers to bytes.\r\n\r\ncc: @scalablecory, @davidsh"},{"Id":"9919251529","Type":"PullRequestEvent","CreatedAt":"2019-06-29T18:54:28","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38792","RelatedDescription":null,"RelatedBody":"Requires https://github.com/dotnet/arcade/pull/3139\r\nRequires https://github.com/dotnet/corefx/pull/36207\r\n\r\nThe property that points to the manifest which is passed down to the `_HandlePackageFileConflicts` task is set in CoreFxTesting. The only work necessary here is to generate the manifest file.\r\n\r\nAdditionally disabling the runtime binplacing which I did in the same PR..."},{"Id":"9919218937","Type":"PullRequestEvent","CreatedAt":"2019-06-29T18:35:33","Actor":"wtgodbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39020","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/coreclr\" (#39020) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190627.2\r\n- **Date Produced**: 6/28/2019 12:43 AM\r\n- **Commit**: ac4ab6c990d5ebee49dc03397a2e199241021f26\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview7.19327.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19327.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19327.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n"},{"Id":"9919204589","Type":"PullRequestEvent","CreatedAt":"2019-06-29T18:27:47","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/38792","RelatedDescription":"Closed pull request \"Generate framework manifest file\" (#38792) at dotnet/corefx","RelatedBody":"Requires https://github.com/dotnet/arcade/pull/3139\r\nRequires https://github.com/dotnet/corefx/pull/36207\r\n\r\nThe property that points to the manifest which is passed down to the `_HandlePackageFileConflicts` task is set in CoreFxTesting. The only work necessary here is to generate the manifest file.\r\n\r\nAdditionally disabling the runtime binplacing which I did in the same PR..."},{"Id":"9919078364","Type":"IssuesEvent","CreatedAt":"2019-06-29T17:15:37","Actor":"vcsjones","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39057","RelatedDescription":"Opened issue \"API Proposal: Equality members on Oid.\" (#39057) at dotnet/corefx","RelatedBody":"`Oid` seems like a good candidate for comparable members.\r\n\r\nProposal:\r\n\r\n```csharp\r\nnamespace System.Security.Cryptography {\r\n    public sealed class Oid : IEquatable<Oid> {\r\n        public static bool operator == (Oid oid1, Oid oid2) => throw null;\r\n        public static bool operator != (Oid oid1, Oid oid2) => throw null;\r\n\r\n        public override bool Equals(object obj) => throw null;\r\n        public override int GetHashCode() => throw null;\r\n        public bool Equals(Oid oid) => throw null;\r\n    }\r\n}\r\n```\r\n\r\n/cc @bartonjs "},{"Id":"9919050361","Type":"IssuesEvent","CreatedAt":"2019-06-29T17:02:04","Actor":"ajcvickers","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/39018","RelatedDescription":"Closed issue \"TryValidateObject should use fluent model builder configuration\" (#39018) at dotnet/corefx","RelatedBody":"Currently TryValidateObject is only using the data annotation attributes on the models, but since it's perfectly valid to use fluent configuration (the Scaffold-DbContext command is using that for example) I think the TryValidateObject should be able to use the fluent metadata in EF Core (like HasMaxLength, etc) to validate the model as well."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9919484354","Type":"PullRequestEvent","CreatedAt":"2019-06-29T21:18:48","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7304","RelatedDescription":"Closed pull request \"Add normalized equivalent of YieldProcessor\" (#7304) at dotnet/corert","RelatedBody":"Ports dotnet/coreclr#13670 to CoreRT.\r\n\r\nMarked as draft because I don't have good perf numbers yet (and this is not an area that I'm comfortable making changes in)."},{"Id":"9919483466","Type":"PullRequestEvent","CreatedAt":"2019-06-29T21:18:10","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7569","RelatedDescription":"Opened pull request \"Port normalized SpinWait from CoreCLR\" (#7569) at dotnet/corert","RelatedBody":"This ports yieldprocessornormalized.cpp from CoreCLR to tune spin wait loops in the post-Skylake CPU world.\r\n\r\nThe first commit is literal copy of yieldprocessornormalized.cpp from CoreCLR that was then tweaked to build for Redhawk.\r\n\r\nI then replaced uses of YieldProcessor with the Skylake-aware compat shim."},{"Id":"9919403465","Type":"PullRequestEvent","CreatedAt":"2019-06-29T20:24:33","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7568","RelatedDescription":"Merged pull request \"Fix GetTypeCode of metadata-only enums\" (#7568) at dotnet/corert","RelatedBody":"Found this by accident. `underlyingType.TypeHandle.EETypePtr` would box the RuntimeTypeHandle and return EEType of the RuntimeTypeHandle type.\r\n\r\nWhat this code actually wanted to do is to get the EEType of the underlying type."},{"Id":"9919206783","Type":"PullRequestEvent","CreatedAt":"2019-06-29T18:29:07","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7566","RelatedDescription":"Merged pull request \"Implement obsolete `Marshal.Write*` APIs\" (#7566) at dotnet/corert","RelatedBody":"Because bad APIs come in pairs."},{"Id":"9919129121","Type":"IssuesEvent","CreatedAt":"2019-06-29T17:44:52","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7453","RelatedDescription":"Closed issue \"ASP.NET Core 3.0 hits GetRuntimeInterfaceMap() is not supported on this runtime\" (#7453) at dotnet/corert","RelatedBody":"Using the preview .NET SDK `3.0.100-preview5-011568` with target framework: `netcoreapp3.0`.\r\n\r\nIt looks like the latest preview versions of ASP.NET Core MVC use `GetRuntimeInterfaceMap`, which isn't supported by CoreRT:\r\n\r\n```\r\nSystem.PlatformNotSupportedException: GetRuntimeInterfaceMap() is not supported on this runtime.\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeTypeInfo.GetInterfaceMap(Type) + 0x4f\r\n   at System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type) + 0x8b\r\n   at Microsoft.Extensions.Internal.AwaitableInfo.IsTypeAwaitable(Type, AwaitableInfo&) + 0x3b1\r\n   at Microsoft.Extensions.Internal.CoercedAwaitableInfo.IsTypeAwaitable(Type, CoercedAwaitableInfo&) + 0x3d\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor..ctor(MethodInfo, TypeInfo, Object[]) + 0x163\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Create(MethodInfo, TypeInfo, Object[]) + 0x75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerCache.GetCachedResult(ControllerContext) + 0x156\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext) + 0x148\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionInvokerFactory.CreateInvoker(ActionContext) + 0x8f\r\n```\r\n\r\nRight now, I'm only hitting this on _async_ action results. So:\r\n\r\n```csharp\r\npublic async Task<ActionResult> Set(string id)\r\n{\r\n    await SomeCall(id);\r\n    return Ok();\r\n}\r\n```\r\n\r\nwill hit this, but something like:\r\n\r\n```csharp\r\npublic ActionResult Set(string id)\r\n{\r\n    // Where `Defer` captures a `Action<Task>` that is executed\r\n    // in the `OnActionExecuted` call\r\n    return Defer(async () => await SomeCall(id));\r\n}\r\n```\r\n\r\nwill execute successfully."},{"Id":"9919002260","Type":"PullRequestEvent","CreatedAt":"2019-06-29T16:35:44","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7568","RelatedDescription":"Opened pull request \"Fix GetTypeCode of metadata-only enums\" (#7568) at dotnet/corert","RelatedBody":"Found this by accident. `underlyingType.TypeHandle.EETypePtr` would box the RuntimeTypeHandle and return EEType of the RuntimeTypeHandle type.\r\n\r\nWhat this code actually wanted to do is to get the EEType of the underlying type."},{"Id":"9918978257","Type":"PullRequestEvent","CreatedAt":"2019-06-29T16:22:52","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7567","RelatedDescription":"Opened pull request \"Implement LayoutClass/LayoutClassPtr/AsAny marshalers\" (#7567) at dotnet/corert","RelatedBody":"This is a couple marshallers that nobody should be using for anything, but WinForms and System.Drawing uses them for everything. Frankly, it feels like the designers of .NET 1.0 got too excited about marshalling everything with these and someone should have stopped them.\r\n\r\nThese marshallers are for marshalling abritrary reference types to native code.\r\n\r\nThis is enough to get basic WinForms apps running. E.g. the MemoryGame .NET Sample works with this. Serious WinForms apps will eventually hit missing COM support, but at least the basics work now and it's enough to get a read on things like startup time."},{"Id":"9918349683","Type":"PullRequestEvent","CreatedAt":"2019-06-29T10:18:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7566","RelatedDescription":"Opened pull request \"Implement obsolete `Marshal.Write*` APIs\" (#7566) at dotnet/corert","RelatedBody":"Because bad APIs come in pairs."},{"Id":"9917078618","Type":"PullRequestEvent","CreatedAt":"2019-06-28T22:19:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7565","RelatedDescription":"Merged pull request \"Remove extra bracket\" (#7565) at dotnet/corert","RelatedBody":"Fixes arm building"},{"Id":"9916681489","Type":"IssuesEvent","CreatedAt":"2019-06-28T20:45:37","Actor":"csnewman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7563","RelatedDescription":"Closed issue \"arm registers do not fit into unw_context_t\" (#7563) at dotnet/corert","RelatedBody":"```\r\nIn file included from /home/csnewman/corert/src/Native/Runtime/unix/UnwindHelpers.cpp:22:\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2328:3: error: static_assert failed \"arm registers do not fit into unw_context_t\"\r\n  static_assert((check_fit<Registers_arm, unw_context_t>::does_fit),\r\n  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2444:32: error: out-of-line definition of 'getRegisterLocation' does not match any\r\n      declaration in 'libunwind::Registers_arm'\r\ninline uint32_t Registers_arm::getRegisterLocation(int regNum) const {\r\n                               ^~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/UnwindHelpers.cpp.o] Error 1\r\n\r\n```"},{"Id":"9915541808","Type":"PullRequestEvent","CreatedAt":"2019-06-28T17:11:04","Actor":"csnewman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7565","RelatedDescription":"Opened pull request \"Remove extra bracket\" (#7565) at dotnet/corert","RelatedBody":"Fixes arm building"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9919651339","Type":"IssuesEvent","CreatedAt":"2019-06-29T23:25:43","Actor":"mattleibow","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3376","RelatedDescription":"Opened issue \"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.\" (#3376) at dotnet/sdk","RelatedBody":"I am trying to use Ubuntu 18.04 to test some things, and I can use any of the newer .NET Core SDKs.\r\n\r\nI just installed a fresh VM with 18.04, and [installed my usual tools](https://gist.github.com/mattleibow/7e02a32193fb9bb14069bedb7384205e). I then try and build SkiaSharp, and then the .NET Standard projects and Tizen fail to build with the same error.\r\n\r\nI can roll back to dotnet-sdk-2.1.105, and that seems to work fine. As soon as I go later, then it fails. I tried installing a different version of dotnet 2.2, but I only have one for some reason. Sure, I could install it manually and all that. But, who wants to do that - and I am not even sure it is going to work.\r\n\r\nHere is my apt-search output: https://gist.github.com/mattleibow/935de7d22b24cfcf3ae9ab0c16b1908f\r\n\r\nWhat is the reason for these failures? My code was working - as it is building just fine with 2.1.105, and then I bump up just a fraction and boom?\r\n\r\nBuild Errors:\r\n\r\n```\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n\r\n...\r\n\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n```"},{"Id":"9919526898","Type":"PullRequestEvent","CreatedAt":"2019-06-29T21:48:08","Actor":"fadimounir","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3375","RelatedDescription":"Opened pull request \"Disable R2R compilations for non-exe projects\" (#3375) at dotnet/sdk","RelatedBody":"Fixes #3364"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"462008653","IsPullRequest":true,"CreatedAt":"2019-06-30T00:20:03","Actor":"dotnet-maestro[bot]","Number":"25476","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25476)"},{"Id":"462299113","IsPullRequest":true,"CreatedAt":"2019-06-30T00:16:56","Actor":"dotnet-maestro[bot]","Number":"25498","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190628.3\r\n- **Date Produced**: 6/28/2019 2:41 PM\r\n- **Commit**: 6724989b3d7e1570e9316c3b13a51b4cf22da2f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190628.3\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190628.3\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25498","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25498)"},{"Id":"462349488","IsPullRequest":false,"CreatedAt":"2019-06-29T23:03:20","Actor":"bergmeister","Number":"25502","RawContent":null,"Title":"CoreClr crashes sporadically when interacting with Windows COM API","State":"open","Body":"This issue has been observed to happen sporadically and is hard to reproduce but we have lots of logs and narrowed down the offending code. The issue causes PowerShell Core itself to sporadically crash on Windows at startup\r\n- It does not seem to be specific to a version of Windows, it has been seen in various environments\r\n- It has been observed with the latest runtime of .Net Core 2.1 as well as `3.0-preview5`\r\n- The process is running in `MTA` appartment state and interacts with Windows COM APIs to create an elevated `JumpList` entry on application startup. The APIs are public and there were no issues when the code was written in `C++` for Windows PowerShell and the code was later ported to managed C# with COM interfaces being taken from the Windows API kit.\r\n- The issue is described in detail [here](https://github.com/PowerShell/PowerShell/issues/9295) with a crash log [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-500770387), a memory dump [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501135947) and its associated stack trace [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501353113), some preliminary analysis of what goes on in the coreclr is [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501353113)\r\n- We added more logging statements and found that the fatal CLR error happens [here](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/WindowsTaskbarJumpList/TaskbarJumpList.cs#L87) in PowerShell's code. Sometimes a `InvalidComObjectException` has been observed as well but this is happening one line later, see comment with stack trace [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-505638825)","Url":"https://github.com/dotnet/coreclr/issues/25502","RelatedDescription":"Open issue \"CoreClr crashes sporadically when interacting with Windows COM API\" (#25502)"},{"Id":"462347006","IsPullRequest":true,"CreatedAt":"2019-06-29T22:20:21","Actor":"sywhang","Number":"25501","RawContent":null,"Title":"Add a check before firing some threadpool events","State":"open","Body":"Fix #25405","Url":"https://github.com/dotnet/coreclr/pull/25501","RelatedDescription":"Open PR \"Add a check before firing some threadpool events\" (#25501)"},{"Id":"462322117","IsPullRequest":true,"CreatedAt":"2019-06-29T21:57:59","Actor":"BruceForstall","Number":"25500","RawContent":null,"Title":"Remove an old CoreFX exclusion file","State":"closed","Body":"Plus, add comments to the new exclusion file","Url":"https://github.com/dotnet/coreclr/pull/25500","RelatedDescription":"Closed or merged PR \"Remove an old CoreFX exclusion file\" (#25500)"},{"Id":"462251656","IsPullRequest":true,"CreatedAt":"2019-06-29T16:50:03","Actor":"BruceForstall","Number":"25493","RawContent":null,"Title":"Update documentation for corefx testing in coreclr repo","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25493","RelatedDescription":"Closed or merged PR \"Update documentation for corefx testing in coreclr repo\" (#25493)"},{"Id":"462216608","IsPullRequest":true,"CreatedAt":"2019-06-29T15:57:06","Actor":"BruceForstall","Number":"25490","RawContent":null,"Title":"Re-enable corefx tests","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25490","RelatedDescription":"Closed or merged PR \"Re-enable corefx tests\" (#25490)"},{"Id":"462310776","IsPullRequest":false,"CreatedAt":"2019-06-29T15:06:26","Actor":"jkotas","Number":"25499","RawContent":null,"Title":"Formatting Windows_NT x64 CI leg failing 100%","State":"open","Body":"This failure was introduce by deployment of updated VS2017 build images with broken VS C++ installation (parts of the default UCRT are missing in the image).\r\n\r\nhttps://github.com/dotnet/coreclr/pull/25444 worked around this issue for build legs. The formatting leg needs a different workaround.","Url":"https://github.com/dotnet/coreclr/issues/25499","RelatedDescription":"Open issue \"Formatting Windows_NT x64 CI leg failing 100%\" (#25499)"},{"Id":"462298357","IsPullRequest":true,"CreatedAt":"2019-06-29T12:31:56","Actor":"dotnet-maestro[bot]","Number":"25497","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19329.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19329.1\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25497","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#25497)"},{"Id":"462286133","IsPullRequest":true,"CreatedAt":"2019-06-29T09:44:37","Actor":"kouvel","Number":"25496","RawContent":null,"Title":"Fix and remove/move some threading tests","State":"open","Body":"- Depends on https://github.com/dotnet/corefx/pull/39050\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/23442\r\nFixes https://github.com/dotnet/coreclr/issues/23992\r\n- Removed many abandoned mutex tests that will be replaced with improved tests in CoreFX with fixed timing issues and reduced redundancy\r\n- Some WaitAny tests would also be replaced but were not removed due to pending failures with issues filed, cause not yet known\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/24179\r\n- Fixed torn read of double on 32-bit platforms\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/25372\r\n- The test only allowed one second for all registered waits to be processed, fixed to allow more time and succeed faster","Url":"https://github.com/dotnet/coreclr/pull/25496","RelatedDescription":"Open PR \"Fix and remove/move some threading tests\" (#25496)"},{"Id":"462273896","IsPullRequest":true,"CreatedAt":"2019-06-29T06:59:41","Actor":"sywhang","Number":"25495","RawContent":null,"Title":"[WIP] Add RundownRequested switch to EventPipe IPC protocol","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25495","RelatedDescription":"Open PR \"[WIP] Add RundownRequested switch to EventPipe IPC protocol\" (#25495)"},{"Id":"462248783","IsPullRequest":false,"CreatedAt":"2019-06-29T00:48:22","Actor":"jkotas","Number":"25492","RawContent":null,"Title":"ReadyToRunInfo::GetEntryPoint event is expensive","State":"open","Body":"@brianrob from https://github.com/dotnet/coreclr/pull/23662#issuecomment-506911715 :\r\n\r\nYes, I intend to move this so it doesn't get enabled by default. @billwert and I were discussing this a few weeks back.","Url":"https://github.com/dotnet/coreclr/issues/25492","RelatedDescription":"Open issue \"ReadyToRunInfo::GetEntryPoint event is expensive\" (#25492)"},{"Id":"462212751","IsPullRequest":true,"CreatedAt":"2019-06-29T00:06:20","Actor":"sywhang","Number":"25489","RawContent":null,"Title":"Stop using reflection on PollingCounter tests","State":"closed","Body":"PollingCounter and IncrementingPollingCounter were made public in P5. Changing these tests to now use the public API instead of using reflection. ","Url":"https://github.com/dotnet/coreclr/pull/25489","RelatedDescription":"Closed or merged PR \"Stop using reflection on PollingCounter tests\" (#25489)"},{"Id":"462233823","IsPullRequest":true,"CreatedAt":"2019-06-28T22:59:30","Actor":"cshung","Number":"25491","RawContent":null,"Title":"Ensure YIELD_WHILE() in EventPipeBufferManager::SuspendWriteEvent() always terminates","State":"open","Body":"Fixes #25430 ","Url":"https://github.com/dotnet/coreclr/pull/25491","RelatedDescription":"Open PR \"Ensure YIELD_WHILE() in EventPipeBufferManager::SuspendWriteEvent() always terminates\" (#25491)"},{"Id":"462199485","IsPullRequest":false,"CreatedAt":"2019-06-28T20:39:47","Actor":"jcouv","Number":"25488","RawContent":null,"Title":"Extend IL/ILAsm/ILDasm to represent attributes on type constraints","State":"open","Body":"We have not yet discussed a specific proposal for how to represent this in IL. Tagging @RussKeldorph. \r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/29997","Url":"https://github.com/dotnet/coreclr/issues/25488","RelatedDescription":"Open issue \"Extend IL/ILAsm/ILDasm to represent attributes on type constraints\" (#25488)"},{"Id":"462112168","IsPullRequest":true,"CreatedAt":"2019-06-28T20:31:21","Actor":"jkotas","Number":"25479","RawContent":null,"Title":"Use regular static variable for EEConfig storage","State":"closed","Body":"Fixes #25475","Url":"https://github.com/dotnet/coreclr/pull/25479","RelatedDescription":"Closed or merged PR \"Use regular static variable for EEConfig storage\" (#25479)"},{"Id":"461984752","IsPullRequest":false,"CreatedAt":"2019-06-28T20:31:20","Actor":"kfrolov","Number":"25475","RawContent":null,"Title":"SIGBUS on ARM platform due to unaligned result of operator new()","State":"closed","Body":"We have discovered bug in CoreCLR project, which leads to process termination with SIGBUS signal. Signal caused by access to unaligned data region, address of which region is the result of call to operator new() redefined in EEConfig class:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/6ab02e1cc487c64fb733fbb9d1be653337691aff/src/vm/eeconfig.cpp#L149\r\n\r\n````\r\nBYTE g_EEConfigMemory[sizeof(EEConfig)];\r\n\r\nvoid *EEConfig::operator new(size_t size)\r\n{\r\n    CONTRACT(void*) {\r\n        FORBID_FAULT;\r\n        GC_NOTRIGGER;\r\n        NOTHROW;\r\n        MODE_ANY;\r\n        POSTCONDITION(CheckPointer(RETVAL));\r\n    } CONTRACT_END;\r\n\r\n    RETURN g_EEConfigMemory;\r\n}\r\n````\r\n\r\nAs you can see, return value of operator new() here might be unaligned to __BIGGEST_ALIGNMENT__ (as it should be), because g_EEConfigMemory is only byte-aligned by linker.\r\n\r\nCurrently bug is only reproducible on Tizen/ARM platform (32-bit), when CoreCLR was build in \"Checked\" mode. In debug or release builds this bug wasn't reproduced because of different memory layout.\r\n\r\nWe have prepared following patch against this bug (see below), but I think some other solution needed, I think authors of this code should decide...\r\n\r\nPatch:\r\n````\r\ndiff --git a/src/vm/eeconfig.cpp b/src/vm/eeconfig.cpp\r\nindex a11dacd01d..523a9644b3 100644\r\n--- a/src/vm/eeconfig.cpp\r\n+++ b/src/vm/eeconfig.cpp\r\n@@ -151,7 +151,12 @@ HRESULT EEConfig::Setup()\r\n \r\n /**************************************************************/\r\n // For in-place constructor\r\n-BYTE g_EEConfigMemory[sizeof(EEConfig)];\r\n+union\r\n+{\r\n+       BYTE _g_EEConfigMemory[sizeof(EEConfig)];\r\n+       uint64_t dummy;\r\n+       operator void* () { return &dummy; }\r\n+} g_EEConfigMemory;\r\n \r\n void *EEConfig::operator new(size_t size)\r\n {\r\n````\r\n\r\n@jkotas @alpencolt \r\n","Url":"https://github.com/dotnet/coreclr/issues/25475","RelatedDescription":"Closed issue \"SIGBUS on ARM platform due to unaligned result of operator new()\" (#25475)"},{"Id":"462152755","IsPullRequest":true,"CreatedAt":"2019-06-28T20:08:23","Actor":"kouvel","Number":"25482","RawContent":null,"Title":"Fix an assertion failure in the thread pool's QueueUserWorkItemCallbackBase","State":"closed","Body":"Fixes https://github.com/dotnet/coreclr/issues/25242\r\n- The issue could be that there is no memory barrier (or in the wrong place) on the thread reading the value, and an old value could be cached and read","Url":"https://github.com/dotnet/coreclr/pull/25482","RelatedDescription":"Closed or merged PR \"Fix an assertion failure in the thread pool's QueueUserWorkItemCallbackBase\" (#25482)"},{"Id":"462188668","IsPullRequest":false,"CreatedAt":"2019-06-28T20:04:04","Actor":"janvorli","Number":"25487","RawContent":null,"Title":"[Arm32/Linux] Assert in System.Number.FormatDouble / FormatSingle","State":"open","Body":"When running `System.Tests.RealFormatterTests` from `System.Runtime.Tests` suite and `System.Buffers.Text.Tests.RealFormatterTests` from `System.Memory.Tests` suite, I am consistently hitting assert in `System.Number.FormatSingle(ref ValueStringBuilder sb, single value, ReadOnlySpan<char> format, NumberFormatInfo info)` and `System.Number.FormatDouble(ref ValueStringBuilder sb, double value, ReadOnlySpan<char> format, NumberFormatInfo info)`:\r\nhttps://github.com/dotnet/coreclr/blob/141d587472ee2fe6ab522c603c352936defeaac3/src/System.Private.CoreLib/shared/System/Number.Formatting.cs#L562\r\nhttps://github.com/dotnet/coreclr/blob/141d587472ee2fe6ab522c603c352936defeaac3/src/System.Private.CoreLib/shared/System/Number.Formatting.cs#L650\r\nI have debugged the Single version and I could see that at it has called the NumberToSingle, so the last part of the conditional expression was executed.\r\n\r\nThe tests call these methods ofter with various arguments and only one of the cases actually triggered the assert. I have not looked into which values were problematic.","Url":"https://github.com/dotnet/coreclr/issues/25487","RelatedDescription":"Open issue \"[Arm32/Linux] Assert in System.Number.FormatDouble / FormatSingle\" (#25487)"},{"Id":"462086753","IsPullRequest":false,"CreatedAt":"2019-06-28T19:20:06","Actor":"MatthewLymer","Number":"25478","RawContent":null,"Title":"Debugging core dump - lldb \"Failed to start stalk walk: 80070057\" on linux host","State":"closed","Body":"I am trying to debug a core dump generated from kubernetes node.\r\n\r\n## Steps to generate dump\r\n\r\n1. Get process id from kubernetes node (`ps -aux | grep <my-container-name>`)\r\n2. Create core dump using `gcore <process-id>` (massive 8.3gb dump due to virtual memory)\r\n3. Open core dump using `lldb-4.0 --core core.32004` (32004 was the pid)\r\n\r\n## The result / REPL\r\n\r\n\t(lldb) target create --core \"./core.32004\"\r\n\tCore file '/mnt/c/Users/Matthew/Downloads/debugging/./core.32004' (x86_64) was loaded.\r\n\t(lldb) plugin load /usr/share/dotnet/shared/Microsoft.NETCore.App/2.1.5/libsosplugin.so\r\n\r\n\r\n\r\n\t(lldb) clrthreads\r\n\tThreadCount:      94\r\n\tUnstartedThread:  0\r\n\tBackgroundThread: 86\r\n\tPendingThread:    0\r\n\tDeadThread:       7\r\n\tHosted Runtime:   no\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLock\r\n\t\t   ID OSID ThreadOBJ           State GC Mode     GC Alloc Context                  Domain           Count Apt Exception\r\n\tXXXX    1    1 0000000001990250  2020020 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn\r\n\tXXXX    2    f 000000000198D5E0    21220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Finalizer)\r\n\tXXXX    3   10 00007FC7640009F0  1020220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX    5   13 00007FC76800A460    21220 Preemptive  00007FC779FE8A38:00007FC779FEA8B8 000000000198AD20 0     Ukn\r\n\tXXXX    7   16 0000000001BAAEA0  2021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn\r\n\tXXXX    8   17 0000000001BD34A0    21220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn\r\n\tXXXX   14   31 00007FC744016010  2021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn\r\n\tXXXX   15   32 00007FC754018370  2021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn\r\n\tXXXX   24 5089 00007FC73C0781B0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   31 515a 00007FC73C0D48A0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   26 515b 00007FC72C084BF0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   30 515c 00007FC72C009C30  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   13 5173 00007FC7440391C0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   27 5184 00007FC744056820  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX    9 5194 00007FC7180655C0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   16 51b4 00007FC73C1D6E70  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   21 51c6 00007FC75C0A4CB0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   17 51e6 00007FC6E00827F0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   22 51e7 00007FC73C06ABF0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   25 51e8 00007FC6C40027E0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   23 51f6 00007FC73C140C10  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   32 520a 00007FC6E00802D0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   10 520e 00007FC7100018D0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   19 5210 00007FC7100094D0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   29 5227 00007FC71000B430  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX    4 522d 00007FC71000FB00  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   20 522e 00007FC75C05CF00  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   11 523c 00007FC71C00EEA0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX    6 523d 00007FC710006DD0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   33 5253 00007FC710008050  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   34 525d 00007FC71000CAD0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   35 525e 00007FC714004B30  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   36 5271 00007FC70C009DB0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   37 5273 00007FC70C0A5A50  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   38 5277 00007FC6E00A66B0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   39 527a 00007FC6E00A7930  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   40 527c 00007FC6B401C710  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   41 5289 00007FC6E00A8BB0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   42 528a 00007FC740035DD0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   43 528e 00007FC6D00008C0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   44 5292 00007FC7400044E0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   28 529e 00007FC6BC0076F0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   45 52a4 00007FC740094830  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   47 52ad 00007FC6C0003650  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   48 52ac 00007FC6B80012B0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   49 52b0 00007FC6AC0012E0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   46 52c2 00007FC71400D450  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   50 52c7 00007FC714003390  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   51 52c8 00007FC714003EC0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   52 52cc 00007FC71400F2F0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   53 52cd 00007FC7140008C0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   54 52d2 00007FC714001760  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   55 52e2 00007FC71400C510  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   56 52f2 00007FC68C003250  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   60 5323 00007FC7140099E0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   59 5324 00007FC7140A20E0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   12    0 00007FC714006A30  1031820 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   18 533f 00007FC678005030  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   63 5340 00007FC674001290  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   64    0 00007FC67C001210  1031820 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   65    0 00007FC6700032C0  1031820 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   66 5354 00007FC678019BF0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   67 5355 00007FC6600157B0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   68 5356 00007FC67800A190  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   62 537e 00007FC7140A2D10  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   61 5381 00007FC714007660  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   58 5388 00007FC714008770  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   57    0 00007FC714010FE0  1031820 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   69 53a2 00007FC654002FA0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   70    0 00007FC6540049B0  1031820 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   71 53a4 00007FC648001290  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   72 53ab 00007FC640001C40  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   73    0 00007FC64C0070B0  1031820 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   74 53ad 00007FC640003970  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   75 540a 00007FC714012260  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   76 540e 00007FC714013D00  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   77 5410 00007FC64C002EE0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   78 5411 00007FC64C00FD30  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   79 5412 00007FC6540012E0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   80 5422 00007FC64C004970  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   81 5423 00007FC654008590  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   84    0 00007FC624003180  1031820 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   83 542c 00007FC620002C50  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   85 542e 00007FC6280023C0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   82 5494 00007FC628004050  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   86 549f 00007FC6280056C0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   87 54af 00007FC620001C90  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   88 54b2 00007FC624019700  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   89 54b1 00007FC61802BFF0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   90 55c7 00007FC604003240  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   91 55d5 00007FC7140158C0  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   92 55d7 00007FC714017480  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   93 55d9 00007FC714019190  3021220 Preemptive  0000000000000000:0000000000000000 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\tXXXX   94 55db 00007FC71401AEA0  1021220 Preemptive  00007FC77A0241F0:00007FC77A0248F0 000000000198AD20 0     Ukn (Threadpool Worker)\r\n\r\n\r\n\r\n\t(lldb) t 3\r\n\t(lldb) * thread #3, stop reason = signal SIGSTOP\r\n\t\tframe #0: libc.so.6`check_arrival(mctx=0x00007fc80f11e000, path=0x0000000000000000, top_node=0, top_str=234390057, last_node=0, last_str=0, type=0) at regexec.c:2878\r\n\r\n\t\t\r\n\t\t\r\n\t(lldb) clrstack\r\n\tOS Thread Id: 0x7dd1 (3)\r\n\tUnable to walk the managed stack. The current thread is likely not a\r\n\tmanaged thread. You can run clrthreads to get a list of managed threads in\r\n\tthe process\r\n\tFailed to start stack walk: 80070057\r\n\r\nIt doesn't matter what thread I switch to, I always get the same \"Unable to walk the managed stack\".","Url":"https://github.com/dotnet/coreclr/issues/25478","RelatedDescription":"Closed issue \"Debugging core dump - lldb \"Failed to start stalk walk: 80070057\" on linux host\" (#25478)"},{"Id":"462171296","IsPullRequest":false,"CreatedAt":"2019-06-28T19:09:37","Actor":"mikem8361","Number":"25486","RawContent":null,"Title":"createdump's --full option can run out of memory","State":"open","Body":"See issue: https://github.com/dotnet/coreclr/issues/25478","Url":"https://github.com/dotnet/coreclr/issues/25486","RelatedDescription":"Open issue \"createdump's --full option can run out of memory\" (#25486)"},{"Id":"462160126","IsPullRequest":false,"CreatedAt":"2019-06-28T18:36:50","Actor":"cshung","Number":"25485","RawContent":null,"Title":"Debugger showing execution in wrong place when the code being executed is different","State":"open","Body":"Equivalent bug getting tracked by https://devdiv.visualstudio.com/DevDiv/_workitems/edit/904644 (Microsoft access only)","Url":"https://github.com/dotnet/coreclr/issues/25485","RelatedDescription":"Open issue \"Debugger showing execution in wrong place when the code being executed is different\" (#25485)"},{"Id":"462159323","IsPullRequest":false,"CreatedAt":"2019-06-28T18:34:38","Actor":"cshung","Number":"25484","RawContent":null,"Title":"Managed Data Breakpoint counts can get out of sync due to mismatched addresses in ThreadContexts","State":"open","Body":"Equivalent bug getting tracked by \r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/911731 (Microsoft access only)","Url":"https://github.com/dotnet/coreclr/issues/25484","RelatedDescription":"Open issue \"Managed Data Breakpoint counts can get out of sync due to mismatched addresses in ThreadContexts\" (#25484)"},{"Id":"462153735","IsPullRequest":false,"CreatedAt":"2019-06-28T18:17:56","Actor":"janvorli","Number":"25483","RawContent":null,"Title":"[Arm32/Linux] GC cookie corruption when running some corefx tests.","State":"open","Body":"While running release build of corefx tests on checked build of coreclr on ARM32 (tested on my RPi3 with Raspbian), I have found that couple of corefx test suites fail due to GS cookie corruption detected at GC stack walk time.\r\nThis happens:\r\n* in System.Globalization.Extensions.Tests for GS cookie in the frame of System.Globalization.IdnMapping.GetAsciiCore\r\n* in System.Collections.Specialized.Tests and System.Data.Common.Tests for GS cookie in the frame of System.Globalization.CompareInfo.GetHashCodeOfStringCore\r\n\r\nThe issue reproes in 80..100% runs of the test suites. I was trying to debug both cases, but the functions with corrupted GS cookies are called many times before the issue reproes, so I cannot use something as simple as memory watchpoint to find who's corrupting the cookie.\r\n\r\nUnfortunately, LLDB / sos plugin on this platform are quite unstable together, so e.g. the clrstack sos command kills LLDB. At least the ip2md works so that I can see what's on the managed stack.\r\n\r\nHere is a call stack of the thread with the System.Globalization.IdnMapping.GetAsciiCore on the stack when another thread runs GC and finds the corrupted cookie:\r\n\r\n```\r\n* thread #26, name = 'dotnet'\r\n  * frame #0: 0x76f9b9a4 libpthread.so.0`__pthread_cond_wait(cond=0x001317a0, mutex=0x00131788) at pthread_cond_wait.c:188\r\n    frame #1: 0x768692a8 libcoreclr.so`CorUnix::CPalSynchronizationManager::ThreadNativeWait(ptnwdNativeWaitData=0x00131788, dwTimeout=4294967295, ptwrWakeupReason=0x674ffac8, pdwSignaledObject=0x674ffac4) at synchmanager.cpp:479:28\r\n    frame #2: 0x76868814 libcoreclr.so`CorUnix::CPalSynchronizationManager::BlockThread(this=0x0005e4c8, pthrCurrent=0x001315e8, dwTimeout=4294967295, fAlertable=false, fIsSleep=false, ptwrWakeupReason=0x674ffd68, pdwSignaledObject=0x674ffd90) at synchmanager.cpp:302:22\r\n    frame #3: 0x7687580c libcoreclr.so`CorUnix::InternalWaitForMultipleObjectsEx(pThread=0x001315e8, nCount=1, lpHandles=0x674ffe90, bWaitAll=NO, dwMilliseconds=4294967295, bAlertable=NO, bPrioritize=NO) at wait.cpp:636:45\r\n    frame #4: 0x768761be libcoreclr.so`::WaitForSingleObjectEx(hHandle=0x00000084, dwMilliseconds=4294967295, bAlertable=NO) at wait.cpp:139:13\r\n    frame #5: 0x764b1a34 libcoreclr.so`CLREventWaitHelper2(handle=0x00000084, dwMilliseconds=4294967295, alertable=NO) at synch.cpp:377:12\r\n    frame #6: 0x764b1924 libcoreclr.so`CLREventWaitHelper(this=0x674fff3c, pParam=0x674fff44)::$_1::operator()(CLREventWaitHelper(void*, unsigned int, int)::Param*) const at synch.cpp:402:26\r\n    frame #7: 0x764b073e libcoreclr.so`CLREventWaitHelper(handle=0x00000084, dwMilliseconds=4294967295, alertable=NO) at synch.cpp:404:5\r\n    frame #8: 0x764b06a6 libcoreclr.so`CLREventBase::WaitEx(this=0x000bbb68, dwMilliseconds=4294967295, mode=WaitMode_None, syncState=0x00000000) at synch.cpp:471:20\r\n    frame #9: 0x764b0550 libcoreclr.so`CLREventBase::Wait(this=0x000bbb68, dwMilliseconds=4294967295, alertable=NO, syncState=0x00000000) at synch.cpp:417:12\r\n    frame #10: 0x765d080a libcoreclr.so`GCEvent::Impl::Wait(this=0x000bbb68, timeout=4294967295, alertable=false) at gcenv.os.cpp:1153:24\r\n    frame #11: 0x765cff6c libcoreclr.so`GCEvent::Wait(this=0x000bbb50, timeout=4294967295, alertable=false) at gcenv.os.cpp:1231:20\r\n    frame #12: 0x766893b6 libcoreclr.so`WKS::GCHeap::WaitUntilGCComplete(this=0x00060c60, bConsiderGCStart=false) at gcee.cpp:309:40\r\n    frame #13: 0x764b53e0 libcoreclr.so`Thread::RareDisablePreemptiveGC(this=0x00130860) at threadsuspend.cpp:2576:60\r\n    frame #14: 0x7642109c libcoreclr.so`::JIT_PInvokeEndRarePath() at jithelpers.cpp:5456:13\r\n    frame #15: 0x6fff238c - this is System.Globalization.IdnMapping.GetAsciiCore(System.String, Char*, Int32)\r\n    frame #16: 0x6ffeed3e - this is System.Globalization.IdnMapping.GetAscii(System.String, Int32, Int32)\r\n    frame #17: 0x6ffeec2e - this is System.Globalization.IdnMapping.GetAscii(System.String, Int32)\r\n    frame #18: 0x6ffeec00 - this is System.Globalization.IdnMapping.GetAscii(System.String)\r\n    frame #19: 0x66c4dc8c - this is Xunit.Assert.All[[System.__Canon, System.Private.CoreLib]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>)\r\n    frame #20: 0x66c4c4c2 - this is System.Globalization.Tests.IdnMappingIdnaConformanceTests.GetAscii_Success()\r\n    frame #21: 0x764fab22 libcoreclr.so`CallDescrWorkerInternal at asmhelpers.S:79\r\n```\r\n\r\nDisassembling the System.Globalization.IdnMapping.GetAsciiCore, I can see that the GS cookie location matches what the stack walker expects. But instead of having 0x12345678 in the cookie, there is a \"random\" value at the point of failure.\r\n\r\nThe same is true for the System.Globalization.CompareInfo.GetHashCodeOfStringCore.\r\n\r\nThe failure in both of the test suites and the stack traces (at least the frame with corrupted GS cookie and all other frames towards the TOS) is always the same. ","Url":"https://github.com/dotnet/coreclr/issues/25483","RelatedDescription":"Open issue \"[Arm32/Linux] GC cookie corruption when running some corefx tests.\" (#25483)"},{"Id":"462132071","IsPullRequest":false,"CreatedAt":"2019-06-28T17:15:53","Actor":"jkotas","Number":"25481","RawContent":null,"Title":"Update CI and official build to VS2019","State":"open","Body":"More aggressive C/C++ optimizations done by VS2019 are breaking fragile assumptions of the CoreCLR “manually managed code”. This will need to be fixed before we can update.\r\n\r\nThe problem was found by the test job https://github.com/dotnet/coreclr/pull/25466 . \r\n\r\n Unwinding of `Frame` chains accesses stack local variables after the stack frame has been unwound, but it depends on their content to be left intact. The new compiler is breaking this assumption by stack-packing a different variable over it.\r\n\r\nThe problematic pattern is:\r\n\r\n```\r\nHELPER_METHOD_FRAME\r\n{\r\n     ...\r\n     GC_PROTECT\r\n     ...\r\n           throw exception\r\n     ...\r\n     GC_PROTECT_END\r\n     ...\r\n}\r\nHELPER_METHOD_FRAME_END // The GC protect frame that is out of scope is accessed by the  unwinder here.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25481","RelatedDescription":"Open issue \"Update CI and official build to VS2019\" (#25481)"},{"Id":"462013842","IsPullRequest":true,"CreatedAt":"2019-06-28T17:02:03","Actor":"dotnet-maestro[bot]","Number":"25477","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 4:10 AM\r\n- **Commit**: b8761d4848d42040c81ec25c8b51fd386b97f5f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19327.9\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19327.9\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25477)"},{"Id":"462112260","IsPullRequest":false,"CreatedAt":"2019-06-28T16:55:19","Actor":"jashook","Number":"25480","RawContent":null,"Title":"[Windows] GC\\\\Regressions\\\\v3.0\\\\25252\\\\25252\\\\25252.cmd fails intermittently","State":"closed","Body":"This repros with no stress. See: https://dev.azure.com/dnceng/public/_build/results?buildId=239912&view=ms.vss-test-web.build-test-results-tab&runId=6029722&paneView=attachments&resultId=100001\r\n\r\n```\r\nAssert failure(PID 11108 [0x00002b64], Thread: 11792 [0x2e10]): Consistency check failed: AV in clr at this callstack:\r\n------\r\n<no module>! <no symbol> + 0x0 (0x00000000)\r\n-----\r\n.AV on tid=0x2e10 (11792), cxr=0057DAA8, exr=0057DC48\r\nFAILED: false\r\n\r\n<no module>! <no symbol> + 0x0 (0x00000000)\r\n    File: f:\\workspace\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7601\r\n    Image: C:\\dotnetbuild\\work\\713fef24-f582-4b65-94f5-1fed0c7766b9\\Payload\\CoreRun.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\dotnetbuild\\work\\713fef24-f582-4b65-94f5-1fed0c7766b9\\Work\\da77f33a-5615-422b-8d89-4fd72fa2afa1\\Exec\\GC\\Regressions\\Reports\\GC.Regressions\\v3.0\\25252\\25252\\25252.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \"C:\\dotnetbuild\\work\\713fef24-f582-4b65-94f5-1fed0c7766b9\\Payload\\corerun.exe\" 25252.exe \r\nSIGSEGV upcoming\r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\dotnetbuild\\work\\713fef24-f582-4b65-94f5-1fed0c7766b9\\Payload\r\n> C:\\dotnetbuild\\work\\713fef24-f582-4b65-94f5-1fed0c7766b9\\Work\\da77f33a-5615-422b-8d89-4fd72fa2afa1\\Exec\\GC\\Regressions\\v3.0\\25252\\25252\\25252.cmd\r\n\r\n\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25480","RelatedDescription":"Closed issue \"[Windows] GC\\\\Regressions\\\\v3.0\\\\25252\\\\25252\\\\25252.cmd fails intermittently\" (#25480)"},{"Id":"461984660","IsPullRequest":false,"CreatedAt":"2019-06-28T11:14:13","Actor":"iSazonov","Number":"25474","RawContent":null,"Title":"Allocations of CultureInfo in Assembly.GetName()","State":"open","Body":"PerfView shows that PowerShell Core allocates a lot of CultureInfo objects in some scenarios.\r\nThere is many calls of Assembly.GetName() in PowerShell type resolver.\r\nAssembly.GetName() calls GetLocale() \r\nhttps://github.com/dotnet/coreclr/blob/a64cb0a41a4ebeb4a61b8b0f1f2eeeff8dd539c9/src/System.Private.CoreLib/src/System/Reflection/RuntimeAssembly.cs#L538-L548\r\n\r\nIs it possible replace the `new CultureInfo(locale)` with `CultureInfo.GetCultureInfo(locale)`?\r\n\r\n/cc @tarekgh ","Url":"https://github.com/dotnet/coreclr/issues/25474","RelatedDescription":"Open issue \"Allocations of CultureInfo in Assembly.GetName()\" (#25474)"},{"Id":"461971854","IsPullRequest":true,"CreatedAt":"2019-06-28T10:38:06","Actor":"kbaladurin","Number":"25473","RawContent":null,"Title":"Explicitly enable relro","State":"open","Body":"We need to enable relro explicitly because in some cases it isn't enabled by default. For example, clang does it only for openSUSE, ubuntu, alpine and android.","Url":"https://github.com/dotnet/coreclr/pull/25473","RelatedDescription":"Open PR \"Explicitly enable relro\" (#25473)"},{"Id":"461911950","IsPullRequest":true,"CreatedAt":"2019-06-28T08:08:08","Actor":"tmds","Number":"25472","RawContent":null,"Title":"Resolve libdl to LIBDL_SO on glibc Linux.","State":"open","Body":"This makes \"libdl\" resolvable without the user having to install\r\nglibc development packages.\r\n\r\n@janvorli ptal","Url":"https://github.com/dotnet/coreclr/pull/25472","RelatedDescription":"Open PR \"Resolve libdl to LIBDL_SO on glibc Linux.\" (#25472)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"462351574","IsPullRequest":true,"CreatedAt":"2019-06-29T23:42:59","Actor":"dotnet-maestro[bot]","Number":"11674","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190629.3\r\n- **Date Produced**: 6/29/2019 11:42 PM\r\n- **Commit**: 3b4ca06bbc96e4bd483cb5384e1da7d4a535e715\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19329.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11674","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11674)"},{"Id":"462287528","IsPullRequest":true,"CreatedAt":"2019-06-29T23:42:31","Actor":"dotnet-maestro[bot]","Number":"11667","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 10:02 AM\r\n- **Commit**: ef19361731617687698071cd8b3c64d7d68b28ac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19329.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11667","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11667)"},{"Id":"462307742","IsPullRequest":true,"CreatedAt":"2019-06-29T20:28:48","Actor":"nguerrera","Number":"11672","RawContent":null,"Title":"Fix issue with stale deps.json in tests and re-enable dotnet new tests","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11672","RelatedDescription":"Closed or merged PR \"Fix issue with stale deps.json in tests and re-enable dotnet new tests\" (#11672)"},{"Id":"462320274","IsPullRequest":false,"CreatedAt":"2019-06-29T16:58:12","Actor":"BruceForstall","Number":"11673","RawContent":null,"Title":"dotnet.exe keeps running in background","State":"open","Body":"After a build, I have 8 dotnet.exe processes around. If I use \"dotnet build-server shutdown\", I still have one dotnet.exe process running. How do I shut it down without just killing it using \"taskkill\" or the equivalent?\r\n\r\n## Steps to reproduce\r\n\r\nI build the dotnet/coreclr or dotnet/corefx repo. These download and install a dotnet CLI in the .dotnet directory.\r\n\r\n## Expected  behavior\r\n\r\ndotnet.exe goes away\r\n\r\n## Actual behavior\r\n\r\nI have many dotnet.exe processes, and one sticks around after \"build-server shutdown\". This causes \"git clean -dxf\" to fail.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n```\r\nC:\\gh\\corefx>.\\.dotnet\\dotnet.exe --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012630\r\n Commit:    11df535cab\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\gh\\corefx\\.dotnet\\sdk\\3.0.100-preview7-012630\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012630 [C:\\gh\\corefx\\.dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19325.7 [C:\\gh\\corefx\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\gh\\corefx\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\gh\\corefx\\.dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n(seems like this command ignores the \".dotnet\" directory)\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11673","RelatedDescription":"Open issue \"dotnet.exe keeps running in background\" (#11673)"},{"Id":"462296736","IsPullRequest":true,"CreatedAt":"2019-06-29T12:11:45","Actor":"dotnet-maestro[bot]","Number":"11671","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/29/2019 3:45 AM\r\n- **Commit**: df9d2c8d96844a3ce4c6205d5b1155263a5a66a6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview.19328.2\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11671","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/templating\" (#11671)"},{"Id":"462296234","IsPullRequest":true,"CreatedAt":"2019-06-29T12:05:15","Actor":"dotnet-maestro[bot]","Number":"11670","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 10:07 PM\r\n- **Commit**: ef7932d094d8cf6bfd567e3de0f852a3abda9fe0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19328.2\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11670","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/sdk\" (#11670)"},{"Id":"462296207","IsPullRequest":true,"CreatedAt":"2019-06-29T12:04:49","Actor":"dotnet-maestro[bot]","Number":"11669","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11669","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#11669)"},{"Id":"462289587","IsPullRequest":false,"CreatedAt":"2019-06-29T10:31:09","Actor":"benaadams","Number":"11668","RawContent":null,"Title":"dotnet publish should default to release mode","State":"open","Body":"Currently it defaults to debug\r\n\r\nWhile this is obvious when using `dotnet publish` without parameters as it puts it in a Debug folder; it is not obvious when using an output setting as it is put in the output directory without an obvious `Debug` moniker \r\n","Url":"https://github.com/dotnet/cli/issues/11668","RelatedDescription":"Open issue \"dotnet publish should default to release mode\" (#11668)"},{"Id":"462002479","IsPullRequest":true,"CreatedAt":"2019-06-29T06:55:13","Actor":"dotnet-maestro[bot]","Number":"11655","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190627.3\r\n- **Date Produced**: 6/28/2019 3:00 AM\r\n- **Commit**: a676be89f28eb54ece33ecfa9a7d084dd05346ba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19327.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11655","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11655)"},{"Id":"462173180","IsPullRequest":true,"CreatedAt":"2019-06-29T04:39:14","Actor":"nugetlurker","Number":"11660","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into cli","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into cli release/3.0.1xx branch","Url":"https://github.com/dotnet/cli/pull/11660","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into cli\" (#11660)"},{"Id":"462251116","IsPullRequest":true,"CreatedAt":"2019-06-29T04:09:25","Actor":"livarcocc","Number":"11666","RawContent":null,"Title":"Update SDK to 2.2.400-preview-64229-02","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11666","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.400-preview-64229-02\" (#11666)"},{"Id":"462250780","IsPullRequest":true,"CreatedAt":"2019-06-29T04:09:10","Actor":"livarcocc","Number":"11665","RawContent":null,"Title":"Update SDK to 2.1.800-preview-64229-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11665","RelatedDescription":"Closed or merged PR \"Update SDK to 2.1.800-preview-64229-01\" (#11665)"},{"Id":"462246173","IsPullRequest":true,"CreatedAt":"2019-06-29T01:48:54","Actor":"dotnet-maestro[bot]","Number":"11664","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190628.5\r\n- **Date Produced**: 6/29/2019 12:22 AM\r\n- **Commit**: bcb59fa5c9082de1a53234edfecd3b918c5340e6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19328.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11664","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11664)"},{"Id":"461696394","IsPullRequest":true,"CreatedAt":"2019-06-29T00:11:40","Actor":"livarcocc","Number":"11648","RawContent":null,"Title":"Updating msbuild to 16.2.0-preview-19310-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11648","RelatedDescription":"Closed or merged PR \"Updating msbuild to 16.2.0-preview-19310-01\" (#11648)"},{"Id":"461697020","IsPullRequest":true,"CreatedAt":"2019-06-29T00:11:25","Actor":"livarcocc","Number":"11649","RawContent":null,"Title":"Update MSBuild to 16.2.0-preview-19310-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11649","RelatedDescription":"Closed or merged PR \"Update MSBuild to 16.2.0-preview-19310-01\" (#11649)"},{"Id":"462173167","IsPullRequest":true,"CreatedAt":"2019-06-28T23:02:41","Actor":"nugetlurker","Number":"11659","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into cli","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into cli release/2.1.8xx branch","Url":"https://github.com/dotnet/cli/pull/11659","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into cli\" (#11659)"},{"Id":"462173147","IsPullRequest":true,"CreatedAt":"2019-06-28T23:02:20","Actor":"nugetlurker","Number":"11658","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into cli","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into cli release/2.2.4xx branch","Url":"https://github.com/dotnet/cli/pull/11658","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into cli\" (#11658)"},{"Id":"462217671","IsPullRequest":true,"CreatedAt":"2019-06-28T22:53:53","Actor":"dotnet-maestro[bot]","Number":"11662","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190628.4\r\n- **Date Produced**: 6/28/2019 9:42 PM\r\n- **Commit**: 5c81754badb37cd44506e991bad53a70cc9226cc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19328.4\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11662","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11662)"},{"Id":"462220955","IsPullRequest":false,"CreatedAt":"2019-06-28T22:18:52","Actor":"omajid","Number":"11663","RawContent":null,"Title":"dotnet test doesn't work on .NET Core 3.0 Preview 6","State":"closed","Body":"## Steps to reproduce\r\n\r\n    dotnet --info\r\n    dotnet new xunit\r\n    dotnet test\r\n\r\n\r\n## Expected  behavior\r\n\r\nThe generated `UnitTest1` class with the single `Test1` is executed and the test is marked as passed\r\n\r\n## Actual behavior\r\n\r\n```\r\nMicrosoft (R) Test Execution Command Line Tool Version 16.0.1-dev+ea406627f919daa1d8da7daabe2d1f6619d2ad72\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nNo test is available in /home/omajid/temp/test/bin/Debug/netcoreapp3.0/test.dll. Make sure that test discoverer & executors are registered and platform & framework version settings are appropriate and try again.\r\n\r\nAdditionally, path to test adapters can be specified using /TestAdapterPath command. Example  /TestAdapterPath:<pathToCustomAdapters>.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n                                                           \r\nRuntime Environment:                                                                                                  \r\n OS Name:     fedora                                       \r\n OS Version:  30                                                                                                      \r\n OS Platform: Linux                                                                                                   \r\nd RID:         fedora.30-x64                               \r\n Base Path:   /usr/lib64/dotnet/sdk/3.0.100-preview6-012264/                          \r\n                             \r\nHost (useful for support):                                                                                            \r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  17dd7897d6                                      \r\n                                                                                                                      \r\n.NET Core SDKs installed:\r\n  3.0.100-preview6-012264 [/usr/lib64/dotnet/sdk]                                                                     \r\n\r\n.NET Core runtimes installed: \r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App]\r\n                                                           \r\nTo install additional .NET Core runtimes or SDKs:                                                                     \r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nThis dotnet SDK was compiled from the `v3.0.0-preview6-27804-01` tag of source-build.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11663","RelatedDescription":"Closed issue \"dotnet test doesn't work on .NET Core 3.0 Preview 6\" (#11663)"},{"Id":"462181474","IsPullRequest":true,"CreatedAt":"2019-06-28T20:11:53","Actor":"dotnet-maestro[bot]","Number":"11661","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190628.3\r\n- **Date Produced**: 6/28/2019 7:41 PM\r\n- **Commit**: 1c71752b1ff99bfd8dd70f54f127832a1645ae35\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19328.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11661","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11661)"},{"Id":"462114221","IsPullRequest":true,"CreatedAt":"2019-06-28T17:50:20","Actor":"johnbeisner","Number":"11657","RawContent":null,"Title":"WIP: Merge master to release/3.0.1xx for preview7 - CLI","State":"closed","Body":"Merge master to release/3.0.1xx for preview7\r\n\r\nCommonly referred to as the 'snap'","Url":"https://github.com/dotnet/cli/pull/11657","RelatedDescription":"Closed or merged PR \"WIP: Merge master to release/3.0.1xx for preview7 - CLI\" (#11657)"},{"Id":"462088922","IsPullRequest":false,"CreatedAt":"2019-06-28T15:56:44","Actor":"vsccarl","Number":"11656","RawContent":null,"Title":"x86 build configurations are missing","State":"closed","Body":"## Steps to reproduce\r\n1. Create a .NET Core 3.0 project\r\n2. Change build configuration to x86 in Configuration manager\r\n3. Build\r\n\r\n## Expected  behavior\r\nProjects are built as expected.\r\n\r\n## Actual behavior\r\nUnable to build the project.\r\n```\r\nNU1102\tUnable to find package Microsoft.NETCore.App.Host.win-x86 with version (= 3.0.0-preview7-27826-20)\r\n  - Found 2 version(s) in nuget.org [ Nearest version: 3.0.0-preview6-27804-01 ]\r\n  - Found 0 version(s) in Microsoft Visual Studio Offline Packages\tWpfApp3\tC:\\Users\\v-sccarl\\source\\repos\\WpfApp3\\WpfApp3\\WpfApp3.csproj\t1\t\r\n```\r\nAnd when opening the WPF designer this error shows up:\r\n```\r\nA fatal error occurred. The required library hostfxr.dll could not be found.\r\nIf this is a self-contained application, that library should exist in [C:\\Users\\v-sccarl\\AppData\\Local\\Microsoft\\VisualStudio\\16.0_4660ea3a\\Designer\\Cache\\11878078826x86DA\\].\r\nIf this is a framework-dependent application, install the runtime in the global location [C:\\Program Files (x86)\\dotnet] or use the DOTNET_ROOT(x86) environment variable to specify the runtime location or register the runtime location in [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation].\r\n```\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\nVersion:   3.0.100-preview7-012688\r\nCommit:    84048fc1ff\r\n\r\nRuntime Environment:\r\nOS Name:     Windows\r\nOS Version:  10.0.17763\r\nOS Platform: Windows\r\nRID:         win10-x64\r\nBase Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012688\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-20\r\n  Commit:  ee0c7ead1a\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012688 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19326.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11656","RelatedDescription":"Closed issue \"x86 build configurations are missing\" (#11656)"},{"Id":"461857103","IsPullRequest":true,"CreatedAt":"2019-06-28T05:39:20","Actor":"dotnet-maestro[bot]","Number":"11654","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.12\r\n- **Date Produced**: 6/28/2019 5:03 AM\r\n- **Commit**: 33849f3381125e697008c846ac78bd0c0fd32e29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.12\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11654","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11654)"},{"Id":"461833430","IsPullRequest":true,"CreatedAt":"2019-06-28T03:40:29","Actor":"dotnet-maestro[bot]","Number":"11653","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.11\r\n- **Date Produced**: 6/28/2019 3:04 AM\r\n- **Commit**: 1c0014c5390385ec1c6351f0a2dcc498f34faa1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.11\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11653","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11653)"},{"Id":"461808401","IsPullRequest":true,"CreatedAt":"2019-06-28T01:28:12","Actor":"dotnet-maestro[bot]","Number":"11652","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 12:52 AM\r\n- **Commit**: 82149f92ed212fd1889f66201ab2deac811e4847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.9\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11652)"},{"Id":"461807858","IsPullRequest":false,"CreatedAt":"2019-06-28T00:49:37","Actor":"nguerrera","Number":"11651","RawContent":null,"Title":"SDK resolver should flow traced errors from hostfxr to msbuild","State":"open","Body":"Follow up to https://github.com/dotnet/core-setup/issues/6970\r\n\r\nWe can set an error writer on hostfxr and then return the errors to msbuild.\r\n\r\nSee https://github.com/dotnet/core-setup/blob/1a10af88e3904b1d9790be38450c23eea683d6ae/src/corehost/cli/fxr/hostfxr.cpp#L391\r\n\r\ncc @peterhuene \r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11651","RelatedDescription":"Open issue \"SDK resolver should flow traced errors from hostfxr to msbuild\" (#11651)"},{"Id":"461716689","IsPullRequest":false,"CreatedAt":"2019-06-27T19:48:16","Actor":"DamianEdwards","Number":"11650","RawContent":null,"Title":"Randomly get 'The \"CreateAppHost\" task failed unexpectedly' error when doing CLI build of a new web app","State":"open","Body":"## Steps to reproduce\r\n1. Create a new web app: `dotnet new webapp`\r\n1. Repeatedly build the app from the CLI with no changes: `dotnet build`\r\n\r\n## Expected  behavior\r\nNo errors\r\n\r\n## Actual behavior\r\nRandomly see the following error (twice in the last 20 builds just now):\r\n```\r\nC:\\src\\local\\BuildPerf\\WebApp3.0> dotnet build                                                                                     Microsoft (R) Build Engine version 16.3.0-preview-19325-02+eca7818b1 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 19.81 ms for C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: Microsoft.NET.Build.Tasks.ResourceUpdater+HResultException: 8007006E [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.ThrowExceptionForLastWin32Error() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 436 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.Update() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 324 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.AppHost.Create(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String intermediateAssembly, Logger log) in /_/src/Tasks/Microsoft.NET.Build.Tasks/AppHost.cs:line 82 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/CreateAppHost.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: Microsoft.NET.Build.Tasks.ResourceUpdater+HResultException: 8007006E [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.ThrowExceptionForLastWin32Error() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 436 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.Update() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 324 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.AppHost.Create(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String intermediateAssembly, Logger log) in /_/src/Tasks/Microsoft.NET.Build.Tasks/AppHost.cs:line 82 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/CreateAppHost.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.58\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012649\r\n Commit:    3f4ab7f5c5\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012649 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19326.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11650","RelatedDescription":"Open issue \"Randomly get 'The \"CreateAppHost\" task failed unexpectedly' error when doing CLI build of a new web app\" (#11650)"},{"Id":"461646119","IsPullRequest":true,"CreatedAt":"2019-06-27T18:35:21","Actor":"dotnet-bot","Number":"11647","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11647","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#11647)"},{"Id":"461646057","IsPullRequest":true,"CreatedAt":"2019-06-27T17:06:24","Actor":"dotnet-bot","Number":"11646","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11646","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11646)"},{"Id":"461645992","IsPullRequest":true,"CreatedAt":"2019-06-27T17:06:16","Actor":"dotnet-bot","Number":"11645","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11645","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11645)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"462312057","IsPullRequest":false,"CreatedAt":"2019-06-29T15:21:55","Actor":"alecgn","Number":"1295","RawContent":null,"Title":"Consider adding AesGcm to .NET Standard 2.1","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1295","RelatedDescription":"Open issue \"Consider adding AesGcm to .NET Standard 2.1\" (#1295)"},{"Id":"462299907","IsPullRequest":true,"CreatedAt":"2019-06-29T13:03:28","Actor":"dotnet-maestro[bot]","Number":"1294","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1294","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1294)"},{"Id":"462296158","IsPullRequest":true,"CreatedAt":"2019-06-29T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1293","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1293","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1293)"},{"Id":"462019019","IsPullRequest":true,"CreatedAt":"2019-06-28T12:59:17","Actor":"dotnet-maestro[bot]","Number":"1292","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 4:10 AM\r\n- **Commit**: b8761d4848d42040c81ec25c8b51fd386b97f5f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19327.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1292","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1292)"},{"Id":"462015053","IsPullRequest":false,"CreatedAt":"2019-06-28T12:38:56","Actor":"brad302","Number":"1291","RawContent":null,"Title":"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.","State":"open","Body":"Apologies if this isn't the correct place but it seems like the most logical place to start.\r\n\r\nI used this link ... [https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/](https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/) (which worked for other projects) ... to convert my PCL project in Xamarin Forms to .NET Standard 2.0 and ever since, I've had the issue where XAML files appear twice and no matter what I try, they simply will not fall back into line as one with the .cs file as its dependency ...\r\n\r\n<img width=\"301\" alt=\"Screen Shot 2019-06-28 at 10 25 57 pm\" src=\"https://user-images.githubusercontent.com/14899088/60342052-c43dd500-99f3-11e9-814e-c1441bde4484.png\">\r\n\r\n... even new XAML ContentPage files display the same behaviour, however, not initially.  If I close the project and reopen, they appear as 2.  I've tried removing and adding the files back in different ways but still no luck.\r\n\r\nMy .csproj file is very light on ...\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>netstandard2.0</TargetFramework>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <!--<PackageReference Include=\"\" Version=\"\"/>-->\r\n        <PackageReference Include=\"CarouselView.FormsPlugin\" Version=\"5.0.0\" />\r\n        <PackageReference Include=\"Com.Airbnb.Xamarin.Forms.Lottie\" Version=\"2.5.4\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Analytics\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Crashes\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.2\" />\r\n        <PackageReference Include=\"Refit\" Version=\"4.5.6\" />\r\n        <PackageReference Include=\"SkiaSharp.Views.Forms\" Version=\"1.68.0\" />\r\n        <PackageReference Include=\"sqlite-net-pcl\" Version=\"1.5.231\" />\r\n        <PackageReference Include=\"System.Net.Http\" Version=\"4.3.4\" />\r\n        <PackageReference Include=\"Xam.Plugin.Media\" Version=\"4.0.1.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Forms.ImageCircle\" Version=\"3.0.0.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Messaging\" Version=\"5.2.0\" />\r\n        <PackageReference Include=\"Xamarin.Essentials\" Version=\"1.1.0\" />\r\n        <PackageReference Include=\"Xamarin.Forms\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"Xamarin.Forms.Maps\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile.Forms\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"Microsoft.CSharp\" Version=\"4.5.0\" />\r\n        <PackageReference Include=\"UltimateXF\" Version=\"2.3.2\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Auth\" Version=\"2.1.1\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n... and nothing on other community sites (e.g. StackOverflow) have helped me overcome this.\r\n\r\nThis is the entire error minus ALL of the XAML files within the project listed ...\r\n\r\n`/usr/local/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.DefaultItems.targets(5,5): Error NETSDK1022: Duplicate 'EmbeddedResource' items were included. The .NET SDK includes 'EmbeddedResource' items from your project directory by default. You can either remove these items from your project file, or set the 'EnableDefaultEmbeddedResourceItems' property to 'false' if you want to explicitly include them in your project file. For more information, see https://aka.ms/sdkimplicititems. The duplicate items were: 'App.xaml'; etc … (NETSDK1022) (cPanel)`\r\n\r\nI've looked at the resource in the error message, tried a number of things as listed but none had the desired outcome.\r\n\r\nEverything was behaving until I upgraded to Xamarin Forms 4.0 and want to move forward with the latest SDK.\r\n\r\nHopefully someone can help me through this.","Url":"https://github.com/dotnet/standard/issues/1291","RelatedDescription":"Open issue \"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.\" (#1291)"},{"Id":"462001956","IsPullRequest":true,"CreatedAt":"2019-06-28T12:14:01","Actor":"dotnet-maestro[bot]","Number":"1289","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190627.39\r\n- **Date Produced**: 6/28/2019 2:55 AM\r\n- **Commit**: 247c0290c554a68dd3e560dd88fb0da26353d9d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19327.39\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1289","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1289)"},{"Id":"462004700","IsPullRequest":true,"CreatedAt":"2019-06-28T12:11:43","Actor":"roji","Number":"1290","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*()","State":"open","Body":"See https://github.com/dotnet/corefx/issues/31595\r\n\r\nThis is the 3rd and last in this batch of System.Data changes.\r\n\r\nNote that for the naming and namespace for the new DataReaderExtensions class, see https://github.com/dotnet/corefx/pull/36123#issuecomment-475762481 and https://github.com/dotnet/corefx/pull/36123#discussion_r267625142.","Url":"https://github.com/dotnet/standard/pull/1290","RelatedDescription":"Open PR \"Add string overloads to DbDataReader.Get*()\" (#1290)"},{"Id":"461045281","IsPullRequest":true,"CreatedAt":"2019-06-28T11:31:25","Actor":"roji","Number":"1284","RawContent":null,"Title":"Add feature detection properties to DbProviderFactory","State":"closed","Body":"CanCreateDataAdapter, CanCreateCommandBuilder\r\n\r\nSee https://github.com/dotnet/corefx/issues/35564\r\n\r\n/cc @divega @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1284","RelatedDescription":"Closed or merged PR \"Add feature detection properties to DbProviderFactory\" (#1284)"},{"Id":"461514630","IsPullRequest":true,"CreatedAt":"2019-06-27T13:08:53","Actor":"dotnet-maestro[bot]","Number":"1288","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1288","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1288)"},{"Id":"461489560","IsPullRequest":true,"CreatedAt":"2019-06-27T12:14:35","Actor":"dotnet-maestro[bot]","Number":"1287","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1287","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1287)"},{"Id":"461135035","IsPullRequest":true,"CreatedAt":"2019-06-26T20:09:26","Actor":"dotnet-maestro-bot","Number":"1285","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @42748379+dotnet-maestro[bot]\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1285","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1285)"},{"Id":"461136908","IsPullRequest":true,"CreatedAt":"2019-06-26T19:14:40","Actor":"wtgodbe","Number":"1286","RawContent":null,"Title":"Update branding to preview8 in master","State":"closed","Body":"CC @terrajobst","Url":"https://github.com/dotnet/standard/pull/1286","RelatedDescription":"Closed or merged PR \"Update branding to preview8 in master\" (#1286)"},{"Id":"461018856","IsPullRequest":true,"CreatedAt":"2019-06-26T14:51:16","Actor":"roji","Number":"1283","RawContent":null,"Title":"Add async methods in System.Data.Common, implement IAsyncDisposable","State":"open","Body":"This brings over https://github.com/dotnet/corefx/issues/35012 (already merged for .NET Core 3.0) to .NET Standard 2.1.\r\n\r\nOne thing I noticed, is that in the corefx implementation the types have been updated to implement IAsyncDisposable, but in the ref they have not (although `DisposeAsync()` has been added). Can someone please confirm whether the interface should get added there?\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1283","RelatedDescription":"Open PR \"Add async methods in System.Data.Common, implement IAsyncDisposable\" (#1283)"},{"Id":"460955255","IsPullRequest":true,"CreatedAt":"2019-06-26T13:07:21","Actor":"dotnet-maestro[bot]","Number":"1282","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 10:31 AM\r\n- **Commit**: 219b67118e3a2d539afc1ff3bb2c10e1bc7b03d2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19326.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1282","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1282)"},{"Id":"460930584","IsPullRequest":true,"CreatedAt":"2019-06-26T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1281","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 8:36 AM\r\n- **Commit**: 4b3d46cc75969c4e2de5786ec2b10a430b26dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1281","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1281)"},{"Id":"460410476","IsPullRequest":true,"CreatedAt":"2019-06-25T13:10:58","Actor":"dotnet-maestro[bot]","Number":"1280","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190624.8\r\n- **Date Produced**: 6/25/2019 7:00 AM\r\n- **Commit**: 60d8aa31a4c1ffa0e125bd7941aca171439a2f72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19324.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1280","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1280)"},{"Id":"460383422","IsPullRequest":true,"CreatedAt":"2019-06-25T12:13:57","Actor":"dotnet-maestro[bot]","Number":"1278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190624.24\r\n- **Date Produced**: 6/25/2019 1:31 AM\r\n- **Commit**: 062febd818fa51e82c7192782a6b6e6429cc81c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19324.24\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1278)"},{"Id":"460383487","IsPullRequest":false,"CreatedAt":"2019-06-25T12:04:02","Actor":"Rajesht2305","Number":"1279","RawContent":null,"Title":"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'","State":"open","Body":"Hello Team,\r\nwe are using .net standard libraries in .net framework application. trying to access network share by using Impersonation but windows identity is throwing not supported exception. \r\n\r\nCode snippet: \r\n\r\n public void RunImpersonated(Action action)\r\n        {\r\n            using (WindowsIdentity identity = new WindowsIdentity(_token))\r\n            {\r\n                WindowsIdentity.RunImpersonated(identity.AccessToken, action);\r\n                //_context = identity.Impersonate();\r\n            }\r\n        }\r\n\r\n.net standard dll versions:\r\n.net standard -version 2.0\r\nSystem.Security.Principal.Windows - version: 4.1.1.1\r\n.net framework version -4.7.2\r\n\r\nany support to resolve this issue?","Url":"https://github.com/dotnet/standard/issues/1279","RelatedDescription":"Open issue \"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'\" (#1279)"},{"Id":"459877781","IsPullRequest":true,"CreatedAt":"2019-06-24T13:09:35","Actor":"dotnet-maestro[bot]","Number":"1277","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 1:16 AM\r\n- **Commit**: 2861ef06530df06b70f17a91616d979c8f18f75e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19323.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1277","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1277)"},{"Id":"459852547","IsPullRequest":true,"CreatedAt":"2019-06-24T12:13:59","Actor":"dotnet-maestro[bot]","Number":"1276","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 7:07 AM\r\n- **Commit**: 9946534da4f73e6242ca105f6798ab58119c9ab0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19323.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1276","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1276)"},{"Id":"459599516","IsPullRequest":false,"CreatedAt":"2019-06-23T17:33:09","Actor":"hankir","Number":"1275","RawContent":null,"Title":"Date type needed","State":"open","Body":"DateTime type is useful, but of some cases require different types for Date and DateTime. Sometimes time is not filled and equal 00:00:00.\r\nBut how detect case when timezone offset take 00:00:00 from date with time.\r\nFor example, 04:00 (UTC +04:00) AM will be 00:00 when it convert to UTC for store in database.\r\n\r\nCan do lot of implementations for solve this problem. For example, use NodeTime, but i think that this type should be in .Net Standad.\r\n\r\nWhat do you think?","Url":"https://github.com/dotnet/standard/issues/1275","RelatedDescription":"Open issue \"Date type needed\" (#1275)"},{"Id":"459597750","IsPullRequest":false,"CreatedAt":"2019-06-23T17:13:19","Actor":"hankir","Number":"1274","RawContent":null,"Title":"Reflections on Enum","State":"open","Body":"In java enum is more useful. Just look at this:\r\n\r\npublic enum DayOfWeek {\r\n   SUNDAY (\"Sunday\"),\r\n   MONDAY (\"Monday\"),\r\n   TUESDAY (\"Tuesday\"),\r\n   WEDNESDAY (\"Wednesday\"),\r\n   THURSDAY (\"Thursday\"),\r\n   FRIDAY (\"Friday\"),\r\n   SATURDAY (\"Saturday\");\r\n\r\n   private String title;\r\n\r\n   DayOfWeek(String title) {\r\n       this.title = title;\r\n   }\r\n\r\n   public String getTitle() {\r\n       return title;\r\n   }\r\n\r\n   @Override\r\n   public String toString() {\r\n       return \"DayOfWeek{\" +\r\n               \"title='\" + title + '\\'' +\r\n               '}';\r\n   }\r\n}\r\n\r\nWhat do you think about this way?\r\nIt is powerful when use DDD practice and in other cases.","Url":"https://github.com/dotnet/standard/issues/1274","RelatedDescription":"Open issue \"Reflections on Enum\" (#1274)"},{"Id":"459573820","IsPullRequest":true,"CreatedAt":"2019-06-23T13:12:01","Actor":"dotnet-maestro[bot]","Number":"1273","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190622.7\r\n- **Date Produced**: 6/23/2019 6:08 AM\r\n- **Commit**: 3b39190472c73ef0c4da485bfba0aa57f9ae3b37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19322.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19322.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19322.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1273","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1273)"},{"Id":"459568213","IsPullRequest":true,"CreatedAt":"2019-06-23T12:14:03","Actor":"dotnet-maestro[bot]","Number":"1272","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190622.2\r\n- **Date Produced**: 6/22/2019 12:46 PM\r\n- **Commit**: 48aed493ffa093728bc9ffd17be0e5957f77aade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19322.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1272","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1272)"},{"Id":"459472124","IsPullRequest":true,"CreatedAt":"2019-06-22T13:11:49","Actor":"dotnet-maestro[bot]","Number":"1271","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1271)"},{"Id":"459467523","IsPullRequest":true,"CreatedAt":"2019-06-22T12:13:58","Actor":"dotnet-maestro[bot]","Number":"1270","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1270","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1270)"},{"Id":"459389350","IsPullRequest":false,"CreatedAt":"2019-06-21T22:08:19","Actor":"tstuts","Number":"1269","RawContent":null,"Title":"Visual Studio for Mac update leads to \"You must add a reference to assembly 'netstandard,...'\"","State":"open","Body":"I'm not sure where this issue should be reported, but since it is somewhat related to dotnet/standard#542, I figured I'd start here. This week, some of my team installed the latest updates in Visual Studio for Mac and after doing so they now encounter errors when trying to build. I've created a simple reproduction at https://github.com/tstuts/net-standard-test using a Xamarin.Mac app and a .NET Standard library.\r\n\r\n<br>\r\n\r\n#### Working Configuration:\r\n```\r\nVisual Studio: 8.0.9.5\r\nMono: 5.18.1.3\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/WorkingOlderConfig.txt)\r\n<br>\r\n\r\n#### Broken Configuration:\r\n```\r\nVisual Studio: 8.1.1.27\r\nMono: 5.18.1.28\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/BrokenUpdatedConfig.txt)\r\nThis configuration produces the following error:\r\n```\r\nError CS0012: The type 'Guid' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. (CS0012) (NetStandardTestApp)\r\n```","Url":"https://github.com/dotnet/standard/issues/1269","RelatedDescription":"Open issue \"Visual Studio for Mac update leads to \"You must add a reference to assembly 'netstandard,...'\"\" (#1269)"},{"Id":"459187249","IsPullRequest":true,"CreatedAt":"2019-06-21T13:13:31","Actor":"dotnet-maestro[bot]","Number":"1268","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.1\r\n- **Date Produced**: 6/21/2019 9:37 AM\r\n- **Commit**: e5aa6a5b6df5593e17b794dfcf5cf7ec87e9ef1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1268","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1268)"},{"Id":"459162783","IsPullRequest":true,"CreatedAt":"2019-06-21T12:11:02","Actor":"dotnet-maestro[bot]","Number":"1267","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190620.1\r\n- **Date Produced**: 6/20/2019 9:31 AM\r\n- **Commit**: b21c24996a73aa62b7a1ee69f546b9d2eb084f29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19320.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1267","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1267)"},{"Id":"458647611","IsPullRequest":true,"CreatedAt":"2019-06-20T13:17:30","Actor":"dotnet-maestro[bot]","Number":"1266","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.10\r\n- **Date Produced**: 6/20/2019 3:08 AM\r\n- **Commit**: eaa0079941923b4f903344130315f4cd332b84fe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1266","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1266)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"462321796","IsPullRequest":false,"CreatedAt":"2019-06-29T22:19:36","Actor":"vcsjones","Number":"39057","RawContent":null,"Title":"API Proposal: Equality members on Oid.","State":"closed","Body":"`Oid` seems like a good candidate for comparable members.\r\n\r\nProposal:\r\n\r\n```csharp\r\nnamespace System.Security.Cryptography {\r\n    public sealed class Oid : IEquatable<Oid> {\r\n        public static bool operator == (Oid oid1, Oid oid2) => throw null;\r\n        public static bool operator != (Oid oid1, Oid oid2) => throw null;\r\n\r\n        public override bool Equals(object obj) => throw null;\r\n        public override int GetHashCode() => throw null;\r\n        public bool Equals(Oid oid) => throw null;\r\n    }\r\n}\r\n```\r\n\r\n/cc @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/39057","RelatedDescription":"Closed issue \"API Proposal: Equality members on Oid.\" (#39057)"},{"Id":"462346626","IsPullRequest":false,"CreatedAt":"2019-06-29T22:14:26","Actor":"jkotas","Number":"39060","RawContent":null,"Title":"Error while checking for terminated children","State":"open","Body":"Hit in https://github.com/dotnet/coreclr/pull/25497 on Linux arm checked\r\n\r\n```\r\n  Discovering: JIT.jit64.XUnitWrapper\r\n  Discovered:  JIT.jit64.XUnitWrapper\r\n  Starting:    JIT.jit64.XUnitWrapper\r\nProcess terminated. Error while checking for terminated children. errno = 0\r\n   at System.Environment.FailFast(System.String)\r\n   at System.Diagnostics.ProcessWaitState.CheckChildren(Boolean)\r\n   at System.Diagnostics.Process.OnSigChild(Boolean)\r\nAborted (core dumped)\r\n```","Url":"https://github.com/dotnet/corefx/issues/39060","RelatedDescription":"Open issue \"Error while checking for terminated children\" (#39060)"},{"Id":"462346454","IsPullRequest":false,"CreatedAt":"2019-06-29T22:11:11","Actor":"jkotas","Number":"39059","RawContent":null,"Title":"Unhandled Exception TaskCanceledException (thrown from WhenAllOrAnyFailed)","State":"open","Body":"Hit by `System.Net.WebSockets.Client.Tests.ConnectTest.ConnectAsync_NonStandardRequestHeaders_HeadersAddedWithoutValidation` test in https://github.com/dotnet/coreclr/pull/25497 on  Linux x64 checked\r\n\r\n```\r\nUnhandled Exception of Type System.Threading.Tasks.TaskCanceledException\r\nMessage :\r\nSystem.Threading.Tasks.TaskCanceledException : A task was canceled.\r\nStack Trace :\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 83\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 111\r\n   at System.Net.Test.Common.LoopbackServer.<>c__DisplayClass11_0.<<CreateClientAndServerAsync>b__0>d.MoveNext() in /_/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 83\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Test.Common.LoopbackServer.CreateServerAsync(Func`2 funcAsync, Options options) in /_/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 66\r\n   at System.Net.WebSockets.Client.Tests.ConnectTest.ConnectAsync_NonStandardRequestHeaders_HeadersAddedWithoutValidation() in /_/src/System.Net.WebSockets.Client/tests/ConnectTest.cs:line 237\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```","Url":"https://github.com/dotnet/corefx/issues/39059","RelatedDescription":"Open issue \"Unhandled Exception TaskCanceledException (thrown from WhenAllOrAnyFailed)\" (#39059)"},{"Id":"462299344","IsPullRequest":true,"CreatedAt":"2019-06-29T22:07:34","Actor":"dotnet-maestro[bot]","Number":"39055","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190628.3\r\n- **Date Produced**: 6/28/2019 2:41 PM\r\n- **Commit**: 6724989b3d7e1570e9316c3b13a51b4cf22da2f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190628.3\r\n\r\n[marker]: <> (End:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39055","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#39055)"},{"Id":"462344369","IsPullRequest":false,"CreatedAt":"2019-06-29T21:38:23","Actor":"LordBenjamin","Number":"39058","RawContent":null,"Title":"Potential Ryzen performance edge-case","State":"open","Body":"I've noticed while doing some benchmarking that .NET Core is noticeably (21%) slower than .NET Framework on my AMD Ryzen 1200 based PC for a certain piece of code.\r\n\r\nRunning the same benchmark on an Intel i7 6700 based PC shows .NET Core running significantly (41%) faster than Framework.\r\n\r\nCode to reproduce is here:\r\nhttps://github.com/LordBenjamin/DotNetCore-Ryzen-Performance-Repro/\r\n\r\n**Benchmarks**\r\n\r\n* `OriginalBenchmark.cs` \r\n\r\nQuite close to my actual code. Slower on Ryzen and faster on Intel.\r\n\r\n* `StreamWriteBenchmark.cs`\r\n\r\nDistilled down after I noticed that commenting out the call to  `MemoryStream.Write(byte[] buffer, int offset, int count);` in  `OriginalBenchmark.cs` leaves .NET Core consistently faster on both CPUs. Core performance is significantly worse on Ryzen, but comparable to Framework on Intel.\r\n\r\n**Affected Frameworks**\r\n\r\nI can reproduce using both .NET Core 2.1 and 3.0. Framework version is 4.7.2 in both cases.\r\n\r\n**Results**\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.557 (1809/October2018Update/Redstone5)\r\nAMD Ryzen 3 1200, 1 CPU, 4 logical and 4 physical cores\r\n.NET Core SDK=3.0.100-preview6-012264\r\n  [Host] : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3416.0\r\n  Core   : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n\r\n\r\n|      Method |  Job | Runtime |      Mean |     Error |    StdDev |\r\n|------------ |----- |-------- |----------:|----------:|----------:|\r\n| StreamWrite |  Clr |     Clr |  68.21 us | 0.4611 us | 0.4088 us |\r\n| StreamWrite | Core |    Core | 118.42 us | 0.5408 us | 0.5058 us |\r\n| Original    |  Clr |     Clr |  502.4 us | 6.2900 us | 5.8840 us |\r\n| Original    | Core |    Core |  630.2 us | 3.8080 us | 3.5620 us |\r\n```\r\n\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.557 (1809/October2018Update/Redstone5)\r\nIntel Core i7-6700 CPU 3.40GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET Core SDK=2.1.700\r\n  [Host] : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.8.3801.0\r\n  Core   : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n\r\n\r\n|      Method |  Job | Runtime |     Mean |     Error |    StdDev |\r\n|------------ |----- |-------- |---------:|----------:|----------:|\r\n| StreamWrite |  Clr |     Clr | 75.37 us | 0.9133 us |  0.7626 us|\r\n| StreamWrite | Core |    Core | 75.39 us | 0.8624 us |  0.8067 us|\r\n| Original    |  Clr |     Clr | 598.0 us |11.6530 us | 14.74 us  |\r\n| Original    | Core |    Core | 341.6 us | 6.8020 us | 10.79 us  |\r\n```\r\n\r\nHappy to supply further information or change and re-run benchmarks as required.","Url":"https://github.com/dotnet/corefx/issues/39058","RelatedDescription":"Open issue \"Potential Ryzen performance edge-case\" (#39058)"},{"Id":"462176277","IsPullRequest":true,"CreatedAt":"2019-06-29T19:38:09","Actor":"stephentoub","Number":"39038","RawContent":null,"Title":"Fix exception messages for max response headers length","State":"closed","Body":"Some of the call sites use a value whose units is kbytes, but the exception message refers to bytes.\r\n\r\ncc: @scalablecory, @davidsh","Url":"https://github.com/dotnet/corefx/pull/39038","RelatedDescription":"Closed or merged PR \"Fix exception messages for max response headers length\" (#39038)"},{"Id":"462302180","IsPullRequest":true,"CreatedAt":"2019-06-29T13:23:08","Actor":"dotnet-maestro[bot]","Number":"39056","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:18 PM\r\n- **Commit**: 88b2a711d747f61750349e770db4377098cb3e5a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19329.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39056","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/standard\" (#39056)"},{"Id":"462296124","IsPullRequest":true,"CreatedAt":"2019-06-29T13:19:01","Actor":"dotnet-maestro[bot]","Number":"39051","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19328.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19328.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39051","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#39051)"},{"Id":"462298765","IsPullRequest":true,"CreatedAt":"2019-06-29T12:37:10","Actor":"dotnet-maestro[bot]","Number":"39054","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/29/2019 12:54 AM\r\n- **Commit**: 59e7be03ddb77e36b8e36574682d23cb6dc38f5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19328.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19328.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview8.19328.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39054","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/coreclr\" (#39054)"},{"Id":"462298584","IsPullRequest":false,"CreatedAt":"2019-06-29T12:34:36","Actor":"disks86","Number":"39053","RawContent":null,"Title":"Allow Multiplication between Vector and Matrix","State":"open","Body":"I think we need Multiply(Vector4,Matrix4x4) and Multiply(Matrix4x4,Vector4) support. It would be ideal if * worked but at least having named methods would be helpful.","Url":"https://github.com/dotnet/corefx/issues/39053","RelatedDescription":"Open issue \"Allow Multiplication between Vector and Matrix\" (#39053)"},{"Id":"462297925","IsPullRequest":true,"CreatedAt":"2019-06-29T12:26:55","Actor":"dotnet-maestro[bot]","Number":"39052","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview8.19329.1\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19329.1\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39052","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#39052)"},{"Id":"462286126","IsPullRequest":true,"CreatedAt":"2019-06-29T09:44:30","Actor":"kouvel","Number":"39050","RawContent":null,"Title":"Fold a bunch of CoreCLR's abandoned mutex tests into a parameterized test","State":"open","Body":"- There are a large number of tests in CoreCLR with a lot of redundancy, timing issues, and which take unnecessarily long to run\r\n- Folded a bunch of them into the existing parameterized test and improved it to cover more cases to replace the tests in CoreCLR that will be removed\r\n- Coverage is not 100% equivalent, but I believe this sufficiently covers the necessary aspects of the tests in CoreCLR that will be removed","Url":"https://github.com/dotnet/corefx/pull/39050","RelatedDescription":"Open PR \"Fold a bunch of CoreCLR's abandoned mutex tests into a parameterized test\" (#39050)"},{"Id":"462253071","IsPullRequest":true,"CreatedAt":"2019-06-29T06:11:33","Actor":"geoffkizer","Number":"39047","RawContent":null,"Title":"enable request retry when receiving REFUSED_STREAM protocol error","State":"closed","Body":"Fixes #39005 \r\n\r\nThe REFUSED_STREAM error code on RST_STREAM indicates that the stream has not been processed and should be retried. This is implemented by throwing a retryable HttpRequestException and using our existing retry logic.\r\n\r\n@stephentoub Hopefully this fixes the REFUSED_STREAM errors you've seen...\r\n","Url":"https://github.com/dotnet/corefx/pull/39047","RelatedDescription":"Closed or merged PR \"enable request retry when receiving REFUSED_STREAM protocol error\" (#39047)"},{"Id":"462230067","IsPullRequest":true,"CreatedAt":"2019-06-29T06:01:54","Actor":"vcsjones","Number":"39043","RawContent":null,"Title":"Lookup OID if only friendly name is specified for ECCurve","State":"closed","Body":"Fixes #32323\r\n\r\nWhen constructing an EC curve from the friendly name of an OID, the \"Windows\" friendly name lookup table was not used, so those friendly names would not work on Linux / macOS.\r\n\r\nThis resolves the OID's value from the friendly name first. If it fails, it continues as-it-was so that the original exception behavior of `PlatformNotSupportedException` is preserved.\r\n\r\nThis uses `OidGroup.All` so that Windows will use the cache to avoid hitting `FindOidInfo` when possible which comes with a penalty on Windows. The ECC implementation should still appropriately handle the scenario where a curve OID was created that is invalid.\r\n\r\n/cc @bartonjs ","Url":"https://github.com/dotnet/corefx/pull/39043","RelatedDescription":"Closed or merged PR \"Lookup OID if only friendly name is specified for ECCurve\" (#39043)"},{"Id":"462260223","IsPullRequest":false,"CreatedAt":"2019-06-29T03:26:57","Actor":"geoffkizer","Number":"39049","RawContent":null,"Title":"HTTP2: How should cancellation work with duplex?","State":"open","Body":"With duplex communication, we can still be sending the request body after SendAsync returns. If the CancellationToken passed to SendAsync fires after SendAsync returns, what should happen?\r\n\r\nLooking at the code, I believe this will cause the request body send to be cancelled. However, this seems arguably wrong. It seems like the CancellationToken should not apply anymore once SendAsync has completed.\r\n\r\nThoughts?\r\n\r\n@stephentoub @wfurt \r\n","Url":"https://github.com/dotnet/corefx/issues/39049","RelatedDescription":"Open issue \"HTTP2: How should cancellation work with duplex?\" (#39049)"},{"Id":"462254312","IsPullRequest":false,"CreatedAt":"2019-06-29T01:58:34","Actor":"danmosemsft","Number":"39048","RawContent":null,"Title":"ERROR_FILENAME_EXCED_RANGE in FillAttributeInfo","State":"open","Body":"Same as https://github.com/dotnet/corefx/issues/35665 but instead of ERROR_SEM_TIMEOUT it's ERROR_FILENAME_EXCED_RANGE. (Now with added path goodness!)\r\n\r\n@JeremyKuhne does it surprise you that this error could occur here? \r\n```\r\n                    if (errorCode != Interop.Errors.ERROR_FILE_NOT_FOUND\r\n                        && errorCode != Interop.Errors.ERROR_PATH_NOT_FOUND\r\n                        && errorCode != Interop.Errors.ERROR_NOT_READY\r\n                        && errorCode != Interop.Errors.ERROR_INVALID_NAME\r\n                        && errorCode != Interop.Errors.ERROR_BAD_PATHNAME\r\n                        && errorCode != Interop.Errors.ERROR_BAD_NETPATH\r\n                        && errorCode != Interop.Errors.ERROR_BAD_NET_NAME\r\n                        && errorCode != Interop.Errors.ERROR_INVALID_PARAMETER\r\n                        && errorCode != Interop.Errors.ERROR_NETWORK_UNREACHABLE\r\n                        && errorCode != Interop.Errors.ERROR_NETWORK_ACCESS_DENIED\r\n                        && errorCode != Interop.Errors.ERROR_INVALID_HANDLE  // eg from \\\\.\\CON\r\n                        )\r\n                    {\r\n                        // Assert so we can track down other cases (if any) to add to our test suite\r\n                        Debug.Assert(errorCode == Interop.Errors.ERROR_ACCESS_DENIED || errorCode == Interop.Errors.ERROR_SHARING_VIOLATION,\r\n                            $\"Unexpected error code getting attributes {errorCode}\");\r\n```\r\n\r\n```\r\nProcess terminated. Assertion failed.\r\nUnexpected error code getting attributes 206 from path \\\\?\\C:\\Data\\SystemData\\Temp\\Directory_CreateDirectory_2jdim4wj.t5h\\DirectoryLongerThanMaxLongPathWithExtendedSyntax_ThrowsException_264_619ba974\\24696591a1ae4031ab97ab53817e11e1gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d0eaddb54a814aa093d6007e8da6f30egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\7ef61144a17244a69e1ef2e6dc002ec0gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\73eb4b1624934477ad55cf642c59ac28gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\ea0f2484afcb42dc9dafd42dc9a6cd15gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\5f5de6225d044c88aa8d11cf83cadc3agggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\1d6a4e460511460c897e0824465b1aa8gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\e9400152b3274619b4dd6610d90c37a9gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\902494abacb540b5a28c3cd2eb550b3fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\ba3b33f99e274d479e6fd3a06771a6f9gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d6345f7a85104774a7a7cac29bb21f71gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\db00cd2d915f422fbbde12cb24fa69cegggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\22475ddca4a34279bb743293afd49521gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\53b5b38bd3174de9adf0ef385d676b09gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\bcece2fd93cb48bd9aa3bbc136c03679gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\5e312a4763c74c8abde4e13f98d86442gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\fb6f13a41c744d76aa5917f32729954fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\9d2884d1d0464dc4a78368501e131d5egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\6cb9a994c4234eda8f1dec7b81ccb208gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\0752b434117943819b04294fd425d72agggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\202785de511b44cb81040c291889af44gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\70a45956a86841aba19ace317a160decgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\925f79fe9871419e80ec3a193c68c40fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\a4e739fccf464b0ea19b9b64df346817gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\462d5db6595c4f70a0a3954b1e630138gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\85e2bbccd3804b63af734444ea18109egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\f587927c0e004cfb9166954f05375477gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\0fd0a2190f4f42ad8be64ad81a9b5cc4gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\adf5b1d569d24252a758d1c750423364gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\a034b79b6adc4a0da1eb6c5b2705a726gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\65ab30f9e73b48deabfe40a78bcb5631gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\1ebe84f7c8d84ebc84692666021f69d2gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\43a1e3e09c544035a58b2faf9f425af0gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\00fbd530d92b47d38026add7bb0dc55egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\bdaf4ad3d2754fa6a6a3aa57f01af197gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\4eb836a83b6a44028d1d1a2f086cc068gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\db5f7f88d0144db5a16b38c9c553a76egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\7e9708f67ac84f738892b1357cf1107fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\cd401111e31346baada9a829c8c12e21gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\2b2bdb9e5408424fb537f5a6c076ab08gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\7d7a2bafc1dd4b88825f161f374d50a3gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\a376c75f07a1411693f4174c79274be4gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\8d225291e57844a59aaf7cde26b9187cgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\8fbab3e7f909454bb8b0d0ac2c8d45a1gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\cd699c47379f443fb61cd0df1773439dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\ab383b1f7b76411e80d7826abad9a9d5gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\dd2385835c1d4c0abac4eb37488cf0ffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\1365432e4d244cae8ac7b0da675b6428gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\fd0dda17704e4a35b1518ff2f7e0d14dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\92e6dcc1df254056979ee977f2b1168egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\b39a2b5e1aab4fdaa508391da9a12f63gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\c2d832678f214279a6bcca3b2bc184e0gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\fea0ad96e7984b44bd7491ba5082529fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\ac5401caad494f7fba23bac9e72ff349gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\e783dc28b9a44d0aa04c057652771d94gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\f34dfdb779a14e06aacc5c6ba706e697gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d6621d7aac77454ca6e9e0693387b594gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\070c655067ad4498916ba60554152fe8gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\e8cf87fd2b1442ef858fb4e91b0e001bgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d31506f018094d33a4a222fb7ab176d2gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\b6bb664ce1374cddbd33ce751a2d78a9gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\153b86ba995a4f0e86725b6ce6581d41gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\2cb5e2ad02d8459e9455fb138051911cgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\3ef43172d40648b3b568b9787f5e979agggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\45c3fdaaf2fe47c4a4d06e8b4b22abfagggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\934bd78a8b5240f0932973d004cb6b3agggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\6183b221e7f543c0b83cde2d3860facdgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\2fb85b339630423ab94a9a5928add865gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\c61bb011a8c94987896885f61eba588dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\7126d60ce46f4514b84c0e42e2a34c05gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\1c045a9eedd547e98f2467334cc74f7bgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\053b92e02c034768846b7fdd69e010eagggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\3397d4b5f1e74784a346d0d028b495e8gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\325725219e3249e9a65ee48899f6196fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\46dd96c12d5e48d7b4459783ac470370gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\46b05249f72c4de5b6614ef2f1b34f86gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\9225283f62eb431f88fa421034b0fd75gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\6c969062aa094c5f8f38bcdb9fd6669dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\41191ebb5c7940388424b9a7a855ae81gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\28e0d19b585947f286889f31729fe81cgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\346a1af8988c4d45ae932893e2107a86gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\ae7432fb82be4ac2919f6185d36e60b0gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\83ec91bfc3d94c13b525e31e0ad422eegggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\8cc7a803f50248e98371b5920af992f5gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\03a6ea8abefd4fa89837ed53ce23c61fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\4411722510134c0aac6d1f52f23e0d6dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\eb13cbd89d01482e9aa413dc980a8a8dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\187f540f02d44b8e8a3b9f12c02c566fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\ca01a030b9964a949668ab668d3742cbgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\5cc5f7bb6d3c4591b953907eb3cdd675gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\8e74e0f92f34422494dbb5a4b0ef9900gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\9348f04062f045048f5e88c46846c60fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\c6bfb13e96084a19a4f88cd83d0edd58gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\0d100574315f4a0ba7ac2967ce5d8533gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\b2239067bc3c4010a9851479e1291827gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\e76af297b17d4a27bac7264eb9a76480gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\f0536c87495740228086c6de8b248b1bgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\96ed191cf9c74f22958ec0125630c5begggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d1506116d41d47be9b70b3e46a04e2b5gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\e425dd6f9c4d42b68a40bb273476dd21gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\c54c062c64634fb0bd2514a9ac859f52gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\731efb49027e4dee883008728f347549gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\b8f4cb48548f45faa66c92a75a168785gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d9191109ae264a6fbbc18324b9fcd97bgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\972861bfefaf450eb51b87d9066a1a66gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\fe6a7bd588ac4fcd89c04c885c5d5697gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\e6004a94791e40e8a5a1debf328e2d17gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\16b99fc77298498ba53b043c3b4164fegggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\7a2d3992152d431c888778ab84206e9egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\c74825b801024482bd1932382e1b9109gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\143c84140acd431cb0192522738100a6gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\4d2596f36ac74333bae9cee2877955b5gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\48dd5f9560f942b9a8e3703bd1f8a43egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\a17e27fd965e475c98b0a3c72ef74c91gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\72f30974aafc4b93b6827104b494a72dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\03eadb0429184f558c8532980d35f6b8gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d44ef613b21d4454aee30b1e6788e103gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\38442726cbf24965bba47216cfe54e07gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\8307da0be0784512a72c3bbeae1f521fgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\00ecd195dd6544748aef246e2f1dbf1dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\c73f8d19762f4986a6fd5483b72eb4cdgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\1507236ca36748f59f05c1c1745b912egggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\215b84bb41444744a0bf896360e30b2dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\76afee11fc8a49a9a3e3e77d2c8ecabbgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d70ada7fa3714f1fb575deb823035849gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\b06cdb66012d4f3eabdf4b320fb2a694gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\d78dc1399eb64745be161ddb512bdf45gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\09af81d2e09842d5a8b939075ac58856gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\8ae17c7b5fd546eb89769394fae2368cgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\cd77538165084afe957622249d0d27aagggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\654d6cabcb1c4a1d97ea2a3bcbd16d50gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\08aada5fbfa244439e7d8cdb301d4894gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\79274a43699447f886cf7004a1192ccbgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\bd861f0b53ed4fd7b40051554865d52dgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\a31f6590815f42bebc4be57b1d214e31gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\a1f4c87cc8b34002a55824d4aa4e9801gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\e3c9662f483c456a8cd6054eb7235957gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\f59bced5a6ee4a318b42ce3c2b482310gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\b549162f941a4f8b8e835e9c75a403f6gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\\2291b627f8004cefb04b3482dd6e0b80gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\r\n   at System.IO.FileSystem.FillAttributeInfo(String path, WIN32_FILE_ATTRIBUTE_DATA& data, Boolean returnErrorOnNotFound) in /_/src/System.IO.FileSystem/src/System/IO/FileSystem.Windows.cs:line 224\r\n   at System.IO.FileSystem.DirectoryExists(String path, Int32& lastError) in /_/src/System.IO.FileSystem/src/System/IO/FileSystem.Windows.cs:line 187\r\n   at System.IO.FileSystem.DirectoryExists(String fullPath) in /_/src/System.IO.FileSystem/src/System/IO/FileSystem.Windows.cs:line 181\r\n   at System.IO.FileSystem.CreateDirectory(String fullPath) in /_/src/System.IO.FileSystem/src/System/IO/FileSystem.Windows.cs:line 98\r\n   at System.IO.Directory.CreateDirectory(String path) in /_/src/System.IO.FileSystem/src/System/IO/Directory.cs:line 47\r\n   at System.IO.Tests.Directory_CreateDirectory.Create(String path) in /_/src/System.IO.FileSystem/tests/Directory/CreateDirectory.cs:line 18\r\n   at System.IO.Tests.Directory_CreateDirectory.<>c__DisplayClass26_0.<DirectoryLongerThanMaxLongPathWithExtendedSyntax_ThrowsException>b__1() in /_/src/System.IO.FileSystem/tests/Directory/CreateDirectory.cs:line 267\r\n   at System.AssertExtensions.ThrowsAnyInternal(Action action, Type[] exceptionTypes) in /_/src/CoreFx.Private.TestUtilities/src/System/AssertExtensions.cs:line 164\r\n   at System.AssertExtensions.ThrowsAny[TFirstExceptionType,TSecondExceptionType](Action action) in /_/src/CoreFx.Private.TestUtilities/src/System/AssertExtensions.cs:line 182\r\n   at System.IO.Tests.Directory_CreateDirectory.<DirectoryLongerThanMaxLongPathWithExtendedSyntax_ThrowsException>b__26_0(String path) in /_/src/System.IO.FileSystem/tests/Directory/CreateDirectory.cs:line 267\r\n   at Xunit.Assert.All[T](IEnumerable`1 collection, Action`1 action) in C:\\projects\\xunit\\src\\xunit.assert\\Asserts\\CollectionAsserts.cs:line 36\r\n   at System.IO.Tests.Directory_CreateDirectory.DirectoryLongerThanMaxLongPathWithExtendedSyntax_ThrowsException() in /_/src/System.IO.FileSystem/tests/Directory/CreateDirectory.cs:line 266\r\n```","Url":"https://github.com/dotnet/corefx/issues/39048","RelatedDescription":"Open issue \"ERROR_FILENAME_EXCED_RANGE in FillAttributeInfo\" (#39048)"},{"Id":"462252267","IsPullRequest":false,"CreatedAt":"2019-06-29T01:29:53","Actor":"geoffkizer","Number":"39046","RawContent":null,"Title":"SendAsync_ConcurentSendReceive_Ok test runs very slowly","State":"open","Body":"I often run just the HTTP2 tests with -parallel none and -verbose in order to get a clear picture of what's happening during test execution.\r\n\r\nThe whole HTTP2 test class takes about 53s to run. Over 30s of this is this configurations of this single test.\r\n\r\nIt would be good to make this test run more quickly.","Url":"https://github.com/dotnet/corefx/issues/39046","RelatedDescription":"Open issue \"SendAsync_ConcurentSendReceive_Ok test runs very slowly\" (#39046)"},{"Id":"462250094","IsPullRequest":true,"CreatedAt":"2019-06-29T01:03:29","Actor":"stephentoub","Number":"39045","RawContent":null,"Title":"Avoid extra allocation and interface calls in Append","State":"open","Body":"Small tweak to Enumerable.Append to avoid an unnecessary enumerator allocation, avoid iterating through that enumerator via an interface, and avoid an unnecessary method on a generic class.\r\n\r\nBefore\r\n\r\n|  Method |      Mean |     Error |    StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|-------- |----------:|----------:|----------:|-------:|------:|------:|----------:|\r\n|     One |  26.35 ns | 0.2571 ns | 0.2279 ns | 0.0102 |     - |     - |      64 B |\r\n|     Ten |  90.30 ns | 0.3271 ns | 0.2900 ns | 0.0305 |     - |     - |     192 B |\r\n| Hundred | 589.73 ns | 5.5760 ns | 5.2158 ns | 0.1450 |     - |     - |     912 B |\r\n\r\n\r\nAfter\r\n\r\n|  Method |      Mean |     Error |    StdDev |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\r\n|-------- |----------:|----------:|----------:|-------:|-------:|------:|----------:|\r\n|     One |  25.85 ns | 0.2254 ns | 0.2108 ns | 0.0102 |      - |     - |      64 B |\r\n|     Ten |  66.58 ns | 0.6744 ns | 0.5979 ns | 0.0254 |      - |     - |     160 B |\r\n| Hundred | 209.70 ns | 1.0881 ns | 1.0178 ns | 0.1402 | 0.0005 |     - |     880 B |\r\n\r\n\r\nBenchmark\r\n```C#\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing System.Linq;\r\nusing System.Collections.Generic;\r\n\r\n[MemoryDiagnoser]\r\npublic class Program\r\n{\r\n    static void Main(string[] args) => BenchmarkSwitcher.FromTypes(new[] { typeof(Program) }).Run(args);\r\n\r\n    private IEnumerable<int> _one;\r\n    private IEnumerable<int> _ten;\r\n    private IEnumerable<int> _hundred;\r\n\r\n    [GlobalSetup]\r\n    public void GlobalSetup()\r\n    {\r\n        _one = Enumerable.Empty<int>().Append(1);\r\n\r\n        _ten = Enumerable.Empty<int>();\r\n        for (int i = 0; i < 10; i++) _ten = _ten.Append(i);\r\n\r\n        _hundred = Enumerable.Empty<int>();\r\n        for (int i = 0; i < 100; i++) _hundred = _hundred.Append(i);\r\n    }\r\n\r\n    [Benchmark] public List<int> One() => _one.ToList();\r\n    [Benchmark] public List<int> Ten() => _ten.ToList();\r\n    [Benchmark] public List<int> Hundred() => _hundred.ToList();\r\n}\r\n```\r\n\r\nPer the discussion in https://github.com/dotnet/corefx/pull/38975#discussion_r298195901\r\ncc: @timandy, @maryamariyan ","Url":"https://github.com/dotnet/corefx/pull/39045","RelatedDescription":"Open PR \"Avoid extra allocation and interface calls in Append\" (#39045)"},{"Id":"462239742","IsPullRequest":false,"CreatedAt":"2019-06-28T23:35:00","Actor":"hyspace","Number":"39044","RawContent":null,"Title":"Help needed for wrong result of System.Globalization.IdnMapping.GetAscii()","State":"open","Body":"Hi all,\r\n\r\nWhen using `System.Globalization.IdnMapping.GetAscii`\r\nI got \"wrong\" result for some cases:\r\n```cs\r\nvar mapping = new System.Globalization.IdnMapping();\r\nmapping.GetAscii(\"faß.de\");\r\n// expect \"xn--fa-hia.de\"\r\n// but got \"fass.de\"\r\n```\r\nThis is about the [Deviation Characters](https://www.unicode.org/reports/tr46/#Table_Deviation_Characters) between *IDNA2003* and *IDNA2008*\r\nAccording to [Documentation](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.idnmapping.getascii?view=netframework-4.8),\r\n> * When run on Windows 8, it supports the 2008 version of the IDNA standard outlined by RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol.\r\n> * When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by RFC 3490: Internationalizing Domain Names in Applications (IDNA).\r\n\r\nMy test environment is *Windows 10* and `.Net Framework 4.8`, so I expect result aligned with *IDNA2008*. However, test shows that the result is aligned with *IDNA2003*.\r\n\r\nIs this a documentation mistake, or I'm using the library in a wrong way?","Url":"https://github.com/dotnet/corefx/issues/39044","RelatedDescription":"Open issue \"Help needed for wrong result of System.Globalization.IdnMapping.GetAscii()\" (#39044)"},{"Id":"462205724","IsPullRequest":true,"CreatedAt":"2019-06-28T21:00:11","Actor":"steveharter","Number":"39042","RawContent":null,"Title":"JsonElement null support and serialize ext data without ext prop name","State":"open","Body":"Change the semantics of extension data so that extension data JSON is not nested under the property name containing the extension data; instead the JSON appears as if the property was not missing.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/38769\r\n\r\nAlso fixed:\r\n- A `JsonElement` can be deserialized from a \"null\" literal. A `JsonElement` is a struct, so internally its `ValueKind` property will be `JsonValueKind.Null`. Previous tests that were commented out are now active.\r\n  - The generalized support is that it is now possible to have a struct handle `TokenType.Null`. A test was added for an Int32 converter to treat \"null\" as a value of 0.\r\n- Extension data will now always work with read-ahead functionality used with Streams. Tests were added.\r\n\r\nTODO: sync with this [PR ](https://github.com/dotnet/corefx/pull/39032)to ensure the dictionary naming policy or property naming policy doesn't change the property names in the extension data.","Url":"https://github.com/dotnet/corefx/pull/39042","RelatedDescription":"Open PR \"JsonElement null support and serialize ext data without ext prop name\" (#39042)"},{"Id":"462202044","IsPullRequest":false,"CreatedAt":"2019-06-28T20:48:11","Actor":"safern","Number":"39041","RawContent":null,"Title":"VersionConverter and UriTypeConverter inconsistent behavior wrt full framework","State":"open","Body":"Per @hughbe:\r\n\r\nCouple of things that I would like to point out that are inconsistent between `UriTypeConverter/VersionConverter` and the other type converters in .NET Core:\r\n- They throw `ArgumentNullException` for `CanConvertFrom(null)` whereas .NET Framework returns `false`. I suggest fixing this to be consistent with other type converters.\r\n- They return `false` for `CanConvertFrom(typeof(InstanceDescriptor))` because they don't call their base class `CanConvertFrom` method. See https://github.com/dotnet/corefx/pull/35760. I suggest fixing this\r\n- They don't support `InstanceDescriptor` conversion - should this be added to `VersionConverter`?","Url":"https://github.com/dotnet/corefx/issues/39041","RelatedDescription":"Open issue \"VersionConverter and UriTypeConverter inconsistent behavior wrt full framework\" (#39041)"},{"Id":"462176535","IsPullRequest":true,"CreatedAt":"2019-06-28T20:12:45","Actor":"stephentoub","Number":"39040","RawContent":null,"Title":"Added a few more options to the HttpStress test","State":"closed","Body":"- Ability to specify most options on the command-line.\r\n- Several more client operations, including one with lots of headers and one where the server aborts the connection.","Url":"https://github.com/dotnet/corefx/pull/39040","RelatedDescription":"Closed or merged PR \"Added a few more options to the HttpStress test\" (#39040)"},{"Id":"462121855","IsPullRequest":true,"CreatedAt":"2019-06-28T19:41:19","Actor":"wtgodbe","Number":"39034","RawContent":null,"Title":"[release/3.0] Re-add removed Packaging.props lines related to IntelliSense packages","State":"closed","Body":"cherry-picks https://github.com/dotnet/corefx/pull/39017 into release/3.0 for preview7.\r\n\r\nCC @ericstj @ViktorHofer @carlossanlop ","Url":"https://github.com/dotnet/corefx/pull/39034","RelatedDescription":"Closed or merged PR \"[release/3.0] Re-add removed Packaging.props lines related to IntelliSense packages\" (#39034)"},{"Id":"462176368","IsPullRequest":true,"CreatedAt":"2019-06-28T19:25:23","Actor":"baulig","Number":"39039","RawContent":null,"Title":"Add two new HttpClient tests for a custom Transfer-Encoding.","State":"open","Body":"This ensures that you can add a custom TransferCodingHeaderValue such as for instance `chunked2`:\r\n\r\n   client.DefaultRequestHeaders.TransferEncoding.Add(new TransferCodingHeaderValue(\"chunked2\"));\r\n\r\nWhile the Transfer-Encoding is not used when making a GET request, the current implementation still sends it as a custom HTTP header.","Url":"https://github.com/dotnet/corefx/pull/39039","RelatedDescription":"Open PR \"Add two new HttpClient tests for a custom Transfer-Encoding.\" (#39039)"},{"Id":"462170056","IsPullRequest":false,"CreatedAt":"2019-06-28T19:05:36","Actor":"ahsonkhan","Number":"39037","RawContent":null,"Title":"Add WriteTo convenience APIs on JsonDocument and JsonProperty","State":"open","Body":"Based on the usability study feedback, we realized that having convenience \"write\" APIs on JsonDocument and JsonProperty would be quite useful for users, especially for discovery.\r\n\r\nPeople expect a Write method on the document itself and having to write the root element feels odd.\r\n\r\nWe should also align JsonProperty with JsonElement and add Write method that takes a writer to JsonProperty.\r\n\r\n**Current APIs on `JsonElement`:**\r\n```C#\r\npublic readonly partial struct JsonElement\r\n{\r\n    public void WriteProperty(ReadOnlySpan<byte> utf8PropertyName, Utf8JsonWriter writer) { }\r\n    public void WriteProperty(ReadOnlySpan<char> propertyName, Utf8JsonWriter writer) { }\r\n    public void WriteProperty(string propertyName, Utf8JsonWriter writer) { }\r\n    public void WriteProperty(JsonEncodedText propertyName, Utf8JsonWriter writer) { }\r\n    public void WriteValue(Utf8JsonWriter writer) { }\r\n}\r\n```\r\n\r\n**Proposal:**\r\nPart A) Add write APIs to `JsonDocument` and `JsonProperty`:\r\n```C#\r\npublic sealed partial class JsonDocument : System.IDisposable\r\n{\r\n    public void WriteTo(Utf8JsonWriter writer) { }\r\n}\r\npublic readonly partial struct JsonProperty\r\n{\r\n    public void WriteTo(Utf8JsonWriter writer) { }\r\n}\r\n```\r\nPart B) Optionally, update the APIs on JsonElement for consistency\r\n```C#\r\npublic readonly partial struct JsonElement\r\n{\r\n    // Option 1) Change the API names from \"WriteX\" to be \"WriteAsXTo\"\r\n    public void WriteAsPropertyTo(ReadOnlySpan<byte> utf8PropertyName, Utf8JsonWriter writer) { }\r\n    public void WriteAsPropertyTo(ReadOnlySpan<char> propertyName, Utf8JsonWriter writer) { }\r\n    public void WriteAsPropertyTo(string propertyName, Utf8JsonWriter writer) { }\r\n    public void WriteAsPropertyTo(JsonEncodedText propertyName, Utf8JsonWriter writer) { }\r\n    public void WriteAsValueTo(Utf8JsonWriter writer) { }\r\n\r\n    // Option 2) Remove \"WriteProperty\" and only keep \"WriteValue\", renaming it to \"WriteTo\"\r\n    public void WriteTo(Utf8JsonWriter writer) { }\r\n}\r\n```\r\n\r\n**Sample Usage:**\r\nBefore:\r\n```C#\r\nusing (JsonDocument doc = JsonDocument.Parse(jsonString))\r\n{\r\n    JsonElement root = doc.RootElement;\r\n    root.WriteValue(writer);\r\n}\r\n\r\nusing JsonDocument doc = JsonDocument.Parse(jsonString);\r\nJsonElement root = doc.RootElement;\r\nforeach (JsonProperty property in root.EnumerateObject())\r\n{\r\n    property.Value.WriteProperty(property.Name, writer);\r\n}\r\n```\r\nAfter:\r\n```C#\r\nusing (JsonDocument doc = JsonDocument.Parse(jsonString))\r\n{\r\n    doc.WriteTo(writer);\r\n}\r\n\r\nusing JsonDocument doc = JsonDocument.Parse(jsonString);\r\nJsonElement root = doc.RootElement;\r\nforeach (JsonProperty property in root.EnumerateObject())\r\n{\r\n    property.WriteTo(writer);\r\n}\r\n```\r\n\r\n\r\n**Questions:**\r\n1) Can we remove `WriteProperty` APIs on `JsonElement` and rename `WriteValue` to be` WriteTo`? That is the most consistent/cleanest API shape (both internally with JsonDocument, JsonProperty, etc., and externally with Newtonsoft Json's JToken, and Xml APIs).\r\n1) If we are keeping `WriteProperty` APIs on `JsonElement`, should we re-order the parameters so that the writer comes up first?\r\n\r\nSample implementation:\r\nhttps://github.com/dotnet/corefx/pull/38943/commits/78615e19bf3e7897a6ea1100013626c3a75f4fb3\r\n\r\ncc @bartonjs, @terrajobst, @steveharter, @JeremyKuhne ","Url":"https://github.com/dotnet/corefx/issues/39037","RelatedDescription":"Open issue \"Add WriteTo convenience APIs on JsonDocument and JsonProperty\" (#39037)"},{"Id":"462167274","IsPullRequest":true,"CreatedAt":"2019-06-28T18:57:46","Actor":"krwq","Number":"39036","RawContent":null,"Title":"Do not directly abort connection on GOAWAY","State":"open","Body":"Fixes: https://github.com/dotnet/corefx/issues/39014\r\nFixes: https://github.com/dotnet/corefx/issues/38558\r\nContributes to: https://github.com/dotnet/corefx/issues/39013","Url":"https://github.com/dotnet/corefx/pull/39036","RelatedDescription":"Open PR \"Do not directly abort connection on GOAWAY\" (#39036)"},{"Id":"462141136","IsPullRequest":true,"CreatedAt":"2019-06-28T17:42:38","Actor":"kuns200","Number":"39035","RawContent":null,"Title":"Update MemberDescriptor.cs","State":"open","Body":"Fixing Exception to  ANE\r\n#38985 ","Url":"https://github.com/dotnet/corefx/pull/39035","RelatedDescription":"Open PR \"Update MemberDescriptor.cs\" (#39035)"},{"Id":"462121539","IsPullRequest":true,"CreatedAt":"2019-06-28T16:45:15","Actor":"wtgodbe","Number":"39033","RawContent":null,"Title":"[WIP] Update APICompat baselines","State":"open","Body":"I got this by building once per-framework, and modifying `shims.proj` so that it writes to the baseline files rather than comparing against them. I remember there being some weirdness with that process, so I'm putting this up to see if CI complains before I look further.","Url":"https://github.com/dotnet/corefx/pull/39033","RelatedDescription":"Open PR \"[WIP] Update APICompat baselines\" (#39033)"},{"Id":"462116875","IsPullRequest":true,"CreatedAt":"2019-06-28T16:32:42","Actor":"layomia","Number":"39032","RawContent":null,"Title":"Honor dictionary key policy when serializing","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/38840.\r\n\r\ncc @ahsonkhan @pranavkm ","Url":"https://github.com/dotnet/corefx/pull/39032","RelatedDescription":"Open PR \"Honor dictionary key policy when serializing\" (#39032)"},{"Id":"462062880","IsPullRequest":false,"CreatedAt":"2019-06-28T14:29:53","Actor":"Symbai","Number":"39031","RawContent":null,"Title":"JsonSerializer support for inheirited classes?","State":"open","Body":"```\r\npublic class FooBase\r\npublic class FooA : FooBase\r\npublic class FooB : FooBase\r\nList<FooBase> SerializationObject = new List<FooBase> { new FooA(), new FooB() }\r\n```\r\nSerialized with Newtonsoft.JSON\r\n```\r\nJsonSerializerSettings Settings = new JsonSerializerSettings\r\n{\r\n    SerializationBinder = new KnownTypesBinder\r\n    {\r\n        KnownTypes = new List<Type> { typeof(FooA), typeof(FooB) }\r\n    },\r\n    TypeNameHandling = TypeNameHandling.Objects\r\n};\r\nList<FooBase> FooBases = new List<FooBase>() { new FooA(), new FooB() };\r\nvar json = JsonConvert.SerializeObject(FooBases, Settings);\r\n```\r\nwill be:\r\n`[{\"$type\":\"FooA\",\"NameA\":\"FooA\",\"Name\":\"FooBase\"},{\"$type\":\"FooB\",\"NameB\":\"FooB\",\"Name\":\"FooBase\"}]`\r\n\r\nWhen using System.Text.Json.JsonSerializer to deserialize the json, FooA and FooB are both type of FooBase. Is there a way that JsonSerializer supports inheirited classes? How can I make sure the type will be the same and not the base class it inherits from?\r\n","Url":"https://github.com/dotnet/corefx/issues/39031","RelatedDescription":"Open issue \"JsonSerializer support for inheirited classes?\" (#39031)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"462350535","IsPullRequest":true,"CreatedAt":"2019-06-29T23:22:09","Actor":"fkleuver","Number":"36895","RawContent":null,"Title":"Fix typo in EmitStreamSignKind","State":"open","Body":"Just a small typo fix in an internal enum I happened to stumble across :)","Url":"https://github.com/dotnet/roslyn/pull/36895","RelatedDescription":"Open PR \"Fix typo in EmitStreamSignKind\" (#36895)"},{"Id":"462349393","IsPullRequest":false,"CreatedAt":"2019-06-29T23:01:50","Actor":"RikkiGibson","Number":"36894","RawContent":null,"Title":"When should variance be permitted for nullable type arguments?","State":"open","Body":"I encountered the following couple of scenarios just now:\r\n\r\n```cs\r\n#nullable enable\r\n\r\nusing System.Threading.Tasks;\r\n\r\npublic class C {\r\n    public Task<string?> M1() {\r\n        // warning CS8619: Nullability of reference types in value of type\r\n        // 'Task<string>' doesn't match target type 'Task<string?>'.\r\n        return Task.FromResult(\"hello\");\r\n    }\r\n\r\n    public void M2(Task<string?> task) { }\r\n    public void M3()\r\n    {\r\n        // warning CS8620: Argument of type 'Task<string>' cannot be used for\r\n        // parameter 'task' of type 'Task<string?>' in 'void C.M2(Task<string?> task)'\r\n        // due to differences in the nullability of reference types.\r\n        M2(Task.FromResult(\"hello\"));\r\n    }\r\n}\r\n```\r\n\r\nI see a few fixes users can do for this:\r\n1. change to `Task.FromResult(\"hello\")!`\r\n2. change to `Task.FromResult<string?>(\"hello\")`\r\n3. `Task.FromResult((string?)\"hello\")` (this gets marked as redundant by the IDE)\r\n\r\nIt feels like there should be some way to allow nullable variance of certain type parameters so that such workarounds aren't necessary.","Url":"https://github.com/dotnet/roslyn/issues/36894","RelatedDescription":"Open issue \"When should variance be permitted for nullable type arguments?\" (#36894)"},{"Id":"462323449","IsPullRequest":true,"CreatedAt":"2019-06-29T17:48:45","Actor":"agocke","Number":"36893","RawContent":null,"Title":"Features/nullable dogfood","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36893","RelatedDescription":"Closed or merged PR \"Features/nullable dogfood\" (#36893)"},{"Id":"462296011","IsPullRequest":true,"CreatedAt":"2019-06-29T13:30:05","Actor":"dotnet-bot","Number":"36892","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36892","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36892)"},{"Id":"462284990","IsPullRequest":false,"CreatedAt":"2019-06-29T09:28:54","Actor":"paul1956","Number":"36891","RawContent":null,"Title":"VB Formatting of LineContinuation Wrong after _ ' Comment ","State":"open","Body":"**Version Used**: \r\n16.2.0 Preview 3.0\r\n**Steps to Reproduce**:\r\nType the following into the IDE\r\n```VB\r\n    Private Private ReadOnly s_originCategoryCodeTextExpression As Regex = New Regex(\r\n _  ' Beginning of line and any amount of whitespace.\r\n    \"^\\s*\" _\r\n _ ' Match a [optional project number prefix 'ddd>'], single letter + colon + remaining filename, or\r\n _ ' string with no colon followed by a colon.\r\n      & \"(((?<ORIGIN>(((\\d+>)?[a-zA-Z]?:[^:]*)|([^:]*))):)\" _\r\n _ ' Origin may also be empty. In this case there's no trailing colon.\r\n      & \"|())\" _\r\n _ ' Match the empty string or a string without a colon that ends with a space\r\n      & \"(?<SUBCATEGORY>(()|([^:]*? )))\" _\r\n _ ' Match 'error' or 'warning'.\r\n      & \"(?<CATEGORY>(error|warning))\" _\r\n _ ' Match anything starting with a space that's not a colon/space, followed by a colon. \r\n _ ' Error code is optional in which case \"error\"/\"warning\" can be followed immediately by a colon.\r\n      & \"( \\s*(?<CODE>[^: ]*))?\\s*:\" _\r\n _ ' Whatever's left on this line, including colons.\r\n      & \"(?<TEXT>.*)$\",\r\n       RegexOptions.IgnoreCase)\r\n```\r\n\r\n**Expected Behavior**:\r\nFormatting like C# where lines starting from the second are indented OR a Space _ then enough spaces to indent the comment or code to line up 4 space to the right of \"Private\" OR the comments and blank lines the way they are but the code lines correctly indented.\r\n```C#\r\n    private static readonly Regex s_originCategoryCodeTextExpression = new Regex\r\n        (\r\n        @\"^\\s*\"\r\n        // Match a [optional project number prefix 'ddd>'], single letter + colon + remaining filename, or\r\n        // string with no colon followed by a colon.\r\n        + @\"(((?<ORIGIN>(((\\d+>)?[a-zA-Z]?:[^:]*)|([^:]*))):)\"\r\n        // Origin may also be empty. In this case there's no trailing colon.\r\n        + \"|())\"\r\n        // Match the empty string or a string without a colon that ends with a space\r\n        + \"(?<SUBCATEGORY>(()|([^:]*? )))\"\r\n        // Match 'error' or 'warning'.\r\n        + @\"(?<CATEGORY>(error|warning))\"\r\n        // Match anything starting with a space that's not a colon/space, followed by a colon. \r\n        // Error code is optional in which case \"error\"/\"warning\" can be followed immediately by a colon.\r\n        + @\"( \\s*(?<CODE>[^: ]*))?\\s*:\"\r\n        // Whatever's left on this line, including colons.\r\n        + \"(?<TEXT>.*)$\",\r\n        RegexOptions.IgnoreCase\r\n        );\r\n```\r\n**Actual Behavior**:\r\nThe code is all left aligned with one space before the _","Url":"https://github.com/dotnet/roslyn/issues/36891","RelatedDescription":"Open issue \"VB Formatting of LineContinuation Wrong after _ ' Comment \" (#36891)"},{"Id":"462243489","IsPullRequest":true,"CreatedAt":"2019-06-29T01:30:06","Actor":"dotnet-bot","Number":"36888","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36888","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36888)"},{"Id":"462247897","IsPullRequest":true,"CreatedAt":"2019-06-29T00:39:34","Actor":"JoeRobich","Number":"36890","RawContent":null,"Title":"Expand introduced using statement to include encompassed locals","State":"open","Body":"Track all local variable declarations and last usages. Expand the using statement's contained statements to include local lifetime of encompassed variables.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/35237","Url":"https://github.com/dotnet/roslyn/pull/36890","RelatedDescription":"Open PR \"Expand introduced using statement to include encompassed locals\" (#36890)"},{"Id":"462245294","IsPullRequest":false,"CreatedAt":"2019-06-29T00:15:47","Actor":"ivanbasov","Number":"36889","RawContent":null,"Title":"Port ResultProviders tests to support .NET Core","State":"open","Body":"There happen issues with Expression Evaluator working with .NET Core applications. These issue could be caused either by Roslyn or by Debugger or by CoreClr.\r\n\r\nRoslyn Result Provider tests now are .NET Framework dependent. They are not running against .NET Core. So, it is hard to investigate EE + .NET Core issues.","Url":"https://github.com/dotnet/roslyn/issues/36889","RelatedDescription":"Open issue \"Port ResultProviders tests to support .NET Core\" (#36889)"},{"Id":"462243422","IsPullRequest":true,"CreatedAt":"2019-06-29T00:01:54","Actor":"dotnet-bot","Number":"36887","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36887","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36887)"},{"Id":"462235815","IsPullRequest":true,"CreatedAt":"2019-06-28T23:10:49","Actor":"CyrusNajmabadi","Number":"36886","RawContent":null,"Title":"Relax the rule that tries to get rid of this./me. in Roslyn code.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/36874","Url":"https://github.com/dotnet/roslyn/pull/36886","RelatedDescription":"Open PR \"Relax the rule that tries to get rid of this./me. in Roslyn code.\" (#36886)"},{"Id":"462231282","IsPullRequest":false,"CreatedAt":"2019-06-28T22:45:37","Actor":"lpereira","Number":"36885","RawContent":null,"Title":"Generate IL at compile time for System.Text.RegularExpressions.Regex(constantString, RegexOptions.Compile)","State":"open","Body":"I don't know if this is the right place to suggest this, but here's an idea.  (I thought about doing this in the linker since I saw some people working on optimizations of this kind there, but maybe the compiler is the best place to do this kind of thing.)\r\n\r\nThe framework provides a RegexCompiler that will generate IL during instantiation of a Regex object, and generate dynamic methods to match a regular expression.\r\n\r\nWhat if the compiler could look at the parameter to the constructor to this object, and if it's a constant string, it would use the RegexCompiler from the framework (so no semantic differences would exist), and snatch the IL from there, to create an anonymous object devoid of dynamic methods?\r\n\r\nIn theory this could be done regardless if RegexOptions.Compiled is specified in the flags or not.\r\n\r\nIf the invariant culture flag is also specified, that could be \"baked in\" this anonymous object. (Most code using the Regex objects I've seen here on GitHub do not pass this flag, but it's something that many of them could to match some simpler expressions that do not match culture-dependant classes.)\r\n\r\nThis would (most likely) decrease initialization time for quite a few programs, make those methods available for R2R JITting, etc.","Url":"https://github.com/dotnet/roslyn/issues/36885","RelatedDescription":"Open issue \"Generate IL at compile time for System.Text.RegularExpressions.Regex(constantString, RegexOptions.Compile)\" (#36885)"},{"Id":"462228307","IsPullRequest":false,"CreatedAt":"2019-06-28T22:30:45","Actor":"ryzngard","Number":"36884","RawContent":null,"Title":"Cast is redundant is not suggested for nullable generic type","State":"open","Body":"For the following code, `M1<string?>` can be simplified to `M1`, but is not offered as a fix. \r\n\r\n```C#\r\n#nullable enable\r\nclass Program\r\n{\r\n    void M()\r\n    {\r\n        string? s1 = null;\r\n        string? s2 = M1(s1);\r\n    }\r\n\r\n    static T M1<T>(T t) where T : class? => t;\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36884","RelatedDescription":"Open issue \"Cast is redundant is not suggested for nullable generic type\" (#36884)"},{"Id":"462227184","IsPullRequest":true,"CreatedAt":"2019-06-28T22:25:13","Actor":"agocke","Number":"36883","RawContent":null,"Title":"Revert NullableContextAttribute metadata compaction","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36883","RelatedDescription":"Open PR \"Revert NullableContextAttribute metadata compaction\" (#36883)"},{"Id":"462226347","IsPullRequest":false,"CreatedAt":"2019-06-28T22:20:59","Actor":"vsfeedback","Number":"36882","RawContent":null,"Title":"C# 8 Intellisense \"Introduce 'using' statement\" should use **simple** using statement","State":"open","Body":"VSF_TYPE_MARKDOWNWhen we get the warning &quot;Disposable object created by '' is never disposed&quot;, C# 8 intellisense should us the **simple** using statement ( e.g. using var s = new MemoryStream(); ) instead of the using block statement.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/619119/c-8-intellisense-introduce-using-statement-should.html\nVSTS ticketId: 936507_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 6/25/2019, 01:31 AM (3 days ago): <markdown><p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We’ll provide an update once the issue has been triaged by the product team.</p>\n</markdown>","Url":"https://github.com/dotnet/roslyn/issues/36882","RelatedDescription":"Open issue \"C# 8 Intellisense \"Introduce 'using' statement\" should use **simple** using statement\" (#36882)"},{"Id":"462184310","IsPullRequest":true,"CreatedAt":"2019-06-28T22:10:12","Actor":"dpoeschl","Number":"36875","RawContent":null,"Title":"Fix IntelliCode-related Completion Tests","State":"closed","Body":"Fixing up a mis-merge.","Url":"https://github.com/dotnet/roslyn/pull/36875","RelatedDescription":"Closed or merged PR \"Fix IntelliCode-related Completion Tests\" (#36875)"},{"Id":"462220039","IsPullRequest":true,"CreatedAt":"2019-06-28T21:52:30","Actor":"chsienki","Number":"36881","RawContent":null,"Title":"Don't update analyzed nullability for parameter conversions","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/35012","Url":"https://github.com/dotnet/roslyn/pull/36881","RelatedDescription":"Open PR \"Don't update analyzed nullability for parameter conversions\" (#36881)"},{"Id":"462217241","IsPullRequest":false,"CreatedAt":"2019-06-28T21:41:31","Actor":"gafter","Number":"36880","RawContent":null,"Title":"Nullability rewriter is O(2^n) when visiting converted tuple literals","State":"open","Body":"The generated Nullability rewriter contains a method that begins\r\n\r\n``` c#\r\n        public override BoundNode VisitConvertedTupleLiteral(BoundConvertedTupleLiteral node)\r\n        {\r\n            BoundTupleLiteral sourceTuple = (BoundTupleLiteral)this.Visit(node.SourceTuple);\r\n            ImmutableArray<BoundExpression> arguments = this.VisitList(node.Arguments);\r\n```\r\n\r\nThe bound trees in `node.Arguments` share part of the expression tree with `node.SourceTuple`.  Consequently, they will be visited twice.  When tuples are nested *n* deep, nodes at the leaves will be visited O(2<sup>*n*</sup>) times.\r\n\r\nWe want to avoid repeated visits of a given node, so this needs to be revised.\r\n\r\n/cc @chsienki ","Url":"https://github.com/dotnet/roslyn/issues/36880","RelatedDescription":"Open issue \"Nullability rewriter is O(2^n) when visiting converted tuple literals\" (#36880)"},{"Id":"462214490","IsPullRequest":true,"CreatedAt":"2019-06-28T21:30:42","Actor":"petrroll","Number":"36879","RawContent":null,"Title":"WIP Move refactorings to new set of helpers ","State":"open","Body":"#35525 and #35180","Url":"https://github.com/dotnet/roslyn/pull/36879","RelatedDescription":"Open PR \"WIP Move refactorings to new set of helpers \" (#36879)"},{"Id":"462190725","IsPullRequest":true,"CreatedAt":"2019-06-28T20:10:59","Actor":"ryzngard","Number":"36878","RawContent":null,"Title":"Add tests for C# simplification around NRT","State":"open","Body":"Shows #34723 is currently fixed. However, it looks like simplification for NRT is currently not working. There's an added test that is skipped for now, pending issue filing (or current issue)","Url":"https://github.com/dotnet/roslyn/pull/36878","RelatedDescription":"Open PR \"Add tests for C# simplification around NRT\" (#36878)"},{"Id":"462188518","IsPullRequest":false,"CreatedAt":"2019-06-28T20:03:36","Actor":"CyrusNajmabadi","Number":"36877","RawContent":null,"Title":"'Convert switch statement to expression' loses comments on statements","State":"open","Body":"```c#\r\n\r\n                switch (containingMember)\r\n                {\r\n                    case MethodDeclarationSyntax method:\r\n                        // string M() { return null; }\r\n                        // async Task<string> M() { return null; }\r\n                        // IEnumerable<string> M() { yield return null; }\r\n                        return TryGetReturnType(method.ReturnType, method.Modifiers, onYield);\r\n\r\n                    case LocalFunctionStatementSyntax localFunction:\r\n                        // string local() { return null; }\r\n                        // async Task<string> local() { return null; }\r\n                        // IEnumerable<string> local() { yield return null; }\r\n                        return TryGetReturnType(localFunction.ReturnType, localFunction.Modifiers, onYield);\r\n\r\n                    case PropertyDeclarationSyntax property:\r\n                        // string x { get { return null; } }\r\n                        // IEnumerable<string> Property { get { yield return null; } }\r\n                        return TryGetReturnType(property.Type, modifiers: default, onYield);\r\n\r\n                    default:\r\n                        return null;\r\n                }\r\n```\r\n\r\nGet converted to\r\n\r\n```c#\r\n                return containingMember switch\r\n                {\r\n                    MethodDeclarationSyntax method => TryGetReturnType(method.ReturnType, method.Modifiers, onYield),\r\n                    LocalFunctionStatementSyntax localFunction => TryGetReturnType(localFunction.ReturnType, localFunction.Modifiers, onYield),\r\n                    PropertyDeclarationSyntax property => TryGetReturnType(property.Type, modifiers: default, onYield),\r\n                    _ => null,\r\n                };\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36877","RelatedDescription":"Open issue \"'Convert switch statement to expression' loses comments on statements\" (#36877)"},{"Id":"462184709","IsPullRequest":false,"CreatedAt":"2019-06-28T19:51:55","Actor":"CyrusNajmabadi","Number":"36876","RawContent":null,"Title":"'Convert switch statement to expression' breaks code.","State":"open","Body":"Conversion on:\r\n\r\n```c#\r\n                long target;\r\n                try\r\n                {\r\n                    switch (origin)\r\n                    {\r\n                        case SeekOrigin.Begin:\r\n                            target = offset;\r\n                            break;\r\n\r\n                        case SeekOrigin.Current:\r\n                            target = checked(offset + position);\r\n                            break;\r\n\r\n                        case SeekOrigin.End:\r\n                            target = checked(offset + length);\r\n                            break;\r\n\r\n                        default:\r\n                            throw new ArgumentOutOfRangeException(nameof(origin));\r\n                    }\r\n                }\r\n                catch (OverflowException)\r\n                {\r\n                    throw new ArgumentOutOfRangeException(nameof(offset));\r\n                }\r\n\r\n                if (target < 0)\r\n                {\r\n                    throw new ArgumentOutOfRangeException(nameof(offset));\r\n                }\r\n```\r\n\r\nProduced:\r\n\r\n```c#\r\n                try\r\n                {\r\n                    var target = origin switch\r\n                    {\r\n                        SeekOrigin.Begin => offset,\r\n\r\n                        SeekOrigin.Current => checked(offset + position),\r\n\r\n                        SeekOrigin.End => checked(offset + length),\r\n\r\n                        _ => throw new ArgumentOutOfRangeException(nameof(origin)),\r\n                    };\r\n                }\r\n                catch (OverflowException)\r\n                {\r\n                    throw new ArgumentOutOfRangeException(nameof(offset));\r\n                }\r\n\r\n                if (target < 0)\r\n                {\r\n                    throw new ArgumentOutOfRangeException(nameof(offset));\r\n                }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36876","RelatedDescription":"Open issue \"'Convert switch statement to expression' breaks code.\" (#36876)"},{"Id":"462176654","IsPullRequest":false,"CreatedAt":"2019-06-28T19:26:25","Actor":"CyrusNajmabadi","Number":"36874","RawContent":null,"Title":"Should we disable \"name can be simplified\" for Roslyn IDE for usages of `this.`","State":"open","Body":"Right now there are several thousand messages in the IDE code that `name can be simplified` because of hte usage of `this.Foo` (which could be converted to `Foo`).  \r\n\r\nI don't actually this this is warranted.  I think it's reasonable for `this` to be in the code for added clarity (i.e. i'm accessing some instance property, not some static member or potentially a type somewhere).\r\n\r\nShould we disable/change this to be permissive for IDE code?\r\n\r\nI'm ok with any decision made here.  But i will want us to actually make our code consistent with the rule if the severity is not 'none' since this fills my message list with literally thousands of messages.","Url":"https://github.com/dotnet/roslyn/issues/36874","RelatedDescription":"Open issue \"Should we disable \"name can be simplified\" for Roslyn IDE for usages of `this.`\" (#36874)"},{"Id":"462175990","IsPullRequest":true,"CreatedAt":"2019-06-28T19:24:15","Actor":"CyrusNajmabadi","Number":"36873","RawContent":null,"Title":"Another thousand cleanup suggestions in IDE","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36873","RelatedDescription":"Open PR \"Another thousand cleanup suggestions in IDE\" (#36873)"},{"Id":"462172483","IsPullRequest":false,"CreatedAt":"2019-06-28T19:13:15","Actor":"controlflow","Number":"36872","RawContent":null,"Title":"Missing \"CS8656: Call to non-readonly member from a 'readonly' member results in an implicit copy of 'this'\" warning on pattern-based indexers usage","State":"open","Body":"**Version Used**: \r\n\r\nmaster branch 06/28/2019\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code:\r\n```c#\r\nstruct S {\r\n    public int Count => 0;\r\n    public readonly int this[int index] => 42;\r\n    \r\n    public readonly void M() {\r\n        var t = this[^1]; // missing CS8656\r\n    }\r\n}\r\n\r\nstruct S2 {\r\n    public int Length => 0;\r\n    public /*readonly*/ int Slice(int a, int b) => 1;\r\n    \r\n    public readonly void M() {\r\n        var t = this[..]; // missing CS8656\r\n    }\r\n}\r\n\r\nnamespace System {\r\n  public struct Index {\r\n      public Index(int index, bool fromEnd) { }\r\n      public int GetOffset(int length) => 0;\r\n  }\r\n    \r\n  public struct Range {\r\n      public Range(Index start, Index end) { }\r\n      public Index Start => default;\r\n      public Index End => default;\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nTwo compiler warnings CS8656 at indexer invocations.\r\n\r\n**Actual Behavior**:\r\n\r\nNo warnings.\r\n\r\np.s. `readonly` state of synthesized pattern-based indexer must be the `&&` combination of `readonly` states of the `Count`/`Length` properties and `int` indexer/`Slice()` methods involved in pattern.","Url":"https://github.com/dotnet/roslyn/issues/36872","RelatedDescription":"Open issue \"Missing \"CS8656: Call to non-readonly member from a 'readonly' member results in an implicit copy of 'this'\" warning on pattern-based indexers usage\" (#36872)"},{"Id":"462164683","IsPullRequest":false,"CreatedAt":"2019-06-28T18:50:11","Actor":"vsfeedback","Number":"36871","RawContent":null,"Title":"Reintroduce sequence diagrams generation from c# code","State":"open","Body":"<p>This was part of previous Visual Studio versions and is key to understand/document/share/communicate about existing flows and potential optimizations.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/612434/reintroduce-sequence-diagrams-generation-from-c-co.html\nVSTS ticketId: 927465_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 6/19/2019, 00:40 AM (9 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36871","RelatedDescription":"Open issue \"Reintroduce sequence diagrams generation from c# code\" (#36871)"},{"Id":"462156930","IsPullRequest":false,"CreatedAt":"2019-06-28T18:27:28","Actor":"vsfeedback","Number":"36870","RawContent":null,"Title":"Namespace info for class in tooltip","State":"open","Body":"<p>In a code you can have constructor call:</p> <pre>var obj = new SomeClass()\n</pre><p>When you hover mouse over class name, you see tooltip: &quot;SomeClass.SomeClass(args)&quot;. Obviously unnecessary name duplicate and no info about namespace. It could be more informative to see tooltip like:</p><p><strong>Namespace1.Namespace2</strong></p><p><strong>constructor SomeClass(args)</strong></p><p>Then namespace do not disturb you from reading arguments and we eliminate reading of class name twice (it annoys, esp. with variable width font). Frequently you have in code just constructor calls, so you have no way to quickly get class' namespace.</p> <p>One more improvement is to show &quot;standard&quot; namespaces of .NET in different color (in tooltip).</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/609058/namespace-info-for-class-in-tooltip.html\nVSTS ticketId: 922875_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 6/17/2019, 01:16 AM (11 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36870","RelatedDescription":"Open issue \"Namespace info for class in tooltip\" (#36870)"},{"Id":"462156907","IsPullRequest":true,"CreatedAt":"2019-06-28T18:27:24","Actor":"333fred","Number":"36869","RawContent":null,"Title":"Turn on nullable semantic analysis by default","State":"open","Body":"Commit 1 ties the nullable semantic analysis to whether or not we will run the nullable walker during compilation.\r\nCommit 2 fixes some DebugVerifier asserts caught after the verifier is run over more code.\r\n\r\n@chsienki, in the failed tests from this draft you can see some more of the tuple issues that are caused by turning the feature on.","Url":"https://github.com/dotnet/roslyn/pull/36869","RelatedDescription":"Open PR \"Turn on nullable semantic analysis by default\" (#36869)"},{"Id":"462153324","IsPullRequest":false,"CreatedAt":"2019-06-28T18:16:46","Actor":"CyrusNajmabadi","Number":"36868","RawContent":null,"Title":"Supply formatting options to control location of `:` in multi-line base-lists or constructor initializers","State":"open","Body":"From https://github.com/dotnet/roslyn/pull/36867\r\n\r\n> Can you please open an issue for this? I think it would also be nice to have a similar formatting rule for specifying BaseList of a type declaration.\r\n\r\nWe should have a way to allow users to specify where the `:` should go if an inheritance list is wrapped or a this()/base() list is wrapped.  For example, in Roslyn the vast majority (95%+ of this/base calls include the `:` with the `this/base` if `this/base` is wrapped).\r\n\r\nThere should be options to help enforce this, which woudl then cause warnings for violations by the formatting anlayzer.","Url":"https://github.com/dotnet/roslyn/issues/36868","RelatedDescription":"Open issue \"Supply formatting options to control location of `:` in multi-line base-lists or constructor initializers\" (#36868)"},{"Id":"462148462","IsPullRequest":true,"CreatedAt":"2019-06-28T18:02:49","Actor":"CyrusNajmabadi","Number":"36867","RawContent":null,"Title":"Format this()/base() calls uniformly in the IDE.","State":"open","Body":"It's always been an annoyance of mine how these calls are inconsistent across the IDE.  I did a check to see what the numbers were like, and it was about 350 (across the entire codebase, around 150 in the IDE) of the form:\r\n\r\n```c#\r\npublic Foo(...) :\r\n    this(...)\r\n{\r\n}\r\n```\r\n\r\nAnd about *16,000* of the form:\r\n\r\n```c#\r\npublic Foo(...)\r\n    : this(...)\r\n{\r\n}\r\n```\r\n\r\nThat's less than 3% of the code uses the first form.  So this PR just makes the IDE codebase consistent here on this one style.\r\n\r\nNote: in the future, i'd love a formatting rule that checked fort his (and would be happy to contribute it).  that way you'd get a nice squigle if you didn't write it either on the same line, or in this form.","Url":"https://github.com/dotnet/roslyn/pull/36867","RelatedDescription":"Open PR \"Format this()/base() calls uniformly in the IDE.\" (#36867)"},{"Id":"462143984","IsPullRequest":false,"CreatedAt":"2019-06-28T17:50:33","Actor":"gafter","Number":"36866","RawContent":null,"Title":"Remove reflection now that IRecursivePatternOperation is public","State":"open","Body":"See https://github.com/dotnet/roslyn/pull/36709#discussion_r296939885\r\n\r\nWe should remove this IDE reflection based hack that was added for this API: http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/Extensions/OperationExtensions.cs,64\r\n\r\n`case IOperation iop when iop.GetType().GetInterfaces().Any(i => i.Name == \"IRecursivePatternOperation\"):`\r\n\r\n/cc @mavasani \r\n","Url":"https://github.com/dotnet/roslyn/issues/36866","RelatedDescription":"Open issue \"Remove reflection now that IRecursivePatternOperation is public\" (#36866)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"462343022","IsPullRequest":true,"CreatedAt":"2019-06-29T21:18:10","Actor":"MichalStrehovsky","Number":"7569","RawContent":null,"Title":"Port normalized SpinWait from CoreCLR","State":"open","Body":"This ports yieldprocessornormalized.cpp from CoreCLR to tune spin wait loops in the post-Skylake CPU world.\r\n\r\nThe first commit is literal copy of yieldprocessornormalized.cpp from CoreCLR that was then tweaked to build for Redhawk.\r\n\r\nI then replaced uses of YieldProcessor with the Skylake-aware compat shim.","Url":"https://github.com/dotnet/corert/pull/7569","RelatedDescription":"Open PR \"Port normalized SpinWait from CoreCLR\" (#7569)"},{"Id":"462318480","IsPullRequest":true,"CreatedAt":"2019-06-29T20:24:33","Actor":"MichalStrehovsky","Number":"7568","RawContent":null,"Title":"Fix GetTypeCode of metadata-only enums","State":"closed","Body":"Found this by accident. `underlyingType.TypeHandle.EETypePtr` would box the RuntimeTypeHandle and return EEType of the RuntimeTypeHandle type.\r\n\r\nWhat this code actually wanted to do is to get the EEType of the underlying type.","Url":"https://github.com/dotnet/corert/pull/7568","RelatedDescription":"Closed or merged PR \"Fix GetTypeCode of metadata-only enums\" (#7568)"},{"Id":"462288706","IsPullRequest":true,"CreatedAt":"2019-06-29T18:29:06","Actor":"MichalStrehovsky","Number":"7566","RawContent":null,"Title":"Implement obsolete `Marshal.Write*` APIs","State":"closed","Body":"Because bad APIs come in pairs.","Url":"https://github.com/dotnet/corert/pull/7566","RelatedDescription":"Closed or merged PR \"Implement obsolete `Marshal.Write*` APIs\" (#7566)"},{"Id":"462317380","IsPullRequest":true,"CreatedAt":"2019-06-29T16:22:52","Actor":"MichalStrehovsky","Number":"7567","RawContent":null,"Title":"Implement LayoutClass/LayoutClassPtr/AsAny marshalers","State":"open","Body":"This is a couple marshallers that nobody should be using for anything, but WinForms and System.Drawing uses them for everything. Frankly, it feels like the designers of .NET 1.0 got too excited about marshalling everything with these and someone should have stopped them.\r\n\r\nThese marshallers are for marshalling abritrary reference types to native code.\r\n\r\nThis is enough to get basic WinForms apps running. E.g. the MatchingGame .NET Sample works with this. Serious WinForms apps will eventually hit missing COM support, but at least the basics work now and it's enough to get a read on things like startup time.","Url":"https://github.com/dotnet/corert/pull/7567","RelatedDescription":"Open PR \"Implement LayoutClass/LayoutClassPtr/AsAny marshalers\" (#7567)"},{"Id":"462130373","IsPullRequest":true,"CreatedAt":"2019-06-28T22:19:01","Actor":"csnewman","Number":"7565","RawContent":null,"Title":"Remove extra bracket","State":"closed","Body":"Fixes arm building","Url":"https://github.com/dotnet/corert/pull/7565","RelatedDescription":"Closed or merged PR \"Remove extra bracket\" (#7565)"},{"Id":"461738560","IsPullRequest":false,"CreatedAt":"2019-06-28T20:45:36","Actor":"csnewman","Number":"7563","RawContent":null,"Title":"arm registers do not fit into unw_context_t","State":"closed","Body":"```\r\nIn file included from /home/csnewman/corert/src/Native/Runtime/unix/UnwindHelpers.cpp:22:\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2328:3: error: static_assert failed \"arm registers do not fit into unw_context_t\"\r\n  static_assert((check_fit<Registers_arm, unw_context_t>::does_fit),\r\n  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2444:32: error: out-of-line definition of 'getRegisterLocation' does not match any\r\n      declaration in 'libunwind::Registers_arm'\r\ninline uint32_t Registers_arm::getRegisterLocation(int regNum) const {\r\n                               ^~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/UnwindHelpers.cpp.o] Error 1\r\n\r\n```","Url":"https://github.com/dotnet/corert/issues/7563","RelatedDescription":"Closed issue \"arm registers do not fit into unw_context_t\" (#7563)"},{"Id":"461791927","IsPullRequest":true,"CreatedAt":"2019-06-28T00:27:04","Actor":"jkotas","Number":"7564","RawContent":null,"Title":"Fix ARM build break","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7564","RelatedDescription":"Closed or merged PR \"Fix ARM build break\" (#7564)"},{"Id":"461402520","IsPullRequest":true,"CreatedAt":"2019-06-27T13:24:43","Actor":"jkotas","Number":"7561","RawContent":null,"Title":"Fix ETW GCEvents","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7561","RelatedDescription":"Closed or merged PR \"Fix ETW GCEvents\" (#7561)"},{"Id":"461406438","IsPullRequest":false,"CreatedAt":"2019-06-27T09:01:30","Actor":"OmerRaviv","Number":"7562","RawContent":null,"Title":"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API","State":"open","Body":"I find that one of the biggest challenges in working with the CLR Profiling API is attempting to mitigate the risk that a bug in my IL-rewriting logic may produce invalid IL, which would in turn produce catastrophic results at runtime (ExecutionEngineException, InvalidProgramException, etc). \r\n\r\nI think it could be extremely helpful if profiler vendors had a documented way to run ILVerify/PEVerify on assemblies after preforming IL-rewriting / ReJIT. This method could be used as part of integration testing, and also as a very useful debugging aid.\r\n\r\n[Someone asked on stackoverflow](https://stackoverflow.com/questions/55793865/creating-a-pe-file-using-imetadataemitsave-tomemory-tostream) if this could be accomplished using `IMetadataEmit::SaveToStream`, but unfortunately that method would only write out the .NET module, not a complete PE that can then be fed to ILVerify/PEVerify.\r\n\r\nIf anyone has an idea how this could be accomplished, I’d be more than happy to attempt it, and then once I succeed, to open-source/document the approach.\r\n\r\n/cc  @noahfalk @davmason @jkotas ","Url":"https://github.com/dotnet/corert/issues/7562","RelatedDescription":"Open issue \"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API\" (#7562)"},{"Id":"461341179","IsPullRequest":true,"CreatedAt":"2019-06-27T08:54:05","Actor":"Dotnet-GitSync-Bot","Number":"7560","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @stephentoub @jkotas","Url":"https://github.com/dotnet/corert/pull/7560","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7560)"},{"Id":"461084607","IsPullRequest":true,"CreatedAt":"2019-06-27T06:29:12","Actor":"Dotnet-GitSync-Bot","Number":"7558","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky @Gnbrkm41 @tannergooding @safern @jkotas @tarekgh @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7558","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7558)"},{"Id":"461233093","IsPullRequest":true,"CreatedAt":"2019-06-27T03:11:36","Actor":"jkotas","Number":"7559","RawContent":null,"Title":"Try VS2019 CI queue","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7559","RelatedDescription":"Closed or merged PR \"Try VS2019 CI queue\" (#7559)"},{"Id":"460640977","IsPullRequest":true,"CreatedAt":"2019-06-26T19:49:25","Actor":"trylek","Number":"7557","RawContent":null,"Title":"Small SuperIlc fix for wrong architecture identifier","State":"closed","Body":"When analyzing the Pri#1 CPAOT results I noticed that some of the\r\n\"issues.targets\" exclusions got silently ignored and I tracked it\r\ndown to incorrect architecture specification - I apparently used\r\n\"amd64\" instead of the expected \"x64\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7557","RelatedDescription":"Closed or merged PR \"Small SuperIlc fix for wrong architecture identifier\" (#7557)"},{"Id":"460638909","IsPullRequest":true,"CreatedAt":"2019-06-26T19:44:15","Actor":"trylek","Number":"7556","RawContent":null,"Title":"Remove the Crossgen-specific VSD flag from CPAOT","State":"closed","Body":"Based on JanK's advice I have slightly refactored CPAOT to free it\r\nfrom blindly reusing the Crossgen hack of using a special bit flag\r\nto pass information around within the ZAP logic. As part of the cleanup\r\nI have also removed the AppendMangledName override in\r\nDelayLoadMethodHelperImport as it wasn't adding any extra\r\nuseful information.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7556","RelatedDescription":"Closed or merged PR \"Remove the Crossgen-specific VSD flag from CPAOT\" (#7556)"},{"Id":"459991969","IsPullRequest":true,"CreatedAt":"2019-06-24T21:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7555","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @safern @HermanEldering @Marusyk @siriak @MarcoRossignoli","Url":"https://github.com/dotnet/corert/pull/7555","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7555)"},{"Id":"459900202","IsPullRequest":false,"CreatedAt":"2019-06-24T13:43:53","Actor":"kvittokonito","Number":"7554","RawContent":null,"Title":"NuGet package not being built","State":"open","Body":"As far as I can tell, no new NuGet package has been deployed to MyGet for months, is this intentional?\r\n\r\nI would rather not have to built and deploy CoreRT from source into our CI/CD pipeline to take advantage of fixes like #7526.","Url":"https://github.com/dotnet/corert/issues/7554","RelatedDescription":"Open issue \"NuGet package not being built\" (#7554)"},{"Id":"459595649","IsPullRequest":true,"CreatedAt":"2019-06-23T20:12:48","Actor":"Suchiman","Number":"7553","RawContent":null,"Title":" Clear stacktrace before throwing exceptions","State":"closed","Body":"fixes #5183","Url":"https://github.com/dotnet/corert/pull/7553","RelatedDescription":"Closed or merged PR \" Clear stacktrace before throwing exceptions\" (#7553)"},{"Id":"459515304","IsPullRequest":true,"CreatedAt":"2019-06-23T20:11:58","Actor":"timmydo","Number":"7551","RawContent":null,"Title":"add StaticallyLinked csproj property for unix","State":"closed","Body":"Add `<StaticallyLinked>true</StaticallyLinked>` to your csproj to compile a statically liked binary. ","Url":"https://github.com/dotnet/corert/pull/7551","RelatedDescription":"Closed or merged PR \"add StaticallyLinked csproj property for unix\" (#7551)"},{"Id":"459515874","IsPullRequest":true,"CreatedAt":"2019-06-23T19:18:22","Actor":"timmydo","Number":"7552","RawContent":null,"Title":"Devcontainer files for vscode cross-platform development.","State":"closed","Body":"https://code.visualstudio.com/docs/remote/containers is a feature that makes it a lot easier to do linux development from a windows machine in vs code. Basically, when you launch VS Code in the corert directory, it will create a docker image with the appropriate tools installed so you can run `./build.sh` without needing to install any pre-reqs.","Url":"https://github.com/dotnet/corert/pull/7552","RelatedDescription":"Closed or merged PR \"Devcontainer files for vscode cross-platform development.\" (#7552)"},{"Id":"458971234","IsPullRequest":true,"CreatedAt":"2019-06-23T03:18:19","Actor":"Suchiman","Number":"7545","RawContent":null,"Title":"Implement GetTotalAllocatedBytes","State":"closed","Body":"Implements `GetTotalAllocatedBytes`\r\ncontributes to #5680","Url":"https://github.com/dotnet/corert/pull/7545","RelatedDescription":"Closed or merged PR \"Implement GetTotalAllocatedBytes\" (#7545)"},{"Id":"459508048","IsPullRequest":true,"CreatedAt":"2019-06-23T02:46:21","Actor":"Suchiman","Number":"7550","RawContent":null,"Title":"Ports dotnet/coreclr#25216 to CoreRT","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/pull/25216 (gc only port)","Url":"https://github.com/dotnet/corert/pull/7550","RelatedDescription":"Closed or merged PR \"Ports dotnet/coreclr#25216 to CoreRT\" (#7550)"},{"Id":"459481444","IsPullRequest":true,"CreatedAt":"2019-06-22T14:53:11","Actor":"MichalStrehovsky","Number":"7549","RawContent":null,"Title":"Add support for x86/x64 hardware intrinsics","State":"open","Body":"RyuJIT has had support for HW intrinsics for a while but we didn't enable them (besides SSE/SSE2) because the way RyuJIT implements them only suits JIT environments: RyuJIT is not able to generate code that switches based on the intrinsics supported by the CPU at runtime - the intrinsic support level is hardcoded at compilation time. This works for a JIT, but not so well for AOT.\r\n\r\nFollowing scheme is used to adapt this for AOT compilation:\r\n* We tell RyuJIT all non-VEX intrinsics are supported.\r\n* We intercept the `IsSupported` property calls on the individual intrinsic classes and instead of telling RyuJIT the `IsSupported` methods are intrinsics (that RyuJIT would expand to a constant `true` based on the flags we passed to RyuJIT), we treat them as normal method calls.\r\n* We rewrite the IL of the `IsSupported` method to read a value from an RVA static field and check for a bit (each bit representing a different ISA extension).\r\n* At process startup we initialize the RVA static field with bits based on a CPUID check.","Url":"https://github.com/dotnet/corert/pull/7549","RelatedDescription":"Open PR \"Add support for x86/x64 hardware intrinsics\" (#7549)"},{"Id":"459366444","IsPullRequest":false,"CreatedAt":"2019-06-22T01:28:46","Actor":"tim241","Number":"7548","RawContent":null,"Title":"async issue","State":"closed","Body":"I'm developing an application which uses `youtube-dl` for some of it's functionality\r\n\r\nhowever, I get a different result when using a build from `dotnet build -c Release`  and the corert,\r\n\r\n`dotnet build -c Release`:\r\n![cmd_dj5LUjFmF3](https://user-images.githubusercontent.com/18737914/59950014-196a6b80-9475-11e9-9bee-5238114dd27e.png)\r\n\r\ncorert:\r\n![cmd_aFvdtYM0vh](https://user-images.githubusercontent.com/18737914/59950038-29824b00-9475-11e9-845f-38d77661cc5a.png)\r\n\r\nrelevant code:\r\n[main](https://github.com/tim241/corert-async-bug/blob/master/AudioControlServer/Program.cs)\r\n[async function](https://github.com/tim241/corert-async-bug/blob/master/YoutubeCandyWrapper/AudioDownloader.cs#L72-L108)\r\n\r\n# How to reproduce\r\n* `git clone https://github.com/tim241/corert-async-bug`\r\n* install youtube-dl and add it to PATH\r\n* use `dotnet publish -c Release -r win-x64` (in the `AudioControlServer` folder) to build for the corert\r\n\r\nI'm not sure why the corert is giving me a different result, maybe it doesn't fill the `JsonList`?","Url":"https://github.com/dotnet/corert/issues/7548","RelatedDescription":"Closed issue \"async issue\" (#7548)"},{"Id":"459012632","IsPullRequest":true,"CreatedAt":"2019-06-21T14:12:31","Actor":"jkotas","Number":"7547","RawContent":null,"Title":"Make acquiring cache size optional","State":"closed","Body":"Contributes to #7524","Url":"https://github.com/dotnet/corert/pull/7547","RelatedDescription":"Closed or merged PR \"Make acquiring cache size optional\" (#7547)"},{"Id":"458992661","IsPullRequest":true,"CreatedAt":"2019-06-21T14:09:17","Actor":"jkotas","Number":"7546","RawContent":null,"Title":"Port dotnet/coreclr#25130 to CoreRT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7546","RelatedDescription":"Closed or merged PR \"Port dotnet/coreclr#25130 to CoreRT\" (#7546)"},{"Id":"458955125","IsPullRequest":true,"CreatedAt":"2019-06-21T13:49:14","Actor":"jkotas","Number":"7544","RawContent":null,"Title":"Rename task name to avoid collisions with ILLinker task name","State":"closed","Body":"Fixes #7543","Url":"https://github.com/dotnet/corert/pull/7544","RelatedDescription":"Closed or merged PR \"Rename task name to avoid collisions with ILLinker task name\" (#7544)"},{"Id":"458913296","IsPullRequest":false,"CreatedAt":"2019-06-21T13:49:14","Actor":"Suchiman","Number":"7543","RawContent":null,"Title":"Instructions on how to use CoreRT don't work anymore","State":"closed","Body":"https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built\r\n```\r\nMicrosoft.NETCore.Native.Publish.targets(82,5): error MSB4064:\r\nThe DotNetAppHostExecutableName parameter is not supported by the ComputeManagedAssemblies task.\r\nMake sure the parameter is present in the task and it is a definable public instance property.\r\n```\r\nWould also be nice to update the instructions for `netcoreapp3.0` at the same time.","Url":"https://github.com/dotnet/corert/issues/7543","RelatedDescription":"Closed issue \"Instructions on how to use CoreRT don't work anymore\" (#7543)"},{"Id":"458791412","IsPullRequest":true,"CreatedAt":"2019-06-20T19:20:57","Actor":"Dotnet-GitSync-Bot","Number":"7542","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @safern @stephentoub","Url":"https://github.com/dotnet/corert/pull/7542","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7542)"},{"Id":"458713096","IsPullRequest":false,"CreatedAt":"2019-06-20T17:25:31","Actor":"hhblaze","Number":"7541","RawContent":null,"Title":"XML DeSerializazion error","State":"closed","Body":"Only after running native executable (standard .NetCore works)\r\n\r\n```\r\npublic class SerClass\r\n    {\r\n        public SerClass()\r\n        {\r\n            Name = String.Empty;\r\n            MinimalVersion = \"0\";\r\n            MaximalVersion = \"40001212180000\";\r\n            Version = \"200810101800\";\r\n            Path = String.Empty;\r\n            Minimal = 0;\r\n        }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public string MinimalVersion { get; set; }\r\n\r\n\r\n        public string MaximalVersion { get; set; }\r\n\r\n        public string Version { get; set; }\r\n\r\n\r\n        public string Path { get; set; }\r\n\r\n\r\n        public byte[] Zipped { get; set; }\r\n\r\n\r\n        public long Minimal { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n static void TestXmlSerialization()\r\n        {\r\n            try\r\n            {\r\n                SerClass ai = new SerClass()\r\n                {\r\n                    Minimal = 4568654,\r\n                    Name = \"addinname\",\r\n                    Path = \"pathtozipfile\",\r\n                    MaximalVersion = \"smv\",\r\n                    MinimalVersion = \"sminvc\",\r\n                    Version = \" dsfsdf\",\r\n                    Zipped = new byte[] { 1, 2, 3 }\r\n                };\r\n\r\n                Console.WriteLine(\"---se\");\r\n                var sxml = SerializeXml(ai);\r\n                Console.WriteLine(sxml);\r\n                Console.WriteLine(\"---de\");\r\n                var ai1 = DeserializeXml<SerClass>(sxml);\r\n                Console.WriteLine(\"---done\");\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex.ToString());\r\n            }\r\n\r\n            Console.ReadLine();\r\n           \r\n        }\r\n```\r\n```\r\n\r\n  public static string SerializeXml(this object objectForSerialization)\r\n        {\r\n            try\r\n            {\r\n                System.Xml.Serialization.XmlSerializer xs = new System.Xml.Serialization.XmlSerializer(objectForSerialization.GetType());\r\n\r\n                string r = String.Empty;\r\n\r\n                using (System.IO.StringWriter wr = new System.IO.StringWriter())\r\n                {\r\n                    xs.Serialize(wr, objectForSerialization);\r\n                    r = wr.GetStringBuilder().ToString();\r\n                    wr.Close();\r\n                }\r\n\r\n                return r;\r\n            }\r\n            catch (Exception ex)\r\n            {                \r\n                throw ex;\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        public static T DeserializeXml<T>(this string str)\r\n        {\r\n            try\r\n            {\r\n                System.Xml.Serialization.XmlSerializer xs = new System.Xml.Serialization.XmlSerializer(typeof(T));\r\n\r\n                object r = null;\r\n                using (System.IO.StringReader sr = new System.IO.StringReader(str))\r\n                {\r\n                    r = xs.Deserialize(new System.IO.StringReader(str));\r\n                    sr.Close();\r\n                }\r\n\r\n                return (T)r;\r\n            }\r\n            catch (Exception ex)\r\n            {                \r\n                throw ex;\r\n            }\r\n            \r\n        }\r\n```\r\n\r\n\r\nResult:\r\n\r\n```\r\n---se\r\n<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<SerClass xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Name>addinname</Name>\r\n  <MinimalVersion>sminvc</MinimalVersion>\r\n  <MaximalVersion>smv</MaximalVersion>\r\n  <Version> dsfsdf</Version>\r\n  <Path>pathtozipfile</Path>\r\n  <Zipped>AQID</Zipped>\r\n  <Minimal>4568654</Minimal>\r\n</SerClass>\r\n---de\r\nSystem.InvalidOperationException: There is an error in XML document (2, 2). ---> EETypeRva:0x018729F8(System.Reflection.MissingRuntimeArtifactException): MakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'System.Xml.Serialization.ReflectionXmlSerializationReaderHelper.GetSetMemberValueDelegateWithType<GpsCarControl.LicenceServer.SerClass,System.Int64>(System.Reflection.MemberInfo)' For more information, please visit http://go.microsoft.com/fwlink/?LinkID=616868\r\n   at Internal.Reflection.Core.Execution.ExecutionEnvironment.GetMethodInvoker(RuntimeTypeInfo, QMethodDefinition, RuntimeTypeInfo[], MemberInfo) + 0x148\r\n   at System.Reflection.Runtime.MethodInfos.NativeFormat.NativeFormatMethodCommon.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0x50\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.get_MethodInvoker() + 0xa8\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.MakeGenericMethod(Type[]) + 0x104\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GetSetMemberValueDelegate(Object, String) + 0x152\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteLiteralStructMethod(StructMapping, Boolean, Boolean, String) + 0x905\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteElement(ElementAccessor, Boolean, Boolean, Boolean, String, Int32, Int32, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.Member) + 0x462\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElementsIf(ReflectionXmlSerializationReader.Member[], ReflectionXmlSerializationReader.Member, UnknownNodeAction, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.CheckTypeSource) + 0x30e\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GenerateTypeElement(XmlTypeMapping) + 0x1a9\r\n   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader, String, XmlDeserializationEvents) + 0x2e0\r\n```","Url":"https://github.com/dotnet/corert/issues/7541","RelatedDescription":"Closed issue \"XML DeSerializazion error\" (#7541)"},{"Id":"457733189","IsPullRequest":true,"CreatedAt":"2019-06-19T00:16:53","Actor":"jkotas","Number":"7540","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7540","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7540)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"462350708","IsPullRequest":false,"CreatedAt":"2019-06-29T23:25:42","Actor":"mattleibow","Number":"3376","RawContent":null,"Title":"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.","State":"open","Body":"I am trying to use Ubuntu 18.04 to test some things, and I can use any of the newer .NET Core SDKs.\r\n\r\nI just installed a fresh VM with 18.04, and [installed my usual tools](https://gist.github.com/mattleibow/7e02a32193fb9bb14069bedb7384205e). I then try and build SkiaSharp, and then the .NET Standard projects and Tizen fail to build with the same error.\r\n\r\nI can roll back to dotnet-sdk-2.1.105, and that seems to work fine. As soon as I go later, then it fails. I tried installing a different version of dotnet 2.2, but I only have one for some reason. Sure, I could install it manually and all that. But, who wants to do that - and I am not even sure it is going to work.\r\n\r\nHere is my apt-search output: https://gist.github.com/mattleibow/935de7d22b24cfcf3ae9ab0c16b1908f\r\n\r\nWhat is the reason for these failures? My code was working - as it is building just fine with 2.1.105, and then I bump up just a fraction and boom?\r\n\r\nBuild Errors:\r\n\r\n```\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n\r\n...\r\n\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3376","RelatedDescription":"Open issue \"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.\" (#3376)"},{"Id":"462344960","IsPullRequest":true,"CreatedAt":"2019-06-29T21:48:07","Actor":"fadimounir","Number":"3375","RawContent":null,"Title":"Disable R2R compilations for non-exe projects","State":"open","Body":"Fixes #3364","Url":"https://github.com/dotnet/sdk/pull/3375","RelatedDescription":"Open PR \"Disable R2R compilations for non-exe projects\" (#3375)"},{"Id":"462296170","IsPullRequest":true,"CreatedAt":"2019-06-29T12:04:14","Actor":"dotnet-maestro[bot]","Number":"3374","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3374","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3374)"},{"Id":"462173148","IsPullRequest":true,"CreatedAt":"2019-06-29T00:54:45","Actor":"nugetlurker","Number":"3370","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3370","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3370)"},{"Id":"462173165","IsPullRequest":true,"CreatedAt":"2019-06-29T00:44:54","Actor":"nugetlurker","Number":"3371","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3371","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3371)"},{"Id":"462244182","IsPullRequest":true,"CreatedAt":"2019-06-29T00:07:02","Actor":"swaroop-sridhar","Number":"3373","RawContent":null,"Title":"Always publish the AppHost","State":"open","Body":"Always copy the AppHost from intermediate to publish directory in order to ensure that the sequence\r\n    dotnet publish /p:PublishSingleFile=true\r\n    dotnet publish /p:PublishSingleFile=false\r\nplaces the correct unbundled apphost in the publish directory.\r\n\r\nFixes #3337","Url":"https://github.com/dotnet/sdk/pull/3373","RelatedDescription":"Open PR \"Always publish the AppHost\" (#3373)"},{"Id":"460676784","IsPullRequest":true,"CreatedAt":"2019-06-28T20:55:16","Actor":"dsplaisted","Number":"3355","RawContent":null,"Title":"Provide ResolvedFrameworkReferences for VS to populate Solution Explorer","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3355","RelatedDescription":"Closed or merged PR \"Provide ResolvedFrameworkReferences for VS to populate Solution Explorer\" (#3355)"},{"Id":"462173177","IsPullRequest":true,"CreatedAt":"2019-06-28T19:15:28","Actor":"nugetlurker","Number":"3372","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/3.0.1xx branch","Url":"https://github.com/dotnet/sdk/pull/3372","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3372)"},{"Id":"462114199","IsPullRequest":true,"CreatedAt":"2019-06-28T17:50:33","Actor":"johnbeisner","Number":"3369","RawContent":null,"Title":"WIP: Merge master to release/3.0.1xx for preview7 - SDK","State":"closed","Body":"Merge master to release/3.0.1xx for preview7\r\n\r\nCommonly referred to as the 'snap'","Url":"https://github.com/dotnet/sdk/pull/3369","RelatedDescription":"Closed or merged PR \"WIP: Merge master to release/3.0.1xx for preview7 - SDK\" (#3369)"},{"Id":"462002047","IsPullRequest":true,"CreatedAt":"2019-06-28T14:00:09","Actor":"dotnet-maestro[bot]","Number":"3368","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190627.39\r\n- **Date Produced**: 6/28/2019 2:55 AM\r\n- **Commit**: 247c0290c554a68dd3e560dd88fb0da26353d9d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19327.39\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3368","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3368)"},{"Id":"461375402","IsPullRequest":true,"CreatedAt":"2019-06-28T01:25:44","Actor":"dsplaisted","Number":"3359","RawContent":null,"Title":"Require manifests in runtime and targeting packs","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3359","RelatedDescription":"Closed or merged PR \"Require manifests in runtime and targeting packs\" (#3359)"},{"Id":"461489674","IsPullRequest":true,"CreatedAt":"2019-06-27T18:49:34","Actor":"dotnet-maestro[bot]","Number":"3360","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3360","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3360)"},{"Id":"461682812","IsPullRequest":false,"CreatedAt":"2019-06-27T18:25:33","Actor":"heng-liu","Number":"3367","RawContent":null,"Title":"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)","State":"open","Body":"Running \"dotnet publish\" on a console projects failed when GeneratePackageOnBuild is true.\r\ndotnet --version                                                                                                                                                                                                                                                                                          3.0.100-preview6-012264\r\nIt seems Microsoft.NET.Publish.targets skips build when  GeneratePackageOnBuild is true.\r\n\r\n**Steps to reproduce:**\r\n1.install .NETCore SDK 3.0.100-preview6-012264\r\n2.run \"dotnet new console\" to create a project A\r\n3.add \"`<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`\" in A.csproj PropertyGroup and save.\r\n4.run \"dotnet publish A.csproj\"\r\n\r\n**Expected behavior:**\r\nPublish successfully.\r\n**Actual behavior:**\r\nFailed with following error messages:\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.dll\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.deps.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.pdb\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.runtimeconfig.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\obj\\Debug\\netcoreapp3.0\\A.exe\" because it was not found. [C:\\repos\\A\\A.csproj]","Url":"https://github.com/dotnet/sdk/issues/3367","RelatedDescription":"Open issue \"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)\" (#3367)"},{"Id":"461681875","IsPullRequest":false,"CreatedAt":"2019-06-27T18:23:37","Actor":"terrajobst","Number":"3366","RawContent":null,"Title":"Preview 7 still requires a private feed","State":"open","Body":"In tactics @livarcocc said that Preview 7 shouldn't require a private feed. However, you can't build `xunit` right now:\r\n\r\n> $ dotnet new xunit -o xunit30\r\n> The template \"xUnit Test Project\" was created successfully.\r\n> \r\n> Processing post-creation actions...\r\n> Running 'dotnet restore' on xunit30\\xunit30.csproj...\r\n> T:\\xunit30\\xunit30.csproj : error NU1102: Unable to find package Microsoft.NETCore.App with version (>= 3.0.0-preview7-27826-04)\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 70 version(s) in nuget.org [ Nearest version: 3.0.0-preview6-27804-01 ]\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in dotnet.myget.org roslyn\r\n> Restore failed in 952.45 ms for T:\\xunit30\\xunit30.csproj.\r\n> \r\n> Restore failed.\r\n> Post action failed.\r\n> Description: Restore NuGet packages required by this project.\r\n> Manual instructions: Run 'dotnet restore'\r\n\r\nThat seems like a bug, right?\r\n\r\nNote, these templates work:\r\n\r\n* Restore completed in 32.51 ms for T:\\netcore3\\console\\console.csproj.\r\n* Restore completed in 40.65 ms for T:\\netcore3\\classlib\\classlib.csproj.\r\n* Restore completed in 32.51 ms for T:\\netcore3\\winforms\\winforms.csproj.\r\n* Restore completed in 32.48 ms for T:\\netcore3\\wpf\\wpf.csproj.\r\n* Restore completed in 32.49 ms for T:\\netcore3\\mvc\\mvc.csproj.\r\n\r\n<details>\r\n<summary>dotnet --info</summary>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012650\r\n Commit:    b959696aad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18912\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012650\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012650 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19326.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>","Url":"https://github.com/dotnet/sdk/issues/3366","RelatedDescription":"Open issue \"Preview 7 still requires a private feed\" (#3366)"},{"Id":"461680983","IsPullRequest":false,"CreatedAt":"2019-06-27T18:21:55","Actor":"pranavkm","Number":"3365","RawContent":null,"Title":"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true","State":"open","Body":"Based on https://github.com/aspnet/AspNetCore/issues/11636.\r\n\r\nhttps://github.com/dotnet/sdk/pull/3255 causes publish to fail when a project has project references. Treating `NoBuild` and `GeneratePackageOnBuild` as equivalent causes project references to [stop building](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L74-L78).\r\n\r\nRepro steps:\r\n\r\n* Clone https://github.com/pranavkm/repro/tree/publish-p2p/\r\n* Call `dotnet publish` on mvcapp\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3365","RelatedDescription":"Open issue \"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true\" (#3365)"},{"Id":"461651868","IsPullRequest":false,"CreatedAt":"2019-06-27T17:19:02","Actor":"fadimounir","Number":"3364","RawContent":null,"Title":"Block R2R compilation for library projects","State":"open","Body":"Publish on library is a strange case already and trips people up a lot.\r\n\r\nIt could also be a source of problems if some lib developer publishes R2R for a certain platform/arch, and another app developer uses that lib on a different target","Url":"https://github.com/dotnet/sdk/issues/3364","RelatedDescription":"Open issue \"Block R2R compilation for library projects\" (#3364)"},{"Id":"461646733","IsPullRequest":true,"CreatedAt":"2019-06-27T17:07:51","Actor":"dotnet-bot","Number":"3363","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3363","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3363)"},{"Id":"461617180","IsPullRequest":false,"CreatedAt":"2019-06-27T16:04:24","Actor":"ericstj","Number":"3362","RawContent":null,"Title":"Conflict resolution broken for self-contained APP when packages have same version as shared framework","State":"open","Body":"The hardcoded list here is now broken:\r\nhttps://github.com/dotnet/sdk/blob/ec0d2190853afd6c6a8a410d7dc386a9f1ca391b/src/Tasks/Microsoft.NET.Build.Tasks/ResolveTargetingPackAssets.cs#L133-L135\r\n\r\nThis causes bad behavior from conflict resolution:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.win32.registry\\4.6.0-preview7.19326.1\\runtimes\\win\\lib\\netstandard2.0\\Microsoft.Win32.Registry.dll' and 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll'. Choosing 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll' arbitrarily as both items are copy-local and have equal file and assembly versions.\r\n```\r\n\r\nHappening because the items now have the runtime pack package ID:\r\n```\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll\r\n    AssetType = runtime\r\n    CopyLocal = true\r\n    DestinationSubPath = Microsoft.Win32.Registry.dll\r\n    IsTrimmable = true\r\n    PackageName = Microsoft.NETCore.App.Runtime.win-x64\r\n    PackageVersion = 3.0.0-preview7-27826-01\r\n    RuntimeIdentifier = win-x64\r\n```\r\n\r\nBut the preferred packages refer to the old runtime nuget packages, due to that hardcoded list.\r\n\r\nWe cannot ship like this.  Please remove the hardcoding and compute this from the list of RIDs supported by the REFPack.  I couldn't find where this list of RIDs is stored... hopefully that isn't hardcoded too.\r\n\r\nI noticed https://github.com/dotnet/cli/issues/10581 mentions one way that this might be addressed, but I'm not convinced it handles this scenario.\r\n\r\nRepro project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeFrameworkVersion>3.0.0-preview7-27826-01</RuntimeFrameworkVersion>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <!-- SDK doesn't honor RuntimeFrameworkVersion for targeting pack-->\r\n    <KnownFrameworkReference Update=\"Microsoft.NETCore.App\" TargetingPackVersion=\"$(RuntimeFrameworkVersion)\" />\r\n\r\n    <!-- Temporary till SDK supports transitive framework references. -->\r\n    <KnownFrameworkReference Remove=\"Microsoft.AspNetCore.App\" />\r\n    <KnownFrameworkReference Remove=\"Microsoft.WindowsDesktop.App\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Win32.Registry\" Version=\"4.6.0-preview7.19326.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRestore and build it to observe the issue.\r\n","Url":"https://github.com/dotnet/sdk/issues/3362","RelatedDescription":"Open issue \"Conflict resolution broken for self-contained APP when packages have same version as shared framework\" (#3362)"},{"Id":"461567502","IsPullRequest":false,"CreatedAt":"2019-06-27T14:36:05","Actor":"vitek-karas","Number":"3361","RawContent":null,"Title":"Self-contained apps should include RID fallback graph in .deps.json","State":"open","Body":"With the introduction of `AssemblyDependencyResolver` in 3.0 we're making it relatively easy to dynamically load components with their entire dependency trees. Such components can be portable in the sense that they include RID specific assets (for example different asset for Windows and Linux).\r\n\r\nIn order to correctly resolve dependencies of such component, the `AssemblyDependencyResolver` must have a RID fallback graph to follow (so that when we're running on `win10-x64`, we know that we should also look for assets which are `win-x64` or even `win`). The component itself should not carry the RID fallback graph with it (it would need to have the graph of all the RIDs there are and it would need to be updated with every addition).\r\n\r\nJust like framework dependent apps which rely on the framework to provide the RID fallback graph, the component should rely on the host app to provide the RID fallback graph.\r\n\r\nSo if the host app is a framework dependent app, the RID fallback graph comes from the core framework `Microsoft.NETCore.App`. In this case everything works fine.\r\n\r\nIf the host app is a self-contained app, it in itself it doesn't need a RID fallback graph since it's been built/published for one specific RID and thus it only carries assets which are necessary for that RID. But if a portable component is about to be loaded into such app, the RID fallback graph is necessary.\r\n\r\nThe proposal is to modify the SDK to include the RID fallback graph in self-contained app's `.deps.json`. It should be the graph filtered by the RID the app is targeting (just like what we do for the shared framework).\r\n\r\nThe problem is also discussed in https://github.com/dotnet/core-setup/issues/6960","Url":"https://github.com/dotnet/sdk/issues/3361","RelatedDescription":"Open issue \"Self-contained apps should include RID fallback graph in .deps.json\" (#3361)"},{"Id":"461190450","IsPullRequest":true,"CreatedAt":"2019-06-27T03:45:22","Actor":"johnbeisner","Number":"3358","RawContent":null,"Title":"Update the stage0 SDK version","State":"closed","Body":"Update the stage0 SDK version","Url":"https://github.com/dotnet/sdk/pull/3358","RelatedDescription":"Closed or merged PR \"Update the stage0 SDK version\" (#3358)"},{"Id":"461189443","IsPullRequest":true,"CreatedAt":"2019-06-27T03:02:05","Actor":"wli3","Number":"3357","RawContent":null,"Title":"Remove experiment on collecting UseWPF and UseWinform","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3357","RelatedDescription":"Closed or merged PR \"Remove experiment on collecting UseWPF and UseWinform\" (#3357)"},{"Id":"460561752","IsPullRequest":true,"CreatedAt":"2019-06-26T17:39:54","Actor":"nguerrera","Number":"3353","RawContent":null,"Title":"Retarget from netcoreapp2.0 to netcoreapp2.1 for source-build","State":"closed","Body":"Fix #3317 \r\n","Url":"https://github.com/dotnet/sdk/pull/3353","RelatedDescription":"Closed or merged PR \"Retarget from netcoreapp2.0 to netcoreapp2.1 for source-build\" (#3353)"},{"Id":"460930778","IsPullRequest":true,"CreatedAt":"2019-06-26T13:50:24","Actor":"dotnet-maestro[bot]","Number":"3356","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 8:36 AM\r\n- **Commit**: 4b3d46cc75969c4e2de5786ec2b10a430b26dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19326.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3356","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3356)"},{"Id":"460663845","IsPullRequest":false,"CreatedAt":"2019-06-25T22:17:47","Actor":"heng-liu","Number":"3354","RawContent":null,"Title":"msbuild /t:build failed with \" error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\" , but dotnet build succeed.","State":"closed","Body":"When I install SDK 3.0.100-preview6-012264, the msbuild /t:build starts to fail for: \r\nerror NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized.\r\nBut the dotnet build is successful. \r\nWhen I uninstall SDK 3.0.100-preview6-012264 and used SDK 3.0.100-preview5-011568 instead, there is no error and build is successful. (also changed global.json file accordingly)\r\nI already updated the VS to latest preview3 and the msbuild version is 16.200.19.31001 in advance.\r\n\r\nSo here is the matrix:\r\n                              SDK 3.0.100-preview6-012264   SDK 3.0.100-preview5-011568\r\nmsbuild /t:build      failed                                            successful\r\ndotnet build            successful                                    successful\r\n\r\n**Steps to reproduce:**\r\n1. go to NuGet.Client repos and checkout branch dev-hengliu-addNetStandard2.1ForPackaging\r\nhttps://github.com/NuGet/NuGet.Client/tree/dev-hengliu-addNetStandard2.1ForPackaging\r\n2. install SDK 3.0.100-preview6-012264 and make sure msbuild(VS) version is the latest.\r\n3. go to the local repos contains the code from step1(open NuGet.Client folder), run following command in developer command prompt:\r\nmsbuild /t:build .\\test\\NuGet.Core.Tests\\NuGet.LibraryModel.Tests\\NuGet.LibraryModel.Tests.csproj\r\n\r\nNote: if you want to test preview5, you need to change the version in .\\test\\global.json first.\r\n\r\n**Expected behavior:**\r\nBuild successfully.\r\n**Actual behavior:**\r\nBuild failed for : error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized ","Url":"https://github.com/dotnet/sdk/issues/3354","RelatedDescription":"Closed issue \"msbuild /t:build failed with \" error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\" , but dotnet build succeed.\" (#3354)"},{"Id":"459399549","IsPullRequest":true,"CreatedAt":"2019-06-25T18:13:14","Actor":"dsplaisted","Number":"3348","RawContent":null,"Title":"Unify more build and publish logic","State":"closed","Body":"Implement some of the unification in #3311, but without changing the product behavior.\r\n\r\nDetermines which assets should be copied local for both build and publish in the `ResolvePackageAssets` task.","Url":"https://github.com/dotnet/sdk/pull/3348","RelatedDescription":"Closed or merged PR \"Unify more build and publish logic\" (#3348)"},{"Id":"459399758","IsPullRequest":true,"CreatedAt":"2019-06-25T03:02:28","Actor":"wli3","Number":"3349","RawContent":null,"Title":"Upload to PerfCommand","State":"closed","Body":"Instead of benchview. And changed the format of the result.\r\nUse a csproj and dotnet run in Helix to do convert and uploading instead of python scripts","Url":"https://github.com/dotnet/sdk/pull/3349","RelatedDescription":"Closed or merged PR \"Upload to PerfCommand\" (#3349)"},{"Id":"460148296","IsPullRequest":false,"CreatedAt":"2019-06-25T00:08:55","Actor":"cbiesinger","Number":"3352","RawContent":null,"Title":"Allow building without internet connection when only using builtin modules","State":"open","Body":"I am in a situation where I would like to build some C# source code on a build machine that can install .deb packages but does not otherwise allow internet connections. I am only using builtin modules.\r\n\r\nHowever, it seems that the dotnet SDK insists on downloading at least the linux-x64 runtime *even* when not compiling a standalone app.\r\n\r\nWould it be possible to change the SDK to make it possible to compile non-standalone apps without needing to download anything?","Url":"https://github.com/dotnet/sdk/issues/3352","RelatedDescription":"Open issue \"Allow building without internet connection when only using builtin modules\" (#3352)"},{"Id":"460131005","IsPullRequest":false,"CreatedAt":"2019-06-24T22:54:41","Actor":"wli3","Number":"3351","RawContent":null,"Title":"flaky test \"It_stores_when_targeting_netcoreapp3\"","State":"open","Body":"The test is checked in 5 month ago. But it started to become flaky recently\r\n\r\n![image](https://user-images.githubusercontent.com/6993335/60057121-3d59c700-9698-11e9-936e-9496acccd461.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3351","RelatedDescription":"Open issue \"flaky test \"It_stores_when_targeting_netcoreapp3\"\" (#3351)"},{"Id":"458918161","IsPullRequest":true,"CreatedAt":"2019-06-24T22:09:59","Actor":"fadimounir","Number":"3347","RawContent":null,"Title":"Silence R2R compiler warnings by default","State":"closed","Body":"They can be re-enabled by setting `PublishReadyToRunShowWarnings` to true.\r\nIf warnings are detected when the property is not set, a single message will be displayed to inform of the presence of warnings.","Url":"https://github.com/dotnet/sdk/pull/3347","RelatedDescription":"Closed or merged PR \"Silence R2R compiler warnings by default\" (#3347)"},{"Id":"460071309","IsPullRequest":true,"CreatedAt":"2019-06-24T20:46:01","Actor":"wli3","Number":"3350","RawContent":null,"Title":"WIP no merge debug CI","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3350","RelatedDescription":"Closed or merged PR \"WIP no merge debug CI\" (#3350)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1144288349022085120","CreatedAt":"2019-06-27T16:56:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":1,"RawContent":null},{"Id":"1143896700047646727","CreatedAt":"2019-06-26T15:00:00+00:00","UserScreenname":"dotnet","Text":"Run samples and tutorials using Try .NET global tool \nhttps://t.co/xxmNIK7SVd https://t.co/yhtPGPTKds","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":28,"RawContent":null},{"Id":"1143254803008458753","CreatedAt":"2019-06-24T20:29:20+00:00","UserScreenname":"dotnet","Text":"Care about AI &amp; Machine Learning? Check out this interview with @zeeshantweets, who is a developer on #MLNET. https://t.co/NuaAjE4Kod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":21,"RawContent":null},{"Id":"1143242317358178304","CreatedAt":"2019-06-24T19:39:43+00:00","UserScreenname":"dotnet","Text":"#dotnetconf Call for papers is open! Are you interested in speaking about .NET at our annual, free, virtual event?… https://t.co/q9IU7uUg4d","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":162,"FavoriteCount":102,"RawContent":null},{"Id":"1142109925474107392","CreatedAt":"2019-06-21T16:40:00+00:00","UserScreenname":"dotnet","Text":"We get an update on the Blazor programming model in .NET Core 3 and beyond from @danroth27\nin this episode of On .N… https://t.co/VqA8j8IEcC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":58,"FavoriteCount":17,"RawContent":null},{"Id":"1142092310009638912","CreatedAt":"2019-06-21T15:30:00+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core\n\nhttps://t.co/Gbt97muw4j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":22,"RawContent":null},{"Id":"1141752346860347394","CreatedAt":"2019-06-20T16:59:06+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1141115444708823040","CreatedAt":"2019-06-18T22:48:17+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":7,"RawContent":null},{"Id":"1141074032273453056","CreatedAt":"2019-06-18T20:03:44+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core https://t.co/modbwJLbCR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":318,"FavoriteCount":156,"RawContent":null}]}},"RunOn":"2019-06-30T05:30:30.5582767Z","RunDurationInMilliseconds":11269}