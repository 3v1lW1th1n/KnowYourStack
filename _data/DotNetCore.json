{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)","PublishedOn":"2018-05-24T01:49:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.7","PublishedOn":"2018-05-08T18:22:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We’re excited to share updates about changes to F# and F# tools which shipped with the Visual Studio 2017 version 15.7 release. Let’s dive in! Type Providers now support .NET Standard For those who...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/f-language-and-tools-update-for-visual-studio-2017-version-15-7/","RawContent":null},{"Title":"Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework","PublishedOn":"2018-05-08T00:41:28+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Today at //Build 2018, we are excited to announce the preview of ML.NET, a cross-platform, open source machine learning framework. ML.NET will allow .NET developers to develop their own models and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 RC 1","PublishedOn":"2018-05-07T18:00:05+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are excited to announce that the first release candidate of EF Core 2.1 is available, alongside .NET Core 2.1 RC 1 and ASP.NET Core 2.1 RC 1, for broad testing, and now also for production...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-entity-framework-core-2-1-rc-1/","RawContent":null},{"Title":".NET Core 3 and Support for Windows Desktop Applications","PublishedOn":"2018-05-07T15:40:04+00:00","CommentsCount":289,"FacebookCount":0,"Summary":"At Microsoft Build Live today, we are sharing a first look at our plans for .NET Core 3. The highlight of .NET Core 3 is support for Windows desktop applications, specifically Windows Forms, Windows...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"},{"Id":"7660843516","Type":"IssuesEvent","CreatedAt":"2018-05-11T12:12:46","Actor":"Longvimol","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/69","RelatedDescription":"Opened issue \"Dotnet / announcement \" (#69) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\n"},{"Id":"7644965785","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:03:40","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to ASP.NET Core 2.0.8.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to 2.0.8 to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_"},{"Id":"7619224203","Type":"IssuesEvent","CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Opened issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65) at dotnet/announcements","RelatedBody":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n"},{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7727734506","Type":"PullRequestEvent","CreatedAt":"2018-05-25T04:38:08","Actor":"github-john-doe","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18122","RelatedDescription":"Opened pull request \"Typo\" (#18122) at dotnet/coreclr","RelatedBody":""},{"Id":"7727229950","Type":"PullRequestEvent","CreatedAt":"2018-05-25T01:18:58","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18115","RelatedDescription":"Merged pull request \"Fix misplaced volatile\" (#18115) at dotnet/coreclr","RelatedBody":"Fixes #13015"},{"Id":"7727229945","Type":"IssuesEvent","CreatedAt":"2018-05-25T01:18:58","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13015","RelatedDescription":"Closed issue \"optimizing the memory set loop with size requirements the right way\" (#13015) at dotnet/coreclr","RelatedBody":"When you have this code:\r\n\r\n` for (size_t i = 0; i < nPtrs; i++)\r\n        *memPtr++ = 0;`\r\n\r\neven though you need memPtr to be cleared as pointers, the compiler can replace this with a memset which will set by bytes. So when you read this memory you can read a partially cleared pointer value which obviously will cause problems. We had to declare memPtr [to be volatile](https://github.com/dotnet/coreclr/issues/12207) in ZeroMemoryInGCHeap to get around this. This issue is for looking into bringing perf back. Since you could be clearing large amounts of memory with Array.Clear (which uses ZeroMemoryInGCHeap) [the perf degrade can be significant](https://github.com/dotnet/coreclr/issues/12207#issuecomment-317236008)."},{"Id":"7726930118","Type":"PullRequestEvent","CreatedAt":"2018-05-24T23:24:54","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18120","RelatedDescription":"Merged pull request \"Updating BuildDelayFreeUses to also consider contained HWIntrinsic nodes.\" (#18120) at dotnet/coreclr","RelatedBody":"This resolves https://github.com/dotnet/coreclr/issues/18119\r\n\r\nFYI. @CarolEidt, @fiigii, @eerhardt "},{"Id":"7726930110","Type":"IssuesEvent","CreatedAt":"2018-05-24T23:24:54","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18119","RelatedDescription":"Closed issue \"HWIntrinsic failures for the RO tests when AVX disabled\" (#18119) at dotnet/coreclr","RelatedBody":"Several of the `*_ro` HWIntrinsic tests are failing with:\r\n```\r\nMESSAGE:\r\n\\r\\nAssert failure(PID 3184 [0x00000c70], Thread: 6828 [0x1aac]): Assertion failed '(consume == 0) || (ComputeAvailableSrcCount(tree) == consume)' in 'JIT.HardwareIntrinsics.X86.SimpleBinaryOpTest__AddSingle:RunBasicScenario_LoadAligned():this' (IL size 100)\\r\\n\\r\\n File: d:\\\\j\\\\workspace\\\\x64_checked_w---c04c733a\\\\src\\\\jit\\\\lsrabuild.cpp Line: 1509\\r\\n Image: D:\\\\j\\\\workspace\\\\x64_checked_w---c04c733a\\\\bin\\\\tests\\\\Windows_NT.x64.Checked\\\\Tests\\\\Core_Root\\\\CoreRun.exe\\r\\n\\r\\n\\n\\nReturn code: 1\\nRaw output file: D:\\\\j\\\\workspace\\\\x64_checked_w---c04c733a\\\\bin\\\\tests\\\\Windows_NT.x64.Checked\\\\Reports\\\\JIT.HardwareIntrinsics\\\\X86\\\\Sse\\\\Sse_ro\\\\Sse_ro.output.txt\\nRaw output:\\nBEGIN EXECUTION\\r\\n \\\"D:\\\\j\\\\workspace\\\\x64_checked_w---c04c733a\\\\tests\\\\..\\\\bin\\\\tests\\\\Windows_NT.x64.Checked\\\\Tests\\\\Core_Root\\\\corerun.exe\\\" Sse_ro.exe \\r\\nRunning Add.Single test...\\r\\nExpected: 100\\r\\nActual: 123456789\\r\\nEND EXECUTION - FAILED\\r\\nFAILED\\r\\nTest Harness Exitcode is : 1\\r\\n\\nTo run the test:\\n> set CORE_ROOT=D:\\\\j\\\\workspace\\\\x64_checked_w---c04c733a\\\\bin\\\\tests\\\\Windows_NT.x64.Checked\\\\Tests\\\\Core_Root\\n> D:\\\\j\\\\workspace\\\\x64_checked_w---c04c733a\\\\bin\\\\tests\\\\Windows_NT.x64.Checked\\\\JIT\\\\HardwareIntrinsics\\\\X86\\\\Sse\\\\Sse_ro\\\\Sse_ro.cmd\\n\\r\\nExpected: True\\r\\nActual: False\r\n+++++++++++++++++++\r\nSTACK TRACE:\r\nat JIT_HardwareIntrinsics._X86_Sse_Sse_ro_Sse_ro_._X86_Sse_Sse_ro_Sse_ro_cmd() in D:\\j\\workspace\\x64_checked_w---c04c733a\\bin\\tests\\Windows_NT.x64.Checked\\TestWrappers\\JIT.HardwareIntrinsics\\JIT.HardwareIntrinsics.XUnitWrapper.cs:line 24187\r\n```\r\n\r\nEx: https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x64_checked_windows_nt_jitx86hwintrinsicnoavx_prtest/247/\r\n\r\nSee https://github.com/dotnet/coreclr/pull/18105 for more jobs\r\n"},{"Id":"7726879401","Type":"PullRequestEvent","CreatedAt":"2018-05-24T23:07:47","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18121","RelatedDescription":"Opened pull request \"delete unused variables from jit\" (#18121) at dotnet/coreclr","RelatedBody":"Delete unused variables after the `legacy_backend` death."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7727695209","Type":"PullRequestEvent","CreatedAt":"2018-05-25T04:21:43","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9347","RelatedDescription":"Merged pull request \"Insert updated SDK from 2.1.4xx branch\" (#9347) at dotnet/cli","RelatedBody":"Includes changes from https://github.com/dotnet/sdk/pull/2250"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7725722906","Type":"PullRequestEvent","CreatedAt":"2018-05-24T18:51:44","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/754","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02824-02 (master)\" (#754) at dotnet/standard","RelatedBody":""},{"Id":"7725600325","Type":"PullRequestEvent","CreatedAt":"2018-05-24T18:29:40","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/753","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02824-01 (master)\" (#753) at dotnet/standard","RelatedBody":""},{"Id":"7724780186","Type":"PullRequestEvent","CreatedAt":"2018-05-24T15:57:25","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/753","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02824-01 (master)\" (#753) at dotnet/standard","RelatedBody":""},{"Id":"7720571229","Type":"PullRequestEvent","CreatedAt":"2018-05-23T23:54:41","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/748","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02823-01 (master)\" (#748) at dotnet/standard","RelatedBody":""},{"Id":"7713238279","Type":"IssuesEvent","CreatedAt":"2018-05-22T20:23:23","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/737","RelatedDescription":"Closed issue \"Misc build failures in 'official/standard/master/' - '20180517.01'\" (#737) at dotnet/standard","RelatedBody":"@dotnet-mc-bot commented on [Thu May 17 2018](https://github.com/dotnet/core-eng/issues/3507)\n\nThere were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1696522\r\n  - **Agent:** DDVSOWINAGE021\r\n  - **Error log:** ##[error]Process completed with exit code 1....\r\n\r\n@jcagme, @markwilkie\r\n\n\n---\n\n@weshaggard commented on [Thu May 17 2018](https://github.com/dotnet/core-eng/issues/3507#issuecomment-389922476)\n\n@wtgodbe this looks like your issue. Apparently calling Tools/msbuild.cmd directly will not work because that doesn't initialize VS. You would need to make sure you go through run.cmd which does initialize VS. \n\n---\n\n@jcagme commented on [Thu May 17 2018](https://github.com/dotnet/core-eng/issues/3507#issuecomment-389925626)\n\nMoving this to standard repo\n\n"},{"Id":"7713136600","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:03:26","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/752","RelatedDescription":"Merged pull request \"Get access to build.common.targets in publish.msbuild in 2.0.0\" (#752) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the SignFiles target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7713135711","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:03:16","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/752","RelatedDescription":"Opened pull request \"Get access to build.common.targets in publish.msbuild in 2.0.0\" (#752) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the SignFiles target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7713134617","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:03:03","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/751","RelatedDescription":"Merged pull request \"Get access to build.common.targets in publish.msbuild in master\" (#751) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the `SignFiles` target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7713133002","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:02:45","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/751","RelatedDescription":"Opened pull request \"Get access to build.common.targets in publish.msbuild in master\" (#751) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the `SignFiles` target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7712974928","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:31:13","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/750","RelatedDescription":"Merged pull request \" Rename config.json task to avoid confusing run.cmd\" (#750) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7712974322","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:31:07","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/749","RelatedDescription":"Merged pull request \"Rename config.json task to avoid confusing run.cmd in master\" (#749) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7712973222","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:30:53","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/750","RelatedDescription":"Opened pull request \" Rename config.json task to avoid confusing run.cmd\" (#750) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7712971919","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:30:38","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/749","RelatedDescription":"Opened pull request \"Rename config.json task to avoid confusing run.cmd in master\" (#749) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707967463","Type":"PullRequestEvent","CreatedAt":"2018-05-22T02:00:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/748","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02822-01 (master)\" (#748) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7727860728","Type":"IssuesEvent","CreatedAt":"2018-05-25T05:29:59","Actor":"bgrainger","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29910","RelatedDescription":"Opened issue \"new X509Certificate2 fails on macOS for concatenated certificates\" (#29910) at dotnet/corefx","RelatedBody":"`new X509Certificate2(string)` and `new X509Certificate2(byte[])` fail under .NET Core 2.0 on macOS if there is more than one certificate in the file being loaded. The following exception is thrown:\r\n\r\n```\r\nUnhandled Exception: Interop+AppleCrypto+AppleCommonCryptoCryptographicException: Unknown format in import.\r\n   at Interop.AppleCrypto.X509ImportCertificate(Byte[] bytes, X509ContentType contentType, SafePasswordHandle importPassword, SafeKeychainHandle keychain, Boolean exportable, SafeSecIdentityHandle& identityHandle)\r\n   at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(String fileName, String password, X509KeyStorageFlags keyStorageFlags)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(String fileName)\r\n   at LoadCertificateFromBytes.Program.Main(String[] args) in /Users/bgrainger/Code/LoadCertificateFromBytes/Program.cs:line 11\r\n```\r\n\r\nThe same data is accepted without failure on Windows 10 and Ubuntu 14.04 (and just the first certificate in the file is loaded).\r\n\r\nA minimal repro is here: https://github.com/bgrainger/LoadCertificateFromBytes/blob/master/Program.cs\r\n\r\nThis issue arose when trying to load https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem (linked from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html). On Linux and Windows, the file is loaded without error, but only the first certificate in the file is loaded. On macOS, an exception is thrown.\r\n\r\nI'm not sure what the \"right\" behaviour should be. On the one hand, it's nice that macOS provides some feedback that most of the certificates in the file were ignored. On the other hand, changing Windows/Linux might be a major breaking change. Overall, it would just be nice to have cross-platform consistency."},{"Id":"7727083306","Type":"IssuesEvent","CreatedAt":"2018-05-25T00:20:02","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29909","RelatedDescription":"Opened issue \"Announcement: .NET Core Community online Hackathon on 6/2\" (#29909) at dotnet/corefx","RelatedBody":"We will have a hackathon for CoreFX, CoreCLR and CoreFxLab repos on Sat 6/2.\r\nCome and join us online: https://github.com/dotnet/corefx/wiki/Hackathon\r\n\r\nWe will appreciate our experienced contributors to join us and help us guide others to get started and submit their first PRs.\r\nYou can also contribute to your favorite repo (or to a new one 😄). Or just log in and hang out with others in our Hackathon gitter rooms:\r\n* CoreFX - [![Gitter](https://badges.gitter.im/dotnet/corefx-hackathon.svg)](https://gitter.im/dotnet/corefx-hackathon?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n* CoreCLR - [![Gitter](https://badges.gitter.im/dotnet/coreclr-hackathon.svg)](https://gitter.im/dotnet/coreclr-hackathon?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n* CoreFxLab - [![Gitter](https://badges.gitter.im/dotnet/corefxlab-hackathon.svg)](https://gitter.im/dotnet/corefxlab-hackathon?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7727808724","Type":"PullRequestEvent","CreatedAt":"2018-05-25T05:09:25","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/27070","RelatedDescription":"Merged pull request \"Properly reflect control flow for user-defined logical operators in control flow graph.\" (#27070) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7727622627","Type":"IssuesEvent","CreatedAt":"2018-05-25T03:51:37","Actor":"KyleGobel","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5855","RelatedDescription":"Opened issue \"Exception during deserialization\" (#5855) at dotnet/corert","RelatedBody":"Hey,\r\n\r\nJust wanted to give this a shot on a fairly simple CLI app.  When attempting to run I get this error:\r\n\r\nFollowed one of your examples and ran\r\n> `dotnet publish -r win-x64 -c Release`\r\n\r\nWhen attempting to run my app I get:\r\n\r\n```\r\n(Line: 1, Col: 1, Idx: 0) - (Line: 1, Col: 1, Idx: 0): Exception during deserialization\r\n```\r\nI'm not really sure where this message is coming from.  Any pointers debugging this?  There is a little json deserialization going in there, does this essentially mean one of my the dependencies i'm using is doing something unsupported?"},{"Id":"7727159970","Type":"PullRequestEvent","CreatedAt":"2018-05-25T00:50:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5853","RelatedDescription":"Merged pull request \"Use sysconf(_SC_NPROCESSORS_CONF) to get number of processors\" (#5853) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/pull/18053/"},{"Id":"7727159591","Type":"PullRequestEvent","CreatedAt":"2018-05-25T00:50:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5854","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5854) at dotnet/corert","RelatedBody":""},{"Id":"7726918915","Type":"PullRequestEvent","CreatedAt":"2018-05-24T23:20:58","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5854","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5854) at dotnet/corert","RelatedBody":""},{"Id":"7726918182","Type":"PullRequestEvent","CreatedAt":"2018-05-24T23:20:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5853","RelatedDescription":"Opened pull request \"Use sysconf(_SC_NPROCESSORS_CONF) to get number of processors\" (#5853) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/pull/18053/"},{"Id":"7726753837","Type":"PullRequestEvent","CreatedAt":"2018-05-24T22:29:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5851","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5851) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7726749796","Type":"PullRequestEvent","CreatedAt":"2018-05-24T22:28:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5847","RelatedDescription":"Closed pull request \"[PR for view only] Bring CoreRT and CoreCLR  CoreLibs into sync for SerializationInfo\" (#5847) at dotnet/corert","RelatedBody":"I'm creating this PR so it's easier for reviewers of PR https://github.com/dotnet/coreclr/pull/18102 to see how the SerializationInfo file changes in corert.\r\n\r\nAfter coreclr PR above gets merged I will remove this file from src folder."},{"Id":"7726748428","Type":"PullRequestEvent","CreatedAt":"2018-05-24T22:27:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5852","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5852) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7726720315","Type":"PullRequestEvent","CreatedAt":"2018-05-24T22:19:56","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5852","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5852) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7726627448","Type":"PullRequestEvent","CreatedAt":"2018-05-24T21:56:12","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5851","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5851) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7726135042","Type":"IssuesEvent","CreatedAt":"2018-05-24T20:14:19","Actor":"iarischenko","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5850","RelatedDescription":"Opened issue \"\"pow3\" received signal SIGSEGV , Segmentation fault.\" (#5850) at dotnet/corert","RelatedBody":"I've compiled the pow3 test (.tests_downloaded/CoreCLR/Regressions/common/pow3) for ARM and x86_64. The test works fine at x86_64 and fails at ARM with SIGSEGV signal:\r\n\r\n(gdb) bt\r\n#0  EEType::get_IsValueType (this=0x1080000) at /dotnet/corert/src/Native/Runtime/inc/eetype.h:412\r\n#1  0x00024984 in RhpBox (pObj=0x54aed8, pData=0xbefff1b0) at /dotnet/corert/src/Native/Runtime/gcrhenv.cpp:768\r\n#2  0x00255d50 in S_P_CoreLib_System_Runtime_RuntimeExports__RhBox (pEEType=..., data=@0xbefff1b0: 86 'V') at /dotnet/corert/src/Runtime.Base/src/System/Runtime/RuntimeExports.cs:110\r\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\r\n\r\nThe  InternalCalls.RhpNewFast(ptrEEType) at RuntimeExports.cs:108 returns \r\n(gdb) p result\r\n$1 = (Object &) @0x54aed8: {m_pEEType = 0x1080000}\r\nand \r\nm_pEEType is used as pointer in S_P_CoreLib_System_Runtime_RuntimeExports__RhBox in gcrhenv.cpp:768\r\nand leads to SIGSEGV.\r\n\r\nCould you help me to debug the issue?"},{"Id":"7726127161","Type":"PullRequestEvent","CreatedAt":"2018-05-24T20:12:42","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5849","RelatedDescription":"Opened pull request \"Change Alpine RID to linux-musl\" (#5849) at dotnet/corert","RelatedBody":"To match new RID set in CoreCLR and CoreFX scripts."},{"Id":"7726068258","Type":"PullRequestEvent","CreatedAt":"2018-05-24T20:00:58","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5836","RelatedDescription":"Merged pull request \"Usability improvements - Testing Documentation and scripts\" (#5836) at dotnet/corert","RelatedBody":"Update CoreRT's testing documentation to reflect current features and allow repro-ing of failed CoreFX tests"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"999498830528696320","CreatedAt":"2018-05-24T03:54:25+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803) https://t.co/U6TCTrPkfb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":9,"RawContent":null},{"Id":"998698514065510400","CreatedAt":"2018-05-21T22:54:15+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update) https://t.co/a0E1oZkvk2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2018-05-25T05:30:25.1194119Z","RunDurationInMilliseconds":8897}